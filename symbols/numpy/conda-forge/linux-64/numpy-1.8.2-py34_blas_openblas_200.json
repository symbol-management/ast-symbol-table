{
 "*": {
  "data": {
   "imports": [
    "numpy.testing"
   ]
  },
  "type": "star-import"
 },
 "numpy": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      139,
      143
     ]
    },
    "NameError": {
     "line number": [
      128
     ]
    },
    "PackageLoader.__call__.__doc__": {
     "line number": [
      156
     ]
    },
    "Tester": {
     "line number": [
      159,
      160
     ]
    },
    "builtins.str": {
     "line number": [
      181
     ]
    },
    "numpy.__NUMPY_SETUP__": {
     "line number": [
      132
     ]
    },
    "numpy.__all__": {
     "line number": [
      187,
      189,
      190,
      191,
      192
     ]
    },
    "numpy.msg": {
     "line number": [
      143
     ]
    },
    "numpy.pkgload": {
     "line number": [
      156
     ]
    },
    "numpy.sys": {
     "line number": [
      134,
      135,
      179
     ]
    },
    "numpy.warnings": {
     "line number": [
      196,
      197
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ModuleDeprecationWarning": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.__NUMPY_SETUP__": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "numpy.__all__": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "numpy.__config__": {
  "data": {},
  "type": "module"
 },
 "numpy.__config__.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.__config__.blas_mkl_info": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.__config__.blas_opt_info": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.__config__.get_info": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "globals": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.__config__.lapack_opt_info": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.__config__.openblas_info": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.__config__.show": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "globals": {
     "line number": [
      15
     ]
    },
    "len": {
     "line number": [
      22
     ]
    },
    "print": {
     "line number": [
      17,
      19,
      24
     ]
    },
    "str": {
     "line number": [
      21
     ]
    },
    "type": {
     "line number": [
      16,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.__git_revision__": {
  "data": {
   "shadows": "git_revision"
  },
  "type": "import"
 },
 "numpy.__version__": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "numpy._import_tools": {
  "data": {
   "symbols_in_volume": {
    "int": {
     "line number": [
      347
     ]
    },
    "numpy._import_tools.PackageLoaderDebug": {
     "line number": [
      348
     ]
    },
    "numpy._import_tools.os": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy._import_tools.PackageLoader": {
  "data": {
   "lineno": 348
  },
  "type": "constant"
 },
 "numpy._import_tools.PackageLoader.__call__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "eval": {
     "line number": [
      206,
      210
     ]
    },
    "getattr": {
     "line number": [
      181,
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "eval": {
     "line number": [
      18,
      19,
      25
     ]
    },
    "exec": {
     "line number": [
      24
     ]
    },
    "isinstance": {
     "line number": [
      20
     ]
    },
    "numpy._import_tools.sys": {
     "line number": [
      17
     ]
    },
    "str": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._execcmd": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      246
     ]
    },
    "exec": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._format_titles": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "len": {
     "line number": [
      287,
      292,
      295,
      298,
      298
     ]
    },
    "max": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._get_doc_title": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      276,
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._get_info_files": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "glob.glob": {
     "line number": [
      35,
      36
     ]
    },
    "len": {
     "line number": [
      41
     ]
    },
    "numpy._import_tools.os": {
     "line number": [
      35,
      36,
      41,
      42,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._get_sorted_names": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._init_info_modules": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      92
     ]
    },
    "ImportError": {
     "line number": [
      73
     ]
    },
    "exec": {
     "line number": [
      71
     ]
    },
    "getattr": {
     "line number": [
      96,
      99
     ]
    },
    "numpy._import_tools.imp": {
     "line number": [
      88
     ]
    },
    "numpy._import_tools.os": {
     "line number": [
      63
     ]
    },
    "open": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._obj2repr": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      255,
      256
     ]
    },
    "repr": {
     "line number": [
      258,
      260,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader.error": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "numpy._import_tools.sys": {
     "line number": [
      271
     ]
    },
    "print": {
     "line number": [
      271
     ]
    },
    "str": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader.get_pkgdocs": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      316
     ]
    },
    "numpy._import_tools.sys": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader.log": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "numpy._import_tools.sys": {
     "line number": [
      265
     ]
    },
    "print": {
     "line number": [
      265
     ]
    },
    "str": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader.warn": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "numpy._import_tools.sys": {
     "line number": [
      268
     ]
    },
    "print": {
     "line number": [
      268
     ]
    },
    "str": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoaderDebug": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "numpy._import_tools.PackageLoader": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy._import_tools.PackageLoaderDebug._execcmd": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "exec": {
     "line number": [
      342
     ]
    },
    "numpy._import_tools.sys": {
     "line number": [
      341,
      344
     ]
    },
    "print": {
     "line number": [
      340,
      343
     ]
    },
    "repr": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy._import_tools.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy._import_tools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy._import_tools.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy._import_tools.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "numpy._import_tools.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "numpy._import_tools.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy._import_tools.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy._import_tools.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy._mat": {
  "data": {
   "shadows": "matrixlib"
  },
  "type": "import"
 },
 "numpy._sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.add_newdocs": {
  "data": {
   "symbols_in_volume": {
    "numpy.lib.add_newdoc": {
     "line number": [
      23,
      68,
      83,
      102,
      121,
      127,
      152,
      381,
      400,
      408,
      418,
      433,
      442,
      451,
      467,
      510,
      528,
      550,
      564,
      578,
      592,
      606,
      643,
      735,
      774,
      833,
      847,
      900,
      928,
      936,
      988,
      1022,
      1097,
      1135,
      1209,
      1283,
      1286,
      1289,
      1350,
      1357,
      1365,
      1373,
      1417,
      1489,
      1565,
      1665,
      1713,
      1761,
      1830,
      1848,
      1882,
      1956,
      2146,
      2167,
      2183,
      2253,
      2382,
      2386,
      2390,
      2394,
      2398,
      2405,
      2426,
      2529,
      2533,
      2562,
      2577,
      2593,
      2664,
      2706,
      2726,
      2742,
      2761,
      2791,
      2809,
      2871,
      2901,
      2911,
      2917,
      2923,
      2939,
      2947,
      2955,
      2973,
      2988,
      3003,
      3018,
      3033,
      3048,
      3065,
      3127,
      3167,
      3182,
      3197,
      3212,
      3227,
      3242,
      3285,
      3300,
      3315,
      3330,
      3359,
      3373,
      3387,
      3412,
      3446,
      3488,
      3546,
      3592,
      3623,
      3638,
      3653,
      3668,
      3694,
      3736,
      3751,
      3766,
      3781,
      3795,
      3831,
      3879,
      3896,
      3911,
      3926,
      4015,
      4030,
      4045,
      4096,
      4168,
      4222,
      4275,
      4290,
      4305,
      4320,
      4335,
      4350,
      4385,
      4421,
      4457,
      4472,
      4526,
      4541,
      4647,
      4687,
      4751,
      4817,
      4889,
      4962,
      5019,
      5062,
      5072,
      5098,
      5142,
      5199,
      5267,
      5286,
      5310,
      5328,
      5351,
      5377,
      5421,
      5506,
      5580,
      5681,
      5743,
      5811,
      5901,
      5909,
      5952,
      5955,
      5964,
      5991,
      6003,
      6016,
      6045,
      6052,
      6060,
      6069,
      6075,
      6083,
      6098,
      6106,
      6113,
      6116,
      6130,
      6139,
      6212,
      6276,
      6279,
      6282,
      6333,
      6423,
      6493,
      6536,
      6582,
      6596,
      6610,
      6624,
      6627,
      6630,
      6633,
      6636,
      6639,
      6642,
      6645,
      6648,
      6651,
      6654,
      6657,
      6662,
      6676,
      6690,
      6704,
      6718,
      6732,
      6746,
      6760,
      6774,
      6788,
      6802,
      6816,
      6830,
      6844,
      6858,
      6872,
      6886,
      6900,
      6914,
      6928,
      6942,
      6956,
      6970,
      6984,
      6998,
      7012,
      7045,
      7059,
      7073,
      7087,
      7101,
      7115,
      7129,
      7143,
      7157,
      7171,
      7185,
      7199,
      7213,
      7227,
      7241,
      7255,
      7269,
      7283,
      7297,
      7311,
      7325,
      7339,
      7353,
      7367,
      7381,
      7402,
      7405,
      7411,
      7418,
      7424,
      7430,
      7436,
      7440,
      7447,
      7450,
      7453,
      7456,
      7459
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.add_newdocs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.add_newdocs.add_newdoc": {
  "data": {
   "shadows": "numpy.lib.add_newdoc"
  },
  "type": "import"
 },
 "numpy.add_newdocs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.add_newdocs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.bench": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "numpy.bool": {
  "data": {
   "shadows": "__builtin__.bool"
  },
  "type": "import"
 },
 "numpy.compat": {
  "data": {
   "symbols_in_volume": {
    "numpy.compat.__all__": {
     "line number": [
      19,
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.compat.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.compat._inspect": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      209
     ]
    },
    "numpy.compat._inspect.foo": {
     "line number": [
      214,
      215,
      217,
      218,
      220,
      221
     ]
    },
    "numpy.compat._inspect.formatargspec": {
     "line number": [
      221
     ]
    },
    "numpy.compat._inspect.getargs": {
     "line number": [
      215
     ]
    },
    "numpy.compat._inspect.getargspec": {
     "line number": [
      218,
      221
     ]
    },
    "numpy.compat._inspect.inspect": {
     "line number": [
      214,
      217,
      220,
      220
     ]
    },
    "print": {
     "line number": [
      214,
      215,
      217,
      218,
      220,
      221
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.compat._inspect.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.compat._inspect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.compat._inspect.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.compat._inspect.foo": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "numpy.compat._inspect.formatargspec": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "formatvalue": {
     "line number": [
      177
     ]
    },
    "formatvarargs": {
     "line number": [
      180
     ]
    },
    "formatvarkw": {
     "line number": [
      182
     ]
    },
    "join": {
     "line number": [
      175
     ]
    },
    "len": {
     "line number": [
      173,
      173,
      174
     ]
    },
    "numpy.compat._inspect.joinseq": {
     "line number": [
      164
     ]
    },
    "numpy.compat._inspect.strseq": {
     "line number": [
      175
     ]
    },
    "range": {
     "line number": [
      174
     ]
    },
    "repr": {
     "line number": [
      163
     ]
    },
    "str": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.formatargvalues": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "convert": {
     "line number": [
      202
     ]
    },
    "formatvalue": {
     "line number": [
      204,
      206
     ]
    },
    "formatvarargs": {
     "line number": [
      204
     ]
    },
    "formatvarkw": {
     "line number": [
      206
     ]
    },
    "join": {
     "line number": [
      202
     ]
    },
    "len": {
     "line number": [
      201
     ]
    },
    "locals": {
     "line number": [
      204,
      206
     ]
    },
    "numpy.compat._inspect.joinseq": {
     "line number": [
      190
     ]
    },
    "numpy.compat._inspect.strseq": {
     "line number": [
      202
     ]
    },
    "range": {
     "line number": [
      201
     ]
    },
    "repr": {
     "line number": [
      189
     ]
    },
    "str": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.formatargvalues.convert": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "formatarg": {
     "line number": [
      199
     ]
    },
    "formatvalue": {
     "line number": [
      198,
      199
     ]
    },
    "locals": {
     "line number": [
      197,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.getargs": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      69
     ]
    },
    "len": {
     "line number": [
      81
     ]
    },
    "list": {
     "line number": [
      74
     ]
    },
    "numpy.compat._inspect.iscode": {
     "line number": [
      68
     ]
    },
    "ord": {
     "line number": [
      82,
      86,
      86
     ]
    },
    "range": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.getargspec": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      132
     ]
    },
    "numpy.compat._inspect.getargs": {
     "line number": [
      133
     ]
    },
    "numpy.compat._inspect.isfunction": {
     "line number": [
      131
     ]
    },
    "numpy.compat._inspect.ismethod": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.getargvalues": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.compat._inspect.getargs": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "numpy.compat._inspect.iscode": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      55
     ]
    },
    "numpy.compat._inspect.types": {
     "line number": [
      55
     ]
    },
    "object": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.isfunction": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      37
     ]
    },
    "numpy.compat._inspect.types": {
     "line number": [
      37
     ]
    },
    "object": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.ismethod": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      24
     ]
    },
    "numpy.compat._inspect.types": {
     "line number": [
      24
     ]
    },
    "object": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.joinseq": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "len": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.compat._inspect.strseq": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "convert": {
     "line number": [
      157
     ]
    },
    "join": {
     "line number": [
      155,
      155
     ]
    },
    "list": {
     "line number": [
      154
     ]
    },
    "numpy.compat._inspect.joinseq": {
     "line number": [
      152
     ]
    },
    "object": {
     "line number": [
      154,
      155,
      157
     ]
    },
    "tuple": {
     "line number": [
      154
     ]
    },
    "type": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat._inspect.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.compat.py3k": {
  "data": {
   "symbols_in_volume": {
    "int": {
     "line number": [
      17,
      18,
      55
     ]
    },
    "numpy.compat.py3k.long": {
     "line number": [
      55
     ]
    },
    "numpy.compat.py3k.sys": {
     "line number": [
      14
     ]
    },
    "str": {
     "line number": [
      19,
      20,
      51,
      56,
      57
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.compat.py3k.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.compat.py3k.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.compat.py3k.asbytes": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "numpy.compat.py3k.asbytes_nested": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      80
     ]
    },
    "isinstance": {
     "line number": [
      80
     ]
    },
    "numpy.compat.py3k.asbytes": {
     "line number": [
      83
     ]
    },
    "numpy.compat.py3k.bytes": {
     "line number": [
      80
     ]
    },
    "numpy.compat.py3k.unicode": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat.py3k.asstr": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "numpy.compat.py3k.asunicode": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      65
     ]
    },
    "numpy.compat.py3k.unicode": {
     "line number": [
      65
     ]
    },
    "str": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat.py3k.asunicode_nested": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      86
     ]
    },
    "isinstance": {
     "line number": [
      86
     ]
    },
    "numpy.compat.py3k.asunicode": {
     "line number": [
      89
     ]
    },
    "numpy.compat.py3k.bytes": {
     "line number": [
      86
     ]
    },
    "numpy.compat.py3k.unicode": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat.py3k.basestring": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "numpy.compat.py3k.bytes": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "numpy.compat.py3k.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.compat.py3k.getexception": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.compat.py3k.sys": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat.py3k.integer_types": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.compat.py3k.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "numpy.compat.py3k.isfileobj": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat.py3k.long": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "numpy.compat.py3k.open_latin1": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "open": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat.py3k.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.compat.py3k.sixu": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "numpy.compat.py3k.unicode": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat.py3k.strchar": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "numpy.compat.py3k.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.compat.py3k.unicode": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.compat.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      10
     ]
    },
    "numpy.compat.setup.configuration": {
     "line number": [
      12
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.compat.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.compat.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.compat.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.compat.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.compat.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.complex": {
  "data": {
   "shadows": "__builtin__.complex"
  },
  "type": "import"
 },
 "numpy.core": {
  "data": {
   "symbols_in_volume": {
    "copy_reg": {
     "line number": [
      72
     ]
    },
    "copy_reg.pickle": {
     "line number": [
      70
     ]
    },
    "numpy.core.__all__": {
     "line number": [
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43
     ]
    },
    "numpy.core._ufunc_reconstruct": {
     "line number": [
      70
     ]
    },
    "numpy.core._ufunc_reduce": {
     "line number": [
      70,
      74
     ]
    },
    "numpy.core.sys": {
     "line number": [
      65,
      73
     ]
    },
    "numpy.testing.Tester": {
     "line number": [
      47,
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.core.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.core.__version__": {
  "data": {
   "shadows": "numpy.version.version"
  },
  "type": "import"
 },
 "numpy.core._methods": {
  "data": {},
  "type": "module"
 },
 "numpy.core._methods._all": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.core.umath.logical_and.reduce": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._methods._amax": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.core.umath.maximum.reduce": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._methods._amin": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.core.umath.minimum.reduce": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._methods._any": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.core.umath.logical_or.reduce": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._methods._count_reduce_items": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      42
     ]
    },
    "range": {
     "line number": [
      41
     ]
    },
    "tuple": {
     "line number": [
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._methods._mean": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      55
     ]
    },
    "hasattr": {
     "line number": [
      66
     ]
    },
    "isinstance": {
     "line number": [
      63
     ]
    },
    "issubclass": {
     "line number": [
      59
     ]
    },
    "numpy.core._methods._count_reduce_items": {
     "line number": [
      52
     ]
    },
    "numpy.core._methods.warnings": {
     "line number": [
      55
     ]
    },
    "numpy.core.multiarray.dtype": {
     "line number": [
      60
     ]
    },
    "numpy.core.multiarray.ndarray": {
     "line number": [
      63
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      50
     ]
    },
    "numpy.core.numerictypes.bool_": {
     "line number": [
      59
     ]
    },
    "numpy.core.numerictypes.integer": {
     "line number": [
      59
     ]
    },
    "numpy.core.umath.add.reduce": {
     "line number": [
      62
     ]
    },
    "numpy.core.umath.true_divide": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._methods._prod": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.core.umath.multiply.reduce": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._methods._std": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      125
     ]
    },
    "isinstance": {
     "line number": [
      123
     ]
    },
    "numpy.core._methods._var": {
     "line number": [
      120
     ]
    },
    "numpy.core.multiarray.ndarray": {
     "line number": [
      123
     ]
    },
    "numpy.core.umath.sqrt": {
     "line number": [
      124,
      126,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._methods._sum": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "numpy.core.umath.add.reduce": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._methods._var": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      79
     ]
    },
    "hasattr": {
     "line number": [
      112
     ]
    },
    "isinstance": {
     "line number": [
      89,
      109
     ]
    },
    "issubclass": {
     "line number": [
      82,
      99
     ]
    },
    "max": {
     "line number": [
      106
     ]
    },
    "numpy.core._methods._count_reduce_items": {
     "line number": [
      76
     ]
    },
    "numpy.core._methods.warnings": {
     "line number": [
      79
     ]
    },
    "numpy.core.multiarray.dtype": {
     "line number": [
      83
     ]
    },
    "numpy.core.multiarray.ndarray": {
     "line number": [
      89,
      109
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      74,
      98
     ]
    },
    "numpy.core.numerictypes.bool_": {
     "line number": [
      82
     ]
    },
    "numpy.core.numerictypes.complexfloating": {
     "line number": [
      99
     ]
    },
    "numpy.core.numerictypes.integer": {
     "line number": [
      82
     ]
    },
    "numpy.core.umath.add.reduce": {
     "line number": [
      88,
      103
     ]
    },
    "numpy.core.umath.conjugate": {
     "line number": [
      100
     ]
    },
    "numpy.core.umath.multiply": {
     "line number": [
      100,
      102
     ]
    },
    "numpy.core.umath.true_divide": {
     "line number": [
      90,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._methods.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core._methods.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.core._methods.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core._methods.mu": {
  "data": {
   "shadows": "numpy.core.multiarray"
  },
  "type": "import"
 },
 "numpy.core._methods.nt": {
  "data": {
   "shadows": "numpy.core.numerictypes"
  },
  "type": "import"
 },
 "numpy.core._methods.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core._methods.um": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.core._methods.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core._ufunc_reconstruct": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      55
     ]
    },
    "getattr": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core._ufunc_reduce": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "numpy.core._ufunc_reconstruct": {
     "line number": [
      61
     ]
    },
    "pickle.whichmodule": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.abs": {
  "data": {
   "shadows": "absolute"
  },
  "type": "import"
 },
 "numpy.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.arrayprint": {
  "data": {
   "symbols_in_volume": {
    "numpy.core.arrayprint.sys": {
     "line number": [
      25,
      26,
      27,
      29,
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.arrayprint.ComplexFormat": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "object": {
     "line number": [
      699
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.arrayprint.ComplexFormat.__call__": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": {
    "len": {
     "line number": [
      710,
      710
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.ComplexFormat.__init__": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": {
    "numpy.core.arrayprint.FloatFormat": {
     "line number": [
      701,
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.DatetimeFormat": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": {
    "object": {
     "line number": [
      715
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.arrayprint.DatetimeFormat.__call__": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "datetime_as_string": {
     "line number": [
      738
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.DatetimeFormat.__init__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": {
    "datetime_data": {
     "line number": [
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.FloatFormat": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "object": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.arrayprint.FloatFormat.__call__": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": {
    "isinf": {
     "line number": [
      607
     ]
    },
    "isnan": {
     "line number": [
      602
     ]
    },
    "len": {
     "line number": [
      628,
      628
     ]
    },
    "numpy.core.arrayprint._inf_str": {
     "line number": [
      610,
      612,
      614
     ]
    },
    "numpy.core.arrayprint._nan_str": {
     "line number": [
      604,
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.FloatFormat.__init__": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      542
     ]
    },
    "TypeError": {
     "line number": [
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.FloatFormat.fillFormat": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "absolute": {
     "line number": [
      553
     ]
    },
    "format": {
     "line number": [
      572,
      574,
      575,
      575,
      577,
      579,
      590,
      592,
      593,
      593,
      596
     ]
    },
    "int": {
     "line number": [
      584
     ]
    },
    "isinf": {
     "line number": [
      551
     ]
    },
    "isnan": {
     "line number": [
      551
     ]
    },
    "len": {
     "line number": [
      554,
      578,
      584,
      587,
      588
     ]
    },
    "max": {
     "line number": [
      579,
      586
     ]
    },
    "min": {
     "line number": [
      583
     ]
    },
    "not_equal": {
     "line number": [
      552
     ]
    },
    "numpy.core.arrayprint._digits": {
     "line number": [
      579
     ]
    },
    "numpy.core.arrayprint._inf_str": {
     "line number": [
      588
     ]
    },
    "numpy.core.arrayprint._nan_str": {
     "line number": [
      587
     ]
    },
    "str": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.IntegerFormat": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": {
    "object": {
     "line number": [
      638
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.arrayprint.IntegerFormat.__call__": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "numpy.core.arrayprint._MAXINT": {
     "line number": [
      653
     ]
    },
    "numpy.core.arrayprint._MININT": {
     "line number": [
      653
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.IntegerFormat.__init__": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      644
     ]
    },
    "TypeError": {
     "line number": [
      644
     ]
    },
    "ValueError": {
     "line number": [
      648
     ]
    },
    "len": {
     "line number": [
      641,
      642
     ]
    },
    "max": {
     "line number": [
      641
     ]
    },
    "str": {
     "line number": [
      641,
      642,
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.LongComplexFormat": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": {
    "object": {
     "line number": [
      688
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.arrayprint.LongComplexFormat.__call__": {
  "data": {
   "lineno": 693
  },
  "type": "function"
 },
 "numpy.core.arrayprint.LongComplexFormat.__init__": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": {
    "numpy.core.arrayprint.LongFloatFormat": {
     "line number": [
      690,
      691
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.LongFloatFormat": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": {
    "object": {
     "line number": [
      658
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.arrayprint.LongFloatFormat.__call__": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "format_longfloat": {
     "line number": [
      681,
      683,
      685
     ]
    },
    "isinf": {
     "line number": [
      671
     ]
    },
    "isnan": {
     "line number": [
      666
     ]
    },
    "numpy.core.arrayprint._inf_str": {
     "line number": [
      674,
      676,
      678
     ]
    },
    "numpy.core.arrayprint._nan_str": {
     "line number": [
      668,
      670
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.LongFloatFormat.__init__": {
  "data": {
   "lineno": 661
  },
  "type": "function"
 },
 "numpy.core.arrayprint.TimedeltaFormat": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": {
    "object": {
     "line number": [
      743
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.arrayprint.TimedeltaFormat.__call__": {
  "data": {
   "lineno": 751
  },
  "type": "function"
 },
 "numpy.core.arrayprint.TimedeltaFormat.__init__": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "len": {
     "line number": [
      747,
      748
     ]
    },
    "max": {
     "line number": [
      747
     ]
    },
    "str": {
     "line number": [
      747,
      748,
      749
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint._MAXINT": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._MININT": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.core.arrayprint.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.core.arrayprint.__docformat__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._array2string": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      294
     ]
    },
    "DeprecationWarning": {
     "line number": [
      293
     ]
    },
    "issubclass": {
     "line number": [
      297,
      299,
      300,
      304,
      305,
      309,
      310,
      314,
      316
     ]
    },
    "len": {
     "line number": [
      324,
      326
     ]
    },
    "numpy.core.arrayprint.ComplexFormat": {
     "line number": [
      259
     ]
    },
    "numpy.core.arrayprint.DatetimeFormat": {
     "line number": [
      262
     ]
    },
    "numpy.core.arrayprint.FloatFormat": {
     "line number": [
      257
     ]
    },
    "numpy.core.arrayprint.IntegerFormat": {
     "line number": [
      256
     ]
    },
    "numpy.core.arrayprint.LongComplexFormat": {
     "line number": [
      261
     ]
    },
    "numpy.core.arrayprint.LongFloatFormat": {
     "line number": [
      258
     ]
    },
    "numpy.core.arrayprint.TimedeltaFormat": {
     "line number": [
      263
     ]
    },
    "numpy.core.arrayprint._boolFormatter": {
     "line number": [
      255
     ]
    },
    "numpy.core.arrayprint._float_output_precision": {
     "line number": [
      240
     ]
    },
    "numpy.core.arrayprint._float_output_suppress_small": {
     "line number": [
      243
     ]
    },
    "numpy.core.arrayprint._formatArray": {
     "line number": [
      326
     ]
    },
    "numpy.core.arrayprint._formatter": {
     "line number": [
      246
     ]
    },
    "numpy.core.arrayprint._leading_trailing": {
     "line number": [
      250
     ]
    },
    "numpy.core.arrayprint._line_width": {
     "line number": [
      237
     ]
    },
    "numpy.core.arrayprint._summaryEdgeItems": {
     "line number": [
      328
     ]
    },
    "numpy.core.arrayprint._summaryThreshold": {
     "line number": [
      248
     ]
    },
    "numpy.core.arrayprint.repr_format": {
     "line number": [
      264
     ]
    },
    "numpy.core.arrayprint.warnings": {
     "line number": [
      293
     ]
    },
    "ravel": {
     "line number": [
      253
     ]
    },
    "str": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint._boolFormatter": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "numpy.core.arrayprint._convert_arrays": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      335,
      337
     ]
    },
    "tuple": {
     "line number": [
      337,
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint._digits": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "format": {
     "line number": [
      633
     ]
    },
    "len": {
     "line number": [
      635,
      635
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint._extendLine": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "len": {
     "line number": [
      458,
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint._float_output_precision": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._float_output_suppress_small": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._formatArray": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "format_function": {
     "line number": [
      490,
      497,
      500,
      510,
      521,
      527
     ]
    },
    "isinstance": {
     "line number": [
      476
     ]
    },
    "len": {
     "line number": [
      480,
      484,
      503
     ]
    },
    "max": {
     "line number": [
      513,
      524
     ]
    },
    "numpy.core.arrayprint._convert_arrays": {
     "line number": [
      477
     ]
    },
    "numpy.core.arrayprint._extendLine": {
     "line number": [
      491,
      494,
      498,
      501
     ]
    },
    "range": {
     "line number": [
      489,
      496,
      507,
      518
     ]
    },
    "str": {
     "line number": [
      478
     ]
    },
    "tuple": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint._formatter": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._inf_str": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._leading_trailing": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "len": {
     "line number": [
      207,
      213,
      215,
      217,
      219
     ]
    },
    "min": {
     "line number": [
      215,
      217
     ]
    },
    "numpy.core.arrayprint._summaryEdgeItems": {
     "line number": [
      207,
      208,
      209,
      213,
      215,
      217
     ]
    },
    "range": {
     "line number": [
      214,
      216,
      219
     ]
    },
    "tuple": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint._line_width": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._nan_str": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._nc": {
  "data": {
   "shadows": "numeric"
  },
  "type": "import"
 },
 "numpy.core.arrayprint._nt": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.arrayprint._summaryEdgeItems": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._summaryThreshold": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.core.arrayprint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.array2string": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      445
     ]
    },
    "DeprecationWarning": {
     "line number": [
      444
     ]
    },
    "functools.reduce": {
     "line number": [
      449
     ]
    },
    "isinstance": {
     "line number": [
      446
     ]
    },
    "numpy.core.arrayprint._array2string": {
     "line number": [
      453
     ]
    },
    "numpy.core.arrayprint._convert_arrays": {
     "line number": [
      447
     ]
    },
    "numpy.core.arrayprint.product": {
     "line number": [
      449
     ]
    },
    "numpy.core.arrayprint.warnings": {
     "line number": [
      444
     ]
    },
    "repr": {
     "line number": [
      345
     ]
    },
    "style": {
     "line number": [
      448
     ]
    },
    "tuple": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.get_printoptions": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      194
     ]
    },
    "numpy.core.arrayprint._float_output_precision": {
     "line number": [
      194
     ]
    },
    "numpy.core.arrayprint._float_output_suppress_small": {
     "line number": [
      198
     ]
    },
    "numpy.core.arrayprint._formatter": {
     "line number": [
      201
     ]
    },
    "numpy.core.arrayprint._inf_str": {
     "line number": [
      200
     ]
    },
    "numpy.core.arrayprint._line_width": {
     "line number": [
      197
     ]
    },
    "numpy.core.arrayprint._nan_str": {
     "line number": [
      199
     ]
    },
    "numpy.core.arrayprint._summaryEdgeItems": {
     "line number": [
      196
     ]
    },
    "numpy.core.arrayprint._summaryThreshold": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.product": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "numpy.core.arrayprint.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.repr_format": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.set_printoptions": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.core.arrayprint._float_output_precision": {
     "line number": [
      160
     ]
    },
    "numpy.core.arrayprint._float_output_suppress_small": {
     "line number": [
      162
     ]
    },
    "numpy.core.arrayprint._formatter": {
     "line number": [
      167
     ]
    },
    "numpy.core.arrayprint._inf_str": {
     "line number": [
      166
     ]
    },
    "numpy.core.arrayprint._line_width": {
     "line number": [
      154
     ]
    },
    "numpy.core.arrayprint._nan_str": {
     "line number": [
      164
     ]
    },
    "numpy.core.arrayprint._summaryEdgeItems": {
     "line number": [
      158
     ]
    },
    "numpy.core.arrayprint._summaryThreshold": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.arrayprint.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.bench": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.core.char": {
  "data": {
   "shadows": "defchararray"
  },
  "type": "import"
 },
 "numpy.core.copyreg": {
  "data": {
   "shadows": "copy_reg"
  },
  "type": "import"
 },
 "numpy.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.function_base": {
  "data": {},
  "type": "module"
 },
 "numpy.core.function_base.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.core.function_base._nx": {
  "data": {
   "shadows": "numeric"
  },
  "type": "import"
 },
 "numpy.core.function_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.function_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.function_base.linspace": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "array": {
     "line number": [
      83,
      86
     ]
    },
    "float": {
     "line number": [
      83,
      86,
      87,
      91
     ]
    },
    "int": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.function_base.logspace": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.core.function_base.linspace": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.function_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api": {
  "data": {},
  "type": "module"
 },
 "numpy.core.generate_numpy_api.BoolValuesApi": {
  "data": {
   "shadows": "genapi.BoolValuesApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.FunctionApi": {
  "data": {
   "shadows": "genapi.FunctionApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.GlobalVarApi": {
  "data": {
   "shadows": "genapi.GlobalVarApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.TypeApi": {
  "data": {
   "shadows": "genapi.TypeApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.c_api_header": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "numpy.core.generate_numpy_api.c_template": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "numpy.core.generate_numpy_api.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.do_generate_api": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      226
     ]
    },
    "genapi.BoolValuesApi": {
     "line number": [
      220
     ]
    },
    "genapi.FunctionApi": {
     "line number": [
      212
     ]
    },
    "genapi.GlobalVarApi": {
     "line number": [
      217
     ]
    },
    "genapi.TypeApi": {
     "line number": [
      223
     ]
    },
    "len": {
     "line number": [
      225,
      225,
      227,
      227
     ]
    },
    "numpy.core.generate_numpy_api.c_api_header": {
     "line number": [
      250
     ]
    },
    "numpy.core.generate_numpy_api.c_template": {
     "line number": [
      244
     ]
    },
    "numpy.core.generate_numpy_api.genapi": {
     "line number": [
      199,
      200,
      202,
      204,
      230
     ]
    },
    "numpy.core.generate_numpy_api.h_template": {
     "line number": [
      238
     ]
    },
    "open": {
     "line number": [
      237,
      243,
      249
     ]
    },
    "type": {
     "line number": [
      216,
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.generate_numpy_api.genapi": {
  "data": {
   "shadows": "genapi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.generate_api": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "numpy.core.generate_numpy_api.do_generate_api": {
     "line number": [
      176
     ]
    },
    "numpy.core.generate_numpy_api.genapi": {
     "line number": [
      173
     ]
    },
    "numpy.core.generate_numpy_api.numpy_api": {
     "line number": [
      171,
      173
     ]
    },
    "numpy.core.generate_numpy_api.os": {
     "line number": [
      166,
      167,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.generate_numpy_api.h_template": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.core.generate_numpy_api.numpy_api": {
  "data": {
   "shadows": "numpy_api"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.getlimits": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      297
     ]
    },
    "numpy.core.getlimits.f": {
     "line number": [
      299,
      300,
      302,
      303,
      305,
      306
     ]
    },
    "numpy.core.getlimits.finfo": {
     "line number": [
      298,
      301,
      304
     ]
    },
    "print": {
     "line number": [
      299,
      300,
      302,
      303,
      305,
      306
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.getlimits.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.core.getlimits._convert_to_float": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.core.getlimits._frz": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "numpy.core.getlimits.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.getlimits.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.getlimits.f": {
  "data": {
   "lineno": 304
  },
  "type": "constant"
 },
 "numpy.core.getlimits.finfo": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "object": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.getlimits.finfo.__new__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      96
     ]
    },
    "ValueError": {
     "line number": [
      109
     ]
    },
    "issubclass": {
     "line number": [
      108,
      113
     ]
    },
    "numpy.core.getlimits._convert_to_float": {
     "line number": [
      114
     ]
    },
    "object.__new__": {
     "line number": [
      121
     ]
    },
    "type": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.getlimits.finfo.__repr__": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "numpy.core.getlimits.finfo.__str__": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "numpy.core.getlimits.finfo._init": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "MachAr": {
     "line number": [
      147
     ]
    },
    "ValueError": {
     "line number": [
      145
     ]
    },
    "array": {
     "line number": [
      147,
      149,
      150
     ]
    },
    "getattr": {
     "line number": [
      156,
      158
     ]
    },
    "numpy.core.getlimits._frz": {
     "line number": [
      148,
      149,
      150
     ]
    },
    "repr": {
     "line number": [
      145
     ]
    },
    "setattr": {
     "line number": [
      156,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.getlimits.iinfo": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "max": {
     "line number": [
      281,
      281
     ]
    },
    "min": {
     "line number": [
      267,
      267
     ]
    },
    "object": {
     "line number": [
      194
     ]
    },
    "property": {
     "line number": [
      267,
      281
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.getlimits.iinfo.__init__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      247
     ]
    },
    "ValueError": {
     "line number": [
      253
     ]
    },
    "type": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.__repr__": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.__str__": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.max": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      273
     ]
    },
    "int": {
     "line number": [
      275,
      277
     ]
    },
    "numpy.core.getlimits.iinfo": {
     "line number": [
      272,
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.min": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      262
     ]
    },
    "int": {
     "line number": [
      263
     ]
    },
    "numpy.core.getlimits.iinfo": {
     "line number": [
      261,
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.getlimits.ntypes": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.getlimits.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.info": {
  "data": {},
  "type": "module"
 },
 "numpy.core.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.info.depends": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "numpy.core.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.info.global_symbols": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "numpy.core.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.machar": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      337
     ]
    },
    "numpy.core.machar.MachAr": {
     "line number": [
      338
     ]
    },
    "print": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.machar.MachAr": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "object": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.machar.MachAr.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "float": {
     "line number": [
      97,
      98
     ]
    },
    "int": {
     "line number": [
      97
     ]
    },
    "numpy.core.numeric.errstate": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.machar.MachAr.__str__": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "numpy.core.machar.MachAr._do_init": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      130,
      139,
      154,
      165,
      190,
      193,
      208,
      236,
      264
     ]
    },
    "abs": {
     "line number": [
      228,
      254
     ]
    },
    "float_conv": {
     "line number": [
      116,
      141
     ]
    },
    "float_to_float": {
     "line number": [
      296,
      299,
      304,
      307,
      318,
      321
     ]
    },
    "float_to_str": {
     "line number": [
      297,
      300,
      305,
      308,
      322
     ]
    },
    "int": {
     "line number": [
      318
     ]
    },
    "int_conv": {
     "line number": [
      135
     ]
    },
    "locals": {
     "line number": [
      191
     ]
    },
    "numpy.core.fromnumeric.any": {
     "line number": [
      127,
      136,
      151,
      162,
      168,
      172,
      184,
      203,
      214,
      228,
      228,
      231,
      254,
      254,
      257,
      257,
      280,
      283
     ]
    },
    "numpy.core.machar.math": {
     "line number": [
      318
     ]
    },
    "range": {
     "line number": [
      123,
      132,
      146,
      158,
      179,
      182,
      201,
      223,
      249,
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.machar.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.core.machar.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.machar.any": {
  "data": {
   "shadows": "numpy.core.fromnumeric.any"
  },
  "type": "import"
 },
 "numpy.core.machar.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.machar.errstate": {
  "data": {
   "shadows": "numpy.core.numeric.errstate"
  },
  "type": "import"
 },
 "numpy.core.machar.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.core.machar.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.max": {
  "data": {
   "shadows": "amax"
  },
  "type": "import"
 },
 "numpy.core.memmap": {
  "data": {},
  "type": "module"
 },
 "numpy.core.memmap.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.core.memmap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.memmap.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.core.memmap.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.memmap.dtypedescr": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.core.memmap.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.core.memmap.memmap": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "numpy.core.memmap.memmap.__array_finalize__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      278
     ]
    },
    "numpy.may_share_memory": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.memmap.memmap.__new__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      202
     ]
    },
    "ValueError": {
     "line number": [
      204,
      215,
      226
     ]
    },
    "bytes": {
     "line number": [
      223,
      224,
      228,
      237,
      239,
      240,
      252,
      254
     ]
    },
    "hasattr": {
     "line number": [
      207,
      265
     ]
    },
    "isinstance": {
     "line number": [
      231,
      262,
      266
     ]
    },
    "list": {
     "line number": [
      205
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      241
     ]
    },
    "numpy.compat.basestring": {
     "line number": [
      262,
      266
     ]
    },
    "numpy.compat.long": {
     "line number": [
      237
     ]
    },
    "numpy.core.memmap.dtypedescr": {
     "line number": [
      219
     ]
    },
    "numpy.core.memmap.mmap": {
     "line number": [
      245,
      247,
      249,
      251,
      254
     ]
    },
    "numpy.core.memmap.mode_equivalents": {
     "line number": [
      201,
      205
     ]
    },
    "numpy.core.memmap.valid_filemodes": {
     "line number": [
      203,
      205
     ]
    },
    "open": {
     "line number": [
      211
     ]
    },
    "tuple": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.memmap.memmap.flush": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.memmap.mmap": {
  "data": {
   "shadows": "mmap"
  },
  "type": "import"
 },
 "numpy.core.memmap.mode_equivalents": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.core.memmap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.memmap.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "numpy.core.memmap.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.memmap.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.memmap.valid_filemodes": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.core.memmap.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.memmap.writeable_filemodes": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.core.min": {
  "data": {
   "shadows": "amin"
  },
  "type": "import"
 },
 "numpy.core.nt": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.rec": {
  "data": {
   "shadows": "records"
  },
  "type": "import"
 },
 "numpy.core.records": {
  "data": {},
  "type": "module"
 },
 "numpy.core.records.__all__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.core.records._byteorderconv": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "numpy.core.records._typestr": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "numpy.core.records.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.records.array": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      743,
      762,
      801
     ]
    },
    "dict": {
     "line number": [
      800
     ]
    },
    "getattr": {
     "line number": [
      799
     ]
    },
    "isinstance": {
     "line number": [
      740,
      765,
      768,
      769,
      774,
      786,
      800
     ]
    },
    "issubclass": {
     "line number": [
      794,
      806
     ]
    },
    "list": {
     "line number": [
      768,
      769
     ]
    },
    "numpy.compat.bytes": {
     "line number": [
      765
     ]
    },
    "numpy.compat.isfileobj": {
     "line number": [
      740,
      783
     ]
    },
    "numpy.core.records.format_parser": {
     "line number": [
      750
     ]
    },
    "numpy.core.records.fromarrays": {
     "line number": [
      772
     ]
    },
    "numpy.core.records.fromfile": {
     "line number": [
      784
     ]
    },
    "numpy.core.records.fromrecords": {
     "line number": [
      770
     ]
    },
    "numpy.core.records.fromstring": {
     "line number": [
      766
     ]
    },
    "numpy.core.records.ndarray": {
     "line number": [
      786
     ]
    },
    "numpy.core.records.recarray": {
     "line number": [
      763,
      774,
      793,
      805
     ]
    },
    "numpy.core.records.record": {
     "line number": [
      795,
      807
     ]
    },
    "str": {
     "line number": [
      740
     ]
    },
    "tuple": {
     "line number": [
      768,
      769
     ]
    },
    "type": {
     "line number": [
      740
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.bytes": {
  "data": {
   "shadows": "numpy.compat.bytes"
  },
  "type": "import"
 },
 "numpy.core.records.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.records.find_duplicate": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "len": {
     "line number": [
      79
     ]
    },
    "list": {
     "line number": [
      79,
      80,
      80,
      81,
      82
     ]
    },
    "range": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.format_parser": {
  "data": {
   "lineno": 85
  },
  "type": "class"
 },
 "numpy.core.records.format_parser.__init__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "numpy.core.records.format_parser._createdescr": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "numpy.core.records._byteorderconv": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.format_parser._parseFormats": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      154
     ]
    },
    "isinstance": {
     "line number": [
      155
     ]
    },
    "len": {
     "line number": [
      156,
      167
     ]
    },
    "list": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.format_parser._setfieldnames": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      179
     ]
    },
    "ValueError": {
     "line number": [
      194
     ]
    },
    "isinstance": {
     "line number": [
      176
     ]
    },
    "len": {
     "line number": [
      189,
      202,
      203
     ]
    },
    "list": {
     "line number": [
      174
     ]
    },
    "numpy.core.records.find_duplicate": {
     "line number": [
      192
     ]
    },
    "range": {
     "line number": [
      189
     ]
    },
    "repr": {
     "line number": [
      179
     ]
    },
    "str": {
     "line number": [
      176
     ]
    },
    "tuple": {
     "line number": [
      174
     ]
    },
    "type": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.fromarrays": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      533,
      550,
      562
     ]
    },
    "enumerate": {
     "line number": [
      558
     ]
    },
    "int": {
     "line number": [
      524
     ]
    },
    "isinstance": {
     "line number": [
      524,
      532
     ]
    },
    "issubclass": {
     "line number": [
      535
     ]
    },
    "len": {
     "line number": [
      549,
      549,
      554,
      559,
      560,
      567
     ]
    },
    "numpy.core.records._typestr": {
     "line number": [
      534
     ]
    },
    "numpy.core.records.format_parser": {
     "line number": [
      544
     ]
    },
    "numpy.core.records.ndarray": {
     "line number": [
      532
     ]
    },
    "numpy.core.records.recarray": {
     "line number": [
      564
     ]
    },
    "range": {
     "line number": [
      567
     ]
    },
    "repr": {
     "line number": [
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.fromfile": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      729
     ]
    },
    "ValueError": {
     "line number": [
      722
     ]
    },
    "int": {
     "line number": [
      693
     ]
    },
    "isinstance": {
     "line number": [
      693,
      697
     ]
    },
    "list": {
     "line number": [
      714
     ]
    },
    "numpy.compat.long": {
     "line number": [
      693
     ]
    },
    "numpy.core.records.format_parser": {
     "line number": [
      707
     ]
    },
    "numpy.core.records.get_remaining_size": {
     "line number": [
      702
     ]
    },
    "numpy.core.records.recarray": {
     "line number": [
      726
     ]
    },
    "open": {
     "line number": [
      699
     ]
    },
    "str": {
     "line number": [
      697
     ]
    },
    "tuple": {
     "line number": [
      716
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.fromrecords": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      617
     ]
    },
    "ValueError": {
     "line number": [
      623
     ]
    },
    "int": {
     "line number": [
      620
     ]
    },
    "isinstance": {
     "line number": [
      620
     ]
    },
    "len": {
     "line number": [
      603,
      619,
      622
     ]
    },
    "numpy.compat.long": {
     "line number": [
      620
     ]
    },
    "numpy.core.records.format_parser": {
     "line number": [
      613
     ]
    },
    "numpy.core.records.fromarrays": {
     "line number": [
      607
     ]
    },
    "numpy.core.records.recarray": {
     "line number": [
      624,
      632
     ]
    },
    "numpy.core.records.record": {
     "line number": [
      611
     ]
    },
    "object": {
     "line number": [
      605
     ]
    },
    "range": {
     "line number": [
      606,
      625
     ]
    },
    "tuple": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.fromstring": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      644
     ]
    },
    "len": {
     "line number": [
      653
     ]
    },
    "numpy.core.records.format_parser": {
     "line number": [
      649
     ]
    },
    "numpy.core.records.recarray": {
     "line number": [
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.get_remaining_size": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      661
     ]
    },
    "numpy.core.records.os": {
     "line number": [
      662,
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.isfileobj": {
  "data": {
   "shadows": "numpy.compat.isfileobj"
  },
  "type": "import"
 },
 "numpy.core.records.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.core.records.ndarray": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "numpy.core.records.nt": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.records.numfmt": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "numpy.core.records.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.records.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.records.recarray": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "numpy.core.records.ndarray": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.records.recarray.__getattribute__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      412,
      418
     ]
    },
    "KeyError": {
     "line number": [
      417
     ]
    },
    "TypeError": {
     "line number": [
      417
     ]
    },
    "numpy.core.records.ndarray": {
     "line number": [
      414,
      426
     ]
    },
    "object.__getattribute__": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.recarray.__getitem__": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      460
     ]
    },
    "numpy.core.records.ndarray": {
     "line number": [
      459,
      460,
      461
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.recarray.__new__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "numpy.core.records.format_parser": {
     "line number": [
      399
     ]
    },
    "numpy.core.records.ndarray": {
     "line number": [
      402,
      404
     ]
    },
    "numpy.core.records.record": {
     "line number": [
      402,
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.recarray.__repr__": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "numpy.core.records.ndarray": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.recarray.__setattr__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      455
     ]
    },
    "KeyError": {
     "line number": [
      454
     ]
    },
    "TypeError": {
     "line number": [
      454
     ]
    },
    "exctype": {
     "line number": [
      441
     ]
    },
    "numpy.core.records.ndarray": {
     "line number": [
      438,
      443
     ]
    },
    "numpy.core.records.sys": {
     "line number": [
      440
     ]
    },
    "object.__delattr__": {
     "line number": [
      449
     ]
    },
    "object.__setattr__": {
     "line number": [
      436
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.recarray.field": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "int": {
     "line number": [
      469
     ]
    },
    "isinstance": {
     "line number": [
      469
     ]
    },
    "numpy.core.records.ndarray": {
     "line number": [
      470,
      473,
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.recarray.view": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      494
     ]
    },
    "issubclass": {
     "line number": [
      492
     ]
    },
    "numpy.core.records.ndarray": {
     "line number": [
      489,
      492,
      493,
      499,
      501
     ]
    },
    "type": {
     "line number": [
      489,
      490,
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.record": {
  "data": {
   "lineno": 216
  },
  "type": "class"
 },
 "numpy.core.records.record.__getattribute__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      230,
      241,
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.record.__repr__": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "numpy.core.records.record.__setattr__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      255,
      264
     ]
    },
    "getattr": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.record.__str__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "str": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.record.pprint": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      275
     ]
    },
    "len": {
     "line number": [
      271
     ]
    },
    "max": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.records.sb": {
  "data": {
   "shadows": "numeric"
  },
  "type": "import"
 },
 "numpy.core.records.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.round": {
  "data": {
   "shadows": "round_"
  },
  "type": "import"
 },
 "numpy.core.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1004
     ]
    },
    "numpy.core.setup.configuration": {
     "line number": [
      1006
     ]
    },
    "numpy.core.setup.os": {
     "line number": [
      19,
      22
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      1006
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.setup.CallOnceOnly": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "object": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.setup.CallOnceOnly.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "numpy.core.setup.CallOnceOnly.check_complex": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.core.setup.check_complex": {
     "line number": [
      58
     ]
    },
    "numpy.core.setup.copy": {
     "line number": [
      61
     ]
    },
    "numpy.core.setup.pickle": {
     "line number": [
      59,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.CallOnceOnly.check_ieee_macros": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "numpy.core.setup.check_ieee_macros": {
     "line number": [
      50
     ]
    },
    "numpy.core.setup.copy": {
     "line number": [
      53
     ]
    },
    "numpy.core.setup.pickle": {
     "line number": [
      51,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.CallOnceOnly.check_types": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "numpy.core.setup.check_types": {
     "line number": [
      42
     ]
    },
    "numpy.core.setup.copy": {
     "line number": [
      45
     ]
    },
    "numpy.core.setup.pickle": {
     "line number": [
      43,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.core.setup.ENABLE_SEPARATE_COMPILATION": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.core.setup.NPY_RELAXED_STRIDES_CHECKING": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.core.setup.PYTHON_HAS_UNICODE_WIDE": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "numpy.core.setup.check_complex": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "check_prec": {
     "line number": [
      223,
      224,
      225
     ]
    },
    "numpy.core.setup.os": {
     "line number": [
      193
     ]
    },
    "numpy.core.setup.warnings": {
     "line number": [
      194
     ]
    },
    "type2def": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.check_complex.check_prec": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      213
     ]
    },
    "fname2def": {
     "line number": [
      219,
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.check_ieee_macros": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "_add_decl": {
     "line number": [
      262
     ]
    },
    "fname2def": {
     "line number": [
      245,
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.check_ieee_macros._add_decl": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "fname2def": {
     "line number": [
      236,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "SystemError": {
     "line number": [
      147
     ]
    },
    "check_funcs": {
     "line number": [
      162,
      185,
      186
     ]
    },
    "check_funcs_once": {
     "line number": [
      146
     ]
    },
    "dict": {
     "line number": [
      180
     ]
    },
    "fname2def": {
     "line number": [
      158,
      166,
      176,
      182
     ]
    },
    "len": {
     "line number": [
      170
     ]
    },
    "str": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities.check_func": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities.check_funcs": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "check_func": {
     "line number": [
      138
     ]
    },
    "check_funcs_once": {
     "line number": [
      135
     ]
    },
    "fname2def": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities.check_funcs_once": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      125
     ]
    },
    "fname2def": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.check_mathlib": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      379
     ]
    },
    "numpy.core.setup.os": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.check_types": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      361
     ]
    },
    "SystemError": {
     "line number": [
      288,
      306,
      317,
      327,
      339,
      350,
      358
     ]
    },
    "numpy.core.setup.pythonlib_dir": {
     "line number": [
      332,
      344
     ]
    },
    "sym2def": {
     "line number": [
      298,
      300,
      300,
      304,
      309,
      313,
      315,
      325,
      336,
      337,
      347,
      348,
      356
     ]
    },
    "type": {
     "line number": [
      297,
      298,
      300,
      300,
      302,
      302,
      304,
      306,
      308,
      309,
      311,
      311,
      313,
      314,
      315,
      317,
      322,
      322,
      323,
      325,
      330,
      331,
      333,
      336,
      337,
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.configuration": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "check_api_version": {
     "line number": [
      405
     ]
    },
    "dict": {
     "line number": [
      670
     ]
    },
    "generate_api_func": {
     "line number": [
      618,
      619
     ]
    },
    "is_released": {
     "line number": [
      400
     ]
    },
    "numpy.core.setup.CallOnceOnly": {
     "line number": [
      415
     ]
    },
    "numpy.core.setup.ENABLE_SEPARATE_COMPILATION": {
     "line number": [
      839,
      907
     ]
    },
    "numpy.core.setup.imp": {
     "line number": [
      409
     ]
    },
    "numpy.core.setup.os": {
     "line number": [
      670
     ]
    },
    "numpy.core.setup.sys": {
     "line number": [
      646
     ]
    },
    "numpy.core.setup.warnings": {
     "line number": [
      401
     ]
    },
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      396
     ]
    },
    "numpy.distutils.misc_util.dot_join": {
     "line number": [
      408
     ]
    },
    "numpy.distutils.system_info.get_info": {
     "line number": [
      944
     ]
    },
    "open": {
     "line number": [
      410
     ]
    },
    "os.path.join": {
     "line number": [
      398,
      407,
      621,
      622,
      623,
      626,
      627,
      628,
      629,
      638,
      639,
      642,
      660,
      690,
      691,
      692,
      693,
      707,
      708,
      709,
      710,
      711,
      743,
      744,
      745,
      746,
      747,
      748,
      749,
      750,
      751,
      752,
      753,
      754,
      755,
      756,
      757,
      758,
      759,
      760,
      761,
      762,
      763,
      764,
      765,
      766,
      767,
      768,
      769,
      770,
      771,
      772,
      773,
      774,
      775,
      776,
      777,
      778,
      779,
      780,
      781,
      782,
      783,
      784,
      785,
      786,
      787,
      788,
      789,
      795,
      796,
      797,
      798,
      799,
      800,
      801,
      802,
      803,
      804,
      805,
      806,
      807,
      808,
      809,
      810,
      811,
      812,
      813,
      814,
      815,
      816,
      817,
      818,
      819,
      820,
      821,
      822,
      823,
      824,
      825,
      826,
      827,
      828,
      829,
      830,
      831,
      832,
      833,
      834,
      835,
      836,
      841,
      849,
      850,
      893,
      894,
      895,
      896,
      897,
      898,
      899,
      903,
      904,
      905,
      909,
      911,
      912,
      929,
      930,
      955,
      956,
      967,
      974,
      981,
      988,
      995
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_api_func": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_api_func.generate_api": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      608
     ]
    },
    "numpy.core.setup.os": {
     "line number": [
      610
     ]
    },
    "numpy.core.setup.sys": {
     "line number": [
      606,
      612
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      609
     ]
    },
    "os.path.join": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_config_h": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      472
     ]
    },
    "check_long_double_representation": {
     "line number": [
      463
     ]
    },
    "distutils.dep_util.newer": {
     "line number": [
      423
     ]
    },
    "hasattr": {
     "line number": [
      522
     ]
    },
    "isinstance": {
     "line number": [
      481
     ]
    },
    "len": {
     "line number": [
      514
     ]
    },
    "numpy.core.setup.ENABLE_SEPARATE_COMPILATION": {
     "line number": [
      455
     ]
    },
    "numpy.core.setup.NPY_RELAXED_STRIDES_CHECKING": {
     "line number": [
      458
     ]
    },
    "numpy.core.setup.PYTHON_HAS_UNICODE_WIDE": {
     "line number": [
      451,
      453
     ]
    },
    "numpy.core.setup.check_math_capabilities": {
     "line number": [
      434
     ]
    },
    "numpy.core.setup.check_mathlib": {
     "line number": [
      431
     ]
    },
    "numpy.core.setup.is_npy_no_signal": {
     "line number": [
      439
     ]
    },
    "numpy.core.setup.os": {
     "line number": [
      419,
      420,
      421,
      443,
      525
     ]
    },
    "numpy.core.setup.sys": {
     "line number": [
      443,
      462,
      475
     ]
    },
    "numpy.core.setup.win32_checks": {
     "line number": [
      444
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      425
     ]
    },
    "open": {
     "line number": [
      479,
      504,
      510
     ]
    },
    "os.path.join": {
     "line number": [
      418
     ]
    },
    "print": {
     "line number": [
      503,
      505,
      507
     ]
    },
    "str": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_multiarray_templated_sources": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.get_cmd": {
     "line number": [
      738
     ]
    },
    "os.path.join": {
     "line number": [
      728,
      729,
      730,
      731,
      732,
      733,
      737
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_numpyconfig_h": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": {
    "distutils.dep_util.newer": {
     "line number": [
      541
     ]
    },
    "isinstance": {
     "line number": [
      581
     ]
    },
    "numpy.core.setup.ENABLE_SEPARATE_COMPILATION": {
     "line number": [
      560
     ]
    },
    "numpy.core.setup.NPY_RELAXED_STRIDES_CHECKING": {
     "line number": [
      563
     ]
    },
    "numpy.core.setup.check_mathlib": {
     "line number": [
      556
     ]
    },
    "numpy.core.setup.is_npy_no_signal": {
     "line number": [
      548
     ]
    },
    "numpy.core.setup.is_npy_no_smp": {
     "line number": [
      551
     ]
    },
    "numpy.core.setup.os": {
     "line number": [
      538,
      539,
      540
     ]
    },
    "numpy.core.setup.visibility_define": {
     "line number": [
      571
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      543
     ]
    },
    "open": {
     "line number": [
      579,
      596
     ]
    },
    "os.path.join": {
     "line number": [
      535,
      537
     ]
    },
    "print": {
     "line number": [
      595,
      597,
      599
     ]
    },
    "str": {
     "line number": [
      581
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_umath_c": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      881,
      882,
      883
     ]
    },
    "distutils.dep_util.newer": {
     "line number": [
      885
     ]
    },
    "numpy.core.setup.os": {
     "line number": [
      881,
      882,
      883
     ]
    },
    "open": {
     "line number": [
      886
     ]
    },
    "os.path.join": {
     "line number": [
      880
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_umath_templated_sources": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.get_cmd": {
     "line number": [
      874
     ]
    },
    "os.path.join": {
     "line number": [
      864,
      868,
      869,
      873
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.get_dotblas_sources": {
  "data": {
   "lineno": 946
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.get_mathlib_info": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      682
     ]
    },
    "numpy.core.setup.check_mathlib": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.core.setup.default_lib_dirs": {
  "data": {
   "shadows": "numpy.distutils.system_info.default_lib_dirs"
  },
  "type": "import"
 },
 "numpy.core.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.setup.dot_join": {
  "data": {
   "shadows": "numpy.distutils.misc_util.dot_join"
  },
  "type": "import"
 },
 "numpy.core.setup.get_build_architecture": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_build_architecture"
  },
  "type": "import"
 },
 "numpy.core.setup.get_cmd": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_cmd"
  },
  "type": "import"
 },
 "numpy.core.setup.get_config_var": {
  "data": {
   "shadows": "distutils.sysconfig.get_config_var"
  },
  "type": "import"
 },
 "numpy.core.setup.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "numpy.core.setup.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "numpy.core.setup.is_npy_no_signal": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "numpy.core.setup.sys": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.is_npy_no_smp": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      99
     ]
    },
    "numpy.core.setup.os": {
     "line number": [
      97
     ]
    },
    "numpy.core.setup.sys": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.core.setup.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.core.setup.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.core.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.setup.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.setup.pythonlib_dir": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "distutils.sysconfig.get_config_var": {
     "line number": [
      71
     ]
    },
    "numpy.core.setup.os": {
     "line number": [
      69
     ]
    },
    "numpy.core.setup.sys": {
     "line number": [
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.core.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.core.setup.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.core.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.setup.visibility_define": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "numpy.core.setup.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.setup.win32_checks": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "numpy.core.setup.os": {
     "line number": [
      109
     ]
    },
    "numpy.core.setup.sys": {
     "line number": [
      109
     ]
    },
    "numpy.distutils.misc_util.get_build_architecture": {
     "line number": [
      105
     ]
    },
    "print": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup_common": {
  "data": {
   "symbols_in_volume": {
    "numpy.core.setup_common.C99_FUNCS": {
     "line number": [
      141,
      142
     ]
    },
    "numpy.core.setup_common._IEEE_DOUBLE_BE": {
     "line number": [
      247
     ]
    },
    "numpy.core.setup_common._IEEE_QUAD_PREC_BE": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.setup_common.C99_COMPLEX_FUNCS": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_COMPLEX_TYPES": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_FUNCS": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_FUNCS_EXTENDED": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_FUNCS_SINGLE": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C_ABI_VERSION": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C_API_VERSION": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.core.setup_common.CompileError": {
  "data": {
   "shadows": "distutils.ccompiler.CompileError"
  },
  "type": "import"
 },
 "numpy.core.setup_common.LONG_DOUBLE_REPRESENTATION_SRC": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "numpy.core.setup_common.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "numpy.core.setup_common.MANDATORY_FUNCS": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "numpy.core.setup_common.MismatchCAPIWarning": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.setup_common.OPTIONAL_GCC_ATTRIBUTES": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "numpy.core.setup_common.OPTIONAL_HEADERS": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "numpy.core.setup_common.OPTIONAL_INTRINSICS": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "numpy.core.setup_common.OPTIONAL_STDFUNCS": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "numpy.core.setup_common.OPTIONAL_STDFUNCS_MAYBE": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "numpy.core.setup_common._AFTER_SEQ": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "numpy.core.setup_common._BEFORE_SEQ": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "numpy.core.setup_common._DOUBLE_DOUBLE_BE": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_DOUBLE_BE": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_DOUBLE_LE": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_QUAD_PREC_BE": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_QUAD_PREC_LE": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "numpy.core.setup_common._INTEL_EXTENDED_12B": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "numpy.core.setup_common._INTEL_EXTENDED_16B": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "numpy.core.setup_common._MOTOROLA_EXTENDED_12B": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "numpy.core.setup_common.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.setup_common.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "numpy.core.setup_common.check_api_version": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "numpy.core.setup_common.MismatchCAPIWarning": {
     "line number": [
      91
     ]
    },
    "numpy.core.setup_common.get_api_versions": {
     "line number": [
      75
     ]
    },
    "numpy.core.setup_common.warnings": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup_common.check_long_double_representation": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "numpy.core.setup_common.long_double_representation": {
     "line number": [
      168
     ]
    },
    "numpy.core.setup_common.pyod": {
     "line number": [
      168
     ]
    },
    "object": {
     "line number": [
      166,
      168
     ]
    },
    "type": {
     "line number": [
      168,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup_common.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.core.setup_common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.setup_common.fname2def": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "numpy.core.setup_common.get_api_versions": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      64,
      65
     ]
    },
    "numpy.core.setup_common.sys": {
     "line number": [
      62,
      69
     ]
    },
    "os.path.join": {
     "line number": [
      57,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup_common.is_released": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      48
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      49
     ]
    },
    "len": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup_common.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.core.setup_common.long_double_representation": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      305,
      308
     ]
    },
    "numpy.core.setup_common._AFTER_SEQ": {
     "line number": [
      282
     ]
    },
    "numpy.core.setup_common._BEFORE_SEQ": {
     "line number": [
      284,
      289,
      298
     ]
    },
    "numpy.core.setup_common._DOUBLE_DOUBLE_BE": {
     "line number": [
      296
     ]
    },
    "numpy.core.setup_common._IEEE_DOUBLE_BE": {
     "line number": [
      301
     ]
    },
    "numpy.core.setup_common._IEEE_DOUBLE_LE": {
     "line number": [
      299
     ]
    },
    "numpy.core.setup_common._IEEE_QUAD_PREC_BE": {
     "line number": [
      292
     ]
    },
    "numpy.core.setup_common._IEEE_QUAD_PREC_LE": {
     "line number": [
      294
     ]
    },
    "numpy.core.setup_common._INTEL_EXTENDED_12B": {
     "line number": [
      285
     ]
    },
    "numpy.core.setup_common._INTEL_EXTENDED_16B": {
     "line number": [
      290
     ]
    },
    "numpy.core.setup_common._MOTOROLA_EXTENDED_12B": {
     "line number": [
      287
     ]
    },
    "numpy.core.setup_common.copy": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup_common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.setup_common.pyod": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "_pyod2": {
     "line number": [
      238
     ]
    },
    "_pyod3": {
     "line number": [
      240
     ]
    },
    "numpy.core.setup_common.sys": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup_common.pyod._pyod2": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "int": {
     "line number": [
      214,
      214,
      216
     ]
    },
    "len": {
     "line number": [
      215
     ]
    },
    "numpy.core.setup_common.binascii": {
     "line number": [
      214
     ]
    },
    "oct": {
     "line number": [
      214,
      216
     ]
    },
    "open": {
     "line number": [
      212
     ]
    },
    "range": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup_common.pyod._pyod3": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "int": {
     "line number": [
      230,
      231
     ]
    },
    "len": {
     "line number": [
      229
     ]
    },
    "oct": {
     "line number": [
      228,
      230
     ]
    },
    "open": {
     "line number": [
      226
     ]
    },
    "range": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.setup_common.sym2def": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "numpy.core.setup_common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.setup_common.type2def": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "numpy.core.setup_common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.shape_base": {
  "data": {},
  "type": "module"
 },
 "numpy.core.shape_base.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.core.shape_base._nx": {
  "data": {
   "shadows": "numeric"
  },
  "type": "import"
 },
 "numpy.core.shape_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.shape_base.atleast_1d": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "asanyarray": {
     "line number": [
      49
     ]
    },
    "len": {
     "line number": [
      50,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.shape_base.atleast_2d": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "asanyarray": {
     "line number": [
      99
     ]
    },
    "len": {
     "line number": [
      100,
      102,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.shape_base.atleast_3d": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "asanyarray": {
     "line number": [
      163
     ]
    },
    "len": {
     "line number": [
      164,
      166,
      168,
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.shape_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.shape_base.hstack": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "numpy.core.shape_base.atleast_1d": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.shape_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.shape_base.vstack": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "numpy.core.shape_base.atleast_2d": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.test": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.core.tests.test_api": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      454
     ]
    },
    "numpy.ones": {
     "line number": [
      11
     ]
    },
    "run_module_suite": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_api.NPY_RELAXED_STRIDES_CHECKING": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.core.tests.test_api.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.sixu": {
  "data": {
   "shadows": "numpy.compat.sixu"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.test_array_array": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      121
     ]
    },
    "_buffer": {
     "line number": [
      73,
      77
     ]
    },
    "_memoryview": {
     "line number": [
      84,
      88
     ]
    },
    "_unicode": {
     "line number": [
      56,
      58,
      59,
      59,
      60,
      61,
      62
     ]
    },
    "assert_": {
     "line number": [
      66,
      75,
      79,
      86,
      90
     ]
    },
    "assert_equal": {
     "line number": [
      20,
      23,
      26,
      30,
      33,
      37,
      43,
      45,
      46,
      47,
      48,
      56,
      58,
      59,
      60,
      62,
      74,
      78,
      85,
      89,
      96,
      105,
      110,
      124,
      126,
      128,
      130,
      133,
      135,
      137,
      139,
      143,
      145,
      147,
      149,
      152,
      154,
      156,
      158
     ]
    },
    "assert_raises": {
     "line number": [
      121
     ]
    },
    "dict": {
     "line number": [
      66,
      95,
      102,
      109
     ]
    },
    "float": {
     "line number": [
      100
     ]
    },
    "getattr": {
     "line number": [
      65
     ]
    },
    "globals": {
     "line number": [
      51
     ]
    },
    "int": {
     "line number": [
      100
     ]
    },
    "isinstance": {
     "line number": [
      66
     ]
    },
    "numpy.MAXDIMS": {
     "line number": [
      114
     ]
    },
    "numpy.array": {
     "line number": [
      20,
      22,
      26,
      27,
      29,
      33,
      36,
      36,
      43,
      45,
      46,
      47,
      47,
      48,
      56,
      58,
      59,
      60,
      61,
      62,
      73,
      77,
      84,
      88,
      93,
      96,
      99,
      105,
      109,
      110,
      110,
      118,
      121,
      124,
      126,
      128,
      130,
      133,
      135,
      137,
      139,
      143,
      145,
      147,
      149,
      152,
      154,
      156,
      158
     ]
    },
    "numpy.core.tests.test_api.sys": {
     "line number": [
      21,
      23,
      28,
      30,
      35,
      37,
      70
     ]
    },
    "numpy.dtype": {
     "line number": [
      40,
      41,
      42,
      53,
      54,
      55
     ]
    },
    "numpy.empty": {
     "line number": [
      125,
      127,
      129,
      131,
      144,
      146,
      148,
      150
     ]
    },
    "numpy.float64": {
     "line number": [
      17,
      20,
      26,
      27,
      29,
      33,
      34,
      35,
      36,
      36,
      37,
      43,
      44,
      56,
      57,
      73,
      75,
      84,
      86,
      93,
      96,
      109,
      110,
      110,
      121,
      124,
      125,
      126,
      127,
      128,
      129,
      130,
      131,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159
     ]
    },
    "numpy.nan": {
     "line number": [
      27,
      125,
      127,
      129,
      131,
      144,
      146,
      148,
      150
     ]
    },
    "numpy.ones": {
     "line number": [
      17,
      34,
      44,
      48,
      57,
      63,
      134,
      136,
      138,
      140,
      153,
      155,
      157,
      159
     ]
    },
    "numpy.uint8": {
     "line number": [
      79,
      90
     ]
    },
    "object": {
     "line number": [
      15,
      16,
      94,
      101,
      108
     ]
    },
    "range": {
     "line number": [
      114
     ]
    },
    "str": {
     "line number": [
      40,
      41,
      42,
      46,
      100,
      105,
      105
     ]
    },
    "type": {
     "line number": [
      16,
      18,
      94,
      101,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_array_astype": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      218
     ]
    },
    "assert_": {
     "line number": [
      195,
      199,
      205,
      206,
      210,
      211,
      222,
      228,
      238,
      239,
      279
     ]
    },
    "assert_array_equal": {
     "line number": [
      263,
      265,
      268,
      270,
      273,
      275
     ]
    },
    "assert_equal": {
     "line number": [
      186,
      187,
      188,
      190,
      191,
      192,
      194,
      204,
      209,
      215,
      216,
      232,
      233,
      237,
      245,
      246,
      249,
      250,
      255,
      256,
      259,
      260
     ]
    },
    "assert_raises": {
     "line number": [
      218
     ]
    },
    "numpy.arange": {
     "line number": [
      182
     ]
    },
    "numpy.array": {
     "line number": [
      243,
      247,
      253,
      257,
      262,
      263,
      264,
      265,
      267,
      268,
      269,
      270,
      272,
      273,
      274,
      275,
      277
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      247,
      257,
      265,
      270,
      275,
      277
     ]
    },
    "numpy.dtype": {
     "line number": [
      187,
      191,
      216,
      246,
      250,
      256,
      260
     ]
    },
    "numpy.matrix": {
     "line number": [
      224,
      233,
      239
     ]
    },
    "numpy.ndarray": {
     "line number": [
      278
     ]
    },
    "type": {
     "line number": [
      233,
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_broadcast_arrays": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      451,
      452
     ]
    },
    "numpy.array": {
     "line number": [
      448,
      449,
      451,
      452
     ]
    },
    "numpy.broadcast_arrays": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_contiguous_flags": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "check_contig": {
     "line number": [
      413,
      414,
      416,
      417,
      419,
      420,
      421,
      422,
      425,
      426,
      427,
      431,
      432,
      433,
      434,
      437,
      439,
      440,
      443,
      444
     ]
    },
    "numpy.array": {
     "line number": [
      417,
      420,
      425,
      426,
      427
     ]
    },
    "numpy.core.tests.test_api.NPY_RELAXED_STRIDES_CHECKING": {
     "line number": [
      404,
      415,
      429
     ]
    },
    "numpy.empty": {
     "line number": [
      416,
      419,
      421,
      422
     ]
    },
    "numpy.ones": {
     "line number": [
      403,
      406,
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_contiguous_flags.check_contig": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      409,
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copy_order": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      353,
      354,
      355,
      356,
      357,
      358
     ]
    },
    "check_copy_result": {
     "line number": [
      362,
      364,
      366,
      368,
      370,
      372,
      376,
      378,
      380,
      382,
      384,
      386,
      390,
      392,
      394,
      396,
      398,
      400
     ]
    },
    "numpy.arange": {
     "line number": [
      335,
      337
     ]
    },
    "numpy.copy": {
     "line number": [
      367,
      369,
      371,
      381,
      383,
      385,
      395,
      397,
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copy_order.check_copy_result": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      340,
      350
     ]
    },
    "assert_equal": {
     "line number": [
      341,
      342,
      343,
      348
     ]
    },
    "numpy.core.tests.test_api.NPY_RELAXED_STRIDES_CHECKING": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copyto": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      310,
      321,
      332
     ]
    },
    "assert_equal": {
     "line number": [
      303,
      307,
      314,
      318,
      325,
      329
     ]
    },
    "assert_raises": {
     "line number": [
      310,
      321,
      332
     ]
    },
    "numpy.arange": {
     "line number": [
      299
     ]
    },
    "numpy.copyto": {
     "line number": [
      302,
      306,
      310,
      313,
      317,
      321,
      324,
      328,
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copyto_fromscalar": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      286,
      288,
      293,
      296
     ]
    },
    "numpy.arange": {
     "line number": [
      282
     ]
    },
    "numpy.array": {
     "line number": [
      291,
      294
     ]
    },
    "numpy.copyto": {
     "line number": [
      285,
      287,
      292,
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_fastCopyAndTranspose": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      167,
      173,
      179
     ]
    },
    "assert_equal": {
     "line number": [
      166,
      172,
      178
     ]
    },
    "numpy.arange": {
     "line number": [
      176
     ]
    },
    "numpy.array": {
     "line number": [
      164,
      170
     ]
    },
    "numpy.fastCopyAndTranspose": {
     "line number": [
      165,
      171,
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      166
     ]
    },
    "run_module_suite": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_basic": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      66,
      67
     ]
    },
    "numpy.arange": {
     "line number": [
      65
     ]
    },
    "numpy.array2string": {
     "line number": [
      66,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_format_function": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      91,
      93,
      95,
      103,
      105,
      109
     ]
    },
    "assert_equal": {
     "line number": [
      97,
      99
     ]
    },
    "hex": {
     "line number": [
      97
     ]
    },
    "numpy.arange": {
     "line number": [
      84,
      102
     ]
    },
    "numpy.array": {
     "line number": [
      108
     ]
    },
    "numpy.array2string": {
     "line number": [
      91,
      93,
      95,
      97,
      99,
      103,
      105,
      109
     ]
    },
    "numpy.core.tests.test_arrayprint.sys": {
     "line number": [
      85
     ]
    },
    "oct": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_format_function._format_function": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      78,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_style_keyword": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      73
     ]
    },
    "numpy.array": {
     "line number": [
      71
     ]
    },
    "numpy.array2string": {
     "line number": [
      71
     ]
    },
    "str": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "object": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_nan_inf": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      13
     ]
    },
    "numpy.array": {
     "line number": [
      12
     ]
    },
    "numpy.inf": {
     "line number": [
      12
     ]
    },
    "numpy.nan": {
     "line number": [
      12
     ]
    },
    "repr": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestComplexArray": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestComplexArray.test_str": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      60
     ]
    },
    "complex": {
     "line number": [
      18
     ]
    },
    "numpy.array": {
     "line number": [
      20
     ]
    },
    "numpy.cdouble": {
     "line number": [
      19
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      19
     ]
    },
    "numpy.complex64": {
     "line number": [
      19
     ]
    },
    "numpy.inf": {
     "line number": [
      17,
      17
     ]
    },
    "numpy.nan": {
     "line number": [
      17
     ]
    },
    "str": {
     "line number": [
      20
     ]
    },
    "zip": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions": {
  "data": {
   "lineno": 113
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.setUp": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "numpy.get_printoptions": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.tearDown": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "numpy.set_printoptions": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_basic": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      123,
      125
     ]
    },
    "numpy.array": {
     "line number": [
      122
     ]
    },
    "numpy.set_printoptions": {
     "line number": [
      124
     ]
    },
    "repr": {
     "line number": [
      123,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_formatter": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      130
     ]
    },
    "numpy.arange": {
     "line number": [
      128
     ]
    },
    "numpy.set_printoptions": {
     "line number": [
      129
     ]
    },
    "repr": {
     "line number": [
      130
     ]
    },
    "str": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_formatter_reset": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      135,
      137,
      140,
      142,
      145,
      147,
      151,
      153
     ]
    },
    "numpy.arange": {
     "line number": [
      133,
      149
     ]
    },
    "numpy.set_printoptions": {
     "line number": [
      134,
      136,
      139,
      141,
      144,
      146,
      150,
      152
     ]
    },
    "repr": {
     "line number": [
      135,
      137,
      140,
      142,
      145,
      147,
      151,
      153
     ]
    },
    "str": {
     "line number": [
      134,
      139,
      144,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.sixu": {
  "data": {
   "shadows": "numpy.compat.sixu"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.test_unicode_object_array": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      162
     ]
    },
    "numpy.array": {
     "line number": [
      161
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      161
     ]
    },
    "numpy.core.tests.test_arrayprint.sys": {
     "line number": [
      157
     ]
    },
    "object": {
     "line number": [
      161
     ]
    },
    "repr": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_blasdot": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      23
     ]
    },
    "numpy.core._dotblas": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_blasdot.DECPREC": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.core.tests.test_blasdot.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.TestInner": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_blasdot.TestInner.test_vecself": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.core.float64": {
     "line number": [
      17
     ]
    },
    "numpy.core.multiarray.inner": {
     "line number": [
      18
     ]
    },
    "numpy.core.tests.test_blasdot.DECPREC": {
     "line number": [
      19
     ]
    },
    "numpy.core.zeros": {
     "line number": [
      17
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_blasdot._dotblas": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.core.tests.test_blasdot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.alterdot": {
  "data": {
   "shadows": "numpy.core.alterdot"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.dot": {
  "data": {
   "shadows": "numpy.core.dot"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.float64": {
  "data": {
   "shadows": "numpy.core.float64"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.inner": {
  "data": {
   "shadows": "numpy.core.inner"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.inner_": {
  "data": {
   "shadows": "numpy.core.multiarray.inner"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.restoredot": {
  "data": {
   "shadows": "numpy.core.restoredot"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.test_blasdot_used": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.core._dotblas": {
     "line number": [
      26
     ]
    },
    "numpy.core._dotblas.alterdot": {
     "line number": [
      32
     ]
    },
    "numpy.core._dotblas.dot": {
     "line number": [
      29
     ]
    },
    "numpy.core._dotblas.inner": {
     "line number": [
      31
     ]
    },
    "numpy.core._dotblas.restoredot": {
     "line number": [
      33
     ]
    },
    "numpy.core._dotblas.vdot": {
     "line number": [
      30
     ]
    },
    "numpy.core.alterdot": {
     "line number": [
      32
     ]
    },
    "numpy.core.dot": {
     "line number": [
      29
     ]
    },
    "numpy.core.inner": {
     "line number": [
      31
     ]
    },
    "numpy.core.restoredot": {
     "line number": [
      33
     ]
    },
    "numpy.core.vdot": {
     "line number": [
      30
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      29,
      30,
      31,
      32,
      33
     ]
    },
    "numpy.testing.dec.skipif": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_blasdot.test_dot_2args": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "float": {
     "line number": [
      39,
      40,
      41
     ]
    },
    "numpy.array": {
     "line number": [
      39,
      40,
      41
     ]
    },
    "numpy.core.dot": {
     "line number": [
      43
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_blasdot.test_dot_3args": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "numpy.core.tests.test_blasdot.sys": {
     "line number": [
      54
     ]
    },
    "numpy.dot": {
     "line number": [
      53,
      55,
      57,
      61,
      62
     ]
    },
    "numpy.empty": {
     "line number": [
      51
     ]
    },
    "numpy.random.random_sample": {
     "line number": [
      48,
      49
     ]
    },
    "numpy.random.seed": {
     "line number": [
      47
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      57,
      62
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      56,
      63
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      54
     ]
    },
    "range": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_blasdot.test_dot_3args_errors": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      71,
      74,
      77,
      80,
      81,
      84,
      85,
      88,
      91
     ]
    },
    "int": {
     "line number": [
      90
     ]
    },
    "numpy.dot": {
     "line number": [
      71,
      74,
      77,
      80,
      81,
      84,
      85,
      88,
      91
     ]
    },
    "numpy.empty": {
     "line number": [
      70,
      73,
      76,
      79,
      83,
      87,
      90
     ]
    },
    "numpy.float32": {
     "line number": [
      87
     ]
    },
    "numpy.random.random_sample": {
     "line number": [
      67,
      68
     ]
    },
    "numpy.random.seed": {
     "line number": [
      66
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      71,
      74,
      77,
      80,
      81,
      84,
      85,
      88,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_blasdot.test_dot_array_order": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "_dot": {
     "line number": [
      127,
      128,
      129,
      130,
      142,
      143,
      152,
      153
     ]
    },
    "numpy.asarray": {
     "line number": [
      110,
      135,
      147
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      102
     ]
    },
    "numpy.dot": {
     "line number": [
      112
     ]
    },
    "numpy.float32": {
     "line number": [
      105
     ]
    },
    "numpy.float64": {
     "line number": [
      105
     ]
    },
    "numpy.random.randn": {
     "line number": [
      110,
      135,
      147
     ]
    },
    "numpy.random.seed": {
     "line number": [
      106
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      114,
      120,
      121,
      122,
      127,
      128,
      129,
      130,
      138,
      139,
      141,
      142,
      143,
      150,
      151,
      152,
      153
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_blasdot.vdot": {
  "data": {
   "shadows": "numpy.core.vdot"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.zeros": {
  "data": {
   "shadows": "numpy.core.zeros"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      14
     ]
    },
    "__name__": {
     "line number": [
      1770
     ]
    },
    "run_module_suite": {
     "line number": [
      1771
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_datetime.TestDateTime": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_cast_overflow": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      599,
      602
     ]
    },
    "assert_raises": {
     "line number": [
      599,
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_cast_overflow.cast": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": {
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_cast_overflow.cast2": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      601
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_creation_overflow": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1220,
      1223
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1215,
      1215,
      1218,
      1220,
      1223
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_add": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      831
     ]
    },
    "assert_equal": {
     "line number": [
      783,
      784,
      786,
      787,
      789,
      790,
      792,
      793,
      795,
      796,
      798,
      799,
      800,
      802,
      803,
      804,
      806,
      807,
      808,
      810,
      811,
      812,
      814,
      815,
      816,
      818,
      819,
      820,
      823,
      824,
      826,
      827
     ]
    },
    "assert_raises": {
     "line number": [
      831
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      767,
      768,
      769,
      770,
      771,
      772,
      773,
      775,
      776,
      777,
      778,
      779,
      780,
      781,
      784,
      787,
      790,
      793,
      796,
      800,
      804,
      808,
      812,
      816,
      820,
      823,
      824,
      825,
      826,
      827,
      828,
      831
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_arange": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1409,
      1411
     ]
    },
    "ValueError": {
     "line number": [
      1406
     ]
    },
    "assert_equal": {
     "line number": [
      1377,
      1378,
      1383,
      1384,
      1390,
      1391,
      1397,
      1398,
      1401,
      1402
     ]
    },
    "assert_raises": {
     "line number": [
      1406,
      1409,
      1411
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1376,
      1377,
      1379,
      1382,
      1383,
      1385,
      1389,
      1390,
      1392,
      1392,
      1396,
      1397,
      1399,
      1399,
      1400,
      1400,
      1401,
      1403,
      1403,
      1406,
      1406,
      1407,
      1409,
      1409,
      1410,
      1411,
      1412,
      1413
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_array_find_type": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      186,
      192,
      196,
      203,
      207,
      211
     ]
    },
    "numpy.core.tests.test_datetime.datetime": {
     "line number": [
      190,
      194,
      205,
      209
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      184,
      185,
      186,
      191,
      192,
      195,
      196,
      200,
      201,
      202,
      203,
      206,
      207,
      210,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_array_str": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      521,
      524,
      531
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      520,
      523,
      524,
      526,
      530
     ]
    },
    "str": {
     "line number": [
      521,
      531
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_as_string": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1230,
      1232,
      1234,
      1236,
      1238,
      1240,
      1242,
      1244,
      1249,
      1251,
      1253,
      1258,
      1262,
      1264,
      1266,
      1271,
      1276,
      1278,
      1280,
      1282,
      1284,
      1285,
      1287,
      1289,
      1291,
      1293,
      1295,
      1297,
      1299,
      1303,
      1307,
      1311,
      1315,
      1320,
      1324,
      1329,
      1333
     ]
    },
    "numpy.core.tests.test_datetime.datetime": {
     "line number": [
      1228,
      1236,
      1238,
      1240,
      1242,
      1244,
      1247,
      1249,
      1251,
      1253,
      1256,
      1258,
      1259,
      1260,
      1262,
      1264,
      1266,
      1269,
      1271,
      1272
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1230,
      1230,
      1232,
      1232,
      1234,
      1234,
      1236,
      1236,
      1238,
      1238,
      1240,
      1240,
      1242,
      1242,
      1244,
      1244,
      1249,
      1249,
      1251,
      1251,
      1253,
      1253,
      1258,
      1258,
      1262,
      1262,
      1264,
      1264,
      1266,
      1266,
      1271,
      1271,
      1275,
      1276,
      1278,
      1280,
      1282,
      1284,
      1285,
      1287,
      1289,
      1291,
      1293,
      1295,
      1297,
      1299,
      1303,
      1304,
      1307,
      1308,
      1311,
      1312,
      1315,
      1316,
      1320,
      1321,
      1324,
      1325,
      1329,
      1330,
      1333,
      1334
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_as_string_timezone": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1364
     ]
    },
    "assert_": {
     "line number": [
      1344
     ]
    },
    "assert_equal": {
     "line number": [
      1342,
      1349,
      1351,
      1353,
      1356,
      1358,
      1360,
      1367,
      1370
     ]
    },
    "assert_raises": {
     "line number": [
      1364
     ]
    },
    "numpy.core.tests.test_datetime._has_pytz": {
     "line number": [
      1338
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1341,
      1342,
      1344,
      1347,
      1349,
      1351,
      1353,
      1356,
      1358,
      1360,
      1364,
      1367,
      1370
     ]
    },
    "pytz.timezone": {
     "line number": [
      1349,
      1351,
      1353,
      1356,
      1358,
      1360,
      1365,
      1368,
      1371
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busday_holidays_count": {
  "data": {
   "lineno": 1693,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1719,
      1721
     ]
    },
    "assert_equal": {
     "line number": [
      1704,
      1707,
      1712,
      1715,
      1725,
      1727
     ]
    },
    "assert_raises": {
     "line number": [
      1719,
      1721
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1698,
      1702,
      1702,
      1704,
      1705,
      1707,
      1708,
      1710,
      1710,
      1712,
      1713,
      1715,
      1716,
      1719,
      1721,
      1725,
      1727
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busday_holidays_offset": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1662,
      1664
     ]
    },
    "assert_equal": {
     "line number": [
      1527,
      1530,
      1533,
      1536,
      1539,
      1542,
      1546,
      1550,
      1555,
      1559,
      1564,
      1568,
      1573,
      1577,
      1582,
      1586,
      1596,
      1599,
      1602,
      1605,
      1608,
      1611,
      1614,
      1617,
      1620,
      1623,
      1626,
      1630,
      1633,
      1636,
      1639,
      1642,
      1645,
      1648,
      1651,
      1654,
      1657,
      1668,
      1672,
      1676,
      1680,
      1686
     ]
    },
    "assert_raises": {
     "line number": [
      1662,
      1664
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1528,
      1529,
      1531,
      1532,
      1534,
      1535,
      1537,
      1538,
      1540,
      1541,
      1543,
      1544,
      1547,
      1549,
      1551,
      1553,
      1556,
      1558,
      1560,
      1562,
      1565,
      1567,
      1569,
      1571,
      1574,
      1576,
      1578,
      1580,
      1583,
      1585,
      1587,
      1589,
      1595,
      1597,
      1598,
      1600,
      1601,
      1603,
      1604,
      1606,
      1607,
      1609,
      1610,
      1612,
      1613,
      1615,
      1616,
      1618,
      1619,
      1621,
      1622,
      1624,
      1625,
      1627,
      1628,
      1631,
      1632,
      1634,
      1635,
      1637,
      1638,
      1640,
      1641,
      1643,
      1644,
      1646,
      1647,
      1649,
      1650,
      1652,
      1653,
      1655,
      1656,
      1658,
      1659,
      1662,
      1664,
      1669,
      1671,
      1673,
      1675,
      1677,
      1679,
      1681,
      1685,
      1687,
      1691
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busday_offset": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1479
     ]
    },
    "assert_equal": {
     "line number": [
      1446,
      1450,
      1453,
      1458,
      1460,
      1462,
      1464,
      1466,
      1468,
      1470,
      1472,
      1475,
      1482,
      1484,
      1486,
      1488
     ]
    },
    "assert_raises": {
     "line number": [
      1479
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1447,
      1448,
      1451,
      1452,
      1454,
      1455,
      1458,
      1459,
      1460,
      1461,
      1462,
      1463,
      1464,
      1465,
      1466,
      1467,
      1468,
      1469,
      1470,
      1471,
      1473,
      1474,
      1476,
      1477,
      1479,
      1482,
      1483,
      1484,
      1485,
      1486,
      1487,
      1488,
      1489
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busdaycalendar": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1515,
      1517,
      1519,
      1521,
      1522,
      1523
     ]
    },
    "assert_equal": {
     "line number": [
      1497,
      1500,
      1504,
      1508,
      1512
     ]
    },
    "assert_raises": {
     "line number": [
      1515,
      1517,
      1519,
      1521,
      1522,
      1523
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1494,
      1498,
      1500,
      1503,
      1504,
      1507,
      1508,
      1511,
      1512,
      1515,
      1517,
      1519,
      1521,
      1522,
      1523
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_casting_rules": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      61,
      62,
      63,
      64,
      67,
      68,
      71,
      72,
      75,
      76,
      79,
      80,
      82,
      83,
      86,
      87,
      89,
      90,
      92,
      93,
      95,
      96,
      98,
      99,
      101,
      102,
      105,
      106,
      108,
      110
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      61,
      62,
      63,
      64,
      67,
      68,
      71,
      72,
      75,
      76,
      79,
      80,
      82,
      83,
      86,
      87,
      89,
      90,
      92,
      93,
      95,
      96,
      98,
      99,
      101,
      102,
      105,
      106,
      108,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_compare": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1007,
      1008,
      1009,
      1010,
      1011,
      1012
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1000,
      1001,
      1007,
      1008,
      1009,
      1010,
      1011,
      1012
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_divide": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      980,
      982,
      984,
      986,
      988,
      990,
      992,
      994,
      996
     ]
    },
    "assert_equal": {
     "line number": [
      965,
      966,
      968,
      969,
      971,
      972,
      973,
      974,
      975,
      976,
      977
     ]
    },
    "assert_raises": {
     "line number": [
      980,
      982,
      984,
      986,
      988,
      990,
      992,
      994,
      996
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      953,
      954,
      955,
      956,
      957,
      959,
      960,
      961,
      962,
      963,
      966,
      969,
      972,
      973,
      975,
      980,
      982,
      984,
      986,
      988,
      990,
      992,
      994,
      996
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_dtype_creation": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      53,
      54,
      55,
      56,
      57
     ]
    },
    "TypeError": {
     "line number": [
      49,
      50,
      51,
      52
     ]
    },
    "assert_": {
     "line number": [
      24,
      26,
      34,
      36,
      38,
      42,
      44,
      46
     ]
    },
    "assert_equal": {
     "line number": [
      29,
      32,
      33,
      40,
      41
     ]
    },
    "assert_raises": {
     "line number": [
      49,
      50,
      51,
      52
     ]
    },
    "assert_warns": {
     "line number": [
      53,
      54,
      55,
      56,
      57
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      23,
      24,
      25,
      26,
      29,
      32,
      32,
      33,
      33,
      34,
      34,
      35,
      35,
      36,
      36,
      37,
      37,
      38,
      38,
      40,
      40,
      41,
      41,
      42,
      42,
      43,
      43,
      44,
      44,
      45,
      45,
      46,
      46,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57
     ]
    },
    "str": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_is_busday": {
  "data": {
   "lineno": 1729,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1738,
      1739,
      1740,
      1743
     ]
    },
    "len": {
     "line number": [
      1744
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1735,
      1738,
      1739,
      1740,
      1743,
      1744
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_like": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      722,
      723,
      724,
      725,
      726,
      727
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      719,
      720,
      722,
      723,
      724,
      725,
      726,
      727
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_maximum_reduce": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1435,
      1436,
      1440,
      1441
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1434,
      1435,
      1435,
      1436,
      1437,
      1439,
      1440,
      1440,
      1441,
      1442
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_minmax": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1064,
      1065,
      1066,
      1067
     ]
    },
    "assert_equal": {
     "line number": [
      1019,
      1020,
      1021,
      1022,
      1023,
      1024,
      1025,
      1026,
      1029,
      1034,
      1035,
      1036,
      1037,
      1042,
      1043,
      1044,
      1045,
      1046,
      1047,
      1048,
      1049,
      1052
     ]
    },
    "assert_raises": {
     "line number": [
      1064,
      1065,
      1066,
      1067
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1017,
      1018,
      1019,
      1020,
      1020,
      1021,
      1022,
      1022,
      1023,
      1024,
      1024,
      1025,
      1026,
      1026,
      1029,
      1032,
      1033,
      1034,
      1035,
      1036,
      1037,
      1040,
      1041,
      1042,
      1043,
      1043,
      1044,
      1045,
      1045,
      1046,
      1047,
      1047,
      1048,
      1049,
      1049,
      1052,
      1058,
      1059,
      1064,
      1065,
      1066,
      1067
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_multiply": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      935,
      937,
      939,
      941,
      943,
      945,
      947
     ]
    },
    "assert_equal": {
     "line number": [
      922,
      923,
      925,
      926,
      928,
      929,
      931,
      932
     ]
    },
    "assert_raises": {
     "line number": [
      935,
      937,
      939,
      941,
      943,
      945,
      947
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      912,
      913,
      914,
      915,
      917,
      918,
      919,
      920,
      923,
      926,
      929,
      932,
      935,
      937,
      939,
      941,
      943,
      945,
      947
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_nat_casting": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      383,
      384,
      385,
      386,
      387,
      390,
      391,
      392,
      393,
      394,
      397,
      398,
      399,
      400,
      401
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      379,
      380,
      383,
      384,
      385,
      386,
      387,
      390,
      390,
      391,
      391,
      392,
      392,
      393,
      393,
      394,
      394,
      397,
      397,
      398,
      398,
      399,
      399,
      400,
      400,
      401,
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_scalar_construction": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      171,
      172,
      173,
      174,
      176,
      177,
      178,
      179,
      180
     ]
    },
    "ValueError": {
     "line number": [
      138
     ]
    },
    "assert_equal": {
     "line number": [
      114,
      116,
      120,
      123,
      124,
      126,
      127,
      131,
      134,
      135,
      145,
      146,
      148,
      149,
      151,
      152,
      154,
      155,
      157,
      158,
      161,
      163,
      166
     ]
    },
    "assert_raises": {
     "line number": [
      138,
      171,
      172,
      173,
      174,
      176,
      177,
      178,
      179,
      180
     ]
    },
    "numpy.core.tests.test_datetime.datetime": {
     "line number": [
      162,
      164,
      167,
      174,
      181
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      114,
      115,
      116,
      117,
      120,
      120,
      123,
      124,
      126,
      127,
      131,
      131,
      134,
      134,
      135,
      135,
      138,
      142,
      143,
      145,
      146,
      148,
      149,
      149,
      151,
      152,
      152,
      154,
      155,
      155,
      157,
      158,
      158,
      161,
      162,
      163,
      164,
      166,
      167,
      171,
      172,
      173,
      174,
      176,
      177,
      178,
      179,
      180
     ]
    },
    "repr": {
     "line number": [
      124,
      127
     ]
    },
    "str": {
     "line number": [
      123,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_string_conversion": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      496,
      497,
      499,
      501,
      503,
      510,
      511,
      513,
      515,
      517
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      490,
      491,
      492,
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_subtract": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      902,
      904,
      906
     ]
    },
    "assert_equal": {
     "line number": [
      857,
      858,
      859,
      860,
      862,
      863,
      865,
      866,
      868,
      869,
      871,
      872,
      874,
      875,
      876,
      878,
      879,
      880,
      882,
      883,
      884,
      887,
      888,
      892,
      894,
      896,
      898
     ]
    },
    "assert_raises": {
     "line number": [
      902,
      904,
      906
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      837,
      838,
      839,
      840,
      841,
      842,
      843,
      844,
      845,
      847,
      848,
      849,
      850,
      851,
      852,
      853,
      854,
      855,
      858,
      860,
      863,
      866,
      869,
      872,
      876,
      880,
      884,
      887,
      888,
      889,
      892,
      893,
      894,
      895,
      896,
      897,
      898,
      899,
      902,
      904,
      906
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_unary": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      761
     ]
    },
    "assert_equal": {
     "line number": [
      745,
      746,
      747,
      748,
      751,
      752,
      755,
      756,
      757,
      758
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      733,
      734,
      735,
      736,
      737,
      739,
      740,
      741,
      742,
      743,
      747,
      748,
      751,
      752,
      755,
      756,
      757,
      758
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_y2038": {
  "data": {
   "lineno": 1746,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1749,
      1751,
      1756,
      1758,
      1762
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1748,
      1749,
      1750,
      1751,
      1755,
      1756,
      1757,
      1758,
      1761
     ]
    },
    "str": {
     "line number": [
      1762
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_days_creation": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      404,
      406,
      408,
      410,
      412,
      414,
      415,
      416,
      417,
      418,
      419,
      420,
      421,
      422,
      424,
      426,
      428,
      431,
      433,
      435,
      437,
      439
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      404,
      406,
      408,
      410,
      412,
      414,
      415,
      416,
      417,
      418,
      419,
      420,
      421,
      422,
      424,
      426,
      428,
      431,
      433,
      435,
      437,
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_days_to_pydate": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      443,
      445,
      447,
      449,
      451,
      453,
      455,
      457,
      459,
      461
     ]
    },
    "numpy.core.tests.test_datetime.datetime": {
     "line number": [
      444,
      446,
      448,
      450,
      452,
      454,
      456,
      458,
      460,
      462
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      443,
      445,
      447,
      449,
      451,
      453,
      455,
      457,
      459,
      461
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_different_unit_comparison": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      716
     ]
    },
    "assert_": {
     "line number": [
      703,
      706
     ]
    },
    "assert_equal": {
     "line number": [
      661,
      663,
      665,
      667,
      669,
      671,
      673,
      675,
      682,
      684,
      686,
      688,
      690,
      692,
      694,
      696
     ]
    },
    "assert_raises": {
     "line number": [
      716
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      658,
      660,
      661,
      662,
      663,
      664,
      665,
      666,
      667,
      668,
      669,
      670,
      671,
      672,
      673,
      674,
      675,
      676,
      679,
      681,
      682,
      683,
      684,
      685,
      686,
      687,
      688,
      689,
      690,
      691,
      692,
      693,
      694,
      695,
      696,
      697,
      700,
      702,
      703,
      703,
      704,
      706,
      706,
      707,
      713,
      714,
      716
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_as": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1111
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_day": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1090,
      1091,
      1092
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1090,
      1090,
      1091,
      1091,
      1092,
      1092
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_fs": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1108
     ]
    },
    "assert_": {
     "line number": [
      1107
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1107,
      1107,
      1108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_hour": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1095,
      1096
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1095,
      1095,
      1096,
      1096
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_minute": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1099,
      1100
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1099,
      1099,
      1100,
      1100
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_month": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1080,
      1081,
      1082
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1080,
      1080,
      1081,
      1081,
      1082,
      1082
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_second": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1103,
      1104
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1103,
      1103,
      1104,
      1104
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_week": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1085,
      1086,
      1087
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1085,
      1085,
      1086,
      1086,
      1087,
      1087
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_year": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1075,
      1076,
      1077
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1075,
      1075,
      1076,
      1076,
      1077,
      1077
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_dtype_comparison": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      465,
      466,
      467,
      468
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      465,
      465,
      466,
      466,
      467,
      467,
      468,
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_dtype_promotion": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      590,
      592
     ]
    },
    "TypeError": {
     "line number": [
      585,
      587
     ]
    },
    "assert_equal": {
     "line number": [
      566,
      569,
      572,
      575,
      578,
      581
     ]
    },
    "assert_raises": {
     "line number": [
      585,
      587,
      590,
      592
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      567,
      567,
      567,
      568,
      570,
      570,
      570,
      571,
      573,
      573,
      573,
      574,
      576,
      576,
      576,
      577,
      579,
      579,
      579,
      580,
      582,
      582,
      582,
      583,
      585,
      586,
      586,
      587,
      588,
      588,
      590,
      591,
      591,
      592,
      593,
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_hours": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1072
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1070
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_month_truncation": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      644,
      646,
      648,
      650,
      652
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      644,
      645,
      646,
      647,
      648,
      649,
      650,
      651,
      652,
      653
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_pickle": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      536,
      538,
      544,
      548,
      552
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      544,
      548,
      552
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      535,
      537,
      544,
      548,
      552
     ]
    },
    "numpy.core.tests.test_datetime.pickle": {
     "line number": [
      536,
      536,
      538,
      538,
      544,
      548,
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_pydatetime_creation": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      485
     ]
    },
    "assert_equal": {
     "line number": [
      472,
      474,
      476,
      479
     ]
    },
    "assert_raises": {
     "line number": [
      485
     ]
    },
    "numpy.core.tests.test_datetime.datetime": {
     "line number": [
      471,
      473,
      475,
      478,
      485
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      471,
      473,
      475,
      478,
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_pyobject_roundtrip": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      623,
      639
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      607,
      609
     ]
    },
    "object": {
     "line number": [
      623,
      639
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_setstate": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      559
     ]
    },
    "ValueError": {
     "line number": [
      557
     ]
    },
    "assert_raises": {
     "line number": [
      557,
      559
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      556,
      558,
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_string_parser_error_check": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1136,
      1138,
      1140,
      1142,
      1143,
      1145,
      1146,
      1148,
      1150,
      1152,
      1153,
      1154,
      1155,
      1156,
      1157,
      1158,
      1159,
      1160,
      1161,
      1162,
      1163,
      1164,
      1165,
      1166,
      1168,
      1170,
      1174,
      1176,
      1178,
      1180,
      1182,
      1185,
      1188,
      1190,
      1193,
      1196,
      1198,
      1201,
      1203,
      1205,
      1207,
      1209
     ]
    },
    "assert_raises": {
     "line number": [
      1136,
      1138,
      1140,
      1142,
      1143,
      1145,
      1146,
      1148,
      1150,
      1152,
      1153,
      1154,
      1155,
      1156,
      1157,
      1158,
      1159,
      1160,
      1161,
      1162,
      1163,
      1164,
      1165,
      1166,
      1168,
      1170,
      1174,
      1176,
      1178,
      1180,
      1182,
      1185,
      1188,
      1190,
      1193,
      1196,
      1198,
      1201,
      1203,
      1205,
      1207,
      1209
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1136,
      1136,
      1138,
      1138,
      1140,
      1140,
      1142,
      1142,
      1143,
      1143,
      1145,
      1145,
      1146,
      1146,
      1148,
      1148,
      1150,
      1150,
      1152,
      1152,
      1153,
      1153,
      1154,
      1154,
      1155,
      1155,
      1156,
      1156,
      1157,
      1157,
      1158,
      1158,
      1159,
      1159,
      1160,
      1160,
      1161,
      1161,
      1162,
      1162,
      1163,
      1163,
      1164,
      1164,
      1165,
      1165,
      1166,
      1166,
      1168,
      1169,
      1170,
      1171,
      1174,
      1175,
      1176,
      1177,
      1178,
      1179,
      1180,
      1181,
      1182,
      1183,
      1185,
      1186,
      1188,
      1189,
      1190,
      1191,
      1193,
      1194,
      1196,
      1197,
      1198,
      1199,
      1201,
      1202,
      1203,
      1204,
      1205,
      1206,
      1207,
      1208,
      1209,
      1210
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_string_parser_variants": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1115,
      1118,
      1121,
      1124,
      1126,
      1128,
      1130
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1115,
      1115,
      1116,
      1116,
      1118,
      1118,
      1119,
      1119,
      1121,
      1121,
      1122,
      1122,
      1124,
      1124,
      1125,
      1125,
      1126,
      1126,
      1127,
      1127,
      1128,
      1128,
      1129,
      1129,
      1130,
      1131
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_arange": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1428,
      1430
     ]
    },
    "ValueError": {
     "line number": [
      1425
     ]
    },
    "assert_equal": {
     "line number": [
      1417,
      1418,
      1421,
      1422
     ]
    },
    "assert_raises": {
     "line number": [
      1425,
      1428,
      1430
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1416,
      1417,
      1418,
      1418,
      1420,
      1420,
      1421,
      1422,
      1422,
      1425,
      1425,
      1426,
      1428,
      1428,
      1429,
      1430,
      1430,
      1431
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_scalar_construction": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      281,
      282,
      284,
      285,
      287,
      288
     ]
    },
    "assert_equal": {
     "line number": [
      215,
      217,
      221,
      224,
      227,
      228,
      230,
      231,
      233,
      237,
      244,
      245,
      247,
      248,
      250,
      251,
      253,
      254,
      256,
      257,
      260,
      262,
      264,
      267,
      270,
      272,
      274,
      276
     ]
    },
    "assert_raises": {
     "line number": [
      281,
      282,
      284,
      285,
      287,
      288
     ]
    },
    "numpy.core.tests.test_datetime.datetime": {
     "line number": [
      261,
      263,
      265,
      268,
      271,
      273,
      275,
      277
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      215,
      216,
      217,
      218,
      221,
      221,
      224,
      224,
      227,
      228,
      230,
      231,
      233,
      237,
      237,
      241,
      242,
      244,
      245,
      247,
      248,
      248,
      250,
      251,
      251,
      253,
      254,
      254,
      256,
      257,
      257,
      260,
      261,
      262,
      263,
      264,
      265,
      267,
      268,
      270,
      271,
      272,
      273,
      274,
      275,
      276,
      277,
      280,
      281,
      282,
      283,
      284,
      285,
      286,
      287,
      288
     ]
    },
    "repr": {
     "line number": [
      228,
      231,
      233
     ]
    },
    "str": {
     "line number": [
      227,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_scalar_construction_units": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      366,
      367,
      368,
      374,
      375,
      376
     ]
    },
    "assert_equal": {
     "line number": [
      292,
      294,
      296,
      298,
      300,
      302,
      305,
      307,
      309,
      312,
      314,
      316,
      319,
      321,
      323,
      326,
      328,
      330,
      333,
      336,
      339,
      343,
      346,
      349,
      354,
      358,
      363,
      371
     ]
    },
    "assert_raises": {
     "line number": [
      366,
      367,
      368,
      374,
      375,
      376
     ]
    },
    "numpy.core.tests.test_datetime.datetime": {
     "line number": [
      354,
      359
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      292,
      293,
      294,
      295,
      296,
      297,
      298,
      299,
      300,
      301,
      302,
      303,
      305,
      306,
      307,
      308,
      309,
      310,
      312,
      313,
      314,
      315,
      316,
      317,
      319,
      320,
      321,
      322,
      323,
      324,
      326,
      327,
      328,
      329,
      330,
      331,
      333,
      335,
      336,
      338,
      339,
      341,
      343,
      345,
      346,
      348,
      349,
      351,
      354,
      355,
      358,
      360,
      363,
      364,
      366,
      367,
      368,
      371,
      372,
      374,
      375,
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTimeData": {
  "data": {
   "lineno": 1764
  },
  "type": "class"
 },
 "numpy.core.tests.test_datetime.TestDateTimeData.test_basic": {
  "data": {
   "lineno": 1766,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1768
     ]
    },
    "numpy.core.tests.test_datetime.numpy": {
     "line number": [
      1767,
      1767,
      1768
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime._has_pytz": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.core.tests.test_datetime.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.tz": {
  "data": {
   "shadows": "pytz.timezone"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      641
     ]
    },
    "run_module_suite": {
     "line number": [
      642
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_defchararray.TestBasic": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_object_array": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      20
     ]
    },
    "assert_equal": {
     "line number": [
      19
     ]
    },
    "numpy.array": {
     "line number": [
      16
     ]
    },
    "numpy.char.array": {
     "line number": [
      18
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_object_array_unicode": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      26
     ]
    },
    "assert_array_equal": {
     "line number": [
      29
     ]
    },
    "assert_equal": {
     "line number": [
      28
     ]
    },
    "numpy.array": {
     "line number": [
      24,
      28
     ]
    },
    "numpy.char.array": {
     "line number": [
      26,
      27
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      24,
      29
     ]
    },
    "numpy.core.tests.test_defchararray.kw_unicode_true": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_string": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      74
     ]
    },
    "assert_equal": {
     "line number": [
      72,
      73
     ]
    },
    "issubclass": {
     "line number": [
      74
     ]
    },
    "len": {
     "line number": [
      72,
      73
     ]
    },
    "numpy.char.array": {
     "line number": [
      71
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      71
     ]
    },
    "numpy.string_": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_string_array": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      41,
      46,
      47
     ]
    },
    "assert_array_equal": {
     "line number": [
      37,
      43
     ]
    },
    "assert_equal": {
     "line number": [
      35,
      38,
      39,
      44
     ]
    },
    "numpy.array": {
     "line number": [
      33
     ]
    },
    "numpy.char.array": {
     "line number": [
      36
     ]
    },
    "numpy.char.asarray": {
     "line number": [
      42
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      33
     ]
    },
    "numpy.string_": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      81
     ]
    },
    "assert_equal": {
     "line number": [
      78,
      79,
      80
     ]
    },
    "issubclass": {
     "line number": [
      81
     ]
    },
    "len": {
     "line number": [
      78,
      79
     ]
    },
    "numpy.char.array": {
     "line number": [
      77
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      77
     ]
    },
    "numpy.unicode_": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode_array": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "UnicodeEncodeError": {
     "line number": [
      63
     ]
    },
    "assert_array_equal": {
     "line number": [
      54,
      58
     ]
    },
    "assert_equal": {
     "line number": [
      52,
      55,
      56,
      59,
      60
     ]
    },
    "numpy.array": {
     "line number": [
      50
     ]
    },
    "numpy.char.array": {
     "line number": [
      53,
      57
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      50
     ]
    },
    "numpy.core.tests.test_defchararray.kw_unicode_true": {
     "line number": [
      57
     ]
    },
    "numpy.unicode_": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode_array.fail": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.char.array": {
     "line number": [
      62
     ]
    },
    "numpy.core.tests.test_defchararray.kw_unicode_false": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_unicode_upconvert": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      68
     ]
    },
    "issubclass": {
     "line number": [
      68
     ]
    },
    "numpy.char.array": {
     "line number": [
      66,
      67
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      67
     ]
    },
    "numpy.unicode_": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestChar": {
  "data": {
   "lineno": 135
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestChar.setUp": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      137
     ]
    },
    "numpy.chararray": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestChar.test_it": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      140,
      141
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.setUp": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      145,
      147
     ]
    },
    "numpy.chararray": {
     "line number": [
      146,
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_equal": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_greater": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_greater_equal": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_less": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_less_equal": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_not_equal": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed1": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "numpy.core.tests.test_defchararray.TestComparisons": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed1.setUp": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      173
     ]
    },
    "numpy.chararray": {
     "line number": [
      174
     ]
    },
    "numpy.core.tests.test_defchararray.TestComparisons": {
     "line number": [
      172
     ]
    },
    "numpy.unicode_": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed2": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "numpy.core.tests.test_defchararray.TestComparisons": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed2.setUp": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      181
     ]
    },
    "numpy.chararray": {
     "line number": [
      182
     ]
    },
    "numpy.core.tests.test_defchararray.TestComparisons": {
     "line number": [
      180
     ]
    },
    "numpy.unicode_": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation": {
  "data": {
   "lineno": 184
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestInformation.setUp": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      186,
      189
     ]
    },
    "numpy.chararray": {
     "line number": [
      188,
      191
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      189,
      189,
      190,
      190,
      191,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_count": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      199
     ]
    },
    "assert_array_equal": {
     "line number": [
      200,
      201,
      204,
      205,
      206
     ]
    },
    "issubclass": {
     "line number": [
      199
     ]
    },
    "numpy.integer": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_endswith": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      215
     ]
    },
    "assert_": {
     "line number": [
      210
     ]
    },
    "assert_array_equal": {
     "line number": [
      211,
      212
     ]
    },
    "issubclass": {
     "line number": [
      210
     ]
    },
    "numpy.bool_": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_endswith.fail": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_find": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      218
     ]
    },
    "assert_array_equal": {
     "line number": [
      219,
      220,
      221,
      222
     ]
    },
    "issubclass": {
     "line number": [
      218
     ]
    },
    "numpy.integer": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_index": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      227
     ]
    },
    "assert_": {
     "line number": [
      228,
      229
     ]
    },
    "issubclass": {
     "line number": [
      229
     ]
    },
    "numpy.char.index": {
     "line number": [
      228,
      229
     ]
    },
    "numpy.integer": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_index.fail": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isalnum": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      232
     ]
    },
    "assert_array_equal": {
     "line number": [
      233
     ]
    },
    "issubclass": {
     "line number": [
      232
     ]
    },
    "numpy.bool_": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isalpha": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      236
     ]
    },
    "assert_array_equal": {
     "line number": [
      237
     ]
    },
    "issubclass": {
     "line number": [
      236
     ]
    },
    "numpy.bool_": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isdigit": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      240
     ]
    },
    "assert_array_equal": {
     "line number": [
      241
     ]
    },
    "issubclass": {
     "line number": [
      240
     ]
    },
    "numpy.bool_": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_islower": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      244
     ]
    },
    "assert_array_equal": {
     "line number": [
      245
     ]
    },
    "issubclass": {
     "line number": [
      244
     ]
    },
    "numpy.bool_": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isspace": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      248
     ]
    },
    "assert_array_equal": {
     "line number": [
      249
     ]
    },
    "issubclass": {
     "line number": [
      248
     ]
    },
    "numpy.bool_": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_istitle": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      252
     ]
    },
    "assert_array_equal": {
     "line number": [
      253
     ]
    },
    "issubclass": {
     "line number": [
      252
     ]
    },
    "numpy.bool_": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isupper": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      256
     ]
    },
    "assert_array_equal": {
     "line number": [
      257
     ]
    },
    "issubclass": {
     "line number": [
      256
     ]
    },
    "numpy.bool_": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_len": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      194
     ]
    },
    "assert_array_equal": {
     "line number": [
      195,
      196
     ]
    },
    "issubclass": {
     "line number": [
      194
     ]
    },
    "numpy.char.str_len": {
     "line number": [
      194,
      195,
      196
     ]
    },
    "numpy.integer": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rfind": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      260
     ]
    },
    "assert_array_equal": {
     "line number": [
      261,
      262,
      263,
      264
     ]
    },
    "issubclass": {
     "line number": [
      260
     ]
    },
    "numpy.integer": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rindex": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      269
     ]
    },
    "assert_": {
     "line number": [
      270,
      271
     ]
    },
    "issubclass": {
     "line number": [
      271
     ]
    },
    "numpy.char.rindex": {
     "line number": [
      270,
      271
     ]
    },
    "numpy.integer": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rindex.fail": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_startswith": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      279
     ]
    },
    "assert_": {
     "line number": [
      274
     ]
    },
    "assert_array_equal": {
     "line number": [
      275,
      276
     ]
    },
    "issubclass": {
     "line number": [
      274
     ]
    },
    "numpy.bool_": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_startswith.fail": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods": {
  "data": {
   "lineno": 282
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestMethods.setUp": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      284,
      288
     ]
    },
    "numpy.chararray": {
     "line number": [
      287,
      290
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      288,
      288,
      289,
      289,
      290,
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_capitalize": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      293,
      298
     ]
    },
    "assert_array_equal": {
     "line number": [
      294,
      299
     ]
    },
    "issubclass": {
     "line number": [
      293,
      298
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      294
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      300
     ]
    },
    "numpy.string_": {
     "line number": [
      293
     ]
    },
    "numpy.unicode_": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_center": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      305,
      310,
      311,
      313
     ]
    },
    "assert_array_equal": {
     "line number": [
      308,
      314
     ]
    },
    "issubclass": {
     "line number": [
      305,
      313
     ]
    },
    "numpy.all": {
     "line number": [
      310,
      311
     ]
    },
    "numpy.array": {
     "line number": [
      306
     ]
    },
    "numpy.char.center": {
     "line number": [
      312
     ]
    },
    "numpy.char.str_len": {
     "line number": [
      308
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      309,
      310,
      311,
      312
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      314
     ]
    },
    "numpy.string_": {
     "line number": [
      305,
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_decode": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      321,
      324
     ]
    },
    "numpy.char.array": {
     "line number": [
      320,
      323
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      320
     ]
    },
    "numpy.core.tests.test_defchararray.sys": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_encode": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      328
     ]
    },
    "str": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_expandtabs": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      332
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isdecimal": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      549
     ]
    },
    "assert_": {
     "line number": [
      550
     ]
    },
    "assert_array_equal": {
     "line number": [
      551
     ]
    },
    "issubclass": {
     "line number": [
      550
     ]
    },
    "numpy.bool_": {
     "line number": [
      550
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isdecimal.fail": {
  "data": {
   "lineno": 547
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isnumeric": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      541
     ]
    },
    "assert_": {
     "line number": [
      542
     ]
    },
    "assert_array_equal": {
     "line number": [
      543
     ]
    },
    "issubclass": {
     "line number": [
      542
     ]
    },
    "numpy.bool_": {
     "line number": [
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isnumeric.fail": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_join": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      344,
      346
     ]
    },
    "assert_array_equal": {
     "line number": [
      347
     ]
    },
    "issubclass": {
     "line number": [
      344,
      346
     ]
    },
    "numpy.char.join": {
     "line number": [
      342,
      347
     ]
    },
    "numpy.core.tests.test_defchararray.sys": {
     "line number": [
      335,
      343
     ]
    },
    "numpy.string_": {
     "line number": [
      346
     ]
    },
    "numpy.unicode_": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_ljust": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      354,
      361,
      363
     ]
    },
    "assert_array_equal": {
     "line number": [
      357,
      359,
      364
     ]
    },
    "issubclass": {
     "line number": [
      354,
      363
     ]
    },
    "numpy.all": {
     "line number": [
      361
     ]
    },
    "numpy.array": {
     "line number": [
      355
     ]
    },
    "numpy.char.ljust": {
     "line number": [
      362
     ]
    },
    "numpy.char.str_len": {
     "line number": [
      357
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      358,
      359,
      361,
      362
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      364
     ]
    },
    "numpy.string_": {
     "line number": [
      354,
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_lower": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      369,
      374
     ]
    },
    "assert_array_equal": {
     "line number": [
      370,
      375
     ]
    },
    "issubclass": {
     "line number": [
      369,
      374
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      370
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      376,
      376,
      377,
      377,
      378,
      378
     ]
    },
    "numpy.string_": {
     "line number": [
      369
     ]
    },
    "numpy.unicode_": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_lstrip": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      381,
      391
     ]
    },
    "assert_array_equal": {
     "line number": [
      382,
      386,
      392
     ]
    },
    "issubclass": {
     "line number": [
      381,
      391
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      382,
      386,
      387
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      393
     ]
    },
    "numpy.string_": {
     "line number": [
      381
     ]
    },
    "numpy.unicode_": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_partition": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      399
     ]
    },
    "assert_array_equal": {
     "line number": [
      400
     ]
    },
    "issubclass": {
     "line number": [
      399
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      398,
      400
     ]
    },
    "numpy.string_": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_replace": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      408,
      417
     ]
    },
    "assert_array_equal": {
     "line number": [
      409,
      418
     ]
    },
    "issubclass": {
     "line number": [
      408,
      417
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      416
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      406,
      407,
      409
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      416,
      419,
      420
     ]
    },
    "numpy.core.tests.test_defchararray.sys": {
     "line number": [
      414
     ]
    },
    "numpy.string_": {
     "line number": [
      408
     ]
    },
    "numpy.unicode_": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rjust": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      424,
      429,
      433
     ]
    },
    "assert_array_equal": {
     "line number": [
      427,
      430,
      434
     ]
    },
    "issubclass": {
     "line number": [
      424,
      433
     ]
    },
    "numpy.all": {
     "line number": [
      429
     ]
    },
    "numpy.array": {
     "line number": [
      425
     ]
    },
    "numpy.char.rjust": {
     "line number": [
      432
     ]
    },
    "numpy.char.str_len": {
     "line number": [
      427
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      428,
      429,
      430,
      432
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      434
     ]
    },
    "numpy.string_": {
     "line number": [
      424,
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rpartition": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      440
     ]
    },
    "assert_array_equal": {
     "line number": [
      441
     ]
    },
    "issubclass": {
     "line number": [
      440
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      439,
      441
     ]
    },
    "numpy.string_": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rsplit": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      448
     ]
    },
    "assert_equal": {
     "line number": [
      449
     ]
    },
    "issubclass": {
     "line number": [
      448
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      447
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      449
     ]
    },
    "numpy.object_": {
     "line number": [
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rstrip": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      455,
      465
     ]
    },
    "assert_array_equal": {
     "line number": [
      456,
      460,
      466
     ]
    },
    "issubclass": {
     "line number": [
      455,
      465
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      456,
      460,
      461
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      467
     ]
    },
    "numpy.string_": {
     "line number": [
      455
     ]
    },
    "numpy.unicode_": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_split": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      490
     ]
    },
    "assert_equal": {
     "line number": [
      491
     ]
    },
    "issubclass": {
     "line number": [
      490
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      489
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      491
     ]
    },
    "numpy.object_": {
     "line number": [
      490
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_splitlines": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      498,
      499,
      500
     ]
    },
    "issubclass": {
     "line number": [
      498
     ]
    },
    "len": {
     "line number": [
      500
     ]
    },
    "numpy.char.array": {
     "line number": [
      497
     ]
    },
    "numpy.object_": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_strip": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      472,
      482
     ]
    },
    "assert_array_equal": {
     "line number": [
      473,
      477,
      483
     ]
    },
    "issubclass": {
     "line number": [
      472,
      482
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      473,
      477,
      478
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      484
     ]
    },
    "numpy.string_": {
     "line number": [
      472
     ]
    },
    "numpy.unicode_": {
     "line number": [
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_swapcase": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      503,
      508
     ]
    },
    "assert_array_equal": {
     "line number": [
      504,
      509
     ]
    },
    "issubclass": {
     "line number": [
      503,
      508
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      504
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      510,
      510,
      511,
      511,
      512,
      512
     ]
    },
    "numpy.string_": {
     "line number": [
      503
     ]
    },
    "numpy.unicode_": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_title": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      515,
      520
     ]
    },
    "assert_array_equal": {
     "line number": [
      516,
      521
     ]
    },
    "issubclass": {
     "line number": [
      515,
      520
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      516
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      522,
      522,
      523,
      523,
      524,
      524
     ]
    },
    "numpy.string_": {
     "line number": [
      515
     ]
    },
    "numpy.unicode_": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_upper": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      527,
      532
     ]
    },
    "assert_array_equal": {
     "line number": [
      528,
      533
     ]
    },
    "issubclass": {
     "line number": [
      527,
      532
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      528
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      534,
      534,
      535,
      535,
      536,
      536
     ]
    },
    "numpy.string_": {
     "line number": [
      527
     ]
    },
    "numpy.unicode_": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations": {
  "data": {
   "lineno": 555
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestOperations.setUp": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      557,
      559
     ]
    },
    "numpy.chararray": {
     "line number": [
      558,
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_add": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      566
     ]
    },
    "assert_array_equal": {
     "line number": [
      565
     ]
    },
    "len": {
     "line number": [
      566
     ]
    },
    "numpy.array": {
     "line number": [
      563
     ]
    },
    "numpy.chararray": {
     "line number": [
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_mod": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      610,
      614,
      617
     ]
    },
    "numpy.array": {
     "line number": [
      606,
      607,
      608,
      612,
      613,
      616
     ]
    },
    "numpy.chararray": {
     "line number": [
      606,
      609,
      612,
      613,
      616
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_mul": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      584
     ]
    },
    "assert_array_equal": {
     "line number": [
      579
     ]
    },
    "numpy.array": {
     "line number": [
      576
     ]
    },
    "numpy.chararray": {
     "line number": [
      577
     ]
    },
    "object": {
     "line number": [
      581
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_radd": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      571
     ]
    },
    "numpy.array": {
     "line number": [
      569
     ]
    },
    "numpy.chararray": {
     "line number": [
      570
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_rmod": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      626
     ]
    },
    "assert_": {
     "line number": [
      620,
      621
     ]
    },
    "object": {
     "line number": [
      623
     ]
    },
    "repr": {
     "line number": [
      621
     ]
    },
    "str": {
     "line number": [
      620
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_rmul": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      599
     ]
    },
    "assert_array_equal": {
     "line number": [
      594
     ]
    },
    "numpy.array": {
     "line number": [
      592
     ]
    },
    "numpy.chararray": {
     "line number": [
      593
     ]
    },
    "object": {
     "line number": [
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString": {
  "data": {
   "lineno": 83
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_broadcast_error": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_broadcast_error.fail": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "numpy.core.multiarray._vec_string": {
     "line number": [
      116
     ]
    },
    "numpy.integer": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_args_tuple": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_args_tuple.fail": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "numpy.core.multiarray._vec_string": {
     "line number": [
      96
     ]
    },
    "numpy.string_": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_function_args": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_function_args.fail": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.core.multiarray._vec_string": {
     "line number": [
      106
     ]
    },
    "numpy.string_": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_result_type": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_result_type.fail": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.core.multiarray._vec_string": {
     "line number": [
      111
     ]
    },
    "numpy.integer": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_type_descr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_type_descr.fail": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "numpy.core.multiarray._vec_string": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_existent_method": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_existent_method.fail": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "numpy.core.multiarray._vec_string": {
     "line number": [
      86
     ]
    },
    "numpy.string_": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_string_array": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_string_array.fail": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "numpy.core.multiarray._vec_string": {
     "line number": [
      91
     ]
    },
    "numpy.string_": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace": {
  "data": {
   "lineno": 120
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace.setUp": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      122,
      124
     ]
    },
    "numpy.chararray": {
     "line number": [
      123,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace.test1": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "all": {
     "line number": [
      128,
      129,
      130,
      131,
      132,
      133
     ]
    },
    "assert_": {
     "line number": [
      128,
      129,
      130,
      131,
      132,
      133
     ]
    },
    "negative": {
     "line number": [
      131,
      132,
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray._vec_string": {
  "data": {
   "shadows": "numpy.core.multiarray._vec_string"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.asbytes_nested": {
  "data": {
   "shadows": "numpy.compat.asbytes_nested"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.kw_unicode_false": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.core.tests.test_defchararray.kw_unicode_true": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.core.tests.test_defchararray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.sixu": {
  "data": {
   "shadows": "numpy.compat.sixu"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.test_empty_indexing": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      638
     ]
    },
    "numpy.chararray": {
     "line number": [
      637
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      291
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_deprecations.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.TestArrayToIndexDeprecation": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "numpy.core.tests.test_deprecations._DeprecationTestCase": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestArrayToIndexDeprecation.test_array_to_index_deprecation": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      282,
      284
     ]
    },
    "numpy.core.tests.test_deprecations.operator": {
     "line number": [
      284
     ]
    },
    "numpy.reshape": {
     "line number": [
      285
     ]
    },
    "numpy.take": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestBooleanArgumentDeprecation": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "numpy.core.tests.test_deprecations._DeprecationTestCase": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestBooleanArgumentDeprecation.test_bool_as_int_argument": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      263,
      264,
      265
     ]
    },
    "TypeError": {
     "line number": [
      261
     ]
    },
    "numpy.array": {
     "line number": [
      255,
      261
     ]
    },
    "numpy.bool_": {
     "line number": [
      258
     ]
    },
    "numpy.core.tests.test_deprecations.operator": {
     "line number": [
      261
     ]
    },
    "numpy.reshape": {
     "line number": [
      257,
      258
     ]
    },
    "numpy.take": {
     "line number": [
      262
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestFloatNonIntegerArgumentDeprecation": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.core.tests.test_deprecations._DeprecationTestCase": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestFloatNonIntegerArgumentDeprecation.test_indexing": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "assert_deprecated": {
     "line number": [
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      161,
      162,
      163,
      164,
      165,
      166,
      167,
      172,
      173
     ]
    },
    "numpy.array": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestFloatNonIntegerArgumentDeprecation.test_indexing.assert_deprecated": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestFloatNonIntegerArgumentDeprecation.test_non_integer_argument_deprecations": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      236,
      239
     ]
    },
    "numpy.float64": {
     "line number": [
      241
     ]
    },
    "numpy.reshape": {
     "line number": [
      238,
      239
     ]
    },
    "numpy.take": {
     "line number": [
      240,
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestFloatNonIntegerArgumentDeprecation.test_slicing": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "assert_deprecated": {
     "line number": [
      193,
      194,
      195,
      196,
      197,
      199,
      200,
      201,
      202,
      203,
      205,
      206,
      207,
      208,
      209,
      211,
      212,
      213,
      214,
      215,
      216,
      218
     ]
    },
    "numpy.array": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestFloatNonIntegerArgumentDeprecation.test_slicing.assert_deprecated": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestFloatNonIntegerArgumentDeprecation.test_valid_indexing": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "assert_not_deprecated": {
     "line number": [
      180,
      181,
      182,
      183,
      184
     ]
    },
    "numpy.array": {
     "line number": [
      177,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestFloatNonIntegerArgumentDeprecation.test_valid_slicing": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "assert_not_deprecated": {
     "line number": [
      223,
      225,
      226,
      227,
      228,
      229,
      230,
      231,
      232
     ]
    },
    "numpy.array": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "object": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.assert_deprecated": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      86,
      89,
      99,
      102
     ]
    },
    "DeprecationWarning": {
     "line number": [
      43,
      83,
      94
     ]
    },
    "Exception": {
     "line number": [
      78
     ]
    },
    "function": {
     "line number": [
      77,
      97
     ]
    },
    "len": {
     "line number": [
      90
     ]
    },
    "numpy.core.tests.test_deprecations.warnings": {
     "line number": [
      92,
      93
     ]
    },
    "tuple": {
     "line number": [
      78,
      98,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.assert_not_deprecated": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "function": {
     "line number": [
      113
     ]
    },
    "tuple": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.setUp": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      32,
      34
     ]
    },
    "numpy.core.tests.test_deprecations.warnings": {
     "line number": [
      23,
      32,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.tearDown": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      480
     ]
    },
    "run_module_suite": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_dtype.TestBuiltin": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_bad_param": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      87,
      93,
      99
     ]
    },
    "assert_raises": {
     "line number": [
      87,
      93,
      99
     ]
    },
    "numpy.dtype": {
     "line number": [
      87,
      93,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_dtype": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.assert_dtype_equal": {
     "line number": [
      34,
      37
     ]
    },
    "numpy.dtype": {
     "line number": [
      29
     ]
    },
    "numpy.float": {
     "line number": [
      28
     ]
    },
    "numpy.int": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_equivalent_dtype_hashing": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      49,
      49
     ]
    },
    "numpy.dtype": {
     "line number": [
      41,
      44,
      47
     ]
    },
    "numpy.uint32": {
     "line number": [
      44
     ]
    },
    "numpy.uintp": {
     "line number": [
      41
     ]
    },
    "numpy.ulonglong": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_invalid_types": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      67,
      69,
      72,
      73,
      75,
      76,
      79,
      80,
      82,
      83
     ]
    },
    "assert_warns": {
     "line number": [
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      67,
      69,
      72,
      73,
      75,
      76,
      79,
      80,
      82,
      83
     ]
    },
    "numpy.dtype": {
     "line number": [
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      66,
      66,
      67,
      68,
      69,
      71,
      72,
      73,
      75,
      76,
      78,
      79,
      80,
      82,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      23
     ]
    },
    "numpy.complex": {
     "line number": [
      20
     ]
    },
    "numpy.dtype": {
     "line number": [
      22
     ]
    },
    "numpy.float": {
     "line number": [
      20
     ]
    },
    "numpy.int": {
     "line number": [
      20
     ]
    },
    "numpy.int32": {
     "line number": [
      20
     ]
    },
    "numpy.object": {
     "line number": [
      20
     ]
    },
    "numpy.str": {
     "line number": [
      20
     ]
    },
    "numpy.unicode": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributeDeletion": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "object": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributeDeletion.test_dtype_non_writable_attributes_deletion": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      467
     ]
    },
    "TypeError": {
     "line number": [
      465
     ]
    },
    "assert_raises": {
     "line number": [
      470
     ]
    },
    "delattr": {
     "line number": [
      470
     ]
    },
    "numpy.core.tests.test_dtype.sys": {
     "line number": [
      464
     ]
    },
    "numpy.double": {
     "line number": [
      459
     ]
    },
    "numpy.dtype": {
     "line number": [
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributeDeletion.test_dtype_writable_attributes_deletion": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      477
     ]
    },
    "assert_raises": {
     "line number": [
      477
     ]
    },
    "delattr": {
     "line number": [
      477
     ]
    },
    "numpy.double": {
     "line number": [
      474
     ]
    },
    "numpy.dtype": {
     "line number": [
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata": {
  "data": {
   "lineno": 311
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_metadata_rejects_nondict": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      321,
      322,
      323
     ]
    },
    "int": {
     "line number": [
      321,
      322,
      323
     ]
    },
    "numpy.dtype": {
     "line number": [
      321,
      322,
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_metadata_takes_dict": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "int": {
     "line number": [
      317
     ]
    },
    "numpy.dtype": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_nested_metadata": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "int": {
     "line number": [
      326
     ]
    },
    "numpy.dtype": {
     "line number": [
      326,
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_no_metadata": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "int": {
     "line number": [
      313
     ]
    },
    "numpy.dtype": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMonsterType": {
  "data": {
   "lineno": 294
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestMonsterType.test1": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.assert_dtype_equal": {
     "line number": [
      303,
      309
     ]
    },
    "numpy.dtype": {
     "line number": [
      297,
      299,
      300,
      301,
      302,
      305,
      306,
      307,
      308
     ]
    },
    "numpy.int": {
     "line number": [
      299,
      300,
      301,
      302,
      305,
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_aligned_size": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      139,
      141,
      145,
      147,
      152,
      158,
      162,
      163,
      164,
      169,
      175,
      179,
      180,
      181
     ]
    },
    "numpy.dtype": {
     "line number": [
      138,
      140,
      142,
      146,
      149,
      153,
      159,
      166,
      170,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_comma_datetime": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      231
     ]
    },
    "numpy.dtype": {
     "line number": [
      230,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_different_names": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.assert_dtype_not_equal": {
     "line number": [
      115
     ]
    },
    "numpy.dtype": {
     "line number": [
      113,
      114
     ]
    },
    "numpy.int": {
     "line number": [
      113,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_different_titles": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.assert_dtype_not_equal": {
     "line number": [
      125
     ]
    },
    "numpy.dtype": {
     "line number": [
      119,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_equivalent_record": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.assert_dtype_equal": {
     "line number": [
      109
     ]
    },
    "numpy.dtype": {
     "line number": [
      107,
      108
     ]
    },
    "numpy.int": {
     "line number": [
      107,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_not_lists": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      131,
      133
     ]
    },
    "dict": {
     "line number": [
      132,
      134
     ]
    },
    "numpy.dtype": {
     "line number": [
      131,
      133
     ]
    },
    "set": {
     "line number": [
      132,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_union_struct": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      208,
      212,
      216,
      220
     ]
    },
    "assert_equal": {
     "line number": [
      187,
      191,
      195,
      203,
      204,
      205,
      206
     ]
    },
    "assert_raises": {
     "line number": [
      208,
      212,
      216,
      220
     ]
    },
    "numpy.array": {
     "line number": [
      188,
      201,
      202
     ]
    },
    "numpy.dtype": {
     "line number": [
      185,
      193,
      196,
      208,
      212,
      216,
      220,
      225,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString": {
  "data": {
   "lineno": 329
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestString.test_base_dtype_with_object_type": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_complex_dtype_repr": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      400,
      410,
      420,
      432,
      440
     ]
    },
    "numpy.dtype": {
     "line number": [
      396,
      406,
      415,
      428,
      439
     ]
    },
    "repr": {
     "line number": [
      400,
      410,
      420,
      432,
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_complex_dtype_str": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      335,
      349,
      358,
      363,
      373,
      384,
      392
     ]
    },
    "eval": {
     "line number": [
      358
     ]
    },
    "numpy.dtype": {
     "line number": [
      331,
      343,
      358,
      360,
      368,
      381,
      391
     ]
    },
    "str": {
     "line number": [
      335,
      349,
      358,
      363,
      373,
      384,
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_dtype_str_with_long_in_shape": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.sys": {
     "line number": [
      443
     ]
    },
    "numpy.dtype": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_empty_string_to_object": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      454
     ]
    },
    "object": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray": {
  "data": {
   "lineno": 235
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_equivalent_record": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.assert_dtype_equal": {
     "line number": [
      248
     ]
    },
    "numpy.dtype": {
     "line number": [
      246,
      247
     ]
    },
    "numpy.int": {
     "line number": [
      246,
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_nonequivalent_record": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.assert_dtype_not_equal": {
     "line number": [
      254,
      258,
      262
     ]
    },
    "numpy.dtype": {
     "line number": [
      252,
      253,
      256,
      257,
      260,
      261
     ]
    },
    "numpy.int": {
     "line number": [
      252,
      253,
      256,
      257,
      260,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_equal": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.assert_dtype_equal": {
     "line number": [
      266,
      267,
      268,
      269,
      271
     ]
    },
    "numpy.dtype": {
     "line number": [
      266,
      266,
      267,
      267,
      268,
      268,
      269,
      269,
      271,
      271
     ]
    },
    "numpy.int": {
     "line number": [
      268,
      268
     ]
    },
    "tuple": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_monster": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.assert_dtype_not_equal": {
     "line number": [
      281,
      284,
      287,
      290
     ]
    },
    "numpy.dtype": {
     "line number": [
      282,
      283,
      285,
      286,
      288,
      289,
      291,
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_simple": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "numpy.core.tests.test_dtype.assert_dtype_not_equal": {
     "line number": [
      275,
      276,
      277
     ]
    },
    "numpy.dtype": {
     "line number": [
      275,
      275,
      276,
      276,
      277,
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_single_subarray": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      241,
      242
     ]
    },
    "numpy.core.tests.test_dtype.assert_dtype_equal": {
     "line number": [
      239
     ]
    },
    "numpy.dtype": {
     "line number": [
      237,
      238
     ]
    },
    "numpy.int": {
     "line number": [
      237,
      238
     ]
    },
    "tuple": {
     "line number": [
      241,
      242
     ]
    },
    "type": {
     "line number": [
      241,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.assert_dtype_equal": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      8,
      9
     ]
    },
    "hash": {
     "line number": [
      9,
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.assert_dtype_not_equal": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      13,
      14
     ]
    },
    "hash": {
     "line number": [
      14,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      535
     ]
    },
    "run_module_suite": {
     "line number": [
      536
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_einsum.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.TestEinSum": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "numpy.core.tests.test_einsum.TestEinSum.check_einsum_sums": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      221,
      221,
      229,
      229,
      236,
      236,
      251,
      251,
      259,
      259,
      266,
      266
     ]
    },
    "assert_equal": {
     "line number": [
      213,
      214,
      219,
      221,
      227,
      229,
      234,
      236,
      242,
      243,
      246,
      250,
      251,
      258,
      259,
      265,
      266,
      273,
      274,
      284,
      285,
      290,
      296,
      303,
      304,
      308,
      314,
      323,
      324,
      331,
      337,
      347,
      349,
      355,
      360,
      367,
      369,
      375,
      380,
      387,
      390,
      395,
      396,
      397,
      398,
      404,
      405,
      406,
      407,
      408,
      409,
      411,
      413,
      415,
      416,
      417,
      418,
      424,
      425,
      428,
      429,
      435
     ]
    },
    "numpy.ComplexWarning": {
     "line number": [
      278
     ]
    },
    "numpy.arange": {
     "line number": [
      212,
      218,
      226,
      233,
      241,
      248,
      249,
      256,
      257,
      263,
      264,
      271,
      272,
      282,
      283,
      287,
      301,
      302,
      306,
      321,
      322,
      327,
      328,
      329,
      343,
      344,
      345,
      352,
      365,
      366,
      372,
      394,
      402,
      421,
      432,
      433,
      434
     ]
    },
    "numpy.array": {
     "line number": [
      384,
      385,
      386
     ]
    },
    "numpy.core.tests.test_einsum.warnings": {
     "line number": [
      277,
      278
     ]
    },
    "numpy.dot": {
     "line number": [
      284,
      285,
      291,
      297,
      303,
      304,
      309,
      315,
      323,
      324,
      332,
      338,
      405,
      414
     ]
    },
    "numpy.dtype": {
     "line number": [
      364,
      364,
      403,
      425,
      429
     ]
    },
    "numpy.einsum": {
     "line number": [
      213,
      214,
      219,
      221,
      227,
      229,
      234,
      236,
      242,
      243,
      246,
      250,
      251,
      258,
      259,
      265,
      266,
      273,
      274,
      284,
      285,
      288,
      294,
      303,
      304,
      307,
      312,
      323,
      324,
      330,
      335,
      347,
      349,
      353,
      358,
      367,
      369,
      373,
      378,
      387,
      390,
      395,
      396,
      397,
      398,
      404,
      405,
      406,
      407,
      408,
      409,
      411,
      413,
      415,
      416,
      417,
      418,
      423,
      427,
      435
     ]
    },
    "numpy.inner": {
     "line number": [
      258,
      260,
      265,
      267
     ]
    },
    "numpy.logical_and": {
     "line number": [
      389,
      389,
      392,
      392
     ]
    },
    "numpy.multiply": {
     "line number": [
      250,
      252,
      404,
      412
     ]
    },
    "numpy.outer": {
     "line number": [
      273,
      274
     ]
    },
    "numpy.sum": {
     "line number": [
      213,
      215,
      220,
      222,
      228,
      230,
      235,
      237,
      395,
      396,
      397,
      398,
      408,
      409,
      417,
      418,
      424,
      428
     ]
    },
    "numpy.tensordot": {
     "line number": [
      368,
      370,
      375,
      380
     ]
    },
    "numpy.trace": {
     "line number": [
      242,
      243
     ]
    },
    "object": {
     "line number": [
      421
     ]
    },
    "range": {
     "line number": [
      211,
      217,
      225,
      232,
      240,
      247,
      255,
      262,
      270,
      281,
      300,
      319,
      326,
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_errors": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      17,
      20,
      23,
      29,
      32,
      35
     ]
    },
    "ValueError": {
     "line number": [
      13,
      14,
      26,
      38,
      39,
      40,
      43,
      44,
      45,
      46,
      47,
      48,
      51,
      52,
      53,
      54,
      57,
      58,
      59,
      62,
      65,
      68,
      69,
      72,
      73
     ]
    },
    "assert_raises": {
     "line number": [
      13,
      14,
      17,
      20,
      23,
      26,
      29,
      32,
      35,
      38,
      39,
      40,
      43,
      44,
      45,
      46,
      47,
      48,
      51,
      52,
      53,
      54,
      57,
      58,
      59,
      62,
      65,
      68,
      69,
      72,
      73
     ]
    },
    "numpy.arange": {
     "line number": [
      68,
      69,
      72,
      74
     ]
    },
    "numpy.einsum": {
     "line number": [
      13,
      14,
      17,
      20,
      23,
      26,
      29,
      32,
      35,
      38,
      39,
      40,
      43,
      44,
      45,
      46,
      47,
      48,
      51,
      52,
      53,
      54,
      57,
      58,
      59,
      62,
      65,
      68,
      69,
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_fixedstridebug": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      525,
      532
     ]
    },
    "numpy.arange": {
     "line number": [
      521,
      522,
      528,
      529
     ]
    },
    "numpy.einsum": {
     "line number": [
      523,
      530
     ]
    },
    "numpy.float32": {
     "line number": [
      521,
      529
     ]
    },
    "numpy.float64": {
     "line number": [
      528
     ]
    },
    "numpy.int16": {
     "line number": [
      522
     ]
    },
    "numpy.tensordot": {
     "line number": [
      524,
      531
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_misc": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      487,
      492,
      500
     ]
    },
    "numpy.arange": {
     "line number": [
      497,
      498,
      499
     ]
    },
    "numpy.einsum": {
     "line number": [
      487,
      492,
      493,
      500
     ]
    },
    "numpy.int64": {
     "line number": [
      490,
      491
     ]
    },
    "numpy.ones": {
     "line number": [
      485,
      486,
      490,
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_cfloat128": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_cfloat64": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_clongdouble": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "numpy.clongdouble": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_float16": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_float32": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_float64": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_int16": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_int32": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_int64": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_int8": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_longdouble": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "numpy.longdouble": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_uint16": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_uint32": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_uint64": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_uint8": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_views": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      84,
      127,
      127,
      136,
      136,
      145,
      145,
      161,
      161,
      169,
      169,
      178,
      178
     ]
    },
    "assert_": {
     "line number": [
      82,
      85,
      88,
      92,
      100,
      104,
      112,
      116,
      124,
      128,
      132,
      137,
      142,
      146,
      150,
      154,
      158,
      162,
      166,
      170,
      174,
      179,
      188,
      192,
      200,
      204
     ]
    },
    "assert_equal": {
     "line number": [
      89,
      93,
      101,
      105,
      113,
      117,
      125,
      129,
      133,
      138,
      143,
      147,
      151,
      155,
      159,
      163,
      167,
      171,
      175,
      180,
      189,
      193,
      201,
      205
     ]
    },
    "numpy.arange": {
     "line number": [
      78,
      96,
      108,
      120,
      184,
      196
     ]
    },
    "numpy.einsum": {
     "line number": [
      81,
      84,
      87,
      91,
      99,
      103,
      111,
      115,
      123,
      127,
      131,
      136,
      141,
      145,
      149,
      153,
      157,
      161,
      165,
      169,
      173,
      178,
      187,
      191,
      199,
      203
     ]
    },
    "range": {
     "line number": [
      113,
      117,
      125,
      129,
      133,
      138,
      143,
      147,
      151,
      155,
      159,
      163,
      167,
      171,
      175,
      180,
      189,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      50
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_errstate.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.TestErrstate": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_divide": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "FloatingPointError": {
     "line number": [
      34
     ]
    },
    "numpy.arange": {
     "line number": [
      27
     ]
    },
    "numpy.errstate": {
     "line number": [
      26,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_errcall": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "numpy.errstate": {
     "line number": [
      43,
      45
     ]
    },
    "numpy.geterrcall": {
     "line number": [
      42,
      44,
      46,
      47
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      44,
      46,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_errcall.foo": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "print": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_invalid": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "FloatingPointError": {
     "line number": [
      20
     ]
    },
    "numpy.arange": {
     "line number": [
      13
     ]
    },
    "numpy.core.tests.test_errstate.platform": {
     "line number": [
      10
     ]
    },
    "numpy.errstate": {
     "line number": [
      12,
      15
     ]
    },
    "numpy.sqrt": {
     "line number": [
      16,
      19
     ]
    },
    "numpy.testing.dec.skipif": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_errstate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base": {
  "data": {},
  "type": "module"
 },
 "numpy.core.tests.test_function_base.TestLinspace": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_scalar": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      52,
      53,
      54
     ]
    },
    "numpy.array": {
     "line number": [
      43,
      44,
      45
     ]
    },
    "numpy.linspace": {
     "line number": [
      46,
      47,
      48,
      49,
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_basic": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      23,
      25,
      27
     ]
    },
    "len": {
     "line number": [
      23
     ]
    },
    "numpy.linspace": {
     "line number": [
      22,
      24,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_complex": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      61,
      62
     ]
    },
    "numpy.array": {
     "line number": [
      58,
      60
     ]
    },
    "numpy.linspace": {
     "line number": [
      57,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_corner": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      31,
      33
     ]
    },
    "list": {
     "line number": [
      30,
      32
     ]
    },
    "numpy.linspace": {
     "line number": [
      30,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "PhysicalQuantity": {
     "line number": [
      93,
      94
     ]
    },
    "assert_equal": {
     "line number": [
      95
     ]
    },
    "numpy.linspace": {
     "line number": [
      95,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities.PhysicalQuantity": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "float": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities.PhysicalQuantity.__add__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "PhysicalQuantity": {
     "line number": [
      71
     ]
    },
    "assert_": {
     "line number": [
      70
     ]
    },
    "float": {
     "line number": [
      71,
      71
     ]
    },
    "isinstance": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities.PhysicalQuantity.__div__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "PhysicalQuantity": {
     "line number": [
      87
     ]
    },
    "float": {
     "line number": [
      87,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities.PhysicalQuantity.__mul__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "PhysicalQuantity": {
     "line number": [
      83
     ]
    },
    "float": {
     "line number": [
      83,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities.PhysicalQuantity.__new__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "float.__new__": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities.PhysicalQuantity.__rdiv__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "PhysicalQuantity": {
     "line number": [
      90
     ]
    },
    "float": {
     "line number": [
      90,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities.PhysicalQuantity.__rsub__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "PhysicalQuantity": {
     "line number": [
      79,
      80
     ]
    },
    "assert_": {
     "line number": [
      79
     ]
    },
    "float": {
     "line number": [
      80,
      80
     ]
    },
    "isinstance": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities.PhysicalQuantity.__sub__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "PhysicalQuantity": {
     "line number": [
      75,
      76
     ]
    },
    "assert_": {
     "line number": [
      75
     ]
    },
    "float": {
     "line number": [
      76,
      76
     ]
    },
    "isinstance": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_type": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      39,
      40
     ]
    },
    "numpy.linspace": {
     "line number": [
      36,
      37,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_basic": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      10,
      12,
      14
     ]
    },
    "assert_array_equal": {
     "line number": [
      16
     ]
    },
    "len": {
     "line number": [
      10
     ]
    },
    "numpy.logspace": {
     "line number": [
      9,
      11,
      13,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.linspace": {
  "data": {
   "shadows": "numpy.linspace"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.logspace": {
  "data": {
   "shadows": "numpy.logspace"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      85
     ]
    },
    "run_module_suite": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_getlimits.TestDouble": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestDouble.test_singleton": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      36
     ]
    },
    "id": {
     "line number": [
      36,
      36
     ]
    },
    "numpy.core.finfo": {
     "line number": [
      34,
      35
     ]
    },
    "numpy.double": {
     "line number": [
      34,
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestHalf": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestHalf.test_singleton": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      24
     ]
    },
    "id": {
     "line number": [
      24,
      24
     ]
    },
    "numpy.core.finfo": {
     "line number": [
      22,
      23
     ]
    },
    "numpy.half": {
     "line number": [
      22,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestIinfo": {
  "data": {
   "lineno": 44
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestIinfo.test_basic": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      53
     ]
    },
    "assert_equal": {
     "line number": [
      51,
      52
     ]
    },
    "list": {
     "line number": [
      46
     ]
    },
    "numpy.core.iinfo": {
     "line number": [
      51,
      51,
      52,
      52,
      53
     ]
    },
    "numpy.int16": {
     "line number": [
      48
     ]
    },
    "numpy.int32": {
     "line number": [
      48
     ]
    },
    "numpy.int64": {
     "line number": [
      48
     ]
    },
    "numpy.int8": {
     "line number": [
      48
     ]
    },
    "numpy.uint16": {
     "line number": [
      49
     ]
    },
    "numpy.uint32": {
     "line number": [
      49
     ]
    },
    "numpy.uint64": {
     "line number": [
      49
     ]
    },
    "numpy.uint8": {
     "line number": [
      49
     ]
    },
    "zip": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestIinfo.test_unsigned_max": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "T": {
     "line number": [
      58
     ]
    },
    "assert_equal": {
     "line number": [
      58
     ]
    },
    "numpy.core.iinfo": {
     "line number": [
      58
     ]
    },
    "numpy.sctypes": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestLongdouble": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestLongdouble.test_singleton": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      42
     ]
    },
    "id": {
     "line number": [
      42,
      42
     ]
    },
    "numpy.core.finfo": {
     "line number": [
      40,
      41
     ]
    },
    "numpy.longdouble": {
     "line number": [
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestPythonFloat": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestPythonFloat.test_singleton": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      18
     ]
    },
    "float": {
     "line number": [
      16,
      17
     ]
    },
    "id": {
     "line number": [
      18,
      18
     ]
    },
    "numpy.core.finfo": {
     "line number": [
      16,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestRepr": {
  "data": {
   "lineno": 60
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestRepr.test_finfo_repr": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      78
     ]
    },
    "build_err_msg": {
     "line number": [
      77
     ]
    },
    "numpy.finfo": {
     "line number": [
      74
     ]
    },
    "numpy.float32": {
     "line number": [
      74
     ]
    },
    "repr": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestRepr.test_iinfo_repr": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      63
     ]
    },
    "numpy.iinfo": {
     "line number": [
      63
     ]
    },
    "numpy.int16": {
     "line number": [
      63
     ]
    },
    "repr": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestSingle": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestSingle.test_singleton": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      30
     ]
    },
    "id": {
     "line number": [
      30,
      30
     ]
    },
    "numpy.core.finfo": {
     "line number": [
      28,
      29
     ]
    },
    "numpy.single": {
     "line number": [
      28,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.double": {
  "data": {
   "shadows": "numpy.double"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.finfo": {
  "data": {
   "shadows": "numpy.core.finfo"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.half": {
  "data": {
   "shadows": "numpy.half"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.iinfo": {
  "data": {
   "shadows": "numpy.core.iinfo"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.longdouble": {
  "data": {
   "shadows": "numpy.longdouble"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.single": {
  "data": {
   "shadows": "numpy.single"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.test_instances": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "numpy.core.finfo": {
     "line number": [
      83
     ]
    },
    "numpy.core.iinfo": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      438
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_half.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.TestHalf": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_half.TestHalf.setUp": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      24,
      31,
      32
     ]
    },
    "numpy.array": {
     "line number": [
      26,
      27,
      35,
      36
     ]
    },
    "numpy.concatenate": {
     "line number": [
      30
     ]
    },
    "numpy.float16": {
     "line number": [
      25,
      34
     ]
    },
    "numpy.float32": {
     "line number": [
      26,
      35
     ]
    },
    "numpy.float64": {
     "line number": [
      27,
      36
     ]
    },
    "numpy.uint16": {
     "line number": [
      24,
      31,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_array_interface": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "Dummy": {
     "line number": [
      431
     ]
    },
    "numpy.array": {
     "line number": [
      433
     ]
    },
    "numpy.float16": {
     "line number": [
      430,
      434
     ]
    },
    "numpy.ones": {
     "line number": [
      430
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      434
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_array_interface.Dummy": {
  "data": {
   "lineno": 427
  },
  "type": "class"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_coercion": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      336,
      337
     ]
    },
    "numpy.float16": {
     "line number": [
      336,
      338,
      341,
      342,
      343,
      344,
      345,
      350,
      352,
      357
     ]
    },
    "numpy.float32": {
     "line number": [
      337,
      339,
      346,
      351,
      353,
      355,
      356,
      358
     ]
    },
    "numpy.float64": {
     "line number": [
      348,
      349
     ]
    },
    "numpy.power": {
     "line number": [
      341,
      342,
      343,
      344,
      345,
      346,
      348,
      349,
      350,
      351,
      352,
      353,
      355,
      356,
      357,
      358
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      341,
      342,
      343,
      344,
      345,
      346,
      348,
      349,
      350,
      351,
      352,
      353,
      355,
      356,
      357,
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_conversions": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      68
     ]
    },
    "numpy.array": {
     "line number": [
      50,
      55,
      62,
      63,
      69,
      70
     ]
    },
    "numpy.float16": {
     "line number": [
      50,
      55,
      63,
      69
     ]
    },
    "numpy.int": {
     "line number": [
      70
     ]
    },
    "numpy.longdouble": {
     "line number": [
      62
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      51,
      56,
      64,
      71
     ]
    },
    "numpy.uint16": {
     "line number": [
      51,
      52,
      56,
      57,
      64,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_correctness": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "len": {
     "line number": [
      173,
      182
     ]
    },
    "numpy.array": {
     "line number": [
      163
     ]
    },
    "numpy.int32": {
     "line number": [
      163
     ]
    },
    "numpy.nonzero": {
     "line number": [
      172,
      181
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      175,
      184
     ]
    },
    "numpy.uint16": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_fpe": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      363,
      364
     ]
    },
    "numpy.core.tests.test_half.assert_raises_fpe": {
     "line number": [
      369,
      370,
      371,
      372,
      373,
      374,
      375,
      376,
      377,
      379,
      381,
      383,
      385,
      389,
      390,
      391,
      392,
      393,
      394,
      395,
      396,
      397,
      399,
      401,
      402,
      403,
      406,
      407,
      408,
      409,
      410,
      411
     ]
    },
    "numpy.core.tests.test_half.platform": {
     "line number": [
      360
     ]
    },
    "numpy.divide": {
     "line number": [
      406
     ]
    },
    "numpy.errstate": {
     "line number": [
      362
     ]
    },
    "numpy.float16": {
     "line number": [
      363,
      364,
      365,
      366,
      378,
      378,
      380,
      380,
      382,
      382,
      384,
      384,
      386,
      386,
      398,
      398,
      400,
      400,
      401,
      401,
      402,
      402,
      403,
      406,
      406,
      407,
      408,
      409,
      409,
      410,
      410,
      411,
      411,
      414,
      414,
      415,
      415,
      416,
      416,
      417,
      418,
      418,
      419,
      419,
      420,
      420,
      421,
      421,
      422,
      422,
      423,
      423
     ]
    },
    "numpy.inf": {
     "line number": [
      401,
      402,
      406,
      406,
      407,
      409,
      410,
      418,
      419
     ]
    },
    "numpy.nan": {
     "line number": [
      408,
      411
     ]
    },
    "numpy.nextafter": {
     "line number": [
      401,
      402,
      409,
      410,
      411,
      418,
      419
     ]
    },
    "numpy.spacing": {
     "line number": [
      403,
      407,
      408,
      417
     ]
    },
    "numpy.testing.dec.skipif": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_funcs": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      217,
      218,
      234,
      248
     ]
    },
    "numpy.array": {
     "line number": [
      226,
      240,
      243
     ]
    },
    "numpy.dot": {
     "line number": [
      236
     ]
    },
    "numpy.float16": {
     "line number": [
      217,
      221,
      223,
      226,
      234,
      235,
      240,
      243,
      248
     ]
    },
    "numpy.float32": {
     "line number": [
      218
     ]
    },
    "numpy.inf": {
     "line number": [
      240,
      243,
      243
     ]
    },
    "numpy.nan": {
     "line number": [
      243
     ]
    },
    "numpy.ones": {
     "line number": [
      223,
      235
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      217,
      223,
      227,
      230,
      236,
      241,
      244,
      250
     ]
    },
    "numpy.zeros": {
     "line number": [
      221
     ]
    },
    "range": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_ordering": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      197
     ]
    },
    "numpy.float32": {
     "line number": [
      197
     ]
    },
    "numpy.nonzero": {
     "line number": [
      210,
      211
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      205,
      206,
      207,
      208
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      202,
      210,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_rounding": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      126,
      145,
      149,
      150
     ]
    },
    "numpy.float16": {
     "line number": [
      145,
      150
     ]
    },
    "numpy.float32": {
     "line number": [
      149
     ]
    },
    "numpy.float64": {
     "line number": [
      134
     ]
    },
    "numpy.inf": {
     "line number": [
      142
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      146,
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_ufuncs": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "numpy.absolute": {
     "line number": [
      327
     ]
    },
    "numpy.add": {
     "line number": [
      283
     ]
    },
    "numpy.array": {
     "line number": [
      279,
      280,
      281
     ]
    },
    "numpy.conjugate": {
     "line number": [
      326
     ]
    },
    "numpy.copysign": {
     "line number": [
      304
     ]
    },
    "numpy.divide": {
     "line number": [
      286
     ]
    },
    "numpy.equal": {
     "line number": [
      288
     ]
    },
    "numpy.float16": {
     "line number": [
      279,
      280,
      281
     ]
    },
    "numpy.floor_divide": {
     "line number": [
      321
     ]
    },
    "numpy.fmax": {
     "line number": [
      316,
      317
     ]
    },
    "numpy.fmin": {
     "line number": [
      318,
      319
     ]
    },
    "numpy.frexp": {
     "line number": [
      331
     ]
    },
    "numpy.greater": {
     "line number": [
      292
     ]
    },
    "numpy.greater_equal": {
     "line number": [
      293
     ]
    },
    "numpy.inf": {
     "line number": [
      281,
      315,
      319
     ]
    },
    "numpy.isfinite": {
     "line number": [
      301
     ]
    },
    "numpy.isinf": {
     "line number": [
      300
     ]
    },
    "numpy.isnan": {
     "line number": [
      299,
      308,
      313
     ]
    },
    "numpy.ldexp": {
     "line number": [
      332
     ]
    },
    "numpy.less": {
     "line number": [
      290
     ]
    },
    "numpy.less_equal": {
     "line number": [
      291
     ]
    },
    "numpy.logical_and": {
     "line number": [
      294
     ]
    },
    "numpy.logical_not": {
     "line number": [
      297
     ]
    },
    "numpy.logical_or": {
     "line number": [
      295
     ]
    },
    "numpy.logical_xor": {
     "line number": [
      296
     ]
    },
    "numpy.maximum": {
     "line number": [
      306,
      307
     ]
    },
    "numpy.minimum": {
     "line number": [
      311,
      312
     ]
    },
    "numpy.modf": {
     "line number": [
      330
     ]
    },
    "numpy.multiply": {
     "line number": [
      285
     ]
    },
    "numpy.nan": {
     "line number": [
      281
     ]
    },
    "numpy.negative": {
     "line number": [
      328
     ]
    },
    "numpy.not_equal": {
     "line number": [
      289
     ]
    },
    "numpy.ones_like": {
     "line number": [
      325
     ]
    },
    "numpy.reciprocal": {
     "line number": [
      324
     ]
    },
    "numpy.remainder": {
     "line number": [
      322
     ]
    },
    "numpy.sign": {
     "line number": [
      329
     ]
    },
    "numpy.signbit": {
     "line number": [
      302
     ]
    },
    "numpy.square": {
     "line number": [
      323
     ]
    },
    "numpy.subtract": {
     "line number": [
      284
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      308,
      313
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      283,
      284,
      285,
      286,
      288,
      289,
      290,
      291,
      292,
      293,
      294,
      295,
      296,
      297,
      299,
      300,
      301,
      302,
      304,
      306,
      310,
      311,
      315,
      316,
      317,
      318,
      319,
      321,
      322,
      323,
      324,
      325,
      326,
      327,
      328,
      329,
      330,
      331,
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_values": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      105,
      113
     ]
    },
    "numpy.float16": {
     "line number": [
      121
     ]
    },
    "numpy.inf": {
     "line number": [
      112,
      112
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      122
     ]
    },
    "numpy.uint16": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_nans_infs": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "numpy.errstate": {
     "line number": [
      74
     ]
    },
    "numpy.float16": {
     "line number": [
      80,
      83
     ]
    },
    "numpy.inf": {
     "line number": [
      80
     ]
    },
    "numpy.isfinite": {
     "line number": [
      78,
      78
     ]
    },
    "numpy.isinf": {
     "line number": [
      77,
      77
     ]
    },
    "numpy.isnan": {
     "line number": [
      76,
      76
     ]
    },
    "numpy.nan": {
     "line number": [
      83
     ]
    },
    "numpy.signbit": {
     "line number": [
      79,
      79
     ]
    },
    "numpy.spacing": {
     "line number": [
      80
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      85,
      86,
      88,
      89,
      91,
      92,
      94,
      95,
      97,
      98,
      100,
      101
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      76,
      77,
      78,
      79,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_spacing_nextafter": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      255
     ]
    },
    "numpy.array": {
     "line number": [
      256
     ]
    },
    "numpy.float16": {
     "line number": [
      256,
      257
     ]
    },
    "numpy.inf": {
     "line number": [
      256
     ]
    },
    "numpy.nextafter": {
     "line number": [
      261,
      262,
      263,
      271,
      272,
      273
     ]
    },
    "numpy.spacing": {
     "line number": [
      259,
      268,
      268,
      269
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      259,
      261,
      262,
      263,
      268,
      269,
      271,
      272,
      273
     ]
    },
    "numpy.uint16": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.assert_raises_fpe": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "FloatingPointError": {
     "line number": [
      14
     ]
    },
    "callable": {
     "line number": [
      13
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      15,
      18
     ]
    },
    "str": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.float16": {
  "data": {
   "shadows": "numpy.float16"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.float32": {
  "data": {
   "shadows": "numpy.float32"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.float64": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.uint16": {
  "data": {
   "shadows": "numpy.uint16"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      126
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_indexerrors.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_arraytypes_fasttake": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      13,
      14,
      15,
      16
     ]
    },
    "numpy.empty": {
     "line number": [
      12
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      13,
      14,
      15,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_iterators_exceptions": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      58,
      59,
      60,
      61,
      64,
      65,
      68,
      69,
      71,
      72,
      75,
      76,
      78,
      79,
      82,
      83,
      85,
      86
     ]
    },
    "assign": {
     "line number": [
      60,
      61,
      65,
      69,
      72,
      76,
      79,
      83,
      86
     ]
    },
    "numpy.array": {
     "line number": [
      75,
      76,
      78,
      79,
      82,
      83,
      85,
      86
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      58,
      59,
      60,
      61,
      64,
      65,
      68,
      69,
      71,
      72,
      75,
      76,
      78,
      79,
      82,
      83,
      85,
      86
     ]
    },
    "numpy.zeros": {
     "line number": [
      57,
      63,
      67,
      70,
      74,
      77,
      81,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_iterators_exceptions.assign": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_mapping": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      95,
      98,
      99,
      101,
      102,
      105,
      107,
      110,
      111,
      113,
      114
     ]
    },
    "assign": {
     "line number": [
      99,
      102,
      105,
      107,
      111,
      114
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      95,
      98,
      99,
      101,
      102,
      105,
      107,
      110,
      111,
      113,
      114
     ]
    },
    "numpy.zeros": {
     "line number": [
      94,
      97,
      100,
      104,
      106,
      109,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_mapping.assign": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_methods": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      120,
      121,
      123,
      124
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      120,
      121,
      123,
      124
     ]
    },
    "numpy.zeros": {
     "line number": [
      119,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_multiindex_exceptions": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      33,
      35,
      38,
      40
     ]
    },
    "numpy.empty": {
     "line number": [
      32,
      34,
      37,
      39
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      33,
      35,
      38,
      40
     ]
    },
    "object": {
     "line number": [
      32,
      34,
      37,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_put_exceptions": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      44,
      46,
      48,
      50
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      44,
      46,
      48,
      50
     ]
    },
    "numpy.zeros": {
     "line number": [
      43,
      45,
      47,
      49
     ]
    },
    "object": {
     "line number": [
      45,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_take_from_object": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      21,
      25,
      26,
      27,
      28,
      29
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      21,
      25,
      26,
      27,
      28,
      29
     ]
    },
    "numpy.zeros": {
     "line number": [
      20,
      24
     ]
    },
    "object": {
     "line number": [
      20,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      569
     ]
    },
    "run_module_suite": {
     "line number": [
      570
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_indexing.TestFieldIndexing": {
  "data": {
   "lineno": 164
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestFieldIndexing.test_scalar_return_type": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      169,
      170
     ]
    },
    "isinstance": {
     "line number": [
      169,
      170
     ]
    },
    "numpy.ndarray": {
     "line number": [
      169,
      170
     ]
    },
    "numpy.zeros": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_assignment_value_mismatch": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      140,
      141,
      142
     ]
    },
    "assert_raises": {
     "line number": [
      140,
      141,
      142
     ]
    },
    "numpy.arange": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_assignment_value_mismatch.f": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_indexing_onedim": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      128,
      131
     ]
    },
    "bool": {
     "line number": [
      127
     ]
    },
    "numpy.array": {
     "line number": [
      126,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_indexing_twodim": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      153,
      154,
      155,
      159
     ]
    },
    "numpy.array": {
     "line number": [
      147,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_ellipsis_index": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      82
     ]
    },
    "assert_equal": {
     "line number": [
      81,
      86,
      87,
      88,
      92
     ]
    },
    "numpy.array": {
     "line number": [
      78,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_empty_fancy_index": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      74
     ]
    },
    "assert_equal": {
     "line number": [
      66,
      67,
      70,
      71
     ]
    },
    "assert_raises": {
     "line number": [
      74
     ]
    },
    "numpy.array": {
     "line number": [
      65,
      69,
      73
     ]
    },
    "numpy.intp": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_empty_tuple_index": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      21,
      23
     ]
    },
    "assert_equal": {
     "line number": [
      20
     ]
    },
    "isinstance": {
     "line number": [
      23
     ]
    },
    "numpy.array": {
     "line number": [
      19,
      22
     ]
    },
    "numpy.int_": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_none_index": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      14,
      15
     ]
    },
    "numpy.array": {
     "line number": [
      13
     ]
    },
    "numpy.newaxis": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      54
     ]
    },
    "Zero": {
     "line number": [
      32
     ]
    },
    "assert_": {
     "line number": [
      35,
      37,
      39,
      45,
      47,
      49,
      56,
      59
     ]
    },
    "isinstance": {
     "line number": [
      35,
      37,
      39,
      45,
      47,
      49,
      56,
      59
     ]
    },
    "numpy.array": {
     "line number": [
      39,
      42,
      43,
      46,
      48,
      49,
      55,
      58,
      58
     ]
    },
    "numpy.core.tests.test_indexing.warnings": {
     "line number": [
      53,
      54
     ]
    },
    "numpy.float_": {
     "line number": [
      35,
      37,
      39,
      56
     ]
    },
    "numpy.ndarray": {
     "line number": [
      45,
      47,
      49,
      59
     ]
    },
    "numpy.zeros": {
     "line number": [
      34,
      36,
      38
     ]
    },
    "object": {
     "line number": [
      43,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type.Zero": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "object": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type.Zero.__index__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_single_bool_index": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      120,
      121
     ]
    },
    "numpy.array": {
     "line number": [
      110,
      120,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_single_int_index": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      104,
      106
     ]
    },
    "assert_equal": {
     "line number": [
      100,
      101
     ]
    },
    "assert_raises": {
     "line number": [
      104,
      106
     ]
    },
    "numpy.array": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated": {
  "data": {
   "lineno": 173
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._check_multi_index": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      454,
      456,
      457
     ]
    },
    "assert_equal": {
     "line number": [
      458
     ]
    },
    "assert_raises": {
     "line number": [
      456,
      457
     ]
    },
    "numpy.core.tests.test_indexing.sys": {
     "line number": [
      455,
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._check_single_index": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      477,
      479,
      480
     ]
    },
    "assert_equal": {
     "line number": [
      481
     ]
    },
    "assert_raises": {
     "line number": [
      479,
      480
     ]
    },
    "numpy.core.tests.test_indexing.sys": {
     "line number": [
      478,
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._compare_index_result": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      496
     ]
    },
    "assert_array_equal": {
     "line number": [
      492,
      512,
      516
     ]
    },
    "assert_equal": {
     "line number": [
      500,
      502
     ]
    },
    "numpy.core.tests.test_indexing.sys": {
     "line number": [
      500,
      502
     ]
    },
    "numpy.may_share_memory": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._get_multi_index": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      271
     ]
    },
    "IndexError": {
     "line number": [
      266,
      290,
      300,
      347,
      406,
      411,
      421
     ]
    },
    "ValueError": {
     "line number": [
      426
     ]
    },
    "bool": {
     "line number": [
      263,
      320
     ]
    },
    "enumerate": {
     "line number": [
      260,
      309
     ]
    },
    "int": {
     "line number": [
      393
     ]
    },
    "isinstance": {
     "line number": [
      263,
      278,
      281,
      310,
      320
     ]
    },
    "len": {
     "line number": [
      348,
      374,
      377,
      387,
      391,
      394,
      397,
      412,
      412
     ]
    },
    "list": {
     "line number": [
      242,
      363
     ]
    },
    "numpy.any": {
     "line number": [
      410,
      410
     ]
    },
    "numpy.arange": {
     "line number": [
      312
     ]
    },
    "numpy.array": {
     "line number": [
      287,
      317,
      335
     ]
    },
    "numpy.broadcast": {
     "line number": [
      398
     ]
    },
    "numpy.intp": {
     "line number": [
      287,
      317,
      335
     ]
    },
    "numpy.ndarray": {
     "line number": [
      263,
      281,
      320
     ]
    },
    "numpy.nonzero": {
     "line number": [
      330
     ]
    },
    "numpy.prod": {
     "line number": [
      339,
      393
     ]
    },
    "numpy.product": {
     "line number": [
      413
     ]
    },
    "numpy.ravel_multi_index": {
     "line number": [
      330,
      417,
      423
     ]
    },
    "range": {
     "line number": [
      363,
      374
     ]
    },
    "slice": {
     "line number": [
      275,
      278,
      307,
      310
     ]
    },
    "zip": {
     "line number": [
      407
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.setUp": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      191,
      213
     ]
    },
    "int": {
     "line number": [
      210
     ]
    },
    "numpy.arange": {
     "line number": [
      189
     ]
    },
    "numpy.array": {
     "line number": [
      195,
      196,
      197,
      198,
      206,
      207,
      208,
      209,
      211,
      213
     ]
    },
    "numpy.empty": {
     "line number": [
      190,
      205
     ]
    },
    "numpy.intp": {
     "line number": [
      205
     ]
    },
    "numpy.prod": {
     "line number": [
      189
     ]
    },
    "numpy.zeros": {
     "line number": [
      210
     ]
    },
    "slice": {
     "line number": [
      200,
      201,
      202,
      203,
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_1d": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      563
     ]
    },
    "numpy.arange": {
     "line number": [
      561
     ]
    },
    "numpy.core.tests.test_indexing.warnings": {
     "line number": [
      562,
      563
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_boolean": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      521,
      523
     ]
    },
    "bool": {
     "line number": [
      529,
      530,
      531
     ]
    },
    "numpy.array": {
     "line number": [
      520,
      521,
      522
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      529,
      530,
      531
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_multidim": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      540
     ]
    },
    "IndexError": {
     "line number": [
      554,
      555,
      556,
      557
     ]
    },
    "assert_raises": {
     "line number": [
      554,
      555,
      556,
      557
     ]
    },
    "itertools.product": {
     "line number": [
      545
     ]
    },
    "numpy.core.tests.test_indexing.warnings": {
     "line number": [
      537,
      540
     ]
    },
    "tuple": {
     "line number": [
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      64
     ]
    },
    "run_module_suite": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_item_selection.TestTake": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_refcounting": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "all": {
     "line number": [
      56,
      61
     ]
    },
    "assert_": {
     "line number": [
      56,
      61
     ]
    },
    "numpy.array": {
     "line number": [
      52,
      53,
      58
     ]
    },
    "numpy.core.tests.test_item_selection.sys": {
     "line number": [
      56,
      61
     ]
    },
    "object": {
     "line number": [
      50
     ]
    },
    "range": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_simple": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      18,
      36,
      38
     ]
    },
    "assert_": {
     "line number": [
      46
     ]
    },
    "assert_array_equal": {
     "line number": [
      43
     ]
    },
    "assert_raises": {
     "line number": [
      38
     ]
    },
    "list": {
     "line number": [
      28
     ]
    },
    "numpy.array": {
     "line number": [
      27
     ]
    },
    "numpy.dtype": {
     "line number": [
      24
     ]
    },
    "numpy.empty": {
     "line number": [
      14,
      15,
      16
     ]
    },
    "numpy.int": {
     "line number": [
      24
     ]
    },
    "numpy.intp": {
     "line number": [
      14,
      15,
      16
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      27
     ]
    },
    "numpy.number": {
     "line number": [
      27
     ]
    },
    "numpy.object": {
     "line number": [
      24
     ]
    },
    "tuple": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      29
     ]
    },
    "run_module_suite": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_machar.MachAr": {
  "data": {
   "shadows": "numpy.core.machar.MachAr"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.TestMachAr": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "numpy.core.tests.test_machar.TestMachAr._run_machar_highprec": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      16
     ]
    },
    "numpy.array": {
     "line number": [
      15
     ]
    },
    "numpy.core.machar.MachAr": {
     "line number": [
      15
     ]
    },
    "numpy.core.numerictypes.float96": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_machar.TestMachAr.test_underlow": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "FloatingPointError": {
     "line number": [
      25
     ]
    },
    "numpy.errstate": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_machar.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.errstate": {
  "data": {
   "shadows": "numpy.errstate"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.ntypes": {
  "data": {
   "shadows": "numpy.core.numerictypes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      126
     ]
    },
    "run_module_suite": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_memmap.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.TemporaryFile": {
  "data": {
   "shadows": "tempfile.TemporaryFile"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.TestMemmap": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "numpy.core.tests.test_memmap.TestMemmap.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      18
     ]
    },
    "tempfile.NamedTemporaryFile": {
     "line number": [
      14
     ]
    },
    "tempfile.mkdtemp": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.tearDown": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.core.tests.test_memmap.shutil": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_arithmetic_drops_references": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      102
     ]
    },
    "numpy.memmap": {
     "line number": [
      99,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_attributes": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "numpy.memmap": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_del": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      90,
      94,
      96
     ]
    },
    "numpy.memmap": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_filename": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "numpy.core.tests.test_memmap.os": {
     "line number": [
      63
     ]
    },
    "numpy.memmap": {
     "line number": [
      61
     ]
    },
    "tempfile.mktemp": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_filename_fileobj": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "numpy.memmap": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_flush": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      81
     ]
    },
    "numpy.core.tests.test_memmap.sys": {
     "line number": [
      76
     ]
    },
    "numpy.memmap": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_indexing_drops_references": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      109
     ]
    },
    "numpy.memmap": {
     "line number": [
      106,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_open_with_filename": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.memmap": {
     "line number": [
      40
     ]
    },
    "tempfile.mktemp": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_roundtrip": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      35
     ]
    },
    "assert_array_equal": {
     "line number": [
      36
     ]
    },
    "numpy.allclose": {
     "line number": [
      35
     ]
    },
    "numpy.memmap": {
     "line number": [
      27,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_slicing_keeps_references": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "numpy.memmap": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_unnamed_file": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.memmap": {
     "line number": [
      47
     ]
    },
    "tempfile.TemporaryFile": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_view": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      123
     ]
    },
    "numpy.memmap": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.memmap": {
  "data": {
   "shadows": "numpy.memmap"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.mktemp": {
  "data": {
   "shadows": "tempfile.mktemp"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray_assignment": {
  "data": {
   "symbols_in_volume": {
    "numpy.core.tests.test_multiarray_assignment.ndims": {
     "line number": [
      8
     ]
    },
    "numpy.core.tests.test_multiarray_assignment.size": {
     "line number": [
      8
     ]
    },
    "tuple": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_multiarray_assignment.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray_assignment._check_assignment": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      68
     ]
    },
    "numpy.arange": {
     "line number": [
      61
     ]
    },
    "numpy.core.tests.test_multiarray_assignment.shape": {
     "line number": [
      61,
      61
     ]
    },
    "numpy.product": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray_assignment._indices": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "numpy.core.tests.test_multiarray_assignment._indices_for_axis": {
     "line number": [
      43
     ]
    },
    "numpy.core.tests.test_multiarray_assignment.ndims": {
     "line number": [
      48
     ]
    },
    "range": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray_assignment._indices_for_axis": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.core.tests.test_multiarray_assignment._indices_for_nelems": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray_assignment._indices_for_nelems": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.core.tests.test_multiarray_assignment.size": {
     "line number": [
      15,
      20
     ]
    },
    "slice": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray_assignment.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray_assignment.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray_assignment.ndims": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.core.tests.test_multiarray_assignment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray_assignment.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray_assignment.shape": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.core.tests.test_multiarray_assignment.size": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.core.tests.test_multiarray_assignment.test_overlapping_assignments": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "numpy.core.tests.test_multiarray_assignment._check_assignment": {
     "line number": [
      80
     ]
    },
    "numpy.core.tests.test_multiarray_assignment._indices": {
     "line number": [
      74
     ]
    },
    "numpy.core.tests.test_multiarray_assignment.ndims": {
     "line number": [
      74
     ]
    },
    "tuple": {
     "line number": [
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      2629
     ]
    },
    "run_module_suite": {
     "line number": [
      2630
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_nditer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.all": {
  "data": {
   "shadows": "numpy.all"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.iter_indices": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.iter_iterindices": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.iter_multi_index": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.nditer": {
  "data": {
   "shadows": "numpy.nditer"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.sixu": {
  "data": {
   "shadows": "numpy.compat.sixu"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.test_0d_iter": {
  "data": {
   "lineno": 2529,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      2536,
      2540
     ]
    },
    "assert_equal": {
     "line number": [
      2532,
      2533,
      2534,
      2535,
      2539,
      2544,
      2545,
      2554,
      2555,
      2556,
      2557
     ]
    },
    "assert_raises": {
     "line number": [
      2536,
      2540
     ]
    },
    "len": {
     "line number": [
      2545
     ]
    },
    "next": {
     "line number": [
      2533,
      2536,
      2539,
      2540,
      2553
     ]
    },
    "numpy.arange": {
     "line number": [
      2543
     ]
    },
    "numpy.array": {
     "line number": [
      2550
     ]
    },
    "numpy.nditer": {
     "line number": [
      2531,
      2543,
      2551
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_0d_nested_iter": {
  "data": {
   "lineno": 2560,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2566,
      2572,
      2579
     ]
    },
    "numpy.arange": {
     "line number": [
      2561
     ]
    },
    "numpy.nested_iters": {
     "line number": [
      2562,
      2568,
      2574
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_buffered_readwrite": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1253
     ]
    },
    "numpy.arange": {
     "line number": [
      1246
     ]
    },
    "numpy.nditer": {
     "line number": [
      1247
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_errors": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1362
     ]
    },
    "ValueError": {
     "line number": [
      1365,
      1368,
      1371,
      1377,
      1382,
      1387
     ]
    },
    "assert_raises": {
     "line number": [
      1362,
      1365,
      1368,
      1371,
      1377,
      1382,
      1387
     ]
    },
    "numpy.arange": {
     "line number": [
      1361,
      1376
     ]
    },
    "numpy.dtype": {
     "line number": [
      1374,
      1374,
      1379,
      1384,
      1389
     ]
    },
    "numpy.nditer": {
     "line number": [
      1362,
      1365,
      1368,
      1371,
      1377,
      1382,
      1387
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1380
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_itorder": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1262,
      1263,
      1264,
      1269,
      1270,
      1271,
      1278,
      1279,
      1280
     ]
    },
    "numpy.arange": {
     "line number": [
      1259,
      1266,
      1273
     ]
    },
    "numpy.dtype": {
     "line number": [
      1261,
      1264,
      1268,
      1271,
      1277,
      1280
     ]
    },
    "numpy.nditer": {
     "line number": [
      1260,
      1267,
      1274
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_opaxes": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1289,
      1290,
      1291
     ]
    },
    "numpy.arange": {
     "line number": [
      1285
     ]
    },
    "numpy.dtype": {
     "line number": [
      1287,
      1291
     ]
    },
    "numpy.nditer": {
     "line number": [
      1286
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_simple": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1240,
      1241
     ]
    },
    "numpy.arange": {
     "line number": [
      1237
     ]
    },
    "numpy.dtype": {
     "line number": [
      1239,
      1241
     ]
    },
    "numpy.nditer": {
     "line number": [
      1238
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_subtype": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1348
     ]
    },
    "assert_": {
     "line number": [
      1343,
      1354
     ]
    },
    "assert_equal": {
     "line number": [
      1342,
      1344,
      1353,
      1355
     ]
    },
    "assert_raises": {
     "line number": [
      1348
     ]
    },
    "numpy.arange": {
     "line number": [
      1339,
      1347
     ]
    },
    "numpy.matrix": {
     "line number": [
      1338
     ]
    },
    "numpy.nditer": {
     "line number": [
      1340,
      1348,
      1351
     ]
    },
    "type": {
     "line number": [
      1342,
      1342,
      1343,
      1343,
      1353,
      1353,
      1354,
      1354
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_types_byte_order": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1323
     ]
    },
    "assert_equal": {
     "line number": [
      1319,
      1324
     ]
    },
    "numpy.array": {
     "line number": [
      1316
     ]
    },
    "numpy.nditer": {
     "line number": [
      1317,
      1321
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_types_promotion": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1298,
      1301,
      1304,
      1307,
      1310
     ]
    },
    "numpy.array": {
     "line number": [
      1296,
      1296,
      1299,
      1299,
      1302,
      1302,
      1305,
      1305,
      1308,
      1308
     ]
    },
    "numpy.dtype": {
     "line number": [
      1298,
      1301,
      1304,
      1307,
      1310
     ]
    },
    "numpy.nditer": {
     "line number": [
      1296,
      1299,
      1302,
      1305,
      1308
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_types_scalar": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1331,
      1332
     ]
    },
    "numpy.complex128": {
     "line number": [
      1329
     ]
    },
    "numpy.dtype": {
     "line number": [
      1331
     ]
    },
    "numpy.float32": {
     "line number": [
      1329
     ]
    },
    "numpy.nditer": {
     "line number": [
      1329
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocated_array_dtypes": {
  "data": {
   "lineno": 2510,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2517,
      2526
     ]
    },
    "numpy.nditer": {
     "line number": [
      2513,
      2520
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_array_cast": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      869
     ]
    },
    "assert_equal": {
     "line number": [
      829,
      830,
      837,
      838,
      845,
      846,
      849,
      854,
      855,
      856,
      864,
      865,
      866,
      871,
      878,
      881,
      884
     ]
    },
    "numpy.arange": {
     "line number": [
      827,
      833,
      841,
      859,
      873
     ]
    },
    "numpy.dtype": {
     "line number": [
      828,
      830,
      836,
      838,
      844,
      846,
      853,
      855,
      863,
      865,
      877,
      878
     ]
    },
    "numpy.nditer": {
     "line number": [
      828,
      834,
      842,
      851,
      860,
      874
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_array_cast_errors": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      890,
      893,
      896,
      899,
      903,
      908,
      912,
      916,
      921,
      925
     ]
    },
    "assert_raises": {
     "line number": [
      890,
      893,
      896,
      899,
      903,
      908,
      912,
      916,
      921,
      925
     ]
    },
    "numpy.arange": {
     "line number": [
      890,
      893,
      896,
      899,
      903,
      908,
      912,
      916,
      921,
      925
     ]
    },
    "numpy.dtype": {
     "line number": [
      891,
      895,
      898,
      902,
      906,
      910,
      915,
      919,
      924,
      928
     ]
    },
    "numpy.nditer": {
     "line number": [
      890,
      893,
      896,
      899,
      903,
      908,
      912,
      916,
      921,
      925
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      90,
      93,
      97
     ]
    },
    "len": {
     "line number": [
      80,
      81,
      82,
      95
     ]
    },
    "numpy.arange": {
     "line number": [
      78
     ]
    },
    "numpy.nditer": {
     "line number": [
      89,
      92,
      96
     ]
    },
    "numpy.prod": {
     "line number": [
      78
     ]
    },
    "range": {
     "line number": [
      80,
      82
     ]
    },
    "slice": {
     "line number": [
      81,
      84
     ]
    },
    "tuple": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_c_index_1d": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      268,
      271
     ]
    },
    "numpy.arange": {
     "line number": [
      265
     ]
    },
    "numpy.core.tests.test_nditer.iter_indices": {
     "line number": [
      268,
      271
     ]
    },
    "numpy.nditer": {
     "line number": [
      267,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_c_index_2d": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      279,
      283,
      286,
      288,
      290,
      294,
      297,
      300
     ]
    },
    "numpy.arange": {
     "line number": [
      276
     ]
    },
    "numpy.core.tests.test_nditer.iter_indices": {
     "line number": [
      279,
      283,
      286,
      288,
      290,
      294,
      297,
      300
     ]
    },
    "numpy.nditer": {
     "line number": [
      278,
      281,
      285,
      287,
      289,
      292,
      295,
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_c_index_3d": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      308,
      313,
      317,
      320,
      323,
      328,
      332,
      336
     ]
    },
    "numpy.arange": {
     "line number": [
      305
     ]
    },
    "numpy.core.tests.test_nditer.iter_indices": {
     "line number": [
      308,
      313,
      317,
      320,
      323,
      328,
      332,
      336
     ]
    },
    "numpy.nditer": {
     "line number": [
      307,
      311,
      316,
      319,
      322,
      326,
      330,
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_f_index_1d": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      345,
      348
     ]
    },
    "numpy.arange": {
     "line number": [
      342
     ]
    },
    "numpy.core.tests.test_nditer.iter_indices": {
     "line number": [
      345,
      348
     ]
    },
    "numpy.nditer": {
     "line number": [
      344,
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_f_index_2d": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      356,
      360,
      363,
      365,
      367,
      371,
      374,
      377
     ]
    },
    "numpy.arange": {
     "line number": [
      353
     ]
    },
    "numpy.core.tests.test_nditer.iter_indices": {
     "line number": [
      356,
      360,
      363,
      365,
      367,
      371,
      374,
      377
     ]
    },
    "numpy.nditer": {
     "line number": [
      355,
      358,
      362,
      364,
      366,
      369,
      372,
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_f_index_3d": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      385,
      390,
      394,
      397,
      400,
      405,
      409,
      413
     ]
    },
    "numpy.arange": {
     "line number": [
      382
     ]
    },
    "numpy.core.tests.test_nditer.iter_indices": {
     "line number": [
      385,
      390,
      394,
      397,
      400,
      405,
      409,
      413
     ]
    },
    "numpy.nditer": {
     "line number": [
      384,
      388,
      393,
      396,
      399,
      403,
      407,
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_multi_index_1d": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      186,
      189
     ]
    },
    "numpy.arange": {
     "line number": [
      183
     ]
    },
    "numpy.core.tests.test_nditer.iter_multi_index": {
     "line number": [
      186,
      189
     ]
    },
    "numpy.nditer": {
     "line number": [
      185,
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_multi_index_2d": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      197,
      200,
      203,
      205,
      207,
      210,
      213,
      216
     ]
    },
    "numpy.arange": {
     "line number": [
      194
     ]
    },
    "numpy.core.tests.test_nditer.iter_multi_index": {
     "line number": [
      197,
      200,
      203,
      205,
      207,
      210,
      213,
      216
     ]
    },
    "numpy.nditer": {
     "line number": [
      196,
      199,
      202,
      204,
      206,
      209,
      211,
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_multi_index_3d": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      224,
      229,
      234,
      238,
      242,
      248,
      253,
      258
     ]
    },
    "numpy.arange": {
     "line number": [
      221
     ]
    },
    "numpy.core.tests.test_nditer.iter_multi_index": {
     "line number": [
      224,
      229,
      234,
      238,
      242,
      248,
      253,
      258
     ]
    },
    "numpy.nditer": {
     "line number": [
      223,
      228,
      233,
      237,
      241,
      246,
      251,
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_broadcasting": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      511,
      512,
      517,
      518,
      522,
      523,
      526,
      527,
      531,
      532,
      537,
      538,
      542,
      543,
      546,
      547,
      551,
      552,
      555,
      556,
      559,
      560,
      565,
      566,
      569,
      570,
      573,
      574
     ]
    },
    "numpy.arange": {
     "line number": [
      510,
      515,
      520,
      520,
      524,
      524,
      529,
      529,
      535,
      540,
      540,
      544,
      544,
      549,
      549,
      553,
      553,
      557,
      557,
      562,
      562,
      563,
      567,
      567,
      571,
      571
     ]
    },
    "numpy.int32": {
     "line number": [
      510,
      515,
      535
     ]
    },
    "numpy.nditer": {
     "line number": [
      510,
      515,
      520,
      524,
      529,
      535,
      540,
      544,
      549,
      553,
      557,
      562,
      567,
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_broadcasting_errors": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      611,
      614,
      618,
      621,
      625,
      628,
      640,
      655,
      672
     ]
    },
    "assert_": {
     "line number": [
      639,
      643,
      646,
      654,
      658,
      660,
      664,
      671,
      675,
      678
     ]
    },
    "assert_raises": {
     "line number": [
      611,
      614,
      618,
      621,
      625,
      628
     ]
    },
    "numpy.arange": {
     "line number": [
      611,
      611,
      615,
      615,
      619,
      619,
      622,
      622,
      626,
      626,
      629,
      629,
      634,
      635,
      636,
      650,
      650
     ]
    },
    "numpy.nditer": {
     "line number": [
      611,
      614,
      618,
      621,
      625,
      628,
      634,
      650,
      668
     ]
    },
    "numpy.newaxis": {
     "line number": [
      652
     ]
    },
    "numpy.zeros": {
     "line number": [
      668,
      668
     ]
    },
    "str": {
     "line number": [
      641,
      656,
      673
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_byteswapped": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1605,
      1619
     ]
    },
    "numpy.ComplexWarning": {
     "line number": [
      1608,
      1621
     ]
    },
    "numpy.arange": {
     "line number": [
      1596,
      1605,
      1610,
      1619
     ]
    },
    "numpy.core.tests.test_nditer.warnings": {
     "line number": [
      1608,
      1621
     ]
    },
    "numpy.dtype": {
     "line number": [
      1600,
      1614
     ]
    },
    "numpy.nditer": {
     "line number": [
      1597,
      1611
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_byteswapped_complex": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1635,
      1646,
      1657,
      1667
     ]
    },
    "numpy.arange": {
     "line number": [
      1626,
      1635,
      1637,
      1646,
      1648,
      1657,
      1659,
      1667
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      1648,
      1657
     ]
    },
    "numpy.dtype": {
     "line number": [
      1631,
      1642,
      1653,
      1663
     ]
    },
    "numpy.longdouble": {
     "line number": [
      1659,
      1667
     ]
    },
    "numpy.nditer": {
     "line number": [
      1628,
      1639,
      1650,
      1660
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_simple": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1591
     ]
    },
    "numpy.arange": {
     "line number": [
      1582,
      1591
     ]
    },
    "numpy.dtype": {
     "line number": [
      1586
     ]
    },
    "numpy.nditer": {
     "line number": [
      1583
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_structured_type": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1679,
      1680,
      1681,
      1682,
      1683,
      1684,
      1685,
      1686,
      1687,
      1700,
      1701,
      1702,
      1703,
      1704,
      1705,
      1706,
      1707,
      1708,
      1710,
      1718,
      1727,
      1728,
      1739,
      1744,
      1746,
      1755,
      1760,
      1762,
      1771,
      1776,
      1778,
      1787,
      1791,
      1793,
      1795
     ]
    },
    "numpy.arange": {
     "line number": [
      1674
     ]
    },
    "numpy.array": {
     "line number": [
      1678,
      1714,
      1723,
      1728,
      1729,
      1730,
      1735,
      1742,
      1744,
      1745,
      1746,
      1751,
      1758,
      1760,
      1761,
      1762,
      1767,
      1774,
      1776,
      1777,
      1778,
      1783,
      1790,
      1791,
      1793,
      1794,
      1795
     ]
    },
    "numpy.core.tests.test_nditer.sys": {
     "line number": [
      1695,
      1710
     ]
    },
    "numpy.dtype": {
     "line number": [
      1687,
      1708,
      1727,
      1739,
      1755,
      1771,
      1787
     ]
    },
    "numpy.nditer": {
     "line number": [
      1675,
      1696,
      1715,
      1724,
      1736,
      1752,
      1768,
      1784
     ]
    },
    "numpy.zeros": {
     "line number": [
      1691
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_subarray": {
  "data": {
   "lineno": 1797,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1810,
      1823
     ]
    },
    "assert_equal": {
     "line number": [
      1808,
      1820,
      1826,
      1836,
      1839,
      1842,
      1852,
      1855,
      1866,
      1869,
      1880,
      1883,
      1894,
      1897,
      1908,
      1911,
      1912,
      1923,
      1926,
      1927,
      1938,
      1941,
      1942,
      1943,
      1954,
      1957,
      1958,
      1959
     ]
    },
    "list": {
     "line number": [
      1809
     ]
    },
    "numpy.all": {
     "line number": [
      1810,
      1823
     ]
    },
    "numpy.arange": {
     "line number": [
      1804,
      1816,
      1826,
      1832,
      1842,
      1848,
      1862,
      1876,
      1890,
      1904,
      1919,
      1934,
      1950
     ]
    },
    "numpy.dtype": {
     "line number": [
      1808,
      1820,
      1836,
      1852,
      1866,
      1880,
      1894,
      1908,
      1923,
      1938,
      1954
     ]
    },
    "numpy.nditer": {
     "line number": [
      1805,
      1817,
      1833,
      1849,
      1863,
      1877,
      1891,
      1905,
      1920,
      1935,
      1951
     ]
    },
    "numpy.ones": {
     "line number": [
      1842
     ]
    },
    "numpy.zeros": {
     "line number": [
      1803,
      1815,
      1831,
      1847,
      1861,
      1875,
      1889,
      1903,
      1918,
      1933,
      1949
     ]
    },
    "range": {
     "line number": [
      1809
     ]
    },
    "zip": {
     "line number": [
      1809
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_reduce_reuse": {
  "data": {
   "lineno": 2023,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      2070
     ]
    },
    "get_params": {
     "line number": [
      2045
     ]
    },
    "numpy.arange": {
     "line number": [
      2026
     ]
    },
    "numpy.float": {
     "line number": [
      2031
     ]
    },
    "numpy.int_": {
     "line number": [
      2054,
      2067
     ]
    },
    "numpy.nditer": {
     "line number": [
      2046,
      2059
     ]
    },
    "range": {
     "line number": [
      2058
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_reduce_reuse.get_params": {
  "data": {
   "lineno": 2033,
   "symbols_in_volume": {
    "numpy.lib.stride_tricks.as_strided": {
     "line number": [
      2040
     ]
    },
    "range": {
     "line number": [
      2034,
      2035
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1532
     ]
    },
    "assert_equal": {
     "line number": [
      1535
     ]
    },
    "numpy.arange": {
     "line number": [
      1512,
      1515,
      1519,
      1522
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1535
     ]
    },
    "numpy.nditer": {
     "line number": [
      1526
     ]
    },
    "numpy.zeros": {
     "line number": [
      1517
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_badwriteback": {
  "data": {
   "lineno": 1962,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1968,
      1986,
      1991
     ]
    },
    "assert_raises": {
     "line number": [
      1968,
      1986,
      1991
     ]
    },
    "numpy.arange": {
     "line number": [
      1966,
      1967,
      1979,
      1985,
      1990
     ]
    },
    "numpy.nditer": {
     "line number": [
      1968,
      1974,
      1980,
      1986,
      1991
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_delayed_alloc": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1564,
      1565,
      1566,
      1569
     ]
    },
    "assert_": {
     "line number": [
      1563,
      1572
     ]
    },
    "assert_equal": {
     "line number": [
      1573,
      1574,
      1576,
      1577
     ]
    },
    "assert_raises": {
     "line number": [
      1564,
      1565,
      1566,
      1569
     ]
    },
    "list": {
     "line number": [
      1577
     ]
    },
    "numpy.arange": {
     "line number": [
      1557,
      1558
     ]
    },
    "numpy.nditer": {
     "line number": [
      1559
     ]
    },
    "range": {
     "line number": [
      1577
     ]
    },
    "zip": {
     "line number": [
      1577
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_delayed_alloc.assign_iter": {
  "data": {
   "lineno": 1567
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_growinner": {
  "data": {
   "lineno": 2014,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2020
     ]
    },
    "numpy.arange": {
     "line number": [
      2016
     ]
    },
    "numpy.nditer": {
     "line number": [
      2017
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_reduction": {
  "data": {
   "lineno": 2317,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      2326
     ]
    },
    "assert_equal": {
     "line number": [
      2325,
      2331,
      2339,
      2340,
      2344,
      2355
     ]
    },
    "numpy.arange": {
     "line number": [
      2320,
      2333,
      2347
     ]
    },
    "numpy.array": {
     "line number": [
      2321,
      2334
     ]
    },
    "numpy.dtype": {
     "line number": [
      2325
     ]
    },
    "numpy.nditer": {
     "line number": [
      2322,
      2335,
      2348
     ]
    },
    "numpy.sum": {
     "line number": [
      2331,
      2344
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_reduction_reuse_reduce_loops": {
  "data": {
   "lineno": 2357,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2371,
      2372
     ]
    },
    "numpy.nditer": {
     "line number": [
      2364
     ]
    },
    "numpy.zeros": {
     "line number": [
      2362,
      2363
     ]
    },
    "sum": {
     "line number": [
      2372
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_string": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2000,
      2008
     ]
    },
    "assert_equal": {
     "line number": [
      1999,
      2003,
      2004,
      2007,
      2011,
      2012
     ]
    },
    "assert_raises": {
     "line number": [
      2000,
      2008
     ]
    },
    "numpy.array": {
     "line number": [
      1998,
      2006
     ]
    },
    "numpy.bytes_": {
     "line number": [
      1998
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      2003
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      2011
     ]
    },
    "numpy.dtype": {
     "line number": [
      1999,
      2004,
      2007,
      2012
     ]
    },
    "numpy.nditer": {
     "line number": [
      2000,
      2002,
      2008,
      2010
     ]
    },
    "numpy.unicode": {
     "line number": [
      2006
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_c_or_f_order": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      170,
      173,
      177
     ]
    },
    "len": {
     "line number": [
      160,
      161,
      162,
      175
     ]
    },
    "numpy.arange": {
     "line number": [
      158
     ]
    },
    "numpy.nditer": {
     "line number": [
      169,
      172,
      176
     ]
    },
    "numpy.prod": {
     "line number": [
      158
     ]
    },
    "range": {
     "line number": [
      160,
      162
     ]
    },
    "slice": {
     "line number": [
      161,
      164
     ]
    },
    "tuple": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_c_order": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      116,
      119,
      123
     ]
    },
    "len": {
     "line number": [
      106,
      107,
      108,
      121
     ]
    },
    "numpy.arange": {
     "line number": [
      104
     ]
    },
    "numpy.nditer": {
     "line number": [
      115,
      118,
      122
     ]
    },
    "numpy.prod": {
     "line number": [
      104
     ]
    },
    "range": {
     "line number": [
      106,
      108
     ]
    },
    "slice": {
     "line number": [
      107,
      110
     ]
    },
    "tuple": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_common_dtype": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1066,
      1067,
      1072,
      1073,
      1078,
      1079,
      1084,
      1085,
      1090,
      1091,
      1097,
      1098,
      1099,
      1100,
      1101,
      1109,
      1110,
      1111,
      1119,
      1120,
      1121
     ]
    },
    "numpy.array": {
     "line number": [
      1062,
      1062,
      1068,
      1068,
      1074,
      1074,
      1080,
      1080,
      1086,
      1086,
      1092,
      1092,
      1093,
      1093,
      1104,
      1104,
      1113,
      1113
     ]
    },
    "numpy.dtype": {
     "line number": [
      1066,
      1067,
      1072,
      1073,
      1078,
      1079,
      1084,
      1085,
      1090,
      1091,
      1097,
      1098,
      1099,
      1100,
      1109,
      1110,
      1111,
      1119,
      1120,
      1121
     ]
    },
    "numpy.nditer": {
     "line number": [
      1062,
      1068,
      1074,
      1080,
      1086,
      1092,
      1104,
      1113
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_copy": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1194,
      1198,
      1203,
      1207,
      1211,
      1217,
      1224,
      1231
     ]
    },
    "next": {
     "line number": [
      1214,
      1215
     ]
    },
    "numpy.arange": {
     "line number": [
      1189,
      1226
     ]
    },
    "numpy.nditer": {
     "line number": [
      1192,
      1201,
      1220,
      1227
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_dim_coalescing": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      476,
      481,
      483,
      485,
      487,
      489,
      494,
      496,
      498,
      500,
      502,
      504
     ]
    },
    "numpy.arange": {
     "line number": [
      474,
      479,
      492
     ]
    },
    "numpy.nditer": {
     "line number": [
      475,
      480,
      482,
      484,
      486,
      488,
      493,
      495,
      497,
      499,
      501,
      503
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_element_deletion": {
  "data": {
   "lineno": 2500,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      2508
     ]
    },
    "TypeError": {
     "line number": [
      2505
     ]
    },
    "numpy.nditer": {
     "line number": [
      2501
     ]
    },
    "numpy.ones": {
     "line number": [
      2501
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_f_order": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      143,
      146,
      150
     ]
    },
    "len": {
     "line number": [
      133,
      134,
      135,
      148
     ]
    },
    "numpy.arange": {
     "line number": [
      131
     ]
    },
    "numpy.nditer": {
     "line number": [
      142,
      145,
      149
     ]
    },
    "numpy.prod": {
     "line number": [
      131
     ]
    },
    "range": {
     "line number": [
      133,
      135
     ]
    },
    "slice": {
     "line number": [
      134,
      137
     ]
    },
    "tuple": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      718,
      719,
      721,
      722
     ]
    },
    "ValueError": {
     "line number": [
      687,
      689,
      691,
      693,
      695,
      697,
      699,
      701,
      704,
      706,
      708,
      711,
      712,
      713,
      714,
      715,
      725,
      726,
      730,
      732,
      743,
      744,
      745,
      746,
      748,
      749,
      750,
      752
     ]
    },
    "assert_raises": {
     "line number": [
      687,
      689,
      691,
      693,
      695,
      697,
      699,
      701,
      704,
      706,
      708,
      711,
      712,
      713,
      714,
      715,
      718,
      719,
      721,
      722,
      725,
      726,
      730,
      732,
      743,
      744,
      745,
      746,
      748,
      749,
      750,
      752
     ]
    },
    "numpy.arange": {
     "line number": [
      684,
      729,
      742,
      747
     ]
    },
    "numpy.array": {
     "line number": [
      752
     ]
    },
    "numpy.int32": {
     "line number": [
      721,
      722
     ]
    },
    "numpy.nditer": {
     "line number": [
      687,
      689,
      691,
      693,
      695,
      697,
      699,
      701,
      704,
      706,
      708,
      711,
      712,
      713,
      714,
      715,
      718,
      719,
      721,
      722,
      725,
      726,
      729,
      742,
      747,
      752
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_index": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_iterindex": {
  "data": {
   "lineno": 738
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_iterrange": {
  "data": {
   "lineno": 740
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_multi_index": {
  "data": {
   "lineno": 734
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_iterindex": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1440,
      1442,
      1445,
      1447,
      1450,
      1452,
      1455,
      1457,
      1460,
      1462,
      1465
     ]
    },
    "list": {
     "line number": [
      1440,
      1442,
      1445,
      1447,
      1450,
      1452,
      1455,
      1457,
      1460,
      1462,
      1465
     ]
    },
    "numpy.arange": {
     "line number": [
      1437
     ]
    },
    "numpy.core.tests.test_nditer.iter_iterindices": {
     "line number": [
      1440,
      1442,
      1445,
      1447,
      1450,
      1452,
      1455,
      1457,
      1460,
      1462,
      1465
     ]
    },
    "numpy.nditer": {
     "line number": [
      1439,
      1444,
      1449,
      1454,
      1459
     ]
    },
    "range": {
     "line number": [
      1440,
      1442,
      1445,
      1447,
      1450,
      1452,
      1455,
      1457,
      1460,
      1462,
      1465
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_iterrange": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1476,
      1477,
      1480,
      1481,
      1485,
      1486,
      1489,
      1490,
      1501,
      1502,
      1505,
      1506
     ]
    },
    "get_array": {
     "line number": [
      1502,
      1506
     ]
    },
    "numpy.arange": {
     "line number": [
      1471
     ]
    },
    "numpy.nditer": {
     "line number": [
      1474,
      1483,
      1498
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_iterrange.get_array": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1493
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1495
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_itershape": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      600
     ]
    },
    "assert_equal": {
     "line number": [
      582,
      583,
      588,
      589,
      595,
      596
     ]
    },
    "assert_raises": {
     "line number": [
      600
     ]
    },
    "numpy.arange": {
     "line number": [
      578
     ]
    },
    "numpy.nditer": {
     "line number": [
      579,
      585,
      591,
      600,
      605
     ]
    },
    "numpy.ones": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_nbo_align_contig": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      770,
      784,
      797,
      800,
      804,
      814,
      820
     ]
    },
    "assert_equal": {
     "line number": [
      774,
      775,
      776,
      779,
      786,
      787,
      788,
      791,
      801,
      805,
      808,
      815,
      821
     ]
    },
    "numpy.arange": {
     "line number": [
      768,
      782,
      796,
      811
     ]
    },
    "numpy.dtype": {
     "line number": [
      773
     ]
    },
    "numpy.nditer": {
     "line number": [
      771,
      785,
      799,
      803,
      813,
      817
     ]
    },
    "numpy.zeros": {
     "line number": [
      794
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_nested_iters_basic": {
  "data": {
   "lineno": 2086,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2094,
      2100,
      2106
     ]
    },
    "numpy.arange": {
     "line number": [
      2088
     ]
    },
    "numpy.nested_iters": {
     "line number": [
      2090,
      2096,
      2102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_nested_iters_broadcast": {
  "data": {
   "lineno": 2192,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2201,
      2207
     ]
    },
    "numpy.arange": {
     "line number": [
      2194,
      2195
     ]
    },
    "numpy.nested_iters": {
     "line number": [
      2197,
      2203
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_nested_iters_dtype_buffered": {
  "data": {
   "lineno": 2238,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2247,
      2251
     ]
    },
    "numpy.arange": {
     "line number": [
      2241
     ]
    },
    "numpy.dtype": {
     "line number": [
      2247
     ]
    },
    "numpy.nested_iters": {
     "line number": [
      2242
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_nested_iters_dtype_copy": {
  "data": {
   "lineno": 2209,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2217,
      2221,
      2230,
      2234,
      2236
     ]
    },
    "numpy.arange": {
     "line number": [
      2213,
      2225
     ]
    },
    "numpy.dtype": {
     "line number": [
      2217,
      2230
     ]
    },
    "numpy.nested_iters": {
     "line number": [
      2214,
      2226
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_nested_iters_flip_axes": {
  "data": {
   "lineno": 2150,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2159,
      2165,
      2171,
      2178,
      2184,
      2190
     ]
    },
    "numpy.arange": {
     "line number": [
      2152
     ]
    },
    "numpy.nested_iters": {
     "line number": [
      2155,
      2161,
      2167,
      2174,
      2180,
      2186
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_nested_iters_reorder": {
  "data": {
   "lineno": 2108,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2117,
      2123,
      2129,
      2136,
      2142,
      2148
     ]
    },
    "numpy.arange": {
     "line number": [
      2110
     ]
    },
    "numpy.nested_iters": {
     "line number": [
      2113,
      2119,
      2125,
      2132,
      2138,
      2144
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_no_broadcast": {
  "data": {
   "lineno": 2073,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2081,
      2083
     ]
    },
    "assert_raises": {
     "line number": [
      2081,
      2083
     ]
    },
    "numpy.arange": {
     "line number": [
      2075,
      2076,
      2077
     ]
    },
    "numpy.nditer": {
     "line number": [
      2079,
      2081,
      2083
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_no_inner_dim_coalescing": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      453,
      454,
      457,
      458,
      461,
      462,
      467,
      468
     ]
    },
    "numpy.arange": {
     "line number": [
      451,
      455,
      459,
      465
     ]
    },
    "numpy.nditer": {
     "line number": [
      452,
      456,
      460,
      466
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_no_inner_full_coalesce": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      433,
      434,
      437,
      438,
      443,
      444
     ]
    },
    "len": {
     "line number": [
      423,
      424,
      425,
      440
     ]
    },
    "numpy.arange": {
     "line number": [
      421
     ]
    },
    "numpy.nditer": {
     "line number": [
      432,
      436,
      441
     ]
    },
    "numpy.prod": {
     "line number": [
      420
     ]
    },
    "range": {
     "line number": [
      423,
      425
     ]
    },
    "slice": {
     "line number": [
      424,
      427
     ]
    },
    "tuple": {
     "line number": [
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_non_writable_attribute_deletion": {
  "data": {
   "lineno": 2478,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      2487
     ]
    },
    "TypeError": {
     "line number": [
      2485
     ]
    },
    "assert_raises": {
     "line number": [
      2490
     ]
    },
    "delattr": {
     "line number": [
      2490
     ]
    },
    "numpy.core.tests.test_nditer.sys": {
     "line number": [
      2484
     ]
    },
    "numpy.nditer": {
     "line number": [
      2479
     ]
    },
    "numpy.ones": {
     "line number": [
      2479
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_object_arrays_basic": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      995
     ]
    },
    "assert_": {
     "line number": [
      1006
     ]
    },
    "assert_equal": {
     "line number": [
      996,
      1000,
      1002,
      1008,
      1010,
      1017,
      1018
     ]
    },
    "assert_raises": {
     "line number": [
      995
     ]
    },
    "numpy.array": {
     "line number": [
      991,
      1000,
      1008,
      1018
     ]
    },
    "numpy.core.tests.test_nditer.sys": {
     "line number": [
      992,
      996,
      1002,
      1010,
      1017
     ]
    },
    "numpy.nditer": {
     "line number": [
      995,
      998,
      1004,
      1012
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_object_arrays_conversions": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1027,
      1034,
      1044,
      1056,
      1057
     ]
    },
    "numpy.arange": {
     "line number": [
      1022,
      1027,
      1029,
      1034,
      1039,
      1044,
      1049,
      1057
     ]
    },
    "numpy.core.tests.test_nditer.sys": {
     "line number": [
      1053,
      1056
     ]
    },
    "numpy.nditer": {
     "line number": [
      1023,
      1030,
      1040,
      1050
     ]
    },
    "numpy.zeros": {
     "line number": [
      1037,
      1047
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_op_axes": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1129,
      1132
     ]
    },
    "assert_equal": {
     "line number": [
      1138,
      1141,
      1145,
      1152,
      1159
     ]
    },
    "numpy.all": {
     "line number": [
      1129,
      1132
     ]
    },
    "numpy.arange": {
     "line number": [
      1127,
      1130,
      1135,
      1136,
      1139,
      1142,
      1148,
      1149,
      1155,
      1156
     ]
    },
    "numpy.nditer": {
     "line number": [
      1128,
      1131,
      1137,
      1140,
      1143,
      1150,
      1157
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1144,
      1144
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_op_axes_errors": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1166,
      1169,
      1171,
      1174,
      1176,
      1180,
      1184
     ]
    },
    "assert_raises": {
     "line number": [
      1166,
      1169,
      1171,
      1174,
      1176,
      1180,
      1184
     ]
    },
    "numpy.arange": {
     "line number": [
      1165
     ]
    },
    "numpy.nditer": {
     "line number": [
      1166,
      1169,
      1171,
      1174,
      1176,
      1180,
      1184
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_reduction": {
  "data": {
   "lineno": 2265,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2278,
      2279,
      2288,
      2289,
      2294,
      2295,
      2314,
      2315
     ]
    },
    "numpy.arange": {
     "line number": [
      2268,
      2281
     ]
    },
    "numpy.nditer": {
     "line number": [
      2269,
      2282,
      2300,
      2303
     ]
    },
    "numpy.ones": {
     "line number": [
      2299
     ]
    },
    "numpy.sum": {
     "line number": [
      2279,
      2295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_reduction_error": {
  "data": {
   "lineno": 2253,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2256,
      2261
     ]
    },
    "assert_raises": {
     "line number": [
      2256,
      2261
     ]
    },
    "numpy.arange": {
     "line number": [
      2255,
      2260
     ]
    },
    "numpy.nditer": {
     "line number": [
      2256,
      2261
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_refcount": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      45,
      46,
      47,
      63,
      64
     ]
    },
    "assert_equal": {
     "line number": [
      49,
      50,
      66,
      67,
      69,
      70
     ]
    },
    "numpy.arange": {
     "line number": [
      37,
      53
     ]
    },
    "numpy.core.tests.test_nditer.sys": {
     "line number": [
      39,
      40,
      46,
      47,
      49,
      50,
      55,
      56,
      60,
      61,
      63,
      64,
      66,
      67,
      69,
      70
     ]
    },
    "numpy.dtype": {
     "line number": [
      38,
      54
     ]
    },
    "numpy.nditer": {
     "line number": [
      41,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_remove_axis": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1397,
      1402
     ]
    },
    "numpy.arange": {
     "line number": [
      1393
     ]
    },
    "numpy.nditer": {
     "line number": [
      1395,
      1400
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_remove_multi_index_inner_loop": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1421
     ]
    },
    "assert_equal": {
     "line number": [
      1410,
      1411,
      1412,
      1419,
      1420,
      1422,
      1426,
      1427,
      1429,
      1430,
      1431
     ]
    },
    "assert_raises": {
     "line number": [
      1421
     ]
    },
    "numpy.arange": {
     "line number": [
      1407,
      1431
     ]
    },
    "numpy.nditer": {
     "line number": [
      1409
     ]
    },
    "tuple": {
     "line number": [
      1427
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_scalar_cast": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      936,
      937,
      938,
      944,
      945,
      946,
      952,
      953,
      954,
      960,
      961,
      962,
      965,
      966
     ]
    },
    "numpy.dtype": {
     "line number": [
      935,
      936,
      937,
      943,
      944,
      945,
      951,
      952,
      953,
      959,
      960,
      961,
      964,
      965
     ]
    },
    "numpy.float32": {
     "line number": [
      934,
      940
     ]
    },
    "numpy.float64": {
     "line number": [
      948,
      956
     ]
    },
    "numpy.nditer": {
     "line number": [
      934,
      940,
      948,
      956,
      964
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_scalar_cast_errors": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      972,
      974,
      977,
      982
     ]
    },
    "assert_raises": {
     "line number": [
      972,
      974,
      977,
      982
     ]
    },
    "numpy.dtype": {
     "line number": [
      973,
      975,
      980,
      985
     ]
    },
    "numpy.float32": {
     "line number": [
      972,
      982
     ]
    },
    "numpy.float64": {
     "line number": [
      977
     ]
    },
    "numpy.nditer": {
     "line number": [
      972,
      974,
      977,
      982
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_slice": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      758,
      759,
      760,
      762
     ]
    },
    "numpy.arange": {
     "line number": [
      755,
      755,
      755
     ]
    },
    "numpy.nditer": {
     "line number": [
      756
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_too_large": {
  "data": {
   "lineno": 2582,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2588,
      2591
     ]
    },
    "assert_raises": {
     "line number": [
      2588,
      2591
     ]
    },
    "numpy.iinfo": {
     "line number": [
      2586
     ]
    },
    "numpy.intp": {
     "line number": [
      2586
     ]
    },
    "numpy.lib.stride_tricks.as_strided": {
     "line number": [
      2587
     ]
    },
    "numpy.nditer": {
     "line number": [
      2588,
      2591
     ]
    },
    "numpy.zeros": {
     "line number": [
      2587
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_too_large_with_multiindex": {
  "data": {
   "lineno": 2595,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2615,
      2625
     ]
    },
    "assert_raises": {
     "line number": [
      2615,
      2625
     ]
    },
    "numpy.core.multiarray_tests.test_nditer_too_large": {
     "line number": [
      2615,
      2617,
      2623,
      2625
     ]
    },
    "numpy.empty": {
     "line number": [
      2609
     ]
    },
    "numpy.iinfo": {
     "line number": [
      2601
     ]
    },
    "numpy.intp": {
     "line number": [
      2601
     ]
    },
    "range": {
     "line number": [
      2606,
      2614,
      2620,
      2621
     ]
    },
    "tuple": {
     "line number": [
      2610
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_writable_attribute_deletion": {
  "data": {
   "lineno": 2493,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      2497
     ]
    },
    "assert_raises": {
     "line number": [
      2497
     ]
    },
    "delattr": {
     "line number": [
      2497
     ]
    },
    "numpy.nditer": {
     "line number": [
      2494
     ]
    },
    "numpy.ones": {
     "line number": [
      2494
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_write_buffering": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1552
     ]
    },
    "numpy.arange": {
     "line number": [
      1541,
      1552
     ]
    },
    "numpy.nditer": {
     "line number": [
      1542
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_writemasked": {
  "data": {
   "lineno": 2440,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2452,
      2462,
      2476
     ]
    },
    "numpy.array": {
     "line number": [
      2442
     ]
    },
    "numpy.nditer": {
     "line number": [
      2446,
      2456,
      2467
     ]
    },
    "numpy.zeros": {
     "line number": [
      2441
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_writemasked_badinput": {
  "data": {
   "lineno": 2374,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2428,
      2434
     ]
    },
    "ValueError": {
     "line number": [
      2384,
      2388,
      2392,
      2396,
      2402,
      2406,
      2416
     ]
    },
    "assert_raises": {
     "line number": [
      2384,
      2388,
      2392,
      2396,
      2402,
      2406,
      2416,
      2428,
      2434
     ]
    },
    "numpy.array": {
     "line number": [
      2377,
      2378,
      2379,
      2380,
      2381
     ]
    },
    "numpy.nditer": {
     "line number": [
      2384,
      2388,
      2392,
      2396,
      2402,
      2406,
      2411,
      2416,
      2422,
      2428,
      2434
     ]
    },
    "numpy.zeros": {
     "line number": [
      2375,
      2376
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_nditer_too_large": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_nditer_too_large"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1800
     ]
    },
    "run_module_suite": {
     "line number": [
      1801
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_numeric.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.NIterError": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      667
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestAllclose": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1290
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestAllclose.setUp": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": {
    "numpy.seterr": {
     "line number": [
      1295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.tearDown": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": {
    "numpy.seterr": {
     "line number": [
      1298
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_ip_allclose": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      1309
     ]
    },
    "array": {
     "line number": [
      1308
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_ip_not_allclose": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      1328
     ]
    },
    "array": {
     "line number": [
      1342,
      1342
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_no_parameter_modification": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": {
    "allclose": {
     "line number": [
      1350
     ]
    },
    "array": {
     "line number": [
      1348,
      1349,
      1351,
      1352
     ]
    },
    "assert_array_equal": {
     "line number": [
      1351,
      1352
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.tst_allclose": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": {
    "allclose": {
     "line number": [
      1301
     ]
    },
    "assert_": {
     "line number": [
      1301
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.tst_not_allclose": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": {
    "allclose": {
     "line number": [
      1304
     ]
    },
    "assert_": {
     "line number": [
      1304
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArgwhere": {
  "data": {
   "lineno": 1753,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1753
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestArgwhere.test_2D": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      1756
     ]
    },
    "numpy.arange": {
     "line number": [
      1755
     ]
    },
    "numpy.argwhere": {
     "line number": [
      1756
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArgwhere.test_list": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1763
     ]
    },
    "numpy.argwhere": {
     "line number": [
      1763
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons": {
  "data": {
   "lineno": 812
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_array_equal": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": {
    "array": {
     "line number": [
      814,
      814,
      817,
      817,
      820,
      820,
      823,
      823,
      826,
      826,
      829,
      829
     ]
    },
    "array_equal": {
     "line number": [
      814,
      817,
      820,
      823,
      826,
      829
     ]
    },
    "assert_": {
     "line number": [
      815,
      816,
      818,
      819,
      821,
      822,
      824,
      825,
      827,
      828,
      830,
      831
     ]
    },
    "bool": {
     "line number": [
      816,
      819,
      822,
      825,
      828,
      831
     ]
    },
    "type": {
     "line number": [
      816,
      819,
      822,
      825,
      828,
      831
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_array_equiv": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": {
    "array": {
     "line number": [
      834,
      834,
      837,
      837,
      840,
      840,
      843,
      843,
      847,
      847,
      850,
      850,
      853,
      853,
      856,
      856,
      859,
      859
     ]
    },
    "array_equiv": {
     "line number": [
      834,
      837,
      840,
      843,
      847,
      850,
      853,
      856,
      859
     ]
    },
    "assert_": {
     "line number": [
      835,
      836,
      838,
      839,
      841,
      842,
      844,
      845,
      848,
      849,
      851,
      852,
      854,
      855,
      857,
      858,
      860,
      861
     ]
    },
    "bool": {
     "line number": [
      836,
      839,
      842,
      845,
      849,
      852,
      855,
      858,
      861
     ]
    },
    "type": {
     "line number": [
      836,
      839,
      842,
      845,
      849,
      852,
      855,
      858,
      861
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr": {
  "data": {
   "lineno": 797
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_base3": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      799
     ]
    },
    "base_repr": {
     "line number": [
      799
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_negative": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      808,
      809,
      810
     ]
    },
    "base_repr": {
     "line number": [
      808,
      809,
      810
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_positive": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      802,
      803,
      804,
      805
     ]
    },
    "base_repr": {
     "line number": [
      802,
      803,
      804,
      805
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr": {
  "data": {
   "lineno": 786
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_large": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      791
     ]
    },
    "binary_repr": {
     "line number": [
      791
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_negative": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      794,
      795
     ]
    },
    "binary_repr": {
     "line number": [
      794,
      795
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_zero": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      788
     ]
    },
    "binary_repr": {
     "line number": [
      788
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray": {
  "data": {
   "lineno": 243
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.setUp": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "array": {
     "line number": [
      246,
      247,
      248
     ]
    },
    "numpy.bool": {
     "line number": [
      246,
      247,
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.test_all_any": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "array": {
     "line number": [
      267,
      270,
      276,
      279
     ]
    },
    "assert_array_equal": {
     "line number": [
      273
     ]
    },
    "list": {
     "line number": [
      275
     ]
    },
    "numpy.all": {
     "line number": [
      272,
      281
     ]
    },
    "numpy.any": {
     "line number": [
      269,
      278
     ]
    },
    "numpy.bool": {
     "line number": [
      267,
      270,
      276,
      279
     ]
    },
    "range": {
     "line number": [
      266,
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.test_logical_and_or_xor": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      297,
      298,
      299,
      300,
      302,
      303,
      304,
      305,
      306,
      308,
      309,
      310,
      311,
      312,
      314,
      316,
      317,
      318,
      319,
      320,
      321,
      322,
      323,
      324,
      325,
      326,
      327
     ]
    },
    "numpy.logical_and": {
     "line number": [
      307
     ]
    },
    "numpy.logical_or": {
     "line number": [
      301
     ]
    },
    "numpy.logical_xor": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.test_logical_not_abs": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      284,
      285,
      286,
      287,
      288,
      289,
      290,
      292,
      294
     ]
    },
    "numpy.abs": {
     "line number": [
      285,
      286,
      287,
      288,
      289,
      290,
      293
     ]
    },
    "numpy.logical_not": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp": {
  "data": {
   "lineno": 330
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp.setUp": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "numpy.bool": {
     "line number": [
      333,
      335
     ]
    },
    "numpy.float32": {
     "line number": [
      332
     ]
    },
    "numpy.float64": {
     "line number": [
      334
     ]
    },
    "ones": {
     "line number": [
      332,
      333,
      334,
      335
     ]
    },
    "range": {
     "line number": [
      338,
      339,
      340,
      343,
      344,
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp.test_double": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      365,
      366,
      367,
      368,
      369,
      370,
      372,
      373
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      373
     ]
    },
    "range": {
     "line number": [
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp.test_float": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      351,
      352,
      353,
      354,
      355,
      356,
      358,
      359
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      359
     ]
    },
    "range": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar": {
  "data": {
   "lineno": 210
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_and": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_or": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_xor": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_logical": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip": {
  "data": {
   "lineno": 872
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_data": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      890
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_data_complex": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": {
    "numpy.random.rand": {
     "line number": [
      893
     ]
    },
    "numpy.random.randn": {
     "line number": [
      893
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_flt_data": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": {
    "float32": {
     "line number": [
      896
     ]
    },
    "numpy.random.randn": {
     "line number": [
      896
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_int32_data": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": {
    "int32": {
     "line number": [
      916
     ]
    },
    "numpy.random.rand": {
     "line number": [
      916
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_int_data": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": {
    "int64": {
     "line number": [
      913
     ]
    },
    "numpy.random.rand": {
     "line number": [
      913
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_non_native_data": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      909
     ]
    },
    "numpy.random.randn": {
     "line number": [
      907
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._neg_byteorder": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": {
    "asarray": {
     "line number": [
      899
     ]
    },
    "numpy.core.tests.test_numeric.sys": {
     "line number": [
      900
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.clip": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": {
    "greater": {
     "line number": [
      885
     ]
    },
    "less": {
     "line number": [
      885
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.fastclip": {
  "data": {
   "lineno": 877
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.setUp": {
  "data": {
   "lineno": 873
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_array_double": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      945
     ]
    },
    "zeros": {
     "line number": [
      941
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_func_takes_out": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": {
    "clip": {
     "line number": [
      1284
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1286
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_inplace_array": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1266
     ]
    },
    "zeros": {
     "line number": [
      1262
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_inplace_simple": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1276
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_non_contig": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      988,
      989
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      992
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_array_int32": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": {
    "float64": {
     "line number": [
      1239,
      1240
     ]
    },
    "int32": {
     "line number": [
      1241
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1245
     ]
    },
    "zeros": {
     "line number": [
      1239,
      1241
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_array_outint32": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": {
    "int32": {
     "line number": [
      1252
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1256
     ]
    },
    "zeros": {
     "line number": [
      1252
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1212
     ]
    },
    "zeros": {
     "line number": [
      1208,
      1209
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple2": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": {
    "float64": {
     "line number": [
      1217,
      1218
     ]
    },
    "int32": {
     "line number": [
      1219
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1223
     ]
    },
    "zeros": {
     "line number": [
      1219
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple_int32": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": {
    "int32": {
     "line number": [
      1228,
      1229
     ]
    },
    "int64": {
     "line number": [
      1230
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1234
     ]
    },
    "zeros": {
     "line number": [
      1230
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_noncontig_inplace": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1073,
      1074
     ]
    },
    "assert_array_equal": {
     "line number": [
      1080
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_complex": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      974,
      982
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_double": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      926
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_inplace_01": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1057
     ]
    },
    "zeros": {
     "line number": [
      1053
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_inplace_02": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1067
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": {
    "int": {
     "line number": [
      931
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      936
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int32_inout": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": {
    "float64": {
     "line number": [
      1008,
      1009
     ]
    },
    "int32": {
     "line number": [
      1010
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1014
     ]
    },
    "zeros": {
     "line number": [
      1010
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int32_out": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": {
    "int32": {
     "line number": [
      1043
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1047
     ]
    },
    "zeros": {
     "line number": [
      1043
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int64_inout": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": {
    "float64": {
     "line number": [
      1030,
      1031
     ]
    },
    "int32": {
     "line number": [
      1032
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1036
     ]
    },
    "zeros": {
     "line number": [
      1030,
      1032
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int64_out": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": {
    "int32": {
     "line number": [
      1019,
      1020
     ]
    },
    "int64": {
     "line number": [
      1021
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1025
     ]
    },
    "zeros": {
     "line number": [
      1021
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_nonnative": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      961
     ]
    },
    "assert_array_equal": {
     "line number": [
      955,
      964
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_out": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1003
     ]
    },
    "zeros": {
     "line number": [
      999,
      1000
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_01": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1089
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_02": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": {
    "int32": {
     "line number": [
      1094
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1099
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_03": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": {
    "float64": {
     "line number": [
      1106,
      1106,
      1107,
      1107
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_04": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": {
    "float32": {
     "line number": [
      1113,
      1114
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1117
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_05": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1126
     ]
    },
    "zeros": {
     "line number": [
      1124,
      1125
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_06": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_07": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1144
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1147
     ]
    },
    "ones": {
     "line number": [
      1141
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_08": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1155
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1158
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_09": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1166
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1169
     ]
    },
    "ones": {
     "line number": [
      1163
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_10": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": {
    "float32": {
     "line number": [
      1174,
      1175,
      1176
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1179
     ]
    },
    "zeros": {
     "line number": [
      1174
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_11": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1191
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_12": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": {
    "float32": {
     "line number": [
      1196
     ]
    },
    "int32": {
     "line number": [
      1197,
      1198
     ]
    },
    "numpy.core.tests.test_numeric.assert_array_strict_equal": {
     "line number": [
      1201
     ]
    },
    "zeros": {
     "line number": [
      1196
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric._TestCorrelate": {
     "line number": [
      1715
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCorrelate._setup": {
  "data": {
   "lineno": 1717,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric._TestCorrelate": {
     "line number": [
      1721
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_complex": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      1730
     ]
    },
    "numpy.array": {
     "line number": [
      1726,
      1727,
      1728
     ]
    },
    "numpy.complex": {
     "line number": [
      1726,
      1727,
      1728
     ]
    },
    "numpy.correlate": {
     "line number": [
      1729
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_float": {
  "data": {
   "lineno": 1732,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric._TestCorrelate": {
     "line number": [
      1734
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_object": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric._TestCorrelate": {
     "line number": [
      1738
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelateNew": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric._TestCorrelate": {
     "line number": [
      1740
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCorrelateNew.test_complex": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      1751
     ]
    },
    "numpy.array": {
     "line number": [
      1743,
      1744,
      1745
     ]
    },
    "numpy.complex": {
     "line number": [
      1743,
      1744,
      1745
     ]
    },
    "numpy.correlate": {
     "line number": [
      1750
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs": {
  "data": {
   "lineno": 1504
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.check_function": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      1524
     ]
    },
    "TypeError": {
     "line number": [
      1529
     ]
    },
    "assert_": {
     "line number": [
      1539,
      1540
     ]
    },
    "assert_equal": {
     "line number": [
      1547
     ]
    },
    "bytes": {
     "line number": [
      1525,
      1528
     ]
    },
    "dtype": {
     "line number": [
      1528,
      1536,
      1539
     ]
    },
    "dtype.str.startswith": {
     "line number": [
      1543
     ]
    },
    "dtype.type": {
     "line number": [
      1547
     ]
    },
    "func": {
     "line number": [
      1536
     ]
    },
    "getattr": {
     "line number": [
      1540
     ]
    },
    "numpy.arange": {
     "line number": [
      1518
     ]
    },
    "numpy.core.tests.test_numeric.itertools": {
     "line number": [
      1525
     ]
    },
    "numpy.core.tests.test_numeric.warnings": {
     "line number": [
      1523,
      1524
     ]
    },
    "numpy.dtype": {
     "line number": [
      1528
     ]
    },
    "range": {
     "line number": [
      1515
     ]
    },
    "size": {
     "line number": [
      1525,
      1526
     ]
    },
    "str": {
     "line number": [
      1544
     ]
    },
    "type": {
     "line number": [
      1525,
      1528,
      1533
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.setUp": {
  "data": {
   "lineno": 1507
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_empty": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      1556
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_filled": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": {
    "numpy.full": {
     "line number": [
      1559,
      1560
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_for_reference_leak": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1567,
      1569,
      1571,
      1573
     ]
    },
    "numpy.core.tests.test_numeric.sys": {
     "line number": [
      1565,
      1567,
      1569,
      1571,
      1573
     ]
    },
    "numpy.empty": {
     "line number": [
      1570
     ]
    },
    "numpy.full": {
     "line number": [
      1572
     ]
    },
    "numpy.ones": {
     "line number": [
      1568
     ]
    },
    "numpy.zeros": {
     "line number": [
      1566
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_ones": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      1553
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_zeros": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      1550
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestDot.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.random.rand": {
     "line number": [
      39,
      40,
      41,
      42,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_all": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      130
     ]
    },
    "assert_almost_equal": {
     "line number": [
      131
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      128,
      129
     ]
    },
    "numpy.random.rand": {
     "line number": [
      126,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_columnvect1": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      99
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      97,
      98
     ]
    },
    "ones": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_columnvect2": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      106
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      104,
      105
     ]
    },
    "ones": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_matmat": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      50
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_matvec": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      56
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      54,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_matvec2": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      62
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecmat": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      68
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      66,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecmat2": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      74
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecmat3": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      80
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      78,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecobject": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "array": {
     "line number": [
      136,
      137
     ]
    },
    "ascontiguousarray": {
     "line number": [
      135
     ]
    },
    "assert_equal": {
     "line number": [
      139,
      140
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      138,
      138
     ]
    },
    "numpy.core.tests.test_numeric.Vec": {
     "line number": [
      136,
      136,
      137,
      137
     ]
    },
    "transpose": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecscalar": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      113
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      111,
      112
     ]
    },
    "numpy.random.rand": {
     "line number": [
      109,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecscalar2": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      120
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      118,
      119
     ]
    },
    "numpy.random.rand": {
     "line number": [
      116,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecvecinner": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      92
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecvecouter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      86
     ]
    },
    "numpy.core.multiarray.dot": {
     "line number": [
      84,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions": {
  "data": {
   "lineno": 413
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.assert_op_raises_fpe": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "flop": {
     "line number": [
      431,
      432,
      433,
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.assert_raises_fpe": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "FloatingPointError": {
     "line number": [
      420
     ]
    },
    "assert_": {
     "line number": [
      418,
      421
     ]
    },
    "flop": {
     "line number": [
      417
     ]
    },
    "str": {
     "line number": [
      421
     ]
    },
    "type": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.test_floating_exceptions": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "ftype": {
     "line number": [
      453,
      455,
      456,
      457,
      469,
      471,
      477,
      477,
      479,
      479,
      481,
      481,
      483,
      483,
      485,
      485,
      487,
      487,
      489,
      489
     ]
    },
    "numpy.dtype": {
     "line number": [
      443
     ]
    },
    "numpy.errstate": {
     "line number": [
      439
     ]
    },
    "numpy.finfo": {
     "line number": [
      445,
      454
     ]
    },
    "numpy.inf": {
     "line number": [
      481,
      481,
      485,
      485,
      487,
      487,
      489
     ]
    },
    "numpy.obj2sctype": {
     "line number": [
      442
     ]
    },
    "numpy.power": {
     "line number": [
      477
     ]
    },
    "numpy.typecodes": {
     "line number": [
      441
     ]
    },
    "type": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter": {
  "data": {
   "lineno": 670
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestFromiter.load_data": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.NIterError": {
     "line number": [
      704
     ]
    },
    "range": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.makegen": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": {
    "range": {
     "line number": [
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_2592": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "int": {
     "line number": [
      711
     ]
    },
    "numpy.core.tests.test_numeric.NIterError": {
     "line number": [
      710
     ]
    },
    "numpy.fromiter": {
     "line number": [
      710
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_2592_edge": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": {
    "int": {
     "line number": [
      718
     ]
    },
    "numpy.core.tests.test_numeric.NIterError": {
     "line number": [
      717
     ]
    },
    "numpy.fromiter": {
     "line number": [
      717
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_lengths": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      689
     ]
    },
    "array": {
     "line number": [
      684
     ]
    },
    "fromiter": {
     "line number": [
      685,
      686,
      689
     ]
    },
    "int": {
     "line number": [
      685,
      686,
      690
     ]
    },
    "len": {
     "line number": [
      687,
      687,
      688,
      690
     ]
    },
    "list": {
     "line number": [
      684
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_types": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": {
    "dtype": {
     "line number": [
      679,
      680,
      681
     ]
    },
    "float": {
     "line number": [
      678,
      681
     ]
    },
    "fromiter": {
     "line number": [
      676,
      677,
      678
     ]
    },
    "int32": {
     "line number": [
      676,
      679
     ]
    },
    "int64": {
     "line number": [
      677,
      680
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_values": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "alltrue": {
     "line number": [
      696,
      697
     ]
    },
    "array": {
     "line number": [
      693
     ]
    },
    "fromiter": {
     "line number": [
      694,
      695
     ]
    },
    "int": {
     "line number": [
      694,
      695
     ]
    },
    "list": {
     "line number": [
      693
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndex": {
  "data": {
   "lineno": 769
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestIndex.test_boolean": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": {
    "array": {
     "line number": [
      776
     ]
    },
    "assert_": {
     "line number": [
      776
     ]
    },
    "numpy.random.rand": {
     "line number": [
      771,
      772
     ]
    },
    "numpy.random.randint": {
     "line number": [
      773,
      774
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndex.test_boolean_edgecase": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      782,
      783
     ]
    },
    "numpy.array": {
     "line number": [
      779,
      780
     ]
    },
    "numpy.dtype": {
     "line number": [
      783
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1355
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestIsclose.setup": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      1363,
      1390
     ]
    },
    "array": {
     "line number": [
      1362,
      1385,
      1385
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_equal_nan": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": {
    "array": {
     "line number": [
      1441
     ]
    },
    "assert_array_equal": {
     "line number": [
      1440,
      1442
     ]
    },
    "isclose": {
     "line number": [
      1440,
      1442
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_all_isclose": {
  "data": {
   "lineno": 1422
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_isclose": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      1409
     ]
    },
    "isclose": {
     "line number": [
      1409
     ]
    },
    "zip": {
     "line number": [
      1408
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_isclose_allclose": {
  "data": {
   "lineno": 1432
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_none_isclose": {
  "data": {
   "lineno": 1427
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_masked_arrays": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1446,
      1449,
      1453
     ]
    },
    "assert_array_equal": {
     "line number": [
      1455
     ]
    },
    "isclose": {
     "line number": [
      1446,
      1449,
      1452
     ]
    },
    "numpy.arange": {
     "line number": [
      1445
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      1445,
      1448,
      1451
     ]
    },
    "type": {
     "line number": [
      1446,
      1446,
      1449,
      1449,
      1453,
      1453
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_no_parameter_modification": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": {
    "array": {
     "line number": [
      1461,
      1462,
      1464,
      1465
     ]
    },
    "assert_array_equal": {
     "line number": [
      1464,
      1465
     ]
    },
    "isclose": {
     "line number": [
      1463
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_scalar_return": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1458
     ]
    },
    "isclose": {
     "line number": [
      1458
     ]
    },
    "isscalar": {
     "line number": [
      1458
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.tst_all_isclose": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": {
    "all": {
     "line number": [
      1412
     ]
    },
    "assert_": {
     "line number": [
      1412
     ]
    },
    "isclose": {
     "line number": [
      1412
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.tst_isclose_allclose": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": {
    "allclose": {
     "line number": [
      1420
     ]
    },
    "assert_array_equal": {
     "line number": [
      1420
     ]
    },
    "isclose": {
     "line number": [
      1420
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.tst_none_isclose": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": {
    "any": {
     "line number": [
      1416
     ]
    },
    "assert_": {
     "line number": [
      1416
     ]
    },
    "isclose": {
     "line number": [
      1416
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs": {
  "data": {
   "lineno": 1577
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.check_like_function": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": {
    "array": {
     "line number": [
      1626,
      1627
     ]
    },
    "assert_": {
     "line number": [
      1639,
      1649,
      1660,
      1662,
      1673,
      1676
     ]
    },
    "assert_equal": {
     "line number": [
      1625,
      1626,
      1628,
      1629,
      1631,
      1633,
      1638,
      1641,
      1643,
      1648,
      1651,
      1653,
      1658,
      1664,
      1666
     ]
    },
    "dtype": {
     "line number": [
      1622,
      1624,
      1630,
      1633,
      1637,
      1640,
      1643,
      1647,
      1650,
      1653,
      1657,
      1663,
      1666
     ]
    },
    "like_function": {
     "line number": [
      1624,
      1637,
      1647,
      1657,
      1672,
      1675
     ]
    },
    "numpy.dtype": {
     "line number": [
      1633,
      1643,
      1653,
      1666
     ]
    },
    "numpy.matrix": {
     "line number": [
      1670,
      1673,
      1676
     ]
    },
    "type": {
     "line number": [
      1673,
      1676
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.compare_array_value": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      1610
     ]
    },
    "all": {
     "line number": [
      1613,
      1615
     ]
    },
    "assert_": {
     "line number": [
      1613,
      1615
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.setUp": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      1586,
      1587,
      1589,
      1590,
      1592,
      1593,
      1595,
      1596,
      1598,
      1599,
      1601,
      1602
     ]
    },
    "array": {
     "line number": [
      1583,
      1584
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_empty_like": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": {
    "numpy.empty_like": {
     "line number": [
      1685
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_filled_like": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": {
    "numpy.full_like": {
     "line number": [
      1688,
      1689,
      1690,
      1691,
      1692
     ]
    },
    "numpy.inf": {
     "line number": [
      1692
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_ones_like": {
  "data": {
   "lineno": 1678,
   "symbols_in_volume": {
    "numpy.ones_like": {
     "line number": [
      1679
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_zeros_like": {
  "data": {
   "lineno": 1681,
   "symbols_in_volume": {
    "numpy.zeros_like": {
     "line number": [
      1682
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs": {
  "data": {
   "lineno": 160
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_cumproduct": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "all": {
     "line number": [
      168
     ]
    },
    "array": {
     "line number": [
      168
     ]
    },
    "assert_": {
     "line number": [
      168
     ]
    },
    "cumproduct": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_mean": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      183,
      185
     ]
    },
    "all": {
     "line number": [
      179,
      180
     ]
    },
    "array": {
     "line number": [
      179,
      180
     ]
    },
    "assert_": {
     "line number": [
      178,
      179,
      180,
      184,
      185
     ]
    },
    "isnan": {
     "line number": [
      184
     ]
    },
    "mean": {
     "line number": [
      178,
      179,
      180,
      184
     ]
    },
    "numpy.core.tests.test_numeric.warnings": {
     "line number": [
      182,
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_size": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      172,
      173,
      174
     ]
    },
    "size": {
     "line number": [
      172,
      173,
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_squeeze": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      164
     ]
    },
    "squeeze": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_std": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      194,
      196
     ]
    },
    "array": {
     "line number": [
      190,
      191
     ]
    },
    "assert_": {
     "line number": [
      195,
      196
     ]
    },
    "assert_almost_equal": {
     "line number": [
      189,
      190,
      191
     ]
    },
    "isnan": {
     "line number": [
      195
     ]
    },
    "numpy.core.tests.test_numeric.warnings": {
     "line number": [
      193,
      194
     ]
    },
    "std": {
     "line number": [
      189,
      190,
      191,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_var": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      205,
      207
     ]
    },
    "array": {
     "line number": [
      201,
      202
     ]
    },
    "assert_": {
     "line number": [
      206,
      207
     ]
    },
    "assert_almost_equal": {
     "line number": [
      200,
      201,
      202
     ]
    },
    "isnan": {
     "line number": [
      206
     ]
    },
    "numpy.core.tests.test_numeric.warnings": {
     "line number": [
      204,
      205
     ]
    },
    "var": {
     "line number": [
      200,
      201,
      202,
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero": {
  "data": {
   "lineno": 721
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_onedim": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": {
    "array": {
     "line number": [
      735,
      740
     ]
    },
    "assert_equal": {
     "line number": [
      736,
      737,
      738,
      742,
      743,
      744,
      745
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      736,
      737,
      742,
      743
     ]
    },
    "numpy.nonzero": {
     "line number": [
      738,
      744,
      745
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_trivial": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": {
    "array": {
     "line number": [
      723,
      724,
      725,
      727,
      728,
      729,
      730,
      731,
      732
     ]
    },
    "assert_equal": {
     "line number": [
      723,
      724,
      725,
      727,
      728,
      729,
      730,
      731,
      732
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      723,
      724,
      727,
      728,
      730,
      731
     ]
    },
    "numpy.nonzero": {
     "line number": [
      725,
      729,
      732
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_twodim": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": {
    "array": {
     "line number": [
      748,
      756
     ]
    },
    "assert_equal": {
     "line number": [
      749,
      750,
      753,
      754,
      759,
      760,
      761,
      762,
      764,
      765,
      766,
      767
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      749,
      753,
      759,
      760,
      764,
      765
     ]
    },
    "numpy.eye": {
     "line number": [
      752
     ]
    },
    "numpy.nonzero": {
     "line number": [
      750,
      754,
      761,
      762,
      766,
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestResize": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestResize.test_copies": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "array": {
     "line number": [
      145,
      146,
      149,
      152
     ]
    },
    "assert_equal": {
     "line number": [
      147,
      150,
      153
     ]
    },
    "resize": {
     "line number": [
      147,
      150,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestResize.test_zeroresize": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "array": {
     "line number": [
      156,
      158
     ]
    },
    "assert_equal": {
     "line number": [
      158
     ]
    },
    "resize": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRoll": {
  "data": {
   "lineno": 1778
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRoll.test_roll1d": {
  "data": {
   "lineno": 1779,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1782
     ]
    },
    "numpy.arange": {
     "line number": [
      1780
     ]
    },
    "numpy.array": {
     "line number": [
      1782
     ]
    },
    "numpy.roll": {
     "line number": [
      1781
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRoll.test_roll2d": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1787,
      1790,
      1793
     ]
    },
    "numpy.arange": {
     "line number": [
      1785
     ]
    },
    "numpy.array": {
     "line number": [
      1787,
      1790,
      1793
     ]
    },
    "numpy.reshape": {
     "line number": [
      1785
     ]
    },
    "numpy.roll": {
     "line number": [
      1786,
      1789,
      1792
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRoll.test_roll_empty": {
  "data": {
   "lineno": 1795,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1797
     ]
    },
    "numpy.array": {
     "line number": [
      1796,
      1797
     ]
    },
    "numpy.roll": {
     "line number": [
      1797
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr": {
  "data": {
   "lineno": 377
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_default": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      380
     ]
    },
    "geterr": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_divide_err": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "FloatingPointError": {
     "line number": [
      405
     ]
    },
    "array": {
     "line number": [
      404,
      404,
      410,
      410
     ]
    },
    "errstate": {
     "line number": [
      402
     ]
    },
    "numpy.core.tests.test_numeric.platform": {
     "line number": [
      400
     ]
    },
    "seterr": {
     "line number": [
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_set": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "geterr": {
     "line number": [
      395,
      398
     ]
    },
    "numpy.errstate": {
     "line number": [
      388
     ]
    },
    "seterr": {
     "line number": [
      389,
      390,
      392,
      394,
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar": {
  "data": {
   "lineno": 1467
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStdVar.setUp": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": {
    "array": {
     "line number": [
      1469
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_basic": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      1473,
      1474
     ]
    },
    "std": {
     "line number": [
      1474
     ]
    },
    "var": {
     "line number": [
      1473
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_ddof1": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      1481,
      1483
     ]
    },
    "float": {
     "line number": [
      1482,
      1484
     ]
    },
    "len": {
     "line number": [
      1482,
      1482,
      1484,
      1484
     ]
    },
    "std": {
     "line number": [
      1483
     ]
    },
    "var": {
     "line number": [
      1481
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_ddof2": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      1487,
      1489
     ]
    },
    "float": {
     "line number": [
      1488,
      1490
     ]
    },
    "len": {
     "line number": [
      1488,
      1488,
      1490,
      1490
     ]
    },
    "std": {
     "line number": [
      1489
     ]
    },
    "var": {
     "line number": [
      1487
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_scalars": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1477,
      1478
     ]
    },
    "std": {
     "line number": [
      1478
     ]
    },
    "var": {
     "line number": [
      1477
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex": {
  "data": {
   "lineno": 1492
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex.test_basic": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": {
    "array": {
     "line number": [
      1494
     ]
    },
    "assert_almost_equal": {
     "line number": [
      1496,
      1497
     ]
    },
    "std": {
     "line number": [
      1497
     ]
    },
    "var": {
     "line number": [
      1496
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex.test_scalars": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1500,
      1501
     ]
    },
    "std": {
     "line number": [
      1501
     ]
    },
    "var": {
     "line number": [
      1500
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStringFunction": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1765
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStringFunction.test_set_string_function": {
  "data": {
   "lineno": 1766,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1769,
      1771,
      1774,
      1776
     ]
    },
    "numpy.array": {
     "line number": [
      1767
     ]
    },
    "numpy.set_string_function": {
     "line number": [
      1768,
      1770,
      1773,
      1775
     ]
    },
    "repr": {
     "line number": [
      1769,
      1771
     ]
    },
    "str": {
     "line number": [
      1774,
      1776
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes": {
  "data": {
   "lineno": 491
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestTypes.check_promotion_cases": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": {
    "array": {
     "line number": [
      528,
      529,
      530,
      531,
      532,
      533,
      534,
      535,
      536,
      537,
      538,
      539,
      540,
      541,
      546,
      547,
      548,
      549,
      550,
      554,
      560
     ]
    },
    "assert_equal": {
     "line number": [
      501,
      502,
      503,
      504,
      505,
      506,
      507,
      508,
      509,
      510,
      513,
      514,
      515,
      516,
      517,
      518,
      519,
      520,
      521,
      522,
      523,
      524,
      525,
      528,
      529,
      530,
      531,
      532,
      533,
      534,
      535,
      536,
      537,
      538,
      539,
      540,
      541,
      546,
      547,
      548,
      549,
      550,
      554,
      560
     ]
    },
    "clongdouble": {
     "line number": [
      498,
      509,
      510,
      525
     ]
    },
    "complex128": {
     "line number": [
      498,
      508,
      524,
      540,
      542
     ]
    },
    "complex64": {
     "line number": [
      498,
      523,
      539,
      541,
      560
     ]
    },
    "float32": {
     "line number": [
      497,
      521,
      536,
      537
     ]
    },
    "float64": {
     "line number": [
      497,
      505,
      518,
      519,
      520,
      522,
      535,
      538,
      546,
      549,
      550
     ]
    },
    "int16": {
     "line number": [
      495,
      501,
      515
     ]
    },
    "int32": {
     "line number": [
      495,
      502,
      513,
      516,
      530,
      533,
      535
     ]
    },
    "int64": {
     "line number": [
      495,
      503,
      517,
      547
     ]
    },
    "int8": {
     "line number": [
      495,
      528,
      532
     ]
    },
    "longdouble": {
     "line number": [
      497,
      506,
      507
     ]
    },
    "numpy.bool_": {
     "line number": [
      494
     ]
    },
    "numpy.dtype": {
     "line number": [
      501,
      502,
      503,
      504,
      505,
      506,
      507,
      508,
      509,
      510,
      513,
      514,
      515,
      516,
      517,
      518,
      519,
      520,
      521,
      522,
      523,
      524,
      525,
      528,
      529,
      530,
      531,
      532,
      533,
      534,
      535,
      536,
      537,
      538,
      539,
      540,
      542,
      546,
      547,
      548,
      549,
      550,
      554,
      560
     ]
    },
    "promote_func": {
     "line number": [
      501,
      502,
      503,
      504,
      505,
      506,
      507,
      508,
      509,
      510,
      513,
      514,
      515,
      516,
      517,
      518,
      519,
      520,
      521,
      522,
      523,
      524,
      525,
      528,
      529,
      530,
      531,
      532,
      533,
      534,
      535,
      536,
      537,
      538,
      539,
      540,
      541,
      546,
      547,
      548,
      549,
      550,
      554,
      560
     ]
    },
    "uint16": {
     "line number": [
      496,
      554
     ]
    },
    "uint32": {
     "line number": [
      496,
      504,
      531,
      534
     ]
    },
    "uint64": {
     "line number": [
      496,
      548
     ]
    },
    "uint8": {
     "line number": [
      496,
      514,
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_can_cast": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      662,
      663
     ]
    },
    "assert_": {
     "line number": [
      640,
      641,
      642,
      644,
      645,
      646,
      648,
      649,
      651,
      652,
      654,
      655,
      657,
      658,
      660
     ]
    },
    "assert_raises": {
     "line number": [
      662,
      663
     ]
    },
    "numpy.can_cast": {
     "line number": [
      640,
      641,
      642,
      644,
      645,
      646,
      648,
      649,
      651,
      652,
      654,
      655,
      657,
      658,
      660,
      662,
      663
     ]
    },
    "numpy.complex": {
     "line number": [
      641,
      642
     ]
    },
    "numpy.float": {
     "line number": [
      642
     ]
    },
    "numpy.float64": {
     "line number": [
      641
     ]
    },
    "numpy.int32": {
     "line number": [
      640
     ]
    },
    "numpy.int64": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_coercion": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      571,
      573,
      576,
      578,
      580,
      583,
      585,
      588,
      590
     ]
    },
    "numpy.array": {
     "line number": [
      569,
      569
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      584,
      585
     ]
    },
    "numpy.complex128": {
     "line number": [
      587
     ]
    },
    "numpy.complex64": {
     "line number": [
      589
     ]
    },
    "numpy.dtype": {
     "line number": [
      571,
      573,
      576,
      578,
      580,
      583,
      585,
      588,
      590
     ]
    },
    "numpy.float16": {
     "line number": [
      579
     ]
    },
    "numpy.float32": {
     "line number": [
      577
     ]
    },
    "numpy.float64": {
     "line number": [
      575
     ]
    },
    "numpy.int8": {
     "line number": [
      569
     ]
    },
    "numpy.longdouble": {
     "line number": [
      572,
      573
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_coercion.res_type": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": {
    "numpy.add": {
     "line number": [
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_promote_types_endian": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      618,
      619,
      621,
      622,
      623,
      624,
      626,
      627,
      628,
      629,
      630,
      631,
      633,
      634,
      635,
      636
     ]
    },
    "numpy.dtype": {
     "line number": [
      618,
      619,
      621,
      622,
      623,
      624,
      626,
      627,
      628,
      629,
      630,
      631,
      633,
      634,
      635,
      636
     ]
    },
    "numpy.promote_types": {
     "line number": [
      618,
      619,
      621,
      622,
      623,
      624,
      626,
      627,
      628,
      629,
      630,
      631,
      633,
      634,
      635,
      636
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_result_type": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      614
     ]
    },
    "numpy.dtype": {
     "line number": [
      614
     ]
    },
    "numpy.result_type": {
     "line number": [
      613,
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.Vec": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "object": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.Vec.__add__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.Vec": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.Vec.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "array": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.Vec.__mul__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.Vec": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.Vec.__rmul__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.Vec.__sub__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.core.tests.test_numeric.Vec": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric._TestCorrelate": {
  "data": {
   "lineno": 1694
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric._TestCorrelate._setup": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1696,
      1697,
      1698,
      1699
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric._TestCorrelate.test_float": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      1704,
      1706
     ]
    },
    "numpy.correlate": {
     "line number": [
      1703,
      1705
     ]
    },
    "numpy.float": {
     "line number": [
      1702
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric._TestCorrelate.test_object": {
  "data": {
   "lineno": 1708,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      1711,
      1713
     ]
    },
    "decimal.Decimal": {
     "line number": [
      1709
     ]
    },
    "numpy.correlate": {
     "line number": [
      1710,
      1712
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.assert_array_strict_equal": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      867,
      869
     ]
    },
    "assert_array_equal": {
     "line number": [
      865
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.dot_": {
  "data": {
   "shadows": "numpy.core.multiarray.dot"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      373
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      63,
      63,
      63,
      64,
      64,
      64
     ]
    },
    "numpy.compat.asunicode": {
     "line number": [
      63,
      64
     ]
    },
    "numpy.core.tests.test_numerictypes.sys": {
     "line number": [
      68
     ]
    },
    "run_module_suite": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_numerictypes.NbufferT": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.Ndescr": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.PbufferT": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.Pdescr": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType": {
  "data": {
   "lineno": 345
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_loses1": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      348
     ]
    },
    "numpy.find_common_type": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_loses2": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      351
     ]
    },
    "numpy.find_common_type": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      354
     ]
    },
    "numpy.find_common_type": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins2": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      357
     ]
    },
    "numpy.find_common_type": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins3": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      360
     ]
    },
    "numpy.find_common_type": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestEmptyField": {
  "data": {
   "lineno": 338
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestEmptyField.test_assign": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      342,
      343
     ]
    },
    "numpy.arange": {
     "line number": [
      340
     ]
    },
    "numpy.float32": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields": {
  "data": {
   "lineno": 362
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields._bad_call": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.setUp": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.test_no_tuple": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.test_return": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.asunicode": {
  "data": {
   "shadows": "numpy.compat.asunicode"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.byteorder": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.create_values": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "object": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.create_values.test_list_of_list_of_tuple": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      169
     ]
    },
    "numpy.core.tests.test_numerictypes.normalize_descr": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.create_values.test_list_of_tuple": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      160
     ]
    },
    "numpy.core.tests.test_numerictypes.normalize_descr": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.create_values.test_tuple": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      151
     ]
    },
    "numpy.core.tests.test_numerictypes.normalize_descr": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.create_zeros": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "object": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.create_zeros.test_zeros0D": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      114
     ]
    },
    "numpy.core.tests.test_numerictypes.normalize_descr": {
     "line number": [
      109
     ]
    },
    "numpy.void": {
     "line number": [
      112
     ]
    },
    "numpy.zeros": {
     "line number": [
      108,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.create_zeros.test_zerosMD": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      134
     ]
    },
    "numpy.core.tests.test_numerictypes.normalize_descr": {
     "line number": [
      129
     ]
    },
    "numpy.uint8": {
     "line number": [
      132
     ]
    },
    "numpy.zeros": {
     "line number": [
      128,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.create_zeros.test_zerosSD": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      124
     ]
    },
    "numpy.core.tests.test_numerictypes.normalize_descr": {
     "line number": [
      119
     ]
    },
    "numpy.void": {
     "line number": [
      122
     ]
    },
    "numpy.zeros": {
     "line number": [
      118,
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.normalize_descr": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      94
     ]
    },
    "isinstance": {
     "line number": [
      76,
      88
     ]
    },
    "len": {
     "line number": [
      83
     ]
    },
    "list": {
     "line number": [
      88
     ]
    },
    "numpy.core.tests.test_numerictypes.byteorder": {
     "line number": [
      82
     ]
    },
    "numpy.prod": {
     "line number": [
      83
     ]
    },
    "str": {
     "line number": [
      76
     ]
    },
    "type": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "object": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested.test_access_top_fields": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      247,
      248,
      249,
      252,
      254,
      256
     ]
    },
    "len": {
     "line number": [
      251
     ]
    },
    "numpy.array": {
     "line number": [
      244,
      247,
      248,
      249,
      252,
      254,
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested.test_nested1_acessors": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      264,
      266,
      268,
      270,
      273,
      277,
      281,
      285
     ]
    },
    "numpy.array": {
     "line number": [
      262,
      265,
      267,
      269,
      271,
      274,
      278,
      282,
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested.test_nested1_descriptor": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      310
     ]
    },
    "numpy.core.tests.test_numerictypes.sys": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested.test_nested2_acessors": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      294,
      296,
      299,
      303
     ]
    },
    "numpy.array": {
     "line number": [
      292,
      295,
      297,
      300,
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested.test_nested2_descriptor": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.read_values_plain": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "object": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.read_values_plain.test_access_fields": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      213,
      214,
      215,
      218,
      220,
      222
     ]
    },
    "len": {
     "line number": [
      217
     ]
    },
    "numpy.array": {
     "line number": [
      210,
      213,
      214,
      215,
      218,
      220,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.test_create_values_nested_multiple": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "numpy.core.tests.test_numerictypes.NbufferT": {
     "line number": [
      199
     ]
    },
    "numpy.core.tests.test_numerictypes.Ndescr": {
     "line number": [
      197
     ]
    },
    "numpy.core.tests.test_numerictypes.create_values": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_create_values_nested_single": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.core.tests.test_numerictypes.NbufferT": {
     "line number": [
      193
     ]
    },
    "numpy.core.tests.test_numerictypes.Ndescr": {
     "line number": [
      191
     ]
    },
    "numpy.core.tests.test_numerictypes.create_values": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_create_values_plain_multiple": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "numpy.core.tests.test_numerictypes.PbufferT": {
     "line number": [
      187
     ]
    },
    "numpy.core.tests.test_numerictypes.Pdescr": {
     "line number": [
      185
     ]
    },
    "numpy.core.tests.test_numerictypes.create_values": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_create_values_plain_single": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "numpy.core.tests.test_numerictypes.PbufferT": {
     "line number": [
      181
     ]
    },
    "numpy.core.tests.test_numerictypes.Pdescr": {
     "line number": [
      179
     ]
    },
    "numpy.core.tests.test_numerictypes.create_values": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_create_zeros_nested": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "numpy.core.tests.test_numerictypes.Ndescr": {
     "line number": [
      143
     ]
    },
    "numpy.core.tests.test_numerictypes.create_zeros": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_create_zeros_plain": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.core.tests.test_numerictypes.Pdescr": {
     "line number": [
      139
     ]
    },
    "numpy.core.tests.test_numerictypes.create_zeros": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_read_values_nested_multiple": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "numpy.core.tests.test_numerictypes.NbufferT": {
     "line number": [
      336
     ]
    },
    "numpy.core.tests.test_numerictypes.Ndescr": {
     "line number": [
      334
     ]
    },
    "numpy.core.tests.test_numerictypes.read_values_nested": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_read_values_nested_single": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "numpy.core.tests.test_numerictypes.NbufferT": {
     "line number": [
      330
     ]
    },
    "numpy.core.tests.test_numerictypes.Ndescr": {
     "line number": [
      328
     ]
    },
    "numpy.core.tests.test_numerictypes.read_values_nested": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_read_values_plain_multiple": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "numpy.core.tests.test_numerictypes.PbufferT": {
     "line number": [
      236
     ]
    },
    "numpy.core.tests.test_numerictypes.Pdescr": {
     "line number": [
      234
     ]
    },
    "numpy.core.tests.test_numerictypes.read_values_plain": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_read_values_plain_single": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "numpy.core.tests.test_numerictypes.PbufferT": {
     "line number": [
      230
     ]
    },
    "numpy.core.tests.test_numerictypes.Pdescr": {
     "line number": [
      228
     ]
    },
    "numpy.core.tests.test_numerictypes.read_values_plain": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_print": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      244
     ]
    },
    "numpy.core.tests.test_print.sys": {
     "line number": [
      10
     ]
    },
    "numpy.inf": {
     "line number": [
      15,
      15
     ]
    },
    "numpy.nan": {
     "line number": [
      15
     ]
    },
    "run_module_suite": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_print.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print._REF": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.core.tests.test_print._check_complex_inf_nan": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      111
     ]
    },
    "dtype": {
     "line number": [
      111
     ]
    },
    "str": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print._test_redirected_print": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "StringIO.StringIO": {
     "line number": [
      115,
      116
     ]
    },
    "assert_equal": {
     "line number": [
      129
     ]
    },
    "numpy.core.tests.test_print.sys": {
     "line number": [
      117,
      119,
      121,
      127
     ]
    },
    "print": {
     "line number": [
      120,
      123,
      125
     ]
    },
    "tp": {
     "line number": [
      120,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.check_complex_type": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      60,
      62,
      64,
      68,
      72
     ]
    },
    "complex": {
     "line number": [
      60,
      62,
      64,
      68
     ]
    },
    "str": {
     "line number": [
      60,
      60,
      62,
      62,
      64,
      64,
      68,
      68,
      72
     ]
    },
    "tp": {
     "line number": [
      60,
      61,
      62,
      63,
      64,
      65,
      67,
      68,
      69,
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.check_complex_type_print": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      149,
      152,
      155,
      157,
      158,
      159
     ]
    },
    "numpy.core.tests.test_print._test_redirected_print": {
     "line number": [
      149,
      152,
      155,
      157,
      158,
      159
     ]
    },
    "numpy.inf": {
     "line number": [
      157,
      158
     ]
    },
    "numpy.nan": {
     "line number": [
      159
     ]
    },
    "tp": {
     "line number": [
      149,
      151,
      152,
      155,
      157,
      158,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.check_float_type": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      20,
      24,
      28
     ]
    },
    "float": {
     "line number": [
      20,
      24
     ]
    },
    "str": {
     "line number": [
      20,
      20,
      24,
      24,
      28
     ]
    },
    "tp": {
     "line number": [
      20,
      21,
      23,
      24,
      25,
      28,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.check_float_type_print": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "float": {
     "line number": [
      134,
      137,
      140,
      143
     ]
    },
    "numpy.core.tests.test_print._REF": {
     "line number": [
      137
     ]
    },
    "numpy.core.tests.test_print._test_redirected_print": {
     "line number": [
      134,
      137,
      140,
      143
     ]
    },
    "numpy.inf": {
     "line number": [
      136,
      136
     ]
    },
    "numpy.nan": {
     "line number": [
      136
     ]
    },
    "tp": {
     "line number": [
      134,
      137,
      139,
      140,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.check_nan_inf_float": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      44
     ]
    },
    "numpy.core.tests.test_print._REF": {
     "line number": [
      44
     ]
    },
    "numpy.inf": {
     "line number": [
      43,
      43
     ]
    },
    "numpy.nan": {
     "line number": [
      43
     ]
    },
    "str": {
     "line number": [
      44
     ]
    },
    "tp": {
     "line number": [
      44,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.in_foreign_locale": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "func": {
     "line number": [
      230
     ]
    },
    "numpy.core.tests.test_print.nose": {
     "line number": [
      230
     ]
    },
    "numpy.core.tests.test_print.sys": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.in_foreign_locale.wrapper": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "func": {
     "line number": [
      227
     ]
    },
    "numpy.core.tests.test_print.locale": {
     "line number": [
      216,
      216,
      220,
      220,
      222,
      229,
      229
     ]
    },
    "numpy.core.tests.test_print.nose": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.test_complex_inf_nan": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      89,
      90,
      91,
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      99,
      100,
      101,
      102,
      103,
      104
     ]
    },
    "numpy.cdouble": {
     "line number": [
      106
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      106
     ]
    },
    "numpy.complex64": {
     "line number": [
      106
     ]
    },
    "numpy.inf": {
     "line number": [
      89,
      90,
      91,
      92,
      93,
      94,
      95,
      96
     ]
    },
    "numpy.nan": {
     "line number": [
      97,
      98,
      99,
      100,
      101,
      102,
      103,
      104
     ]
    },
    "tp": {
     "line number": [
      106,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_complex_type_print": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      168
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      168
     ]
    },
    "numpy.complex64": {
     "line number": [
      168
     ]
    },
    "numpy.core.tests.test_print.check_complex_type_print": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_complex_types": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      83
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      83
     ]
    },
    "numpy.complex64": {
     "line number": [
      83
     ]
    },
    "numpy.core.tests.test_print.check_complex_type": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_float_type_print": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "numpy.core.tests.test_print.check_float_type_print": {
     "line number": [
      164
     ]
    },
    "numpy.double": {
     "line number": [
      163
     ]
    },
    "numpy.float32": {
     "line number": [
      163
     ]
    },
    "numpy.longdouble": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_float_types": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.core.tests.test_print.check_float_type": {
     "line number": [
      40
     ]
    },
    "numpy.double": {
     "line number": [
      39
     ]
    },
    "numpy.float32": {
     "line number": [
      39
     ]
    },
    "numpy.longdouble": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_locale_double": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      238
     ]
    },
    "float": {
     "line number": [
      238
     ]
    },
    "numpy.core.tests.test_print.in_foreign_locale": {
     "line number": [
      236
     ]
    },
    "numpy.double": {
     "line number": [
      238
     ]
    },
    "str": {
     "line number": [
      238,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_locale_longdouble": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      242
     ]
    },
    "float": {
     "line number": [
      242
     ]
    },
    "numpy.core.tests.test_print.in_foreign_locale": {
     "line number": [
      240
     ]
    },
    "numpy.longdouble": {
     "line number": [
      242
     ]
    },
    "str": {
     "line number": [
      242,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_locale_single": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      234
     ]
    },
    "float": {
     "line number": [
      234
     ]
    },
    "numpy.core.tests.test_print.in_foreign_locale": {
     "line number": [
      232
     ]
    },
    "numpy.float32": {
     "line number": [
      234
     ]
    },
    "str": {
     "line number": [
      234,
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_nan_inf_float": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.core.tests.test_print.check_nan_inf_float": {
     "line number": [
      56
     ]
    },
    "numpy.double": {
     "line number": [
      55
     ]
    },
    "numpy.float32": {
     "line number": [
      55
     ]
    },
    "numpy.longdouble": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_scalar_format": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      197
     ]
    },
    "assert_": {
     "line number": [
      198
     ]
    },
    "assert_equal": {
     "line number": [
      195
     ]
    },
    "numpy.bool_": {
     "line number": [
      173,
      174
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      191
     ]
    },
    "numpy.complex128": {
     "line number": [
      190
     ]
    },
    "numpy.complex64": {
     "line number": [
      189
     ]
    },
    "numpy.core.tests.test_print.sys": {
     "line number": [
      188
     ]
    },
    "numpy.float16": {
     "line number": [
      183
     ]
    },
    "numpy.float32": {
     "line number": [
      184
     ]
    },
    "numpy.float64": {
     "line number": [
      185
     ]
    },
    "numpy.int16": {
     "line number": [
      180
     ]
    },
    "numpy.int32": {
     "line number": [
      181
     ]
    },
    "numpy.int64": {
     "line number": [
      182
     ]
    },
    "numpy.int8": {
     "line number": [
      179
     ]
    },
    "numpy.longdouble": {
     "line number": [
      186
     ]
    },
    "numpy.uint16": {
     "line number": [
      176
     ]
    },
    "numpy.uint32": {
     "line number": [
      177
     ]
    },
    "numpy.uint64": {
     "line number": [
      178
     ]
    },
    "numpy.uint8": {
     "line number": [
      175
     ]
    },
    "repr": {
     "line number": [
      200,
      200
     ]
    },
    "str": {
     "line number": [
      200
     ]
    },
    "valtype": {
     "line number": [
      195,
      196,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      175
     ]
    },
    "run_module_suite": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_records.TestFromrecords": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      17
     ]
    },
    "numpy.rec.fromrecords": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords_with_explicit_dtype": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      106,
      107,
      108,
      109,
      113,
      114,
      115,
      116
     ]
    },
    "int": {
     "line number": [
      105,
      111
     ]
    },
    "numpy.dtype": {
     "line number": [
      111
     ]
    },
    "numpy.object": {
     "line number": [
      105,
      111
     ]
    },
    "numpy.rec.fromrecords": {
     "line number": [
      104,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_method_array": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      21
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      20,
      21
     ]
    },
    "numpy.rec.array": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_method_array2": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      26
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      26
     ]
    },
    "numpy.rec.array": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_conflict_fields": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      94,
      96,
      101
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      93
     ]
    },
    "assert_array_equal": {
     "line number": [
      98,
      100
     ]
    },
    "isinstance": {
     "line number": [
      101
     ]
    },
    "numpy.core.tests.test_records.collections": {
     "line number": [
      101
     ]
    },
    "numpy.rec.array": {
     "line number": [
      89
     ]
    },
    "type": {
     "line number": [
      94,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_names": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      83,
      84,
      86
     ]
    },
    "len": {
     "line number": [
      85
     ]
    },
    "numpy.rec.array": {
     "line number": [
      73
     ]
    },
    "numpy.rec.fromrecords": {
     "line number": [
      78
     ]
    },
    "range": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_obj": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      62,
      63,
      64
     ]
    },
    "len": {
     "line number": [
      57,
      61
     ]
    },
    "list": {
     "line number": [
      58,
      62
     ]
    },
    "numpy.rec.fromarrays": {
     "line number": [
      60
     ]
    },
    "numpy.zeros": {
     "line number": [
      54,
      55,
      56
     ]
    },
    "range": {
     "line number": [
      57,
      58,
      61,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_repr": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      69
     ]
    },
    "assert_equal": {
     "line number": [
      70
     ]
    },
    "eval": {
     "line number": [
      68
     ]
    },
    "isinstance": {
     "line number": [
      69
     ]
    },
    "numpy.int8": {
     "line number": [
      67,
      67
     ]
    },
    "numpy.rec.array": {
     "line number": [
      67
     ]
    },
    "numpy.recarray": {
     "line number": [
      69
     ]
    },
    "repr": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_fromarrays": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      38,
      40
     ]
    },
    "numpy.array": {
     "line number": [
      34,
      35,
      36,
      40
     ]
    },
    "numpy.rec.fromarrays": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_fromfile": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.rec.array": {
     "line number": [
      49
     ]
    },
    "numpy.rec.fromfile": {
     "line number": [
      47
     ]
    },
    "open": {
     "line number": [
      45
     ]
    },
    "os.path.dirname": {
     "line number": [
      43
     ]
    },
    "os.path.join": {
     "line number": [
      43,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_slices": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      31
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      31
     ]
    },
    "numpy.rec.array": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord": {
  "data": {
   "lineno": 119
  },
  "type": "class"
 },
 "numpy.core.tests.test_records.TestRecord.setUp": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "numpy.rec.fromrecords": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_assignment1": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      128,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_assignment2": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      134,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_invalid_assignment": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_invalid_assignment.assign_invalid_column": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_out_of_order_fields": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_pickle_1": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      153,
      154
     ]
    },
    "numpy.array": {
     "line number": [
      152
     ]
    },
    "numpy.core.tests.test_records.pickle": {
     "line number": [
      153,
      153,
      154,
      154
     ]
    },
    "numpy.int32": {
     "line number": [
      152,
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_pickle_2": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      158,
      159
     ]
    },
    "numpy.core.tests.test_records.pickle": {
     "line number": [
      158,
      158,
      159,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.asunicode": {
  "data": {
   "shadows": "numpy.compat.asunicode"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.test_find_duplicate": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      164,
      167,
      170,
      173
     ]
    },
    "numpy.rec.find_duplicate": {
     "line number": [
      164,
      167,
      170,
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1969
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      1970
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_regression.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_0d_string_scalar": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      1441
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_add_identity": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "numpy.add.identity": {
     "line number": [
      264
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      262
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_alignment_update": {
  "data": {
   "lineno": 1741,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1743
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1744,
      1746
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_any_float": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      1628
     ]
    },
    "numpy.any": {
     "line number": [
      1627
     ]
    },
    "numpy.array": {
     "line number": [
      1626
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1627,
      1628
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_arange_endian": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      223,
      224,
      226
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      221
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      225,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_arange_non_native_dtype": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      746,
      747,
      748
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      742
     ]
    },
    "numpy.dtype": {
     "line number": [
      745
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      746,
      747,
      748
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_argmax": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      237
     ]
    },
    "numpy.random.normal": {
     "line number": [
      239
     ]
    },
    "range": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_argmax_byteorder": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      699
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      697
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      700
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_arr_transpose": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": {
    "list": {
     "line number": [
      690
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      687
     ]
    },
    "numpy.random.rand": {
     "line number": [
      689
     ]
    },
    "range": {
     "line number": [
      690
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_from_sequence_scalar_array": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1272,
      1272,
      1276,
      1278,
      1278,
      1282
     ]
    },
    "numpy.dtype": {
     "line number": [
      1274,
      1280
     ]
    },
    "numpy.ones": {
     "line number": [
      1272,
      1275
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1273,
      1274,
      1275,
      1276,
      1279,
      1280,
      1281,
      1282
     ]
    },
    "object": {
     "line number": [
      1274,
      1280
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_from_sequence_scalar_array2": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1286,
      1286,
      1286
     ]
    },
    "numpy.dtype": {
     "line number": [
      1288
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1287,
      1288
     ]
    },
    "object": {
     "line number": [
      1286,
      1288
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_index": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      581,
      582
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      579
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      583
     ]
    },
    "numpy.where": {
     "line number": [
      583,
      583
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_ndmin_overflow": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1173
     ]
    },
    "numpy.array": {
     "line number": [
      1173
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_resize_method_system_error": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1164
     ]
    },
    "numpy.array": {
     "line number": [
      1163
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_scalar_contiguous": {
  "data": {
   "lineno": 1641,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1643,
      1644,
      1645,
      1646
     ]
    },
    "numpy.float32": {
     "line number": [
      1645,
      1646
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1643,
      1644,
      1645,
      1646
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_side_effect": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1615
     ]
    },
    "numpy.dtype": {
     "line number": [
      1613,
      1622
     ]
    },
    "numpy.string_": {
     "line number": [
      1615
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1613,
      1622
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_str_64bit": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      668
     ]
    },
    "numpy.array_str": {
     "line number": [
      670
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      666
     ]
    },
    "numpy.errstate": {
     "line number": [
      669
     ]
    },
    "numpy.float64": {
     "line number": [
      668
     ]
    },
    "numpy.nan": {
     "line number": [
      668
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_too_big": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1292,
      1293
     ]
    },
    "numpy.int8": {
     "line number": [
      1292,
      1293
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1292,
      1293
     ]
    },
    "numpy.zeros": {
     "line number": [
      1292,
      1293
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_asarray_with_order": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      66
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      63
     ]
    },
    "numpy.ones": {
     "line number": [
      65
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_assign_from_sequence_error": {
  "data": {
   "lineno": 1934,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1937
     ]
    },
    "numpy.array": {
     "line number": [
      1936
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1939
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1937
     ]
    },
    "slice": {
     "line number": [
      1937,
      1938
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_assign_obj_listoflists": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      1814,
      1818
     ]
    },
    "numpy.zeros": {
     "line number": [
      1807,
      1816
     ]
    },
    "object": {
     "line number": [
      1807,
      1816
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_astype_copy": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.pickle": {
     "line number": [
      1002,
      1006
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      994
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      1000
     ]
    },
    "numpy.float64": {
     "line number": [
      1008
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1009
     ]
    },
    "open": {
     "line number": [
      1001,
      1005
     ]
    },
    "os.path.dirname": {
     "line number": [
      998
     ]
    },
    "os.path.join": {
     "line number": [
      998,
      999
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_attributes": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": {
    "TestArray": {
     "line number": [
      1038,
      1057,
      1064,
      1095
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1027
     ]
    },
    "numpy.int32": {
     "line number": [
      1048,
      1072
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1039,
      1041,
      1043,
      1045,
      1047,
      1049,
      1051,
      1052,
      1053,
      1054,
      1055,
      1056,
      1057,
      1058,
      1059,
      1060,
      1061,
      1062,
      1063,
      1067,
      1068,
      1069,
      1070,
      1071,
      1072,
      1073,
      1074,
      1075,
      1076,
      1077,
      1078,
      1079,
      1080,
      1081,
      1082,
      1083,
      1084,
      1085,
      1086,
      1087,
      1088,
      1089,
      1090,
      1091,
      1092,
      1093,
      1094,
      1095
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_attributes.TestArray": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      1030
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_attributes.TestArray.__array_finalize__": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      1037
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_attributes.TestArray.__new__": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1032
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_binary_repr_0": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "numpy.binary_repr": {
     "line number": [
      273
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      271
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_binary_repr_0_width": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": {
    "numpy.binary_repr": {
     "line number": [
      764
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      763
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      764
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_blasdot_uninitialized_memory": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      1232
     ]
    },
    "numpy.array": {
     "line number": [
      1225,
      1227
     ]
    },
    "numpy.dot": {
     "line number": [
      1231
     ]
    },
    "numpy.float64": {
     "line number": [
      1225,
      1227
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1232,
      1233
     ]
    },
    "range": {
     "line number": [
      1223
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_bool": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.bool_": {
     "line number": [
      107
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_bool_indexing_invalid_nr_elements": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      754,
      755
     ]
    },
    "float": {
     "line number": [
      751,
      752,
      754,
      755
     ]
    },
    "numpy.array": {
     "line number": [
      752
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      750
     ]
    },
    "numpy.ones": {
     "line number": [
      751
     ]
    },
    "numpy.zeros": {
     "line number": [
      754,
      755
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_bool_indexing_invalid_nr_elements.ia": {
  "data": {
   "lineno": 753
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_broadcast_flat_assignment": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      308,
      309
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      303
     ]
    },
    "numpy.empty": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_broadcast_flat_assignment.bfa": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_broadcast_flat_assignment.bfb": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "float": {
     "line number": [
      307
     ]
    },
    "numpy.arange": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_buffer_hashlib": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      1427
     ]
    },
    "md5.new": {
     "line number": [
      1431
     ]
    },
    "numpy.array": {
     "line number": [
      1430
     ]
    },
    "numpy.dtype": {
     "line number": [
      1430
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1431
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_byteswap_complex_scalar": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1376
     ]
    },
    "numpy.dtype": {
     "line number": [
      1375
     ]
    },
    "numpy.fromstring": {
     "line number": [
      1381,
      1384
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1381,
      1384,
      1386,
      1387
     ]
    },
    "numpy.typecodes": {
     "line number": [
      1375
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_char_array_creation": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1114,
      1115
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      1115
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1113
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1116
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_char_dump": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      90
     ]
    },
    "numpy.arange": {
     "line number": [
      91
     ]
    },
    "numpy.char.array": {
     "line number": [
      91
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      88
     ]
    },
    "numpy.load": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_character_array_strip": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "numpy.char.array": {
     "line number": [
      381
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      379
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_chararray_rstrip": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "numpy.chararray": {
     "line number": [
      358
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      359,
      361
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      356
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_complex64_alignment": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1901
     ]
    },
    "numpy.complex64": {
     "line number": [
      1900
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1906
     ]
    },
    "numpy.reshape": {
     "line number": [
      1903
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1910
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_complex_boolean_cast": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      1575,
      1575
     ]
    },
    "numpy.all": {
     "line number": [
      1577
     ]
    },
    "numpy.any": {
     "line number": [
      1576
     ]
    },
    "numpy.array": {
     "line number": [
      1574,
      1575
     ]
    },
    "numpy.cdouble": {
     "line number": [
      1573
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      1573
     ]
    },
    "numpy.csingle": {
     "line number": [
      1573
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1576,
      1577
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1575
     ]
    },
    "tp": {
     "line number": [
      1573,
      1574
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_complex_nan_maximum": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      1497
     ]
    },
    "numpy.maximum": {
     "line number": [
      1498
     ]
    },
    "numpy.nan": {
     "line number": [
      1497
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1498
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_complex_scalar_complex_cast": {
  "data": {
   "lineno": 1566,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      1569
     ]
    },
    "numpy.cdouble": {
     "line number": [
      1567
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      1567
     ]
    },
    "numpy.csingle": {
     "line number": [
      1567
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1569
     ]
    },
    "tp": {
     "line number": [
      1567,
      1568
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_complex_scalar_warning": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1561,
      1564,
      1564
     ]
    },
    "numpy.ComplexWarning": {
     "line number": [
      1561
     ]
    },
    "numpy.cdouble": {
     "line number": [
      1559
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      1559
     ]
    },
    "numpy.core.tests.test_regression.warnings": {
     "line number": [
      1562,
      1563
     ]
    },
    "numpy.csingle": {
     "line number": [
      1559
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1564
     ]
    },
    "numpy.testing.assert_warns": {
     "line number": [
      1561
     ]
    },
    "tp": {
     "line number": [
      1560
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_compress_small_type": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1021
     ]
    },
    "TypeError": {
     "line number": [
      1024
     ]
    },
    "numpy.array": {
     "line number": [
      1017
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1012
     ]
    },
    "numpy.single": {
     "line number": [
      1018
     ]
    },
    "numpy.zeros": {
     "line number": [
      1018
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_convolve_empty": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      628,
      629
     ]
    },
    "numpy.convolve": {
     "line number": [
      628,
      629
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_copy_detection_corner_case": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      809
     ]
    },
    "numpy.indices": {
     "line number": [
      811
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_copy_detection_corner_case2": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      817
     ]
    },
    "numpy.iinfo": {
     "line number": [
      816
     ]
    },
    "numpy.indices": {
     "line number": [
      820
     ]
    },
    "numpy.intp": {
     "line number": [
      816
     ]
    },
    "numpy.ones": {
     "line number": [
      816
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      821
     ]
    },
    "numpy.testing.dec.skipif": {
     "line number": [
      816
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_copy_detection_zero_dim": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      787
     ]
    },
    "numpy.indices": {
     "line number": [
      789
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_copymodule_preserves_f_contiguity": {
  "data": {
   "lineno": 1917,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.copy": {
     "line number": [
      1919,
      1920
     ]
    },
    "numpy.empty": {
     "line number": [
      1918
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1921,
      1922,
      1923,
      1924
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dot_alignment_sse2": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.pickle": {
     "line number": [
      988,
      988
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      985
     ]
    },
    "numpy.dot": {
     "line number": [
      992
     ]
    },
    "numpy.ones": {
     "line number": [
      990
     ]
    },
    "numpy.zeros": {
     "line number": [
      987
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dot_negative_stride": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      719,
      720
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      717
     ]
    },
    "numpy.dot": {
     "line number": [
      723,
      723
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      723
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_keyerrors_": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1299
     ]
    },
    "KeyError": {
     "line number": [
      1298
     ]
    },
    "ValueError": {
     "line number": [
      1300
     ]
    },
    "numpy.dtype": {
     "line number": [
      1297
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1298,
      1299,
      1300
     ]
    },
    "numpy.uint": {
     "line number": [
      1297
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_names": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      49
     ]
    },
    "numpy.dtype": {
     "line number": [
      51
     ]
    },
    "numpy.int32": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_posttuple": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      524
     ]
    },
    "numpy.dtype": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_repr": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      537
     ]
    },
    "numpy.dtype": {
     "line number": [
      539,
      540
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_tuple": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      520
     ]
    },
    "numpy.dtype": {
     "line number": [
      522,
      522
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_duplicate_field_names_assign": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1587
     ]
    },
    "numpy.fromiter": {
     "line number": [
      1584
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1587
     ]
    },
    "range": {
     "line number": [
      1584
     ]
    },
    "repr": {
     "line number": [
      1586
     ]
    },
    "setattr": {
     "line number": [
      1587
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_duplicate_title_and_name": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1412
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_duplicate_title_and_name.func": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      1411
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_empty_array_type": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      421
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      420
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      421
     ]
    },
    "numpy.zeros": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_empty_mul": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1608
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1610
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_endian_bool_indexing": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      178,
      179
     ]
    },
    "numpy.arange": {
     "line number": [
      170,
      171
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      168
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      178,
      179
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      176,
      177
     ]
    },
    "numpy.where": {
     "line number": [
      172,
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_endian_recarray": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      191
     ]
    },
    "numpy.dtype": {
     "line number": [
      193
     ]
    },
    "numpy.recarray": {
     "line number": [
      197
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_endian_where": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      188
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      181
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      189
     ]
    },
    "numpy.where": {
     "line number": [
      187
     ]
    },
    "numpy.zeros": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_eq_string_and_object_array": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1591,
      1592
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1593,
      1594
     ]
    },
    "object": {
     "line number": [
      1591
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_errobj_reference_leak": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1178
     ]
    },
    "len": {
     "line number": [
      1182,
      1185
     ]
    },
    "numpy.core.tests.test_regression.gc": {
     "line number": [
      1181,
      1182,
      1184,
      1185
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1175
     ]
    },
    "numpy.errstate": {
     "line number": [
      1177
     ]
    },
    "numpy.int32": {
     "line number": [
      1179
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1186
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fancy_index": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      475,
      475
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      473
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fields_strides": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": {
    "numpy.fromstring": {
     "line number": [
      1735
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1736,
      1737,
      1738,
      1739
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_find_common_type_boolean": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": {
    "numpy.find_common_type": {
     "line number": [
      1605
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1605
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_flat_assignment": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "float": {
     "line number": [
      300
     ]
    },
    "numpy.arange": {
     "line number": [
      298,
      300
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      295
     ]
    },
    "numpy.empty": {
     "line number": [
      297
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      299,
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_flat_byteorder": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      793
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      791
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      794,
      795
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_flat_index_byteswap": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      806
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      804
     ]
    },
    "numpy.dtype": {
     "line number": [
      805,
      805
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      807
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_floats_from_string": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      964
     ]
    },
    "numpy.double": {
     "line number": [
      967
     ]
    },
    "numpy.longdouble": {
     "line number": [
      968
     ]
    },
    "numpy.single": {
     "line number": [
      966
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      969,
      970,
      971
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_for_equal_names": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1139,
      1139
     ]
    },
    "list": {
     "line number": [
      1141
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1137
     ]
    },
    "numpy.dtype": {
     "line number": [
      1139
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1144,
      1145
     ]
    },
    "numpy.zeros": {
     "line number": [
      1140
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_for_object_scalar_creation": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1156
     ]
    },
    "int": {
     "line number": [
      1155
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1147
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1157
     ]
    },
    "numpy.object_": {
     "line number": [
      1149,
      1150,
      1151,
      1152,
      1153
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1154,
      1155,
      1156,
      1157,
      1158,
      1159
     ]
    },
    "object": {
     "line number": [
      1158,
      1159
     ]
    },
    "type": {
     "line number": [
      1155,
      1156,
      1157
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_for_zero_length_in_choose": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1169
     ]
    },
    "numpy.array": {
     "line number": [
      1168
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1166
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_format_on_flex_array_element": {
  "data": {
   "lineno": 1941,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1944
     ]
    },
    "numpy.dtype": {
     "line number": [
      1943
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1946
     ]
    },
    "str": {
     "line number": [
      1946
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fortran_order_buffer": {
  "data": {
   "lineno": 1926,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1928,
      1930
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      1930,
      1930,
      1930,
      1930,
      1930,
      1931,
      1931,
      1931,
      1931,
      1931
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1929
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1932
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fromfile_tofile_seeks": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1536
     ]
    },
    "numpy.array": {
     "line number": [
      1540,
      1544,
      1554
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      1549
     ]
    },
    "numpy.core.tests.test_regression.tempfile": {
     "line number": [
      1534
     ]
    },
    "numpy.fromfile": {
     "line number": [
      1539,
      1553
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1540,
      1541,
      1545,
      1549,
      1554
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fromiter_bytes": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1264,
      1265
     ]
    },
    "numpy.alltrue": {
     "line number": [
      1266,
      1267
     ]
    },
    "numpy.array": {
     "line number": [
      1266,
      1267
     ]
    },
    "numpy.fromiter": {
     "line number": [
      1264,
      1265
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1266,
      1267
     ]
    },
    "range": {
     "line number": [
      1264,
      1265
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fromiter_comparison": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1448,
      1449
     ]
    },
    "numpy.alltrue": {
     "line number": [
      1450,
      1451
     ]
    },
    "numpy.array": {
     "line number": [
      1450,
      1451
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1447
     ]
    },
    "numpy.fromiter": {
     "line number": [
      1448,
      1449
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1450,
      1451
     ]
    },
    "range": {
     "line number": [
      1448,
      1449
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_frompyfunc_endian": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": {
    "float": {
     "line number": [
      678,
      679
     ]
    },
    "math.radians": {
     "line number": [
      675
     ]
    },
    "numpy.array": {
     "line number": [
      676,
      677
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      672
     ]
    },
    "numpy.frompyfunc": {
     "line number": [
      675
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      678
     ]
    },
    "uradians": {
     "line number": [
      678,
      679
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fromstring": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": {
    "int": {
     "line number": [
      767
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      766
     ]
    },
    "numpy.fromstring": {
     "line number": [
      767
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fromstring_crash": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": {
    "numpy.compat.asbytes": {
     "line number": [
      1455
     ]
    },
    "numpy.fromstring": {
     "line number": [
      1455
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_hstack_invalid_dims": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      253
     ]
    },
    "numpy.arange": {
     "line number": [
      251
     ]
    },
    "numpy.array": {
     "line number": [
      252
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      249
     ]
    },
    "numpy.hstack": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_huge_arange": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1259
     ]
    },
    "ValueError": {
     "line number": [
      1256
     ]
    },
    "numpy.arange": {
     "line number": [
      1254
     ]
    },
    "numpy.size": {
     "line number": [
      1255
     ]
    },
    "str": {
     "line number": [
      1257
     ]
    },
    "type": {
     "line number": [
      1260
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_indexing1": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      113
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_indexing2": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      120
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_intp": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      163
     ]
    },
    "ValueError": {
     "line number": [
      164
     ]
    },
    "numpy.core.tests.test_regression.platform": {
     "line number": [
      156
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      159
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      155,
      156
     ]
    },
    "numpy.int_": {
     "line number": [
      161
     ]
    },
    "numpy.intp": {
     "line number": [
      162,
      163,
      164,
      165,
      166
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      165,
      166
     ]
    },
    "numpy.testing.dec.knownfailureif": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_invalid_round": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      28,
      28
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      25
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_junk_in_string_fields_of_recarray": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      644
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      644,
      645,
      645
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      642
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      645
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_large_float_sum": {
  "data": {
   "lineno": 1630,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1631
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1632
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      386
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      384
     ]
    },
    "numpy.lexsort": {
     "line number": [
      387
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_buffer_length": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1307
     ]
    },
    "numpy.int": {
     "line number": [
      1307
     ]
    },
    "numpy.int32": {
     "line number": [
      1305
     ]
    },
    "numpy.int8": {
     "line number": [
      1304
     ]
    },
    "numpy.lexsort": {
     "line number": [
      1306
     ]
    },
    "numpy.ones": {
     "line number": [
      1304,
      1305
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1307
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_invalid_sequence": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "BuggySequence": {
     "line number": [
      397
     ]
    },
    "KeyError": {
     "line number": [
      397
     ]
    },
    "numpy.lexsort": {
     "line number": [
      397
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_invalid_sequence.BuggySequence": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "object": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_invalid_sequence.BuggySequence.__getitem__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_invalid_sequence.BuggySequence.__len__": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_log1p_compiler_shenanigans": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": {
    "numpy.exp2": {
     "line number": [
      1445
     ]
    },
    "numpy.isfinite": {
     "line number": [
      1445
     ]
    },
    "numpy.log1p": {
     "line number": [
      1445
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1445
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_0d_array_index": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      962
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      960
     ]
    },
    "numpy.zeros": {
     "line number": [
      962
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_around": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      377
     ]
    },
    "numpy.around": {
     "line number": [
      377
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      372
     ]
    },
    "numpy.zeros": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_array_creation_invalid_specification": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      338
     ]
    },
    "int": {
     "line number": [
      336
     ]
    },
    "numpy.array": {
     "line number": [
      338,
      340
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      334
     ]
    },
    "numpy.dtype": {
     "line number": [
      336
     ]
    },
    "numpy.object_": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_axis_minimization": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "numpy.add.outer": {
     "line number": [
      514
     ]
    },
    "numpy.arange": {
     "line number": [
      513
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_custom_float_to_array": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": {
    "MyFloat": {
     "line number": [
      930
     ]
    },
    "float": {
     "line number": [
      931
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      930
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      924
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_custom_float_to_array.MyFloat": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": {
    "object": {
     "line number": [
      926
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_custom_float_to_array.MyFloat.__float__": {
  "data": {
   "lineno": 927
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_deallocation_leak": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "float": {
     "line number": [
      709,
      710
     ]
    },
    "numpy.array": {
     "line number": [
      710
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      707
     ]
    },
    "numpy.zeros": {
     "line number": [
      709
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_divmod": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "divmod": {
     "line number": [
      246
     ]
    },
    "numpy.array": {
     "line number": [
      246
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      243
     ]
    },
    "range": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_dot": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "numpy.core.multiarray.dot": {
     "line number": [
      218
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      207
     ]
    },
    "numpy.dot": {
     "line number": [
      215
     ]
    },
    "numpy.empty": {
     "line number": [
      213
     ]
    },
    "numpy.lib.stride_tricks.as_strided": {
     "line number": [
      214
     ]
    },
    "numpy.ones": {
     "line number": [
      212,
      216,
      219
     ]
    },
    "numpy.random.randn": {
     "line number": [
      209,
      210
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      216,
      219
     ]
    },
    "numpy.transpose": {
     "line number": [
      215,
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_dtype_align": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      152
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      150
     ]
    },
    "numpy.dtype": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_empty": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      30
     ]
    },
    "numpy.empty": {
     "line number": [
      32
     ]
    },
    "numpy.int64": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_float_imag": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      516
     ]
    },
    "numpy.float64": {
     "line number": [
      518
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_fromiter_invalid_dtype_string": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      950
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      948
     ]
    },
    "numpy.fromiter": {
     "line number": [
      951
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_lexsort_strings": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      468
     ]
    },
    "numpy.lexsort": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_on_invalid_dtype": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      715
     ]
    },
    "numpy.fromiter": {
     "line number": [
      715
     ]
    },
    "str": {
     "line number": [
      715
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_scalar_indexing": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "float": {
     "line number": [
      759
     ]
    },
    "numpy.array": {
     "line number": [
      759,
      760
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      757
     ]
    },
    "numpy.int32": {
     "line number": [
      760
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_string_arr": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      681
     ]
    },
    "numpy.hstack": {
     "line number": [
      685
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_memoryleak": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      1824
     ]
    },
    "range": {
     "line number": [
      1822
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_method_args": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      450,
      452,
      466
     ]
    },
    "getattr": {
     "line number": [
      447,
      448,
      460,
      464,
      465
     ]
    },
    "int": {
     "line number": [
      462
     ]
    },
    "isinstance": {
     "line number": [
      442
     ]
    },
    "numpy": {
     "line number": [
      448,
      465
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      429
     ]
    },
    "numpy.random.rand": {
     "line number": [
      440,
      455,
      456
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      450,
      452,
      466
     ]
    },
    "tuple": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_misaligned_dot_product_objects": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1369,
      1370
     ]
    },
    "numpy.dot": {
     "line number": [
      1371
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_misaligned_objects_segfault": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": {
    "numpy.argmax": {
     "line number": [
      1350
     ]
    },
    "numpy.array": {
     "line number": [
      1347,
      1353
     ]
    },
    "numpy.core.tests.test_regression.copy": {
     "line number": [
      1356
     ]
    },
    "numpy.nonzero": {
     "line number": [
      1354
     ]
    },
    "numpy.zeros": {
     "line number": [
      1346
     ]
    },
    "repr": {
     "line number": [
      1349
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_misaligned_scalars_segfault": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1360,
      1361
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mixed_string_unicode_array_creation": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1333,
      1335,
      1337,
      1339,
      1341
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      1333,
      1335,
      1337,
      1339,
      1339,
      1341,
      1341
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1334,
      1336,
      1338,
      1340,
      1342
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_multidim_byteswap": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      633,
      635
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      631
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      634
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_multiple_assign": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "int": {
     "line number": [
      417
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      415
     ]
    },
    "numpy.zeros": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ndmin_float64": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      500,
      501,
      502
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      498
     ]
    },
    "numpy.float32": {
     "line number": [
      501
     ]
    },
    "numpy.float64": {
     "line number": [
      500,
      502
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      501,
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ndmin_order": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      506,
      507,
      508,
      509
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      504
     ]
    },
    "numpy.ones": {
     "line number": [
      508,
      509
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      506,
      507,
      508,
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_negative_nd_indexing": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      82
     ]
    },
    "numpy.array": {
     "line number": [
      83,
      84
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      80
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_nonarray_assignment": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      319,
      321
     ]
    },
    "bool": {
     "line number": [
      315
     ]
    },
    "numpy.arange": {
     "line number": [
      314,
      316
     ]
    },
    "numpy.array": {
     "line number": [
      320,
      322
     ]
    },
    "numpy.nan": {
     "line number": [
      319,
      320,
      321,
      322
     ]
    },
    "numpy.ones": {
     "line number": [
      315
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      319,
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_nonarray_assignment.assign": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_noncommutative_reduce_accumulate": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      617
     ]
    },
    "numpy.array": {
     "line number": [
      618,
      622,
      624
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      615
     ]
    },
    "numpy.divide.accumulate": {
     "line number": [
      623
     ]
    },
    "numpy.divide.reduce": {
     "line number": [
      620
     ]
    },
    "numpy.subtract.accumulate": {
     "line number": [
      621
     ]
    },
    "numpy.subtract.reduce": {
     "line number": [
      619
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      621,
      623
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      619,
      620
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_noncontiguous_fill": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      103
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      97
     ]
    },
    "numpy.zeros": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_noncontiguous_fill.rs": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_nonnative_endian_fill": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      983
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      973
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      977
     ]
    },
    "numpy.dtype": {
     "line number": [
      978,
      980
     ]
    },
    "numpy.empty": {
     "line number": [
      981
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      983
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_nonscalar_item_method": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1111
     ]
    },
    "numpy.arange": {
     "line number": [
      1110
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_nonzero_byteswap": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1597
     ]
    },
    "numpy.float32": {
     "line number": [
      1598
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1599,
      1601
     ]
    },
    "numpy.uint32": {
     "line number": [
      1597
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_numeric_carray_compare": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      530
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      530
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      528
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_numeric_handleError": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": {
    "numpy.numarray.handleError": {
     "line number": [
      1437
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_numpy_float_python_long_addition": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "numpy.float_": {
     "line number": [
      268
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_argmax": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      586
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      585
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      587
     ]
    },
    "object": {
     "line number": [
      586
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_assign": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      493
     ]
    },
    "numpy.empty": {
     "line number": [
      494
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      496
     ]
    },
    "object": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_fill": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      145
     ]
    },
    "numpy.zeros": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_from_list": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      413
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_refcount_self_assign": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": {
    "VictimObject": {
     "line number": [
      939
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      933
     ]
    },
    "numpy.object_": {
     "line number": [
      940
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      944,
      946
     ]
    },
    "numpy.zeros": {
     "line number": [
      940
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_refcount_self_assign.VictimObject": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": {
    "object": {
     "line number": [
      935
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_refcount_self_assign.VictimObject.__del__": {
  "data": {
   "lineno": 937
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_refcounting": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": {
    "cnt": {
     "line number": [
      836,
      837,
      838,
      845,
      848,
      849,
      852,
      853,
      863,
      865,
      868,
      869,
      872,
      882,
      883,
      886,
      887,
      890,
      891,
      894,
      895,
      906,
      907,
      910,
      911,
      914,
      917,
      921,
      922
     ]
    },
    "hasattr": {
     "line number": [
      825
     ]
    },
    "int": {
     "line number": [
      919
     ]
    },
    "numpy.array": {
     "line number": [
      919
     ]
    },
    "numpy.concatenate": {
     "line number": [
      909
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      823
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      825,
      830
     ]
    },
    "numpy.object_": {
     "line number": [
      842,
      859,
      860,
      878,
      901,
      902
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      863,
      865,
      868,
      869,
      872,
      882,
      883,
      886,
      887,
      890,
      891,
      894,
      895,
      906,
      907,
      910,
      911,
      914,
      917,
      921,
      922
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      845,
      848,
      849,
      852,
      853
     ]
    },
    "numpy.zeros": {
     "line number": [
      842,
      859,
      860,
      878,
      901,
      902
     ]
    },
    "object": {
     "line number": [
      832,
      833,
      834
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_self_copy": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1682
     ]
    },
    "numpy.copyto": {
     "line number": [
      1683
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      1684
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1684
     ]
    },
    "object": {
     "line number": [
      1682,
      1682
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_self_reference": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1668,
      1669,
      1670,
      1671,
      1672
     ]
    },
    "float": {
     "line number": [
      1670
     ]
    },
    "hex": {
     "line number": [
      1672
     ]
    },
    "int": {
     "line number": [
      1668
     ]
    },
    "numpy.array": {
     "line number": [
      1666,
      1675
     ]
    },
    "numpy.compat.long": {
     "line number": [
      1669
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1677
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1668,
      1669,
      1670,
      1671,
      1672
     ]
    },
    "object": {
     "line number": [
      1666,
      1675
     ]
    },
    "oct": {
     "line number": [
      1671
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_shape": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      365,
      366,
      367,
      368,
      369,
      370
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      363
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      365,
      366,
      367,
      368,
      369,
      370
     ]
    },
    "object": {
     "line number": [
      365,
      366,
      367,
      368,
      369,
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_to_fixed_string": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1311,
      1312,
      1314,
      1315,
      1316
     ]
    },
    "numpy.empty": {
     "line number": [
      1318
     ]
    },
    "numpy.object_": {
     "line number": [
      1311
     ]
    },
    "numpy.str_": {
     "line number": [
      1312,
      1314,
      1316,
      1318
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1313,
      1315,
      1317,
      1320
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_casting": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      733
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      725
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_casting.rs": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      730
     ]
    },
    "numpy.zeros": {
     "line number": [
      731
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_objectarray_setfield": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1696
     ]
    },
    "numpy.array": {
     "line number": [
      1695
     ]
    },
    "numpy.int32": {
     "line number": [
      1696
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1696
     ]
    },
    "object": {
     "line number": [
      1695
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_bytes_overwrite": {
  "data": {
   "lineno": 1780,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1782
     ]
    },
    "numpy.core.tests.test_regression.pickle": {
     "line number": [
      1783,
      1783
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      1781
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1786
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_dtype": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.pickle": {
     "line number": [
      402
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      400
     ]
    },
    "numpy.float": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_string_overwrite": {
  "data": {
   "lineno": 1766,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1769
     ]
    },
    "numpy.core.tests.test_regression.pickle": {
     "line number": [
      1770,
      1771
     ]
    },
    "numpy.core.tests.test_regression.re": {
     "line number": [
      1774,
      1777
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1775,
      1778
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_transposed": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      37
     ]
    },
    "numpy.array": {
     "line number": [
      36
     ]
    },
    "numpy.core.tests.test_regression.pickle": {
     "line number": [
      38,
      40
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      34
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      42
     ]
    },
    "numpy.transpose": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_rand_seed": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      704
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      702
     ]
    },
    "numpy.random.seed": {
     "line number": [
      705
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_random_shuffle": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      602
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      600
     ]
    },
    "numpy.random.shuffle": {
     "line number": [
      604
     ]
    },
    "numpy.sort": {
     "line number": [
      605
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ravel_with_order": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      68
     ]
    },
    "numpy.ones": {
     "line number": [
      70
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_rec_fromarray": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      488,
      489,
      490
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      486
     ]
    },
    "numpy.rec.fromarrays": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_rec_iterate": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "float": {
     "line number": [
      277
     ]
    },
    "int": {
     "line number": [
      277
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      275
     ]
    },
    "numpy.dtype": {
     "line number": [
      277
     ]
    },
    "numpy.rec.array": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_recarray_copy": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      481
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      478
     ]
    },
    "numpy.float64": {
     "line number": [
      480
     ]
    },
    "numpy.int16": {
     "line number": [
      480
     ]
    },
    "numpy.rec.array": {
     "line number": [
      482
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_recarray_fields": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      593
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      589
     ]
    },
    "numpy.dtype": {
     "line number": [
      591,
      592
     ]
    },
    "numpy.rec.array": {
     "line number": [
      594,
      595
     ]
    },
    "numpy.rec.fromarrays": {
     "line number": [
      596,
      597
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_recarray_single_element": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      344
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      342
     ]
    },
    "numpy.int32": {
     "line number": [
      344
     ]
    },
    "numpy.rec.array": {
     "line number": [
      346
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      347
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_recarray_tolist": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1097
     ]
    },
    "numpy.int8": {
     "line number": [
      1102
     ]
    },
    "numpy.recarray": {
     "line number": [
      1103
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1105,
      1106
     ]
    },
    "numpy.zeros": {
     "line number": [
      1102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reduce": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "numpy.add.reduce": {
     "line number": [
      55
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      53
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reduce_big_object_array": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      957
     ]
    },
    "numpy.array": {
     "line number": [
      956
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      953
     ]
    },
    "numpy.setbufsize": {
     "line number": [
      955,
      958
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      957
     ]
    },
    "object": {
     "line number": [
      956
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reduce_contiguous": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": {
    "numpy.add.reduce": {
     "line number": [
      1658,
      1659
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1660,
      1661,
      1662
     ]
    },
    "numpy.zeros": {
     "line number": [
      1658,
      1659
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_refcount_error_in_clip": {
  "data": {
   "lineno": 1879,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      1886
     ]
    },
    "numpy.zeros": {
     "line number": [
      1881
     ]
    },
    "str": {
     "line number": [
      1884
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_refcount_vdot": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      607
     ]
    },
    "numpy.testing.utils._assert_valid_refcount": {
     "line number": [
      609
     ]
    },
    "numpy.vdot": {
     "line number": [
      609
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_repeat_discont": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      576
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      574
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reshape_order": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      545
     ]
    },
    "numpy.array": {
     "line number": [
      547
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      543
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      546,
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reshape_trailing_ones_strides": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      572
     ]
    },
    "numpy.iinfo": {
     "line number": [
      564
     ]
    },
    "numpy.int32": {
     "line number": [
      567,
      572
     ]
    },
    "numpy.intp": {
     "line number": [
      564
     ]
    },
    "numpy.ones": {
     "line number": [
      564
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      570,
      571,
      572
     ]
    },
    "numpy.testing.dec.skipif": {
     "line number": [
      564
     ]
    },
    "numpy.zeros": {
     "line number": [
      567
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reshape_zero_size": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      557
     ]
    },
    "numpy.ones": {
     "line number": [
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reshape_zero_strides": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      551
     ]
    },
    "numpy.lib.stride_tricks.as_strided": {
     "line number": [
      554
     ]
    },
    "numpy.ones": {
     "line number": [
      553
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_richcompare_crash": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": {
    "Foo": {
     "line number": [
      1958
     ]
    },
    "TypeError": {
     "line number": [
      1962
     ]
    },
    "f": {
     "line number": [
      1964
     ]
    },
    "numpy.array": {
     "line number": [
      1959
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      1961
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1965,
      1966
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1962
     ]
    },
    "operator.eq": {
     "line number": [
      1965
     ]
    },
    "operator.ge": {
     "line number": [
      1960
     ]
    },
    "operator.gt": {
     "line number": [
      1960
     ]
    },
    "operator.le": {
     "line number": [
      1960
     ]
    },
    "operator.lt": {
     "line number": [
      1960
     ]
    },
    "operator.ne": {
     "line number": [
      1966
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_richcompare_crash.Foo": {
  "data": {
   "lineno": 1953,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1953
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_richcompare_crash.Foo.__array__": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1956
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_round": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      125
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      123
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_scalar_compare": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      130,
      131
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      128
     ]
    },
    "numpy.linspace": {
     "line number": [
      134
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_search_sorted_invalid_arguments": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1836
     ]
    },
    "numpy.arange": {
     "line number": [
      1835
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1836
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_searchsorted_variable_length": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      771,
      772
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      770
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      773
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_searchsorted_wrong_dtype": {
  "data": {
   "lineno": 1888,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1892,
      1896
     ]
    },
    "numpy.array": {
     "line number": [
      1891
     ]
    },
    "numpy.format_parser": {
     "line number": [
      1894
     ]
    },
    "numpy.recarray": {
     "line number": [
      1895
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      1892,
      1896
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1892,
      1896
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_setting_rank0_string": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1704,
      1705,
      1706,
      1710,
      1711,
      1712
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      1700,
      1701
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1704,
      1706,
      1710,
      1712
     ]
    },
    "numpy.zeros": {
     "line number": [
      1702,
      1708
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_sign_bit": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      802
     ]
    },
    "numpy.array": {
     "line number": [
      801
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      800
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      802
     ]
    },
    "str": {
     "line number": [
      802
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_sign_for_complex_nan": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1132,
      1134
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1129
     ]
    },
    "numpy.errstate": {
     "line number": [
      1131
     ]
    },
    "numpy.inf": {
     "line number": [
      1132,
      1132
     ]
    },
    "numpy.nan": {
     "line number": [
      1132,
      1134
     ]
    },
    "numpy.sign": {
     "line number": [
      1133
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1135
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_signed_integer_division_overflow": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": {
    "numpy.errstate": {
     "line number": [
      1420
     ]
    },
    "numpy.int": {
     "line number": [
      1421
     ]
    },
    "numpy.int16": {
     "line number": [
      1421
     ]
    },
    "numpy.int32": {
     "line number": [
      1421
     ]
    },
    "numpy.int64": {
     "line number": [
      1421
     ]
    },
    "numpy.int8": {
     "line number": [
      1421
     ]
    },
    "numpy.long": {
     "line number": [
      1421
     ]
    },
    "test_type": {
     "line number": [
      1422
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_signed_integer_division_overflow.test_type": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": {
    "min": {
     "line number": [
      1417,
      1418
     ]
    },
    "numpy.array": {
     "line number": [
      1417
     ]
    },
    "numpy.iinfo": {
     "line number": [
      1417
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_sort_bigendian": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      73
     ]
    },
    "numpy.dtype": {
     "line number": [
      76
     ]
    },
    "numpy.linspace": {
     "line number": [
      75
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_squeeze_contiguous": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      1652,
      1653,
      1654
     ]
    },
    "numpy.zeros": {
     "line number": [
      1650,
      1651
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_squeeze_type": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      257,
      258
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      255
     ]
    },
    "numpy.ndarray": {
     "line number": [
      259,
      260
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      259,
      260
     ]
    },
    "type": {
     "line number": [
      259,
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_startswith": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "numpy.char.array": {
     "line number": [
      612
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      611
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_NULL": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      639
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      637
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      639
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_argsort_with_zeros": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      778,
      779
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      775
     ]
    },
    "numpy.fromstring": {
     "line number": [
      777
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      778,
      779
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_array_size": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      534
     ]
    },
    "numpy.array": {
     "line number": [
      535
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_astype": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1719
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      1716,
      1717,
      1718
     ]
    },
    "numpy.dtype": {
     "line number": [
      1720,
      1721,
      1722
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1720,
      1722
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_mergesort": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      695
     ]
    },
    "numpy.array": {
     "line number": [
      694
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      692
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      695
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_sort_with_zeros": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      781
     ]
    },
    "numpy.fromstring": {
     "line number": [
      783,
      784
     ]
    },
    "numpy.sort": {
     "line number": [
      785
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      785
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_truncation": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      1841
     ]
    },
    "numpy.array": {
     "line number": [
      1843,
      1845,
      1849,
      1851
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      1842
     ]
    },
    "numpy.compat.asunicode": {
     "line number": [
      1842
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1844,
      1846,
      1850,
      1852
     ]
    },
    "tostr": {
     "line number": [
      1843,
      1844,
      1844,
      1845,
      1846,
      1846,
      1849,
      1850,
      1850,
      1851,
      1852,
      1852
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_truncation_ucs2": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1859,
      1861
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      1861
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      1858
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1862
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_structured_arrays_with_objects1": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1393
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1395
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_structured_arrays_with_objects2": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1403
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      1401,
      1402,
      1405,
      1406
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1405,
      1406
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_structured_count_nonzero": {
  "data": {
   "lineno": 1912,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1913
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      1914
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1915
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_structured_type_to_object": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1789
     ]
    },
    "numpy.empty": {
     "line number": [
      1790
     ]
    },
    "numpy.empty_like": {
     "line number": [
      1796,
      1800
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1794,
      1798,
      1802
     ]
    },
    "object": {
     "line number": [
      1790,
      1794
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_subclass_int_tuple_assignment": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": {
    "Subclass": {
     "line number": [
      1505
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1507
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_subclass_int_tuple_assignment.Subclass": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      1502
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_subclass_int_tuple_assignment.Subclass.__new__": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      1504
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_swap_real": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      406,
      407,
      408,
      409
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      404
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      406,
      407,
      408,
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_take_object_fail": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      662
     ]
    },
    "numpy.array": {
     "line number": [
      658
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      659,
      664
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      664
     ]
    },
    "object": {
     "line number": [
      658
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_take_output": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      649
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      647
     ]
    },
    "numpy.take": {
     "line number": [
      650,
      652
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      653
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      651
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_take_refcount": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1526
     ]
    },
    "numpy.arange": {
     "line number": [
      1519
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      1523,
      1528
     ]
    },
    "numpy.empty": {
     "line number": [
      1522
     ]
    },
    "numpy.float": {
     "line number": [
      1519,
      1521
     ]
    },
    "numpy.ones": {
     "line number": [
      1521
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1529
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1434": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1485
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1489,
      1493
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1490,
      1494
     ]
    },
    "numpy.zeros": {
     "line number": [
      1486
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1538": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      1480
     ]
    },
    "numpy.finfo": {
     "line number": [
      1478
     ]
    },
    "numpy.float32": {
     "line number": [
      1478,
      1480
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1480
     ]
    },
    "type": {
     "line number": [
      1480
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1539": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1475
     ]
    },
    "TypeError": {
     "line number": [
      1472
     ]
    },
    "issubclass": {
     "line number": [
      1459,
      1460
     ]
    },
    "numpy.ComplexWarning": {
     "line number": [
      1465
     ]
    },
    "numpy.array": {
     "line number": [
      1461
     ]
    },
    "numpy.core.tests.test_regression.warnings": {
     "line number": [
      1464,
      1465
     ]
    },
    "numpy.dot": {
     "line number": [
      1471
     ]
    },
    "numpy.number": {
     "line number": [
      1459
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      1460
     ]
    },
    "numpy.typeDict.values": {
     "line number": [
      1458
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1608": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1762,
      1763
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1764
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1756": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1727,
      1729,
      1730
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      1726
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1731
     ]
    },
    "range": {
     "line number": [
      1728
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1770": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1758
     ]
    },
    "ValueError": {
     "line number": [
      1755
     ]
    },
    "numpy.zeros": {
     "line number": [
      1752
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_tostring_FORTRANORDER_discontiguous": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      292
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      289
     ]
    },
    "numpy.fromstring": {
     "line number": [
      293
     ]
    },
    "numpy.random.rand": {
     "line number": [
      292
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_typeNA": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      44
     ]
    },
    "numpy.int64": {
     "line number": [
      46
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      46,
      47
     ]
    },
    "numpy.typeNA": {
     "line number": [
      46,
      47
     ]
    },
    "numpy.uint64": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ufunc_casting_out": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": {
    "numpy.add": {
     "line number": [
      1638
     ]
    },
    "numpy.array": {
     "line number": [
      1635,
      1636,
      1637
     ]
    },
    "numpy.float32": {
     "line number": [
      1635,
      1637
     ]
    },
    "numpy.float64": {
     "line number": [
      1636
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1639
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ufunc_no_unnecessary_views": {
  "data": {
   "lineno": 1509,
   "symbols_in_volume": {
    "Subclass": {
     "line number": [
      1513
     ]
    },
    "id": {
     "line number": [
      1515,
      1515
     ]
    },
    "numpy.add": {
     "line number": [
      1514
     ]
    },
    "numpy.array": {
     "line number": [
      1513
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1515
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ufunc_no_unnecessary_views.Subclass": {
  "data": {
   "lineno": 1511,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      1511
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ufunc_reduce_memoryleak": {
  "data": {
   "lineno": 1827,
   "symbols_in_volume": {
    "numpy.add.reduce": {
     "line number": [
      1830
     ]
    },
    "numpy.arange": {
     "line number": [
      1828
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      1829,
      1831
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1831
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_uint64_from_negative": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": {
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      797
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      798
     ]
    },
    "numpy.uint64": {
     "line number": [
      798,
      798
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_uint_int_conversion": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1581
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1581
     ]
    },
    "numpy.uint64": {
     "line number": [
      1581
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unaligned_unicode_access": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1123
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      1123
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      1123
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1118
     ]
    },
    "numpy.core.tests.test_regression.sys": {
     "line number": [
      1124
     ]
    },
    "numpy.dtype": {
     "line number": [
      1122
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1125,
      1127
     ]
    },
    "range": {
     "line number": [
      1120
     ]
    },
    "str": {
     "line number": [
      1125,
      1127
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_alloc_dealloc_match": {
  "data": {
   "lineno": 1872,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1876
     ]
    },
    "numpy.unicode": {
     "line number": [
      1876
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_scalar": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      737
     ]
    },
    "numpy.core.tests.test_regression.pickle": {
     "line number": [
      739,
      739
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      735
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      740
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_string_comparison": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      285,
      286
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      283
     ]
    },
    "numpy.unicode_": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_swapping": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      142
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      141
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_to_string_cast": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": {
    "UnicodeEncodeError": {
     "line number": [
      1330
     ]
    },
    "numpy.array": {
     "line number": [
      1324
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      1325,
      1325,
      1326,
      1326
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_to_string_cast.fail": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1329
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unique_stable": {
  "data": {
   "lineno": 1864,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1867,
      1869,
      1869
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1870
     ]
    },
    "numpy.unique": {
     "line number": [
      1868
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unpickle_dtype_with_object": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "int": {
     "line number": [
      326
     ]
    },
    "io.BytesIO": {
     "line number": [
      327
     ]
    },
    "numpy.core.tests.test_regression.pickle": {
     "line number": [
      328,
      330
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      324
     ]
    },
    "numpy.dtype": {
     "line number": [
      326
     ]
    },
    "numpy.object_": {
     "line number": [
      326
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_void_copyswap": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      425
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      423
     ]
    },
    "numpy.dtype": {
     "line number": [
      424
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_void_scalar_constructor": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1201
     ]
    },
    "numpy.core.multiarray.scalar": {
     "line number": [
      1202,
      1210
     ]
    },
    "numpy.core.tests.test_regression.pickle": {
     "line number": [
      1216,
      1216,
      1217,
      1217
     ]
    },
    "numpy.dtype": {
     "line number": [
      1203
     ]
    },
    "numpy.ones": {
     "line number": [
      1209
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1205,
      1213,
      1216,
      1217
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_void_scalar_with_titles": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1191
     ]
    },
    "numpy.array": {
     "line number": [
      1192
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      1188
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1193,
      1194
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_zero_sized_array_indexing": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      354
     ]
    },
    "numpy.array": {
     "line number": [
      352
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_zero_sized_array_indexing.index_tmp": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_zeros": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1245
     ]
    },
    "ValueError": {
     "line number": [
      1242
     ]
    },
    "numpy.empty": {
     "line number": [
      1241
     ]
    },
    "str": {
     "line number": [
      1243
     ]
    },
    "type": {
     "line number": [
      1246
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_zeros_order": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "int": {
     "line number": [
      59,
      61
     ]
    },
    "numpy.core.tests.test_regression.rlevel": {
     "line number": [
      57
     ]
    },
    "numpy.zeros": {
     "line number": [
      59,
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_zerosize_accumulate": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": {
    "numpy.add.accumulate": {
     "line number": [
      1690
     ]
    },
    "numpy.array": {
     "line number": [
      1689
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1690
     ]
    },
    "numpy.uint32": {
     "line number": [
      1689
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_regression._assert_valid_refcount": {
  "data": {
   "shadows": "numpy.testing.utils._assert_valid_refcount"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.asbytes_nested": {
  "data": {
   "shadows": "numpy.compat.asbytes_nested"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.asunicode": {
  "data": {
   "shadows": "numpy.compat.asunicode"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.md5": {
  "data": {
   "shadows": "md5.new"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.numarray": {
  "data": {
   "shadows": "numpy.numarray"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.op": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.radians": {
  "data": {
   "shadows": "math.radians"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.rlevel": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.core.tests.test_regression.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.sixu": {
  "data": {
   "shadows": "numpy.compat.sixu"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.core.tests.test_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      195
     ]
    },
    "numpy.bool_": {
     "line number": [
      8
     ]
    },
    "numpy.byte": {
     "line number": [
      8
     ]
    },
    "numpy.cdouble": {
     "line number": [
      11
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      11
     ]
    },
    "numpy.csingle": {
     "line number": [
      10
     ]
    },
    "numpy.double": {
     "line number": [
      10
     ]
    },
    "numpy.int_": {
     "line number": [
      9
     ]
    },
    "numpy.intc": {
     "line number": [
      8
     ]
    },
    "numpy.longdouble": {
     "line number": [
      10
     ]
    },
    "numpy.longlong": {
     "line number": [
      9
     ]
    },
    "numpy.short": {
     "line number": [
      8
     ]
    },
    "numpy.single": {
     "line number": [
      10
     ]
    },
    "numpy.ubyte": {
     "line number": [
      8
     ]
    },
    "numpy.uint": {
     "line number": [
      9
     ]
    },
    "numpy.uintc": {
     "line number": [
      8
     ]
    },
    "numpy.ulonglong": {
     "line number": [
      9
     ]
    },
    "numpy.ushort": {
     "line number": [
      8
     ]
    },
    "run_module_suite": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_scalarmath.TestBaseMath": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestBaseMath.test_blocked": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      58,
      59,
      60,
      63,
      66,
      68,
      74,
      76
     ]
    },
    "numpy.add": {
     "line number": [
      58,
      59,
      60,
      62,
      73,
      75
     ]
    },
    "numpy.arange": {
     "line number": [
      65
     ]
    },
    "numpy.divide": {
     "line number": [
      69
     ]
    },
    "numpy.float32": {
     "line number": [
      51
     ]
    },
    "numpy.float64": {
     "line number": [
      51
     ]
    },
    "numpy.multiply": {
     "line number": [
      67
     ]
    },
    "numpy.ones_like": {
     "line number": [
      55,
      56,
      71
     ]
    },
    "numpy.reciprocal": {
     "line number": [
      68
     ]
    },
    "numpy.square": {
     "line number": [
      66
     ]
    },
    "numpy.testing.utils._gen_alignment_data": {
     "line number": [
      52
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      57,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestBaseMath.test_lower_align": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      83
     ]
    },
    "numpy.add": {
     "line number": [
      84,
      85,
      86,
      87,
      88
     ]
    },
    "numpy.float64": {
     "line number": [
      81,
      82
     ]
    },
    "numpy.int8": {
     "line number": [
      81,
      82
     ]
    },
    "numpy.ones_like": {
     "line number": [
      85,
      86,
      87,
      88
     ]
    },
    "numpy.zeros": {
     "line number": [
      81,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestComplexDivision": {
  "data": {
   "lineno": 123
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestComplexDivision.test_zero_division": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      129,
      131,
      133,
      135,
      137,
      139
     ]
    },
    "complex": {
     "line number": [
      130,
      132,
      134,
      136
     ]
    },
    "numpy.complex128": {
     "line number": [
      126
     ]
    },
    "numpy.complex64": {
     "line number": [
      126
     ]
    },
    "numpy.errstate": {
     "line number": [
      125
     ]
    },
    "numpy.inf": {
     "line number": [
      130,
      130,
      132,
      134
     ]
    },
    "numpy.isinf": {
     "line number": [
      129,
      131,
      133,
      135
     ]
    },
    "numpy.isnan": {
     "line number": [
      137,
      139
     ]
    },
    "numpy.nan": {
     "line number": [
      132,
      134,
      136,
      136
     ]
    },
    "t": {
     "line number": [
      126,
      127,
      128,
      130,
      132,
      134,
      136,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion": {
  "data": {
   "lineno": 142
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_long": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      148,
      151
     ]
    },
    "int": {
     "line number": [
      148,
      151
     ]
    },
    "numpy.array": {
     "line number": [
      147,
      150
     ]
    },
    "numpy.float64": {
     "line number": [
      146
     ]
    },
    "numpy.int64": {
     "line number": [
      146
     ]
    },
    "numpy.uint64": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower": {
  "data": {
   "lineno": 91
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_large_types": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      104
     ]
    },
    "assert_almost_equal": {
     "line number": [
      106
     ]
    },
    "numpy.float32": {
     "line number": [
      99
     ]
    },
    "numpy.float64": {
     "line number": [
      99
     ]
    },
    "numpy.int32": {
     "line number": [
      99
     ]
    },
    "numpy.int64": {
     "line number": [
      99
     ]
    },
    "numpy.integer": {
     "line number": [
      103
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      103
     ]
    },
    "numpy.longdouble": {
     "line number": [
      99
     ]
    },
    "t": {
     "line number": [
      99,
      100,
      102,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_mixed_types": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      119
     ]
    },
    "assert_almost_equal": {
     "line number": [
      121
     ]
    },
    "numpy.dtype": {
     "line number": [
      118
     ]
    },
    "numpy.float16": {
     "line number": [
      108
     ]
    },
    "numpy.float32": {
     "line number": [
      109
     ]
    },
    "numpy.float64": {
     "line number": [
      109
     ]
    },
    "numpy.int16": {
     "line number": [
      108,
      110
     ]
    },
    "numpy.int32": {
     "line number": [
      110
     ]
    },
    "numpy.int64": {
     "line number": [
      110
     ]
    },
    "numpy.int8": {
     "line number": [
      108,
      109
     ]
    },
    "numpy.integer": {
     "line number": [
      118
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      118
     ]
    },
    "t1": {
     "line number": [
      113,
      117
     ]
    },
    "t2": {
     "line number": [
      114,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_small_types": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      96
     ]
    },
    "numpy.float16": {
     "line number": [
      93
     ]
    },
    "numpy.int16": {
     "line number": [
      93
     ]
    },
    "numpy.int8": {
     "line number": [
      93
     ]
    },
    "t": {
     "line number": [
      94,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestRepr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "object": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestRepr._test_type_repr": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      182
     ]
    },
    "assert_equal": {
     "line number": [
      187
     ]
    },
    "eval": {
     "line number": [
      185
     ]
    },
    "numpy.array": {
     "line number": [
      172
     ]
    },
    "numpy.dtype": {
     "line number": [
      168
     ]
    },
    "numpy.finfo": {
     "line number": [
      165
     ]
    },
    "numpy.uint8": {
     "line number": [
      172
     ]
    },
    "repr": {
     "line number": [
      184
     ]
    },
    "t": {
     "line number": [
      165,
      168,
      183,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestRepr.test_float_repr": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      192
     ]
    },
    "numpy.float64": {
     "line number": [
      192
     ]
    },
    "t": {
     "line number": [
      192,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_type_add": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      37
     ]
    },
    "atype": {
     "line number": [
      23,
      24,
      25,
      39
     ]
    },
    "btype": {
     "line number": [
      27,
      28,
      39
     ]
    },
    "enumerate": {
     "line number": [
      23,
      26
     ]
    },
    "numpy.array": {
     "line number": [
      25,
      28
     ]
    },
    "numpy.core.tests.test_scalarmath.types": {
     "line number": [
      23,
      26
     ]
    },
    "numpy.dtype": {
     "line number": [
      39,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_type_create": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      45
     ]
    },
    "atype": {
     "line number": [
      42,
      43,
      44
     ]
    },
    "enumerate": {
     "line number": [
      42
     ]
    },
    "numpy.array": {
     "line number": [
      43
     ]
    },
    "numpy.core.tests.test_scalarmath.types": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_types": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      19
     ]
    },
    "atype": {
     "line number": [
      18,
      19
     ]
    },
    "numpy.core.tests.test_scalarmath.types": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath._gen_alignment_data": {
  "data": {
   "shadows": "numpy.testing.utils._gen_alignment_data"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.types": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.core.tests.test_scalarprint": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      29
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_scalarprint.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_str": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "f": {
     "line number": [
      15,
      15
     ]
    },
    "numpy.float16": {
     "line number": [
      14
     ]
    },
    "numpy.float32": {
     "line number": [
      14
     ]
    },
    "numpy.float64": {
     "line number": [
      14
     ]
    },
    "numpy.inf": {
     "line number": [
      13,
      13
     ]
    },
    "numpy.longdouble": {
     "line number": [
      14
     ]
    },
    "numpy.nan": {
     "line number": [
      13
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      26
     ]
    },
    "str": {
     "line number": [
      15
     ]
    },
    "zip": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      249
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_0D_array": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      13,
      14,
      16,
      16
     ]
    },
    "numpy.core.atleast_1d": {
     "line number": [
      15,
      15
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_1D_array": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      20,
      21,
      23,
      23
     ]
    },
    "numpy.core.atleast_1d": {
     "line number": [
      22,
      22
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_2D_array": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      27,
      28
     ]
    },
    "numpy.core.atleast_1d": {
     "line number": [
      29,
      29
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_3D_array": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      34,
      35,
      36,
      37
     ]
    },
    "numpy.core.atleast_1d": {
     "line number": [
      38,
      38
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_r1array": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.compat.long": {
     "line number": [
      47
     ]
    },
    "numpy.core.atleast_1d": {
     "line number": [
      45,
      46,
      47,
      48,
      49
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      45,
      46,
      47,
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_0D_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      54,
      55,
      57,
      57
     ]
    },
    "numpy.core.atleast_2d": {
     "line number": [
      56,
      56
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_1D_array": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      61,
      62,
      64,
      64
     ]
    },
    "numpy.core.atleast_2d": {
     "line number": [
      63,
      63
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_2D_array": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      68,
      69
     ]
    },
    "numpy.core.atleast_2d": {
     "line number": [
      70,
      70
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_3D_array": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      75,
      76,
      77,
      78
     ]
    },
    "numpy.core.atleast_2d": {
     "line number": [
      79,
      79
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_r2array": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "numpy.core.atleast_2d": {
     "line number": [
      86,
      87,
      88
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      86,
      87,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_0D_array": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      93,
      94,
      96,
      96
     ]
    },
    "numpy.core.atleast_3d": {
     "line number": [
      95,
      95
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_1D_array": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      100,
      101,
      103,
      103
     ]
    },
    "numpy.core.atleast_3d": {
     "line number": [
      102,
      102
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_2D_array": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      107,
      108
     ]
    },
    "numpy.core.atleast_3d": {
     "line number": [
      109,
      109
     ]
    },
    "numpy.core.newaxis": {
     "line number": [
      110,
      110
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_3D_array": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      114,
      115,
      116,
      117
     ]
    },
    "numpy.core.atleast_3d": {
     "line number": [
      118,
      118
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.TestHstack": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_0D_array": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      125,
      126,
      128
     ]
    },
    "numpy.core.hstack": {
     "line number": [
      127
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_1D_array": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      132,
      133,
      135
     ]
    },
    "numpy.core.hstack": {
     "line number": [
      134
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_2D_array": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      139,
      140,
      142
     ]
    },
    "numpy.core.hstack": {
     "line number": [
      141
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_0D_array": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      148,
      149,
      151
     ]
    },
    "numpy.core.vstack": {
     "line number": [
      150
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_1D_array": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      155,
      156,
      158
     ]
    },
    "numpy.core.vstack": {
     "line number": [
      157
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_2D_array": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      162,
      163,
      165
     ]
    },
    "numpy.core.vstack": {
     "line number": [
      164
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_2D_array2": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      169,
      170,
      172
     ]
    },
    "numpy.core.vstack": {
     "line number": [
      171
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.arange": {
  "data": {
   "shadows": "numpy.core.arange"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.array": {
  "data": {
   "shadows": "numpy.core.array"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.atleast_1d": {
  "data": {
   "shadows": "numpy.core.atleast_1d"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.atleast_2d": {
  "data": {
   "shadows": "numpy.core.atleast_2d"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.atleast_3d": {
  "data": {
   "shadows": "numpy.core.atleast_3d"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.concatenate": {
  "data": {
   "shadows": "numpy.core.concatenate"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.hstack": {
  "data": {
   "shadows": "numpy.core.hstack"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.newaxis": {
  "data": {
   "shadows": "numpy.core.newaxis"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.test_concatenate": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      194,
      196,
      197,
      223
     ]
    },
    "list": {
     "line number": [
      199,
      205
     ]
    },
    "numpy.core.arange": {
     "line number": [
      225
     ]
    },
    "numpy.core.array": {
     "line number": [
      197,
      203,
      209,
      215,
      216,
      217
     ]
    },
    "numpy.core.concatenate": {
     "line number": [
      194,
      196,
      197,
      200,
      202,
      203,
      206,
      208,
      209,
      211,
      213,
      218,
      219,
      220,
      221,
      223,
      229,
      230,
      231
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      200,
      202,
      203,
      206,
      208,
      209,
      211,
      213,
      218,
      219,
      220,
      221,
      229,
      230,
      231
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      194,
      196,
      197,
      223
     ]
    },
    "range": {
     "line number": [
      199,
      205
     ]
    },
    "tuple": {
     "line number": [
      202,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.test_concatenate_axis_None": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "len": {
     "line number": [
      183
     ]
    },
    "list": {
     "line number": [
      177
     ]
    },
    "numpy.arange": {
     "line number": [
      176
     ]
    },
    "numpy.concatenate": {
     "line number": [
      179,
      182,
      185
     ]
    },
    "numpy.core.array": {
     "line number": [
      186
     ]
    },
    "numpy.float64": {
     "line number": [
      176
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      188
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      180,
      181,
      183,
      184
     ]
    },
    "range": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.test_concatenate_sloppy0": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      241,
      245,
      246
     ]
    },
    "list": {
     "line number": [
      237,
      238
     ]
    },
    "numpy.core.concatenate": {
     "line number": [
      239,
      242,
      243,
      246
     ]
    },
    "numpy.core.tests.test_shape_base.warnings": {
     "line number": [
      240,
      241,
      245
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      239,
      242,
      243
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      246
     ]
    },
    "range": {
     "line number": [
      237,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.vstack": {
  "data": {
   "shadows": "numpy.core.vstack"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1036
     ]
    },
    "run_module_suite": {
     "line number": [
      1037
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_ufunc.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.TestUfunc": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.check_identityless_reduction": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      642,
      643,
      644,
      645,
      646,
      648,
      650,
      652,
      656,
      657,
      658,
      659,
      660,
      662,
      664,
      666,
      670,
      671,
      672,
      673,
      674,
      676,
      678,
      680
     ]
    },
    "numpy.minimum.reduce": {
     "line number": [
      642,
      643,
      644,
      645,
      646,
      648,
      650,
      652,
      656,
      657,
      658,
      659,
      660,
      662,
      664,
      666,
      670,
      671,
      672,
      673,
      674,
      676,
      678,
      680
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      489
     ]
    },
    "assert_equal": {
     "line number": [
      496
     ]
    },
    "broadcastable": {
     "line number": [
      487,
      488
     ]
    },
    "numpy.array": {
     "line number": [
      445,
      446
     ]
    },
    "numpy.core.umath_tests.matrix_multiply": {
     "line number": [
      490
     ]
    },
    "numpy.newaxis": {
     "line number": [
      492
     ]
    },
    "numpy.newaxis.swapaxes": {
     "line number": [
      491
     ]
    },
    "numpy.sum": {
     "line number": [
      491
     ]
    },
    "permute_n": {
     "line number": [
      475
     ]
    },
    "rand": {
     "line number": [
      445,
      446
     ]
    },
    "slice": {
     "line number": [
      476
     ]
    },
    "slice_n": {
     "line number": [
      476
     ]
    },
    "str": {
     "line number": [
      493,
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.broadcastable": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.permute_n": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "permute_n": {
     "line number": [
      453
     ]
    },
    "range": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.slice_n": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      468,
      469
     ]
    },
    "slice_n": {
     "line number": [
      466
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_all_ufunc": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_axis_out_of_bounds": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      559,
      561,
      564,
      566
     ]
    },
    "assert_raises": {
     "line number": [
      559,
      561,
      564,
      566
     ]
    },
    "numpy.array": {
     "line number": [
      558,
      560,
      563,
      565
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_broadcast": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      347
     ]
    },
    "assert_array_equal": {
     "line number": [
      329,
      332,
      336,
      340
     ]
    },
    "assert_equal": {
     "line number": [
      346
     ]
    },
    "numpy.arange": {
     "line number": [
      327,
      328,
      331,
      334,
      335,
      338,
      342,
      343
     ]
    },
    "numpy.array": {
     "line number": [
      339
     ]
    },
    "numpy.core.umath_tests.inner1d": {
     "line number": [
      329,
      332,
      336,
      340,
      345
     ]
    },
    "numpy.sum": {
     "line number": [
      329,
      332,
      336,
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_casting_out_param": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      603,
      608
     ]
    },
    "numpy.add": {
     "line number": [
      602
     ]
    },
    "numpy.float32": {
     "line number": [
      606
     ]
    },
    "numpy.float64": {
     "line number": [
      601
     ]
    },
    "numpy.int64": {
     "line number": [
      599,
      600
     ]
    },
    "numpy.ones": {
     "line number": [
      599,
      600,
      601
     ]
    },
    "numpy.subtract": {
     "line number": [
      607
     ]
    },
    "numpy.zeros": {
     "line number": [
      605,
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": {
    "MyThing": {
     "line number": [
      897
     ]
    },
    "MyThing.getitem_count": {
     "line number": [
      899,
      899
     ]
    },
    "MyThing.rmul_count": {
     "line number": [
      898,
      898
     ]
    },
    "assert_": {
     "line number": [
      898,
      899
     ]
    },
    "numpy.float64": {
     "line number": [
      897
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": {
    "object": {
     "line number": [
      872
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__getitem__": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      889
     ]
    },
    "MyThing": {
     "line number": [
      891
     ]
    },
    "isinstance": {
     "line number": [
      886
     ]
    },
    "len": {
     "line number": [
      888,
      888,
      891
     ]
    },
    "tuple": {
     "line number": [
      886
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__init__": {
  "data": {
   "lineno": 878
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__len__": {
  "data": {
   "lineno": 881
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__rmul__": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": {
    "MyThing.rmul_count": {
     "line number": [
      894
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_ufunc": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      869
     ]
    },
    "numpy.array": {
     "line number": [
      861,
      863,
      867
     ]
    },
    "rational": {
     "line number": [
      861,
      861,
      861,
      862,
      863,
      863,
      863,
      864,
      867,
      867,
      867,
      868
     ]
    },
    "test_add_rationals": {
     "line number": [
      866
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_endian": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      362,
      365
     ]
    },
    "assert_equal": {
     "line number": [
      370,
      371,
      372,
      373,
      375,
      376,
      377,
      378
     ]
    },
    "numpy.absolute": {
     "line number": [
      375,
      376
     ]
    },
    "numpy.arange": {
     "line number": [
      361,
      364,
      368,
      369
     ]
    },
    "numpy.core.umath_tests.inner1d": {
     "line number": [
      362,
      365
     ]
    },
    "numpy.dtype": {
     "line number": [
      370,
      371,
      372,
      373,
      375,
      376,
      377,
      378
     ]
    },
    "numpy.negative": {
     "line number": [
      377,
      378
     ]
    },
    "numpy.sum": {
     "line number": [
      362,
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_forced_sig": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      295,
      296,
      297,
      298,
      299,
      304,
      307,
      310,
      313,
      316
     ]
    },
    "numpy.add": {
     "line number": [
      295,
      296,
      297,
      298,
      299,
      303,
      306,
      309,
      312,
      315
     ]
    },
    "numpy.arange": {
     "line number": [
      294
     ]
    },
    "numpy.zeros": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      146,
      152,
      157,
      163
     ]
    },
    "assert_almost_equal": {
     "line number": [
      89,
      93,
      97,
      101,
      105,
      109,
      114,
      118,
      122,
      126,
      130,
      134
     ]
    },
    "fone": {
     "line number": [
      89,
      93,
      97,
      101,
      105,
      109
     ]
    },
    "foo": {
     "line number": [
      151,
      162
     ]
    },
    "ftwo": {
     "line number": [
      114,
      118,
      122,
      126,
      130,
      134
     ]
    },
    "len": {
     "line number": [
      150,
      161
     ]
    },
    "numpy.abs": {
     "line number": [
      146
     ]
    },
    "numpy.add": {
     "line number": [
      157
     ]
    },
    "numpy.all": {
     "line number": [
      146,
      152,
      157,
      163
     ]
    },
    "numpy.cdouble": {
     "line number": [
      104,
      129
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      108,
      133
     ]
    },
    "numpy.conjugate": {
     "line number": [
      152
     ]
    },
    "numpy.csingle": {
     "line number": [
      100,
      125
     ]
    },
    "numpy.double": {
     "line number": [
      92,
      117
     ]
    },
    "numpy.exp": {
     "line number": [
      82
     ]
    },
    "numpy.logical_xor": {
     "line number": [
      163
     ]
    },
    "numpy.longdouble": {
     "line number": [
      96,
      121
     ]
    },
    "numpy.object": {
     "line number": [
      145,
      149,
      156,
      160
     ]
    },
    "numpy.ones": {
     "line number": [
      113,
      117,
      121,
      125,
      129,
      133,
      145,
      156
     ]
    },
    "numpy.single": {
     "line number": [
      88,
      113
     ]
    },
    "numpy.zeros": {
     "line number": [
      88,
      92,
      96,
      100,
      104,
      108,
      149,
      160
     ]
    },
    "range": {
     "line number": [
      150,
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops.foo": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "object": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops.foo.conjugate": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.bool_": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops.foo.logical_xor": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "numpy.bool_": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_get_signature": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      291
     ]
    },
    "numpy.core.umath_tests.inner1d.signature": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_corder": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_forder": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      687
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_noncontig": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      695
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_noncontig_unaligned": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      700
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_nonreorderable": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      718
     ]
    },
    "assert_equal": {
     "line number": [
      710,
      713,
      716
     ]
    },
    "assert_raises": {
     "line number": [
      718
     ]
    },
    "numpy.array": {
     "line number": [
      707
     ]
    },
    "numpy.divide.reduce": {
     "line number": [
      709,
      712,
      715,
      718
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_otherorder": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      691
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_incontiguous_array": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      388,
      394
     ]
    },
    "assert_equal": {
     "line number": [
      387,
      393
     ]
    },
    "numpy.arange": {
     "line number": [
      382,
      389
     ]
    },
    "numpy.core.umath_tests.inner1d": {
     "line number": [
      388,
      394
     ]
    },
    "numpy.sum": {
     "line number": [
      388,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_inner1d": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      321,
      323
     ]
    },
    "numpy.arange": {
     "line number": [
      320,
      322
     ]
    },
    "numpy.core.umath_tests.inner1d": {
     "line number": [
      321,
      323
     ]
    },
    "numpy.sum": {
     "line number": [
      321,
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_innerwt": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      427,
      431
     ]
    },
    "numpy.arange": {
     "line number": [
      424,
      425,
      426,
      428,
      429,
      430
     ]
    },
    "numpy.core.umath_tests.innerwt": {
     "line number": [
      427,
      431
     ]
    },
    "numpy.sum": {
     "line number": [
      427,
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_innerwt_empty": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      438
     ]
    },
    "numpy.array": {
     "line number": [
      435,
      436,
      437
     ]
    },
    "numpy.core.umath_tests.innerwt": {
     "line number": [
      438
     ]
    },
    "numpy.sum": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_inplace_fancy_indexing": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1000,
      1001
     ]
    },
    "TypeError": {
     "line number": [
      1033
     ]
    },
    "assert_array_equal": {
     "line number": [
      1023,
      1029,
      1034
     ]
    },
    "assert_equal": {
     "line number": [
      905,
      910,
      915,
      920,
      936,
      941,
      957,
      962,
      978,
      993,
      998,
      1006,
      1012,
      1017
     ]
    },
    "assert_raises": {
     "line number": [
      1000,
      1001
     ]
    },
    "numpy.add.at": {
     "line number": [
      904,
      909,
      914,
      919,
      935,
      940,
      956,
      961,
      977,
      997,
      1000,
      1001,
      1022,
      1028,
      1033
     ]
    },
    "numpy.arange": {
     "line number": [
      903,
      907,
      912,
      917,
      933,
      938,
      954,
      959,
      975,
      991,
      1004,
      1009,
      1015,
      1020,
      1023
     ]
    },
    "numpy.array": {
     "line number": [
      908,
      913,
      918,
      934,
      939,
      955,
      960,
      976,
      996,
      1006,
      1026,
      1027,
      1032,
      1034
     ]
    },
    "numpy.dtype": {
     "line number": [
      1026,
      1027
     ]
    },
    "numpy.equal.at": {
     "line number": [
      1011
     ]
    },
    "numpy.invert.at": {
     "line number": [
      1016
     ]
    },
    "numpy.negative.at": {
     "line number": [
      992
     ]
    },
    "numpy.object": {
     "line number": [
      1032,
      1034
     ]
    },
    "numpy.power.at": {
     "line number": [
      1005
     ]
    },
    "slice": {
     "line number": [
      914,
      919,
      919,
      935,
      940,
      940,
      961,
      977,
      977,
      977
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_matrix_multiply": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "numpy.double": {
     "line number": [
      442
     ]
    },
    "numpy.long": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_array_reduction": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      527,
      528,
      529,
      531,
      532,
      533,
      534,
      535,
      536,
      537,
      538
     ]
    },
    "numpy.all": {
     "line number": [
      534
     ]
    },
    "numpy.any": {
     "line number": [
      533
     ]
    },
    "numpy.array": {
     "line number": [
      526,
      530,
      537,
      538
     ]
    },
    "numpy.max": {
     "line number": [
      528,
      535
     ]
    },
    "numpy.min": {
     "line number": [
      529,
      536
     ]
    },
    "numpy.prod": {
     "line number": [
      532
     ]
    },
    "numpy.sum": {
     "line number": [
      527,
      531
     ]
    },
    "object": {
     "line number": [
      526,
      530,
      537,
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_logical": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      500,
      502,
      504,
      506,
      509,
      511,
      513,
      515,
      518,
      521,
      522
     ]
    },
    "numpy.array": {
     "line number": [
      499,
      501,
      503,
      505,
      507,
      510,
      512,
      514,
      516,
      519
     ]
    },
    "numpy.logical_and": {
     "line number": [
      509,
      511,
      513,
      515
     ]
    },
    "numpy.logical_and.reduce": {
     "line number": [
      522
     ]
    },
    "numpy.logical_not": {
     "line number": [
      518
     ]
    },
    "numpy.logical_or": {
     "line number": [
      500,
      502,
      504,
      506
     ]
    },
    "numpy.logical_or.reduce": {
     "line number": [
      521
     ]
    },
    "object": {
     "line number": [
      499,
      501,
      503,
      505,
      507,
      510,
      512,
      514,
      516,
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_scalar_multiply": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      544,
      545
     ]
    },
    "numpy.matrix": {
     "line number": [
      542,
      543
     ]
    },
    "numpy.multiply": {
     "line number": [
      544,
      545
     ]
    },
    "object": {
     "line number": [
      542,
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_operand_flags": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      842,
      847,
      849
     ]
    },
    "numpy.arange": {
     "line number": [
      839,
      840
     ]
    },
    "numpy.array": {
     "line number": [
      842,
      845
     ]
    },
    "numpy.core.operand_flag_tests.inplace_add": {
     "line number": [
      841,
      846,
      848
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_output_argument": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      402,
      405,
      410,
      413,
      418,
      421
     ]
    },
    "numpy.arange": {
     "line number": [
      398,
      399
     ]
    },
    "numpy.core.umath_tests.inner1d": {
     "line number": [
      401,
      404,
      409,
      412,
      417,
      420
     ]
    },
    "numpy.sum": {
     "line number": [
      402,
      405,
      410,
      413,
      418,
      421
     ]
    },
    "numpy.zeros": {
     "line number": [
      400,
      408,
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_pickle": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.core.tests.test_ufunc.pickle": {
     "line number": [
      15,
      15
     ]
    },
    "numpy.sin": {
     "line number": [
      15,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_pickle_withstring": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "numpy.compat.asbytes": {
     "line number": [
      19
     ]
    },
    "numpy.core.tests.test_ufunc.pickle": {
     "line number": [
      21
     ]
    },
    "numpy.cos": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      755
     ]
    },
    "err": {
     "line number": [
      760
     ]
    },
    "numpy.add": {
     "line number": [
      775
     ]
    },
    "numpy.add.reduce": {
     "line number": [
      765,
      766,
      767,
      768,
      769,
      770
     ]
    },
    "numpy.maximum": {
     "line number": [
      775
     ]
    },
    "numpy.maximum.identity": {
     "line number": [
      755
     ]
    },
    "numpy.maximum.reduce": {
     "line number": [
      756,
      757,
      758,
      759,
      760,
      761
     ]
    },
    "numpy.zeros": {
     "line number": [
      761,
      770,
      776,
      777,
      778,
      779
     ]
    },
    "t": {
     "line number": [
      756,
      757,
      758,
      759,
      765,
      766,
      767,
      768
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis.err": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      736
     ]
    },
    "assert_raises": {
     "line number": [
      736
     ]
    },
    "f": {
     "line number": [
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis.ok": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": {
    "f": {
     "line number": [
      734
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis.t": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "expect": {
     "line number": [
      738,
      739,
      740,
      741,
      742,
      743,
      744,
      749,
      750,
      751,
      752,
      753
     ]
    },
    "numpy.zeros": {
     "line number": [
      738,
      739,
      740,
      741,
      742,
      743,
      744,
      749,
      750,
      751,
      752,
      753
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduceat_shifting_sum": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      27
     ]
    },
    "list": {
     "line number": [
      26
     ]
    },
    "numpy.add.reduceat": {
     "line number": [
      27
     ]
    },
    "numpy.arange": {
     "line number": [
      25,
      26,
      26
     ]
    },
    "numpy.array": {
     "line number": [
      26
     ]
    },
    "zip": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_safe_casting": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      789,
      793
     ]
    },
    "StringIO.StringIO": {
     "line number": [
      814
     ]
    },
    "assert_": {
     "line number": [
      819
     ]
    },
    "assert_array_equal": {
     "line number": [
      787,
      790,
      794,
      797
     ]
    },
    "assert_no_warnings": {
     "line number": [
      787,
      796
     ]
    },
    "assert_warns": {
     "line number": [
      789,
      793
     ]
    },
    "int": {
     "line number": [
      785
     ]
    },
    "numpy.add": {
     "line number": [
      787,
      789,
      796
     ]
    },
    "numpy.array": {
     "line number": [
      785
     ]
    },
    "numpy.core.tests.test_ufunc.sys": {
     "line number": [
      806,
      812,
      814,
      819,
      821
     ]
    },
    "numpy.core.tests.test_ufunc.warnings": {
     "line number": [
      810,
      811
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_safe_casting.add_inplace": {
  "data": {
   "lineno": 791
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_scalar_reduction": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      582,
      583,
      584,
      585,
      588,
      594
     ]
    },
    "assert_equal": {
     "line number": [
      571,
      572,
      573,
      574,
      575,
      576,
      579
     ]
    },
    "numpy.all": {
     "line number": [
      574
     ]
    },
    "numpy.any": {
     "line number": [
      573,
      588,
      594
     ]
    },
    "numpy.array": {
     "line number": [
      593
     ]
    },
    "numpy.bool_": {
     "line number": [
      588
     ]
    },
    "numpy.float32": {
     "line number": [
      582,
      582,
      583,
      583,
      584,
      584,
      585,
      585
     ]
    },
    "numpy.max": {
     "line number": [
      575,
      584
     ]
    },
    "numpy.min": {
     "line number": [
      576,
      585
     ]
    },
    "numpy.power.reduce": {
     "line number": [
      579
     ]
    },
    "numpy.prod": {
     "line number": [
      572,
      582
     ]
    },
    "numpy.sum": {
     "line number": [
      571,
      583
     ]
    },
    "type": {
     "line number": [
      582,
      583,
      584,
      585,
      588,
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_scalar_reduction.MyArray": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      591
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      267,
      273,
      279,
      285
     ]
    },
    "assert_equal": {
     "line number": [
      255,
      258,
      266,
      272,
      278,
      284,
      288
     ]
    },
    "numpy.core.umath_tests.test_signature": {
     "line number": [
      255,
      258,
      265,
      271,
      277,
      283,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_struct_ufunc": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      858
     ]
    },
    "numpy.array": {
     "line number": [
      854,
      855,
      858
     ]
    },
    "numpy.core.struct_ufunc_test.add_triplet": {
     "line number": [
      857
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_type_cast": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      356
     ]
    },
    "assert_array_equal": {
     "line number": [
      352
     ]
    },
    "numpy.arange": {
     "line number": [
      351,
      354
     ]
    },
    "numpy.core.umath_tests.inner1d": {
     "line number": [
      352,
      356
     ]
    },
    "numpy.sum": {
     "line number": [
      352,
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_ufunc_custom_out": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      836
     ]
    },
    "assert_equal": {
     "line number": [
      833
     ]
    },
    "assert_raises": {
     "line number": [
      836
     ]
    },
    "numpy.array": {
     "line number": [
      826,
      827,
      833
     ]
    },
    "numpy.empty": {
     "line number": [
      828
     ]
    },
    "test_add": {
     "line number": [
      832,
      836
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_where_param": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      616,
      620,
      623
     ]
    },
    "numpy.add": {
     "line number": [
      615
     ]
    },
    "numpy.arange": {
     "line number": [
      612,
      618
     ]
    },
    "numpy.ones": {
     "line number": [
      613
     ]
    },
    "numpy.power": {
     "line number": [
      619
     ]
    },
    "numpy.subtract": {
     "line number": [
      622
     ]
    },
    "numpy.zeros": {
     "line number": [
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_where_param_buffer_output": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      634
     ]
    },
    "numpy.add": {
     "line number": [
      633
     ]
    },
    "numpy.float64": {
     "line number": [
      632
     ]
    },
    "numpy.int64": {
     "line number": [
      630,
      631
     ]
    },
    "numpy.ones": {
     "line number": [
      630,
      631,
      632
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_zerosize_reduction": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      554,
      555
     ]
    },
    "assert_equal": {
     "line number": [
      550,
      551,
      552,
      553
     ]
    },
    "assert_raises": {
     "line number": [
      554,
      555
     ]
    },
    "numpy.all": {
     "line number": [
      553
     ]
    },
    "numpy.any": {
     "line number": [
      552
     ]
    },
    "numpy.array": {
     "line number": [
      549
     ]
    },
    "numpy.max": {
     "line number": [
      554
     ]
    },
    "numpy.min": {
     "line number": [
      555
     ]
    },
    "numpy.prod": {
     "line number": [
      551
     ]
    },
    "numpy.sum": {
     "line number": [
      550
     ]
    },
    "object": {
     "line number": [
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.opflag_tests": {
  "data": {
   "shadows": "numpy.core.operand_flag_tests"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.struct_ufunc": {
  "data": {
   "shadows": "numpy.core.struct_ufunc_test"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.umt": {
  "data": {
   "shadows": "numpy.core.umath_tests"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1351
     ]
    },
    "run_module_suite": {
     "line number": [
      1352
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_umath.TestAbsolute": {
  "data": {
   "lineno": 722
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAbsolute.test_abs_blocked": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      741,
      743,
      745,
      747
     ]
    },
    "assert_equal": {
     "line number": [
      730
     ]
    },
    "numpy.abs": {
     "line number": [
      741,
      742
     ]
    },
    "numpy.absolute": {
     "line number": [
      729
     ]
    },
    "numpy.arange": {
     "line number": [
      737
     ]
    },
    "numpy.core.umath.absolute": {
     "line number": [
      728
     ]
    },
    "numpy.errstate": {
     "line number": [
      734
     ]
    },
    "numpy.float32": {
     "line number": [
      725
     ]
    },
    "numpy.float64": {
     "line number": [
      725
     ]
    },
    "numpy.inf": {
     "line number": [
      735,
      735,
      740
     ]
    },
    "numpy.nan": {
     "line number": [
      735
     ]
    },
    "numpy.negative": {
     "line number": [
      746
     ]
    },
    "numpy.testing.utils._gen_alignment_data": {
     "line number": [
      726
     ]
    },
    "range": {
     "line number": [
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAbsolute.test_lower_align": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      753,
      754
     ]
    },
    "numpy.abs": {
     "line number": [
      753,
      757,
      758
     ]
    },
    "numpy.float64": {
     "line number": [
      752
     ]
    },
    "numpy.int8": {
     "line number": [
      752
     ]
    },
    "numpy.negative": {
     "line number": [
      754,
      755,
      756
     ]
    },
    "numpy.ones_like": {
     "line number": [
      756,
      758
     ]
    },
    "numpy.zeros": {
     "line number": [
      752
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues": {
  "data": {
   "lineno": 389
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_any_ninf": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      428,
      429
     ]
    },
    "numpy.NINF": {
     "line number": [
      428,
      429
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      428,
      429
     ]
    },
    "numpy.pi": {
     "line number": [
      428,
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_any_pinf": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath.assert_arctan2_isnzero": {
     "line number": [
      434
     ]
    },
    "numpy.core.tests.test_umath.assert_arctan2_ispzero": {
     "line number": [
      433
     ]
    },
    "numpy.inf": {
     "line number": [
      433,
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_any": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      438,
      439
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      438,
      439
     ]
    },
    "numpy.inf": {
     "line number": [
      438,
      439
     ]
    },
    "numpy.pi": {
     "line number": [
      438,
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_ninf": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      443,
      444
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      443,
      444
     ]
    },
    "numpy.inf": {
     "line number": [
      443,
      443,
      444,
      444
     ]
    },
    "numpy.pi": {
     "line number": [
      443,
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_pinf": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      448,
      449
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      448,
      449
     ]
    },
    "numpy.inf": {
     "line number": [
      448,
      448,
      449,
      449
     ]
    },
    "numpy.pi": {
     "line number": [
      448,
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_nan_any": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath.assert_arctan2_isnan": {
     "line number": [
      453,
      454,
      455
     ]
    },
    "numpy.inf": {
     "line number": [
      453,
      454
     ]
    },
    "numpy.nan": {
     "line number": [
      453,
      454,
      455,
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_negative_zero": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      423,
      424
     ]
    },
    "numpy.NZERO": {
     "line number": [
      424
     ]
    },
    "numpy.PZERO": {
     "line number": [
      423
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      423,
      424
     ]
    },
    "numpy.pi": {
     "line number": [
      423,
      424
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_one_one": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      392,
      393,
      394
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      392,
      393,
      394
     ]
    },
    "numpy.pi": {
     "line number": [
      392,
      393,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_positive_zero": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      418,
      419
     ]
    },
    "numpy.NZERO": {
     "line number": [
      419
     ]
    },
    "numpy.PZERO": {
     "line number": [
      418
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      418,
      419
     ]
    },
    "numpy.pi": {
     "line number": [
      418,
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_negative": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      408,
      409
     ]
    },
    "numpy.NZERO": {
     "line number": [
      409
     ]
    },
    "numpy.PZERO": {
     "line number": [
      408
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      408,
      409
     ]
    },
    "numpy.pi": {
     "line number": [
      408,
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_nzero": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      398,
      399
     ]
    },
    "numpy.NZERO": {
     "line number": [
      398,
      399,
      399
     ]
    },
    "numpy.PZERO": {
     "line number": [
      398
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      398,
      399
     ]
    },
    "numpy.pi": {
     "line number": [
      398,
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_positive": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "numpy.NZERO": {
     "line number": [
      414
     ]
    },
    "numpy.PZERO": {
     "line number": [
      413
     ]
    },
    "numpy.core.tests.test_umath.assert_arctan2_isnzero": {
     "line number": [
      414
     ]
    },
    "numpy.core.tests.test_umath.assert_arctan2_ispzero": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_pzero": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "numpy.NZERO": {
     "line number": [
      404
     ]
    },
    "numpy.PZERO": {
     "line number": [
      403,
      403,
      404
     ]
    },
    "numpy.core.tests.test_umath.assert_arctan2_isnzero": {
     "line number": [
      404
     ]
    },
    "numpy.core.tests.test_umath.assert_arctan2_ispzero": {
     "line number": [
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAttributes": {
  "data": {
   "lineno": 1113
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAttributes.test_attributes": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1117
     ]
    },
    "assert_equal": {
     "line number": [
      1116,
      1120,
      1121,
      1122
     ]
    },
    "numpy.core.umath.add": {
     "line number": [
      1115
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestChoose": {
  "data": {
   "lineno": 920
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestChoose.test_mixed": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      924
     ]
    },
    "numpy.array": {
     "line number": [
      922,
      923,
      924
     ]
    },
    "numpy.choose": {
     "line number": [
      924
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": {
    "numpy.arccos": {
     "line number": [
      933
     ]
    },
    "numpy.arccosh": {
     "line number": [
      933
     ]
    },
    "numpy.arcsin": {
     "line number": [
      933
     ]
    },
    "numpy.arcsinh": {
     "line number": [
      933
     ]
    },
    "numpy.arctan": {
     "line number": [
      933
     ]
    },
    "numpy.arctanh": {
     "line number": [
      934
     ]
    },
    "numpy.cos": {
     "line number": [
      934
     ]
    },
    "numpy.exp": {
     "line number": [
      934
     ]
    },
    "numpy.exp2": {
     "line number": [
      935
     ]
    },
    "numpy.log": {
     "line number": [
      935
     ]
    },
    "numpy.log10": {
     "line number": [
      935
     ]
    },
    "numpy.log1p": {
     "line number": [
      936
     ]
    },
    "numpy.log2": {
     "line number": [
      935
     ]
    },
    "numpy.sin": {
     "line number": [
      934
     ]
    },
    "numpy.sqrt": {
     "line number": [
      935
     ]
    },
    "numpy.tan": {
     "line number": [
      934
     ]
    },
    "object": {
     "line number": [
      932
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.check_loss_of_precision": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1071,
      1075,
      1079,
      1083
     ]
    },
    "check": {
     "line number": [
      1061,
      1063,
      1064,
      1100,
      1101,
      1102
     ]
    },
    "dtype": {
     "line number": [
      1025,
      1057,
      1068
     ]
    },
    "func": {
     "line number": [
      1097,
      1100,
      1101,
      1102
     ]
    },
    "numpy.absolute": {
     "line number": [
      1070,
      1074,
      1078,
      1082
     ]
    },
    "numpy.all": {
     "line number": [
      1071,
      1075,
      1079,
      1083
     ]
    },
    "numpy.arcsin": {
     "line number": [
      1082,
      1097
     ]
    },
    "numpy.arcsinh": {
     "line number": [
      1074,
      1097,
      1097
     ]
    },
    "numpy.arctan": {
     "line number": [
      1078,
      1097
     ]
    },
    "numpy.arctanh": {
     "line number": [
      1070,
      1097
     ]
    },
    "numpy.array": {
     "line number": [
      1068
     ]
    },
    "numpy.finfo": {
     "line number": [
      1024
     ]
    },
    "numpy.logspace": {
     "line number": [
      1054,
      1055
     ]
    },
    "numpy.longcomplex": {
     "line number": [
      1057
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.check_loss_of_precision.check": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1089,
      1090,
      1094
     ]
    },
    "assert_": {
     "line number": [
      1091,
      1095
     ]
    },
    "dtype": {
     "line number": [
      1088
     ]
    },
    "func": {
     "line number": [
      1094,
      1094,
      1095
     ]
    },
    "numpy.all": {
     "line number": [
      1091,
      1095
     ]
    },
    "numpy.asarray": {
     "line number": [
      1088
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_against_cmath": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1012
     ]
    },
    "abs": {
     "line number": [
      1017
     ]
    },
    "assert_": {
     "line number": [
      1017
     ]
    },
    "cfunc": {
     "line number": [
      1016
     ]
    },
    "complex": {
     "line number": [
      1015
     ]
    },
    "func": {
     "line number": [
      1007,
      1015
     ]
    },
    "func.__name__.split": {
     "line number": [
      1008
     ]
    },
    "getattr": {
     "line number": [
      1011
     ]
    },
    "numpy.complex": {
     "line number": [
      1006
     ]
    },
    "numpy.complex_": {
     "line number": [
      1015
     ]
    },
    "numpy.core.tests.test_umath.cmath": {
     "line number": [
      1011
     ]
    },
    "numpy.finfo": {
     "line number": [
      1006
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_branch_cuts": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": {
    "numpy.arccos": {
     "line number": [
      967,
      976
     ]
    },
    "numpy.arccosh": {
     "line number": [
      971,
      980
     ]
    },
    "numpy.arcsin": {
     "line number": [
      966,
      975
     ]
    },
    "numpy.arcsinh": {
     "line number": [
      970,
      979
     ]
    },
    "numpy.arctan": {
     "line number": [
      968,
      977
     ]
    },
    "numpy.arctanh": {
     "line number": [
      972,
      981
     ]
    },
    "numpy.log": {
     "line number": [
      960
     ]
    },
    "numpy.log10": {
     "line number": [
      962
     ]
    },
    "numpy.log1p": {
     "line number": [
      963
     ]
    },
    "numpy.log2": {
     "line number": [
      961
     ]
    },
    "numpy.sqrt": {
     "line number": [
      964
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_branch_cuts_failing": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": {
    "numpy.arccos": {
     "line number": [
      994
     ]
    },
    "numpy.arccosh": {
     "line number": [
      997
     ]
    },
    "numpy.arcsin": {
     "line number": [
      993
     ]
    },
    "numpy.arcsinh": {
     "line number": [
      996
     ]
    },
    "numpy.arctan": {
     "line number": [
      995
     ]
    },
    "numpy.arctanh": {
     "line number": [
      998
     ]
    },
    "numpy.log": {
     "line number": [
      987
     ]
    },
    "numpy.log10": {
     "line number": [
      989
     ]
    },
    "numpy.log1p": {
     "line number": [
      990
     ]
    },
    "numpy.log2": {
     "line number": [
      988
     ]
    },
    "numpy.sqrt": {
     "line number": [
      992
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_it": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      946,
      947
     ]
    },
    "f": {
     "line number": [
      939,
      940,
      944,
      945,
      946,
      947
     ]
    },
    "numpy.arccosh": {
     "line number": [
      940
     ]
    },
    "numpy.complex": {
     "line number": [
      945
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_loss_of_precision": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": {
    "dtype": {
     "line number": [
      1105,
      1106
     ]
    },
    "numpy.complex64": {
     "line number": [
      1105
     ]
    },
    "numpy.complex_": {
     "line number": [
      1105
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_loss_of_precision_longcomplex": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath.is_longdouble_finfo_bogus": {
     "line number": [
      1108
     ]
    },
    "numpy.longcomplex": {
     "line number": [
      1110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_precisions_consistent": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      955,
      956
     ]
    },
    "f": {
     "line number": [
      951,
      952,
      953,
      954,
      955,
      956
     ]
    },
    "numpy.cdouble": {
     "line number": [
      953
     ]
    },
    "numpy.clongdouble": {
     "line number": [
      954
     ]
    },
    "numpy.csingle": {
     "line number": [
      952
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestConstants": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestConstants.test_e": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      32
     ]
    },
    "numpy.core.umath.e": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestConstants.test_euler_gamma": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      36
     ]
    },
    "numpy.core.umath.euler_gamma": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestConstants.test_pi": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      28
     ]
    },
    "numpy.core.umath.pi": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDegrees": {
  "data": {
   "lineno": 669
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestDegrees.test_degrees": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      671,
      672
     ]
    },
    "numpy.core.umath.degrees": {
     "line number": [
      671,
      672
     ]
    },
    "numpy.pi": {
     "line number": [
      671,
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestDivision.test_division_complex": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      55,
      60
     ]
    },
    "numpy.array": {
     "line number": [
      54,
      58
     ]
    },
    "numpy.complex128": {
     "line number": [
      54,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_division_int": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      44,
      47,
      48,
      49
     ]
    },
    "numpy.array": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_floor_division_complex": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      81,
      86
     ]
    },
    "numpy.array": {
     "line number": [
      79,
      80,
      84
     ]
    },
    "numpy.complex128": {
     "line number": [
      79,
      80,
      84
     ]
    },
    "numpy.floor_divide": {
     "line number": [
      81,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_zero_division_complex": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      66,
      68,
      70,
      72,
      74
     ]
    },
    "complex": {
     "line number": [
      67,
      69,
      71
     ]
    },
    "numpy.array": {
     "line number": [
      64
     ]
    },
    "numpy.complex128": {
     "line number": [
      64
     ]
    },
    "numpy.errstate": {
     "line number": [
      63
     ]
    },
    "numpy.inf": {
     "line number": [
      67,
      69,
      71,
      71
     ]
    },
    "numpy.isinf": {
     "line number": [
      66,
      68,
      70,
      72
     ]
    },
    "numpy.isnan": {
     "line number": [
      74
     ]
    },
    "numpy.nan": {
     "line number": [
      67,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExp": {
  "data": {
   "lineno": 254
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExp.test_exp_values": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      262
     ]
    },
    "numpy.array": {
     "line number": [
      260,
      261
     ]
    },
    "numpy.exp": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExp2": {
  "data": {
   "lineno": 191
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExp2.test_exp2_values": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      198
     ]
    },
    "numpy.array": {
     "line number": [
      196,
      197
     ]
    },
    "numpy.exp2": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExpm1": {
  "data": {
   "lineno": 321
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExpm1.test_expm1": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      323,
      324
     ]
    },
    "numpy.core.umath.exp": {
     "line number": [
      323,
      324
     ]
    },
    "numpy.core.umath.expm1": {
     "line number": [
      323,
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExpm1.test_special": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      327,
      328,
      329,
      330,
      331
     ]
    },
    "numpy.core.umath.expm1": {
     "line number": [
      327,
      328,
      329,
      330,
      331
     ]
    },
    "numpy.inf": {
     "line number": [
      327,
      327,
      330,
      330,
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFloatingPoint": {
  "data": {
   "lineno": 664
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFloatingPoint.test_floating_point": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      666
     ]
    },
    "numpy.core.umath.FLOATING_POINT_SUPPORT": {
     "line number": [
      666
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._FilterInvalids": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFmax.test_complex_nans": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      619
     ]
    },
    "complex": {
     "line number": [
      615,
      615,
      615
     ]
    },
    "numpy.array": {
     "line number": [
      616,
      617,
      618
     ]
    },
    "numpy.complex": {
     "line number": [
      616,
      617,
      618
     ]
    },
    "numpy.fmax": {
     "line number": [
      619
     ]
    },
    "numpy.nan": {
     "line number": [
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_float_nans": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      611
     ]
    },
    "numpy.array": {
     "line number": [
      608,
      609,
      610
     ]
    },
    "numpy.fmax": {
     "line number": [
      611
     ]
    },
    "numpy.nan": {
     "line number": [
      607
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_reduce": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      590,
      591,
      595,
      596,
      599,
      600
     ]
    },
    "func": {
     "line number": [
      586,
      590,
      591,
      595,
      596,
      599,
      600
     ]
    },
    "numpy.arange": {
     "line number": [
      584
     ]
    },
    "numpy.fmax.reduce": {
     "line number": [
      586
     ]
    },
    "numpy.nan": {
     "line number": [
      597,
      598
     ]
    },
    "numpy.typecodes": {
     "line number": [
      582,
      583
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_reduce_complex": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      603,
      604
     ]
    },
    "numpy.fmax.reduce": {
     "line number": [
      603,
      604
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._FilterInvalids": {
     "line number": [
      622
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFmin.test_complex_nans": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      661
     ]
    },
    "complex": {
     "line number": [
      657,
      657,
      657
     ]
    },
    "numpy.array": {
     "line number": [
      658,
      659,
      660
     ]
    },
    "numpy.complex": {
     "line number": [
      658,
      659,
      660
     ]
    },
    "numpy.fmin": {
     "line number": [
      661
     ]
    },
    "numpy.nan": {
     "line number": [
      656
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_float_nans": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      653
     ]
    },
    "numpy.array": {
     "line number": [
      650,
      651,
      652
     ]
    },
    "numpy.fmin": {
     "line number": [
      653
     ]
    },
    "numpy.nan": {
     "line number": [
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_reduce": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      632,
      633,
      637,
      638,
      641,
      642
     ]
    },
    "func": {
     "line number": [
      628,
      632,
      633,
      637,
      638,
      641,
      642
     ]
    },
    "numpy.arange": {
     "line number": [
      626
     ]
    },
    "numpy.fmin.reduce": {
     "line number": [
      628
     ]
    },
    "numpy.nan": {
     "line number": [
      639,
      640
     ]
    },
    "numpy.typecodes": {
     "line number": [
      624,
      625
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_reduce_complex": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      645,
      646
     ]
    },
    "numpy.fmin.reduce": {
     "line number": [
      645,
      646
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypot": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "object": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestHypot.test_simple": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      336,
      337
     ]
    },
    "numpy.core.umath.hypot": {
     "line number": [
      336,
      337
     ]
    },
    "numpy.core.umath.sqrt": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues": {
  "data": {
   "lineno": 352
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues.test_nan_outputs": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath.assert_hypot_isnan": {
     "line number": [
      354,
      355
     ]
    },
    "numpy.nan": {
     "line number": [
      354,
      354,
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues.test_nan_outputs2": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath.assert_hypot_isinf": {
     "line number": [
      358,
      359,
      360,
      361,
      362,
      363
     ]
    },
    "numpy.inf": {
     "line number": [
      358,
      359,
      360,
      361,
      362,
      362,
      363
     ]
    },
    "numpy.nan": {
     "line number": [
      358,
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues.test_no_fpe": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": {
    "assert_no_warnings": {
     "line number": [
      366
     ]
    },
    "numpy.core.umath.hypot": {
     "line number": [
      366
     ]
    },
    "numpy.inf": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLdexp": {
  "data": {
   "lineno": 458
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLdexp._check_ldexp": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      460,
      462,
      464
     ]
    },
    "numpy.array": {
     "line number": [
      460,
      461,
      462,
      463,
      464,
      465
     ]
    },
    "numpy.core.umath.ldexp": {
     "line number": [
      460,
      462,
      464
     ]
    },
    "numpy.float32": {
     "line number": [
      460
     ]
    },
    "numpy.float64": {
     "line number": [
      462
     ]
    },
    "numpy.longdouble": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLdexp.test_ldexp": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      469
     ]
    },
    "numpy.core.umath.ldexp": {
     "line number": [
      469
     ]
    },
    "numpy.int16": {
     "line number": [
      472
     ]
    },
    "numpy.int32": {
     "line number": [
      473
     ]
    },
    "numpy.int8": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLdexp.test_ldexp_overflow": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      482,
      483
     ]
    },
    "numpy.core.umath.ldexp": {
     "line number": [
      482,
      483
     ]
    },
    "numpy.dtype": {
     "line number": [
      480,
      481
     ]
    },
    "numpy.errstate": {
     "line number": [
      479
     ]
    },
    "numpy.iinfo": {
     "line number": [
      480,
      481
     ]
    },
    "numpy.inf": {
     "line number": [
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog": {
  "data": {
   "lineno": 243
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog.test_log_values": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      251
     ]
    },
    "numpy.array": {
     "line number": [
      249,
      250
     ]
    },
    "numpy.log": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog1p": {
  "data": {
   "lineno": 306
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog1p.test_log1p": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      308,
      309
     ]
    },
    "numpy.core.umath.log": {
     "line number": [
      308,
      309
     ]
    },
    "numpy.core.umath.log1p": {
     "line number": [
      308,
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog1p.test_special": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      312,
      313,
      315,
      317,
      318
     ]
    },
    "numpy.core.umath.log1p": {
     "line number": [
      312,
      313,
      315,
      317,
      318
     ]
    },
    "numpy.errstate": {
     "line number": [
      314,
      316
     ]
    },
    "numpy.inf": {
     "line number": [
      313,
      313,
      315,
      318
     ]
    },
    "numpy.nan": {
     "line number": [
      312,
      312,
      317,
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog2": {
  "data": {
   "lineno": 181
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog2.test_log2_values": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      188
     ]
    },
    "numpy.array": {
     "line number": [
      186,
      187
     ]
    },
    "numpy.log2": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._FilterInvalids": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_inf": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      296
     ]
    },
    "numpy.array": {
     "line number": [
      293,
      294,
      295
     ]
    },
    "numpy.errstate": {
     "line number": [
      291
     ]
    },
    "numpy.inf": {
     "line number": [
      287
     ]
    },
    "numpy.logaddexp": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_logaddexp_range": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      284
     ]
    },
    "numpy.array": {
     "line number": [
      281,
      282,
      283
     ]
    },
    "numpy.logaddexp": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_logaddexp_values": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      274
     ]
    },
    "numpy.array": {
     "line number": [
      271,
      272,
      273
     ]
    },
    "numpy.log": {
     "line number": [
      271,
      272,
      273
     ]
    },
    "numpy.logaddexp": {
     "line number": [
      274
     ]
    },
    "zip": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_nan": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      299,
      300,
      301,
      302,
      303
     ]
    },
    "numpy.inf": {
     "line number": [
      299,
      300
     ]
    },
    "numpy.isnan": {
     "line number": [
      299,
      300,
      301,
      302,
      303
     ]
    },
    "numpy.logaddexp": {
     "line number": [
      299,
      300,
      301,
      302,
      303
     ]
    },
    "numpy.nan": {
     "line number": [
      299,
      300,
      301,
      302,
      303,
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._FilterInvalids": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_inf": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      233
     ]
    },
    "numpy.array": {
     "line number": [
      230,
      231,
      232
     ]
    },
    "numpy.errstate": {
     "line number": [
      228
     ]
    },
    "numpy.inf": {
     "line number": [
      224
     ]
    },
    "numpy.logaddexp2": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_logaddexp2_range": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      221
     ]
    },
    "numpy.array": {
     "line number": [
      218,
      219,
      220
     ]
    },
    "numpy.logaddexp2": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_logaddexp2_values": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      211
     ]
    },
    "numpy.array": {
     "line number": [
      208,
      209,
      210
     ]
    },
    "numpy.log2": {
     "line number": [
      208,
      209,
      210
     ]
    },
    "numpy.logaddexp2": {
     "line number": [
      211
     ]
    },
    "zip": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_nan": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      236,
      237,
      238,
      239,
      240
     ]
    },
    "numpy.inf": {
     "line number": [
      236,
      237
     ]
    },
    "numpy.isnan": {
     "line number": [
      236,
      237,
      238,
      239,
      240
     ]
    },
    "numpy.logaddexp2": {
     "line number": [
      236,
      237,
      238,
      239,
      240
     ]
    },
    "numpy.nan": {
     "line number": [
      236,
      237,
      238,
      239,
      240,
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._FilterInvalids": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_complex_nans": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      525
     ]
    },
    "complex": {
     "line number": [
      521,
      521,
      521
     ]
    },
    "numpy.array": {
     "line number": [
      522,
      523,
      524
     ]
    },
    "numpy.complex": {
     "line number": [
      522,
      523,
      524
     ]
    },
    "numpy.maximum": {
     "line number": [
      525
     ]
    },
    "numpy.nan": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_float_nans": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      517
     ]
    },
    "numpy.array": {
     "line number": [
      514,
      515,
      516
     ]
    },
    "numpy.maximum": {
     "line number": [
      517
     ]
    },
    "numpy.nan": {
     "line number": [
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_object_array": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      530
     ]
    },
    "numpy.arange": {
     "line number": [
      528
     ]
    },
    "numpy.maximum": {
     "line number": [
      530
     ]
    },
    "numpy.object": {
     "line number": [
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_reduce": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      496,
      497,
      501,
      502,
      505,
      506
     ]
    },
    "func": {
     "line number": [
      496,
      497,
      501,
      502,
      505,
      506
     ]
    },
    "numpy.arange": {
     "line number": [
      490
     ]
    },
    "numpy.maximum.reduce": {
     "line number": [
      492
     ]
    },
    "numpy.nan": {
     "line number": [
      503,
      504,
      505,
      506
     ]
    },
    "numpy.typecodes": {
     "line number": [
      488,
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_reduce_complex": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      509,
      510
     ]
    },
    "numpy.maximum.reduce": {
     "line number": [
      509,
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinMax": {
  "data": {
   "lineno": 695
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMinMax.test_lower_align": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      718,
      719
     ]
    },
    "numpy.float64": {
     "line number": [
      717
     ]
    },
    "numpy.int8": {
     "line number": [
      717
     ]
    },
    "numpy.zeros": {
     "line number": [
      717
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinMax.test_minmax_blocked": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      710,
      712
     ]
    },
    "numpy.arange": {
     "line number": [
      702
     ]
    },
    "numpy.float32": {
     "line number": [
      698
     ]
    },
    "numpy.float64": {
     "line number": [
      698
     ]
    },
    "numpy.isnan": {
     "line number": [
      704,
      706
     ]
    },
    "numpy.nan": {
     "line number": [
      703
     ]
    },
    "numpy.testing.utils._gen_alignment_data": {
     "line number": [
      699
     ]
    },
    "range": {
     "line number": [
      701
     ]
    },
    "repr": {
     "line number": [
      705,
      707
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._FilterInvalids": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_complex_nans": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      572
     ]
    },
    "complex": {
     "line number": [
      568,
      568,
      568
     ]
    },
    "numpy.array": {
     "line number": [
      569,
      570,
      571
     ]
    },
    "numpy.complex": {
     "line number": [
      569,
      570,
      571
     ]
    },
    "numpy.minimum": {
     "line number": [
      572
     ]
    },
    "numpy.nan": {
     "line number": [
      567
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_float_nans": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      564
     ]
    },
    "numpy.array": {
     "line number": [
      561,
      562,
      563
     ]
    },
    "numpy.minimum": {
     "line number": [
      564
     ]
    },
    "numpy.nan": {
     "line number": [
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_object_array": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      577
     ]
    },
    "numpy.arange": {
     "line number": [
      575
     ]
    },
    "numpy.minimum": {
     "line number": [
      577
     ]
    },
    "numpy.object": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_reduce": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      543,
      544,
      548,
      549,
      552,
      553
     ]
    },
    "func": {
     "line number": [
      539,
      543,
      544,
      548,
      549,
      552,
      553
     ]
    },
    "numpy.arange": {
     "line number": [
      537
     ]
    },
    "numpy.minimum.reduce": {
     "line number": [
      539
     ]
    },
    "numpy.nan": {
     "line number": [
      550,
      551,
      552,
      553
     ]
    },
    "numpy.typecodes": {
     "line number": [
      535,
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_reduce_complex": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      556,
      557
     ]
    },
    "numpy.minimum.reduce": {
     "line number": [
      556,
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower": {
  "data": {
   "lineno": 89
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestPower.test_fast_power": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      174
     ]
    },
    "assert_equal": {
     "line number": [
      178
     ]
    },
    "numpy.array": {
     "line number": [
      173,
      177
     ]
    },
    "numpy.int16": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_complex": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      120,
      121,
      122,
      123,
      124,
      125,
      127,
      130
     ]
    },
    "assert_complex_equal": {
     "line number": [
      142,
      143,
      144
     ]
    },
    "assert_equal": {
     "line number": [
      118,
      119
     ]
    },
    "complex": {
     "line number": [
      139,
      139
     ]
    },
    "numpy.array": {
     "line number": [
      117,
      140
     ]
    },
    "numpy.complex_": {
     "line number": [
      140
     ]
    },
    "numpy.core.umath.sqrt": {
     "line number": [
      127,
      127,
      128
     ]
    },
    "numpy.errstate": {
     "line number": [
      141
     ]
    },
    "numpy.inf": {
     "line number": [
      139,
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_complex.assert_complex_equal": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      136,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_float": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      98,
      99,
      104,
      111
     ]
    },
    "assert_equal": {
     "line number": [
      92,
      93,
      94,
      97,
      106,
      113
     ]
    },
    "numpy.array": {
     "line number": [
      91
     ]
    },
    "numpy.core.umath.sqrt": {
     "line number": [
      99,
      99,
      103,
      110
     ]
    },
    "numpy.float32": {
     "line number": [
      101
     ]
    },
    "numpy.float64": {
     "line number": [
      108
     ]
    },
    "numpy.sqrt": {
     "line number": [
      105,
      112
     ]
    },
    "numpy.testing.utils._gen_alignment_data": {
     "line number": [
      101,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_zero": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "assert_complex_equal": {
     "line number": [
      160,
      163,
      165,
      169,
      170
     ]
    },
    "complex": {
     "line number": [
      150,
      151
     ]
    },
    "numpy.array": {
     "line number": [
      148,
      149,
      150,
      151
     ]
    },
    "numpy.errstate": {
     "line number": [
      164
     ]
    },
    "numpy.inf": {
     "line number": [
      150
     ]
    },
    "numpy.nan": {
     "line number": [
      151,
      151
     ]
    },
    "numpy.power": {
     "line number": [
      160,
      163,
      165,
      169,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_zero.assert_complex_equal": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      155,
      156
     ]
    },
    "numpy.asarray": {
     "line number": [
      154,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRadians": {
  "data": {
   "lineno": 675
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestRadians.test_radians": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      677,
      678
     ]
    },
    "numpy.core.umath.radians": {
     "line number": [
      677,
      678
     ]
    },
    "numpy.pi": {
     "line number": [
      677,
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSign": {
  "data": {
   "lineno": 681
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSign.test_sign": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      689,
      691,
      692
     ]
    },
    "numpy.array": {
     "line number": [
      683,
      685
     ]
    },
    "numpy.core.umath.sign": {
     "line number": [
      688,
      690
     ]
    },
    "numpy.errstate": {
     "line number": [
      687
     ]
    },
    "numpy.inf": {
     "line number": [
      683,
      683
     ]
    },
    "numpy.nan": {
     "line number": [
      683,
      685
     ]
    },
    "numpy.zeros": {
     "line number": [
      684
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods": {
  "data": {
   "lineno": 761
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": {
    "A": {
     "line number": [
      910
     ]
    },
    "B": {
     "line number": [
      916
     ]
    },
    "C": {
     "line number": [
      917
     ]
    },
    "assert_equal": {
     "line number": [
      913,
      916,
      917
     ]
    },
    "numpy.core.umath.maximum": {
     "line number": [
      911,
      912,
      916,
      917
     ]
    },
    "numpy.zeros": {
     "line number": [
      911
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.A": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": {
    "object": {
     "line number": [
      897
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.A.__array__": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": {
    "func": {
     "line number": [
      899,
      900
     ]
    },
    "numpy.zeros": {
     "line number": [
      903
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.B": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": {
    "object": {
     "line number": [
      904
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.B.__array__": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      906
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.C": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": {
    "object": {
     "line number": [
      907
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.C.__array__": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      909
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      873,
      874
     ]
    },
    "numpy.core.umath.minimum": {
     "line number": [
      872
     ]
    },
    "numpy.ndarray": {
     "line number": [
      874
     ]
    },
    "numpy.zeros": {
     "line number": [
      873
     ]
    },
    "type": {
     "line number": [
      874
     ]
    },
    "with_wrap": {
     "line number": [
      871
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": {
    "object": {
     "line number": [
      865
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap.__array__": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      868
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 869
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": {
    "A": {
     "line number": [
      893
     ]
    },
    "RuntimeError": {
     "line number": [
      894
     ]
    },
    "numpy.core.umath.maximum": {
     "line number": [
      894
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": {
    "object": {
     "line number": [
      888
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A.__array__": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      890
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A.__array_prepare__": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      892
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": {
    "A": {
     "line number": [
      861
     ]
    },
    "RuntimeError": {
     "line number": [
      862
     ]
    },
    "numpy.core.umath.maximum": {
     "line number": [
      862
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": {
    "object": {
     "line number": [
      856
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A.__array__": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      858
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A.__array_wrap__": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      860
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      815
     ]
    },
    "numpy.core.umath.minimum": {
     "line number": [
      814
     ]
    },
    "numpy.zeros": {
     "line number": [
      815
     ]
    },
    "with_wrap": {
     "line number": [
      813
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": {
    "object": {
     "line number": [
      806
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap.__array__": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      808
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": {
    "with_wrap": {
     "line number": [
      810
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      884,
      885
     ]
    },
    "numpy.add": {
     "line number": [
      883
     ]
    },
    "numpy.array": {
     "line number": [
      882,
      884
     ]
    },
    "type": {
     "line number": [
      885
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare.with_prepare": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      877
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare.with_prepare.__array_prepare__": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      881
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": {
    "A": {
     "line number": [
      831,
      836,
      839,
      843,
      851
     ]
    },
    "B": {
     "line number": [
      832,
      837,
      840,
      844,
      845,
      846,
      852
     ]
    },
    "C": {
     "line number": [
      833,
      838,
      841,
      847,
      848,
      849,
      853
     ]
    },
    "f": {
     "line number": [
      835,
      836,
      837,
      838,
      839,
      840,
      841,
      843,
      844,
      845,
      846,
      847,
      848,
      849
     ]
    },
    "numpy.core.umath.exp": {
     "line number": [
      851,
      852,
      853
     ]
    },
    "numpy.core.umath.minimum": {
     "line number": [
      834
     ]
    },
    "numpy.ndarray": {
     "line number": [
      835
     ]
    },
    "numpy.zeros": {
     "line number": [
      830
     ]
    },
    "type": {
     "line number": [
      835,
      836,
      837,
      838,
      839,
      840,
      841,
      843,
      844,
      845,
      846,
      847,
      848,
      849,
      851,
      852,
      853
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": {
    "object": {
     "line number": [
      818
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A.__array__": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      820
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A.__array_wrap__": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": {
    "type": {
     "line number": [
      822
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.B": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": {
    "A": {
     "line number": [
      826
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.C": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": {
    "A": {
     "line number": [
      828
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": {
    "A": {
     "line number": [
      800,
      802
     ]
    },
    "assert_array_equal": {
     "line number": [
      803
     ]
    },
    "isinstance": {
     "line number": [
      802
     ]
    },
    "numpy.array": {
     "line number": [
      803
     ]
    },
    "numpy.float64": {
     "line number": [
      801
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar.A": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      796
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar.A.__new__": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      799
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      773,
      777,
      778
     ]
    },
    "func": {
     "line number": [
      774,
      775
     ]
    },
    "len": {
     "line number": [
      776
     ]
    },
    "numpy.core.umath.minimum": {
     "line number": [
      772,
      775
     ]
    },
    "numpy.zeros": {
     "line number": [
      773
     ]
    },
    "with_wrap": {
     "line number": [
      771
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": {
    "object": {
     "line number": [
      763
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap.__array__": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      765
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": {
    "with_wrap": {
     "line number": [
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      792
     ]
    },
    "isinstance": {
     "line number": [
      791
     ]
    },
    "numpy.array": {
     "line number": [
      792
     ]
    },
    "numpy.core.umath.multiply": {
     "line number": [
      790
     ]
    },
    "with_wrap": {
     "line number": [
      789,
      791
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      783
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": {
    "type": {
     "line number": [
      788
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap.__new__": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      786
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSubclass": {
  "data": {
   "lineno": 1125
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1133
     ]
    },
    "simple": {
     "line number": [
      1132
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op.simple": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      1127
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op.simple.__new__": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": {
    "numpy.ndarray.__new__": {
     "line number": [
      1129
     ]
    },
    "object": {
     "line number": [
      1129
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._FilterInvalids": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "object": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath._FilterInvalids.setUp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.seterr": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._FilterInvalids.tearDown": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "numpy.seterr": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._check_branch_cut": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1169,
      1170,
      1171,
      1172,
      1186,
      1187
     ]
    },
    "dtype": {
     "line number": [
      1159,
      1160,
      1162
     ]
    },
    "f": {
     "line number": [
      1165,
      1166,
      1167,
      1183
     ]
    },
    "numpy.absolute": {
     "line number": [
      1166,
      1166,
      1167,
      1167,
      1169,
      1170,
      1171,
      1172,
      1186,
      1187
     ]
    },
    "numpy.all": {
     "line number": [
      1169,
      1170,
      1171,
      1172,
      1186,
      1187
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      1159,
      1160
     ]
    },
    "numpy.complex": {
     "line number": [
      1136
     ]
    },
    "numpy.finfo": {
     "line number": [
      1162
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._gen_alignment_data": {
  "data": {
   "shadows": "numpy.testing.utils._gen_alignment_data"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath._test_nextafter": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1202,
      1203,
      1204,
      1205,
      1206
     ]
    },
    "numpy.finfo": {
     "line number": [
      1201
     ]
    },
    "numpy.isnan": {
     "line number": [
      1204,
      1205
     ]
    },
    "numpy.nan": {
     "line number": [
      1204,
      1205
     ]
    },
    "numpy.nextafter": {
     "line number": [
      1202,
      1203,
      1204,
      1205,
      1206
     ]
    },
    "t": {
     "line number": [
      1198,
      1199,
      1200,
      1201
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._test_spacing": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1225,
      1226,
      1227,
      1228,
      1229
     ]
    },
    "numpy.errstate": {
     "line number": [
      1224
     ]
    },
    "numpy.finfo": {
     "line number": [
      1221
     ]
    },
    "numpy.inf": {
     "line number": [
      1223
     ]
    },
    "numpy.isnan": {
     "line number": [
      1226,
      1227,
      1228
     ]
    },
    "numpy.nan": {
     "line number": [
      1222
     ]
    },
    "numpy.spacing": {
     "line number": [
      1225,
      1226,
      1227,
      1228,
      1229
     ]
    },
    "t": {
     "line number": [
      1220,
      1221,
      1222,
      1223,
      1229
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isnan": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      370
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      370,
      370
     ]
    },
    "numpy.isnan": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isninf": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      378
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      378,
      378,
      378
     ]
    },
    "numpy.isinf": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isnzero": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      386
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      386,
      386,
      386
     ]
    },
    "numpy.signbit": {
     "line number": [
      386
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_ispinf": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      374
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      374,
      374,
      374
     ]
    },
    "numpy.isinf": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_ispzero": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      382
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      382,
      382,
      382
     ]
    },
    "numpy.signbit": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_hypot_isinf": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      348
     ]
    },
    "numpy.core.umath.hypot": {
     "line number": [
      348,
      349
     ]
    },
    "numpy.errstate": {
     "line number": [
      347
     ]
    },
    "numpy.isinf": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_hypot_isnan": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      342
     ]
    },
    "numpy.core.umath.hypot": {
     "line number": [
      342,
      343
     ]
    },
    "numpy.errstate": {
     "line number": [
      341
     ]
    },
    "numpy.isnan": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.cmath": {
  "data": {
   "shadows": "cmath"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.is_longdouble_finfo_bogus": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": {
    "numpy.finfo": {
     "line number": [
      928
     ]
    },
    "numpy.isfinite": {
     "line number": [
      929
     ]
    },
    "numpy.log10": {
     "line number": [
      929
     ]
    },
    "numpy.longcomplex": {
     "line number": [
      928
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.ncu": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.on_powerpc": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath.platform": {
     "line number": [
      14,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.test_complex_nan_comparisons": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1344,
      1345,
      1346,
      1347,
      1348
     ]
    },
    "complex": {
     "line number": [
      1331,
      1331,
      1331,
      1332,
      1332,
      1332,
      1332,
      1333,
      1333,
      1333
     ]
    },
    "numpy.array": {
     "line number": [
      1337,
      1339
     ]
    },
    "numpy.errstate": {
     "line number": [
      1335
     ]
    },
    "numpy.isfinite": {
     "line number": [
      1341,
      1341
     ]
    },
    "numpy.nan": {
     "line number": [
      1331,
      1331,
      1331,
      1331
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_copysign": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1190,
      1192,
      1193,
      1194,
      1195
     ]
    },
    "numpy.copysign": {
     "line number": [
      1190,
      1192,
      1193,
      1194,
      1195
     ]
    },
    "numpy.errstate": {
     "line number": [
      1191
     ]
    },
    "numpy.nan": {
     "line number": [
      1194,
      1195
     ]
    },
    "numpy.signbit": {
     "line number": [
      1194,
      1195
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafter": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._test_nextafter": {
     "line number": [
      1209
     ]
    },
    "numpy.float64": {
     "line number": [
      1209
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafter_vs_spacing": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1280
     ]
    },
    "f": {
     "line number": [
      1278,
      1280,
      1280,
      1280
     ]
    },
    "numpy.float32": {
     "line number": [
      1276
     ]
    },
    "numpy.float64": {
     "line number": [
      1276
     ]
    },
    "numpy.nextafter": {
     "line number": [
      1280
     ]
    },
    "numpy.spacing": {
     "line number": [
      1280
     ]
    },
    "t": {
     "line number": [
      1276,
      1278,
      1279
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafterf": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._test_nextafter": {
     "line number": [
      1212
     ]
    },
    "numpy.float32": {
     "line number": [
      1212
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafterl": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._test_nextafter": {
     "line number": [
      1217
     ]
    },
    "numpy.core.tests.test_umath.on_powerpc": {
     "line number": [
      1214
     ]
    },
    "numpy.core.tests.test_umath.sys": {
     "line number": [
      1214
     ]
    },
    "numpy.longdouble": {
     "line number": [
      1217
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_pos_nan": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      1284
     ]
    },
    "numpy.nan": {
     "line number": [
      1284
     ]
    },
    "numpy.signbit": {
     "line number": [
      1284
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_reduceat": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      1305,
      1312
     ]
    },
    "numpy.UFUNC_BUFSIZE_DEFAULT": {
     "line number": [
      1311
     ]
    },
    "numpy.add.reduce": {
     "line number": [
      1298,
      1300
     ]
    },
    "numpy.add.reduceat": {
     "line number": [
      1304,
      1310
     ]
    },
    "numpy.array": {
     "line number": [
      1301
     ]
    },
    "numpy.dtype": {
     "line number": [
      1288
     ]
    },
    "numpy.empty": {
     "line number": [
      1289
     ]
    },
    "numpy.float32": {
     "line number": [
      1288
     ]
    },
    "numpy.int64": {
     "line number": [
      1288
     ]
    },
    "numpy.setbufsize": {
     "line number": [
      1309,
      1311
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_reduceat_empty": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1319,
      1320,
      1324,
      1325,
      1327,
      1328
     ]
    },
    "numpy.add.reduceat": {
     "line number": [
      1318,
      1323,
      1326
     ]
    },
    "numpy.array": {
     "line number": [
      1316,
      1317
     ]
    },
    "numpy.ones": {
     "line number": [
      1322
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacing": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._test_spacing": {
     "line number": [
      1232
     ]
    },
    "numpy.float64": {
     "line number": [
      1232
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacing_gfortran": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      1272
     ]
    },
    "numpy.array": {
     "line number": [
      1271
     ]
    },
    "numpy.float32": {
     "line number": [
      1264,
      1270
     ]
    },
    "numpy.float64": {
     "line number": [
      1260,
      1270
     ]
    },
    "numpy.spacing": {
     "line number": [
      1272
     ]
    },
    "zip": {
     "line number": [
      1270
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacingf": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._test_spacing": {
     "line number": [
      1235
     ]
    },
    "numpy.float32": {
     "line number": [
      1235
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacingl": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": {
    "numpy.core.tests.test_umath._test_spacing": {
     "line number": [
      1240
     ]
    },
    "numpy.core.tests.test_umath.on_powerpc": {
     "line number": [
      1237
     ]
    },
    "numpy.core.tests.test_umath.sys": {
     "line number": [
      1237
     ]
    },
    "numpy.longdouble": {
     "line number": [
      1240
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      356
     ]
    },
    "array.array": {
     "line number": [
      24
     ]
    },
    "buffer": {
     "line number": [
      34
     ]
    },
    "len": {
     "line number": [
      34
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      34,
      46,
      48
     ]
    },
    "numpy.core.tests.test_unicode.sys": {
     "line number": [
      10,
      22
     ]
    },
    "run_module_suite": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.core.tests.test_unicode._array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.assign_values": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "object": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.assign_values.content_check": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "int": {
     "line number": [
      198
     ]
    },
    "numpy.core.tests.test_unicode.buffer_length": {
     "line number": [
      200,
      208,
      213,
      217
     ]
    },
    "numpy.core.tests.test_unicode.ucs4": {
     "line number": [
      207
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.assign_values.test_values0D": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "zeros": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.assign_values.test_valuesMD": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "zeros": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.assign_values.test_valuesSD": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "zeros": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.buffer_length": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "buffer": {
     "line number": [
      41
     ]
    },
    "isinstance": {
     "line number": [
      39
     ]
    },
    "len": {
     "line number": [
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.byteorder_values": {
  "data": {
   "lineno": 283
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.byteorder_values.test_values0D": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "array": {
     "line number": [
      288
     ]
    },
    "assert_equal": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.byteorder_values.test_valuesMD": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "array": {
     "line number": [
      310
     ]
    },
    "assert_equal": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.byteorder_values.test_valuesSD": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "array": {
     "line number": [
      300
     ]
    },
    "assert_equal": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_values": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "object": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.create_values.content_check": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "int": {
     "line number": [
      113
     ]
    },
    "numpy.core.tests.test_unicode.buffer_length": {
     "line number": [
      115,
      123,
      128,
      132
     ]
    },
    "numpy.core.tests.test_unicode.ucs4": {
     "line number": [
      122
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_values.test_values0D": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "array": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_values.test_valuesMD": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "array": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_values.test_valuesSD": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "array": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_zeros": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "object": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.create_zeros.content_check": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "int": {
     "line number": [
      61
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      67
     ]
    },
    "numpy.compat.sixu": {
     "line number": [
      65
     ]
    },
    "numpy.core.tests.test_unicode.buffer_length": {
     "line number": [
      63,
      70,
      72
     ]
    },
    "numpy.core.tests.test_unicode.ucs4": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_zeros.test_zeros0D": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "zeros": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_zeros.test_zerosMD": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "zeros": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_zeros.test_zerosSD": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "zeros": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.sixu": {
  "data": {
   "shadows": "numpy.compat.sixu"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.test_assign_values_1009_ucs2": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.assign_values": {
     "line number": [
      266
     ]
    },
    "numpy.core.tests.test_unicode.ucs2_value": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_assign_values_1009_ucs4": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.assign_values": {
     "line number": [
      272
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_assign_values_1_ucs2": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.assign_values": {
     "line number": [
      242
     ]
    },
    "numpy.core.tests.test_unicode.ucs2_value": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_assign_values_1_ucs4": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.assign_values": {
     "line number": [
      248
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_assign_values_2_ucs2": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.assign_values": {
     "line number": [
      254
     ]
    },
    "numpy.core.tests.test_unicode.ucs2_value": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_assign_values_2_ucs4": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.assign_values": {
     "line number": [
      260
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_1009_ucs2": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.byteorder_values": {
     "line number": [
      344
     ]
    },
    "numpy.core.tests.test_unicode.ucs2_value": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_1009_ucs4": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.byteorder_values": {
     "line number": [
      350
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_1_ucs2": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.byteorder_values": {
     "line number": [
      320
     ]
    },
    "numpy.core.tests.test_unicode.ucs2_value": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_1_ucs4": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.byteorder_values": {
     "line number": [
      326
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_2_ucs2": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.byteorder_values": {
     "line number": [
      332
     ]
    },
    "numpy.core.tests.test_unicode.ucs2_value": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_2_ucs4": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.byteorder_values": {
     "line number": [
      338
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_1009_ucs2": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.create_values": {
     "line number": [
      176
     ]
    },
    "numpy.core.tests.test_unicode.ucs2_value": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_1009_ucs4": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.create_values": {
     "line number": [
      182
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_1_ucs2": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.create_values": {
     "line number": [
      152
     ]
    },
    "numpy.core.tests.test_unicode.ucs2_value": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_1_ucs4": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.create_values": {
     "line number": [
      158
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_2_ucs2": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.create_values": {
     "line number": [
      164
     ]
    },
    "numpy.core.tests.test_unicode.ucs2_value": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_2_ucs4": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.create_values": {
     "line number": [
      170
     ]
    },
    "numpy.core.tests.test_unicode.ucs4_value": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_zeros_1": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.create_zeros": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_zeros_1009": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.create_zeros": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_zeros_2": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "numpy.core.tests.test_unicode.create_zeros": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.ucs2_value": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "numpy.core.tests.test_unicode.ucs4": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.core.tests.test_unicode.ucs4_value": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.core.whichmodule": {
  "data": {
   "shadows": "pickle.whichmodule"
  },
  "type": "import"
 },
 "numpy.ctypeslib": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      63
     ]
    },
    "numpy.core._internal": {
     "line number": [
      87
     ]
    },
    "numpy.core._internal._getintp_ctype": {
     "line number": [
      86
     ]
    },
    "numpy.ctypeslib._dummy": {
     "line number": [
      78,
      79,
      80,
      81
     ]
    },
    "numpy.ctypeslib.ct": {
     "line number": [
      327,
      327,
      327,
      327,
      327,
      328,
      328,
      328,
      328,
      328,
      329,
      329,
      335,
      340
     ]
    },
    "numpy.ctypeslib.ctypes": {
     "line number": [
      66,
      88,
      294,
      295
     ]
    },
    "numpy.ctypeslib.load_library": {
     "line number": [
      130
     ]
    },
    "numpy.ctypeslib.prep_simple": {
     "line number": [
      335
     ]
    },
    "numpy.ctypeslib.simple_types": {
     "line number": [
      333
     ]
    },
    "numpy.deprecate": {
     "line number": [
      130
     ]
    },
    "numpy.intp": {
     "line number": [
      86
     ]
    },
    "object": {
     "line number": [
      83
     ]
    },
    "type": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ctypeslib._ARRAY_TYPE": {
  "data": {
   "lineno": 340
  },
  "type": "constant"
 },
 "numpy.ctypeslib.__all__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.ctypeslib._dtype": {
  "data": {
   "shadows": "numpy.dtype"
  },
  "type": "import"
 },
 "numpy.ctypeslib._dummy": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib._flagdict": {
  "data": {
   "shadows": "numpy.core.multiarray._flagdict"
  },
  "type": "import"
 },
 "numpy.ctypeslib._flagnames": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "numpy.ctypeslib._flags_fromnum": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "numpy.core.multiarray._flagdict": {
     "line number": [
      144
     ]
    },
    "numpy.ctypeslib._flagnames": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib._ndptr": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "numpy.ctypeslib._ndptr_base": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ctypeslib._ndptr.__array_interface__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "property": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib._ndptr._check_retval_": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib._ndptr.from_param": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      172,
      175,
      178,
      181,
      184
     ]
    },
    "classmethod": {
     "line number": [
      169
     ]
    },
    "isinstance": {
     "line number": [
      171
     ]
    },
    "numpy.ctypeslib._flags_fromnum": {
     "line number": [
      185
     ]
    },
    "numpy.ndarray": {
     "line number": [
      171
     ]
    },
    "str": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib._ndptr_base": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "numpy.ctypeslib._num_fromflags": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "numpy.core.multiarray._flagdict": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib._pointer_type_cache": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "numpy.ctypeslib._typecodes": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "numpy.ctypeslib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ctypeslib.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.ctypeslib.as_array": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      403
     ]
    },
    "hasattr": {
     "line number": [
      404
     ]
    },
    "numpy.array": {
     "line number": [
      408
     ]
    },
    "numpy.ctypeslib.prep_array": {
     "line number": [
      407
     ]
    },
    "numpy.ctypeslib.prep_pointer": {
     "line number": [
      405
     ]
    },
    "type": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib.as_ctypes": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      415,
      417,
      420
     ]
    },
    "numpy.ctypeslib._typecodes": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib.c_intp": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "numpy.ctypeslib.ct": {
  "data": {
   "lineno": 295
  },
  "type": "constant"
 },
 "numpy.ctypeslib.ctypes": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "numpy.ctypeslib.ctypes_load_library": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "numpy.ctypeslib.deprecate": {
  "data": {
   "shadows": "numpy.deprecate"
  },
  "type": "import"
 },
 "numpy.ctypeslib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ctypeslib.flagsobj": {
  "data": {
   "shadows": "numpy.core.multiarray.flagsobj"
  },
  "type": "import"
 },
 "numpy.ctypeslib.get_shared_lib_extension": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_shared_lib_extension"
  },
  "type": "import"
 },
 "numpy.ctypeslib.integer": {
  "data": {
   "shadows": "numpy.integer"
  },
  "type": "import"
 },
 "numpy.ctypeslib.load_library": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      124,
      128
     ]
    },
    "numpy.ctypeslib.ctypes": {
     "line number": [
      92,
      123
     ]
    },
    "numpy.ctypeslib.os": {
     "line number": [
      97,
      113,
      114,
      115,
      120,
      121
     ]
    },
    "numpy.ctypeslib.warnings": {
     "line number": [
      94
     ]
    },
    "numpy.distutils.misc_util.get_shared_lib_extension": {
     "line number": [
      103,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.ctypeslib.ndpointer": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      264
     ]
    },
    "TypeError": {
     "line number": [
      260,
      277
     ]
    },
    "id": {
     "line number": [
      269
     ]
    },
    "int": {
     "line number": [
      250
     ]
    },
    "isinstance": {
     "line number": [
      248,
      250,
      253
     ]
    },
    "numpy.core.multiarray.flagsobj": {
     "line number": [
      253
     ]
    },
    "numpy.ctypeslib._flags_fromnum": {
     "line number": [
      252,
      255
     ]
    },
    "numpy.ctypeslib._ndptr": {
     "line number": [
      286
     ]
    },
    "numpy.ctypeslib._num_fromflags": {
     "line number": [
      261
     ]
    },
    "numpy.ctypeslib._pointer_type_cache": {
     "line number": [
      263,
      291
     ]
    },
    "numpy.dtype": {
     "line number": [
      244,
      245,
      245,
      245,
      263,
      266,
      269,
      287,
      291
     ]
    },
    "numpy.dtype.names": {
     "line number": [
      268
     ]
    },
    "numpy.dtype.str": {
     "line number": [
      271
     ]
    },
    "numpy.integer": {
     "line number": [
      250
     ]
    },
    "str": {
     "line number": [
      248,
      269,
      276,
      278
     ]
    },
    "tuple": {
     "line number": [
      280
     ]
    },
    "type": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib.nic": {
  "data": {
   "shadows": "numpy.core._internal"
  },
  "type": "import"
 },
 "numpy.ctypeslib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.ctypeslib.prep_array": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      347
     ]
    },
    "numpy.ctypeslib._ARRAY_TYPE": {
     "line number": [
      352
     ]
    },
    "ob": {
     "line number": [
      356
     ]
    },
    "property": {
     "line number": [
      370
     ]
    },
    "tuple": {
     "line number": [
      355
     ]
    },
    "type": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib.prep_array.__array_interface__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "numpy.ctypeslib.ct": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib.prep_pointer": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      378
     ]
    },
    "numpy.ctypeslib.ct": {
     "line number": [
      386
     ]
    },
    "numpy.dtype": {
     "line number": [
      382,
      382
     ]
    },
    "numpy.dtype.str": {
     "line number": [
      385
     ]
    },
    "type": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib.prep_simple": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      308
     ]
    },
    "numpy.ctypeslib._typecodes": {
     "line number": [
      312
     ]
    },
    "numpy.dtype": {
     "line number": [
      311,
      311
     ]
    },
    "property": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib.prep_simple.__array_interface__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "numpy.ctypeslib.ct": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ctypeslib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ctypeslib.simple_types": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "numpy.ctypeslib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.ctypeslib.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      18,
      33
     ]
    },
    "numpy.distutils._INSTALLED": {
     "line number": [
      36
     ]
    },
    "numpy.distutils.sys": {
     "line number": [
      5
     ]
    },
    "numpy.testing.Tester": {
     "line number": [
      38,
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.distutils._INSTALLED": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.distutils.__config__": {
  "data": {
   "shadows": "__config__"
  },
  "type": "import"
 },
 "numpy.distutils.__config__.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.blas_mkl_info": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.blas_opt_info": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.get_info": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "globals": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.__config__.lapack_opt_info": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.openblas_info": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.show": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "globals": {
     "line number": [
      15
     ]
    },
    "len": {
     "line number": [
      22
     ]
    },
    "print": {
     "line number": [
      17,
      19,
      24
     ]
    },
    "str": {
     "line number": [
      21
     ]
    },
    "type": {
     "line number": [
      16,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.__doc__": {
  "data": {
   "shadows": "numpy.distutils.info.__doc__"
  },
  "type": "import"
 },
 "numpy.distutils.__version__": {
  "data": {
   "shadows": "numpy.distutils.__version__.version"
  },
  "type": "import"
 },
 "numpy.distutils.__version__.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.__version__.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.__version__.major": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.distutils.__version__.micro": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.distutils.__version__.minor": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.distutils.__version__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.__version__.version": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.bench": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler": {
  "data": {
   "symbols_in_volume": {
    "distutils.ccompiler._default_compilers": {
     "line number": [
      507,
      520,
      521
     ]
    },
    "distutils.ccompiler.gen_lib_options": {
     "line number": [
      581
     ]
    },
    "distutils.ccompiler.gen_preprocess_options": {
     "line number": [
      595
     ]
    },
    "distutils.ccompiler.new_compiler": {
     "line number": [
      566
     ]
    },
    "distutils.ccompiler.split_quoted": {
     "line number": [
      655
     ]
    },
    "numpy.distutils.ccompiler.CCompiler_compile": {
     "line number": [
      210
     ]
    },
    "numpy.distutils.ccompiler.CCompiler_customize": {
     "line number": [
      368
     ]
    },
    "numpy.distutils.ccompiler.CCompiler_customize_cmd": {
     "line number": [
      253
     ]
    },
    "numpy.distutils.ccompiler.CCompiler_cxx_compiler": {
     "line number": [
      497
     ]
    },
    "numpy.distutils.ccompiler.CCompiler_get_version": {
     "line number": [
      470
     ]
    },
    "numpy.distutils.ccompiler.CCompiler_object_filenames": {
     "line number": [
      121
     ]
    },
    "numpy.distutils.ccompiler.CCompiler_show_customization": {
     "line number": [
      310
     ]
    },
    "numpy.distutils.ccompiler.CCompiler_spawn": {
     "line number": [
      74
     ]
    },
    "numpy.distutils.ccompiler._m": {
     "line number": [
      588,
      589
     ]
    },
    "numpy.distutils.ccompiler.gen_lib_options": {
     "line number": [
      581,
      589
     ]
    },
    "numpy.distutils.ccompiler.gen_preprocess_options": {
     "line number": [
      595
     ]
    },
    "numpy.distutils.ccompiler.new_compiler": {
     "line number": [
      566
     ]
    },
    "numpy.distutils.ccompiler.re": {
     "line number": [
      604,
      605,
      606,
      607
     ]
    },
    "numpy.distutils.ccompiler.replace_method": {
     "line number": [
      74,
      121,
      210,
      253,
      310,
      368,
      470,
      497
     ]
    },
    "numpy.distutils.ccompiler.split_quoted": {
     "line number": [
      655
     ]
    },
    "numpy.distutils.ccompiler.string": {
     "line number": [
      604
     ]
    },
    "numpy.distutils.ccompiler.sys": {
     "line number": [
      512,
      587
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      519
     ]
    },
    "numpy.distutils.misc_util.mingw32": {
     "line number": [
      516
     ]
    },
    "setattr": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.ccompiler.CCompiler_compile": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      174
     ]
    },
    "isinstance": {
     "line number": [
      171,
      194
     ]
    },
    "list": {
     "line number": [
      195
     ]
    },
    "numpy.distutils.ccompiler.sys": {
     "line number": [
      167
     ]
    },
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      171,
      194
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      182,
      190
     ]
    },
    "numpy.distutils.misc_util.cyg2win32": {
     "line number": [
      200,
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_customize": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      351
     ]
    },
    "ValueError": {
     "line number": [
      351
     ]
    },
    "distutils.sysconfig.customize_compiler": {
     "line number": [
      344
     ]
    },
    "hasattr": {
     "line number": [
      354,
      363
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      343
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      364,
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_customize_cmd": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "allow": {
     "line number": [
      236,
      238,
      241,
      244,
      246,
      248,
      250
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_customize_cmd.allow": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_cxx_compiler": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "copy.copy": {
     "line number": [
      487
     ]
    },
    "numpy.distutils.ccompiler.sys": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_get_version": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      442,
      448,
      451
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      466
     ]
    },
    "hasattr": {
     "line number": [
      437
     ]
    },
    "matcher": {
     "line number": [
      464
     ]
    },
    "numpy.distutils.exec_command.exec_command": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_get_version.matcher": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "numpy.distutils.ccompiler.re": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_object_filenames": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "UnknownFileError": {
     "line number": [
      114
     ]
    },
    "numpy.distutils.ccompiler.os": {
     "line number": [
      103,
      103,
      104,
      105,
      111,
      111,
      116,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_show_customization": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      296
     ]
    },
    "numpy.distutils.ccompiler._compiler_to_string": {
     "line number": [
      307
     ]
    },
    "numpy.distutils.log._global_log.threshold": {
     "line number": [
      304
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      299
     ]
    },
    "print": {
     "line number": [
      305,
      306,
      307,
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_spawn": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "UnicodeError": {
     "line number": [
      65
     ]
    },
    "distutils.errors.DistutilsExecError": {
     "line number": [
      72
     ]
    },
    "list": {
     "line number": [
      57,
      62
     ]
    },
    "numpy.distutils.ccompiler.re": {
     "line number": [
      68
     ]
    },
    "numpy.distutils.exec_command.exec_command": {
     "line number": [
      59
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      58
     ]
    },
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      56,
      61
     ]
    },
    "print": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.DistutilsExecError": {
  "data": {
   "shadows": "distutils.errors.DistutilsExecError"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.DistutilsModuleError": {
  "data": {
   "shadows": "distutils.errors.DistutilsModuleError"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.DistutilsPlatformError": {
  "data": {
   "shadows": "distutils.errors.DistutilsPlatformError"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler._compiler_to_string": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "format": {
     "line number": [
      270,
      272
     ]
    },
    "getattr": {
     "line number": [
      266
     ]
    },
    "hasattr": {
     "line number": [
      265
     ]
    },
    "len": {
     "line number": [
      267
     ]
    },
    "list": {
     "line number": [
      258
     ]
    },
    "max": {
     "line number": [
      267
     ]
    },
    "repr": {
     "line number": [
      268,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler._distutils_gen_lib_options": {
  "data": {
   "lineno": 568
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._distutils_gen_preprocess_options": {
  "data": {
   "lineno": 591
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._distutils_new_compiler": {
  "data": {
   "lineno": 524
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._dquote_re": {
  "data": {
   "lineno": 606
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._has_white_re": {
  "data": {
   "lineno": 607
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._m": {
  "data": {
   "lineno": 587
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._squote_re": {
  "data": {
   "lineno": 605
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._wordchars_re": {
  "data": {
   "lineno": 604
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.ccompiler": {
  "data": {
   "shadows": "distutils.ccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.customize_compiler": {
  "data": {
   "shadows": "distutils.sysconfig.customize_compiler"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.cyg2win32": {
  "data": {
   "shadows": "numpy.distutils.misc_util.cyg2win32"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.gen_lib_options": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": {
    "list": {
     "line number": [
      577
     ]
    },
    "numpy.distutils.ccompiler._distutils_gen_lib_options": {
     "line number": [
      572
     ]
    },
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      576
     ]
    },
    "numpy.distutils.misc_util.quote_args": {
     "line number": [
      570,
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.gen_preprocess_options": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "numpy.distutils.ccompiler._distutils_gen_preprocess_options": {
     "line number": [
      594
     ]
    },
    "numpy.distutils.misc_util.quote_args": {
     "line number": [
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.mingw32": {
  "data": {
   "shadows": "numpy.distutils.misc_util.mingw32"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.new_compiler": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      545,
      552
     ]
    },
    "KeyError": {
     "line number": [
      537,
      559
     ]
    },
    "__import__": {
     "line number": [
      544,
      551
     ]
    },
    "distutils.errors.DistutilsModuleError": {
     "line number": [
      554,
      560
     ]
    },
    "distutils.errors.DistutilsPlatformError": {
     "line number": [
      541
     ]
    },
    "get_default_compiler": {
     "line number": [
      535
     ]
    },
    "klass": {
     "line number": [
      562,
      563
     ]
    },
    "numpy.distutils.ccompiler.os": {
     "line number": [
      532
     ]
    },
    "numpy.distutils.ccompiler.sys": {
     "line number": [
      557
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      546,
      553
     ]
    },
    "numpy.distutils.log.debug": {
     "line number": [
      563
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      547
     ]
    },
    "str": {
     "line number": [
      546,
      548,
      553
     ]
    },
    "vars": {
     "line number": [
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.quote_args": {
  "data": {
   "shadows": "numpy.distutils.misc_util.quote_args"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.replace_method": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "func": {
     "line number": [
      28
     ]
    },
    "numpy.distutils.ccompiler.sys": {
     "line number": [
      24
     ]
    },
    "numpy.distutils.ccompiler.types": {
     "line number": [
      25
     ]
    },
    "setattr": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.simple_version_match": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.simple_version_match.matcher": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "numpy.distutils.ccompiler.re": {
     "line number": [
      402,
      407,
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.split_quoted": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      636
     ]
    },
    "ValueError": {
     "line number": [
      639
     ]
    },
    "len": {
     "line number": [
      616,
      650
     ]
    },
    "numpy.distutils.ccompiler._dquote_re": {
     "line number": [
      634
     ]
    },
    "numpy.distutils.ccompiler._has_white_re": {
     "line number": [
      642
     ]
    },
    "numpy.distutils.ccompiler._squote_re": {
     "line number": [
      632
     ]
    },
    "numpy.distutils.ccompiler._wordchars_re": {
     "line number": [
      614
     ]
    },
    "numpy.distutils.ccompiler.string": {
     "line number": [
      620
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.distutils.command": {
  "data": {
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      27
     ]
    },
    "globals": {
     "line number": [
      27
     ]
    },
    "locals": {
     "line number": [
      27
     ]
    },
    "numpy.distutils.command.distutils_all": {
     "line number": [
      27,
      43
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.command.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.distutils.command.__revision__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.command.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.autodist": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.autodist.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.autodist.check_compiler_gcc4": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_inline": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "numpy.distutils.command.autodist.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.autodist.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm": {
  "data": {
   "symbols_in_volume": {
    "numpy.distutils.command.bdist_rpm.sys": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.command.bdist_rpm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.bdist_rpm": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "distutils.command.bdist_rpm.bdist_rpm": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.bdist_rpm.bdist_rpm._make_spec_file": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "distutils.command.bdist_rpm.bdist_rpm._make_spec_file": {
     "line number": [
      13
     ]
    },
    "numpy.distutils.command.bdist_rpm.os": {
     "line number": [
      17
     ]
    },
    "numpy.distutils.command.bdist_rpm.sys": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.bdist_rpm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.old_bdist_rpm": {
  "data": {
   "shadows": "distutils.command.bdist_rpm.bdist_rpm"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.build": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.build.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.build": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "distutils.command.build.build": {
     "line number": [
      9
     ]
    },
    "distutils.command.build.build.has_ext_modules": {
     "line number": [
      13
     ]
    },
    "distutils.command.build.build.help_options": {
     "line number": [
      21
     ]
    },
    "distutils.command.build.build.sub_commands": {
     "line number": [
      14
     ]
    },
    "distutils.command.build.build.user_options": {
     "line number": [
      16
     ]
    },
    "numpy.distutils.command.config_compiler.show_fortran_compilers": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.build.build.finalize_options": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "distutils.command.build.build.finalize_options": {
     "line number": [
      32
     ]
    },
    "distutils.util.get_platform": {
     "line number": [
      33
     ]
    },
    "numpy.distutils.command.build.os": {
     "line number": [
      35
     ]
    },
    "numpy.distutils.command.build.sys": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build.build.initialize_options": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "distutils.command.build.build.initialize_options": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build.build.run": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "distutils.command.build.build.run": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.get_platform": {
  "data": {
   "shadows": "distutils.util.get_platform"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.old_build": {
  "data": {
   "shadows": "distutils.command.build.build"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.show_fortran_compilers": {
  "data": {
   "shadows": "numpy.distutils.command.config_compiler.show_fortran_compilers"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib": {
  "data": {
   "symbols_in_volume": {
    "distutils.command.build_clib.build_clib.user_options": {
     "line number": [
      19
     ]
    },
    "len": {
     "line number": [
      20
     ]
    },
    "numpy.distutils.command.build_clib._l": {
     "line number": [
      20,
      21,
      22,
      22,
      22
     ]
    },
    "range": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.command.build_clib.DistutilsError": {
  "data": {
   "shadows": "distutils.errors.DistutilsError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.DistutilsFileError": {
  "data": {
   "shadows": "distutils.errors.DistutilsFileError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.DistutilsSetupError": {
  "data": {
   "shadows": "distutils.errors.DistutilsSetupError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib._l": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_clib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.all_strings": {
  "data": {
   "shadows": "numpy.distutils.misc_util.all_strings"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.build_clib": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "distutils.command.build_clib.build_clib": {
     "line number": [
      25
     ]
    },
    "distutils.command.build_clib.build_clib.boolean_options": {
     "line number": [
      35
     ]
    },
    "distutils.command.build_clib.build_clib.user_options": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.build_clib.build_clib.build_a_library": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "distutils.dep_util.newer_group": {
     "line number": [
      152
     ]
    },
    "distutils.errors.DistutilsError": {
     "line number": [
      178
     ]
    },
    "distutils.errors.DistutilsFileError": {
     "line number": [
      255
     ]
    },
    "distutils.errors.DistutilsSetupError": {
     "line number": [
      131
     ]
    },
    "glob.glob": {
     "line number": [
      230,
      245
     ]
    },
    "list": {
     "line number": [
      134
     ]
    },
    "numpy.distutils.command.build_clib.os": {
     "line number": [
      194,
      248,
      249,
      249,
      251,
      252
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      164
     ]
    },
    "numpy.distutils.log.debug": {
     "line number": [
      153
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      156,
      160,
      205,
      214,
      235,
      260
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      256
     ]
    },
    "numpy.distutils.misc_util.filter_sources": {
     "line number": [
      137
     ]
    },
    "numpy.distutils.misc_util.get_numpy_include_dirs": {
     "line number": [
      191
     ]
    },
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.build_libraries": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.get_source_files": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.get_lib_source_files": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.have_cxx_sources": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.has_cxx_sources": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.have_f_sources": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.has_f_sources": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.initialize_options": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "distutils.command.build_clib.build_clib.initialize_options": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.run": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "distutils.ccompiler.new_compiler": {
     "line number": [
      70
     ]
    },
    "numpy.distutils.command.build_clib.os": {
     "line number": [
      108,
      109
     ]
    },
    "numpy.distutils.command.build_clib.shutil": {
     "line number": [
      111
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.filter_sources": {
  "data": {
   "shadows": "numpy.distutils.misc_util.filter_sources"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.get_lib_source_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_lib_source_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.get_numpy_include_dirs": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_numpy_include_dirs"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.has_cxx_sources": {
  "data": {
   "shadows": "numpy.distutils.misc_util.has_cxx_sources"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.has_f_sources": {
  "data": {
   "shadows": "numpy.distutils.misc_util.has_f_sources"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.new_compiler": {
  "data": {
   "shadows": "distutils.ccompiler.new_compiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.newer_group": {
  "data": {
   "shadows": "distutils.dep_util.newer_group"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.old_build_clib": {
  "data": {
   "shadows": "distutils.command.build_clib.build_clib"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.build_py.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py.build_py": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "distutils.command.build_py.build_py": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.build_py.build_py.find_modules": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "distutils.command.build_py.build_py.find_modules": {
     "line number": [
      27
     ]
    },
    "numpy.distutils.misc_util.is_string": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_py.build_py.find_package_modules": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "distutils.command.build_py.build_py.find_package_modules": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_py.build_py.run": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "distutils.command.build_py.build_py.run": {
     "line number": [
      12
     ]
    },
    "list": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_py.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py.old_build_py": {
  "data": {
   "shadows": "distutils.command.build_py.build_py"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.build_scripts.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.build_scripts": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "distutils.command.build_scripts.build_scripts": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.build_scripts.build_scripts.generate_scripts": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "func": {
     "line number": [
      26
     ]
    },
    "list": {
     "line number": [
      34
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      30,
      33
     ]
    },
    "numpy.distutils.misc_util.is_string": {
     "line number": [
      16,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.build_scripts.get_source_files": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.get_script_files": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.build_scripts.run": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "distutils.command.build_scripts.build_scripts.run": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.get_script_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_script_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.old_build_scripts": {
  "data": {
   "shadows": "distutils.command.build_scripts.build_scripts"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src": {
  "data": {
   "symbols_in_volume": {
    "numpy.distutils.command.build_src.re": {
     "line number": [
      748,
      748,
      749,
      749,
      752,
      753,
      754,
      754,
      755,
      755,
      788,
      789,
      790,
      791
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.command.build_src.DistutilsError": {
  "data": {
   "shadows": "distutils.errors.DistutilsError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.DistutilsSetupError": {
  "data": {
   "shadows": "distutils.errors.DistutilsSetupError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.Pyrex.Compiler.Main": {
  "data": {
   "shadows": "Pyrex.Compiler.Main"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src._f2py_module_name_match": {
  "data": {
   "lineno": 788
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._f2py_user_module_name_match": {
  "data": {
   "lineno": 790
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._f_pyf_ext_match": {
  "data": {
   "lineno": 748
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._find_swig_target": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": {
    "numpy.distutils.command.build_src.os": {
     "line number": [
      781,
      782
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src._has_c_header": {
  "data": {
   "lineno": 754
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._has_cpp_header": {
  "data": {
   "lineno": 755
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._header_ext_match": {
  "data": {
   "lineno": 749
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._swig_module_name_match": {
  "data": {
   "lineno": 752
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.appendpath": {
  "data": {
   "shadows": "numpy.distutils.misc_util.appendpath"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.build_ext": {
  "data": {
   "shadows": "distutils.command.build_ext"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.build_src": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "distutils.command.build_ext.build_ext": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.build_src.build_src._build_npy_pkg_config": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "numpy.distutils.command.build_src.os": {
     "line number": [
      214,
      219,
      221,
      223,
      223,
      224,
      225,
      226,
      231
     ]
    },
    "numpy.distutils.command.build_src.subst_vars": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_data_files_sources": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      203,
      207
     ]
    },
    "f": {
     "line number": [
      194,
      196
     ]
    },
    "hasattr": {
     "line number": [
      190,
      191
     ]
    },
    "isinstance": {
     "line number": [
      182,
      184,
      198,
      200
     ]
    },
    "list": {
     "line number": [
      198
     ]
    },
    "numpy.distutils.command.build_src.os": {
     "line number": [
      187,
      189
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      178
     ]
    },
    "numpy.distutils.misc_util.get_data_files": {
     "line number": [
      204
     ]
    },
    "repr": {
     "line number": [
      203,
      207
     ]
    },
    "str": {
     "line number": [
      182,
      200
     ]
    },
    "tuple": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_extension_sources": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "f": {
     "line number": [
      344,
      345,
      346
     ]
    },
    "list": {
     "line number": [
      317
     ]
    },
    "numpy.distutils.command.build_src.os": {
     "line number": [
      345,
      345
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      319,
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_library_sources": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "list": {
     "line number": [
      292
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      297,
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_npy_pkg_config": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      251
     ]
    },
    "numpy.distutils.command.build_src.copy": {
     "line number": [
      243
     ]
    },
    "numpy.distutils.command.build_src.os": {
     "line number": [
      258,
      258
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      235
     ]
    },
    "numpy.distutils.misc_util.get_cmd": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_py_modules_sources": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      278
     ]
    },
    "len": {
     "line number": [
      271
     ]
    },
    "numpy.distutils.command.build_src.os": {
     "line number": [
      276,
      277,
      279
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      268
     ]
    },
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      271
     ]
    },
    "source": {
     "line number": [
      280,
      281,
      283,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_sources": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.f2py_sources": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "distutils.dep_util.newer": {
     "line number": [
      616,
      616
     ]
    },
    "distutils.dep_util.newer_group": {
     "line number": [
      569,
      587
     ]
    },
    "distutils.errors.DistutilsError": {
     "line number": [
      600
     ]
    },
    "distutils.errors.DistutilsSetupError": {
     "line number": [
      515,
      533,
      562,
      622,
      624
     ]
    },
    "len": {
     "line number": [
      561
     ]
    },
    "numpy.distutils.command.build_src.get_f2py_modulename": {
     "line number": [
      513
     ]
    },
    "numpy.distutils.command.build_src.os": {
     "line number": [
      506,
      509,
      511,
      512,
      518,
      524,
      525,
      530,
      531,
      532,
      567,
      582,
      584,
      599,
      602,
      603,
      613,
      614,
      615,
      617,
      621,
      623,
      627,
      628
     ]
    },
    "numpy.distutils.log.debug": {
     "line number": [
      520,
      576,
      596
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      534,
      558,
      571,
      589,
      604,
      607,
      629
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      526
     ]
    },
    "numpy.distutils.misc_util.appendpath": {
     "line number": [
      511
     ]
    },
    "numpy.distutils.misc_util.fortran_ext_match": {
     "line number": [
      540
     ]
    },
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      579
     ]
    },
    "source": {
     "line number": [
      505,
      506,
      512,
      513,
      517,
      521,
      537,
      538,
      541,
      543,
      565,
      566,
      568,
      571,
      574,
      576
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.filter_files": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "numpy.distutils.command.build_src.os": {
     "line number": [
      408
     ]
    },
    "source": {
     "line number": [
      407,
      408,
      410,
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.filter_h_files": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.filter_py_files": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.finalize_options": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "distutils.command.build_ext": {
     "line number": [
      134,
      141
     ]
    },
    "distutils.command.build_ext.inplace": {
     "line number": [
      136
     ]
    },
    "distutils.command.build_ext.swig_cpp": {
     "line number": [
      138
     ]
    },
    "distutils.util.get_platform": {
     "line number": [
      104
     ]
    },
    "getattr": {
     "line number": [
      141,
      143
     ]
    },
    "numpy.distutils.command.build_src.os": {
     "line number": [
      105
     ]
    },
    "numpy.distutils.command.build_src.shlex": {
     "line number": [
      119,
      131
     ]
    },
    "numpy.distutils.command.build_src.sys": {
     "line number": [
      104
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      146
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      112,
      123,
      144
     ]
    },
    "setattr": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.generate_a_pyrex_source": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "distutils.dep_util.newer_group": {
     "line number": [
      473
     ]
    },
    "distutils.errors.DistutilsError": {
     "line number": [
      485,
      492
     ]
    },
    "numpy.distutils.command.build_src.have_pyrex": {
     "line number": [
      467,
      474
     ]
    },
    "numpy.distutils.command.build_src.os": {
     "line number": [
      468,
      470,
      471,
      487
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      476
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      488
     ]
    },
    "numpy.distutils.misc_util.appendpath": {
     "line number": [
      470
     ]
    },
    "source": {
     "line number": [
      472,
      482,
      486,
      490,
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.generate_sources": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "func": {
     "line number": [
      386
     ]
    },
    "numpy.distutils.command.build_src.os": {
     "line number": [
      382
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      390,
      393
     ]
    },
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      369,
      372,
      389
     ]
    },
    "numpy.distutils.misc_util.is_string": {
     "line number": [
      363
     ]
    },
    "source": {
     "line number": [
      362,
      363,
      364,
      366,
      386,
      387,
      389,
      390,
      391,
      393,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.initialize_options": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.pyrex_sources": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "numpy.distutils.command.build_src.os": {
     "line number": [
      456
     ]
    },
    "source": {
     "line number": [
      455,
      456,
      459,
      463
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.run": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "numpy.distutils.log.info": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.swig_sources": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": {
    "distutils.dep_util.newer_group": {
     "line number": [
      737
     ]
    },
    "distutils.errors.DistutilsSetupError": {
     "line number": [
      671,
      708
     ]
    },
    "numpy.distutils.command.build_src._find_swig_target": {
     "line number": [
      699,
      706
     ]
    },
    "numpy.distutils.command.build_src.get_swig_modulename": {
     "line number": [
      669
     ]
    },
    "numpy.distutils.command.build_src.get_swig_target": {
     "line number": [
      675,
      678
     ]
    },
    "numpy.distutils.command.build_src.os": {
     "line number": [
      658,
      663,
      666,
      668,
      692,
      700,
      705,
      707,
      713,
      738
     ]
    },
    "numpy.distutils.log.debug": {
     "line number": [
      743
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      738
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      680,
      683,
      686,
      689,
      695,
      701,
      709
     ]
    },
    "numpy.distutils.misc_util.appendpath": {
     "line number": [
      666
     ]
    },
    "source": {
     "line number": [
      657,
      658,
      668,
      669,
      673,
      675,
      678,
      681,
      684,
      689,
      696,
      714,
      715,
      717,
      734,
      735,
      736,
      739,
      741,
      744
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.template_sources": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "distutils.dep_util.newer_group": {
     "line number": [
      432
     ]
    },
    "numpy.distutils.command.build_src._f_pyf_ext_match": {
     "line number": [
      433
     ]
    },
    "numpy.distutils.command.build_src._header_ext_match": {
     "line number": [
      442
     ]
    },
    "numpy.distutils.command.build_src.os": {
     "line number": [
      424,
      427,
      429,
      431,
      431,
      443
     ]
    },
    "numpy.distutils.conv_template.process_file": {
     "line number": [
      438
     ]
    },
    "numpy.distutils.from_template.process_file": {
     "line number": [
      435
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      434,
      437,
      445
     ]
    },
    "numpy.distutils.misc_util.appendpath": {
     "line number": [
      429
     ]
    },
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      417
     ]
    },
    "open": {
     "line number": [
      439
     ]
    },
    "source": {
     "line number": [
      423,
      424,
      432,
      435,
      438,
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.fortran_ext_match": {
  "data": {
   "shadows": "numpy.distutils.misc_util.fortran_ext_match"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.get_cmd": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_cmd"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.get_data_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_data_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.get_f2py_modulename": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": {
    "f": {
     "line number": [
      795,
      796
     ]
    },
    "f.close": {
     "line number": [
      803
     ]
    },
    "numpy.distutils.command.build_src._f2py_module_name_match": {
     "line number": [
      797
     ]
    },
    "numpy.distutils.command.build_src._f2py_user_module_name_match": {
     "line number": [
      799
     ]
    },
    "open": {
     "line number": [
      795
     ]
    },
    "source": {
     "line number": [
      795
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.get_platform": {
  "data": {
   "shadows": "distutils.util.get_platform"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.get_swig_modulename": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": {
    "f": {
     "line number": [
      769,
      771
     ]
    },
    "f.close": {
     "line number": [
      776
     ]
    },
    "numpy.distutils.command.build_src._swig_module_name_match": {
     "line number": [
      772
     ]
    },
    "open": {
     "line number": [
      769
     ]
    },
    "source": {
     "line number": [
      769
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.get_swig_target": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "f": {
     "line number": [
      758
     ]
    },
    "f.close": {
     "line number": [
      765
     ]
    },
    "f.readline": {
     "line number": [
      760
     ]
    },
    "numpy.distutils.command.build_src._has_c_header": {
     "line number": [
      763
     ]
    },
    "numpy.distutils.command.build_src._has_cpp_header": {
     "line number": [
      761
     ]
    },
    "open": {
     "line number": [
      758
     ]
    },
    "source": {
     "line number": [
      758
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.have_pyrex": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.newer_group": {
  "data": {
   "shadows": "distutils.dep_util.newer_group"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.numpy.f2py": {
  "data": {
   "shadows": "numpy.f2py"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.process_c_file": {
  "data": {
   "shadows": "numpy.distutils.conv_template.process_file"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.process_f_file": {
  "data": {
   "shadows": "numpy.distutils.from_template.process_file"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.subst_vars": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.distutils.command.build_src.re": {
     "line number": [
      35
     ]
    },
    "open": {
     "line number": [
      36,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.config": {
  "data": {
   "symbols_in_volume": {
    "distutils.command.config.LANG_EXT": {
     "line number": [
      22,
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.command.config.CompileError": {
  "data": {
   "shadows": "distutils.ccompiler.CompileError"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.DistutilsExecError": {
  "data": {
   "shadows": "distutils.errors.DistutilsExecError"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.GrabStdout": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "object": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.config.GrabStdout.__init__": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "numpy.distutils.command.config.sys": {
     "line number": [
      450,
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.GrabStdout.flush": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "numpy.distutils.command.config.GrabStdout.restore": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "numpy.distutils.command.config.sys": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.GrabStdout.write": {
  "data": {
   "lineno": 454
  },
  "type": "function"
 },
 "numpy.distutils.command.config.LANG_EXT": {
  "data": {
   "shadows": "distutils.command.config.LANG_EXT"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.LinkError": {
  "data": {
   "shadows": "distutils.ccompiler.LinkError"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.check_compiler_gcc4": {
  "data": {
   "shadows": "numpy.distutils.command.autodist.check_compiler_gcc4"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.check_inline": {
  "data": {
   "shadows": "numpy.distutils.command.autodist.check_inline"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.config": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "distutils.command.config.config": {
     "line number": [
      25
     ]
    },
    "distutils.command.config.config.user_options": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.config.config._check_compiler": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      58
     ]
    },
    "distutils.command.config.config._check_compiler": {
     "line number": [
      46
     ]
    },
    "isinstance": {
     "line number": [
      73
     ]
    },
    "numpy.distutils.command.config.distutils": {
     "line number": [
      71
     ]
    },
    "numpy.distutils.command.config.sys": {
     "line number": [
      49
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      59
     ]
    },
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      73
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      74
     ]
    },
    "print": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config._compile": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "distutils.command.config.config._compile": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config._link": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "distutils.command.config.config._link": {
     "line number": [
      148
     ]
    },
    "distutils.file_util.copy_file": {
     "line number": [
      139
     ]
    },
    "distutils.log.warn": {
     "line number": [
      144
     ]
    },
    "numpy.distutils.command.config.os": {
     "line number": [
      126,
      127,
      134,
      135,
      138
     ]
    },
    "numpy.distutils.exec_command.exec_command": {
     "line number": [
      115
     ]
    },
    "numpy.distutils.mingw32ccompiler.generate_manifest": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config._wrap_method": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "distutils.ccompiler.CompileError": {
     "line number": [
      91,
      94
     ]
    },
    "distutils.errors.DistutilsExecError": {
     "line number": [
      91
     ]
    },
    "mth": {
     "line number": [
      90
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      92
     ]
    },
    "str": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_compiler_gcc4": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "numpy.distutils.command.autodist.check_compiler_gcc4": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_decl": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_func": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_funcs_once": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_header": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_inline": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "numpy.distutils.command.autodist.check_inline": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_macro_true": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_type": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.distutils.command.config.distutils": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_type_size": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "distutils.ccompiler.CompileError": {
     "line number": [
      256,
      283,
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.get_output": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      414
     ]
    },
    "KeyboardInterrupt": {
     "line number": [
      438
     ]
    },
    "distutils.ccompiler.CompileError": {
     "line number": [
      442
     ]
    },
    "distutils.ccompiler.LinkError": {
     "line number": [
      442
     ]
    },
    "distutils.log.error": {
     "line number": [
      435
     ]
    },
    "distutils.log.info": {
     "line number": [
      441,
      443
     ]
    },
    "hasattr": {
     "line number": [
      431
     ]
    },
    "numpy.distutils.command.config.GrabStdout": {
     "line number": [
      419
     ]
    },
    "numpy.distutils.command.config.os": {
     "line number": [
      428,
      431,
      432,
      433,
      434
     ]
    },
    "numpy.distutils.command.config.signal": {
     "line number": [
      436
     ]
    },
    "numpy.distutils.command.config.warnings": {
     "line number": [
      409
     ]
    },
    "numpy.distutils.exec_command.exec_command": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.initialize_options": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "distutils.command.config.config.initialize_options": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.try_run": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      41
     ]
    },
    "distutils.command.config.config.try_run": {
     "line number": [
      42
     ]
    },
    "numpy.distutils.command.config.warnings": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config.copy_file": {
  "data": {
   "shadows": "distutils.file_util.copy_file"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.distutils": {
  "data": {
   "shadows": "distutils"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.generate_manifest": {
  "data": {
   "shadows": "numpy.distutils.mingw32ccompiler.generate_manifest"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.old_config": {
  "data": {
   "shadows": "distutils.command.config.config"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.config_compiler.Command": {
  "data": {
   "shadows": "distutils.core.Command"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.config_cc": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "distutils.core.Command": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.config_compiler.config_cc.finalize_options": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      109,
      120
     ]
    },
    "isinstance": {
     "line number": [
      111
     ]
    },
    "len": {
     "line number": [
      115
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      100
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      116
     ]
    },
    "setattr": {
     "line number": [
      120
     ]
    },
    "str": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_cc.initialize_options": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_cc.run": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "distutils.core.Command": {
     "line number": [
      17
     ]
    },
    "numpy.distutils.command.config_compiler.show_fortran_compilers": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.config_compiler.config_fc.finalize_options": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      68,
      79
     ]
    },
    "isinstance": {
     "line number": [
      70
     ]
    },
    "len": {
     "line number": [
      74
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      59
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      75
     ]
    },
    "setattr": {
     "line number": [
      79
     ]
    },
    "str": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc.initialize_options": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc.run": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.distutils.core": {
  "data": {
   "shadows": "distutils.core"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.show_fcompilers": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.show_fcompilers"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.show_fortran_compilers": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.show_fcompilers": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.develop": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.develop.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.develop.develop": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "__doc__": {
     "line number": [
      11
     ]
    },
    "setuptools.command.develop.develop": {
     "line number": [
      10
     ]
    },
    "setuptools.command.develop.develop.__doc__": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.develop.develop.install_for_development": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "setuptools.command.develop.develop.install_for_development": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.develop.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.develop.old_develop": {
  "data": {
   "shadows": "setuptools.command.develop.develop"
  },
  "type": "import"
 },
 "numpy.distutils.command.develop.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.distutils_all": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.distutils.command.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.egg_info._egg_info": {
  "data": {
   "shadows": "setuptools.command.egg_info.egg_info"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info.egg_info": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "setuptools.command.egg_info.egg_info": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.egg_info.egg_info.run": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "setuptools.command.egg_info.egg_info.run": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.egg_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.install": {
  "data": {
   "symbols_in_volume": {
    "distutils.command.install.install": {
     "line number": [
      10
     ]
    },
    "numpy.distutils.command.install.sys": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.command.install.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.have_setuptools": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.distutils.command.install.install": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.distutils.command.install.old_install": {
     "line number": [
      13,
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.install.install.finalize_options": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.distutils.command.install.old_install": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.install.install.run": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "distutils.file_util.write_file": {
     "line number": [
      75
     ]
    },
    "numpy.distutils.command.install.have_setuptools": {
     "line number": [
      56
     ]
    },
    "numpy.distutils.command.install.old_install": {
     "line number": [
      57
     ]
    },
    "open": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.install.install.setuptools_run": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "distutils.command.install._install.run": {
     "line number": [
      33,
      51
     ]
    },
    "numpy.distutils.command.install.sys": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.install.old_install": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.distutils.command.install.old_install_mod": {
  "data": {
   "shadows": "distutils.command.install"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.write_file": {
  "data": {
   "shadows": "distutils.file_util.write_file"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.install_clib.Command": {
  "data": {
   "shadows": "distutils.core.Command"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.get_cmd": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_cmd"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.install_clib": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "distutils.core.Command": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.install_clib.install_clib.finalize_options": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.get_outputs": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.initialize_options": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.run": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "distutils.ccompiler.new_compiler": {
     "line number": [
      26
     ]
    },
    "numpy.distutils.command.install_clib.os": {
     "line number": [
      32,
      34
     ]
    },
    "numpy.distutils.misc_util.get_cmd": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.new_compiler": {
  "data": {
   "shadows": "distutils.ccompiler.new_compiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data": {
  "data": {
   "symbols_in_volume": {
    "numpy.distutils.command.install_data.sys": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.command.install_data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data.have_setuptools": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.distutils.command.install_data.install_data": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "distutils.command.install_data.install_data": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.install_data.install_data.finalize_options": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "numpy.distutils.command.install_data.install_data.run": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "distutils.command.install_data.install_data.run": {
     "line number": [
      14
     ]
    },
    "numpy.distutils.command.install_data.have_setuptools": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.install_data.old_install_data": {
  "data": {
   "shadows": "distutils.command.install_data.install_data"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.install_headers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers.install_headers": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "distutils.command.install_headers.install_headers": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.install_headers.install_headers.run": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      15
     ]
    },
    "numpy.distutils.command.install_headers.os": {
     "line number": [
      13,
      19,
      21
     ]
    },
    "tuple": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.install_headers.old_install_headers": {
  "data": {
   "shadows": "distutils.command.install_headers.install_headers"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist": {
  "data": {
   "symbols_in_volume": {
    "numpy.distutils.command.sdist.sys": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.command.sdist.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.get_data_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_data_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.old_sdist": {
  "data": {
   "shadows": "distutils.command.sdist.sdist"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.sdist": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "distutils.command.sdist.sdist": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.command.sdist.sdist.add_defaults": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "distutils.command.sdist.sdist.add_defaults": {
     "line number": [
      14
     ]
    },
    "isinstance": {
     "line number": [
      25
     ]
    },
    "numpy.distutils.misc_util.get_data_files": {
     "line number": [
      20
     ]
    },
    "str": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.command.sdist.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.test_na_writable_attributes_deletion": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      13
     ]
    },
    "assert_raises": {
     "line number": [
      13
     ]
    },
    "delattr": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.compat": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.compat.get_exception": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.distutils.compat.sys": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template": {
  "data": {
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      322
     ]
    },
    "ValueError": {
     "line number": [
      334,
      336
     ]
    },
    "__name__": {
     "line number": [
      318
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      335
     ]
    },
    "numpy.distutils.conv_template.allstr": {
     "line number": [
      333
     ]
    },
    "numpy.distutils.conv_template.e": {
     "line number": [
      336
     ]
    },
    "numpy.distutils.conv_template.fid": {
     "line number": [
      331
     ]
    },
    "numpy.distutils.conv_template.file": {
     "line number": [
      326,
      327,
      336
     ]
    },
    "numpy.distutils.conv_template.newname": {
     "line number": [
      329
     ]
    },
    "numpy.distutils.conv_template.os": {
     "line number": [
      327
     ]
    },
    "numpy.distutils.conv_template.outfile": {
     "line number": [
      337
     ]
    },
    "numpy.distutils.conv_template.process_str": {
     "line number": [
      333
     ]
    },
    "numpy.distutils.conv_template.re": {
     "line number": [
      144,
      145,
      158,
      159,
      160,
      161,
      216,
      267,
      268
     ]
    },
    "numpy.distutils.conv_template.sys": {
     "line number": [
      321,
      323,
      324
     ]
    },
    "numpy.distutils.conv_template.writestr": {
     "line number": [
      337
     ]
    },
    "open": {
     "line number": [
      326,
      329
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.conv_template.__all__": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.allstr": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.e": {
  "data": {
   "lineno": 335
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.exclude_re": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.exclude_vars_re": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.fid": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.file": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.global_names": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.header": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.include_src_re": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.named_re": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.newname": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.outfile": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.paren_repl": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "int": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.parenrep": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.parse_loop_header": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      190,
      208
     ]
    },
    "dict": {
     "line number": [
      203
     ]
    },
    "len": {
     "line number": [
      185
     ]
    },
    "numpy.distutils.conv_template.exclude_re": {
     "line number": [
      197
     ]
    },
    "numpy.distutils.conv_template.exclude_vars_re": {
     "line number": [
      202
     ]
    },
    "numpy.distutils.conv_template.named_re": {
     "line number": [
      180
     ]
    },
    "numpy.distutils.conv_template.parse_values": {
     "line number": [
      184
     ]
    },
    "numpy.distutils.conv_template.stripast": {
     "line number": [
      177
     ]
    },
    "range": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_string": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      245,
      248
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      246
     ]
    },
    "numpy.distutils.conv_template.parse_loop_header": {
     "line number": [
      244
     ]
    },
    "numpy.distutils.conv_template.parse_structure": {
     "line number": [
      231
     ]
    },
    "numpy.distutils.conv_template.replace_re": {
     "line number": [
      242,
      254,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_string.replace": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      225
     ]
    },
    "ValueError": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_structure": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_values": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "numpy.distutils.conv_template.paren_repl": {
     "line number": [
      151,
      153
     ]
    },
    "numpy.distutils.conv_template.parenrep": {
     "line number": [
      151
     ]
    },
    "numpy.distutils.conv_template.plainrep": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.plainrep": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.process_file": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      295,
      297
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      296
     ]
    },
    "numpy.distutils.conv_template.os": {
     "line number": [
      292
     ]
    },
    "numpy.distutils.conv_template.process_str": {
     "line number": [
      294
     ]
    },
    "numpy.distutils.conv_template.resolve_includes": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.process_str": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "numpy.distutils.conv_template.global_names": {
     "line number": [
      263
     ]
    },
    "numpy.distutils.conv_template.header": {
     "line number": [
      262
     ]
    },
    "numpy.distutils.conv_template.parse_string": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.replace_re": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.resolve_includes": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "numpy.distutils.conv_template.include_src_re": {
     "line number": [
      275
     ]
    },
    "numpy.distutils.conv_template.os": {
     "line number": [
      271,
      278,
      279,
      280
     ]
    },
    "open": {
     "line number": [
      272
     ]
    },
    "print": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.stripast": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.unique_key": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "list": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.writestr": {
  "data": {
   "lineno": 333
  },
  "type": "constant"
 },
 "numpy.distutils.core": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      14
     ]
    },
    "numpy.distutils.command.bdist_rpm.bdist_rpm": {
     "line number": [
      46
     ]
    },
    "numpy.distutils.command.build.build": {
     "line number": [
      32
     ]
    },
    "numpy.distutils.command.build_clib.build_clib": {
     "line number": [
      40
     ]
    },
    "numpy.distutils.command.build_ext.build_ext": {
     "line number": [
      38
     ]
    },
    "numpy.distutils.command.build_py.build_py": {
     "line number": [
      39
     ]
    },
    "numpy.distutils.command.build_scripts.build_scripts": {
     "line number": [
      34
     ]
    },
    "numpy.distutils.command.build_src.build_src": {
     "line number": [
      33
     ]
    },
    "numpy.distutils.command.config.config": {
     "line number": [
      37
     ]
    },
    "numpy.distutils.command.config_compiler.config_cc": {
     "line number": [
      35
     ]
    },
    "numpy.distutils.command.config_compiler.config_fc": {
     "line number": [
      36
     ]
    },
    "numpy.distutils.command.develop.develop": {
     "line number": [
      53
     ]
    },
    "numpy.distutils.command.egg_info.egg_info": {
     "line number": [
      55
     ]
    },
    "numpy.distutils.command.install.install": {
     "line number": [
      45
     ]
    },
    "numpy.distutils.command.install_clib.install_clib": {
     "line number": [
      44
     ]
    },
    "numpy.distutils.command.install_data.install_data": {
     "line number": [
      42
     ]
    },
    "numpy.distutils.command.install_headers.install_headers": {
     "line number": [
      43
     ]
    },
    "numpy.distutils.command.sdist.sdist": {
     "line number": [
      41
     ]
    },
    "numpy.distutils.core.have_setuptools": {
     "line number": [
      48
     ]
    },
    "numpy.distutils.core.numpy_cmdclass": {
     "line number": [
      52,
      53,
      54,
      55
     ]
    },
    "numpy.distutils.core.sys": {
     "line number": [
      6
     ]
    },
    "setuptools.command.bdist_egg.bdist_egg": {
     "line number": [
      52
     ]
    },
    "setuptools.command.easy_install.easy_install": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.core.Extension": {
  "data": {
   "shadows": "numpy.distutils.extension.Extension"
  },
  "type": "import"
 },
 "numpy.distutils.core.NumpyDistribution": {
  "data": {
   "shadows": "numpy.distutils.numpy_distribution.NumpyDistribution"
  },
  "type": "import"
 },
 "numpy.distutils.core._check_append_ext_library": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "numpy.distutils.core.warnings": {
     "line number": [
      203,
      207
     ]
    },
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.core._check_append_library": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "numpy.distutils.core.warnings": {
     "line number": [
      178,
      183,
      189
     ]
    },
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      173,
      174,
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.core._command_line_ok": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.distutils.core.sys": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.core._dict_append": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      72
     ]
    },
    "dict": {
     "line number": [
      67
     ]
    },
    "isinstance": {
     "line number": [
      63,
      65,
      67
     ]
    },
    "list": {
     "line number": [
      65,
      66
     ]
    },
    "numpy.distutils.misc_util.is_string": {
     "line number": [
      69
     ]
    },
    "repr": {
     "line number": [
      72
     ]
    },
    "tuple": {
     "line number": [
      63,
      64
     ]
    },
    "type": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.core.bdist_egg": {
  "data": {
   "shadows": "setuptools.command.bdist_egg"
  },
  "type": "import"
 },
 "numpy.distutils.core.bdist_rpm": {
  "data": {
   "shadows": "numpy.distutils.command.bdist_rpm"
  },
  "type": "import"
 },
 "numpy.distutils.core.build": {
  "data": {
   "shadows": "numpy.distutils.command.build"
  },
  "type": "import"
 },
 "numpy.distutils.core.build_clib": {
  "data": {
   "shadows": "numpy.distutils.command.build_clib"
  },
  "type": "import"
 },
 "numpy.distutils.core.build_ext": {
  "data": {
   "shadows": "numpy.distutils.command.build_ext"
  },
  "type": "import"
 },
 "numpy.distutils.core.build_py": {
  "data": {
   "shadows": "numpy.distutils.command.build_py"
  },
  "type": "import"
 },
 "numpy.distutils.core.build_scripts": {
  "data": {
   "shadows": "numpy.distutils.command.build_scripts"
  },
  "type": "import"
 },
 "numpy.distutils.core.build_src": {
  "data": {
   "shadows": "numpy.distutils.command.build_src"
  },
  "type": "import"
 },
 "numpy.distutils.core.config": {
  "data": {
   "shadows": "numpy.distutils.command.config"
  },
  "type": "import"
 },
 "numpy.distutils.core.config_compiler": {
  "data": {
   "shadows": "numpy.distutils.command.config_compiler"
  },
  "type": "import"
 },
 "numpy.distutils.core.develop": {
  "data": {
   "shadows": "numpy.distutils.command.develop"
  },
  "type": "import"
 },
 "numpy.distutils.core.distutils.core": {
  "data": {
   "shadows": "distutils.core"
  },
  "type": "import"
 },
 "numpy.distutils.core.distutils.dist": {
  "data": {
   "shadows": "distutils.dist"
  },
  "type": "import"
 },
 "numpy.distutils.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.core.easy_install": {
  "data": {
   "shadows": "setuptools.command.easy_install"
  },
  "type": "import"
 },
 "numpy.distutils.core.egg_info": {
  "data": {
   "shadows": "numpy.distutils.command.egg_info"
  },
  "type": "import"
 },
 "numpy.distutils.core.get_data_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_data_files"
  },
  "type": "import"
 },
 "numpy.distutils.core.get_distribution": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "numpy.distutils.numpy_distribution.NumpyDistribution": {
     "line number": [
      104
     ]
    },
    "repr": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.core.have_setuptools": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.distutils.core.install": {
  "data": {
   "shadows": "numpy.distutils.command.install"
  },
  "type": "import"
 },
 "numpy.distutils.core.install_clib": {
  "data": {
   "shadows": "numpy.distutils.command.install_clib"
  },
  "type": "import"
 },
 "numpy.distutils.core.install_data": {
  "data": {
   "shadows": "numpy.distutils.command.install_data"
  },
  "type": "import"
 },
 "numpy.distutils.core.install_headers": {
  "data": {
   "shadows": "numpy.distutils.command.install_headers"
  },
  "type": "import"
 },
 "numpy.distutils.core.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.core.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.core.numpy_cmdclass": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.distutils.core.old_setup": {
  "data": {
   "shadows": "distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.core.sdist": {
  "data": {
   "shadows": "numpy.distutils.command.sdist"
  },
  "type": "import"
 },
 "numpy.distutils.core.setup": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      152
     ]
    },
    "configuration": {
     "line number": [
      135
     ]
    },
    "distutils.core.setup": {
     "line number": [
      126,
      169
     ]
    },
    "hasattr": {
     "line number": [
      136
     ]
    },
    "numpy.distutils.command.config": {
     "line number": [
      135,
      136,
      137,
      138
     ]
    },
    "numpy.distutils.command.config.todict": {
     "line number": [
      137
     ]
    },
    "numpy.distutils.core._check_append_ext_library": {
     "line number": [
      147
     ]
    },
    "numpy.distutils.core._check_append_library": {
     "line number": [
      159
     ]
    },
    "numpy.distutils.core._command_line_ok": {
     "line number": [
      130
     ]
    },
    "numpy.distutils.core._dict_append": {
     "line number": [
      138
     ]
    },
    "numpy.distutils.core.numpy_cmdclass": {
     "line number": [
      109
     ]
    },
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      145
     ]
    },
    "numpy.distutils.misc_util.is_string": {
     "line number": [
      149
     ]
    },
    "numpy.distutils.numpy_distribution.NumpyDistribution": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.core.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo": {
  "data": {
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.CPUInfoBase": {
     "line number": [
      674
     ]
    },
    "numpy.distutils.cpuinfo.DarwinCPUInfo": {
     "line number": [
      665
     ]
    },
    "numpy.distutils.cpuinfo.IRIXCPUInfo": {
     "line number": [
      663
     ]
    },
    "numpy.distutils.cpuinfo.LinuxCPUInfo": {
     "line number": [
      661,
      671
     ]
    },
    "numpy.distutils.cpuinfo.SunOSCPUInfo": {
     "line number": [
      667
     ]
    },
    "numpy.distutils.cpuinfo.Win32CPUInfo": {
     "line number": [
      669
     ]
    },
    "numpy.distutils.cpuinfo.cpuinfo": {
     "line number": [
      676
     ]
    },
    "numpy.distutils.cpuinfo.sys": {
     "line number": [
      22,
      660,
      662,
      664,
      666,
      668,
      670
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "object": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase.__get_nbits": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.platform": {
     "line number": [
      95
     ]
    },
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase.__getattr__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      89
     ]
    },
    "func": {
     "line number": [
      86
     ]
    },
    "getattr": {
     "line number": [
      84
     ]
    },
    "hasattr": {
     "line number": [
      83
     ]
    },
    "isinstance": {
     "line number": [
      85
     ]
    },
    "numpy.distutils.cpuinfo.types": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._getNCPUs": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._is_32bit": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._is_64bit": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._try_call": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "func": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.CPUInfoBase": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo.__init__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.command_info": {
     "line number": [
      365
     ]
    },
    "numpy.distutils.cpuinfo.key_value_from_command": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo.__machine": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._getNCPUs": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "int": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_Power_Macintosh": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_i386": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc403": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc505": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc601": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc602": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc603": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc603e": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc604": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc604e": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc620": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc630": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc740": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc7400": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc7450": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc750": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc801": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc821": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc823": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc860": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._not_impl": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.CPUInfoBase": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.__cputype": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.key_value_from_command": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.__machine": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._getNCPUs": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "int": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP19": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP20": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP21": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP22": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP22_4k": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP22_5k": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP24": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP25": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP26": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP27": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP28": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP30": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP32": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP32_10k": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP32_5k": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r10000": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r12000": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r2000": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r3000": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r3900": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4000": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4100": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4300": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4400": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4600": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4650": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r5000": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r6000": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r8000": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_rorion": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_singleCPU": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._not_impl": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.get_ip": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.CPUInfoBase": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      118
     ]
    },
    "UserWarning": {
     "line number": [
      120
     ]
    },
    "len": {
     "line number": [
      124
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      119
     ]
    },
    "numpy.distutils.cpuinfo.getoutput": {
     "line number": [
      113
     ]
    },
    "numpy.distutils.cpuinfo.warnings": {
     "line number": [
      120
     ]
    },
    "open": {
     "line number": [
      117
     ]
    },
    "str": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._getNCPUs": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "len": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_3dnow": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_3dnowext": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_f00f_bug": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_fdiv_bug": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_mmx": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_sse": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_sse2": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_sse3": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_ssse3": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AMD": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AMD64": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Alpha": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Athlon64": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonHX": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK6": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK6_2": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK6_3": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK7": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonMP": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Celeron": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Core2": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_EV4": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_EV5": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_EV56": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Hammer": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Intel": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Itanium": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Nocona": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Opteron": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PCA56": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Pentium": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumII": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumIII": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumIV": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumM": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumMMX": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumPro": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Prescott": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_XEON": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      261,
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_i486": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_i586": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_i686": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_singleCPU": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "len": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._not_impl": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.CPUInfoBase": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo.__init__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.command_by_line": {
     "line number": [
      419
     ]
    },
    "numpy.distutils.cpuinfo.command_info": {
     "line number": [
      412
     ]
    },
    "numpy.distutils.cpuinfo.key_value_from_command": {
     "line number": [
      418
     ]
    },
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._getNCPUs": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "int": {
     "line number": [
      436
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_SUNW": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_cpusparcv7": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_cpusparcv8": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_cpusparcv9": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_i386": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sparc": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sparcstation5": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sparcv9": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sun4": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sunfire": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra1": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra2": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra250": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra30": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra4": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra5": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra5_10": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra60": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra80": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultraenterprice": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultraenterprice10k": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      466
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._not_impl": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.CPUInfoBase": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "_winreg.EnumKey": {
     "line number": [
      504
     ]
    },
    "_winreg.EnumValue": {
     "line number": [
      514
     ]
    },
    "_winreg.HKEY_LOCAL_MACHINE": {
     "line number": [
      500
     ]
    },
    "_winreg.OpenKey": {
     "line number": [
      500,
      510
     ]
    },
    "_winreg.error": {
     "line number": [
      505,
      515
     ]
    },
    "int": {
     "line number": [
      523,
      524,
      525
     ]
    },
    "numpy.distutils.cpuinfo.re": {
     "line number": [
      498,
      499
     ]
    },
    "numpy.distutils.cpuinfo.sys": {
     "line number": [
      493,
      527
     ]
    },
    "print": {
     "line number": [
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._getNCPUs": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": {
    "len": {
     "line number": [
      622
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_3dnow": {
  "data": {
   "lineno": 654
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_3dnowext": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_mmx": {
  "data": {
   "lineno": 624
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_sse": {
  "data": {
   "lineno": 633
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_sse2": {
  "data": {
   "lineno": 645
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMD": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMD64": {
  "data": {
   "lineno": 566
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK5": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK6": {
  "data": {
   "lineno": 547
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK6_2": {
  "data": {
   "lineno": 551
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK6_3": {
  "data": {
   "lineno": 555
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK7": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Am486": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Am5x86": {
  "data": {
   "lineno": 540
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Core2": {
  "data": {
   "lineno": 612
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Intel": {
  "data": {
   "lineno": 571
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Pentium": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumII": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumIII": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumIV": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumM": {
  "data": {
   "lineno": 608
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumMMX": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumPro": {
  "data": {
   "lineno": 593
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i386": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i486": {
  "data": {
   "lineno": 577
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i586": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i686": {
  "data": {
   "lineno": 583
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_singleCPU": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": {
    "len": {
     "line number": [
      619
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._not_impl": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.distutils.cpuinfo.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.command_by_line": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.getoutput": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.command_info": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.getoutput": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.cpu": {
  "data": {
   "lineno": 676
  },
  "type": "constant"
 },
 "numpy.distutils.cpuinfo.cpuinfo": {
  "data": {
   "lineno": 674
  },
  "type": "constant"
 },
 "numpy.distutils.cpuinfo.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.getoutput": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      35
     ]
    },
    "UserWarning": {
     "line number": [
      37
     ]
    },
    "commands.getstatusoutput": {
     "line number": [
      34
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      36
     ]
    },
    "numpy.distutils.cpuinfo.os": {
     "line number": [
      39,
      39
     ]
    },
    "numpy.distutils.cpuinfo.warnings": {
     "line number": [
      37
     ]
    },
    "str": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.getstatusoutput": {
  "data": {
   "shadows": "commands.getstatusoutput"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.key_value_from_command": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "len": {
     "line number": [
      66
     ]
    },
    "numpy.distutils.cpuinfo.command_by_line": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.winreg": {
  "data": {
   "shadows": "_winreg"
  },
  "type": "import"
 },
 "numpy.distutils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.environment": {
  "data": {
   "symbols_in_volume": {
    "type": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.environment.Distribution": {
  "data": {
   "shadows": "distutils.dist.Distribution"
  },
  "type": "import"
 },
 "numpy.distutils.environment.EnvironmentConfig": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "object": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.environment.EnvironmentConfig.__getattr__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      38
     ]
    },
    "KeyError": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig._get_var": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "convert": {
     "line number": [
      52,
      58,
      59
     ]
    },
    "numpy.distutils.environment.os": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.clone": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.dump_variable": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "convert": {
     "line number": [
      22,
      25,
      28
     ]
    },
    "numpy.distutils.environment.os": {
     "line number": [
      24
     ]
    },
    "print": {
     "line number": [
      20,
      22,
      25,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.dump_variables": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.get": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.use_distribution": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "distutils.dist.Distribution": {
     "line number": [
      69
     ]
    },
    "isinstance": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.environment.__metaclass__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.environment.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.environment.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.environment.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.environment.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.extension": {
  "data": {
   "symbols_in_volume": {
    "numpy.distutils.extension.re": {
     "line number": [
      19,
      19,
      20,
      20
     ]
    },
    "numpy.distutils.extension.sys": {
     "line number": [
      15
     ]
    },
    "str": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.extension.Extension": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "distutils.extension.Extension": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.extension.Extension.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "SyntaxWarning": {
     "line number": [
      63
     ]
    },
    "distutils.extension.Extension.__init__": {
     "line number": [
      42
     ]
    },
    "isinstance": {
     "line number": [
      60
     ]
    },
    "numpy.distutils.extension.basestring": {
     "line number": [
      60
     ]
    },
    "numpy.distutils.extension.warnings": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.extension.Extension.has_cxx_sources": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "numpy.distutils.extension.cxx_ext_re": {
     "line number": [
      80
     ]
    },
    "str": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.extension.Extension.has_f2py_sources": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "numpy.distutils.extension.fortran_pyf_ext_re": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.extension.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.extension.basestring": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.extension.cxx_ext_re": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.distutils.extension.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.extension.fortran_pyf_ext_re": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.distutils.extension.old_Extension": {
  "data": {
   "shadows": "distutils.extension.Extension"
  },
  "type": "import"
 },
 "numpy.distutils.extension.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.extension.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.extension.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.extension.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      154
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      156
     ]
    },
    "numpy.distutils.fcompiler.absoft.compiler": {
     "line number": [
      159,
      160
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      158
     ]
    },
    "print": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      18
     ]
    },
    "numpy.distutils.fcompiler.absoft.os": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler.get_flags": {
     "line number": [
      108
     ]
    },
    "numpy.distutils.fcompiler.absoft.os": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_f77": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler.get_flags_f77": {
     "line number": [
      117
     ]
    },
    "numpy.distutils.fcompiler.absoft.os": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_f90": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler.get_flags_f90": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_fix": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler.get_flags_fix": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.absoft.os": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_opt": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_libraries": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler.get_libraries": {
     "line number": [
      94
     ]
    },
    "numpy.distutils.fcompiler.absoft.os": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_library_dirs": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.cpu.is_64bit": {
     "line number": [
      86
     ]
    },
    "numpy.distutils.fcompiler.FCompiler.get_library_dirs": {
     "line number": [
      78
     ]
    },
    "numpy.distutils.fcompiler.absoft.os": {
     "line number": [
      79,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.library_dir_option": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      69,
      70
     ]
    },
    "numpy.distutils.fcompiler.absoft.os": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.library_option": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.absoft.os": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.update_executables": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.dummy_fortran_file": {
     "line number": [
      50
     ]
    },
    "numpy.distutils.misc_util.cyg2win32": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.compiler": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.absoft.compilers": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.absoft.cpu": {
  "data": {
   "shadows": "numpy.distutils.cpuinfo.cpu"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.cyg2win32": {
  "data": {
   "shadows": "numpy.distutils.misc_util.cyg2win32"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.dummy_fortran_file": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.dummy_fortran_file"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      122
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      124
     ]
    },
    "numpy.distutils.fcompiler.compaq.compiler": {
     "line number": [
      127,
      128
     ]
    },
    "numpy.distutils.fcompiler.compaq.compilers": {
     "line number": [
      17
     ]
    },
    "numpy.distutils.fcompiler.compaq.os": {
     "line number": [
      13
     ]
    },
    "numpy.distutils.fcompiler.compaq.sys": {
     "line number": [
      13
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      126
     ]
    },
    "print": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      19
     ]
    },
    "numpy.distutils.fcompiler.compaq.sys": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_arch": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_debug": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.compaq.sys": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_opt": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      85
     ]
    },
    "IOError": {
     "line number": [
      91
     ]
    },
    "ValueError": {
     "line number": [
      96
     ]
    },
    "distutils.errors.DistutilsPlatformError": {
     "line number": [
      83
     ]
    },
    "distutils.msvccompiler.MSVCCompiler": {
     "line number": [
      80
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      86,
      92,
      97
     ]
    },
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      57
     ]
    },
    "numpy.distutils.fcompiler.compaq.sys": {
     "line number": [
      76
     ]
    },
    "print": {
     "line number": [
      88,
      94,
      99
     ]
    },
    "str": {
     "line number": [
      87,
      93,
      98
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags_arch": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags_debug": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags_opt": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.DistutilsPlatformError": {
  "data": {
   "shadows": "distutils.errors.DistutilsPlatformError"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.MSVCCompiler": {
  "data": {
   "shadows": "distutils.msvccompiler.MSVCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.compiler": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.compaq.compilers": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.compaq.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.g95": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      40
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      42
     ]
    },
    "numpy.distutils.fcompiler.g95.G95FCompiler": {
     "line number": [
      43
     ]
    },
    "numpy.distutils.fcompiler.g95.compiler": {
     "line number": [
      44,
      45
     ]
    },
    "print": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.g95.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler.get_flags": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler.get_flags_debug": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler.get_flags_opt": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.g95.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.g95.compiler": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.g95.compilers": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.g95.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.g95.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.g95.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu": {
  "data": {
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      384
     ]
    },
    "__name__": {
     "line number": [
      372
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      374
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      385
     ]
    },
    "numpy.distutils.fcompiler.gnu.Gnu95FCompiler": {
     "line number": [
      381
     ]
    },
    "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
     "line number": [
      376
     ]
    },
    "numpy.distutils.fcompiler.gnu.compiler": {
     "line number": [
      377,
      378,
      382,
      383
     ]
    },
    "numpy.distutils.fcompiler.gnu.is_win64": {
     "line number": [
      25
     ]
    },
    "numpy.distutils.fcompiler.gnu.msg": {
     "line number": [
      386
     ]
    },
    "numpy.distutils.fcompiler.gnu.re": {
     "line number": [
      19
     ]
    },
    "print": {
     "line number": [
      378,
      383,
      386
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.gnu.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
     "line number": [
      223
     ]
    },
    "numpy.distutils.fcompiler.gnu._EXTRAFLAGS": {
     "line number": [
      256,
      257,
      259
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler._universal_flags": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu._can_target": {
     "line number": [
      283
     ]
    },
    "numpy.distutils.fcompiler.gnu.sys": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_flags": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_flags_opt": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
     "line number": [
      350
     ]
    },
    "numpy.distutils.fcompiler.gnu.is_win64": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_libraries": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      333
     ]
    },
    "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
     "line number": [
      317
     ]
    },
    "numpy.distutils.fcompiler.gnu.is_win64": {
     "line number": [
      328
     ]
    },
    "numpy.distutils.fcompiler.gnu.sys": {
     "line number": [
      318,
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_library_dirs": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
     "line number": [
      302
     ]
    },
    "numpy.distutils.fcompiler.gnu.os": {
     "line number": [
      308,
      309,
      309,
      309,
      309,
      309,
      310,
      310,
      311,
      312
     ]
    },
    "numpy.distutils.fcompiler.gnu.sys": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_target": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "numpy.distutils.exec_command.exec_command": {
     "line number": [
      337
     ]
    },
    "numpy.distutils.fcompiler.gnu.TARGET_R": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.version_match": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.sys": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      31
     ]
    },
    "numpy.distutils.fcompiler.gnu.os": {
     "line number": [
      85
     ]
    },
    "numpy.distutils.fcompiler.gnu.sys": {
     "line number": [
      85,
      89
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler._c_arch_flags": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      212
     ]
    },
    "distutils.sysconfig.get_config_vars": {
     "line number": [
      211
     ]
    },
    "numpy.distutils.fcompiler.gnu.re": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_arch": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_debug": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "distutils.sysconfig.get_makefile_filename": {
     "line number": [
      122
     ]
    },
    "distutils.sysconfig.parse_makefile": {
     "line number": [
      123
     ]
    },
    "numpy.distutils.fcompiler.gnu.os": {
     "line number": [
      107,
      125
     ]
    },
    "numpy.distutils.fcompiler.gnu.sys": {
     "line number": [
      106,
      133
     ]
    },
    "numpy.distutils.fcompiler.gnu.warnings": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_opt": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_libgcc_dir": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "numpy.distutils.exec_command.exec_command": {
     "line number": [
      144
     ]
    },
    "numpy.distutils.fcompiler.gnu.os": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_libraries": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.os": {
     "line number": [
      173,
      173
     ]
    },
    "numpy.distutils.fcompiler.gnu.sys": {
     "line number": [
      181,
      189
     ]
    },
    "numpy.distutils.misc_util.msvc_runtime_library": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_library_dirs": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.os": {
     "line number": [
      158,
      159,
      159,
      160,
      160,
      162,
      162
     ]
    },
    "numpy.distutils.fcompiler.gnu.sys": {
     "line number": [
      153,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.gnu_version_match": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.re": {
     "line number": [
      38,
      41,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.version_match": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.STDOUT": {
  "data": {
   "shadows": "subprocess.STDOUT"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.TARGET_R": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.gnu._EXTRAFLAGS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.gnu._can_target": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.os": {
     "line number": [
      358,
      359,
      366,
      367,
      369
     ]
    },
    "numpy.distutils.fcompiler.gnu.tempfile": {
     "line number": [
      356
     ]
    },
    "subprocess.PIPE": {
     "line number": [
      362
     ]
    },
    "subprocess.Popen": {
     "line number": [
      362
     ]
    },
    "subprocess.STDOUT": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.compiler": {
  "data": {
   "lineno": 381
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.gnu.compilers": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.gnu.cpu": {
  "data": {
   "shadows": "numpy.distutils.cpuinfo.cpu"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.is_win64": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.platform": {
     "line number": [
      23
     ]
    },
    "numpy.distutils.fcompiler.gnu.sys": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.msg": {
  "data": {
   "lineno": 385
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.gnu.msvc_runtime_library": {
  "data": {
   "shadows": "numpy.distutils.misc_util.msvc_runtime_library"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.sc": {
  "data": {
   "shadows": "distutils.sysconfig"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.sysconfig": {
  "data": {
   "shadows": "distutils.sysconfig"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      39
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      41
     ]
    },
    "numpy.distutils.fcompiler.hpux.compiler": {
     "line number": [
      44,
      45
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      43
     ]
    },
    "print": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.hpux.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_flags": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_flags_opt": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_libraries": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_library_dirs": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_version": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler.get_version": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux.compiler": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.hpux.compilers": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.hpux.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      92
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      93
     ]
    },
    "numpy.distutils.fcompiler.ibm.IBMFCompiler": {
     "line number": [
      94
     ]
    },
    "numpy.distutils.fcompiler.ibm.compiler": {
     "line number": [
      95,
      96
     ]
    },
    "print": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.ibm.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags_debug": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "crt1_match": {
     "line number": [
      79
     ]
    },
    "distutils.log.info": {
     "line number": [
      75
     ]
    },
    "numpy.distutils.fcompiler.ibm.re": {
     "line number": [
      77
     ]
    },
    "numpy.distutils.fcompiler.ibm.sys": {
     "line number": [
      64,
      70
     ]
    },
    "numpy.distutils.misc_util.make_temp_file": {
     "line number": [
      74
     ]
    },
    "open": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags_opt": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_version": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      53
     ]
    },
    "numpy.distutils.exec_command.exec_command": {
     "line number": [
      38
     ]
    },
    "numpy.distutils.exec_command.find_executable": {
     "line number": [
      35,
      36
     ]
    },
    "numpy.distutils.fcompiler.FCompiler.get_version": {
     "line number": [
      31
     ]
    },
    "numpy.distutils.fcompiler.ibm.os": {
     "line number": [
      37,
      37,
      43,
      48,
      50,
      50
     ]
    },
    "numpy.distutils.fcompiler.ibm.re": {
     "line number": [
      39
     ]
    },
    "numpy.distutils.fcompiler.ibm.sys": {
     "line number": [
      33
     ]
    },
    "sorted": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.compiler": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.ibm.compilers": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.ibm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.find_executable": {
  "data": {
   "shadows": "numpy.distutils.exec_command.find_executable"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.make_temp_file": {
  "data": {
   "shadows": "numpy.distutils.misc_util.make_temp_file"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      199
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      201
     ]
    },
    "numpy.distutils.fcompiler.intel.compiler": {
     "line number": [
      204,
      205
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      203
     ]
    },
    "print": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.intel.BaseIntelFCompiler": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.BaseIntelFCompiler.update_executables": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.dummy_fortran_file": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.intel.IntelFCompiler": {
     "line number": [
      93
     ]
    },
    "numpy.distutils.fcompiler.intel.intel_version_match": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler.get_flags": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler.get_flags_arch": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler.get_flags_opt": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64VisualFCompiler": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.distutils.ccompiler.simple_version_match": {
     "line number": [
      193
     ]
    },
    "numpy.distutils.fcompiler.intel.IntelVisualFCompiler": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64VisualFCompiler.get_flags_arch": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.intel.BaseIntelFCompiler": {
     "line number": [
      23
     ]
    },
    "numpy.distutils.fcompiler.intel.intel_version_match": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_arch": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_free": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      69
     ]
    },
    "numpy.distutils.fcompiler.FCompiler.get_flags_linker_so": {
     "line number": [
      60
     ]
    },
    "numpy.distutils.fcompiler.intel.sys": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_opt": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelItaniumFCompiler": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.intel.IntelFCompiler": {
     "line number": [
      74
     ]
    },
    "numpy.distutils.fcompiler.intel.intel_version_match": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelItaniumVisualFCompiler": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.intel.IntelVisualFCompiler": {
     "line number": [
      170,
      177
     ]
    },
    "numpy.distutils.fcompiler.intel.intel_version_match": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.intel.BaseIntelFCompiler": {
     "line number": [
      125
     ]
    },
    "numpy.distutils.fcompiler.intel.intel_version_match": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_arch": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_debug": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_free": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_opt": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.update_executables": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.dummy_fortran_file": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.compiler": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.intel.compilers": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.intel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.dummy_fortran_file": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.dummy_fortran_file"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.intel_version_match": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.distutils.ccompiler.simple_version_match": {
     "line number": [
      15
     ]
    },
    "type": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.simple_version_match": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.simple_version_match"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      43
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      45
     ]
    },
    "numpy.distutils.fcompiler.lahey.compiler": {
     "line number": [
      48,
      49
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      47
     ]
    },
    "print": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.lahey.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_flags_debug": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_flags_opt": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_libraries": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_library_dirs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.lahey.os": {
     "line number": [
      34,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.compiler": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.lahey.compilers": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.lahey.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      54
     ]
    },
    "numpy.distutils.fcompiler.mips.compiler": {
     "line number": [
      57,
      58
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      56
     ]
    },
    "print": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.mips.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_arch": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      34
     ]
    },
    "numpy.distutils.cpuinfo.cpu": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_arch_f77": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.distutils.cpuinfo.cpu.is_r10000": {
     "line number": [
      40
     ]
    },
    "numpy.distutils.cpuinfo.cpu.is_r12000": {
     "line number": [
      41
     ]
    },
    "numpy.distutils.cpuinfo.cpu.is_r4000": {
     "line number": [
      44
     ]
    },
    "numpy.distutils.cpuinfo.cpu.is_r5000": {
     "line number": [
      43
     ]
    },
    "numpy.distutils.cpuinfo.cpu.is_r8000": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_arch_f90": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_opt": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips.compiler": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.mips.compilers": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.mips.cpu": {
  "data": {
   "shadows": "numpy.distutils.cpuinfo.cpu"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      39
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      41
     ]
    },
    "numpy.distutils.fcompiler.nag.compiler": {
     "line number": [
      44,
      45
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      43
     ]
    },
    "print": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.nag.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler.get_flags_arch": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler.get_flags_debug": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.nag.sys": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler.get_flags_opt": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.compiler": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.nag.compilers": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.nag.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.none": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      26
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      28
     ]
    },
    "numpy.distutils.fcompiler.none.NoneFCompiler": {
     "line number": [
      29
     ]
    },
    "numpy.distutils.fcompiler.none.compiler": {
     "line number": [
      30,
      31
     ]
    },
    "print": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.none.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.none.NoneFCompiler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.none.NoneFCompiler.find_executables": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.none.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.none.compiler": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.none.compilers": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.none.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.none.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.none.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      31
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      33
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      36
     ]
    },
    "numpy.distutils.fcompiler.pathf95.compiler": {
     "line number": [
      37,
      38
     ]
    },
    "print": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.pathf95.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95.PathScaleFCompiler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.pathf95.PathScaleFCompiler.get_flags_debug": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pathf95.PathScaleFCompiler.get_flags_opt": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pathf95.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95.compiler": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.pathf95.compilers": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.pathf95.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      54
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      56
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      58
     ]
    },
    "numpy.distutils.fcompiler.pg.compiler": {
     "line number": [
      59,
      60
     ]
    },
    "print": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.pg.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      9
     ]
    },
    "sys.platform": {
     "line number": [
      15,
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags_debug": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags_opt": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.compiler": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.pg.compilers": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.pg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.platform": {
  "data": {
   "shadows": "sys.platform"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      46
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      48
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      50
     ]
    },
    "numpy.distutils.fcompiler.sun.compiler": {
     "line number": [
      51,
      52
     ]
    },
    "print": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.sun.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.distutils.ccompiler.simple_version_match": {
     "line number": [
      14
     ]
    },
    "numpy.distutils.fcompiler.FCompiler": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_arch": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_flags_f77": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_libraries": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_opt": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.compiler": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.sun.compilers": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.sun.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.simple_version_match": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.simple_version_match"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      50
     ]
    },
    "distutils.log.set_verbosity": {
     "line number": [
      52
     ]
    },
    "numpy.distutils.fcompiler.new_fcompiler": {
     "line number": [
      54
     ]
    },
    "numpy.distutils.fcompiler.vast.compiler": {
     "line number": [
      55,
      56
     ]
    },
    "print": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.vast.GnuFCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.gnu.GnuFCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler.find_executables": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler.get_flags_arch": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
     "line number": [
      43
     ]
    },
    "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_arch": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler.get_version_cmd": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.distutils.fcompiler.vast.os": {
     "line number": [
      37,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.vast.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.compiler": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.vast.compilers": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.vast.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.from_template": {
  "data": {
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      245
     ]
    },
    "__name__": {
     "line number": [
      241
     ]
    },
    "numpy.distutils.from_template.allstr": {
     "line number": [
      255
     ]
    },
    "numpy.distutils.from_template.fid": {
     "line number": [
      254
     ]
    },
    "numpy.distutils.from_template.file": {
     "line number": [
      249,
      250
     ]
    },
    "numpy.distutils.from_template.find_repl_patterns": {
     "line number": [
      231
     ]
    },
    "numpy.distutils.from_template.newname": {
     "line number": [
      252
     ]
    },
    "numpy.distutils.from_template.os": {
     "line number": [
      250
     ]
    },
    "numpy.distutils.from_template.outfile": {
     "line number": [
      256
     ]
    },
    "numpy.distutils.from_template.process_str": {
     "line number": [
      255
     ]
    },
    "numpy.distutils.from_template.re": {
     "line number": [
      56,
      56,
      57,
      57,
      58,
      58,
      87,
      88,
      89,
      101,
      126,
      205,
      205
     ]
    },
    "numpy.distutils.from_template.sys": {
     "line number": [
      244,
      246,
      247
     ]
    },
    "numpy.distutils.from_template.writestr": {
     "line number": [
      256
     ]
    },
    "open": {
     "line number": [
      249,
      252
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.from_template.__all__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.distutils.from_template._special_names": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.allstr": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.conv": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "int": {
     "line number": [
      108
     ]
    },
    "len": {
     "line number": [
      105
     ]
    },
    "numpy.distutils.from_template.item_re": {
     "line number": [
      106
     ]
    },
    "range": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.from_template.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.expand_sub": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      156
     ]
    },
    "len": {
     "line number": [
      160
     ]
    },
    "numpy.distutils.from_template.find_repl_patterns": {
     "line number": [
      130
     ]
    },
    "numpy.distutils.from_template.list_re": {
     "line number": [
      146
     ]
    },
    "numpy.distutils.from_template.named_re": {
     "line number": [
      131
     ]
    },
    "numpy.distutils.from_template.template_re": {
     "line number": [
      152,
      181
     ]
    },
    "print": {
     "line number": [
      169
     ]
    },
    "range": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.from_template.expand_sub.listrepl": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "numpy.distutils.from_template.conv": {
     "line number": [
      134
     ]
    },
    "numpy.distutils.from_template.template_name_re": {
     "line number": [
      135
     ]
    },
    "numpy.distutils.from_template.unique_key": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.from_template.expand_sub.namerepl": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "numpy.distutils.from_template.fid": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.file": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.find_repl_patterns": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "numpy.distutils.from_template.conv": {
     "line number": [
      97
     ]
    },
    "numpy.distutils.from_template.named_re": {
     "line number": [
      92
     ]
    },
    "numpy.distutils.from_template.unique_key": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.from_template.function_start_re": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.include_src_re": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.item_re": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.list_re": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.named_re": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.newname": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.outfile": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.parse_structure": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "len": {
     "line number": [
      83
     ]
    },
    "numpy.distutils.from_template.function_start_re": {
     "line number": [
      73
     ]
    },
    "numpy.distutils.from_template.routine_end_re": {
     "line number": [
      82
     ]
    },
    "numpy.distutils.from_template.routine_start_re": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.from_template.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.process_file": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "numpy.distutils.from_template.process_str": {
     "line number": [
      229
     ]
    },
    "numpy.distutils.from_template.resolve_includes": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.from_template.process_str": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "numpy.distutils.from_template.expand_sub": {
     "line number": [
      199
     ]
    },
    "numpy.distutils.from_template.find_repl_patterns": {
     "line number": [
      198
     ]
    },
    "numpy.distutils.from_template.parse_structure": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.from_template.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.resolve_includes": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "numpy.distutils.from_template.include_src_re": {
     "line number": [
      212
     ]
    },
    "numpy.distutils.from_template.os": {
     "line number": [
      208,
      215,
      216,
      217
     ]
    },
    "open": {
     "line number": [
      209
     ]
    },
    "print": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.from_template.routine_end_re": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.routine_start_re": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.template_name_re": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.template_re": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.unique_key": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "list": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.from_template.writestr": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "numpy.distutils.info": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.info.postpone_import": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.intelccompiler.IntelCCompiler": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "distutils.unixccompiler.UnixCCompiler": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelCCompiler.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "distutils.unixccompiler.UnixCCompiler.__init__": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelEM64TCCompiler": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "distutils.unixccompiler.UnixCCompiler": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelEM64TCCompiler.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "distutils.unixccompiler.UnixCCompiler.__init__": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelItaniumCCompiler": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "map": {
     "line number": [
      27
     ]
    },
    "numpy.distutils.exec_command.find_executable": {
     "line number": [
      27
     ]
    },
    "numpy.distutils.intelccompiler.IntelCCompiler": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.intelccompiler.UnixCCompiler": {
  "data": {
   "shadows": "distutils.unixccompiler.UnixCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.find_executable": {
  "data": {
   "shadows": "numpy.distutils.exec_command.find_executable"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      107
     ]
    },
    "numpy.distutils.lib2def.DEFAULT_NM": {
     "line number": [
      113
     ]
    },
    "numpy.distutils.lib2def.DEF_HEADER": {
     "line number": [
      116
     ]
    },
    "numpy.distutils.lib2def.deffile": {
     "line number": [
      116
     ]
    },
    "numpy.distutils.lib2def.getnm": {
     "line number": [
      114
     ]
    },
    "numpy.distutils.lib2def.nm_cmd": {
     "line number": [
      114
     ]
    },
    "numpy.distutils.lib2def.nm_output": {
     "line number": [
      115
     ]
    },
    "numpy.distutils.lib2def.output_def": {
     "line number": [
      116
     ]
    },
    "numpy.distutils.lib2def.parse_cmd": {
     "line number": [
      108
     ]
    },
    "numpy.distutils.lib2def.parse_nm": {
     "line number": [
      115
     ]
    },
    "numpy.distutils.lib2def.py_ver": {
     "line number": [
      35,
      38,
      39
     ]
    },
    "numpy.distutils.lib2def.re": {
     "line number": [
      38,
      38,
      39,
      39
     ]
    },
    "numpy.distutils.lib2def.sys": {
     "line number": [
      26,
      110
     ]
    },
    "open": {
     "line number": [
      112
     ]
    },
    "str": {
     "line number": [
      113,
      113
     ]
    },
    "tuple": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.lib2def.DATA_RE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.DEFAULT_NM": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.DEF_HEADER": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.FUNC_RE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.__doc__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.__version__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.deffile": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.getnm": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "numpy.distutils.lib2def.py_ver": {
     "line number": [
      65
     ]
    },
    "numpy.distutils.lib2def.subprocess": {
     "line number": [
      69,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.lib2def.nm_cmd": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.nm_output": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.output_def": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.distutils.lib2def.sys": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.lib2def.parse_cmd": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "len": {
     "line number": [
      45,
      53
     ]
    },
    "numpy.distutils.lib2def.py_ver": {
     "line number": [
      56,
      61
     ]
    },
    "numpy.distutils.lib2def.sys": {
     "line number": [
      45,
      46,
      46,
      47,
      48,
      48,
      49,
      53,
      54,
      55,
      57,
      59
     ]
    },
    "print": {
     "line number": [
      51,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.lib2def.parse_nm": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.distutils.lib2def.DATA_RE": {
     "line number": [
      79
     ]
    },
    "numpy.distutils.lib2def.FUNC_RE": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.lib2def.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.py_ver": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      75
     ]
    },
    "numpy.distutils.line_endings.dos2unix_dir": {
     "line number": [
      76
     ]
    },
    "numpy.distutils.line_endings.sys": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.line_endings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.dos2unix": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.distutils.line_endings.os": {
     "line number": [
      10
     ]
    },
    "numpy.distutils.line_endings.re": {
     "line number": [
      19
     ]
    },
    "open": {
     "line number": [
      14,
      22
     ]
    },
    "print": {
     "line number": [
      11,
      16,
      21,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.line_endings.dos2unix_dir": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.distutils.line_endings.dos2unix_one_dir": {
     "line number": [
      38
     ]
    },
    "numpy.distutils.line_endings.os": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.line_endings.dos2unix_one_dir": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.distutils.line_endings.dos2unix": {
     "line number": [
      32
     ]
    },
    "numpy.distutils.line_endings.os": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.line_endings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.unix2dos": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.distutils.line_endings.os": {
     "line number": [
      44
     ]
    },
    "numpy.distutils.line_endings.re": {
     "line number": [
      52,
      53
     ]
    },
    "open": {
     "line number": [
      48,
      56
     ]
    },
    "print": {
     "line number": [
      45,
      50,
      55,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.line_endings.unix2dos_dir": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "numpy.distutils.line_endings.os": {
     "line number": [
      72
     ]
    },
    "numpy.distutils.line_endings.unix2dos_one_dir": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.line_endings.unix2dos_one_dir": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.distutils.line_endings.os": {
     "line number": [
      65
     ]
    },
    "numpy.distutils.line_endings.unix2dos": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.log": {
  "data": {
   "symbols_in_volume": {
    "distutils.log.Log": {
     "line number": [
      52
     ]
    },
    "distutils.log._global_log.__class__": {
     "line number": [
      52
     ]
    },
    "distutils.log._global_log.good": {
     "line number": [
      54
     ]
    },
    "numpy.distutils.log.set_verbosity": {
     "line number": [
      93
     ]
    },
    "numpy.distutils.log.sys": {
     "line number": [
      9
     ]
    },
    "numpy.distutils.misc_util.cyan_text": {
     "line number": [
      85
     ]
    },
    "numpy.distutils.misc_util.default_text": {
     "line number": [
      86
     ]
    },
    "numpy.distutils.misc_util.red_text": {
     "line number": [
      87,
      88,
      89
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.log.Log": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "distutils.log.Log": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.log.Log._log": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.distutils.log._fix_args": {
     "line number": [
      29
     ]
    },
    "numpy.distutils.log.sys": {
     "line number": [
      36
     ]
    },
    "print": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.log.Log.good": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.distutils.log._fix_args": {
     "line number": [
      46
     ]
    },
    "numpy.distutils.log.sys": {
     "line number": [
      49
     ]
    },
    "numpy.distutils.misc_util.green_text": {
     "line number": [
      46,
      48
     ]
    },
    "print": {
     "line number": [
      46,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.log._fix_args": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.is_sequence": {
     "line number": [
      20
     ]
    },
    "numpy.distutils.misc_util.is_string": {
     "line number": [
      18
     ]
    },
    "tuple": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.log._global_color_map": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "numpy.distutils.log._global_log": {
  "data": {
   "shadows": "distutils.log._global_log"
  },
  "type": "import"
 },
 "numpy.distutils.log.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.log.cyan_text": {
  "data": {
   "shadows": "numpy.distutils.misc_util.cyan_text"
  },
  "type": "import"
 },
 "numpy.distutils.log.default_text": {
  "data": {
   "shadows": "numpy.distutils.misc_util.default_text"
  },
  "type": "import"
 },
 "numpy.distutils.log.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.log.good": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.distutils.log.green_text": {
  "data": {
   "shadows": "numpy.distutils.misc_util.green_text"
  },
  "type": "import"
 },
 "numpy.distutils.log.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.log.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.log.old_Log": {
  "data": {
   "shadows": "distutils.log.Log"
  },
  "type": "import"
 },
 "numpy.distutils.log.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.log.red_text": {
  "data": {
   "shadows": "numpy.distutils.misc_util.red_text"
  },
  "type": "import"
 },
 "numpy.distutils.log.set_threshold": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "distutils.log._global_log.threshold": {
     "line number": [
      57,
      61
     ]
    },
    "info": {
     "line number": [
      63,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.log.set_verbosity": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "distutils.log._global_log.threshold": {
     "line number": [
      72
     ]
    },
    "numpy.distutils.log.set_threshold": {
     "line number": [
      74,
      76,
      78,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.log.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      471
     ]
    },
    "hasattr": {
     "line number": [
      467
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      475
     ]
    },
    "numpy.distutils.mingw32ccompiler._MSVCRVER_TO_FULLVER": {
     "line number": [
      463,
      464,
      466,
      469
     ]
    },
    "numpy.distutils.mingw32ccompiler.msvcrt": {
     "line number": [
      467,
      468,
      469
     ]
    },
    "numpy.distutils.mingw32ccompiler.re": {
     "line number": [
      40,
      41
     ]
    },
    "numpy.distutils.mingw32ccompiler.sys": {
     "line number": [
      20,
      458
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.mingw32ccompiler.CompileError": {
  "data": {
   "shadows": "distutils.errors.CompileError"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.DistutilsExecError": {
  "data": {
   "shadows": "distutils.errors.DistutilsExecError"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler": {
  "data": {
   "lineno": 44
  },
  "type": "class"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "distutils.version.StrictVersion": {
     "line number": [
      69
     ]
    },
    "int": {
     "line number": [
      101
     ]
    },
    "numpy.distutils.mingw32ccompiler.build_import_library": {
     "line number": [
      91
     ]
    },
    "numpy.distutils.mingw32ccompiler.build_msvcr_library": {
     "line number": [
      94,
      95
     ]
    },
    "numpy.distutils.mingw32ccompiler.re": {
     "line number": [
      67
     ]
    },
    "numpy.distutils.mingw32ccompiler.subprocess": {
     "line number": [
      63,
      64
     ]
    },
    "numpy.distutils.misc_util.get_build_architecture": {
     "line number": [
      117
     ]
    },
    "numpy.distutils.misc_util.msvc_runtime_library": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler.link": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "distutils.unixccompiler.UnixCCompiler.link": {
     "line number": [
      201
     ]
    },
    "func": {
     "line number": [
      202
     ]
    },
    "func.__code__.co_argcount": {
     "line number": [
      202
     ]
    },
    "numpy.distutils.misc_util.msvc_runtime_library": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler.object_filenames": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "distutils.errors.UnknownFileError": {
     "line number": [
      223
     ]
    },
    "numpy.distutils.mingw32ccompiler.os": {
     "line number": [
      213,
      213,
      218,
      227,
      230,
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.UnixCCompiler": {
  "data": {
   "shadows": "distutils.unixccompiler.UnixCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.UnknownFileError": {
  "data": {
   "shadows": "distutils.errors.UnknownFileError"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler._MSVCRVER_TO_FULLVER": {
  "data": {
   "lineno": 457
  },
  "type": "constant"
 },
 "numpy.distutils.mingw32ccompiler._START": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.distutils.mingw32ccompiler._TABLE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.distutils.mingw32ccompiler._build_import_library_amd64": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "numpy.distutils.log.debug": {
     "line number": [
      390
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      396
     ]
    },
    "numpy.distutils.mingw32ccompiler.find_python_dll": {
     "line number": [
      385
     ]
    },
    "numpy.distutils.mingw32ccompiler.generate_def": {
     "line number": [
      399
     ]
    },
    "numpy.distutils.mingw32ccompiler.os": {
     "line number": [
      388,
      389,
      394
     ]
    },
    "numpy.distutils.mingw32ccompiler.subprocess": {
     "line number": [
      402
     ]
    },
    "numpy.distutils.mingw32ccompiler.sys": {
     "line number": [
      387,
      388,
      393,
      394
     ]
    },
    "tuple": {
     "line number": [
      387,
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler._build_import_library_x86": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "numpy.distutils.lib2def.DEFAULT_NM": {
     "line number": [
      423
     ]
    },
    "numpy.distutils.lib2def.DEF_HEADER": {
     "line number": [
      426
     ]
    },
    "numpy.distutils.lib2def.getnm": {
     "line number": [
      424
     ]
    },
    "numpy.distutils.lib2def.output_def": {
     "line number": [
      426
     ]
    },
    "numpy.distutils.lib2def.parse_nm": {
     "line number": [
      425
     ]
    },
    "numpy.distutils.log.debug": {
     "line number": [
      415
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      417
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      412,
      434
     ]
    },
    "numpy.distutils.mingw32ccompiler.os": {
     "line number": [
      408,
      410,
      411,
      414,
      422,
      431
     ]
    },
    "numpy.distutils.mingw32ccompiler.sys": {
     "line number": [
      407,
      408,
      409,
      410,
      421,
      422,
      428
     ]
    },
    "open": {
     "line number": [
      426
     ]
    },
    "tuple": {
     "line number": [
      407,
      409,
      421,
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.build_import_library": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      382
     ]
    },
    "numpy.distutils.mingw32ccompiler._build_import_library_amd64": {
     "line number": [
      378
     ]
    },
    "numpy.distutils.mingw32ccompiler._build_import_library_x86": {
     "line number": [
      380
     ]
    },
    "numpy.distutils.mingw32ccompiler.os": {
     "line number": [
      373
     ]
    },
    "numpy.distutils.misc_util.get_build_architecture": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.build_msvcr_library": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "int": {
     "line number": [
      333
     ]
    },
    "numpy.distutils.log.debug": {
     "line number": [
      334,
      344
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      357
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      351
     ]
    },
    "numpy.distutils.mingw32ccompiler.find_dll": {
     "line number": [
      349
     ]
    },
    "numpy.distutils.mingw32ccompiler.generate_def": {
     "line number": [
      361
     ]
    },
    "numpy.distutils.mingw32ccompiler.os": {
     "line number": [
      327,
      342,
      343,
      355,
      368
     ]
    },
    "numpy.distutils.mingw32ccompiler.subprocess": {
     "line number": [
      365
     ]
    },
    "numpy.distutils.mingw32ccompiler.sys": {
     "line number": [
      342,
      355
     ]
    },
    "numpy.distutils.misc_util.msvc_runtime_library": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.check_embedded_msvcr_match_linked": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      544
     ]
    },
    "int": {
     "line number": [
      542,
      543,
      547
     ]
    },
    "numpy.distutils.misc_util.msvc_runtime_library": {
     "line number": [
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.configtest_name": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "numpy.distutils.mingw32ccompiler.os": {
     "line number": [
      550,
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.distutils.cygwinccompiler": {
  "data": {
   "shadows": "distutils.cygwinccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.dump_table": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "numpy.distutils.mingw32ccompiler.subprocess": {
     "line number": [
      265,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_dll": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "_find_dll_in_path": {
     "line number": [
      324
     ]
    },
    "_find_dll_in_winsxs": {
     "line number": [
      324
     ]
    },
    "numpy.distutils.misc_util.get_build_architecture": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_dll._find_dll_in_path": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "numpy.distutils.mingw32ccompiler.os": {
     "line number": [
      319,
      320,
      321,
      322
     ]
    },
    "numpy.distutils.mingw32ccompiler.sys": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_dll._find_dll_in_winsxs": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "numpy.distutils.mingw32ccompiler.os": {
     "line number": [
      308,
      308,
      309,
      311,
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_python_dll": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      254
     ]
    },
    "ValueError": {
     "line number": [
      262
     ]
    },
    "int": {
     "line number": [
      241
     ]
    },
    "min": {
     "line number": [
      241,
      242
     ]
    },
    "numpy.distutils.mingw32ccompiler.os": {
     "line number": [
      251,
      253,
      253,
      258,
      259
     ]
    },
    "numpy.distutils.mingw32ccompiler.sys": {
     "line number": [
      241,
      250,
      251
     ]
    },
    "print": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.gen_lib_options": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.gen_lib_options"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.gen_preprocess_options": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.gen_preprocess_options"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.generate_def": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      278
     ]
    },
    "int": {
     "line number": [
      284
     ]
    },
    "len": {
     "line number": [
      274,
      281,
      288
     ]
    },
    "numpy.distutils.log.warn": {
     "line number": [
      289
     ]
    },
    "numpy.distutils.mingw32ccompiler._START": {
     "line number": [
      275
     ]
    },
    "numpy.distutils.mingw32ccompiler._TABLE": {
     "line number": [
      282
     ]
    },
    "numpy.distutils.mingw32ccompiler.dump_table": {
     "line number": [
      273
     ]
    },
    "numpy.distutils.mingw32ccompiler.os": {
     "line number": [
      292
     ]
    },
    "open": {
     "line number": [
      291
     ]
    },
    "range": {
     "line number": [
      274,
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.generate_manifest": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "distutils.msvccompiler.get_build_version": {
     "line number": [
      565
     ]
    },
    "int": {
     "line number": [
      569,
      570
     ]
    },
    "numpy.distutils.mingw32ccompiler.check_embedded_msvcr_match_linked": {
     "line number": [
      568
     ]
    },
    "numpy.distutils.mingw32ccompiler.manifest_name": {
     "line number": [
      573,
      574
     ]
    },
    "numpy.distutils.mingw32ccompiler.msvc_manifest_xml": {
     "line number": [
      572
     ]
    },
    "open": {
     "line number": [
      573
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.get_build_architecture": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_build_architecture"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.get_build_msvc_version": {
  "data": {
   "shadows": "distutils.msvccompiler.get_build_version"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.lib2def": {
  "data": {
   "shadows": "numpy.distutils.lib2def"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.manifest_name": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": {
    "numpy.distutils.mingw32ccompiler.configtest_name": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.manifest_rc": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      527
     ]
    },
    "type": {
     "line number": [
      522,
      524,
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.msvc_manifest_xml": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      482
     ]
    },
    "ValueError": {
     "line number": [
      483
     ]
    },
    "min": {
     "line number": [
      481,
      484,
      507
     ]
    },
    "numpy.distutils.mingw32ccompiler._MSVCRVER_TO_FULLVER": {
     "line number": [
      481
     ]
    },
    "str": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.msvc_runtime_library": {
  "data": {
   "shadows": "numpy.distutils.misc_util.msvc_runtime_library"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.msvcrt": {
  "data": {
   "shadows": "msvcrt"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.numpy.distutils.ccompiler": {
  "data": {
   "shadows": "numpy.distutils.ccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.rc_name": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "numpy.distutils.mingw32ccompiler.configtest_name": {
     "line number": [
      561
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config": {
  "data": {
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      426,
      450
     ]
    },
    "__name__": {
     "line number": [
      402
     ]
    },
    "len": {
     "line number": [
      425
     ]
    },
    "numpy.distutils.npy_pkg_config.d": {
     "line number": [
      437,
      438
     ]
    },
    "numpy.distutils.npy_pkg_config.files": {
     "line number": [
      430
     ]
    },
    "numpy.distutils.npy_pkg_config.glob": {
     "line number": [
      429
     ]
    },
    "numpy.distutils.npy_pkg_config.info": {
     "line number": [
      432,
      432,
      432,
      455,
      458,
      460,
      462,
      464
     ]
    },
    "numpy.distutils.npy_pkg_config.m": {
     "line number": [
      449,
      453,
      454
     ]
    },
    "numpy.distutils.npy_pkg_config.name": {
     "line number": [
      455
     ]
    },
    "numpy.distutils.npy_pkg_config.os": {
     "line number": [
      436
     ]
    },
    "numpy.distutils.npy_pkg_config.parser": {
     "line number": [
      408,
      410,
      412,
      414,
      416,
      418,
      420,
      423
     ]
    },
    "numpy.distutils.npy_pkg_config.pkg_name": {
     "line number": [
      438,
      440
     ]
    },
    "numpy.distutils.npy_pkg_config.re": {
     "line number": [
      16,
      448
     ]
    },
    "numpy.distutils.npy_pkg_config.read_config": {
     "line number": [
      431,
      438,
      440
     ]
    },
    "numpy.distutils.npy_pkg_config.section": {
     "line number": [
      458,
      460
     ]
    },
    "numpy.distutils.npy_pkg_config.sys": {
     "line number": [
      8,
      423
     ]
    },
    "numpy.distutils.npy_pkg_config.value": {
     "line number": [
      455
     ]
    },
    "optparse.OptionParser": {
     "line number": [
      407
     ]
    },
    "print": {
     "line number": [
      432,
      458,
      460,
      462,
      464
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.npy_pkg_config.ConfigParser": {
  "data": {
   "shadows": "configparser.ConfigParser"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.FormatError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.FormatError.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.FormatError.__str__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "object": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "vars": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.__str__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.cflags": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "numpy.distutils.npy_pkg_config._escape_backslash": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.libs": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.distutils.npy_pkg_config._escape_backslash": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.sections": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "list": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.NoOptionError": {
  "data": {
   "shadows": "configparser.NoOptionError"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.PkgNotFound": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.PkgNotFound.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.PkgNotFound.__str__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.SafeConfigParser": {
  "data": {
   "shadows": "configparser.SafeConfigParser"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.VariableSet": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "object": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.__getitem__": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.__setitem__": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet._init_parse": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet._init_parse_var": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "numpy.distutils.npy_pkg_config.re": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.interpolate": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "_interpolate": {
     "line number": [
      204
     ]
    },
    "numpy.distutils.npy_pkg_config._VAR": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.interpolate._interpolate": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.variables": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "list": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config._CACHE": {
  "data": {
   "lineno": 350
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config._VAR": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config._escape_backslash": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config._read_config_imp": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      337
     ]
    },
    "_read_config": {
     "line number": [
      329
     ]
    },
    "numpy.distutils.npy_pkg_config.LibraryInfo": {
     "line number": [
      343
     ]
    },
    "numpy.distutils.npy_pkg_config.VariableSet": {
     "line number": [
      344
     ]
    },
    "numpy.distutils.npy_pkg_config._escape_backslash": {
     "line number": [
      341
     ]
    },
    "numpy.distutils.npy_pkg_config.os": {
     "line number": [
      341
     ]
    },
    "numpy.distutils.npy_pkg_config.sys": {
     "line number": [
      336,
      340
     ]
    },
    "vars": {
     "line number": [
      329,
      334,
      334,
      335,
      341,
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config._read_config_imp._read_config": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "_read_config": {
     "line number": [
      315
     ]
    },
    "numpy.distutils.npy_pkg_config.parse_config": {
     "line number": [
      312
     ]
    },
    "numpy.distutils.npy_pkg_config.pkg_to_filename": {
     "line number": [
      315
     ]
    },
    "vars": {
     "line number": [
      312,
      319,
      320,
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.d": {
  "data": {
   "lineno": 436
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.files": {
  "data": {
   "lineno": 429
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.info": {
  "data": {
   "lineno": 440
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.m": {
  "data": {
   "lineno": 448
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.name": {
  "data": {
   "lineno": 453
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.parse_config": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "configparser.ConfigParser": {
     "line number": [
      278
     ]
    },
    "configparser.SafeConfigParser": {
     "line number": [
      280
     ]
    },
    "len": {
     "line number": [
      283
     ]
    },
    "numpy.distutils.npy_pkg_config.PkgNotFound": {
     "line number": [
      284
     ]
    },
    "numpy.distutils.npy_pkg_config._escape_backslash": {
     "line number": [
      292
     ]
    },
    "numpy.distutils.npy_pkg_config.os": {
     "line number": [
      272
     ]
    },
    "numpy.distutils.npy_pkg_config.parse_meta": {
     "line number": [
      287
     ]
    },
    "numpy.distutils.npy_pkg_config.sys": {
     "line number": [
      276
     ]
    },
    "str": {
     "line number": [
      284
     ]
    },
    "vars": {
     "line number": [
      289,
      292,
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_flags": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "next_token": {
     "line number": [
      87
     ]
    },
    "numpy.distutils.npy_pkg_config.shlex": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_flags.next_token": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "len": {
     "line number": [
      66,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_meta": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "numpy.distutils.npy_pkg_config.FormatError": {
     "line number": [
      237,
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_sections": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_variables": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "numpy.distutils.npy_pkg_config.FormatError": {
     "line number": [
      255
     ]
    },
    "numpy.distutils.npy_pkg_config.VariableSet": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parser": {
  "data": {
   "lineno": 407
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.pkg_name": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.pkg_to_filename": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.read_config": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      392
     ]
    },
    "numpy.distutils.npy_pkg_config._CACHE": {
     "line number": [
      391,
      394
     ]
    },
    "numpy.distutils.npy_pkg_config._read_config_imp": {
     "line number": [
      393
     ]
    },
    "numpy.distutils.npy_pkg_config.pkg_to_filename": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.section": {
  "data": {
   "lineno": 445
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.value": {
  "data": {
   "lineno": 454
  },
  "type": "constant"
 },
 "numpy.distutils.numpy.distutils.__config__": {
  "data": {
   "shadows": "numpy.distutils.__config__"
  },
  "type": "import"
 },
 "numpy.distutils.numpy.distutils.ccompiler": {
  "data": {
   "shadows": "numpy.distutils.ccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.numpy.distutils.unixccompiler": {
  "data": {
   "shadows": "numpy.distutils.unixccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.numpy_distribution": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.numpy_distribution.Distribution": {
  "data": {
   "shadows": "distutils.core.Distribution"
  },
  "type": "import"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "distutils.core.Distribution": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "distutils.core.Distribution.__init__": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution.has_scons_scripts": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.numpy_distribution.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.numpy_distribution.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.numpy_distribution.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.pathccompiler": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.pathccompiler.PathScaleCCompiler": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "distutils.unixccompiler.UnixCCompiler": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.pathccompiler.PathScaleCCompiler.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "distutils.unixccompiler.UnixCCompiler.__init__": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.pathccompiler.UnixCCompiler": {
  "data": {
   "shadows": "distutils.unixccompiler.UnixCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.pathccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.pathccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.pathccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      15
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      17
     ]
    },
    "numpy.distutils.setup.configuration": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.test": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.distutils.tests.f2py_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.f2py_ext.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      11
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      13
     ]
    },
    "numpy.distutils.tests.f2py_ext.setup.configuration": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.f2py_ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.f2py_ext.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      12
     ]
    },
    "run_module_suite": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.TestFib2": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.TestFib2.test_fib": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      10
     ]
    },
    "f2py_ext.fib2.fib": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.fib2": {
  "data": {
   "shadows": "f2py_ext.fib2"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.f2py_f90_ext.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      16
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      18
     ]
    },
    "numpy.distutils.tests.f2py_f90_ext.setup.configuration": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.f2py_f90_ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.f2py_f90_ext.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      11
     ]
    },
    "run_module_suite": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.TestFoo": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.TestFoo.test_foo_free": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      9
     ]
    },
    "f2py_f90_ext.foo.foo_free.bar13": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.foo": {
  "data": {
   "shadows": "f2py_f90_ext.foo"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.gen_ext.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      46
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      48
     ]
    },
    "numpy.distutils.tests.gen_ext.setup.configuration": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.gen_ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup.configuration": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      40
     ]
    },
    "numpy.distutils.tests.gen_ext.setup.source_func": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.gen_ext.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup.fib3_f": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.distutils.tests.gen_ext.setup.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup.source_func": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "distutils.dep_util.newer": {
     "line number": [
      32
     ]
    },
    "numpy.distutils.tests.gen_ext.setup.fib3_f": {
     "line number": [
      34
     ]
    },
    "numpy.distutils.tests.gen_ext.setup.os": {
     "line number": [
      31
     ]
    },
    "open": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      11
     ]
    },
    "run_module_suite": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.TestFib3": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.TestFib3.test_fib": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      9
     ]
    },
    "gen_ext.fib3.fib": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.fib3": {
  "data": {
   "shadows": "gen_ext.fib3"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.pyrex_ext.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      12
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      14
     ]
    },
    "numpy.distutils.tests.pyrex_ext.setup.configuration": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.pyrex_ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.pyrex_ext.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      13
     ]
    },
    "run_module_suite": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.TestPrimes": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.TestPrimes.test_simple": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      10
     ]
    },
    "pyrex_ext.primes.primes": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.primes": {
  "data": {
   "shadows": "pyrex_ext.primes.primes"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      14
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      16
     ]
    },
    "numpy.distutils.tests.setup.configuration": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.swig_ext.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      18
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      20
     ]
    },
    "numpy.distutils.tests.swig_ext.setup.configuration": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.swig_ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.swig_ext.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      17
     ]
    },
    "run_module_suite": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.TestExample": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.TestExample.test_cvar": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      12,
      14
     ]
    },
    "swig_ext.example.cvar.My_variable": {
     "line number": [
      12,
      13,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.TestExample.test_fact": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      9
     ]
    },
    "swig_ext.example.fact": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.example": {
  "data": {
   "shadows": "swig_ext.example"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      15
     ]
    },
    "run_module_suite": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.TestExample2": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.TestExample2.test_zoo": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "swig_ext.example2.Zoo": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.example2": {
  "data": {
   "shadows": "swig_ext.example2"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command": {
  "data": {
   "symbols_in_volume": {
    "numpy.distutils.tests.test_exec_command.sys": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_exec_command.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.TemporaryFile": {
  "data": {
   "shadows": "tempfile.TemporaryFile"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "object": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix.__enter__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "numpy.distutils.tests.test_exec_command.os": {
     "line number": [
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix.__exit__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "numpy.distutils.tests.test_exec_command.os": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "object": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr.__enter__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.distutils.tests.test_exec_command.sys": {
     "line number": [
      37,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr.__exit__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "numpy.distutils.tests.test_exec_command.sys": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "numpy.distutils.tests.test_exec_command.sys": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "object": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout.__enter__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.distutils.tests.test_exec_command.sys": {
     "line number": [
      22,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout.__exit__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.distutils.tests.test_exec_command.sys": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "numpy.distutils.tests.test_exec_command.sys": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.test_exec_command_stderr": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "StringIO.StringIO": {
     "line number": [
      84,
      91
     ]
    },
    "numpy.distutils.exec_command.exec_command": {
     "line number": [
      85,
      92
     ]
    },
    "numpy.distutils.tests.test_exec_command.emulate_nonposix": {
     "line number": [
      89
     ]
    },
    "numpy.distutils.tests.test_exec_command.os": {
     "line number": [
      87
     ]
    },
    "numpy.distutils.tests.test_exec_command.redirect_stderr": {
     "line number": [
      84,
      91
     ]
    },
    "numpy.distutils.tests.test_exec_command.redirect_stdout": {
     "line number": [
      83,
      90
     ]
    },
    "tempfile.TemporaryFile": {
     "line number": [
      83,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.test_exec_command_stdout": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "StringIO.StringIO": {
     "line number": [
      70,
      77
     ]
    },
    "numpy.distutils.exec_command.exec_command": {
     "line number": [
      72,
      79
     ]
    },
    "numpy.distutils.tests.test_exec_command.emulate_nonposix": {
     "line number": [
      76
     ]
    },
    "numpy.distutils.tests.test_exec_command.os": {
     "line number": [
      74
     ]
    },
    "numpy.distutils.tests.test_exec_command.redirect_stderr": {
     "line number": [
      71,
      78
     ]
    },
    "numpy.distutils.tests.test_exec_command.redirect_stdout": {
     "line number": [
      70,
      77
     ]
    },
    "tempfile.TemporaryFile": {
     "line number": [
      71,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      52
     ]
    },
    "run_module_suite": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions.test_g77_version": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      30
     ]
    },
    "numpy.distutils.tests.test_fcompiler_gnu.g77_version_strings": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions.test_not_g77": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      36
     ]
    },
    "numpy.distutils.tests.test_fcompiler_gnu.gfortran_version_strings": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGortranVersions": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGortranVersions.test_gfortran_version": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      43
     ]
    },
    "numpy.distutils.tests.test_fcompiler_gnu.gfortran_version_strings": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGortranVersions.test_not_gfortran": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      49
     ]
    },
    "numpy.distutils.tests.test_fcompiler_gnu.g77_version_strings": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.g77_version_strings": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.gfortran_version_strings": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.numpy.distutils.fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_intel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      35
     ]
    },
    "run_module_suite": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelEM64TFCompilerVersions": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelEM64TFCompilerVersions.test_64bit_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      32
     ]
    },
    "numpy.distutils.tests.test_fcompiler_intel.intel_64bit_version_strings": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelFCompilerVersions": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelFCompilerVersions.test_32bit_version": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      24
     ]
    },
    "numpy.distutils.tests.test_fcompiler_intel.intel_32bit_version_strings": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_intel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_intel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_intel.intel_32bit_version_strings": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_intel.intel_64bit_version_strings": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_intel.numpy.distutils.fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_intel.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      74
     ]
    },
    "os.path.join": {
     "line number": [
      9
     ]
    },
    "os.path.sep": {
     "line number": [
      9
     ]
    },
    "run_module_suite": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath.test_1": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      14,
      15,
      16,
      17
     ]
    },
    "numpy.distutils.misc_util.appendpath": {
     "line number": [
      14,
      15,
      16,
      17
     ]
    },
    "numpy.distutils.tests.test_misc_util.ajoin": {
     "line number": [
      15,
      16
     ]
    },
    "os.path.join": {
     "line number": [
      14,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath.test_2": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      20,
      22,
      24
     ]
    },
    "numpy.distutils.misc_util.appendpath": {
     "line number": [
      20,
      22,
      24
     ]
    },
    "numpy.distutils.tests.test_misc_util.ajoin": {
     "line number": [
      25
     ]
    },
    "os.path.join": {
     "line number": [
      21,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath.test_3": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      28,
      30,
      32
     ]
    },
    "numpy.distutils.misc_util.appendpath": {
     "line number": [
      28,
      30,
      32
     ]
    },
    "numpy.distutils.tests.test_misc_util.ajoin": {
     "line number": [
      29,
      31,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestGpaths": {
  "data": {
   "lineno": 49
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestGpaths.test_gpaths": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      54,
      56
     ]
    },
    "numpy.distutils.misc_util.gpaths": {
     "line number": [
      53,
      55
     ]
    },
    "numpy.distutils.misc_util.minrelpath": {
     "line number": [
      52
     ]
    },
    "os.path.dirname": {
     "line number": [
      52
     ]
    },
    "os.path.join": {
     "line number": [
      52,
      54,
      56
     ]
    },
    "repr": {
     "line number": [
      54,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestMinrelpath": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestMinrelpath.test_1": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47
     ]
    },
    "n": {
     "line number": [
      39,
      39,
      41,
      42,
      43,
      44,
      45,
      45,
      46,
      46,
      47,
      47
     ]
    },
    "numpy.distutils.misc_util.minrelpath": {
     "line number": [
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47
     ]
    },
    "os.path.sep": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestSharedExtension": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestSharedExtension.test_get_shared_lib_extension": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      72
     ]
    },
    "assert_equal": {
     "line number": [
      64,
      66,
      68,
      70
     ]
    },
    "numpy.distutils.misc_util.get_shared_lib_extension": {
     "line number": [
      62,
      72
     ]
    },
    "numpy.distutils.tests.test_misc_util.sys": {
     "line number": [
      63,
      65,
      67,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.ajoin": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_misc_util.appendpath": {
  "data": {
   "shadows": "numpy.distutils.misc_util.appendpath"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.get_shared_lib_extension": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_shared_lib_extension"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.gpaths": {
  "data": {
   "shadows": "numpy.distutils.misc_util.gpaths"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.minrelpath": {
  "data": {
   "shadows": "numpy.distutils.misc_util.minrelpath"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo.test_simple": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.distutils.npy_pkg_config.read_config": {
     "line number": [
      50
     ]
    },
    "numpy.distutils.tests.test_npy_pkg_config.os": {
     "line number": [
      44,
      46,
      48,
      56
     ]
    },
    "numpy.distutils.tests.test_npy_pkg_config.simple": {
     "line number": [
      46
     ]
    },
    "numpy.distutils.tests.test_npy_pkg_config.simple_d": {
     "line number": [
      51,
      52,
      53,
      54
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo.test_simple_variable": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "numpy.distutils.npy_pkg_config.read_config": {
     "line number": [
      67
     ]
    },
    "numpy.distutils.tests.test_npy_pkg_config.os": {
     "line number": [
      61,
      63,
      65,
      76
     ]
    },
    "numpy.distutils.tests.test_npy_pkg_config.simple_variable": {
     "line number": [
      63
     ]
    },
    "numpy.distutils.tests.test_npy_pkg_config.simple_variable_d": {
     "line number": [
      68,
      69,
      70,
      71
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags.test_simple_cflags": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "numpy.distutils.npy_pkg_config.parse_flags": {
     "line number": [
      80,
      83,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags.test_simple_lflags": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "numpy.distutils.npy_pkg_config.parse_flags": {
     "line number": [
      92,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.mkstemp": {
  "data": {
   "shadows": "tempfile.mkstemp"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.parse_flags": {
  "data": {
   "shadows": "numpy.distutils.npy_pkg_config.parse_flags"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.read_config": {
  "data": {
   "shadows": "numpy.distutils.npy_pkg_config.read_config"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple_d": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple_variable": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple_variable_d": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.distutils.unixccompiler": {
  "data": {
   "symbols_in_volume": {
    "numpy.distutils.ccompiler.replace_method": {
     "line number": [
      42,
      112
     ]
    },
    "numpy.distutils.unixccompiler.UnixCCompiler__compile": {
     "line number": [
      42
     ]
    },
    "numpy.distutils.unixccompiler.UnixCCompiler_create_static_lib": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.distutils.unixccompiler.CompileError": {
  "data": {
   "shadows": "distutils.errors.CompileError"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.DistutilsExecError": {
  "data": {
   "shadows": "distutils.errors.DistutilsExecError"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.UnixCCompiler__compile": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "distutils.errors.CompileError": {
     "line number": [
      40
     ]
    },
    "distutils.errors.DistutilsExecError": {
     "line number": [
      38
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      39
     ]
    },
    "numpy.distutils.unixccompiler.os": {
     "line number": [
      34
     ]
    },
    "str": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.unixccompiler.UnixCCompiler_create_static_lib": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      81
     ]
    },
    "LibError": {
     "line number": [
      107
     ]
    },
    "OSError": {
     "line number": [
      81
     ]
    },
    "distutils.errors.DistutilsExecError": {
     "line number": [
      105
     ]
    },
    "len": {
     "line number": [
      90
     ]
    },
    "numpy.distutils.compat.get_exception": {
     "line number": [
      106
     ]
    },
    "numpy.distutils.log.debug": {
     "line number": [
      109
     ]
    },
    "numpy.distutils.unixccompiler.os": {
     "line number": [
      80,
      83,
      89,
      100
     ]
    },
    "str": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.distutils.unixccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.replace_method": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.replace_method"
  },
  "type": "import"
 },
 "numpy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc": {
  "data": {
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      11
     ]
    },
    "__name__": {
     "line number": [
      11
     ]
    },
    "numpy.doc.__all__": {
     "line number": [
      10,
      26,
      28
     ]
    },
    "numpy.doc.os": {
     "line number": [
      5,
      5,
      7
     ]
    },
    "numpy.doc.ref_dir": {
     "line number": [
      7,
      13
     ]
    },
    "sorted": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.doc.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.doc.__doc__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.doc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.basics": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.basics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.basics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.basics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.broadcasting": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.broadcasting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.broadcasting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.broadcasting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.byteswapping": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.byteswapping.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.byteswapping.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.byteswapping.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.creation": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.creation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.creation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.creation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.glossary": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.glossary.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.glossary.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.glossary.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.howtofind": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.howtofind.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.howtofind.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.howtofind.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.indexing": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.indexing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.indexing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.indexing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.internals": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.internals.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.internals.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.internals.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.io": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.jargon": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.jargon.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.jargon.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.jargon.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.methods_vs_functions": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.methods_vs_functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.methods_vs_functions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.methods_vs_functions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.misc": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.misc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.misc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.doc.performance": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.performance.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.performance.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.performance.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.ref_dir": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.doc.structured_arrays": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.structured_arrays.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.structured_arrays.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.structured_arrays.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.subclassing": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.subclassing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.subclassing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.subclassing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.ufuncs": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.ufuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.ufuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.ufuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.dual": {
  "data": {
   "symbols_in_volume": {
    "numpy.fft.fft": {
     "line number": [
      30
     ]
    },
    "numpy.fft.fft2": {
     "line number": [
      34
     ]
    },
    "numpy.fft.fftn": {
     "line number": [
      32
     ]
    },
    "numpy.fft.ifft": {
     "line number": [
      31
     ]
    },
    "numpy.fft.ifft2": {
     "line number": [
      35
     ]
    },
    "numpy.fft.ifftn": {
     "line number": [
      33
     ]
    },
    "numpy.linalg.cholesky": {
     "line number": [
      48
     ]
    },
    "numpy.linalg.det": {
     "line number": [
      41
     ]
    },
    "numpy.linalg.eig": {
     "line number": [
      42
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      44
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      43
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      45
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      38
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      46
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      37
     ]
    },
    "numpy.linalg.pinv": {
     "line number": [
      47
     ]
    },
    "numpy.linalg.solve": {
     "line number": [
      40
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.dual.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.dual._restore_dict": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.dual.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.dual.cholesky": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.dual.det": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.dual.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.dual.eig": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.dual.eigh": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.dual.eigvals": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.dual.eigvalsh": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.dual.fft": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.dual.fft2": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.dual.fftn": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.dual.fftpkg": {
  "data": {
   "shadows": "numpy.fft"
  },
  "type": "import"
 },
 "numpy.dual.i0": {
  "data": {
   "shadows": "numpy.lib.i0"
  },
  "type": "import"
 },
 "numpy.dual.ifft": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.dual.ifft2": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.dual.ifftn": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.dual.inv": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.dual.linpkg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.dual.lstsq": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "numpy.dual.norm": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.dual.pinv": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.dual.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.dual.register_func": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      54
     ]
    },
    "numpy.dual.__all__": {
     "line number": [
      53
     ]
    },
    "numpy.dual._restore_dict": {
     "line number": [
      56
     ]
    },
    "numpy.dual.sys": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.dual.restore_all": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "numpy.dual._restore_dict": {
     "line number": [
      70
     ]
    },
    "numpy.dual.restore_func": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.dual.restore_func": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      64
     ]
    },
    "ValueError": {
     "line number": [
      61
     ]
    },
    "numpy.dual.__all__": {
     "line number": [
      60
     ]
    },
    "numpy.dual._restore_dict": {
     "line number": [
      63
     ]
    },
    "numpy.dual.sys": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.dual.solve": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.dual.svd": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.dual.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py": {
  "data": {
   "symbols_in_volume": {
    "numpy.testing.Tester": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.f2py.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.f2py.__version__": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      9
     ]
    },
    "ValueError": {
     "line number": [
      9
     ]
    },
    "__svn_version__.version": {
     "line number": [
      7,
      8,
      10
     ]
    },
    "numpy.f2py.__version__.major": {
     "line number": [
      7,
      10
     ]
    },
    "numpy.f2py.__version__.version_info": {
     "line number": [
      8
     ]
    },
    "str": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.__version__.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.__version__.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.__version__.major": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.f2py.__version__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.__version__.version": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.f2py.__version__.version_info": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.f2py.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.bench": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps": {
  "data": {
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      197
     ]
    },
    "errmess": {
     "line number": [
      195,
      198
     ]
    },
    "eval": {
     "line number": [
      179
     ]
    },
    "list": {
     "line number": [
      195
     ]
    },
    "numpy.f2py.capi_maps.__version__": {
     "line number": [
      19
     ]
    },
    "numpy.f2py.capi_maps.c2buildvalue_map": {
     "line number": [
      146
     ]
    },
    "numpy.f2py.capi_maps.c2py_map": {
     "line number": [
      189,
      195
     ]
    },
    "numpy.f2py.capi_maps.d": {
     "line number": [
      181,
      184,
      184,
      185,
      188,
      189,
      191,
      192,
      193,
      195,
      195
     ]
    },
    "numpy.f2py.capi_maps.f": {
     "line number": [
      179,
      180
     ]
    },
    "numpy.f2py.capi_maps.f2cmap_all": {
     "line number": [
      186,
      187,
      190,
      191,
      192
     ]
    },
    "numpy.f2py.capi_maps.os": {
     "line number": [
      169
     ]
    },
    "numpy.f2py.capi_maps.sys": {
     "line number": [
      144
     ]
    },
    "numpy.f2py.capi_maps.using_newcore": {
     "line number": [
      73,
      112,
      148
     ]
    },
    "open": {
     "line number": [
      178
     ]
    },
    "outmess": {
     "line number": [
      177,
      191,
      193,
      196
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.capi_maps.__version__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.c2buildvalue_map": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.c2capi_map": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.c2py_map": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.c2pycode_map": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.cb_routsign2map": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": {
    "gentitle": {
     "line number": [
      696,
      697
     ]
    },
    "hasnote": {
     "line number": [
      721,
      735,
      749
     ]
    },
    "iscomplexfunction": {
     "line number": [
      704,
      726
     ]
    },
    "isfunction": {
     "line number": [
      716,
      749
     ]
    },
    "isintent_callback": {
     "line number": [
      681
     ]
    },
    "isintent_in": {
     "line number": [
      743
     ]
    },
    "isintent_inout": {
     "line number": [
      743
     ]
    },
    "isoptional": {
     "line number": [
      745
     ]
    },
    "isstringfunction": {
     "line number": [
      714
     ]
    },
    "l_or": {
     "line number": [
      743
     ]
    },
    "numpy.f2py.capi_maps.cformat_map": {
     "line number": [
      712,
      713
     ]
    },
    "numpy.f2py.capi_maps.getctype": {
     "line number": [
      698
     ]
    },
    "numpy.f2py.capi_maps.getpydocsign": {
     "line number": [
      725
     ]
    },
    "numpy.f2py.capi_maps.getstrlength": {
     "line number": [
      715
     ]
    },
    "repr": {
     "line number": [
      747,
      748
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.cb_sign2map": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "dictappend": {
     "line number": [
      667
     ]
    },
    "hasnote": {
     "line number": [
      669
     ]
    },
    "isarray": {
     "line number": [
      666
     ]
    },
    "numpy.f2py.capi_maps.c2capi_map": {
     "line number": [
      662,
      663
     ]
    },
    "numpy.f2py.capi_maps.cformat_map": {
     "line number": [
      664,
      665
     ]
    },
    "numpy.f2py.capi_maps.getarrdims": {
     "line number": [
      667
     ]
    },
    "numpy.f2py.capi_maps.getctype": {
     "line number": [
      661
     ]
    },
    "numpy.f2py.capi_maps.getpydocsign": {
     "line number": [
      668
     ]
    },
    "str": {
     "line number": [
      660
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.cformat_map": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.common_sign2map": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": {
    "dictappend": {
     "line number": [
      764
     ]
    },
    "hasnote": {
     "line number": [
      769
     ]
    },
    "isarray": {
     "line number": [
      763
     ]
    },
    "isstring": {
     "line number": [
      765
     ]
    },
    "isstringarray": {
     "line number": [
      757
     ]
    },
    "numpy.f2py.capi_maps.c2capi_map": {
     "line number": [
      759,
      760
     ]
    },
    "numpy.f2py.capi_maps.cformat_map": {
     "line number": [
      761,
      762
     ]
    },
    "numpy.f2py.capi_maps.getarrdims": {
     "line number": [
      764
     ]
    },
    "numpy.f2py.capi_maps.getarrdocsign": {
     "line number": [
      772
     ]
    },
    "numpy.f2py.capi_maps.getctype": {
     "line number": [
      756
     ]
    },
    "numpy.f2py.capi_maps.getpydocsign": {
     "line number": [
      768
     ]
    },
    "numpy.f2py.capi_maps.getstrlength": {
     "line number": [
      766
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.d": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.depargs": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.f": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.f2cmap_all": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.f2py_version": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.getarrdims": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "errmess": {
     "line number": [
      339
     ]
    },
    "eval": {
     "line number": [
      307
     ]
    },
    "isarray": {
     "line number": [
      294,
      302
     ]
    },
    "isintent_in": {
     "line number": [
      334
     ]
    },
    "isscalar": {
     "line number": [
      298
     ]
    },
    "isstring": {
     "line number": [
      294
     ]
    },
    "len": {
     "line number": [
      310,
      311,
      312
     ]
    },
    "numpy.f2py.capi_maps.copy": {
     "line number": [
      305
     ]
    },
    "numpy.f2py.capi_maps.d": {
     "line number": [
      324,
      326,
      327,
      330,
      332,
      333,
      336,
      339
     ]
    },
    "numpy.f2py.capi_maps.depargs": {
     "line number": [
      314,
      316,
      320,
      320
     ]
    },
    "numpy.f2py.capi_maps.getstrlength": {
     "line number": [
      295
     ]
    },
    "numpy.f2py.capi_maps.re": {
     "line number": [
      317
     ]
    },
    "outmess": {
     "line number": [
      335
     ]
    },
    "range": {
     "line number": [
      312
     ]
    },
    "repr": {
     "line number": [
      307,
      310,
      311,
      339,
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.getarrdocsign": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "isarray": {
     "line number": [
      412,
      417
     ]
    },
    "isscalar": {
     "line number": [
      414
     ]
    },
    "isstring": {
     "line number": [
      412
     ]
    },
    "len": {
     "line number": [
      419
     ]
    },
    "numpy.f2py.capi_maps.c2py_map": {
     "line number": [
      415
     ]
    },
    "numpy.f2py.capi_maps.c2pycode_map": {
     "line number": [
      416,
      421
     ]
    },
    "numpy.f2py.capi_maps.getctype": {
     "line number": [
      411
     ]
    },
    "numpy.f2py.capi_maps.getstrlength": {
     "line number": [
      413
     ]
    },
    "repr": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.getctype": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      243,
      250,
      255
     ]
    },
    "errmess": {
     "line number": [
      232,
      244,
      256,
      262
     ]
    },
    "isexternal": {
     "line number": [
      261
     ]
    },
    "isfunction": {
     "line number": [
      224
     ]
    },
    "issubroutine": {
     "line number": [
      233
     ]
    },
    "numpy.f2py.capi_maps.f2cmap_all": {
     "line number": [
      235,
      237,
      246,
      247,
      251,
      252
     ]
    },
    "numpy.f2py.capi_maps.os": {
     "line number": [
      258
     ]
    },
    "str": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.getinit": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      442
     ]
    },
    "eval": {
     "line number": [
      439
     ]
    },
    "hasinitvalue": {
     "line number": [
      428
     ]
    },
    "isarray": {
     "line number": [
      443
     ]
    },
    "iscomplex": {
     "line number": [
      431
     ]
    },
    "iscomplexarray": {
     "line number": [
      431
     ]
    },
    "isstring": {
     "line number": [
      426,
      445
     ]
    },
    "markoutercomma": {
     "line number": [
      437
     ]
    },
    "str": {
     "line number": [
      440,
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.getpydocsign": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "errmess": {
     "line number": [
      355,
      407
     ]
    },
    "hasinitvalue": {
     "line number": [
      370
     ]
    },
    "isarray": {
     "line number": [
      386
     ]
    },
    "isexternal": {
     "line number": [
      398
     ]
    },
    "isfunction": {
     "line number": [
      347
     ]
    },
    "isintent_in": {
     "line number": [
      359
     ]
    },
    "isintent_inout": {
     "line number": [
      360,
      374,
      381
     ]
    },
    "isintent_out": {
     "line number": [
      362
     ]
    },
    "isscalar": {
     "line number": [
      373
     ]
    },
    "isstring": {
     "line number": [
      380
     ]
    },
    "len": {
     "line number": [
      388
     ]
    },
    "numpy.f2py.capi_maps.c2py_map": {
     "line number": [
      375,
      378,
      379
     ]
    },
    "numpy.f2py.capi_maps.c2pycode_map": {
     "line number": [
      376,
      390,
      394,
      397
     ]
    },
    "numpy.f2py.capi_maps.getctype": {
     "line number": [
      368
     ]
    },
    "numpy.f2py.capi_maps.getinit": {
     "line number": [
      371
     ]
    },
    "numpy.f2py.capi_maps.getstrlength": {
     "line number": [
      382,
      384,
      385
     ]
    },
    "numpy.f2py.capi_maps.lcb2_map": {
     "line number": [
      400,
      400,
      401
     ]
    },
    "numpy.f2py.capi_maps.lcb_map": {
     "line number": [
      400,
      400,
      400,
      401
     ]
    },
    "repr": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.getstrlength": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "errmess": {
     "line number": [
      274,
      276,
      287
     ]
    },
    "isintent_hide": {
     "line number": [
      286
     ]
    },
    "isstring": {
     "line number": [
      275
     ]
    },
    "isstringfunction": {
     "line number": [
      266
     ]
    },
    "len": {
     "line number": [
      277,
      281,
      283,
      284,
      284,
      288,
      289
     ]
    },
    "numpy.f2py.capi_maps.re": {
     "line number": [
      284,
      284
     ]
    },
    "repr": {
     "line number": [
      276,
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.lcb2_map": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.lcb_map": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.modsign2map": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "getpymethoddef": {
     "line number": [
      648
     ]
    },
    "getrestdoc": {
     "line number": [
      638
     ]
    },
    "getusercode": {
     "line number": [
      642,
      645
     ]
    },
    "getusercode1": {
     "line number": [
      643
     ]
    },
    "hasnote": {
     "line number": [
      639
     ]
    },
    "ismodule": {
     "line number": [
      630
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.routsign2map": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "debugcapi": {
     "line number": [
      611
     ]
    },
    "errmess": {
     "line number": [
      593,
      610,
      619
     ]
    },
    "gentitle": {
     "line number": [
      564,
      565
     ]
    },
    "getcallprotoargument": {
     "line number": [
      594
     ]
    },
    "getcallstatement": {
     "line number": [
      568
     ]
    },
    "getfortranname": {
     "line number": [
      559
     ]
    },
    "getusercode": {
     "line number": [
      569
     ]
    },
    "getusercode1": {
     "line number": [
      570
     ]
    },
    "hasnote": {
     "line number": [
      621
     ]
    },
    "hasresultnote": {
     "line number": [
      603
     ]
    },
    "isfunction": {
     "line number": [
      595
     ]
    },
    "isstringfunction": {
     "line number": [
      614,
      616
     ]
    },
    "numpy.f2py.capi_maps.c2buildvalue_map": {
     "line number": [
      606,
      607
     ]
    },
    "numpy.f2py.capi_maps.cformat_map": {
     "line number": [
      612,
      613
     ]
    },
    "numpy.f2py.capi_maps.getctype": {
     "line number": [
      602
     ]
    },
    "numpy.f2py.capi_maps.getpydocsign": {
     "line number": [
      601
     ]
    },
    "numpy.f2py.capi_maps.getstrlength": {
     "line number": [
      617
     ]
    },
    "numpy.f2py.capi_maps.lcb_map": {
     "line number": [
      580,
      589,
      594
     ]
    },
    "repr": {
     "line number": [
      593,
      610,
      619
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.sign2map": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "debugcapi": {
     "line number": [
      503
     ]
    },
    "dictappend": {
     "line number": [
      498
     ]
    },
    "errmess": {
     "line number": [
      494
     ]
    },
    "hasinitvalue": {
     "line number": [
      482
     ]
    },
    "hasnote": {
     "line number": [
      547
     ]
    },
    "isarray": {
     "line number": [
      477,
      482,
      497,
      509,
      523
     ]
    },
    "iscomplex": {
     "line number": [
      482,
      507,
      508
     ]
    },
    "iscomplexarray": {
     "line number": [
      510
     ]
    },
    "isexternal": {
     "line number": [
      484,
      513,
      530,
      539
     ]
    },
    "isfunction": {
     "line number": [
      512
     ]
    },
    "isintent_hide": {
     "line number": [
      506
     ]
    },
    "isintent_in": {
     "line number": [
      504
     ]
    },
    "isintent_inout": {
     "line number": [
      505
     ]
    },
    "isintent_out": {
     "line number": [
      462,
      504
     ]
    },
    "isscalar": {
     "line number": [
      508,
      534
     ]
    },
    "isstring": {
     "line number": [
      495,
      509,
      521,
      537,
      544
     ]
    },
    "l_and": {
     "line number": [
      508,
      512
     ]
    },
    "l_not": {
     "line number": [
      508,
      512
     ]
    },
    "len": {
     "line number": [
      519
     ]
    },
    "list": {
     "line number": [
      494
     ]
    },
    "map": {
     "line number": [
      526
     ]
    },
    "markoutercomma": {
     "line number": [
      483
     ]
    },
    "numpy.f2py.capi_maps.c2buildvalue_map": {
     "line number": [
      478,
      479
     ]
    },
    "numpy.f2py.capi_maps.c2capi_map": {
     "line number": [
      500,
      501
     ]
    },
    "numpy.f2py.capi_maps.cformat_map": {
     "line number": [
      535,
      536,
      541,
      542,
      543
     ]
    },
    "numpy.f2py.capi_maps.copy": {
     "line number": [
      499
     ]
    },
    "numpy.f2py.capi_maps.f": {
     "line number": [
      470,
      471
     ]
    },
    "numpy.f2py.capi_maps.getarrdims": {
     "line number": [
      498
     ]
    },
    "numpy.f2py.capi_maps.getctype": {
     "line number": [
      468
     ]
    },
    "numpy.f2py.capi_maps.getinit": {
     "line number": [
      481
     ]
    },
    "numpy.f2py.capi_maps.getpydocsign": {
     "line number": [
      546
     ]
    },
    "numpy.f2py.capi_maps.getstrlength": {
     "line number": [
      496
     ]
    },
    "numpy.f2py.capi_maps.lcb2_map": {
     "line number": [
      488,
      489,
      490,
      491
     ]
    },
    "numpy.f2py.capi_maps.lcb_map": {
     "line number": [
      486,
      487,
      488,
      489,
      490,
      491,
      494
     ]
    },
    "range": {
     "line number": [
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.using_newcore": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules": {
  "data": {
   "symbols_in_volume": {
    "l_and": {
     "line number": [
      180,
      257,
      258,
      260,
      262,
      265,
      266,
      267,
      268,
      273,
      274,
      279,
      280,
      285,
      286,
      296,
      301,
      301,
      302,
      302,
      303,
      303,
      304,
      304,
      321,
      331,
      346,
      373,
      395
     ]
    },
    "l_not": {
     "line number": [
      171,
      180,
      180,
      274,
      280,
      286,
      295,
      301,
      302,
      302,
      304,
      362
     ]
    },
    "l_or": {
     "line number": [
      373
     ]
    },
    "numpy.f2py.cb_rules.pprint": {
     "line number": [
      29
     ]
    },
    "numpy.f2py.cb_rules.sys": {
     "line number": [
      27,
      28
     ]
    },
    "throw_error": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.cb_rules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.buildcallback": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "applyrules": {
     "line number": [
      428,
      440,
      452,
      464,
      516
     ]
    },
    "dictappend": {
     "line number": [
      424,
      429,
      441,
      453,
      465
     ]
    },
    "enumerate": {
     "line number": [
      431
     ]
    },
    "getargs": {
     "line number": [
      420
     ]
    },
    "isinstance": {
     "line number": [
      469,
      485,
      502,
      505,
      518
     ]
    },
    "isoptional": {
     "line number": [
      437
     ]
    },
    "isrequired": {
     "line number": [
      449
     ]
    },
    "list": {
     "line number": [
      469,
      485,
      502,
      505
     ]
    },
    "numpy.f2py.cb_rules.cb_arg_rules": {
     "line number": [
      434,
      446,
      458
     ]
    },
    "numpy.f2py.cb_rules.cb_map": {
     "line number": [
      425
     ]
    },
    "numpy.f2py.cb_rules.cb_rout_rules": {
     "line number": [
      426
     ]
    },
    "numpy.f2py.cb_rules.cb_routine_rules": {
     "line number": [
      516
     ]
    },
    "numpy.f2py.cb_rules.outmess": {
     "line number": [
      419,
      536
     ]
    },
    "replace": {
     "line number": [
      486,
      487,
      491,
      493
     ]
    },
    "str": {
     "line number": [
      518
     ]
    },
    "stripcomma": {
     "line number": [
      486,
      487,
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.cb_rules.buildcallbacks": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "numpy.f2py.cb_rules.buildcallback": {
     "line number": [
      411
     ]
    },
    "numpy.f2py.cb_rules.cb_map": {
     "line number": [
      406
     ]
    },
    "numpy.f2py.cb_rules.errmess": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.cb_rules.cb_arg_rules": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.cb_map": {
  "data": {
   "lineno": 403
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.cb_rout_rules": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.cb_routine_rules": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.errmess": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.f2py_version": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.outmess": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.show": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs": {
  "data": {
   "symbols_in_volume": {
    "numpy.f2py.cfuncs.cfuncs": {
     "line number": [
      262,
      536,
      543,
      550,
      591,
      604,
      673,
      684,
      695,
      705,
      737,
      770,
      807,
      827,
      868,
      880,
      903,
      980,
      992,
      994,
      996,
      998,
      1000,
      1002,
      1004,
      1006,
      1008,
      1010,
      1012,
      1015
     ]
    },
    "numpy.f2py.cfuncs.cppmacros": {
     "line number": [
      97,
      108,
      144,
      180,
      214,
      219,
      227,
      233,
      248,
      288,
      289,
      291,
      292,
      294,
      303,
      304,
      305,
      307,
      309,
      311,
      313,
      315,
      317,
      354,
      423,
      438,
      446,
      455,
      459,
      468,
      472,
      488,
      492,
      498,
      504,
      512,
      528,
      529
     ]
    },
    "numpy.f2py.cfuncs.includes": {
     "line number": [
      56,
      58,
      61,
      62
     ]
    },
    "numpy.f2py.cfuncs.includes0": {
     "line number": [
      52,
      53,
      54
     ]
    },
    "numpy.f2py.cfuncs.needs": {
     "line number": [
      57,
      247,
      261,
      290,
      293,
      302,
      306,
      308,
      310,
      312,
      314,
      316,
      353,
      422,
      454,
      471,
      487,
      590,
      603,
      672,
      683,
      694,
      769,
      806,
      867,
      878,
      902,
      979,
      991,
      993,
      995,
      997,
      999,
      1001,
      1003,
      1005,
      1007,
      1009,
      1011,
      1014
     ]
    },
    "numpy.f2py.cfuncs.sys": {
     "line number": [
      25
     ]
    },
    "numpy.f2py.cfuncs.typedefs": {
     "line number": [
      66,
      67,
      68,
      69,
      70,
      78,
      85,
      90,
      91,
      92,
      93
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.cfuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs.append_needs": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1164,
      1180
     ]
    },
    "isinstance": {
     "line number": [
      1132,
      1135,
      1164,
      1180
     ]
    },
    "list": {
     "line number": [
      1132
     ]
    },
    "numpy.f2py.cfuncs.callbacks": {
     "line number": [
      1149
     ]
    },
    "numpy.f2py.cfuncs.cfuncs": {
     "line number": [
      1147
     ]
    },
    "numpy.f2py.cfuncs.commonhooks": {
     "line number": [
      1153
     ]
    },
    "numpy.f2py.cfuncs.cppmacros": {
     "line number": [
      1145
     ]
    },
    "numpy.f2py.cfuncs.errmess": {
     "line number": [
      1156,
      1191
     ]
    },
    "numpy.f2py.cfuncs.f90modhooks": {
     "line number": [
      1151
     ]
    },
    "numpy.f2py.cfuncs.includes": {
     "line number": [
      1139
     ]
    },
    "numpy.f2py.cfuncs.includes0": {
     "line number": [
      1137
     ]
    },
    "numpy.f2py.cfuncs.needs": {
     "line number": [
      1161,
      1162,
      1177,
      1178
     ]
    },
    "numpy.f2py.cfuncs.outneeds": {
     "line number": [
      1158,
      1172,
      1173,
      1173,
      1174
     ]
    },
    "numpy.f2py.cfuncs.typedefs": {
     "line number": [
      1141
     ]
    },
    "numpy.f2py.cfuncs.typedefs_generated": {
     "line number": [
      1143
     ]
    },
    "repr": {
     "line number": [
      1156,
      1191
     ]
    },
    "str": {
     "line number": [
      1135
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.cfuncs.buildcfuncs": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": {
    "numpy.f2py.cfuncs.cppmacros": {
     "line number": [
      1122,
      1125
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.cfuncs.callbacks": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.cfuncs": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.commonhooks": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs.cppmacros": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs.errmess": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.f2py_version": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.f90modhooks": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.get_needs": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1199
     ]
    },
    "map": {
     "line number": [
      1214
     ]
    },
    "numpy.f2py.cfuncs.copy": {
     "line number": [
      1198,
      1220
     ]
    },
    "numpy.f2py.cfuncs.errmess": {
     "line number": [
      1217
     ]
    },
    "numpy.f2py.cfuncs.needs": {
     "line number": [
      1200,
      1206
     ]
    },
    "numpy.f2py.cfuncs.outneeds": {
     "line number": [
      1196,
      1198,
      1199,
      1200,
      1201,
      1202,
      1205,
      1206,
      1210,
      1210,
      1210,
      1212,
      1213,
      1214,
      1215,
      1220
     ]
    },
    "print": {
     "line number": [
      1216
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.cfuncs.includes": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.includes0": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.needs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.outneeds": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs.typedefs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.typedefs_generated": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.userincludes": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules": {
  "data": {
   "symbols_in_volume": {
    "numpy.f2py.common_rules.__version__": {
     "line number": [
      21
     ]
    },
    "numpy.f2py.common_rules.pprint": {
     "line number": [
      27
     ]
    },
    "numpy.f2py.common_rules.sys": {
     "line number": [
      25,
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.common_rules.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.buildhooks": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "cadd": {
     "line number": [
      86,
      96,
      97,
      100,
      101,
      103,
      104,
      109,
      112,
      113,
      115
     ]
    },
    "dadd": {
     "line number": [
      118,
      119,
      121,
      125,
      126
     ]
    },
    "fadd": {
     "line number": [
      76,
      77,
      79,
      81,
      83,
      84,
      85
     ]
    },
    "hasnote": {
     "line number": [
      122
     ]
    },
    "iadd": {
     "line number": [
      116
     ]
    },
    "isinstance": {
     "line number": [
      124
     ]
    },
    "isintent_hide": {
     "line number": [
      70
     ]
    },
    "len": {
     "line number": [
      111,
      131
     ]
    },
    "list": {
     "line number": [
      124
     ]
    },
    "map": {
     "line number": [
      127
     ]
    },
    "numpy.f2py.common_rules.findcommonblocks": {
     "line number": [
      66
     ]
    },
    "numpy.f2py.common_rules.outmess": {
     "line number": [
      73,
      75
     ]
    },
    "rmbadname": {
     "line number": [
      98
     ]
    },
    "vars": {
     "line number": [
      66,
      70,
      79,
      89,
      91,
      121,
      122,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.cadd": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.dadd": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.fadd": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.iadd": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.errmess": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.f2py_version": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.findcommonblocks": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "hasbody": {
     "line number": [
      43
     ]
    },
    "hascommon": {
     "line number": [
      37
     ]
    },
    "vars": {
     "line number": [
      39,
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.outmess": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.show": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.compile": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.distutils.exec_command.exec_command": {
     "line number": [
      42
     ]
    },
    "numpy.f2py.sys": {
     "line number": [
      41
     ]
    },
    "numpy.f2py.tempfile": {
     "line number": [
      31
     ]
    },
    "open": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.diagnose": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      148
     ]
    },
    "numpy.f2py.diagnose.run": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.diagnose.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.build_flib": {
  "data": {
   "shadows": "numpy_distutils.command.build_flib"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.cpuinfo": {
  "data": {
   "shadows": "numpy_distutils.cpuinfo.cpuinfo"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.f2py2e": {
  "data": {
   "shadows": "numpy.f2py.f2py2e"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.fcompiler": {
  "data": {
   "shadows": "numpy_distutils.fcompiler"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.numpy.distutils": {
  "data": {
   "shadows": "numpy.distutils"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.numpy_distutils": {
  "data": {
   "shadows": "numpy_distutils"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.run": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      58,
      66,
      81,
      95,
      98,
      114,
      117,
      132,
      144
     ]
    },
    "ImportError": {
     "line number": [
      32,
      39,
      46,
      50
     ]
    },
    "compiler_class": {
     "line number": [
      93
     ]
    },
    "dir": {
     "line number": [
      140
     ]
    },
    "getattr": {
     "line number": [
      141
     ]
    },
    "numpy.f2py.diagnose.numpy": {
     "line number": [
      57,
      57,
      74,
      75
     ]
    },
    "numpy.f2py.diagnose.numpy_distutils": {
     "line number": [
      78,
      79
     ]
    },
    "numpy.f2py.diagnose.os": {
     "line number": [
      13,
      14,
      16,
      147
     ]
    },
    "numpy.f2py.diagnose.sys": {
     "line number": [
      18,
      21,
      24,
      26,
      33,
      40,
      51
     ]
    },
    "numpy.f2py.diagnose.tempfile": {
     "line number": [
      14
     ]
    },
    "numpy.f2py.f2py2e.__file__": {
     "line number": [
      65
     ]
    },
    "numpy.f2py.f2py2e.__version__.version": {
     "line number": [
      65
     ]
    },
    "numpy_distutils.command.build_flib.all_compilers": {
     "line number": [
      92
     ]
    },
    "numpy_distutils.cpuinfo.cpuinfo": {
     "line number": [
      138,
      140
     ]
    },
    "numpy_distutils.fcompiler.show_fcompilers": {
     "line number": [
      112
     ]
    },
    "print": {
     "line number": [
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      33,
      40,
      51,
      56,
      59,
      60,
      64,
      67,
      68,
      73,
      77,
      80,
      82,
      83,
      86,
      88,
      89,
      91,
      94,
      96,
      97,
      99,
      100,
      103,
      106,
      108,
      109,
      111,
      113,
      115,
      116,
      118,
      119,
      122,
      124,
      125,
      128,
      130,
      131,
      133,
      134,
      136,
      137,
      139,
      142,
      143,
      145,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.diagnose.run_command": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.f2py.diagnose.os": {
     "line number": [
      10
     ]
    },
    "print": {
     "line number": [
      9,
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.diagnose.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.f2py.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.docs.pytest": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py.docs.pytest.Numeric": {
  "data": {
   "shadows": "Numeric"
  },
  "type": "import"
 },
 "numpy.f2py.docs.pytest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.docs.pytest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.docs.pytest.foo": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "numpy.f2py.docs.pytest.Numeric": {
     "line number": [
      6
     ]
    },
    "range": {
     "line number": [
      8,
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.docs.pytest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.docs.usersguide.setup_example": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      13
     ]
    },
    "numpy.f2py.docs.usersguide.setup_example.ext1": {
     "line number": [
      19
     ]
    },
    "numpy.f2py.docs.usersguide.setup_example.ext2": {
     "line number": [
      19
     ]
    },
    "numpy_distutils.core.Extension": {
     "line number": [
      8,
      10
     ]
    },
    "numpy_distutils.core.setup": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.docs.usersguide.setup_example.Extension": {
  "data": {
   "shadows": "numpy_distutils.core.Extension"
  },
  "type": "import"
 },
 "numpy.f2py.docs.usersguide.setup_example.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.docs.usersguide.setup_example.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.docs.usersguide.setup_example.ext1": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.f2py.docs.usersguide.setup_example.ext2": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.f2py.docs.usersguide.setup_example.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.docs.usersguide.setup_example.setup": {
  "data": {
   "shadows": "numpy_distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.f2py.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      40
     ]
    },
    "numpy.__version__": {
     "line number": [
      41,
      173
     ]
    },
    "numpy.f2py.f2py2e.f2py_version": {
     "line number": [
      173
     ]
    },
    "numpy.f2py.f2py2e.pprint": {
     "line number": [
      35
     ]
    },
    "numpy.f2py.f2py2e.sys": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.f2py2e.Extension": {
  "data": {
   "shadows": "numpy.distutils.core.Extension"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.__usage__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.buildmodules": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "len": {
     "line number": [
      311,
      323
     ]
    },
    "numpy.f2py.f2py2e.dict_append": {
     "line number": [
      335
     ]
    },
    "numpy.f2py.f2py2e.outmess": {
     "line number": [
      309,
      325,
      333
     ]
    },
    "range": {
     "line number": [
      311,
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.callcrackfortran": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "numpy.f2py.f2py2e.outmess": {
     "line number": [
      285
     ]
    },
    "numpy.f2py.f2py2e.sys": {
     "line number": [
      288
     ]
    },
    "open": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.dict_append": {
  "data": {
   "shadows": "numpy.distutils.misc_util.dict_append"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.errmess": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.f2py_version": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.filter_files": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "len": {
     "line number": [
      401
     ]
    },
    "match": {
     "line number": [
      405
     ]
    },
    "numpy.f2py.f2py2e.re": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.get_f2py_modulename": {
  "data": {
   "shadows": "numpy.distutils.command.build_src.get_f2py_modulename"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.get_prefix": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "numpy.f2py.f2py2e.os": {
     "line number": [
      410,
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.main": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": {
    "numpy.distutils.system_info.show_all": {
     "line number": [
      591
     ]
    },
    "numpy.f2py.f2py2e.run_compile": {
     "line number": [
      594
     ]
    },
    "numpy.f2py.f2py2e.run_main": {
     "line number": [
      596
     ]
    },
    "numpy.f2py.f2py2e.sys": {
     "line number": [
      588,
      589,
      593,
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.numpy_version": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.outmess": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.run_compile": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      476
     ]
    },
    "ValueError": {
     "line number": [
      424
     ]
    },
    "len": {
     "line number": [
      467,
      471,
      478,
      486,
      527,
      529,
      531
     ]
    },
    "list": {
     "line number": [
      470
     ]
    },
    "numpy.distutils.command.build_src.get_f2py_modulename": {
     "line number": [
      515
     ]
    },
    "numpy.distutils.core.Extension": {
     "line number": [
      569
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      580
     ]
    },
    "numpy.distutils.fcompiler.fcompiler_class.keys": {
     "line number": [
      470
     ]
    },
    "numpy.distutils.fcompiler.load_all_fcompiler_classes": {
     "line number": [
      469
     ]
    },
    "numpy.distutils.misc_util.dict_append": {
     "line number": [
      567
     ]
    },
    "numpy.distutils.system_info.get_info": {
     "line number": [
      563
     ]
    },
    "numpy.f2py.f2py2e.filter_files": {
     "line number": [
      512,
      519,
      520,
      521,
      522,
      523,
      524
     ]
    },
    "numpy.f2py.f2py2e.os": {
     "line number": [
      582
     ]
    },
    "numpy.f2py.f2py2e.outmess": {
     "line number": [
      565,
      584
     ]
    },
    "numpy.f2py.f2py2e.re": {
     "line number": [
      433,
      439,
      456,
      459,
      488
     ]
    },
    "numpy.f2py.f2py2e.shutil": {
     "line number": [
      585
     ]
    },
    "numpy.f2py.f2py2e.sys": {
     "line number": [
      419,
      420,
      423,
      426,
      427,
      428,
      434,
      435,
      435,
      440,
      441,
      441,
      444,
      455,
      455,
      457,
      458,
      458,
      460,
      461,
      461,
      489,
      490,
      490,
      496,
      499,
      500,
      501,
      502,
      502,
      503,
      505,
      506,
      507,
      508,
      508,
      509,
      570,
      570,
      571,
      576,
      578
     ]
    },
    "numpy.f2py.f2py2e.tempfile": {
     "line number": [
      431
     ]
    },
    "print": {
     "line number": [
      478,
      534
     ]
    },
    "range": {
     "line number": [
      527
     ]
    },
    "repr": {
     "line number": [
      486,
      566
     ]
    },
    "tuple": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.run_main": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      383
     ]
    },
    "len": {
     "line number": [
      363,
      369,
      379
     ]
    },
    "numpy.f2py.f2py2e.buildmodules": {
     "line number": [
      388
     ]
    },
    "numpy.f2py.f2py2e.callcrackfortran": {
     "line number": [
      361
     ]
    },
    "numpy.f2py.f2py2e.dict_append": {
     "line number": [
      391
     ]
    },
    "numpy.f2py.f2py2e.errmess": {
     "line number": [
      382
     ]
    },
    "numpy.f2py.f2py2e.imp": {
     "line number": [
      353
     ]
    },
    "numpy.f2py.f2py2e.os": {
     "line number": [
      356,
      356,
      357,
      358,
      377
     ]
    },
    "numpy.f2py.f2py2e.outmess": {
     "line number": [
      373,
      376,
      377
     ]
    },
    "numpy.f2py.f2py2e.scaninputline": {
     "line number": [
      359
     ]
    },
    "numpy.f2py.f2py2e.sys": {
     "line number": [
      351,
      377
     ]
    },
    "range": {
     "line number": [
      363,
      369,
      379
     ]
    },
    "reload": {
     "line number": [
      355
     ]
    },
    "repr": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.scaninputline": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      238
     ]
    },
    "numpy.f2py.f2py2e.__usage__": {
     "line number": [
      243
     ]
    },
    "numpy.f2py.f2py2e.errmess": {
     "line number": [
      226,
      239,
      252
     ]
    },
    "numpy.f2py.f2py2e.f2py_version": {
     "line number": [
      213
     ]
    },
    "numpy.f2py.f2py2e.os": {
     "line number": [
      231,
      245,
      248,
      250,
      251
     ]
    },
    "numpy.f2py.f2py2e.outmess": {
     "line number": [
      221,
      247
     ]
    },
    "numpy.f2py.f2py2e.sys": {
     "line number": [
      214,
      227,
      244,
      253
     ]
    },
    "open": {
     "line number": [
      236
     ]
    },
    "print": {
     "line number": [
      213,
      243
     ]
    },
    "repr": {
     "line number": [
      226
     ]
    },
    "str": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.show": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.show_all": {
  "data": {
   "shadows": "numpy.distutils.system_info.show_all"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py.f2py_testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.cmdline": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "eval": {
     "line number": [
      14
     ]
    },
    "numpy.f2py.f2py_testing.re": {
     "line number": [
      9
     ]
    },
    "numpy.f2py.f2py_testing.sys": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f2py_testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.jiffies": {
  "data": {
   "shadows": "numpy.testing.utils.jiffies"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.memusage": {
  "data": {
   "shadows": "numpy.testing.utils.memusage"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.run": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "len": {
     "line number": [
      42
     ]
    },
    "numpy.testing.utils.jiffies": {
     "line number": [
      25,
      43
     ]
    },
    "numpy.testing.utils.memusage": {
     "line number": [
      23,
      33,
      35,
      41
     ]
    },
    "print": {
     "line number": [
      37,
      42,
      45,
      46
     ]
    },
    "repr": {
     "line number": [
      21
     ]
    },
    "runtest": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f2py_testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.f90mod_rules": {
  "data": {
   "symbols_in_volume": {
    "numpy.f2py.f90mod_rules.pprint": {
     "line number": [
      26
     ]
    },
    "numpy.f2py.f90mod_rules.sys": {
     "line number": [
      24,
      25
     ]
    },
    "numpy.intp": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.f90mod_rules.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.f90mod_rules.buildhooks": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "applyrules": {
     "line number": [
      196
     ]
    },
    "cadd": {
     "line number": [
      118,
      138,
      142,
      144,
      200,
      204
     ]
    },
    "dadd": {
     "line number": [
      119,
      123,
      125,
      145,
      149,
      170,
      235
     ]
    },
    "dictappend": {
     "line number": [
      199
     ]
    },
    "eval": {
     "line number": [
      160
     ]
    },
    "fadd": {
     "line number": [
      156,
      157,
      158,
      161,
      163,
      219,
      220,
      224,
      226,
      227,
      228,
      231,
      232,
      233
     ]
    },
    "hasbody": {
     "line number": [
      102,
      171
     ]
    },
    "hasnote": {
     "line number": [
      120,
      146
     ]
    },
    "iadd": {
     "line number": [
      155,
      168,
      203,
      205,
      211,
      213,
      214,
      216
     ]
    },
    "isallocatable": {
     "line number": [
      150
     ]
    },
    "isfunction": {
     "line number": [
      179
     ]
    },
    "isinstance": {
     "line number": [
      122,
      148
     ]
    },
    "isroutine": {
     "line number": [
      173
     ]
    },
    "isstringarray": {
     "line number": [
      136
     ]
    },
    "l_or": {
     "line number": [
      106
     ]
    },
    "len": {
     "line number": [
      245
     ]
    },
    "list": {
     "line number": [
      122,
      148
     ]
    },
    "numpy.f2py.f90mod_rules.fgetdims1": {
     "line number": [
      159
     ]
    },
    "numpy.f2py.f90mod_rules.fgetdims2": {
     "line number": [
      135
     ]
    },
    "numpy.f2py.f90mod_rules.fgetdims2_sa": {
     "line number": [
      140
     ]
    },
    "numpy.f2py.f90mod_rules.findf90modules": {
     "line number": [
      97
     ]
    },
    "numpy.f2py.f90mod_rules.outmess": {
     "line number": [
      109,
      111
     ]
    },
    "print": {
     "line number": [
      174
     ]
    },
    "undo_rmbadname": {
     "line number": [
      223,
      230,
      232,
      239
     ]
    },
    "undo_rmbadname1": {
     "line number": [
      139,
      142,
      144,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.cadd": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.dadd": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.fadd": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.iadd": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.f90mod_rules.errmess": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.f2py_version": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.fgetdims1": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.fgetdims2": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.fgetdims2_sa": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.findf90modules": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "hasbody": {
     "line number": [
      38
     ]
    },
    "ismodule": {
     "line number": [
      37,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.f2py.f90mod_rules.options": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.outmess": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.f90mod_rules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.f90mod_rules.show": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr": {
  "data": {
   "symbols_in_volume": {
    "numpy.f2py.func2subr.pprint": {
     "line number": [
      27
     ]
    },
    "numpy.f2py.func2subr.sys": {
     "line number": [
      25,
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.func2subr.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.assubr": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "getfortranname": {
     "line number": [
      262,
      286
     ]
    },
    "isfunction_wrap": {
     "line number": [
      261
     ]
    },
    "isintent_out": {
     "line number": [
      272
     ]
    },
    "issubroutine_wrap": {
     "line number": [
      285
     ]
    },
    "numpy.f2py.func2subr.copy": {
     "line number": [
      265,
      289
     ]
    },
    "numpy.f2py.func2subr.createfuncwrapper": {
     "line number": [
      284
     ]
    },
    "numpy.f2py.func2subr.createsubrwrapper": {
     "line number": [
      290
     ]
    },
    "numpy.f2py.func2subr.outmess": {
     "line number": [
      264,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.createfuncwrapper": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "add": {
     "line number": [
      121,
      123,
      125,
      127,
      132,
      138,
      143,
      148,
      152,
      154,
      161,
      162,
      163,
      169,
      171,
      173,
      175
     ]
    },
    "bool": {
     "line number": [
      94
     ]
    },
    "dict": {
     "line number": [
      88
     ]
    },
    "enumerate": {
     "line number": [
      85
     ]
    },
    "getfortranname": {
     "line number": [
      100
     ]
    },
    "isexternal": {
     "line number": [
      137
     ]
    },
    "isfunction": {
     "line number": [
      79
     ]
    },
    "isintent_in": {
     "line number": [
      147
     ]
    },
    "islogicalfunction": {
     "line number": [
      168
     ]
    },
    "ismoduleroutine": {
     "line number": [
      101
     ]
    },
    "isscalar": {
     "line number": [
      142
     ]
    },
    "numpy.f2py.func2subr.var2fixfortran": {
     "line number": [
      110,
      143,
      148,
      152
     ]
    },
    "vars": {
     "line number": [
      82,
      91,
      104,
      105,
      105,
      110,
      116,
      137,
      142,
      143,
      147,
      148,
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.createfuncwrapper.add": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.createsubrwrapper": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "add": {
     "line number": [
      210,
      212,
      214,
      216,
      221,
      226,
      231,
      235,
      242,
      243,
      244,
      249,
      251,
      253
     ]
    },
    "bool": {
     "line number": [
      197
     ]
    },
    "dict": {
     "line number": [
      191
     ]
    },
    "enumerate": {
     "line number": [
      188
     ]
    },
    "getfortranname": {
     "line number": [
      203
     ]
    },
    "isexternal": {
     "line number": [
      225
     ]
    },
    "ismoduleroutine": {
     "line number": [
      204
     ]
    },
    "isscalar": {
     "line number": [
      230
     ]
    },
    "issubroutine": {
     "line number": [
      182
     ]
    },
    "numpy.f2py.func2subr.var2fixfortran": {
     "line number": [
      231,
      235
     ]
    },
    "vars": {
     "line number": [
      185,
      194,
      225,
      230,
      231,
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.createsubrwrapper.add": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.errmess": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.f2py_version": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.outmess": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.show": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.var2fixfortran": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.f2py.func2subr.outmess": {
     "line number": [
      35,
      39
     ]
    },
    "numpy.f2py.func2subr.show": {
     "line number": [
      34,
      38
     ]
    },
    "vars": {
     "line number": [
      33,
      34,
      37,
      38,
      41,
      42,
      43,
      46,
      47,
      49,
      50,
      74,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.info": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.info.postpone_import": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.f2py.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.main": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.f2py.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.rules": {
  "data": {
   "symbols_in_volume": {
    "gentitle": {
     "line number": [
      116,
      120,
      124,
      127,
      130,
      133,
      136,
      139,
      145,
      148,
      151,
      154,
      157,
      159,
      162
     ]
    },
    "l_and": {
     "line number": [
      389,
      390,
      395,
      396,
      398,
      412,
      489,
      496,
      500,
      502,
      503,
      506,
      507,
      526,
      527,
      536,
      542,
      578,
      618,
      625,
      652,
      654,
      702,
      703,
      705,
      707,
      710,
      711,
      718,
      724,
      827,
      830,
      843,
      863,
      875,
      882,
      886,
      907,
      910,
      916,
      920,
      923,
      967,
      969,
      995,
      998,
      1009,
      1012,
      1039,
      1075,
      1087,
      1089,
      1134
     ]
    },
    "l_not": {
     "line number": [
      255,
      376,
      381,
      389,
      389,
      390,
      390,
      394,
      395,
      395,
      396,
      398,
      398,
      408,
      412,
      415,
      419,
      422,
      434,
      442,
      450,
      454,
      457,
      469,
      477,
      485,
      496,
      500,
      502,
      502,
      503,
      503,
      506,
      506,
      507,
      507,
      511,
      523,
      527,
      529,
      533,
      535,
      536,
      536,
      539,
      542,
      578,
      618,
      625,
      652,
      654,
      718,
      744,
      754,
      759,
      801,
      825,
      827,
      830,
      843,
      863,
      865,
      874,
      875,
      882,
      886,
      892,
      910,
      1072,
      1075,
      1087,
      1089,
      1134
     ]
    },
    "l_or": {
     "line number": [
      389,
      394,
      398,
      408,
      415,
      419,
      422,
      434,
      442,
      450,
      454,
      457,
      469,
      477,
      502,
      506,
      523,
      535,
      539,
      1072
     ]
    },
    "numpy.f2py.rules.__version__": {
     "line number": [
      58
     ]
    },
    "numpy.f2py.rules.pprint": {
     "line number": [
      76
     ]
    },
    "numpy.f2py.rules.sepdict": {
     "line number": [
      96,
      260,
      605,
      691
     ]
    },
    "numpy.f2py.rules.sys": {
     "line number": [
      74,
      75
     ]
    },
    "numpy.f2py.rules.time": {
     "line number": [
      107,
      107,
      107
     ]
    },
    "numpy.f2py.rules.typedef_need_dict": {
     "line number": [
      611,
      698,
      881
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.rules.__version__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.f2py.rules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.rules.arg_rules": {
  "data": {
   "lineno": 689
  },
  "type": "constant"
 },
 "numpy.f2py.rules.aux_rules": {
  "data": {
   "lineno": 603
  },
  "type": "constant"
 },
 "numpy.f2py.rules.buildapi": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": {
    "applyrules": {
     "line number": [
      1343,
      1368,
      1382,
      1389,
      1440
     ]
    },
    "dictappend": {
     "line number": [
      1340,
      1344,
      1369,
      1383,
      1390
     ]
    },
    "getargs2": {
     "line number": [
      1329
     ]
    },
    "isinstance": {
     "line number": [
      1391,
      1393,
      1418,
      1423,
      1426,
      1434,
      1437
     ]
    },
    "isintent_aux": {
     "line number": [
      1332,
      1351,
      1373
     ]
    },
    "isintent_hide": {
     "line number": [
      1355
     ]
    },
    "ismoduleroutine": {
     "line number": [
      1334,
      1441
     ]
    },
    "isoptional": {
     "line number": [
      1356
     ]
    },
    "len": {
     "line number": [
      1413
     ]
    },
    "list": {
     "line number": [
      1391,
      1393,
      1418,
      1423,
      1426,
      1434
     ]
    },
    "numpy.f2py.rules.arg_rules": {
     "line number": [
      1354,
      1376
     ]
    },
    "numpy.f2py.rules.aux_rules": {
     "line number": [
      1352,
      1374
     ]
    },
    "numpy.f2py.rules.check_rules": {
     "line number": [
      1389
     ]
    },
    "numpy.f2py.rules.outmess": {
     "line number": [
      1335,
      1337,
      1442,
      1444
     ]
    },
    "numpy.f2py.rules.rout_rules": {
     "line number": [
      1341
     ]
    },
    "numpy.f2py.rules.routine_rules": {
     "line number": [
      1440
     ]
    },
    "numpy.f2py.rules.stnd": {
     "line number": [
      1358,
      1361
     ]
    },
    "replace": {
     "line number": [
      1395,
      1399,
      1404,
      1406,
      1412,
      1414,
      1419
     ]
    },
    "repr": {
     "line number": [
      1358,
      1361,
      1437
     ]
    },
    "routsign2map": {
     "line number": [
      1339
     ]
    },
    "sign2map": {
     "line number": [
      1350
     ]
    },
    "str": {
     "line number": [
      1437
     ]
    },
    "stripcomma": {
     "line number": [
      1395,
      1399,
      1404,
      1412,
      1414,
      1419
     ]
    },
    "type": {
     "line number": [
      1437
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.rules.buildmodule": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": {
    "applyrules": {
     "line number": [
      1198,
      1205,
      1212,
      1251,
      1253
     ]
    },
    "dictappend": {
     "line number": [
      1168,
      1199,
      1206,
      1213,
      1217,
      1252
     ]
    },
    "ismoduleroutine": {
     "line number": [
      1194
     ]
    },
    "len": {
     "line number": [
      1291,
      1309,
      1312
     ]
    },
    "modsign2map": {
     "line number": [
      1167
     ]
    },
    "numpy.f2py.rules.buildapi": {
     "line number": [
      1192
     ]
    },
    "numpy.f2py.rules.copy": {
     "line number": [
      1186
     ]
    },
    "numpy.f2py.rules.defmod_rules": {
     "line number": [
      1166
     ]
    },
    "numpy.f2py.rules.errmess": {
     "line number": [
      1175,
      1181,
      1246
     ]
    },
    "numpy.f2py.rules.f2py_version": {
     "line number": [
      1168,
      1273,
      1286,
      1305
     ]
    },
    "numpy.f2py.rules.module_rules": {
     "line number": [
      1253
     ]
    },
    "numpy.f2py.rules.options": {
     "line number": [
      1255,
      1262,
      1263,
      1268,
      1269,
      1270,
      1274,
      1277,
      1280,
      1282,
      1301
     ]
    },
    "numpy.f2py.rules.outmess": {
     "line number": [
      1164,
      1260,
      1268,
      1280,
      1299,
      1320
     ]
    },
    "open": {
     "line number": [
      1257,
      1264,
      1272,
      1284,
      1303
     ]
    },
    "repr": {
     "line number": [
      1246
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.rules.check_rules": {
  "data": {
   "lineno": 1126
  },
  "type": "constant"
 },
 "numpy.f2py.rules.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.rules.defmod_rules": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "numpy.f2py.rules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.rules.errmess": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "numpy.f2py.rules.f2py_version": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "numpy.f2py.rules.module_rules": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "numpy.f2py.rules.options": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "numpy.f2py.rules.outmess": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "numpy.f2py.rules.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.rules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.rules.rout_rules": {
  "data": {
   "lineno": 339
  },
  "type": "constant"
 },
 "numpy.f2py.rules.routine_rules": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "numpy.f2py.rules.sepdict": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "numpy.f2py.rules.show": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "numpy.f2py.rules.stnd": {
  "data": {
   "lineno": 1325
  },
  "type": "constant"
 },
 "numpy.f2py.rules.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.rules.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "numpy.f2py.rules.typedef_need_dict": {
  "data": {
   "lineno": 590
  },
  "type": "constant"
 },
 "numpy.f2py.run_main": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.f2py.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      90
     ]
    },
    "__version__.version": {
     "line number": [
      93,
      94,
      113
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      113
     ]
    },
    "numpy.f2py.setup.config": {
     "line number": [
      93,
      98,
      100,
      129
     ]
    },
    "numpy.f2py.setup.configuration": {
     "line number": [
      92
     ]
    },
    "numpy.f2py.setup.sys": {
     "line number": [
      97
     ]
    },
    "print": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.f2py.setup.__version__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.f2py.setup.config": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "numpy.f2py.setup.configuration": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.distutils.log.info": {
     "line number": [
      86
     ]
    },
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.setup.configuration.generate_f2py_py": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "distutils.dep_util.newer": {
     "line number": [
      52
     ]
    },
    "numpy.distutils.log.info": {
     "line number": [
      53
     ]
    },
    "numpy.f2py.setup.os": {
     "line number": [
      46,
      51
     ]
    },
    "numpy.f2py.setup.sys": {
     "line number": [
      46,
      49,
      80
     ]
    },
    "open": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.setup.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.f2py.setup.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.f2py.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.f2py.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.setup.version": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "numpy.f2py.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.f2py.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.f2py.test": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.f2py.tests.test_array_from_pyobj": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      544
     ]
    },
    "exec": {
     "line number": [
      535
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.Intent": {
     "line number": [
      82
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.Type": {
     "line number": [
      534
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.nose": {
     "line number": [
      547
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.setup": {
     "line number": [
      545
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "object": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      182,
      188,
      189,
      190,
      191,
      193,
      194,
      195,
      196,
      204,
      210,
      212,
      217,
      218,
      219,
      221,
      222,
      223,
      226,
      227,
      229,
      231,
      233,
      237,
      240,
      242,
      247
     ]
    },
    "getattr": {
     "line number": [
      189
     ]
    },
    "isinstance": {
     "line number": [
      182,
      204,
      244
     ]
    },
    "len": {
     "line number": [
      186,
      215
     ]
    },
    "numpy.array": {
     "line number": [
      205,
      207,
      207
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.Type": {
     "line number": [
      245
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.copy": {
     "line number": [
      176
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.flags2names": {
     "line number": [
      234,
      234
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      175,
      180,
      188,
      193,
      203,
      212,
      234,
      236,
      246
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.wrap": {
     "line number": [
      180,
      184,
      188,
      191,
      193,
      196,
      213,
      219,
      223
     ]
    },
    "numpy.ndarray": {
     "line number": [
      182,
      204,
      244
     ]
    },
    "repr": {
     "line number": [
      182,
      189,
      204,
      211,
      230,
      232,
      234,
      238,
      241
     ]
    },
    "type": {
     "line number": [
      182,
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.__str__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "str": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.arr_equal": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "numpy.alltrue": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.has_shared_memory": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      263
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.wrap": {
     "line number": [
      265
     ]
    },
    "numpy.ndarray": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "object": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__getattr__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      64
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.wrap": {
     "line number": [
      62,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__repr__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__str__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.is_intent": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.is_intent_exact": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "len": {
     "line number": [
      80,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "object": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.__new__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      117,
      121
     ]
    },
    "numpy.core.multiarray.typeinfo.items": {
     "line number": [
      120
     ]
    },
    "numpy.dtype": {
     "line number": [
      117
     ]
    },
    "object.__new__": {
     "line number": [
      127
     ]
    },
    "tuple": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type._init": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      135
     ]
    },
    "getattr": {
     "line number": [
      134
     ]
    },
    "numpy.core.multiarray.typeinfo": {
     "line number": [
      135,
      136,
      137,
      138
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.wrap": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.all_types": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.cast_types": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.equal_types": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "numpy.core.multiarray.typeinfo": {
     "line number": [
      155,
      159
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.Type": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.larger_types": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "numpy.core.multiarray.typeinfo": {
     "line number": [
      164,
      167
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.Type": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.smaller_types": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "numpy.core.multiarray.typeinfo": {
     "line number": [
      147,
      150
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.Type": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory": {
  "data": {
   "lineno": 279
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_c_copy_in_from_23casttype": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      380
     ]
    },
    "len": {
     "line number": [
      378,
      378
     ]
    },
    "numpy.array": {
     "line number": [
      377
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      379
     ]
    },
    "repr": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_c_in_from_23casttype": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      364,
      366
     ]
    },
    "len": {
     "line number": [
      361,
      361
     ]
    },
    "numpy.array": {
     "line number": [
      360
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      362
     ]
    },
    "repr": {
     "line number": [
      364,
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_c_in_from_23seq": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      339
     ]
    },
    "len": {
     "line number": [
      337,
      337
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_c_inout_23seq": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      328
     ]
    },
    "len": {
     "line number": [
      326,
      326
     ]
    },
    "numpy.array": {
     "line number": [
      325
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_cache_hidden": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "SystemError": {
     "line number": [
      438
     ]
    },
    "ValueError": {
     "line number": [
      434
     ]
    },
    "assert_": {
     "line number": [
      425,
      429
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      424,
      428,
      433
     ]
    },
    "str": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_f_copy_in_from_23casttype": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      373
     ]
    },
    "len": {
     "line number": [
      371,
      371
     ]
    },
    "numpy.array": {
     "line number": [
      370
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      372
     ]
    },
    "repr": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_f_in_from_23casttype": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      354,
      356
     ]
    },
    "len": {
     "line number": [
      351,
      351
     ]
    },
    "numpy.array": {
     "line number": [
      350
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      352
     ]
    },
    "repr": {
     "line number": [
      354,
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_f_inout_23seq": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "SystemError": {
     "line number": [
      322
     ]
    },
    "ValueError": {
     "line number": [
      318
     ]
    },
    "assert_": {
     "line number": [
      312
     ]
    },
    "len": {
     "line number": [
      310,
      310,
      315,
      315
     ]
    },
    "numpy.array": {
     "line number": [
      309,
      314
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      311,
      317
     ]
    },
    "str": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_hidden": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "SystemError": {
     "line number": [
      465
     ]
    },
    "ValueError": {
     "line number": [
      461
     ]
    },
    "assert_": {
     "line number": [
      443,
      444,
      448,
      449,
      450,
      454,
      455,
      456
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      442,
      447,
      453,
      460
     ]
    },
    "numpy.zeros": {
     "line number": [
      444,
      449,
      455
     ]
    },
    "str": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_cache_from_2casttype": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "SystemError": {
     "line number": [
      407
     ]
    },
    "ValueError": {
     "line number": [
      403
     ]
    },
    "assert_": {
     "line number": [
      389,
      392,
      396,
      399
     ]
    },
    "len": {
     "line number": [
      387
     ]
    },
    "numpy.array": {
     "line number": [
      386,
      394
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      388,
      391,
      395,
      398,
      402
     ]
    },
    "repr": {
     "line number": [
      389,
      392,
      396,
      399
     ]
    },
    "str": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_cache_from_2casttype_failure": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "SystemError": {
     "line number": [
      420
     ]
    },
    "ValueError": {
     "line number": [
      416
     ]
    },
    "len": {
     "line number": [
      413
     ]
    },
    "numpy.array": {
     "line number": [
      412
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      415
     ]
    },
    "str": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_copy_from_2casttype": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      334
     ]
    },
    "len": {
     "line number": [
      333
     ]
    },
    "numpy.array": {
     "line number": [
      332
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      333
     ]
    },
    "repr": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_from_23casttype": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      346
     ]
    },
    "len": {
     "line number": [
      344,
      344
     ]
    },
    "numpy.array": {
     "line number": [
      343
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      345
     ]
    },
    "repr": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_from_2casttype": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      291,
      293
     ]
    },
    "len": {
     "line number": [
      289
     ]
    },
    "numpy.array": {
     "line number": [
      288
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      289
     ]
    },
    "repr": {
     "line number": [
      291,
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_from_2seq": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      284
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_inout_2seq": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "SystemError": {
     "line number": [
      306
     ]
    },
    "TypeError": {
     "line number": [
      302
     ]
    },
    "assert_": {
     "line number": [
      298
     ]
    },
    "len": {
     "line number": [
      297
     ]
    },
    "numpy.array": {
     "line number": [
      296
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      297,
      301
     ]
    },
    "str": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_inplace": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      505,
      508,
      510,
      511,
      512,
      513
     ]
    },
    "numpy.array": {
     "line number": [
      504,
      510
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      507
     ]
    },
    "repr": {
     "line number": [
      508,
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_inplace_from_casttype": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      520,
      521,
      522,
      525,
      527,
      528,
      529,
      530,
      531
     ]
    },
    "numpy.array": {
     "line number": [
      519,
      527
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      524
     ]
    },
    "repr": {
     "line number": [
      525,
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_optional_from_23seq": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      496,
      497,
      500,
      501
     ]
    },
    "len": {
     "line number": [
      494,
      494
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      495,
      499
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_optional_from_2seq": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      489,
      490
     ]
    },
    "len": {
     "line number": [
      487
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      488
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_optional_none": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      470,
      471,
      475,
      476,
      477,
      481,
      482,
      483
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      469,
      474,
      480
     ]
    },
    "numpy.zeros": {
     "line number": [
      471,
      476,
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.alltrue": {
  "data": {
   "shadows": "numpy.alltrue"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.can_cast": {
  "data": {
   "shadows": "numpy.can_cast"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.dtype": {
  "data": {
   "shadows": "numpy.dtype"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.flags2names": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      52
     ]
    },
    "getattr": {
     "line number": [
      52
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.wrap": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.flags_info": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_array_from_pyobj.flags2names": {
     "line number": [
      43
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.wrap": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.intent": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "numpy.f2py.tests.test_array_from_pyobj.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.setup": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_array_from_pyobj.nose": {
     "line number": [
      26
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.os": {
     "line number": [
      34,
      35,
      36,
      37
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.util": {
     "line number": [
      25,
      38
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.wrap": {
     "line number": [
      28,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.test_intent": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_array_from_pyobj.unittest": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.test_intent.test_in_out": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      273,
      274,
      275,
      276,
      277
     ]
    },
    "assert_equal": {
     "line number": [
      272
     ]
    },
    "numpy.f2py.tests.test_array_from_pyobj.intent": {
     "line number": [
      272,
      273,
      274,
      275,
      276,
      277
     ]
    },
    "str": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.typeinfo": {
  "data": {
   "shadows": "numpy.core.multiarray.typeinfo"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.wrap": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.f2py.tests.test_array_from_pyobj.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      35
     ]
    },
    "numpy.f2py.tests.test_assumed_shape.nose": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_assumed_shape.TestAssumedShapeSumExample": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_assumed_shape._path": {
     "line number": [
      15,
      16,
      17,
      18
     ]
    },
    "numpy.f2py.tests.test_assumed_shape.util": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_assumed_shape.TestAssumedShapeSumExample.test_all": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      24,
      26,
      28,
      31,
      33
     ]
    },
    "repr": {
     "line number": [
      24,
      26,
      28,
      31,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_assumed_shape._path": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_assumed_shape.os": {
     "line number": [
      12,
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_assumed_shape.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      106
     ]
    },
    "numpy.f2py.tests.test_callback.nose": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_callback.util": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "A": {
     "line number": [
      100
     ]
    },
    "assert_": {
     "line number": [
      77,
      79,
      81,
      83,
      85,
      87,
      90,
      92,
      94,
      102,
      104
     ]
    },
    "getattr": {
     "line number": [
      75
     ]
    },
    "numpy.f2py.tests.test_callback.math": {
     "line number": [
      84,
      84,
      86,
      86
     ]
    },
    "repr": {
     "line number": [
      77,
      79,
      81,
      83,
      85,
      87,
      90,
      92,
      94,
      102,
      104
     ]
    },
    "t": {
     "line number": [
      76,
      78,
      80,
      82,
      84,
      86,
      89,
      91,
      93,
      101,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function.A": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "object": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function.A.__call__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function.A.mth": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_all": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_docstring": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      72
     ]
    },
    "numpy.f2py.tests.test_callback.textwrap": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      34
     ]
    },
    "numpy.f2py.tests.test_kind.nose": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_kind.TestKind": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_kind._path": {
     "line number": [
      18
     ]
    },
    "numpy.f2py.tests.test_kind.util": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_kind.TestKind.test_all": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      27,
      31
     ]
    },
    "numpy.f2py.crackfortran._selected_int_kind_func": {
     "line number": [
      27,
      28
     ]
    },
    "numpy.f2py.crackfortran._selected_real_kind_func": {
     "line number": [
      31,
      32
     ]
    },
    "range": {
     "line number": [
      26,
      30
     ]
    },
    "selectedintkind": {
     "line number": [
      27,
      28
     ]
    },
    "selectedrealkind": {
     "line number": [
      31,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_kind._path": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_kind.os": {
     "line number": [
      12,
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_kind.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.selected_int_kind": {
  "data": {
   "shadows": "numpy.f2py.crackfortran._selected_int_kind_func"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.selected_real_kind": {
  "data": {
   "shadows": "numpy.f2py.crackfortran._selected_real_kind_func"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      39
     ]
    },
    "numpy.f2py.tests.test_mixed.nose": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_mixed.TestMixed": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_mixed._path": {
     "line number": [
      16,
      17,
      18
     ]
    },
    "numpy.f2py.tests.test_mixed.util": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_mixed.TestMixed.test_all": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      22,
      23,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_mixed.TestMixed.test_docstring": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      37
     ]
    },
    "numpy.f2py.tests.test_mixed.textwrap": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_mixed._path": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_mixed.os": {
     "line number": [
      13,
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_mixed.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      140
     ]
    },
    "numpy.f2py.tests.test_return_character.nose": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_return_character.TestF77ReturnCharacter": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_character.TestReturnCharacter": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_character.TestF77ReturnCharacter.test_all": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_character.TestF90ReturnCharacter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_character.TestReturnCharacter": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_character.TestF90ReturnCharacter.test_all": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_character.TestReturnCharacter": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_character.util": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_character.TestReturnCharacter.check_function": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      26
     ]
    },
    "assert_": {
     "line number": [
      12,
      13,
      14,
      15,
      19,
      20,
      22,
      23,
      24
     ]
    },
    "numpy.array": {
     "line number": [
      14,
      15
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      12,
      13,
      14,
      15,
      19,
      20,
      22,
      23,
      24
     ]
    },
    "repr": {
     "line number": [
      13,
      14,
      15,
      19,
      22,
      23
     ]
    },
    "t": {
     "line number": [
      12,
      13,
      14,
      15,
      19,
      19,
      20,
      22,
      22,
      23,
      23,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_character.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      167
     ]
    },
    "numpy.f2py.tests.test_return_complex.nose": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_return_complex.TestF77ReturnComplex": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_complex.TestReturnComplex": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_complex.TestF77ReturnComplex.test_all": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_complex.TestF90ReturnComplex": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_complex.TestReturnComplex": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_complex.TestF90ReturnComplex.test_all": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_complex.TestReturnComplex": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_complex.util": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_complex.TestReturnComplex.check_function": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      41,
      42
     ]
    },
    "OverflowError": {
     "line number": [
      50
     ]
    },
    "TypeError": {
     "line number": [
      39,
      44,
      45
     ]
    },
    "abs": {
     "line number": [
      15,
      16,
      17,
      18,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36
     ]
    },
    "assert_": {
     "line number": [
      15,
      16,
      17,
      18,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      49
     ]
    },
    "assert_raises": {
     "line number": [
      39,
      41,
      42,
      44,
      45
     ]
    },
    "numpy.array": {
     "line number": [
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36
     ]
    },
    "numpy.compat.long": {
     "line number": [
      17
     ]
    },
    "repr": {
     "line number": [
      49,
      49
     ]
    },
    "t": {
     "line number": [
      15,
      16,
      17,
      18,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      39,
      41,
      42,
      44,
      44,
      45,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_complex.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      176
     ]
    },
    "numpy.f2py.tests.test_return_integer.nose": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_return_integer.TestF77ReturnInteger": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_integer.TestReturnInteger": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_integer.TestF77ReturnInteger.test_all": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_integer.TestF90ReturnInteger": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_integer.TestReturnInteger": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_integer.TestF90ReturnInteger.test_all": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_integer.TestReturnInteger": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_integer.util": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_integer.TestReturnInteger.check_function": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      34,
      35
     ]
    },
    "IndexError": {
     "line number": [
      31,
      32
     ]
    },
    "OverflowError": {
     "line number": [
      38,
      39
     ]
    },
    "ValueError": {
     "line number": [
      29
     ]
    },
    "assert_": {
     "line number": [
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26
     ]
    },
    "assert_raises": {
     "line number": [
      29,
      31,
      32,
      34,
      35,
      38,
      39
     ]
    },
    "numpy.array": {
     "line number": [
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26
     ]
    },
    "numpy.compat.long": {
     "line number": [
      12
     ]
    },
    "repr": {
     "line number": [
      10
     ]
    },
    "t": {
     "line number": [
      10,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      29,
      31,
      32,
      34,
      34,
      35,
      38,
      39
     ]
    },
    "t.__doc__.split": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_integer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      185
     ]
    },
    "numpy.f2py.tests.test_return_logical.nose": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_return_logical.TestF77ReturnLogical": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_logical.TestReturnLogical": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_logical.TestF77ReturnLogical.test_all": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_logical.TestF90ReturnLogical": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_logical.TestReturnLogical": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_logical.TestF90ReturnLogical.test_all": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_logical.TestReturnLogical": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_logical.util": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_logical.TestReturnLogical.check_function": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      48
     ]
    },
    "assert_": {
     "line number": [
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47
     ]
    },
    "assert_raises": {
     "line number": [
      48
     ]
    },
    "numpy.array": {
     "line number": [
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48
     ]
    },
    "numpy.compat.long": {
     "line number": [
      19
     ]
    },
    "repr": {
     "line number": [
      10,
      11
     ]
    },
    "t": {
     "line number": [
      10,
      10,
      11,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_logical.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      201
     ]
    },
    "numpy.f2py.tests.test_return_real.nose": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_return_real.TestCReturnReal": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_real.TestReturnReal": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestCReturnReal.test_all": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.TestF77ReturnReal": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_real.TestReturnReal": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestF77ReturnReal.test_all": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.TestF90ReturnReal": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_real.TestReturnReal": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestF90ReturnReal.test_all": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.TestReturnReal": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_return_real.util": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestReturnReal.check_function": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      42,
      43
     ]
    },
    "IndexError": {
     "line number": [
      39,
      40
     ]
    },
    "OverflowError": {
     "line number": [
      48
     ]
    },
    "ValueError": {
     "line number": [
      37
     ]
    },
    "abs": {
     "line number": [
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32
     ]
    },
    "assert_": {
     "line number": [
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      34,
      47
     ]
    },
    "assert_raises": {
     "line number": [
      37,
      39,
      40,
      42,
      43
     ]
    },
    "numpy.array": {
     "line number": [
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32
     ]
    },
    "numpy.compat.long": {
     "line number": [
      17
     ]
    },
    "repr": {
     "line number": [
      47,
      47
     ]
    },
    "t": {
     "line number": [
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      34,
      34,
      37,
      39,
      40,
      42,
      42,
      43,
      46
     ]
    },
    "t.__doc__.split": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      45
     ]
    },
    "numpy.f2py.tests.test_size.nose": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_size._path": {
     "line number": [
      15
     ]
    },
    "numpy.f2py.tests.test_size.util": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample.test_all": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      21,
      24,
      27
     ]
    },
    "repr": {
     "line number": [
      21,
      24,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample.test_flatten": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      40,
      43
     ]
    },
    "repr": {
     "line number": [
      40,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample.test_transpose": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      32,
      35
     ]
    },
    "repr": {
     "line number": [
      32,
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_size._path": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.f2py.tests.test_size.os": {
     "line number": [
      12,
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_size.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.tests.util.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.F2PyTest": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "object": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.f2py.tests.util.F2PyTest.setUp": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "numpy.f2py.tests.util.build_code": {
     "line number": [
      345
     ]
    },
    "numpy.f2py.tests.util.build_module": {
     "line number": [
      351
     ]
    },
    "numpy.f2py.tests.util.has_c_compiler": {
     "line number": [
      322
     ]
    },
    "numpy.f2py.tests.util.has_f77_compiler": {
     "line number": [
      338
     ]
    },
    "numpy.f2py.tests.util.has_f90_compiler": {
     "line number": [
      340
     ]
    },
    "numpy.f2py.tests.util.nose": {
     "line number": [
      323,
      339,
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util._cleanup": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      45
     ]
    },
    "OSError": {
     "line number": [
      45
     ]
    },
    "ValueError": {
     "line number": [
      41
     ]
    },
    "numpy.f2py.tests.util._module_dir": {
     "line number": [
      38,
      40,
      44,
      47
     ]
    },
    "numpy.f2py.tests.util.shutil": {
     "line number": [
      44
     ]
    },
    "numpy.f2py.tests.util.sys": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util._compiler_status": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "numpy.f2py.tests.util._get_compiler_status": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      215,
      215,
      216
     ]
    },
    "dict": {
     "line number": [
      202
     ]
    },
    "int": {
     "line number": [
      215,
      215,
      216
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      205,
      213
     ]
    },
    "numpy.f2py.tests.util._compiler_status": {
     "line number": [
      174,
      175,
      177,
      215,
      221
     ]
    },
    "numpy.f2py.tests.util.os": {
     "line number": [
      205,
      206,
      218
     ]
    },
    "numpy.f2py.tests.util.re": {
     "line number": [
      213
     ]
    },
    "numpy.f2py.tests.util.subprocess": {
     "line number": [
      210,
      210,
      211
     ]
    },
    "numpy.f2py.tests.util.sys": {
     "line number": [
      202,
      209
     ]
    },
    "numpy.f2py.tests.util.tempfile": {
     "line number": [
      204
     ]
    },
    "repr": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util._memoize": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "func.__name__": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util._memoize.wrapper": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      75,
      79
     ]
    },
    "func": {
     "line number": [
      74
     ]
    },
    "isinstance": {
     "line number": [
      79
     ]
    },
    "repr": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util._module_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.f2py.tests.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.asstr": {
  "data": {
   "shadows": "numpy.compat.asstr"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.build_code": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "numpy.compat.asbytes": {
     "line number": [
      158
     ]
    },
    "numpy.f2py.tests.util._memoize": {
     "line number": [
      147
     ]
    },
    "numpy.f2py.tests.util.build_module": {
     "line number": [
      162
     ]
    },
    "numpy.f2py.tests.util.os": {
     "line number": [
      158,
      159,
      165
     ]
    },
    "numpy.f2py.tests.util.tempfile": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.build_module": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      105,
      134
     ]
    },
    "__import__": {
     "line number": [
      144
     ]
    },
    "numpy.compat.asstr": {
     "line number": [
      135
     ]
    },
    "numpy.f2py.tests.util._memoize": {
     "line number": [
      89
     ]
    },
    "numpy.f2py.tests.util.get_module_dir": {
     "line number": [
      99
     ]
    },
    "numpy.f2py.tests.util.get_temp_module_name": {
     "line number": [
      118
     ]
    },
    "numpy.f2py.tests.util.os": {
     "line number": [
      104,
      106,
      106,
      110,
      110,
      111,
      112,
      112,
      113,
      126,
      128,
      137,
      141
     ]
    },
    "numpy.f2py.tests.util.shutil": {
     "line number": [
      107,
      114
     ]
    },
    "numpy.f2py.tests.util.subprocess": {
     "line number": [
      130,
      130,
      131
     ]
    },
    "numpy.f2py.tests.util.sys": {
     "line number": [
      97,
      129,
      145
     ]
    },
    "repr": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.build_module_distutils": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      251,
      290
     ]
    },
    "__import__": {
     "line number": [
      300
     ]
    },
    "dict": {
     "line number": [
      273
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      278
     ]
    },
    "numpy.compat.asstr": {
     "line number": [
      291
     ]
    },
    "numpy.f2py.tests.util._memoize": {
     "line number": [
      236
     ]
    },
    "numpy.f2py.tests.util.get_module_dir": {
     "line number": [
      245
     ]
    },
    "numpy.f2py.tests.util.get_temp_module_name": {
     "line number": [
      275
     ]
    },
    "numpy.f2py.tests.util.os": {
     "line number": [
      250,
      252,
      252,
      275,
      282,
      284,
      293,
      297
     ]
    },
    "numpy.f2py.tests.util.shutil": {
     "line number": [
      253
     ]
    },
    "numpy.f2py.tests.util.subprocess": {
     "line number": [
      286,
      286,
      287
     ]
    },
    "numpy.f2py.tests.util.sys": {
     "line number": [
      273,
      285,
      301
     ]
    },
    "numpy.f2py.tests.util.textwrap": {
     "line number": [
      257
     ]
    },
    "open": {
     "line number": [
      277
     ]
    },
    "repr": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.get_module_dir": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.f2py.tests.util._cleanup": {
     "line number": [
      53
     ]
    },
    "numpy.f2py.tests.util._module_dir": {
     "line number": [
      51,
      52,
      54,
      55,
      56
     ]
    },
    "numpy.f2py.tests.util.atexit": {
     "line number": [
      53
     ]
    },
    "numpy.f2py.tests.util.sys": {
     "line number": [
      54,
      55
     ]
    },
    "numpy.f2py.tests.util.tempfile": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.get_temp_module_name": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      66
     ]
    },
    "numpy.f2py.tests.util.get_module_dir": {
     "line number": [
      60
     ]
    },
    "numpy.f2py.tests.util.os": {
     "line number": [
      63,
      64
     ]
    },
    "numpy.f2py.tests.util.sys": {
     "line number": [
      64
     ]
    },
    "range": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.has_c_compiler": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "numpy.f2py.tests.util._get_compiler_status": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.has_f77_compiler": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "numpy.f2py.tests.util._get_compiler_status": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.has_f90_compiler": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "numpy.f2py.tests.util._get_compiler_status": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.md5": {
  "data": {
   "shadows": "md5.new"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.numpy.f2py": {
  "data": {
   "shadows": "numpy.f2py"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.f2py.use_rules": {
  "data": {
   "symbols_in_volume": {
    "numpy.f2py.use_rules.pprint": {
     "line number": [
      28
     ]
    },
    "numpy.f2py.use_rules.sys": {
     "line number": [
      26,
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.f2py.use_rules.__version__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.f2py.use_rules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.use_rules.buildusevar": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "applyrules": {
     "line number": [
      108
     ]
    },
    "dictappend": {
     "line number": [
      104
     ]
    },
    "gentitle": {
     "line number": [
      95,
      96
     ]
    },
    "hasnote": {
     "line number": [
      103
     ]
    },
    "numpy.f2py.use_rules.outmess": {
     "line number": [
      87
     ]
    },
    "numpy.f2py.use_rules.usemodule_rules": {
     "line number": [
      108
     ]
    },
    "print": {
     "line number": [
      107
     ]
    },
    "repr": {
     "line number": [
      102
     ]
    },
    "vars": {
     "line number": [
      103,
      103,
      105,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.use_rules.buildusevars": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "dictappend": {
     "line number": [
      84
     ]
    },
    "numpy.f2py.use_rules.buildusevar": {
     "line number": [
      84
     ]
    },
    "numpy.f2py.use_rules.outmess": {
     "line number": [
      58,
      64,
      74,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.f2py.use_rules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.use_rules.errmess": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.f2py.use_rules.f2py_version": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.f2py.use_rules.outmess": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.f2py.use_rules.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.use_rules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.use_rules.show": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.f2py.use_rules.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.use_rules.usemodule_rules": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.fft": {
  "data": {
   "symbols_in_volume": {
    "numpy.testing.Tester": {
     "line number": [
      10,
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.fft.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.fft.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.bench": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.fft.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.fftpack": {
  "data": {},
  "type": "module"
 },
 "numpy.fft.fftpack.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.fft.fftpack._cook_nd_args": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      524
     ]
    },
    "len": {
     "line number": [
      522,
      523,
      523
     ]
    },
    "list": {
     "line number": [
      515,
      520,
      522
     ]
    },
    "numpy.core.take": {
     "line number": [
      517
     ]
    },
    "range": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack._fft_cache": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.fft.fftpack._raw_fft": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      60
     ]
    },
    "ValueError": {
     "line number": [
      53
     ]
    },
    "init_function": {
     "line number": [
      61
     ]
    },
    "len": {
     "line number": [
      66,
      70
     ]
    },
    "list": {
     "line number": [
      64
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      47
     ]
    },
    "numpy.core.swapaxes": {
     "line number": [
      78,
      81
     ]
    },
    "numpy.core.zeros": {
     "line number": [
      73
     ]
    },
    "numpy.fft.fftpack._fft_cache": {
     "line number": [
      46
     ]
    },
    "slice": {
     "line number": [
      66,
      67,
      70,
      71
     ]
    },
    "work_function": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack._raw_fftnd": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": {
    "function": {
     "line number": [
      536
     ]
    },
    "len": {
     "line number": [
      533
     ]
    },
    "list": {
     "line number": [
      533
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      531
     ]
    },
    "numpy.fft.fftpack._cook_nd_args": {
     "line number": [
      532
     ]
    },
    "numpy.fft.fftpack.fft": {
     "line number": [
      530
     ]
    },
    "range": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack._real_fft_cache": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.fft.fftpack.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.conjugate": {
  "data": {
   "shadows": "numpy.core.conjugate"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.fft": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "numpy.fft.fftpack._fft_cache": {
     "line number": [
      174
     ]
    },
    "numpy.fft.fftpack._raw_fft": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.fft2": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": {
    "numpy.fft.fftpack._raw_fftnd": {
     "line number": [
      803
     ]
    },
    "numpy.fft.fftpack.fft": {
     "line number": [
      803
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.fftn": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "numpy.fft.fftpack._raw_fftnd": {
     "line number": [
      630
     ]
    },
    "numpy.fft.fftpack.fft": {
     "line number": [
      630
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.fftpack": {
  "data": {
   "shadows": "fftpack_lite"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.hfft": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      466
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      466
     ]
    },
    "numpy.core.conjugate": {
     "line number": [
      469
     ]
    },
    "numpy.core.shape": {
     "line number": [
      468
     ]
    },
    "numpy.fft.fftpack.irfft": {
     "line number": [
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.ifft": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      252
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      252
     ]
    },
    "numpy.core.shape": {
     "line number": [
      254
     ]
    },
    "numpy.fft.fftpack._fft_cache": {
     "line number": [
      255
     ]
    },
    "numpy.fft.fftpack._raw_fft": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.ifft2": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": {
    "numpy.fft.fftpack._raw_fftnd": {
     "line number": [
      886
     ]
    },
    "numpy.fft.fftpack.ifft": {
     "line number": [
      886
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.ifftn": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "numpy.fft.fftpack._raw_fftnd": {
     "line number": [
      722
     ]
    },
    "numpy.fft.fftpack.ifft": {
     "line number": [
      722
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.ihfft": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "float": {
     "line number": [
      505
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      505
     ]
    },
    "numpy.core.conjugate": {
     "line number": [
      508
     ]
    },
    "numpy.core.shape": {
     "line number": [
      507
     ]
    },
    "numpy.fft.fftpack.rfft": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.irfft": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      414
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      414
     ]
    },
    "numpy.core.shape": {
     "line number": [
      416
     ]
    },
    "numpy.fft.fftpack._raw_fft": {
     "line number": [
      417
     ]
    },
    "numpy.fft.fftpack._real_fft_cache": {
     "line number": [
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.irfft2": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": {
    "numpy.fft.fftpack.irfftn": {
     "line number": [
      1127
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.irfftn": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      1090
     ]
    },
    "len": {
     "line number": [
      1092
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      1090
     ]
    },
    "numpy.fft.fftpack._cook_nd_args": {
     "line number": [
      1091
     ]
    },
    "numpy.fft.fftpack.ifft": {
     "line number": [
      1093
     ]
    },
    "numpy.fft.fftpack.irfft": {
     "line number": [
      1094
     ]
    },
    "range": {
     "line number": [
      1092
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.rfft": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "float": {
     "line number": [
      333
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      333
     ]
    },
    "numpy.fft.fftpack._raw_fft": {
     "line number": [
      334
     ]
    },
    "numpy.fft.fftpack._real_fft_cache": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.rfft2": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": {
    "numpy.fft.fftpack.rfftn": {
     "line number": [
      1006
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.rfftn": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": {
    "float": {
     "line number": [
      969
     ]
    },
    "len": {
     "line number": [
      972
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      969
     ]
    },
    "numpy.fft.fftpack._cook_nd_args": {
     "line number": [
      970
     ]
    },
    "numpy.fft.fftpack.fft": {
     "line number": [
      973
     ]
    },
    "numpy.fft.fftpack.rfft": {
     "line number": [
      971
     ]
    },
    "range": {
     "line number": [
      972
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.fftpack.shape": {
  "data": {
   "shadows": "numpy.core.shape"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.swapaxes": {
  "data": {
   "shadows": "numpy.core.swapaxes"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.take": {
  "data": {
   "shadows": "numpy.core.take"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.zeros": {
  "data": {
   "shadows": "numpy.core.zeros"
  },
  "type": "import"
 },
 "numpy.fft.helper": {
  "data": {
   "symbols_in_volume": {
    "numpy.compat.integer_types": {
     "line number": [
      16,
      16
     ]
    },
    "numpy.core.integer": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.fft.helper.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.fft.helper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.helper.arange": {
  "data": {
   "shadows": "numpy.core.arange"
  },
  "type": "import"
 },
 "numpy.fft.helper.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.fft.helper.concatenate": {
  "data": {
   "shadows": "numpy.core.concatenate"
  },
  "type": "import"
 },
 "numpy.fft.helper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.helper.empty": {
  "data": {
   "shadows": "numpy.core.empty"
  },
  "type": "import"
 },
 "numpy.fft.helper.fftfreq": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      163
     ]
    },
    "int": {
     "line number": [
      165,
      167,
      169
     ]
    },
    "isinstance": {
     "line number": [
      162
     ]
    },
    "numpy.compat.integer_types": {
     "line number": [
      162
     ]
    },
    "numpy.core.arange": {
     "line number": [
      167,
      169
     ]
    },
    "numpy.core.empty": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.helper.fftshift": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      67
     ]
    },
    "len": {
     "line number": [
      64
     ]
    },
    "list": {
     "line number": [
      66
     ]
    },
    "numpy.compat.integer_types": {
     "line number": [
      67
     ]
    },
    "numpy.core.arange": {
     "line number": [
      73,
      73
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      63
     ]
    },
    "numpy.core.concatenate": {
     "line number": [
      73
     ]
    },
    "numpy.core.take": {
     "line number": [
      74
     ]
    },
    "range": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.helper.ifftshift": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      115
     ]
    },
    "len": {
     "line number": [
      112
     ]
    },
    "list": {
     "line number": [
      114
     ]
    },
    "numpy.compat.integer_types": {
     "line number": [
      115
     ]
    },
    "numpy.core.arange": {
     "line number": [
      121,
      121
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      111
     ]
    },
    "numpy.core.concatenate": {
     "line number": [
      121
     ]
    },
    "numpy.core.take": {
     "line number": [
      122
     ]
    },
    "range": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.helper.integer": {
  "data": {
   "shadows": "numpy.core.integer"
  },
  "type": "import"
 },
 "numpy.fft.helper.integer_types": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.fft.helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.helper.rfftfreq": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      219
     ]
    },
    "int": {
     "line number": [
      222
     ]
    },
    "isinstance": {
     "line number": [
      218
     ]
    },
    "numpy.compat.integer_types": {
     "line number": [
      218
     ]
    },
    "numpy.core.arange": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.helper.take": {
  "data": {
   "shadows": "numpy.core.take"
  },
  "type": "import"
 },
 "numpy.fft.info": {
  "data": {},
  "type": "module"
 },
 "numpy.fft.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.info.depends": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "numpy.fft.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      18
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      20
     ]
    },
    "numpy.fft.setup.configuration": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.fft.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.fft.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.fft.test": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.fft.tests.test_fftpack": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      74
     ]
    },
    "numpy.fft.tests.test_fftpack.sys": {
     "line number": [
      8
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.fft.tests.test_fftpack.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_basic": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.fft.fft": {
     "line number": [
      32
     ]
    },
    "numpy.fft.tests.test_fftpack.fft1": {
     "line number": [
      32
     ]
    },
    "numpy.random.random": {
     "line number": [
      30
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      32
     ]
    },
    "rand": {
     "line number": [
      31,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTShift": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.fft.tests.test_fftpack.TestFFTShift.test_fft_n": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      24
     ]
    },
    "numpy.fft.fft": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe._test_mtsame": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "Queue.Queue": {
     "line number": [
      43
     ]
    },
    "func": {
     "line number": [
      44
     ]
    },
    "numpy.fft.tests.test_fftpack.threading": {
     "line number": [
      47
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      53
     ]
    },
    "range": {
     "line number": [
      48,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe._test_mtsame.worker": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "func": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe.test_fft": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "numpy.fft.fft": {
     "line number": [
      59
     ]
    },
    "numpy.ones": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe.test_ifft": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.fft.ifft": {
     "line number": [
      63
     ]
    },
    "numpy.ones": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe.test_irfft": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "numpy.fft.irfft": {
     "line number": [
      71
     ]
    },
    "numpy.ones": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe.test_rfft": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "numpy.fft.rfft": {
     "line number": [
      67
     ]
    },
    "numpy.ones": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.fft1": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "float": {
     "line number": [
      16
     ]
    },
    "len": {
     "line number": [
      15
     ]
    },
    "numpy.arange": {
     "line number": [
      16,
      17
     ]
    },
    "numpy.exp": {
     "line number": [
      18
     ]
    },
    "numpy.pi": {
     "line number": [
      16
     ]
    },
    "numpy.sum": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.queue": {
  "data": {
   "shadows": "Queue"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      77
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.fft.tests.test_helper.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.TestFFTFreq": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestFFTFreq.test_definition": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.fft.fftfreq": {
     "line number": [
      47,
      48,
      50,
      51
     ]
    },
    "numpy.pi": {
     "line number": [
      48,
      48,
      51,
      51
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      47,
      48,
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_axes_keyword": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.fft.fftshift": {
     "line number": [
      35,
      36,
      37
     ]
    },
    "numpy.fft.ifftshift": {
     "line number": [
      38,
      39,
      40
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      35,
      36,
      38,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_definition": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "numpy.fft.fftshift": {
     "line number": [
      20,
      24
     ]
    },
    "numpy.fft.ifftshift": {
     "line number": [
      21,
      25
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      20,
      21,
      24,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_inverse": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.fft.fftshift": {
     "line number": [
      30
     ]
    },
    "numpy.fft.ifftshift": {
     "line number": [
      30
     ]
    },
    "numpy.random.random": {
     "line number": [
      29
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestIRFFTN": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestIRFFTN.test_not_last_axis_success": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.fft.irfftn": {
     "line number": [
      74
     ]
    },
    "numpy.random.random": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestRFFTFreq": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestRFFTFreq.test_definition": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.fft.rfftfreq": {
     "line number": [
      58,
      59,
      61,
      62
     ]
    },
    "numpy.pi": {
     "line number": [
      59,
      59,
      62,
      62
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      58,
      59,
      61,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.fft": {
  "data": {
   "shadows": "numpy.fft"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.float": {
  "data": {
   "shadows": "__builtin__.float"
  },
  "type": "import"
 },
 "numpy.int": {
  "data": {
   "shadows": "__builtin__.int"
  },
  "type": "import"
 },
 "numpy.lib": {
  "data": {
   "symbols_in_volume": {
    "numpy.lib.__all__": {
     "line number": [
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41
     ]
    },
    "numpy.testing.Tester": {
     "line number": [
      44,
      45
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.lib.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.lib.__version__": {
  "data": {
   "shadows": "numpy.version.version"
  },
  "type": "import"
 },
 "numpy.lib._iotools": {
  "data": {
   "symbols_in_volume": {
    "__builtin__.complex": {
     "line number": [
      26
     ]
    },
    "__builtin__.str": {
     "line number": [
      27
     ]
    },
    "builtins.str": {
     "line number": [
      15
     ]
    },
    "numpy.lib._iotools.sys": {
     "line number": [
      13,
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib._iotools.ConversionWarning": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      452
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib._iotools.ConverterError": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib._iotools.ConverterLockError": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "numpy.lib._iotools.ConverterError": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib._iotools.LineSplitter": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "__builtin__.object": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib._iotools.LineSplitter.__call__": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter.__init__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "__builtin__.int": {
     "line number": [
      205,
      206
     ]
    },
    "__builtin__.unicode": {
     "line number": [
      194
     ]
    },
    "hasattr": {
     "line number": [
      200
     ]
    },
    "isinstance": {
     "line number": [
      194
     ]
    },
    "list": {
     "line number": [
      202
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      191
     ]
    },
    "numpy.cumsum": {
     "line number": [
      202
     ]
    },
    "numpy.lib._iotools._is_bytes_like": {
     "line number": [
      196
     ]
    },
    "slice": {
     "line number": [
      203
     ]
    },
    "zip": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._delimited_splitter": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "numpy.compat.asbytes": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._fixedwidth_splitter": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "len": {
     "line number": [
      230
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      226
     ]
    },
    "range": {
     "line number": [
      230
     ]
    },
    "slice": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._variablewidth_splitter": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter.autostrip": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "input": {
     "line number": [
      189
     ]
    },
    "method": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "__builtin__.object": {
     "line number": [
      246
     ]
    },
    "set": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib._iotools.NameValidator.__call__": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator.__init__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "set": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator.validate": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "case_converter": {
     "line number": [
      377
     ]
    },
    "dict": {
     "line number": [
      373
     ]
    },
    "isinstance": {
     "line number": [
      358
     ]
    },
    "len": {
     "line number": [
      361
     ]
    },
    "list": {
     "line number": [
      363
     ]
    },
    "numpy.compat.basestring": {
     "line number": [
      358
     ]
    },
    "tuple": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "__builtin__.complex": {
     "line number": [
      516
     ]
    },
    "__builtin__.float": {
     "line number": [
      515
     ]
    },
    "__builtin__.int": {
     "line number": [
      514
     ]
    },
    "__builtin__.object": {
     "line number": [
      466
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      517
     ]
    },
    "numpy.compat.bytes": {
     "line number": [
      517
     ]
    },
    "numpy.core.numeric.bool_": {
     "line number": [
      513
     ]
    },
    "numpy.core.numeric.floating": {
     "line number": [
      515
     ]
    },
    "numpy.core.numeric.integer": {
     "line number": [
      514
     ]
    },
    "numpy.core.numeric.nan": {
     "line number": [
      515,
      516
     ]
    },
    "numpy.core.numeric.string_": {
     "line number": [
      517
     ]
    },
    "numpy.lib._iotools._bytes_to_complex": {
     "line number": [
      516
     ]
    },
    "numpy.lib._iotools.str2bool": {
     "line number": [
      513
     ]
    },
    "zip": {
     "line number": [
      518
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib._iotools.StringConverter.__call__": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.__init__": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      600,
      605
     ]
    },
    "ValueError": {
     "line number": [
      612
     ]
    },
    "__builtin__.bool": {
     "line number": [
      588
     ]
    },
    "__builtin__.float": {
     "line number": [
      641
     ]
    },
    "__builtin__.int": {
     "line number": [
      641
     ]
    },
    "__builtin__.unicode": {
     "line number": [
      583
     ]
    },
    "enumerate": {
     "line number": [
      617
     ]
    },
    "hasattr": {
     "line number": [
      602
     ]
    },
    "isinstance": {
     "line number": [
      583,
      585,
      646
     ]
    },
    "issubclass": {
     "line number": [
      636,
      638
     ]
    },
    "list": {
     "line number": [
      585,
      648
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      584,
      611,
      644,
      647,
      648
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      586
     ]
    },
    "numpy.compat.bytes": {
     "line number": [
      646
     ]
    },
    "numpy.dtype": {
     "line number": [
      594,
      599
     ]
    },
    "numpy.int64": {
     "line number": [
      638,
      639
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      618
     ]
    },
    "numpy.lib._iotools.str2bool": {
     "line number": [
      591
     ]
    },
    "numpy.uint64": {
     "line number": [
      636,
      637
     ]
    },
    "set": {
     "line number": [
      644,
      648
     ]
    },
    "tuple": {
     "line number": [
      585
     ]
    },
    "type": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._dtypeortype": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      533
     ]
    },
    "numpy.datetime64": {
     "line number": [
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._getdtype": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      520
     ]
    },
    "numpy.array": {
     "line number": [
      523
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._getsubdtype": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      525
     ]
    },
    "numpy.array": {
     "line number": [
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._loose_call": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      658
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._strict_call": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      664,
      669
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.iterupgrade": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      727
     ]
    },
    "_strict_call": {
     "line number": [
      726
     ]
    },
    "hasattr": {
     "line number": [
      721
     ]
    },
    "len": {
     "line number": [
      732
     ]
    },
    "numpy.lib._iotools.ConverterError": {
     "line number": [
      736
     ]
    },
    "numpy.lib._iotools.ConverterLockError": {
     "line number": [
      731
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.update": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      785
     ]
    },
    "ValueError": {
     "line number": [
      785
     ]
    },
    "func": {
     "line number": [
      784
     ]
    },
    "hasattr": {
     "line number": [
      792
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      748,
      784
     ]
    },
    "numpy.lib._iotools._is_bytes_like": {
     "line number": [
      790
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.upgrade": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      698
     ]
    },
    "len": {
     "line number": [
      703
     ]
    },
    "numpy.lib._iotools.ConverterError": {
     "line number": [
      708
     ]
    },
    "numpy.lib._iotools.ConverterLockError": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.upgrade_mapper": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      540
     ]
    },
    "hasattr": {
     "line number": [
      564,
      567
     ]
    },
    "isinstance": {
     "line number": [
      568
     ]
    },
    "len": {
     "line number": [
      573,
      576,
      576
     ]
    },
    "list": {
     "line number": [
      568,
      575
     ]
    },
    "tuple": {
     "line number": [
      568
     ]
    },
    "zip": {
     "line number": [
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.__docformat__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.lib._iotools._bytes_to_complex": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.lib._iotools._bytes_to_name": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.lib._iotools._is_bytes_like": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      45
     ]
    },
    "ValueError": {
     "line number": [
      45
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools._is_string_like": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      35
     ]
    },
    "ValueError": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools._to_filehandle": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      78
     ]
    },
    "file": {
     "line number": [
      72
     ]
    },
    "hasattr": {
     "line number": [
      74
     ]
    },
    "numpy.lib._iotools._is_string_like": {
     "line number": [
      64
     ]
    },
    "numpy.lib._iotools.bz2": {
     "line number": [
      70
     ]
    },
    "numpy.lib._iotools.gzip": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib._iotools.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.lib._iotools.asbytes_nested": {
  "data": {
   "shadows": "numpy.compat.asbytes_nested"
  },
  "type": "import"
 },
 "numpy.lib._iotools.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.lib._iotools.bool": {
  "data": {
   "shadows": "__builtin__.bool"
  },
  "type": "import"
 },
 "numpy.lib._iotools.bytes": {
  "data": {
   "shadows": "numpy.compat.bytes"
  },
  "type": "import"
 },
 "numpy.lib._iotools.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "numpy.lib._iotools.complex": {
  "data": {
   "shadows": "__builtin__.complex"
  },
  "type": "import"
 },
 "numpy.lib._iotools.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib._iotools.easy_dtype": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      839
     ]
    },
    "dict": {
     "line number": [
      847
     ]
    },
    "isinstance": {
     "line number": [
      844,
      853
     ]
    },
    "len": {
     "line number": [
      841,
      843,
      849,
      857
     ]
    },
    "list": {
     "line number": [
      859
     ]
    },
    "numpy.compat.basestring": {
     "line number": [
      844,
      853
     ]
    },
    "numpy.dtype": {
     "line number": [
      838,
      847,
      859
     ]
    },
    "numpy.lib._iotools.NameValidator": {
     "line number": [
      840,
      852,
      866
     ]
    },
    "range": {
     "line number": [
      868
     ]
    },
    "tuple": {
     "line number": [
      857,
      868
     ]
    },
    "validate": {
     "line number": [
      846,
      852,
      858,
      862,
      866,
      870,
      873
     ]
    },
    "zip": {
     "line number": [
      859
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.flatten_dtype": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "__builtin__.int": {
     "line number": [
      140
     ]
    },
    "numpy.prod": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.float": {
  "data": {
   "shadows": "__builtin__.float"
  },
  "type": "import"
 },
 "numpy.lib._iotools.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "numpy.lib._iotools.has_nested_fields": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "numpy.lib._iotools.int": {
  "data": {
   "shadows": "__builtin__.int"
  },
  "type": "import"
 },
 "numpy.lib._iotools.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib._iotools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib._iotools.nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib._iotools.object": {
  "data": {
   "shadows": "__builtin__.object"
  },
  "type": "import"
 },
 "numpy.lib._iotools.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib._iotools.str": {
  "data": {
   "shadows": "__builtin__.str"
  },
  "type": "import"
 },
 "numpy.lib._iotools.str2bool": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      435
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      430,
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib._iotools.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib._iotools.unicode": {
  "data": {
   "shadows": "__builtin__.unicode"
  },
  "type": "import"
 },
 "numpy.lib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.arraypad": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.arraypad.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.lib.arraypad._append_const": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      136
     ]
    },
    "numpy.concatenate": {
     "line number": [
      138,
      141
     ]
    },
    "numpy.zeros": {
     "line number": [
      138,
      142
     ]
    },
    "tuple": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_edge": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      202,
      206
     ]
    },
    "numpy.concatenate": {
     "line number": [
      208
     ]
    },
    "slice": {
     "line number": [
      201
     ]
    },
    "tuple": {
     "line number": [
      201,
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_max": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      415,
      421
     ]
    },
    "numpy.concatenate": {
     "line number": [
      427
     ]
    },
    "numpy.lib.arraypad._append_edge": {
     "line number": [
      403
     ]
    },
    "slice": {
     "line number": [
      414,
      414,
      417
     ]
    },
    "tuple": {
     "line number": [
      413,
      417,
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_mean": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      523,
      529
     ]
    },
    "numpy.concatenate": {
     "line number": [
      536
     ]
    },
    "numpy.lib.arraypad._append_edge": {
     "line number": [
      511
     ]
    },
    "numpy.lib.arraypad._round_ifneeded": {
     "line number": [
      533
     ]
    },
    "slice": {
     "line number": [
      522,
      522,
      525
     ]
    },
    "tuple": {
     "line number": [
      521,
      525,
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_med": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      632,
      638
     ]
    },
    "numpy.concatenate": {
     "line number": [
      645
     ]
    },
    "numpy.lib.arraypad._append_edge": {
     "line number": [
      620
     ]
    },
    "numpy.lib.arraypad._round_ifneeded": {
     "line number": [
      642
     ]
    },
    "numpy.median": {
     "line number": [
      641
     ]
    },
    "slice": {
     "line number": [
      631,
      631,
      634
     ]
    },
    "tuple": {
     "line number": [
      630,
      634,
      637
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_min": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      741,
      747
     ]
    },
    "numpy.concatenate": {
     "line number": [
      753
     ]
    },
    "numpy.lib.arraypad._append_edge": {
     "line number": [
      729
     ]
    },
    "slice": {
     "line number": [
      740,
      740,
      743
     ]
    },
    "tuple": {
     "line number": [
      739,
      743,
      746
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_ramp": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      296,
      304,
      308
     ]
    },
    "float": {
     "line number": [
      314
     ]
    },
    "numpy.concatenate": {
     "line number": [
      320
     ]
    },
    "numpy.float64": {
     "line number": [
      300
     ]
    },
    "numpy.lib.arraypad._arange_ndarray": {
     "line number": [
      299
     ]
    },
    "numpy.lib.arraypad._round_ifneeded": {
     "line number": [
      317
     ]
    },
    "slice": {
     "line number": [
      303
     ]
    },
    "tuple": {
     "line number": [
      295,
      303,
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._arange_ndarray": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      49,
      55
     ]
    },
    "numpy.arange": {
     "line number": [
      51,
      53
     ]
    },
    "tuple": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._normalize_shape": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1033,
      1044
     ]
    },
    "float": {
     "line number": [
      1035,
      1039
     ]
    },
    "int": {
     "line number": [
      1024,
      1035,
      1039
     ]
    },
    "isinstance": {
     "line number": [
      1024,
      1026,
      1027,
      1034,
      1035,
      1038,
      1039
     ]
    },
    "len": {
     "line number": [
      1023,
      1028,
      1031,
      1036,
      1040
     ]
    },
    "list": {
     "line number": [
      1026,
      1027,
      1034,
      1038
     ]
    },
    "numpy.compat.long": {
     "line number": [
      1035,
      1039
     ]
    },
    "numpy.shape": {
     "line number": [
      1023
     ]
    },
    "tuple": {
     "line number": [
      1026,
      1027,
      1034,
      1038
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._pad_ref": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      798,
      804,
      811,
      823,
      825,
      833
     ]
    },
    "numpy.concatenate": {
     "line number": [
      839
     ]
    },
    "slice": {
     "line number": [
      797,
      797,
      810,
      822,
      822,
      824,
      824,
      832
     ]
    },
    "tuple": {
     "line number": [
      797,
      803,
      810,
      822,
      824,
      832
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._pad_sym": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      883,
      885,
      890,
      897,
      909,
      917
     ]
    },
    "numpy.concatenate": {
     "line number": [
      923
     ]
    },
    "slice": {
     "line number": [
      882,
      882,
      884,
      884,
      896,
      908,
      908,
      916
     ]
    },
    "tuple": {
     "line number": [
      882,
      884,
      889,
      896,
      908,
      916
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._pad_wrap": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      966,
      971,
      980
     ]
    },
    "numpy.concatenate": {
     "line number": [
      987
     ]
    },
    "slice": {
     "line number": [
      965,
      965,
      979,
      979
     ]
    },
    "tuple": {
     "line number": [
      965,
      970,
      979
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_const": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      102
     ]
    },
    "numpy.concatenate": {
     "line number": [
      104,
      107
     ]
    },
    "numpy.zeros": {
     "line number": [
      104,
      107
     ]
    },
    "tuple": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_edge": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      168,
      172
     ]
    },
    "numpy.concatenate": {
     "line number": [
      174
     ]
    },
    "slice": {
     "line number": [
      167
     ]
    },
    "tuple": {
     "line number": [
      167,
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_max": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      361,
      365
     ]
    },
    "numpy.concatenate": {
     "line number": [
      371
     ]
    },
    "numpy.lib.arraypad._prepend_edge": {
     "line number": [
      352
     ]
    },
    "slice": {
     "line number": [
      360,
      360
     ]
    },
    "tuple": {
     "line number": [
      360,
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_mean": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      468,
      472
     ]
    },
    "numpy.concatenate": {
     "line number": [
      479
     ]
    },
    "numpy.lib.arraypad._prepend_edge": {
     "line number": [
      459
     ]
    },
    "numpy.lib.arraypad._round_ifneeded": {
     "line number": [
      476
     ]
    },
    "slice": {
     "line number": [
      467,
      467
     ]
    },
    "tuple": {
     "line number": [
      467,
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_med": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      577,
      581
     ]
    },
    "numpy.concatenate": {
     "line number": [
      588
     ]
    },
    "numpy.lib.arraypad._prepend_edge": {
     "line number": [
      568
     ]
    },
    "numpy.lib.arraypad._round_ifneeded": {
     "line number": [
      585
     ]
    },
    "numpy.median": {
     "line number": [
      584
     ]
    },
    "slice": {
     "line number": [
      576,
      576
     ]
    },
    "tuple": {
     "line number": [
      576,
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_min": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      687,
      691
     ]
    },
    "numpy.concatenate": {
     "line number": [
      697
     ]
    },
    "numpy.lib.arraypad._prepend_edge": {
     "line number": [
      678
     ]
    },
    "slice": {
     "line number": [
      686,
      686
     ]
    },
    "tuple": {
     "line number": [
      686,
      690
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_ramp": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      240,
      249,
      253
     ]
    },
    "float": {
     "line number": [
      259
     ]
    },
    "numpy.concatenate": {
     "line number": [
      265
     ]
    },
    "numpy.float64": {
     "line number": [
      244
     ]
    },
    "numpy.lib.arraypad._arange_ndarray": {
     "line number": [
      243
     ]
    },
    "numpy.lib.arraypad._round_ifneeded": {
     "line number": [
      262
     ]
    },
    "slice": {
     "line number": [
      248
     ]
    },
    "tuple": {
     "line number": [
      239,
      248,
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._round_ifneeded": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.integer": {
     "line number": [
      73
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad._validate_lengths": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1085
     ]
    },
    "numpy.lib.arraypad._normalize_shape": {
     "line number": [
      1079
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.arraypad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.arraypad.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.arraypad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.arraypad.pad": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1308,
      1322
     ]
    },
    "enumerate": {
     "line number": [
      1358,
      1363,
      1369,
      1375,
      1381,
      1387,
      1393,
      1398,
      1430,
      1450
     ]
    },
    "isinstance": {
     "line number": [
      1304
     ]
    },
    "len": {
     "line number": [
      1330
     ]
    },
    "list": {
     "line number": [
      1323,
      1330
     ]
    },
    "min": {
     "line number": [
      1415,
      1417,
      1439,
      1441,
      1458,
      1460
     ]
    },
    "numpy.apply_along_axis": {
     "line number": [
      1343
     ]
    },
    "numpy.array": {
     "line number": [
      1281,
      1335
     ]
    },
    "numpy.lib.arraypad._append_const": {
     "line number": [
      1360
     ]
    },
    "numpy.lib.arraypad._append_edge": {
     "line number": [
      1365,
      1407
     ]
    },
    "numpy.lib.arraypad._append_max": {
     "line number": [
      1377
     ]
    },
    "numpy.lib.arraypad._append_mean": {
     "line number": [
      1383
     ]
    },
    "numpy.lib.arraypad._append_med": {
     "line number": [
      1389
     ]
    },
    "numpy.lib.arraypad._append_min": {
     "line number": [
      1395
     ]
    },
    "numpy.lib.arraypad._append_ramp": {
     "line number": [
      1371
     ]
    },
    "numpy.lib.arraypad._normalize_shape": {
     "line number": [
      1320
     ]
    },
    "numpy.lib.arraypad._pad_ref": {
     "line number": [
      1418,
      1427
     ]
    },
    "numpy.lib.arraypad._pad_sym": {
     "line number": [
      1442,
      1447
     ]
    },
    "numpy.lib.arraypad._pad_wrap": {
     "line number": [
      1461,
      1467
     ]
    },
    "numpy.lib.arraypad._prepend_const": {
     "line number": [
      1359
     ]
    },
    "numpy.lib.arraypad._prepend_edge": {
     "line number": [
      1364,
      1406
     ]
    },
    "numpy.lib.arraypad._prepend_max": {
     "line number": [
      1376
     ]
    },
    "numpy.lib.arraypad._prepend_mean": {
     "line number": [
      1382
     ]
    },
    "numpy.lib.arraypad._prepend_med": {
     "line number": [
      1388
     ]
    },
    "numpy.lib.arraypad._prepend_min": {
     "line number": [
      1394
     ]
    },
    "numpy.lib.arraypad._prepend_ramp": {
     "line number": [
      1370
     ]
    },
    "numpy.lib.arraypad._validate_lengths": {
     "line number": [
      1282,
      1318
     ]
    },
    "numpy.sum": {
     "line number": [
      1331
     ]
    },
    "numpy.zeros": {
     "line number": [
      1336
     ]
    },
    "range": {
     "line number": [
      1330
     ]
    },
    "slice": {
     "line number": [
      1332
     ]
    },
    "str": {
     "line number": [
      1304
     ]
    },
    "zip": {
     "line number": [
      1358,
      1369,
      1375,
      1381,
      1387,
      1393
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraypad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.arraysetops.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.lib.arraysetops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.deprecate": {
  "data": {
   "shadows": "numpy.lib.utils.deprecate"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.ediff1d": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "len": {
     "line number": [
      86
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      78
     ]
    },
    "numpy.hstack": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.in1d": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "len": {
     "line number": [
      345,
      345,
      347,
      351,
      372
     ]
    },
    "numpy.asarray": {
     "line number": [
      341,
      342
     ]
    },
    "numpy.bool": {
     "line number": [
      347,
      351
     ]
    },
    "numpy.concatenate": {
     "line number": [
      361,
      371
     ]
    },
    "numpy.ones": {
     "line number": [
      347
     ]
    },
    "numpy.unique": {
     "line number": [
      358,
      359
     ]
    },
    "numpy.zeros": {
     "line number": [
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.intersect1d": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "numpy.concatenate": {
     "line number": [
      235
     ]
    },
    "numpy.lib.arraysetops.unique": {
     "line number": [
      233,
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.setdiff1d": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      450
     ]
    },
    "numpy.lib.arraysetops.in1d": {
     "line number": [
      446
     ]
    },
    "numpy.lib.arraysetops.unique": {
     "line number": [
      444,
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.setxor1d": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "numpy.concatenate": {
     "line number": [
      272,
      278
     ]
    },
    "numpy.lib.arraysetops.unique": {
     "line number": [
      269,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.union1d": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "numpy.concatenate": {
     "line number": [
      407
     ]
    },
    "numpy.lib.arraysetops.unique": {
     "line number": [
      407
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.unique": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      164
     ]
    },
    "list": {
     "line number": [
      166
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      168
     ]
    },
    "numpy.bool": {
     "line number": [
      172,
      172,
      174
     ]
    },
    "numpy.concatenate": {
     "line number": [
      184,
      197
     ]
    },
    "numpy.cumsum": {
     "line number": [
      186
     ]
    },
    "numpy.empty": {
     "line number": [
      172,
      172,
      174
     ]
    },
    "numpy.sort": {
     "line number": [
      166
     ]
    },
    "set": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arrayterator": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.arrayterator.Arrayterator": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "object": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.arrayterator.Arrayterator.__array__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      138
     ]
    },
    "tuple": {
     "line number": [
      138
     ]
    },
    "zip": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__getattr__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__getitem__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      112
     ]
    },
    "enumerate": {
     "line number": [
      125
     ]
    },
    "int": {
     "line number": [
      115
     ]
    },
    "isinstance": {
     "line number": [
      108,
      115
     ]
    },
    "len": {
     "line number": [
      110,
      110,
      114,
      120,
      121
     ]
    },
    "min": {
     "line number": [
      130
     ]
    },
    "numpy.compat.long": {
     "line number": [
      115
     ]
    },
    "slice": {
     "line number": [
      113,
      116,
      121
     ]
    },
    "tuple": {
     "line number": [
      108,
      119
     ]
    },
    "zip": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__init__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__iter__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      184,
      224
     ]
    },
    "functools.reduce": {
     "line number": [
      192
     ]
    },
    "len": {
     "line number": [
      189
     ]
    },
    "min": {
     "line number": [
      209
     ]
    },
    "operator.mul": {
     "line number": [
      192
     ]
    },
    "range": {
     "line number": [
      198,
      219
     ]
    },
    "slice": {
     "line number": [
      213
     ]
    },
    "tuple": {
     "line number": [
      213
     ]
    },
    "zip": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.flat": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "property": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.shape": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "property": {
     "line number": [
      171
     ]
    },
    "tuple": {
     "line number": [
      179
     ]
    },
    "zip": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.lib.arrayterator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.bench": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.lib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.emath": {
  "data": {
   "shadows": "scimath"
  },
  "type": "import"
 },
 "numpy.lib.financial": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      732
     ]
    },
    "numpy.lib.financial.doctest": {
     "line number": [
      735
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.financial.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.lib.financial._convert_when": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      32
     ]
    },
    "TypeError": {
     "line number": [
      32
     ]
    },
    "isinstance": {
     "line number": [
      28
     ]
    },
    "numpy.lib.financial._when_to_num": {
     "line number": [
      31,
      33
     ]
    },
    "numpy.ndarray": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial._g_div_gp": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "numpy.lib.financial._rbl": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "numpy.lib.financial.fv": {
     "line number": [
      385
     ]
    },
    "numpy.lib.financial.pmt": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial._when_to_num": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.lib.financial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.financial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.financial.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "numpy.lib.financial.fv": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "map": {
     "line number": [
      118
     ]
    },
    "numpy.asarray": {
     "line number": [
      118
     ]
    },
    "numpy.broadcast": {
     "line number": [
      120
     ]
    },
    "numpy.lib.financial._convert_when": {
     "line number": [
      117
     ]
    },
    "numpy.where": {
     "line number": [
      122
     ]
    },
    "numpy.zeros": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial.ipmt": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      374
     ]
    },
    "numpy.broadcast_arrays": {
     "line number": [
      368
     ]
    },
    "numpy.lib.financial._convert_when": {
     "line number": [
      367
     ]
    },
    "numpy.lib.financial._rbl": {
     "line number": [
      370
     ]
    },
    "numpy.lib.financial.fv": {
     "line number": [
      368,
      368,
      369
     ]
    },
    "numpy.lib.financial.nper": {
     "line number": [
      368,
      368,
      369
     ]
    },
    "numpy.lib.financial.pmt": {
     "line number": [
      369
     ]
    },
    "numpy.logical_and": {
     "line number": [
      373
     ]
    },
    "numpy.where": {
     "line number": [
      372,
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial.irr": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      653
     ]
    },
    "numpy.argmin": {
     "line number": [
      653
     ]
    },
    "numpy.lib.financial.rate": {
     "line number": [
      652,
      653,
      653,
      653,
      654
     ]
    },
    "numpy.nan": {
     "line number": [
      648
     ]
    },
    "numpy.roots": {
     "line number": [
      645
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial.mirr": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      728,
      729
     ]
    },
    "numpy.asarray": {
     "line number": [
      722
     ]
    },
    "numpy.double": {
     "line number": [
      722
     ]
    },
    "numpy.lib.financial.npv": {
     "line number": [
      728,
      729
     ]
    },
    "numpy.nan": {
     "line number": [
      727
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.financial.nper": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "FloatingPointError": {
     "line number": [
      272
     ]
    },
    "map": {
     "line number": [
      266
     ]
    },
    "numpy.asarray": {
     "line number": [
      266
     ]
    },
    "numpy.broadcast": {
     "line number": [
      280
     ]
    },
    "numpy.errstate": {
     "line number": [
      269
     ]
    },
    "numpy.lib.financial._convert_when": {
     "line number": [
      265
     ]
    },
    "numpy.lib.financial.fv": {
     "line number": [
      266,
      266,
      276,
      278,
      279,
      280
     ]
    },
    "numpy.lib.financial.pmt": {
     "line number": [
      266,
      266,
      271,
      276,
      278,
      280
     ]
    },
    "numpy.log": {
     "line number": [
      279,
      279
     ]
    },
    "numpy.where": {
     "line number": [
      282
     ]
    },
    "numpy.zeros": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial.npv": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": {
    "len": {
     "line number": [
      699
     ]
    },
    "numpy.arange": {
     "line number": [
      699
     ]
    },
    "numpy.asarray": {
     "line number": [
      698
     ]
    },
    "numpy.lib.financial.rate": {
     "line number": [
      699
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial.pmt": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "map": {
     "line number": [
      209
     ]
    },
    "numpy.asarray": {
     "line number": [
      209
     ]
    },
    "numpy.broadcast": {
     "line number": [
      211
     ]
    },
    "numpy.lib.financial._convert_when": {
     "line number": [
      208
     ]
    },
    "numpy.lib.financial.fv": {
     "line number": [
      209,
      209,
      211,
      214
     ]
    },
    "numpy.where": {
     "line number": [
      213
     ]
    },
    "numpy.zeros": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial.ppmt": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "numpy.lib.financial.fv": {
     "line number": [
      412,
      413
     ]
    },
    "numpy.lib.financial.ipmt": {
     "line number": [
      413
     ]
    },
    "numpy.lib.financial.nper": {
     "line number": [
      412,
      413
     ]
    },
    "numpy.lib.financial.pmt": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.financial.pv": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "map": {
     "line number": [
      502
     ]
    },
    "numpy.asarray": {
     "line number": [
      502
     ]
    },
    "numpy.broadcast": {
     "line number": [
      504
     ]
    },
    "numpy.lib.financial._convert_when": {
     "line number": [
      501
     ]
    },
    "numpy.lib.financial.fv": {
     "line number": [
      502,
      502,
      504,
      507
     ]
    },
    "numpy.lib.financial.nper": {
     "line number": [
      502,
      502,
      503,
      504,
      506
     ]
    },
    "numpy.lib.financial.pmt": {
     "line number": [
      502,
      502,
      504,
      507
     ]
    },
    "numpy.where": {
     "line number": [
      506
     ]
    },
    "numpy.zeros": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.financial.rate": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      574
     ]
    },
    "iter": {
     "line number": [
      570,
      572,
      576
     ]
    },
    "map": {
     "line number": [
      568
     ]
    },
    "numpy.all": {
     "line number": [
      575
     ]
    },
    "numpy.asarray": {
     "line number": [
      568
     ]
    },
    "numpy.lib.financial._convert_when": {
     "line number": [
      567
     ]
    },
    "numpy.lib.financial._g_div_gp": {
     "line number": [
      573
     ]
    },
    "numpy.lib.financial.fv": {
     "line number": [
      568,
      568,
      573
     ]
    },
    "numpy.lib.financial.nper": {
     "line number": [
      568,
      568,
      573
     ]
    },
    "numpy.lib.financial.pmt": {
     "line number": [
      568,
      568,
      573
     ]
    },
    "numpy.lib.financial.pv": {
     "line number": [
      568,
      568,
      573
     ]
    },
    "numpy.nan": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base": {
  "data": {
   "symbols_in_volume": {
    "numpy.lib.function_base.sys": {
     "line number": [
      37,
      1258
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.function_base.ScalarType": {
  "data": {
   "shadows": "numpy.core.numeric.ScalarType"
  },
  "type": "import"
 },
 "numpy.lib.function_base.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.lib.function_base.__docformat__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.lib.function_base._chbevl": {
  "data": {
   "lineno": 2286,
   "symbols_in_volume": {
    "len": {
     "line number": [
      2290
     ]
    },
    "numpy.lib.function_base.range": {
     "line number": [
      2290
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base._compute_qth_percentile": {
  "data": {
   "lineno": 2823,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2835
     ]
    },
    "float": {
     "line number": [
      2848
     ]
    },
    "int": {
     "line number": [
      2840
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      2843,
      2848
     ]
    },
    "numpy.core.numeric.isscalar": {
     "line number": [
      2824
     ]
    },
    "numpy.core.umath.add.reduce": {
     "line number": [
      2856
     ]
    },
    "slice": {
     "line number": [
      2837,
      2842,
      2846
     ]
    },
    "sorted": {
     "line number": [
      2825,
      2856
     ]
    },
    "sorted.ndim": {
     "line number": [
      2837,
      2849
     ]
    },
    "sorted.shape": {
     "line number": [
      2838
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base._i0A": {
  "data": {
   "lineno": 2227
  },
  "type": "constant"
 },
 "numpy.lib.function_base._i0B": {
  "data": {
   "lineno": 2259
  },
  "type": "constant"
 },
 "numpy.lib.function_base._i0_1": {
  "data": {
   "lineno": 2297,
   "symbols_in_volume": {
    "numpy.core.umath.exp": {
     "line number": [
      2298
     ]
    },
    "numpy.lib.function_base._chbevl": {
     "line number": [
      2298
     ]
    },
    "numpy.lib.function_base._i0A": {
     "line number": [
      2298
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base._i0_2": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": {
    "numpy.core.umath.exp": {
     "line number": [
      2301
     ]
    },
    "numpy.core.umath.sqrt": {
     "line number": [
      2301
     ]
    },
    "numpy.lib.function_base._chbevl": {
     "line number": [
      2301
     ]
    },
    "numpy.lib.function_base._i0B": {
     "line number": [
      2301
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base._nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.function_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.function_base.add": {
  "data": {
   "shadows": "numpy.core.umath.add"
  },
  "type": "import"
 },
 "numpy.lib.function_base.add_newdoc": {
  "data": {
   "lineno": 2945,
   "symbols_in_volume": {
    "add_docstring": {
     "line number": [
      2969,
      2971,
      2974
     ]
    },
    "exec": {
     "line number": [
      2967
     ]
    },
    "getattr": {
     "line number": [
      2971,
      2974
     ]
    },
    "isinstance": {
     "line number": [
      2968,
      2970,
      2972
     ]
    },
    "list": {
     "line number": [
      2972
     ]
    },
    "numpy.lib.function_base.place": {
     "line number": [
      2967
     ]
    },
    "str": {
     "line number": [
      2968
     ]
    },
    "tuple": {
     "line number": [
      2970
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.angle": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      1114
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      1113
     ]
    },
    "numpy.core.numeric.complexfloating": {
     "line number": [
      1114
     ]
    },
    "numpy.core.umath.arctan2": {
     "line number": [
      1120
     ]
    },
    "numpy.core.umath.pi": {
     "line number": [
      1110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.append": {
  "data": {
   "lineno": 3503,
   "symbols_in_volume": {
    "numpy.core.fromnumeric.ravel": {
     "line number": [
      3553
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      3549
     ]
    },
    "numpy.core.numeric.concatenate": {
     "line number": [
      3555
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.arange": {
  "data": {
   "shadows": "numpy.core.numeric.arange"
  },
  "type": "import"
 },
 "numpy.lib.function_base.arctan2": {
  "data": {
   "shadows": "numpy.core.umath.arctan2"
  },
  "type": "import"
 },
 "numpy.lib.function_base.around": {
  "data": {
   "shadows": "numpy.core.numeric.around"
  },
  "type": "import"
 },
 "numpy.lib.function_base.array": {
  "data": {
   "shadows": "numpy.core.numeric.array"
  },
  "type": "import"
 },
 "numpy.lib.function_base.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.lib.function_base.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.function_base.asarray_chkfinite": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      594
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      592
     ]
    },
    "numpy.core.numerictypes.typecodes": {
     "line number": [
      593
     ]
    },
    "numpy.isfinite": {
     "line number": [
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.atleast_1d": {
  "data": {
   "shadows": "numpy.core.atleast_1d"
  },
  "type": "import"
 },
 "numpy.lib.function_base.atleast_2d": {
  "data": {
   "shadows": "numpy.core.atleast_2d"
  },
  "type": "import"
 },
 "numpy.lib.function_base.average": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      504,
      508
     ]
    },
    "ValueError": {
     "line number": [
      512
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      521
     ]
    },
    "isinstance": {
     "line number": [
      491
     ]
    },
    "numpy.array": {
     "line number": [
      499,
      517
     ]
    },
    "numpy.asarray": {
     "line number": [
      492
     ]
    },
    "numpy.matrix": {
     "line number": [
      491
     ]
    },
    "numpy.multiply": {
     "line number": [
      524,
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.bartlett": {
  "data": {
   "lineno": 1923,
   "symbols_in_volume": {
    "float": {
     "line number": [
      2025
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      2026
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      2023
     ]
    },
    "numpy.core.numeric.ones": {
     "line number": [
      2025
     ]
    },
    "numpy.core.numeric.where": {
     "line number": [
      2027
     ]
    },
    "numpy.core.umath.less_equal": {
     "line number": [
      2027
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.blackman": {
  "data": {
   "lineno": 1826,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1919
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      1920
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      1917
     ]
    },
    "numpy.core.numeric.ones": {
     "line number": [
      1919
     ]
    },
    "numpy.core.umath.cos": {
     "line number": [
      1921,
      1921
     ]
    },
    "numpy.core.umath.pi": {
     "line number": [
      1921,
      1921
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.choose": {
  "data": {
   "shadows": "numpy.core.fromnumeric.choose"
  },
  "type": "import"
 },
 "numpy.lib.function_base.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.lib.function_base.compiled_interp": {
  "data": {
   "shadows": "interp"
  },
  "type": "import"
 },
 "numpy.lib.function_base.concatenate": {
  "data": {
   "shadows": "numpy.core.numeric.concatenate"
  },
  "type": "import"
 },
 "numpy.lib.function_base.copy": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": {
    "numpy.core.numeric.array": {
     "line number": [
      830
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.corrcoef": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1822
     ]
    },
    "numpy.core.umath.multiply.outer": {
     "line number": [
      1824
     ]
    },
    "numpy.core.umath.sqrt": {
     "line number": [
      1824
     ]
    },
    "numpy.lib.function_base.cov": {
     "line number": [
      1816
     ]
    },
    "numpy.lib.twodim_base.diag": {
     "line number": [
      1821
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.cos": {
  "data": {
   "shadows": "numpy.core.umath.cos"
  },
  "type": "import"
 },
 "numpy.lib.function_base.cov": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1730
     ]
    },
    "float": {
     "line number": [
      1732,
      1747,
      1761
     ]
    },
    "int": {
     "line number": [
      1729
     ]
    },
    "numpy.array": {
     "line number": [
      1735
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      1732,
      1747
     ]
    },
    "numpy.core.numeric.concatenate": {
     "line number": [
      1748
     ]
    },
    "numpy.core.numeric.dot": {
     "line number": [
      1764,
      1766
     ]
    },
    "numpy.core.numeric.newaxis": {
     "line number": [
      1740,
      1743
     ]
    },
    "slice": {
     "line number": [
      1740,
      1743
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.delete": {
  "data": {
   "lineno": 3112,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      3174
     ]
    },
    "DeprecationWarning": {
     "line number": [
      3187,
      3278,
      3287
     ]
    },
    "FutureWarning": {
     "line number": [
      3254,
      3292
     ]
    },
    "IndexError": {
     "line number": [
      3260
     ]
    },
    "bool": {
     "line number": [
      3234,
      3251,
      3280
     ]
    },
    "int": {
     "line number": [
      3256
     ]
    },
    "isinstance": {
     "line number": [
      3197,
      3256,
      3272
     ]
    },
    "len": {
     "line number": [
      3200
     ]
    },
    "list": {
     "line number": [
      3195
     ]
    },
    "numpy.asarray": {
     "line number": [
      3248
     ]
    },
    "numpy.can_cast": {
     "line number": [
      3274
     ]
    },
    "numpy.compat.long": {
     "line number": [
      3256
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      3177
     ]
    },
    "numpy.core.numeric.empty": {
     "line number": [
      3215,
      3264
     ]
    },
    "numpy.core.numeric.integer": {
     "line number": [
      3256
     ]
    },
    "numpy.core.numeric.intp": {
     "line number": [
      3255,
      3273,
      3274,
      3279
     ]
    },
    "numpy.core.numeric.ndarray": {
     "line number": [
      3171
     ]
    },
    "numpy.core.numeric.ones": {
     "line number": [
      3234,
      3280
     ]
    },
    "numpy.lib.function_base.range": {
     "line number": [
      3199
     ]
    },
    "numpy.lib.function_base.warnings": {
     "line number": [
      3185,
      3252,
      3277,
      3285,
      3291
     ]
    },
    "numpy.ndarray": {
     "line number": [
      3272
     ]
    },
    "slice": {
     "line number": [
      3193,
      3197,
      3220,
      3226,
      3227,
      3228,
      3236,
      3237,
      3238,
      3265,
      3267,
      3268,
      3269
     ]
    },
    "type": {
     "line number": [
      3171
     ]
    },
    "wrap": {
     "line number": [
      3189,
      3203,
      3204,
      3242,
      3243,
      3299,
      3300
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.diag": {
  "data": {
   "shadows": "numpy.lib.twodim_base.diag"
  },
  "type": "import"
 },
 "numpy.lib.function_base.diff": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      985
     ]
    },
    "len": {
     "line number": [
      988
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      987
     ]
    },
    "repr": {
     "line number": [
      986
     ]
    },
    "slice": {
     "line number": [
      989,
      990,
      991,
      992
     ]
    },
    "tuple": {
     "line number": [
      993,
      994
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.disp": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": {
    "numpy.lib.function_base.sys": {
     "line number": [
      1397
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.function_base.dot": {
  "data": {
   "shadows": "numpy.core.numeric.dot"
  },
  "type": "import"
 },
 "numpy.lib.function_base.empty": {
  "data": {
   "shadows": "numpy.core.numeric.empty"
  },
  "type": "import"
 },
 "numpy.lib.function_base.empty_like": {
  "data": {
   "shadows": "numpy.core.numeric.empty_like"
  },
  "type": "import"
 },
 "numpy.lib.function_base.exp": {
  "data": {
   "shadows": "numpy.core.umath.exp"
  },
  "type": "import"
 },
 "numpy.lib.function_base.extract": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": {
    "numpy.core.fromnumeric.nonzero": {
     "line number": [
      1324
     ]
    },
    "numpy.core.fromnumeric.ravel": {
     "line number": [
      1324,
      1324
     ]
    },
    "numpy.core.numeric.take": {
     "line number": [
      1324
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.frompyfunc": {
  "data": {
   "shadows": "numpy.core.umath.frompyfunc"
  },
  "type": "import"
 },
 "numpy.lib.function_base.gradient": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": {
    "SyntaxError": {
     "line number": [
      882
     ]
    },
    "len": {
     "line number": [
      873,
      874
     ]
    },
    "list": {
     "line number": [
      880
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      872
     ]
    },
    "numpy.empty_like": {
     "line number": [
      908
     ]
    },
    "numpy.lib.function_base.range": {
     "line number": [
      906
     ]
    },
    "slice": {
     "line number": [
      890,
      891,
      892,
      909,
      910,
      911,
      929,
      930,
      931
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.hamming": {
  "data": {
   "lineno": 2128,
   "symbols_in_volume": {
    "float": {
     "line number": [
      2221
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      2222
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      2219
     ]
    },
    "numpy.core.numeric.ones": {
     "line number": [
      2221
     ]
    },
    "numpy.core.umath.cos": {
     "line number": [
      2223
     ]
    },
    "numpy.core.umath.pi": {
     "line number": [
      2223
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.hanning": {
  "data": {
   "lineno": 2029,
   "symbols_in_volume": {
    "float": {
     "line number": [
      2124
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      2125
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      2122
     ]
    },
    "numpy.core.numeric.ones": {
     "line number": [
      2124
     ]
    },
    "numpy.core.umath.cos": {
     "line number": [
      2126
     ]
    },
    "numpy.core.umath.pi": {
     "line number": [
      2126
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.histogram": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      164,
      184
     ]
    },
    "ValueError": {
     "line number": [
      156,
      169
     ]
    },
    "float": {
     "line number": [
      217,
      224
     ]
    },
    "int": {
     "line number": [
      189
     ]
    },
    "len": {
     "line number": [
      196,
      202
     ]
    },
    "numpy.any": {
     "line number": [
      155
     ]
    },
    "numpy.argsort": {
     "line number": [
      205
     ]
    },
    "numpy.concatenate": {
     "line number": [
      208
     ]
    },
    "numpy.core.fromnumeric.sort": {
     "line number": [
      197
     ]
    },
    "numpy.core.linspace": {
     "line number": [
      180
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      196,
      202
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      201,
      217,
      224
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      152,
      154,
      182
     ]
    },
    "numpy.diff": {
     "line number": [
      183,
      213,
      217,
      224
     ]
    },
    "numpy.isscalar": {
     "line number": [
      168
     ]
    },
    "numpy.lib.function_base.iterable": {
     "line number": [
      167
     ]
    },
    "numpy.lib.function_base.range": {
     "line number": [
      161,
      162,
      170,
      173,
      175,
      176
     ]
    },
    "numpy.r_": {
     "line number": [
      198,
      209
     ]
    },
    "numpy.zeros": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.histogramdd": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      285,
      299
     ]
    },
    "RuntimeError": {
     "line number": [
      412
     ]
    },
    "TypeError": {
     "line number": [
      302
     ]
    },
    "ValueError": {
     "line number": [
      285,
      332,
      341
     ]
    },
    "bincount": {
     "line number": [
      387
     ]
    },
    "digitize": {
     "line number": [
      354
     ]
    },
    "float": {
     "line number": [
      314,
      315,
      337,
      373
     ]
    },
    "int": {
     "line number": [
      290,
      363,
      377,
      385,
      406
     ]
    },
    "len": {
     "line number": [
      297,
      323,
      338,
      384,
      388
     ]
    },
    "numpy.any": {
     "line number": [
      340
     ]
    },
    "numpy.asarray": {
     "line number": [
      340
     ]
    },
    "numpy.core.atleast_1d": {
     "line number": [
      314,
      315
     ]
    },
    "numpy.core.atleast_2d": {
     "line number": [
      287
     ]
    },
    "numpy.core.fromnumeric.sort": {
     "line number": [
      392
     ]
    },
    "numpy.core.linspace": {
     "line number": [
      335
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      319,
      323,
      329,
      353,
      359,
      378,
      388,
      393,
      405
     ]
    },
    "numpy.core.numeric.around": {
     "line number": [
      366,
      366
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      314,
      315
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      294,
      337,
      345
     ]
    },
    "numpy.core.numeric.empty": {
     "line number": [
      290
     ]
    },
    "numpy.core.numeric.isscalar": {
     "line number": [
      330
     ]
    },
    "numpy.core.numeric.ones": {
     "line number": [
      312,
      406
     ]
    },
    "numpy.core.numeric.where": {
     "line number": [
      368
     ]
    },
    "numpy.core.numeric.zeros": {
     "line number": [
      311,
      317,
      318,
      373,
      377,
      385
     ]
    },
    "numpy.core.umath.log10": {
     "line number": [
      363
     ]
    },
    "numpy.isinf": {
     "line number": [
      362
     ]
    },
    "numpy.lib.function_base.diff": {
     "line number": [
      339
     ]
    },
    "numpy.lib.function_base.range": {
     "line number": [
      308,
      320
     ]
    },
    "numpy.zeros": {
     "line number": [
      349
     ]
    },
    "slice": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.i0": {
  "data": {
   "shadows": "numpy.dual.i0"
  },
  "type": "import"
 },
 "numpy.lib.function_base.insert": {
  "data": {
   "lineno": 3305,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      3396
     ]
    },
    "DeprecationWarning": {
     "line number": [
      3414,
      3479
     ]
    },
    "FutureWarning": {
     "line number": [
      3435
     ]
    },
    "IndexError": {
     "line number": [
      3408,
      3448
     ]
    },
    "ValueError": {
     "line number": [
      3443
     ]
    },
    "bool": {
     "line number": [
      3431,
      3489
     ]
    },
    "isinstance": {
     "line number": [
      3425,
      3472
     ]
    },
    "len": {
     "line number": [
      3484
     ]
    },
    "list": {
     "line number": [
      3423
     ]
    },
    "numpy.arange": {
     "line number": [
      3486
     ]
    },
    "numpy.array": {
     "line number": [
      3430
     ]
    },
    "numpy.can_cast": {
     "line number": [
      3476
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      3427
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      3452
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      3399
     ]
    },
    "numpy.core.numeric.empty": {
     "line number": [
      3460,
      3492
     ]
    },
    "numpy.core.numeric.intp": {
     "line number": [
      3427,
      3436,
      3474,
      3476,
      3480
     ]
    },
    "numpy.core.numeric.ndarray": {
     "line number": [
      3393
     ]
    },
    "numpy.core.numeric.ones": {
     "line number": [
      3489
     ]
    },
    "numpy.lib.function_base.warnings": {
     "line number": [
      3412,
      3433,
      3477
     ]
    },
    "numpy.ndarray": {
     "line number": [
      3472
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      3457
     ]
    },
    "slice": {
     "line number": [
      3421,
      3425,
      3461,
      3463,
      3465,
      3466,
      3467,
      3493
     ]
    },
    "type": {
     "line number": [
      3393
     ]
    },
    "wrap": {
     "line number": [
      3392,
      3395,
      3417,
      3418,
      3469,
      3470,
      3499,
      3500
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.integer": {
  "data": {
   "shadows": "numpy.core.numeric.integer"
  },
  "type": "import"
 },
 "numpy.lib.function_base.interp": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1069
     ]
    },
    "int": {
     "line number": [
      1069
     ]
    },
    "isinstance": {
     "line number": [
      1069,
      1071
     ]
    },
    "numpy.core.numerictypes.number": {
     "line number": [
      1069
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1071
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.intp": {
  "data": {
   "shadows": "numpy.core.numeric.intp"
  },
  "type": "import"
 },
 "numpy.lib.function_base.isnan": {
  "data": {
   "shadows": "numpy.core.umath.isnan"
  },
  "type": "import"
 },
 "numpy.lib.function_base.isscalar": {
  "data": {
   "shadows": "numpy.core.numeric.isscalar"
  },
  "type": "import"
 },
 "numpy.lib.function_base.iterable": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.kaiser": {
  "data": {
   "lineno": 2369,
   "symbols_in_volume": {
    "float": {
     "line number": [
      2493
     ]
    },
    "numpy.array": {
     "line number": [
      2490
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      2491
     ]
    },
    "numpy.core.umath.sqrt": {
     "line number": [
      2493
     ]
    },
    "numpy.dual.i0": {
     "line number": [
      2493,
      2493
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.less_equal": {
  "data": {
   "shadows": "numpy.core.umath.less_equal"
  },
  "type": "import"
 },
 "numpy.lib.function_base.linspace": {
  "data": {
   "shadows": "numpy.core.linspace"
  },
  "type": "import"
 },
 "numpy.lib.function_base.log10": {
  "data": {
   "shadows": "numpy.core.umath.log10"
  },
  "type": "import"
 },
 "numpy.lib.function_base.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.function_base.mean": {
  "data": {
   "shadows": "numpy.core.fromnumeric.mean"
  },
  "type": "import"
 },
 "numpy.lib.function_base.median": {
  "data": {
   "lineno": 2600,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      2676
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      2674
     ]
    },
    "numpy.core.fromnumeric.mean": {
     "line number": [
      2718
     ]
    },
    "numpy.core.fromnumeric.partition": {
     "line number": [
      2701,
      2703
     ]
    },
    "slice": {
     "line number": [
      2709,
      2713,
      2715
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.meshgrid": {
  "data": {
   "lineno": 2980,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3076,
      3085
     ]
    },
    "enumerate": {
     "line number": [
      3088
     ]
    },
    "int": {
     "line number": [
      3075,
      3106
     ]
    },
    "len": {
     "line number": [
      3074,
      3075,
      3079
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      3078
     ]
    },
    "numpy.broadcast_arrays": {
     "line number": [
      3109
     ]
    },
    "numpy.ones": {
     "line number": [
      3106
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.mod": {
  "data": {
   "shadows": "numpy.core.umath.mod"
  },
  "type": "import"
 },
 "numpy.lib.function_base.msort": {
  "data": {
   "lineno": 2573,
   "symbols_in_volume": {
    "numpy.core.numeric.array": {
     "line number": [
      2596
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.multiply": {
  "data": {
   "shadows": "numpy.core.umath.multiply"
  },
  "type": "import"
 },
 "numpy.lib.function_base.ndarray": {
  "data": {
   "shadows": "numpy.core.numeric.ndarray"
  },
  "type": "import"
 },
 "numpy.lib.function_base.newaxis": {
  "data": {
   "shadows": "numpy.core.numeric.newaxis"
  },
  "type": "import"
 },
 "numpy.lib.function_base.nonzero": {
  "data": {
   "shadows": "numpy.core.fromnumeric.nonzero"
  },
  "type": "import"
 },
 "numpy.lib.function_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.function_base.number": {
  "data": {
   "shadows": "numpy.core.numerictypes.number"
  },
  "type": "import"
 },
 "numpy.lib.function_base.ones": {
  "data": {
   "shadows": "numpy.core.numeric.ones"
  },
  "type": "import"
 },
 "numpy.lib.function_base.partition": {
  "data": {
   "shadows": "numpy.core.fromnumeric.partition"
  },
  "type": "import"
 },
 "numpy.lib.function_base.percentile": {
  "data": {
   "lineno": 2720,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      2801
     ]
    },
    "numpy.core.fromnumeric.sort": {
     "line number": [
      2816
     ]
    },
    "numpy.lib.function_base._compute_qth_percentile": {
     "line number": [
      2820
     ]
    },
    "sorted": {
     "line number": [
      2810,
      2814,
      2816,
      2820
     ]
    },
    "sorted.sort": {
     "line number": [
      2811
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.pi": {
  "data": {
   "shadows": "numpy.core.umath.pi"
  },
  "type": "import"
 },
 "numpy.lib.function_base.piecewise": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      694
     ]
    },
    "bool": {
     "line number": [
      685
     ]
    },
    "isinstance": {
     "line number": [
      682,
      683,
      715
     ]
    },
    "item": {
     "line number": [
      720
     ]
    },
    "len": {
     "line number": [
      680,
      686
     ]
    },
    "list": {
     "line number": [
      682
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      679
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      685
     ]
    },
    "numpy.core.numeric.isscalar": {
     "line number": [
      681
     ]
    },
    "numpy.core.numeric.ndarray": {
     "line number": [
      683
     ]
    },
    "numpy.core.numeric.zeros": {
     "line number": [
      712
     ]
    },
    "numpy.lib.function_base.collections": {
     "line number": [
      715
     ]
    },
    "numpy.lib.function_base.range": {
     "line number": [
      689,
      704,
      713
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.place": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": {
    "_insert": {
     "line number": [
      1361
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.function_base.range": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.lib.function_base.ravel": {
  "data": {
   "shadows": "numpy.core.fromnumeric.ravel"
  },
  "type": "import"
 },
 "numpy.lib.function_base.select": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      765
     ]
    },
    "len": {
     "line number": [
      762,
      763
     ]
    },
    "max": {
     "line number": [
      776
     ]
    },
    "numpy.core.fromnumeric.choose": {
     "line number": [
      784
     ]
    },
    "numpy.core.numeric.ScalarType": {
     "line number": [
      776,
      780
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      771,
      773,
      776,
      777,
      779,
      781,
      783
     ]
    },
    "numpy.core.numeric.ones": {
     "line number": [
      781,
      783
     ]
    },
    "numpy.lib.function_base.range": {
     "line number": [
      770,
      778
     ]
    },
    "tuple": {
     "line number": [
      784
     ]
    },
    "type": {
     "line number": [
      776,
      780,
      781
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.set": {
  "data": {
   "shadows": "sets.Set"
  },
  "type": "import"
 },
 "numpy.lib.function_base.sin": {
  "data": {
   "shadows": "numpy.core.umath.sin"
  },
  "type": "import"
 },
 "numpy.lib.function_base.sinc": {
  "data": {
   "lineno": 2495,
   "symbols_in_volume": {
    "numpy.asanyarray": {
     "line number": [
      2569
     ]
    },
    "numpy.core.numeric.where": {
     "line number": [
      2570
     ]
    },
    "numpy.core.umath.pi": {
     "line number": [
      2570
     ]
    },
    "numpy.core.umath.sin": {
     "line number": [
      2571
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.sort": {
  "data": {
   "shadows": "numpy.core.fromnumeric.sort"
  },
  "type": "import"
 },
 "numpy.lib.function_base.sort_complex": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      1201
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      1199
     ]
    },
    "numpy.core.numeric.complexfloating": {
     "line number": [
      1201
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.sqrt": {
  "data": {
   "shadows": "numpy.core.umath.sqrt"
  },
  "type": "import"
 },
 "numpy.lib.function_base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.function_base.trapz": {
  "data": {
   "lineno": 2858,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2938
     ]
    },
    "len": {
     "line number": [
      2931
     ]
    },
    "numpy.asarray": {
     "line number": [
      2939,
      2940
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      2918,
      2922
     ]
    },
    "numpy.core.umath.add.reduce": {
     "line number": [
      2941
     ]
    },
    "numpy.lib.function_base.diff": {
     "line number": [
      2924,
      2930
     ]
    },
    "slice": {
     "line number": [
      2932,
      2933,
      2934,
      2935
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.trim_zeros": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1250
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.typecodes": {
  "data": {
   "shadows": "numpy.core.numerictypes.typecodes"
  },
  "type": "import"
 },
 "numpy.lib.function_base.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.lib.function_base.unique": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1274
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      1276
     ]
    },
    "numpy.core.numeric.concatenate": {
     "line number": [
      1272
     ]
    },
    "sets.Set": {
     "line number": [
      1275
     ]
    },
    "sorted": {
     "line number": [
      1275
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.unwrap": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1171
     ]
    },
    "len": {
     "line number": [
      1164
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      1172
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      1163
     ]
    },
    "numpy.core.numeric.copyto": {
     "line number": [
      1169,
      1171
     ]
    },
    "numpy.core.umath.mod": {
     "line number": [
      1168
     ]
    },
    "numpy.core.umath.pi": {
     "line number": [
      1122,
      1168,
      1168,
      1168,
      1169,
      1169
     ]
    },
    "numpy.lib.function_base.diff": {
     "line number": [
      1165
     ]
    },
    "slice": {
     "line number": [
      1166,
      1167
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1405
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.function_base.vectorize.__call__": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1559
     ]
    },
    "list": {
     "line number": [
      1563
     ]
    },
    "numpy.lib.function_base.range": {
     "line number": [
      1562
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize.__call__.func": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      1565
     ]
    },
    "len": {
     "line number": [
      1567
     ]
    },
    "zip": {
     "line number": [
      1567
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize.__init__": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1532,
      1536
     ]
    },
    "isinstance": {
     "line number": [
      1528
     ]
    },
    "numpy.core.numeric.dtype": {
     "line number": [
      1534
     ]
    },
    "numpy.core.numerictypes.typecodes": {
     "line number": [
      1531
     ]
    },
    "numpy.lib.function_base.iterable": {
     "line number": [
      1533
     ]
    },
    "sets.Set": {
     "line number": [
      1540,
      1541
     ]
    },
    "str": {
     "line number": [
      1528
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._get_ufunc_and_otypes": {
  "data": {
   "lineno": 1575,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1597,
      1610
     ]
    },
    "isinstance": {
     "line number": [
      1612
     ]
    },
    "len": {
     "line number": [
      1582,
      1589,
      1613,
      1624
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      1596,
      1618
     ]
    },
    "numpy.core.umath.frompyfunc": {
     "line number": [
      1589,
      1624
     ]
    },
    "numpy.lib.function_base.range": {
     "line number": [
      1619
     ]
    },
    "tuple": {
     "line number": [
      1612
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._get_ufunc_and_otypes._func": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1608
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._vectorize_call": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1631,
      1633
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      1636,
      1642,
      1645
     ]
    },
    "object": {
     "line number": [
      1636
     ]
    },
    "tuple": {
     "line number": [
      1645
     ]
    },
    "ufunc": {
     "line number": [
      1639
     ]
    },
    "ufunc.nout": {
     "line number": [
      1641
     ]
    },
    "zip": {
     "line number": [
      1646
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.function_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.function_base.where": {
  "data": {
   "shadows": "numpy.core.numeric.where"
  },
  "type": "import"
 },
 "numpy.lib.function_base.zeros": {
  "data": {
   "shadows": "numpy.core.numeric.zeros"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks": {
  "data": {
   "symbols_in_volume": {
    "numpy.lib.index_tricks.CClass": {
     "line number": [
      459
     ]
    },
    "numpy.lib.index_tricks.IndexExpression": {
     "line number": [
      636,
      637
     ]
    },
    "numpy.lib.index_tricks.RClass": {
     "line number": [
      437
     ]
    },
    "numpy.lib.index_tricks.mgrid": {
     "line number": [
      210
     ]
    },
    "numpy.lib.index_tricks.nd_grid": {
     "line number": [
      208,
      209
     ]
    },
    "numpy.lib.index_tricks.ogrid": {
     "line number": [
      211
     ]
    },
    "numpy.matrixlib.matrix": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.index_tricks.AxisConcatenator": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "object": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.AxisConcatenator.__getitem__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      293
     ]
    },
    "ValueError": {
     "line number": [
      273,
      289,
      293,
      294
     ]
    },
    "abs": {
     "line number": [
      263
     ]
    },
    "complex": {
     "line number": [
      262
     ]
    },
    "int": {
     "line number": [
      263,
      284,
      286,
      291
     ]
    },
    "isinstance": {
     "line number": [
      243,
      247,
      255,
      262,
      271,
      317
     ]
    },
    "len": {
     "line number": [
      253,
      285
     ]
    },
    "list": {
     "line number": [
      310
     ]
    },
    "numpy.core.numeric.ScalarType": {
     "line number": [
      295
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      266
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      268,
      296,
      303,
      304
     ]
    },
    "numpy.core.numeric.concatenate": {
     "line number": [
      326
     ]
    },
    "numpy.core.numeric.ndarray": {
     "line number": [
      317
     ]
    },
    "numpy.core.numerictypes.find_common_type": {
     "line number": [
      321
     ]
    },
    "numpy.lib.index_tricks.sys": {
     "line number": [
      244
     ]
    },
    "numpy.matrixlib.bmat": {
     "line number": [
      245
     ]
    },
    "range": {
     "line number": [
      253,
      310
     ]
    },
    "slice": {
     "line number": [
      255
     ]
    },
    "str": {
     "line number": [
      243,
      271
     ]
    },
    "tuple": {
     "line number": [
      247,
      326
     ]
    },
    "type": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.AxisConcatenator.__getslice__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "numpy.core.numeric.arange": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.AxisConcatenator.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "numpy.matrixlib": {
     "line number": [
      233,
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.AxisConcatenator.__len__": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.AxisConcatenator._retval": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "numpy.lib.index_tricks.makemat": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.CClass": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "numpy.lib.index_tricks.AxisConcatenator": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.CClass.__init__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "numpy.lib.index_tricks.AxisConcatenator": {
     "line number": [
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.IndexExpression": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "object": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.IndexExpression.__getitem__": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      631
     ]
    },
    "tuple": {
     "line number": [
      631
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.IndexExpression.__init__": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.RClass": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "numpy.lib.index_tricks.AxisConcatenator": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.RClass.__init__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "numpy.lib.index_tricks.AxisConcatenator": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ScalarType": {
  "data": {
   "shadows": "numpy.core.numeric.ScalarType"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks._nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.alltrue": {
  "data": {
   "shadows": "numpy.core.numeric.alltrue"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.arange": {
  "data": {
   "shadows": "numpy.core.numeric.arange"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.array": {
  "data": {
   "shadows": "numpy.core.numeric.array"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.c_": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.cumprod": {
  "data": {
   "shadows": "numpy.core.numeric.cumprod"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.diag_indices": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": {
    "numpy.core.numeric.arange": {
     "line number": [
      818
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.diag_indices_from": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      843,
      847
     ]
    },
    "diff": {
     "line number": [
      846
     ]
    },
    "numpy.core.numeric.alltrue": {
     "line number": [
      846
     ]
    },
    "numpy.lib.index_tricks.diag_indices": {
     "line number": [
      849
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.fill_diagonal": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      734,
      747
     ]
    },
    "diff": {
     "line number": [
      746
     ]
    },
    "numpy.core.numeric.alltrue": {
     "line number": [
      746
     ]
    },
    "numpy.core.numeric.cumprod": {
     "line number": [
      748
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.find_common_type": {
  "data": {
   "shadows": "numpy.core.numerictypes.find_common_type"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.index_exp": {
  "data": {
   "lineno": 636
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.ix_": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      76
     ]
    },
    "issubclass": {
     "line number": [
      77
     ]
    },
    "len": {
     "line number": [
      71,
      79
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      74
     ]
    },
    "numpy.core.numeric.bool_": {
     "line number": [
      77
     ]
    },
    "range": {
     "line number": [
      73
     ]
    },
    "tuple": {
     "line number": [
      80,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.makemat": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.matrix": {
  "data": {
   "shadows": "numpy.matrixlib"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.mgrid": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.nd_grid": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "object": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.nd_grid.__getitem__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      187
     ]
    },
    "TypeError": {
     "line number": [
      187
     ]
    },
    "abs": {
     "line number": [
      157,
      176,
      193
     ]
    },
    "complex": {
     "line number": [
      156,
      175,
      192
     ]
    },
    "float": {
     "line number": [
      158,
      161,
      162,
      163,
      164,
      178,
      196,
      198
     ]
    },
    "int": {
     "line number": [
      150,
      157,
      160,
      176,
      194
     ]
    },
    "isinstance": {
     "line number": [
      156,
      161,
      162,
      163,
      175,
      192
     ]
    },
    "len": {
     "line number": [
      151,
      167,
      170,
      181,
      182
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      166,
      198,
      200
     ]
    },
    "numpy.core.numeric.indices": {
     "line number": [
      169
     ]
    },
    "numpy.core.numeric.newaxis": {
     "line number": [
      181,
      185
     ]
    },
    "numpy.lib.index_tricks.math": {
     "line number": [
      160
     ]
    },
    "range": {
     "line number": [
      151,
      170,
      182
     ]
    },
    "slice": {
     "line number": [
      183
     ]
    },
    "zip": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.nd_grid.__getslice__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "numpy.core.numeric.arange": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.nd_grid.__init__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.nd_grid.__len__": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndenumerate": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "next": {
     "line number": [
      507
     ]
    },
    "object": {
     "line number": [
      461
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.ndenumerate.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "numpy.core.numeric.asarray": {
     "line number": [
      488
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndenumerate.__iter__": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndenumerate.__next__": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "next": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "next": {
     "line number": [
      570
     ]
    },
    "object": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.ndindex.__init__": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      540
     ]
    },
    "len": {
     "line number": [
      540
     ]
    },
    "numpy.core.numeric.nditer": {
     "line number": [
      543
     ]
    },
    "numpy.core.numeric.zeros": {
     "line number": [
      542
     ]
    },
    "numpy.core.numeric.zeros_like": {
     "line number": [
      542
     ]
    },
    "numpy.lib.stride_tricks.as_strided": {
     "line number": [
      542
     ]
    },
    "tuple": {
     "line number": [
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex.__iter__": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex.__next__": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "next": {
     "line number": [
      567
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex.ndincr": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "next": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ogrid": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.r_": {
  "data": {
   "lineno": 437
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.ravel_multi_index": {
  "data": {
   "shadows": "numpy.lib._compiled_base.ravel_multi_index"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.s_": {
  "data": {
   "lineno": 637
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.unravel_index": {
  "data": {
   "shadows": "numpy.lib._compiled_base.unravel_index"
  },
  "type": "import"
 },
 "numpy.lib.info": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.info.depends": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "numpy.lib.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.info.global_symbols": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "numpy.lib.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.nanfunctions.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.lib.nanfunctions._copyto": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      89
     ]
    },
    "numpy.copyto": {
     "line number": [
      90
     ]
    },
    "numpy.ndarray": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._divide_by_count": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      123
     ]
    },
    "numpy.divide": {
     "line number": [
      125,
      127,
      134
     ]
    },
    "numpy.errstate": {
     "line number": [
      122
     ]
    },
    "numpy.ndarray": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._replace_nan": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      53
     ]
    },
    "issubclass": {
     "line number": [
      56
     ]
    },
    "numpy.array": {
     "line number": [
      55,
      60
     ]
    },
    "numpy.copyto": {
     "line number": [
      63
     ]
    },
    "numpy.inexact": {
     "line number": [
      56
     ]
    },
    "numpy.isnan": {
     "line number": [
      62
     ]
    },
    "numpy.ndarray": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions.nanargmax": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      420
     ]
    },
    "numpy.all": {
     "line number": [
      418
     ]
    },
    "numpy.any": {
     "line number": [
      419
     ]
    },
    "numpy.argmax": {
     "line number": [
      416
     ]
    },
    "numpy.inf": {
     "line number": [
      415
     ]
    },
    "numpy.lib.nanfunctions._replace_nan": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanargmin": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      375
     ]
    },
    "numpy.all": {
     "line number": [
      373
     ]
    },
    "numpy.any": {
     "line number": [
      374
     ]
    },
    "numpy.argmin": {
     "line number": [
      371
     ]
    },
    "numpy.inf": {
     "line number": [
      370
     ]
    },
    "numpy.lib.nanfunctions._replace_nan": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmax": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      319,
      331
     ]
    },
    "isinstance": {
     "line number": [
      315
     ]
    },
    "numpy.all": {
     "line number": [
      328
     ]
    },
    "numpy.amax": {
     "line number": [
      323
     ]
    },
    "numpy.any": {
     "line number": [
      329
     ]
    },
    "numpy.fmax.reduce": {
     "line number": [
      317
     ]
    },
    "numpy.inf": {
     "line number": [
      322
     ]
    },
    "numpy.isnan": {
     "line number": [
      318
     ]
    },
    "numpy.lib.nanfunctions._copyto": {
     "line number": [
      330
     ]
    },
    "numpy.lib.nanfunctions._replace_nan": {
     "line number": [
      322
     ]
    },
    "numpy.lib.nanfunctions.warnings": {
     "line number": [
      319,
      331
     ]
    },
    "numpy.nan": {
     "line number": [
      330
     ]
    },
    "numpy.ndarray": {
     "line number": [
      315,
      315
     ]
    },
    "type": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmean": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      607
     ]
    },
    "TypeError": {
     "line number": [
      594,
      596
     ]
    },
    "issubclass": {
     "line number": [
      593,
      595
     ]
    },
    "numpy.dtype": {
     "line number": [
      592
     ]
    },
    "numpy.inexact": {
     "line number": [
      593,
      595
     ]
    },
    "numpy.intp": {
     "line number": [
      601
     ]
    },
    "numpy.lib.nanfunctions._divide_by_count": {
     "line number": [
      603
     ]
    },
    "numpy.lib.nanfunctions._replace_nan": {
     "line number": [
      587
     ]
    },
    "numpy.lib.nanfunctions.warnings": {
     "line number": [
      599,
      600,
      607
     ]
    },
    "numpy.mean": {
     "line number": [
      589
     ]
    },
    "numpy.sum": {
     "line number": [
      601,
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmin": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      220,
      232
     ]
    },
    "isinstance": {
     "line number": [
      216
     ]
    },
    "numpy.all": {
     "line number": [
      229
     ]
    },
    "numpy.amin": {
     "line number": [
      224
     ]
    },
    "numpy.any": {
     "line number": [
      230
     ]
    },
    "numpy.fmin.reduce": {
     "line number": [
      218
     ]
    },
    "numpy.inf": {
     "line number": [
      223
     ]
    },
    "numpy.isnan": {
     "line number": [
      219
     ]
    },
    "numpy.lib.nanfunctions._copyto": {
     "line number": [
      231
     ]
    },
    "numpy.lib.nanfunctions._replace_nan": {
     "line number": [
      223
     ]
    },
    "numpy.lib.nanfunctions.warnings": {
     "line number": [
      220,
      232
     ]
    },
    "numpy.nan": {
     "line number": [
      231
     ]
    },
    "numpy.ndarray": {
     "line number": [
      216,
      216
     ]
    },
    "type": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanstd": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      834
     ]
    },
    "numpy.lib.nanfunctions.nanvar": {
     "line number": [
      832
     ]
    },
    "numpy.ndarray": {
     "line number": [
      834
     ]
    },
    "numpy.sqrt": {
     "line number": [
      835,
      837
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nansum": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      514
     ]
    },
    "numpy.all": {
     "line number": [
      509
     ]
    },
    "numpy.any": {
     "line number": [
      511
     ]
    },
    "numpy.lib.nanfunctions._copyto": {
     "line number": [
      512
     ]
    },
    "numpy.lib.nanfunctions._replace_nan": {
     "line number": [
      505
     ]
    },
    "numpy.lib.nanfunctions.warnings": {
     "line number": [
      513
     ]
    },
    "numpy.nan": {
     "line number": [
      512
     ]
    },
    "numpy.sum": {
     "line number": [
      508,
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanvar": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      737
     ]
    },
    "TypeError": {
     "line number": [
      707,
      709
     ]
    },
    "issubclass": {
     "line number": [
      706,
      708,
      722
     ]
    },
    "numpy.any": {
     "line number": [
      736
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      722
     ]
    },
    "numpy.dtype": {
     "line number": [
      705
     ]
    },
    "numpy.inexact": {
     "line number": [
      706,
      708
     ]
    },
    "numpy.intp": {
     "line number": [
      715
     ]
    },
    "numpy.lib.nanfunctions._copyto": {
     "line number": [
      721,
      740
     ]
    },
    "numpy.lib.nanfunctions._divide_by_count": {
     "line number": [
      717,
      733
     ]
    },
    "numpy.lib.nanfunctions._replace_nan": {
     "line number": [
      699
     ]
    },
    "numpy.lib.nanfunctions.warnings": {
     "line number": [
      711,
      712,
      737
     ]
    },
    "numpy.multiply": {
     "line number": [
      723,
      725
     ]
    },
    "numpy.nan": {
     "line number": [
      740
     ]
    },
    "numpy.sum": {
     "line number": [
      715,
      716,
      728
     ]
    },
    "numpy.var": {
     "line number": [
      701
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions": {
  "data": {
   "symbols_in_volume": {
    "numpy.lib.recfunctions.sys": {
     "line number": [
      20
     ]
    },
    "numpy.ma.core._check_fill_value": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.recfunctions.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.MaskedArray"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.MaskedRecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.MaskedRecords"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.lib.recfunctions._check_fill_value": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.lib.recfunctions._fix_defaults": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "numpy.lib.recfunctions._fix_output": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      305
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      305
     ]
    },
    "numpy.ma.filled": {
     "line number": [
      311
     ]
    },
    "numpy.ma.mrecords.MaskedRecords": {
     "line number": [
      309
     ]
    },
    "numpy.recarray": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions._is_string_like": {
  "data": {
   "shadows": "numpy.lib._iotools._is_string_like"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions._izip_fields": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      257
     ]
    },
    "isinstance": {
     "line number": [
      257,
      260
     ]
    },
    "len": {
     "line number": [
      260
     ]
    },
    "numpy.compat.basestring": {
     "line number": [
      257
     ]
    },
    "numpy.void": {
     "line number": [
      260
     ]
    },
    "tuple": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions._izip_fields_flat": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      245
     ]
    },
    "numpy.void": {
     "line number": [
      245
     ]
    },
    "tuple": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.append_fields": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      613,
      629
     ]
    },
    "future_builtins.zip": {
     "line number": [
      620,
      631
     ]
    },
    "isinstance": {
     "line number": [
      610,
      614,
      622
     ]
    },
    "len": {
     "line number": [
      611,
      611,
      624,
      624,
      625,
      626,
      634,
      640,
      640
     ]
    },
    "list": {
     "line number": [
      610,
      622
     ]
    },
    "max": {
     "line number": [
      640
     ]
    },
    "numpy.array": {
     "line number": [
      619,
      630
     ]
    },
    "numpy.compat.basestring": {
     "line number": [
      614
     ]
    },
    "numpy.lib.recfunctions._fix_output": {
     "line number": [
      645
     ]
    },
    "numpy.lib.recfunctions.merge_arrays": {
     "line number": [
      633,
      635
     ]
    },
    "numpy.lib.recfunctions.recursive_fill_fields": {
     "line number": [
      642,
      643
     ]
    },
    "numpy.ma.masked_all": {
     "line number": [
      640
     ]
    },
    "tuple": {
     "line number": [
      610,
      622
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.drop_fields": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "_drop_descr": {
     "line number": [
      524
     ]
    },
    "numpy.empty": {
     "line number": [
      528
     ]
    },
    "numpy.lib._iotools._is_string_like": {
     "line number": [
      504
     ]
    },
    "numpy.lib.recfunctions._fix_output": {
     "line number": [
      530
     ]
    },
    "numpy.lib.recfunctions.recursive_fill_fields": {
     "line number": [
      529
     ]
    },
    "set": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.drop_fields._drop_descr": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "_drop_descr": {
     "line number": [
      517
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.find_duplicates": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "numpy.asanyarray": {
     "line number": [
      800
     ]
    },
    "numpy.concatenate": {
     "line number": [
      819
     ]
    },
    "numpy.lib.recfunctions.get_fieldstructure": {
     "line number": [
      802
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.flatten_descr": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.get_fieldstructure": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.get_names": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      102,
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.get_names_flat": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.izip_records": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      296
     ]
    },
    "future_builtins.zip": {
     "line number": [
      294
     ]
    },
    "numpy.lib.recfunctions._izip_fields": {
     "line number": [
      291
     ]
    },
    "numpy.lib.recfunctions._izip_fields_flat": {
     "line number": [
      289
     ]
    },
    "numpy.lib.recfunctions.itertools": {
     "line number": [
      285,
      286
     ]
    },
    "sentinel": {
     "line number": [
      286
     ]
    },
    "tuple": {
     "line number": [
      295
     ]
    },
    "zipfunc": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.izip_records.sentinel": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "counter": {
     "line number": [
      283
     ]
    },
    "len": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.join_by": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      883,
      892,
      894,
      907
     ]
    },
    "dict": {
     "line number": [
      990
     ]
    },
    "isinstance": {
     "line number": [
      886
     ]
    },
    "len": {
     "line number": [
      899,
      899,
      924,
      924,
      931,
      931,
      935
     ]
    },
    "list": {
     "line number": [
      941,
      943,
      945,
      947
     ]
    },
    "max": {
     "line number": [
      955,
      968
     ]
    },
    "numpy.compat.basestring": {
     "line number": [
      886
     ]
    },
    "numpy.concatenate": {
     "line number": [
      929,
      930,
      934
     ]
    },
    "numpy.lib.recfunctions._fix_defaults": {
     "line number": [
      991
     ]
    },
    "numpy.lib.recfunctions._fix_output": {
     "line number": [
      991
     ]
    },
    "numpy.lib.recfunctions.drop_fields": {
     "line number": [
      910,
      911
     ]
    },
    "numpy.ma.concatenate": {
     "line number": [
      914,
      919
     ]
    },
    "numpy.ma.masked_all": {
     "line number": [
      970
     ]
    },
    "set": {
     "line number": [
      903,
      903
     ]
    },
    "set.intersection": {
     "line number": [
      903
     ]
    },
    "tuple": {
     "line number": [
      966
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.merge_arrays": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "future_builtins.zip": {
     "line number": [
      419,
      448
     ]
    },
    "isinstance": {
     "line number": [
      384,
      427,
      453
     ]
    },
    "len": {
     "line number": [
      381,
      428,
      454
     ]
    },
    "list": {
     "line number": [
      443
     ]
    },
    "max": {
     "line number": [
      411
     ]
    },
    "numpy.array": {
     "line number": [
      432,
      457
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      382,
      408
     ]
    },
    "numpy.fromiter": {
     "line number": [
      442,
      461
     ]
    },
    "numpy.lib.recfunctions._check_fill_value": {
     "line number": [
      426,
      452
     ]
    },
    "numpy.lib.recfunctions.itertools": {
     "line number": [
      438,
      439,
      460
     ]
    },
    "numpy.lib.recfunctions.izip_records": {
     "line number": [
      441,
      443,
      461
     ]
    },
    "numpy.lib.recfunctions.zip_descr": {
     "line number": [
      387,
      413
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      398
     ]
    },
    "numpy.ma.array": {
     "line number": [
      442
     ]
    },
    "numpy.ma.getmaskarray": {
     "line number": [
      423
     ]
    },
    "numpy.ma.mrecords.MaskedRecords": {
     "line number": [
      396,
      445
     ]
    },
    "numpy.ndarray": {
     "line number": [
      384,
      402,
      427,
      453
     ]
    },
    "numpy.ones": {
     "line number": [
      433
     ]
    },
    "numpy.recarray": {
     "line number": [
      400,
      464
     ]
    },
    "numpy.void": {
     "line number": [
      384,
      427,
      453
     ]
    },
    "tuple": {
     "line number": [
      410,
      441,
      461
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.rec_append_fields": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": {
    "numpy.lib.recfunctions.append_fields": {
     "line number": [
      679
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rec_drop_fields": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "numpy.lib.recfunctions.drop_fields": {
     "line number": [
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rec_join": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1004
     ]
    },
    "numpy.lib.recfunctions.join_by": {
     "line number": [
      1006
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.recarray": {
  "data": {
   "shadows": "numpy.recarray"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.recursive_fill_fields": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      67
     ]
    },
    "input": {
     "line number": [
      66
     ]
    },
    "len": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rename_fields": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "_recursive_rename_fields": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rename_fields._recursive_rename_fields": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "_recursive_rename_fields": {
     "line number": [
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.stack_arrays": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      750
     ]
    },
    "dict": {
     "line number": [
      751
     ]
    },
    "future_builtins.zip": {
     "line number": [
      760
     ]
    },
    "isinstance": {
     "line number": [
      723
     ]
    },
    "len": {
     "line number": [
      725,
      728,
      753,
      763
     ]
    },
    "list": {
     "line number": [
      746
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      727
     ]
    },
    "numpy.cumsum": {
     "line number": [
      758
     ]
    },
    "numpy.dtype": {
     "line number": [
      745,
      745
     ]
    },
    "numpy.lib.recfunctions._fix_defaults": {
     "line number": [
      770
     ]
    },
    "numpy.lib.recfunctions._fix_output": {
     "line number": [
      770
     ]
    },
    "numpy.ma.concatenate": {
     "line number": [
      754
     ]
    },
    "numpy.ma.masked_all": {
     "line number": [
      757
     ]
    },
    "numpy.ndarray": {
     "line number": [
      723
     ]
    },
    "numpy.r_": {
     "line number": [
      758
     ]
    },
    "numpy.sum": {
     "line number": [
      757
     ]
    },
    "tuple": {
     "line number": [
      748
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.zip": {
  "data": {
   "shadows": "future_builtins.zip"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.zip_descr": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "len": {
     "line number": [
      184
     ]
    },
    "numpy.dtype": {
     "line number": [
      188
     ]
    },
    "numpy.lib.recfunctions.flatten_descr": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath": {
  "data": {
   "symbols_in_volume": {
    "numpy.core.numeric.log": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.scimath.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.lib.scimath._fix_int_lt_zero": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "numpy.core.numeric.any": {
     "line number": [
      140
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      139
     ]
    },
    "numpy.lib.type_check.isreal": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath._fix_real_abs_gt_1": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      166
     ]
    },
    "numpy.core.numeric.any": {
     "line number": [
      166
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      165
     ]
    },
    "numpy.lib.scimath._tocomplex": {
     "line number": [
      167
     ]
    },
    "numpy.lib.type_check.isreal": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath._fix_real_lt_zero": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "numpy.core.numeric.any": {
     "line number": [
      114
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      113
     ]
    },
    "numpy.lib.scimath._tocomplex": {
     "line number": [
      115
     ]
    },
    "numpy.lib.type_check.isreal": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath._ln2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.lib.scimath._tocomplex": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      86
     ]
    },
    "numpy.core.numerictypes.byte": {
     "line number": [
      86
     ]
    },
    "numpy.core.numerictypes.cdouble": {
     "line number": [
      90
     ]
    },
    "numpy.core.numerictypes.csingle": {
     "line number": [
      87,
      88
     ]
    },
    "numpy.core.numerictypes.short": {
     "line number": [
      86
     ]
    },
    "numpy.core.numerictypes.single": {
     "line number": [
      86
     ]
    },
    "numpy.core.numerictypes.ubyte": {
     "line number": [
      86
     ]
    },
    "numpy.core.numerictypes.ushort": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.scimath.any": {
  "data": {
   "shadows": "numpy.core.numeric.any"
  },
  "type": "import"
 },
 "numpy.lib.scimath.arccos": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "numpy.core.numeric.arccos": {
     "line number": [
      470
     ]
    },
    "numpy.lib.scimath._fix_real_abs_gt_1": {
     "line number": [
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath.arcsin": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "numpy.core.numeric.arcsin": {
     "line number": [
      514
     ]
    },
    "numpy.lib.scimath._fix_real_abs_gt_1": {
     "line number": [
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath.arctanh": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "numpy.core.numeric.arctanh": {
     "line number": [
      560
     ]
    },
    "numpy.lib.scimath._fix_real_abs_gt_1": {
     "line number": [
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.scimath.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.scimath.isreal": {
  "data": {
   "shadows": "numpy.lib.type_check.isreal"
  },
  "type": "import"
 },
 "numpy.lib.scimath.log": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "numpy.core.numeric.log": {
     "line number": [
      256
     ]
    },
    "numpy.lib.scimath._fix_real_lt_zero": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath.log10": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "numpy.core.numeric.log10": {
     "line number": [
      304
     ]
    },
    "numpy.lib.scimath._fix_real_lt_zero": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath.log2": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "numpy.core.numeric.log2": {
     "line number": [
      384
     ]
    },
    "numpy.lib.scimath._fix_real_lt_zero": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath.logn": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "numpy.core.numeric.log": {
     "line number": [
      338,
      338
     ]
    },
    "numpy.lib.scimath._fix_real_lt_zero": {
     "line number": [
      336,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath.nt": {
  "data": {
   "shadows": "numpy.core.numerictypes"
  },
  "type": "import"
 },
 "numpy.lib.scimath.nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.scimath.power": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "numpy.core.numeric.power": {
     "line number": [
      427
     ]
    },
    "numpy.lib.scimath._fix_int_lt_zero": {
     "line number": [
      426
     ]
    },
    "numpy.lib.scimath._fix_real_lt_zero": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.scimath.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.scimath.sqrt": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.core.numeric.sqrt": {
     "line number": [
      210
     ]
    },
    "numpy.lib.scimath._fix_real_lt_zero": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      22
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      24
     ]
    },
    "numpy.lib.setup.configuration": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.lib.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      8
     ]
    },
    "os.path.join": {
     "line number": [
      10,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.lib.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.lib.shape_base": {
  "data": {
   "symbols_in_volume": {
    "numpy.core.vstack": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.shape_base.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.lib.shape_base._nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.shape_base._replace_zero_by_x_arrays": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "len": {
     "line number": [
      348,
      349
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      350,
      352
     ]
    },
    "numpy.core.numeric.equal": {
     "line number": [
      351
     ]
    },
    "numpy.core.numeric.shape": {
     "line number": [
      349,
      351
     ]
    },
    "numpy.core.numeric.sometrue": {
     "line number": [
      351
     ]
    },
    "range": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.apply_along_axis": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      70
     ]
    },
    "func1d": {
     "line number": [
      79,
      95,
      116
     ]
    },
    "len": {
     "line number": [
      103
     ]
    },
    "list": {
     "line number": [
      74,
      102
     ]
    },
    "numpy.core.fromnumeric.product": {
     "line number": [
      84,
      100
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      65,
      77,
      82,
      104
     ]
    },
    "numpy.core.numeric.isscalar": {
     "line number": [
      81
     ]
    },
    "numpy.core.numeric.zeros": {
     "line number": [
      73,
      82,
      104
     ]
    },
    "range": {
     "line number": [
      74
     ]
    },
    "slice": {
     "line number": [
      76
     ]
    },
    "tuple": {
     "line number": [
      79,
      83,
      95,
      96,
      105,
      116,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.apply_over_axes": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      189
     ]
    },
    "func": {
     "line number": [
      181
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      176
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      174
     ]
    },
    "numpy.lib.shape_base.expand_dims": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.array": {
  "data": {
   "shadows": "numpy.core.numeric.array"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.array_split": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      377
     ]
    },
    "TypeError": {
     "line number": [
      382
     ]
    },
    "ValueError": {
     "line number": [
      385
     ]
    },
    "divmod": {
     "line number": [
      386
     ]
    },
    "int": {
     "line number": [
      383
     ]
    },
    "len": {
     "line number": [
      378,
      380
     ]
    },
    "list": {
     "line number": [
      381
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      390
     ]
    },
    "numpy.core.numeric.swapaxes": {
     "line number": [
      393,
      396
     ]
    },
    "numpy.lib.shape_base._replace_zero_by_x_arrays": {
     "line number": [
      401
     ]
    },
    "range": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.atleast_3d": {
  "data": {
   "shadows": "numpy.core.atleast_3d"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.column_stack": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "numpy.core.numeric.array": {
     "line number": [
      291,
      293
     ]
    },
    "numpy.core.numeric.concatenate": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.concatenate": {
  "data": {
   "shadows": "numpy.core.numeric.concatenate"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.dsplit": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      635
     ]
    },
    "len": {
     "line number": [
      634
     ]
    },
    "numpy.core.numeric.shape": {
     "line number": [
      634
     ]
    },
    "numpy.lib.shape_base.split": {
     "line number": [
      636
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.dstack": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "numpy.core.atleast_3d": {
     "line number": [
      345
     ]
    },
    "numpy.core.numeric.concatenate": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.expand_dims": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "len": {
     "line number": [
      247
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.get_array_prepare": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      644
     ]
    },
    "getattr": {
     "line number": [
      643
     ]
    },
    "hasattr": {
     "line number": [
      645
     ]
    },
    "sorted": {
     "line number": [
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.get_array_wrap": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      656
     ]
    },
    "getattr": {
     "line number": [
      655
     ]
    },
    "hasattr": {
     "line number": [
      657
     ]
    },
    "sorted": {
     "line number": [
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.hsplit": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      536
     ]
    },
    "len": {
     "line number": [
      535,
      537
     ]
    },
    "numpy.core.numeric.shape": {
     "line number": [
      535
     ]
    },
    "numpy.lib.shape_base.split": {
     "line number": [
      538,
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.hstack": {
  "data": {
   "shadows": "numpy.core.hstack"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.isscalar": {
  "data": {
   "shadows": "numpy.core.numeric.isscalar"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.kron": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": {
    "numpy.core.fromnumeric.reshape": {
     "line number": [
      738,
      740
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      731
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      730
     ]
    },
    "numpy.core.numeric.concatenate": {
     "line number": [
      751
     ]
    },
    "numpy.core.numeric.multiply": {
     "line number": [
      734
     ]
    },
    "numpy.core.numeric.outer": {
     "line number": [
      748
     ]
    },
    "numpy.lib.shape_base.get_array_prepare": {
     "line number": [
      752
     ]
    },
    "numpy.lib.shape_base.get_array_wrap": {
     "line number": [
      755
     ]
    },
    "range": {
     "line number": [
      750
     ]
    },
    "wrapper": {
     "line number": [
      754,
      755,
      756,
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.newaxis": {
  "data": {
   "shadows": "numpy.core.numeric.newaxis"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.outer": {
  "data": {
   "shadows": "numpy.core.numeric.outer"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.product": {
  "data": {
   "shadows": "numpy.core.fromnumeric.product"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.reshape": {
  "data": {
   "shadows": "numpy.core.fromnumeric.reshape"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.row_stack": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "numpy.lib.shape_base.split": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      472
     ]
    },
    "ValueError": {
     "line number": [
      476
     ]
    },
    "len": {
     "line number": [
      471
     ]
    },
    "numpy.lib.shape_base.array_split": {
     "line number": [
      477
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.tile": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      819
     ]
    },
    "enumerate": {
     "line number": [
      827
     ]
    },
    "len": {
     "line number": [
      821
     ]
    },
    "list": {
     "line number": [
      823
     ]
    },
    "max": {
     "line number": [
      824,
      833
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      822
     ]
    },
    "tuple": {
     "line number": [
      818
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.vsplit": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      590
     ]
    },
    "len": {
     "line number": [
      589
     ]
    },
    "numpy.core.numeric.shape": {
     "line number": [
      589
     ]
    },
    "numpy.lib.shape_base.split": {
     "line number": [
      591
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.shape_base.vstack": {
  "data": {
   "shadows": "numpy.core.vstack"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.zeros": {
  "data": {
   "shadows": "numpy.core.numeric.zeros"
  },
  "type": "import"
 },
 "numpy.lib.stride_tricks": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.stride_tricks.DummyArray": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "object": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.stride_tricks.DummyArray.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.lib.stride_tricks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.stride_tricks.as_strided": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      25
     ]
    },
    "numpy.asarray": {
     "line number": [
      30
     ]
    },
    "numpy.lib.stride_tricks.DummyArray": {
     "line number": [
      30
     ]
    },
    "tuple": {
     "line number": [
      27,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.broadcast_arrays": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99
     ]
    },
    "len": {
     "line number": [
      77,
      82,
      86,
      97,
      101,
      109
     ]
    },
    "list": {
     "line number": [
      80,
      81
     ]
    },
    "max": {
     "line number": [
      83
     ]
    },
    "numpy.asarray": {
     "line number": [
      75
     ]
    },
    "numpy.lib.stride_tricks.as_strided": {
     "line number": [
      119
     ]
    },
    "range": {
     "line number": [
      86,
      94,
      109
     ]
    },
    "set": {
     "line number": [
      77,
      96
     ]
    },
    "zip": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.stride_tricks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.stride_tricks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.test": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      335
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      50
     ]
    },
    "numpy.lib.tests.test__datasource.sys": {
     "line number": [
      11
     ]
    },
    "run_module_suite": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test__datasource.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath": {
  "data": {
   "lineno": 186
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.setUp": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "numpy.lib._datasource.DataSource": {
     "line number": [
      189
     ]
    },
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      188
     ]
    },
    "tempfile.mkdtemp": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.tearDown": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "shutil.rmtree": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_InvalidFile": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      218
     ]
    },
    "numpy.lib.tests.test__datasource.valid_textfile": {
     "line number": [
      216,
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_InvalidHTTP": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.invalid_httpurl": {
     "line number": [
      210
     ]
    },
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      211,
      212
     ]
    },
    "numpy.lib.tests.test__datasource.valid_httpurl": {
     "line number": [
      213
     ]
    },
    "urlparse.urlparse": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_ValidFile": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      203,
      205
     ]
    },
    "numpy.lib.tests.test__datasource.valid_textfile": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_ValidHTTP": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      197,
      198
     ]
    },
    "numpy.lib.tests.test__datasource.valid_httpurl": {
     "line number": [
      196,
      199
     ]
    },
    "urlparse.urlparse": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_sandboxing": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      230,
      231,
      232,
      233,
      235,
      236
     ]
    },
    "numpy.lib.tests.test__datasource.http_path": {
     "line number": [
      235
     ]
    },
    "numpy.lib.tests.test__datasource.invalid_httpurl": {
     "line number": [
      231
     ]
    },
    "numpy.lib.tests.test__datasource.malicious_files": {
     "line number": [
      234
     ]
    },
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      226,
      228
     ]
    },
    "numpy.lib.tests.test__datasource.valid_httpurl": {
     "line number": [
      230
     ]
    },
    "numpy.lib.tests.test__datasource.valid_textfile": {
     "line number": [
      225
     ]
    },
    "tmp_path": {
     "line number": [
      230,
      231,
      232,
      233,
      235,
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_windows_os_sep": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      239,
      241,
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists": {
  "data": {
   "lineno": 156
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.setUp": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "numpy.lib._datasource.DataSource": {
     "line number": [
      159
     ]
    },
    "tempfile.mkdtemp": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.tearDown": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "shutil.rmtree": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_InvalidFile": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.invalid_textfile": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_InvalidHTTP": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.invalid_httpurl": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_ValidFile": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      174,
      178
     ]
    },
    "numpy.lib.tests.test__datasource.valid_textfile": {
     "line number": [
      173,
      177
     ]
    },
    "shutil.rmtree": {
     "line number": [
      179
     ]
    },
    "tempfile.mkdtemp": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_ValidHTTP": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      166
     ]
    },
    "numpy.lib.tests.test__datasource.valid_httpurl": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen": {
  "data": {
   "lineno": 85
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.setUp": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "numpy.lib._datasource.DataSource": {
     "line number": [
      88
     ]
    },
    "tempfile.mkdtemp": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.tearDown": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "shutil.rmtree": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_InvalidFile": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      119
     ]
    },
    "numpy.lib.tests.test__datasource.invalid_textfile": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_InvalidHTTP": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      101,
      104
     ]
    },
    "assert_": {
     "line number": [
      106
     ]
    },
    "numpy.lib.tests.test__datasource.invalid_httpurl": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_InvalidHTTPCacheURLError": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.invalid_httpurl": {
     "line number": [
      109
     ]
    },
    "urllib2.URLError": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidBz2File": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      141
     ]
    },
    "numpy.lib.tests.test__datasource.bz2": {
     "line number": [
      147
     ]
    },
    "numpy.lib.tests.test__datasource.magic_line": {
     "line number": [
      148,
      153
     ]
    },
    "numpy.lib.tests.test__datasource.nose": {
     "line number": [
      144
     ]
    },
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidFile": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      114
     ]
    },
    "numpy.lib.tests.test__datasource.valid_textfile": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidGzipFile": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      124
     ]
    },
    "numpy.lib.tests.test__datasource.gzip": {
     "line number": [
      130
     ]
    },
    "numpy.lib.tests.test__datasource.magic_line": {
     "line number": [
      131,
      136
     ]
    },
    "numpy.lib.tests.test__datasource.nose": {
     "line number": [
      127
     ]
    },
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidHTTP": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      96
     ]
    },
    "numpy.lib.tests.test__datasource.valid_httpurl": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc": {
  "data": {
   "lineno": 316
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc.setUp": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "tempfile.mkdtemp": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc.tearDown": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "shutil.rmtree": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc.test_DataSourceOpen": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      327,
      331
     ]
    },
    "numpy.lib._datasource.open": {
     "line number": [
      326,
      330
     ]
    },
    "numpy.lib.tests.test__datasource.valid_textfile": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath": {
  "data": {
   "lineno": 251
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.setUp": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "numpy.lib._datasource.Repository": {
     "line number": [
      254
     ]
    },
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      253
     ]
    },
    "numpy.lib.tests.test__datasource.valid_baseurl": {
     "line number": [
      254
     ]
    },
    "tempfile.mkdtemp": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.tearDown": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "shutil.rmtree": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.test_ValidHTTP": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      262,
      263
     ]
    },
    "numpy.lib.tests.test__datasource.valid_httpfile": {
     "line number": [
      264
     ]
    },
    "numpy.lib.tests.test__datasource.valid_httpurl": {
     "line number": [
      261
     ]
    },
    "urlparse.urlparse": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.test_sandboxing": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      269,
      271,
      272
     ]
    },
    "numpy.lib.tests.test__datasource.http_path": {
     "line number": [
      271
     ]
    },
    "numpy.lib.tests.test__datasource.malicious_files": {
     "line number": [
      270
     ]
    },
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      268
     ]
    },
    "numpy.lib.tests.test__datasource.valid_httpfile": {
     "line number": [
      269
     ]
    },
    "tmp_path": {
     "line number": [
      268,
      269,
      271,
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.test_windows_os_sep": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      275,
      277,
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists": {
  "data": {
   "lineno": 284
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.setUp": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "numpy.lib._datasource.Repository": {
     "line number": [
      287
     ]
    },
    "numpy.lib.tests.test__datasource.valid_baseurl": {
     "line number": [
      287
     ]
    },
    "tempfile.mkdtemp": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.tearDown": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "shutil.rmtree": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_CachedHTTPFile": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      314
     ]
    },
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      311,
      312
     ]
    },
    "numpy.lib.tests.test__datasource.valid_httpurl": {
     "line number": [
      306
     ]
    },
    "numpy.lib.tests.test__datasource.valid_textfile": {
     "line number": [
      313
     ]
    },
    "urlparse.urlparse": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_InvalidFile": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.invalid_textfile": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_RemoveHTTPFile": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      303
     ]
    },
    "numpy.lib.tests.test__datasource.valid_httpurl": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_ValidFile": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      296
     ]
    },
    "numpy.lib.tests.test__datasource.valid_textfile": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.URLError": {
  "data": {
   "shadows": "urllib2.URLError"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.datasource": {
  "data": {
   "shadows": "numpy.lib._datasource"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.http_fakefile": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.http_fakepath": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.http_file": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.http_path": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.invalid_baseurl": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.http_fakepath": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.invalid_httpfile": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.http_fakefile": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.invalid_httpurl": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.http_fakefile": {
     "line number": [
      71
     ]
    },
    "numpy.lib.tests.test__datasource.http_fakepath": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.invalid_textfile": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      63,
      64
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.magic_line": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.malicious_files": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.mkstemp": {
  "data": {
   "shadows": "tempfile.mkstemp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.old_urlopen": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.setup": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.old_urlopen": {
     "line number": [
      34
     ]
    },
    "numpy.lib.tests.test__datasource.urlopen_stub": {
     "line number": [
      35
     ]
    },
    "urllib2.urlopen": {
     "line number": [
      34,
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.teardown": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.old_urlopen": {
     "line number": [
      38
     ]
    },
    "urllib2.urlopen": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.urllib_request": {
  "data": {
   "shadows": "urllib2"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.urlopen_stub": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.valid_httpurl": {
     "line number": [
      22
     ]
    },
    "tempfile.NamedTemporaryFile": {
     "line number": [
      23
     ]
    },
    "urllib2.URLError": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.urlparse": {
  "data": {
   "shadows": "urlparse.urlparse"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.valid_baseurl": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.http_path": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.valid_httpfile": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.http_file": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.valid_httpurl": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.http_file": {
     "line number": [
      68
     ]
    },
    "numpy.lib.tests.test__datasource.http_path": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.valid_textfile": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "numpy.lib.tests.test__datasource.os": {
     "line number": [
      57
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      320
     ]
    },
    "run_module_suite": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test__iotools.LineSplitter": {
  "data": {
   "shadows": "numpy.lib._iotools.LineSplitter"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.NameValidator": {
  "data": {
   "shadows": "numpy.lib._iotools.NameValidator"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.StringConverter": {
  "data": {
   "shadows": "numpy.lib._iotools.StringConverter"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_constant_fixed_width": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      55,
      59,
      63
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      53,
      57,
      61
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      55,
      59,
      63
     ]
    },
    "numpy.lib._iotools.LineSplitter": {
     "line number": [
      54,
      58,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_no_delimiter": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      20,
      22
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      18
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      20,
      22
     ]
    },
    "numpy.lib._iotools.LineSplitter": {
     "line number": [
      19,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_other_delimiter": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      45,
      49
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      43,
      44,
      47,
      48
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      45,
      49
     ]
    },
    "numpy.lib._iotools.LineSplitter": {
     "line number": [
      44,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_space_delimiter": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      28,
      30
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      26,
      27,
      29
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      28,
      30
     ]
    },
    "numpy.lib._iotools.LineSplitter": {
     "line number": [
      27,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_tab_delimiter": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      36,
      39
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      34,
      35,
      37,
      38
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      36,
      39
     ]
    },
    "numpy.lib._iotools.LineSplitter": {
     "line number": [
      35,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_variable_fixed_width": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      68,
      72
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      66,
      70
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      68,
      72
     ]
    },
    "numpy.lib._iotools.LineSplitter": {
     "line number": [
      67,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions": {
  "data": {
   "lineno": 231
  },
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions.test_easy_dtype": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      246,
      249,
      252,
      256,
      260,
      264,
      267,
      271,
      273,
      276,
      279,
      283,
      287,
      291,
      295
     ]
    },
    "float": {
     "line number": [
      245,
      246,
      270,
      271,
      274,
      277,
      280,
      282,
      282,
      284,
      284,
      286,
      286,
      288,
      288,
      290,
      292,
      294,
      296
     ]
    },
    "int": {
     "line number": [
      270,
      271,
      274,
      277,
      280,
      282,
      284,
      286,
      288
     ]
    },
    "numpy.dtype": {
     "line number": [
      246,
      250,
      253,
      257,
      261,
      265,
      268,
      271,
      274,
      277,
      280,
      284,
      288,
      290,
      292,
      294,
      296
     ]
    },
    "numpy.lib._iotools.easy_dtype": {
     "line number": [
      246,
      249,
      252,
      256,
      260,
      264,
      267,
      271,
      273,
      276,
      279,
      283,
      287,
      291,
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions.test_flatten_dtype": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      304,
      308,
      312,
      314,
      318
     ]
    },
    "float": {
     "line number": [
      304,
      304,
      310,
      312,
      314,
      318,
      318
     ]
    },
    "int": {
     "line number": [
      306,
      308,
      310,
      312,
      314
     ]
    },
    "numpy.dtype": {
     "line number": [
      302,
      306,
      308,
      308,
      310,
      316
     ]
    },
    "numpy.lib._iotools.flatten_dtype": {
     "line number": [
      303,
      307,
      311,
      313,
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions.test_has_nested_dtype": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      236,
      238,
      240
     ]
    },
    "float": {
     "line number": [
      237,
      239
     ]
    },
    "int": {
     "line number": [
      239
     ]
    },
    "numpy.dtype": {
     "line number": [
      235,
      237,
      239
     ]
    },
    "numpy.float": {
     "line number": [
      235
     ]
    },
    "numpy.lib._iotools.has_nested_fields": {
     "line number": [
      236,
      238,
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator": {
  "data": {
   "lineno": 77
  },
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_case_sensitivity": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      83,
      85,
      87,
      89
     ]
    },
    "numpy.lib._iotools.NameValidator": {
     "line number": [
      82,
      84,
      86,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_excludelist": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      96
     ]
    },
    "numpy.lib._iotools.NameValidator": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_missing_names": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      102,
      104,
      106,
      108
     ]
    },
    "numpy.lib._iotools.NameValidator": {
     "line number": [
      101
     ]
    },
    "validator": {
     "line number": [
      102,
      104,
      106,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_validate_nb_names": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      114,
      115
     ]
    },
    "numpy.lib._iotools.NameValidator": {
     "line number": [
      113
     ]
    },
    "validator": {
     "line number": [
      113,
      114,
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_validate_wo_names": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      122
     ]
    },
    "assert_equal": {
     "line number": [
      123
     ]
    },
    "numpy.lib._iotools.NameValidator": {
     "line number": [
      121
     ]
    },
    "validator": {
     "line number": [
      121,
      122,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter": {
  "data": {
   "lineno": 136
  },
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_creation": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      142,
      143
     ]
    },
    "int": {
     "line number": [
      141
     ]
    },
    "numpy.lib._iotools.StringConverter": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_int64_dtype": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      219,
      221
     ]
    },
    "converter": {
     "line number": [
      217,
      219,
      221
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      218,
      220
     ]
    },
    "numpy.int64": {
     "line number": [
      217
     ]
    },
    "numpy.lib._iotools.StringConverter": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_keep_default": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      195,
      196,
      200,
      201
     ]
    },
    "converter": {
     "line number": [
      192,
      198
     ]
    },
    "converter.default": {
     "line number": [
      195,
      200
     ]
    },
    "converter.type": {
     "line number": [
      196,
      201
     ]
    },
    "converter.upgrade": {
     "line number": [
      194,
      199
     ]
    },
    "float": {
     "line number": [
      196,
      201
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      192,
      194,
      198,
      199
     ]
    },
    "numpy.dtype": {
     "line number": [
      196,
      201
     ]
    },
    "numpy.lib._iotools.StringConverter": {
     "line number": [
      192,
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_keep_default_zero": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      207
     ]
    },
    "converter": {
     "line number": [
      205
     ]
    },
    "converter.default": {
     "line number": [
      207
     ]
    },
    "int": {
     "line number": [
      205
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      206
     ]
    },
    "numpy.lib._iotools.StringConverter": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_keep_missing_values": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      213
     ]
    },
    "converter": {
     "line number": [
      211
     ]
    },
    "converter.missing_values": {
     "line number": [
      213
     ]
    },
    "int": {
     "line number": [
      211
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      212
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      213
     ]
    },
    "numpy.lib._iotools.StringConverter": {
     "line number": [
      211
     ]
    },
    "set": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_missing": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      169
     ]
    },
    "assert_equal": {
     "line number": [
      163,
      164,
      165,
      166
     ]
    },
    "converter": {
     "line number": [
      163,
      164,
      165,
      166,
      168
     ]
    },
    "converter.default": {
     "line number": [
      164,
      165,
      166
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      160,
      161,
      162,
      163,
      164,
      165,
      166
     ]
    },
    "numpy.lib._iotools.StringConverter": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_string_to_object": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      188
     ]
    },
    "assert_equal": {
     "line number": [
      187
     ]
    },
    "hasattr": {
     "line number": [
      188
     ]
    },
    "numpy.lib._iotools.StringConverter": {
     "line number": [
      186
     ]
    },
    "numpy.lib.tests.test__iotools._bytes_to_date": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_uint64_dtype": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      227
     ]
    },
    "converter": {
     "line number": [
      225,
      227
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      226
     ]
    },
    "numpy.lib._iotools.StringConverter": {
     "line number": [
      225
     ]
    },
    "numpy.uint64": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_upgrade": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      148,
      150,
      152,
      154,
      156
     ]
    },
    "len": {
     "line number": [
      156
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      149,
      151,
      153,
      155
     ]
    },
    "numpy.lib._iotools.StringConverter": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_upgrademapper": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      178,
      180,
      182
     ]
    },
    "convert": {
     "line number": [
      177,
      179,
      181
     ]
    },
    "datetime.date": {
     "line number": [
      175,
      176,
      178,
      180,
      182
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      177,
      179,
      181
     ]
    },
    "numpy.lib._iotools.StringConverter": {
     "line number": [
      176
     ]
    },
    "numpy.lib._iotools.StringConverter.upgrade_mapper": {
     "line number": [
      175
     ]
    },
    "numpy.lib.tests.test__iotools._bytes_to_date": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools._bytes_to_date": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "datetime.date": {
     "line number": [
      132,
      134
     ]
    },
    "numpy.lib.tests.test__iotools.sys": {
     "line number": [
      131
     ]
    },
    "numpy.lib.tests.test__iotools.time": {
     "line number": [
      132,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.asbytes_nested": {
  "data": {
   "shadows": "numpy.compat.asbytes_nested"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.easy_dtype": {
  "data": {
   "shadows": "numpy.lib._iotools.easy_dtype"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.flatten_dtype": {
  "data": {
   "shadows": "numpy.lib._iotools.flatten_dtype"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.has_nested_fields": {
  "data": {
   "shadows": "numpy.lib._iotools.has_nested_fields"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      538
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_arraypad.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.TestConstant": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      224
     ]
    },
    "numpy.array": {
     "line number": [
      226
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      225
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestEdge": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      469
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestEdge.test_check_simple": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      471
     ]
    },
    "numpy.array": {
     "line number": [
      474
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      473
     ]
    },
    "numpy.reshape": {
     "line number": [
      472
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp.test_check_simple": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      248
     ]
    },
    "numpy.array": {
     "line number": [
      250
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      249
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_01": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      340
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      339
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_02": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      345
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      344
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_03": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      350
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      349
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_large_pad": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      298
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      297
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_shape": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      320
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      319
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_simple": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      273
     ]
    },
    "numpy.array": {
     "line number": [
      275
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      274
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatLen": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      448
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestStatLen.test_check_simple": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      450
     ]
    },
    "numpy.array": {
     "line number": [
      453
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      452
     ]
    },
    "numpy.reshape": {
     "line number": [
      451
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      466
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_maximum_1": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      37
     ]
    },
    "numpy.array": {
     "line number": [
      39
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      38
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_maximum_2": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      60
     ]
    },
    "numpy.array": {
     "line number": [
      62
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      61
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_mean_2": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      199
     ]
    },
    "numpy.array": {
     "line number": [
      201
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      200
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_mean_shape_one": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      180
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      179
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_mean_stat_length": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      14
     ]
    },
    "numpy.array": {
     "line number": [
      16
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      15
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      129
     ]
    },
    "numpy.array": {
     "line number": [
      131
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      130
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median_01": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      152,
      154
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      153
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median_02": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      165,
      167
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      166
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_minimum_1": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      83
     ]
    },
    "numpy.array": {
     "line number": [
      85
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      84
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_minimum_2": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      106
     ]
    },
    "numpy.array": {
     "line number": [
      108
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      107
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_01": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      439
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      438
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_02": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      444
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      443
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_large_pad": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      379
     ]
    },
    "numpy.array": {
     "line number": [
      382
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      381
     ]
    },
    "numpy.reshape": {
     "line number": [
      380
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_simple": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      356
     ]
    },
    "numpy.array": {
     "line number": [
      358
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      357
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestZeroPadWidth": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestZeroPadWidth.test_zero_pad_width": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      491
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      494
     ]
    },
    "numpy.reshape": {
     "line number": [
      492
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.ValueError1": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.ValueError1.test_check_negative_pad_width": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      516
     ]
    },
    "dict": {
     "line number": [
      515
     ]
    },
    "numpy.arange": {
     "line number": [
      513
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      516
     ]
    },
    "numpy.reshape": {
     "line number": [
      514
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.ValueError1.test_check_negative_stat_length": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      509
     ]
    },
    "dict": {
     "line number": [
      508
     ]
    },
    "numpy.arange": {
     "line number": [
      506
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      509
     ]
    },
    "numpy.reshape": {
     "line number": [
      507
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.ValueError1.test_check_simple": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      502
     ]
    },
    "dict": {
     "line number": [
      501
     ]
    },
    "numpy.arange": {
     "line number": [
      499
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      502
     ]
    },
    "numpy.reshape": {
     "line number": [
      500
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.ValueError2": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.ValueError2.test_check_simple": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      525
     ]
    },
    "dict": {
     "line number": [
      524
     ]
    },
    "numpy.arange": {
     "line number": [
      522
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      525
     ]
    },
    "numpy.reshape": {
     "line number": [
      523
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.ValueError3": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      529
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.ValueError3.test_check_simple": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      534
     ]
    },
    "dict": {
     "line number": [
      533
     ]
    },
    "numpy.arange": {
     "line number": [
      531
     ]
    },
    "numpy.lib.pad": {
     "line number": [
      534
     ]
    },
    "numpy.reshape": {
     "line number": [
      532
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.pad": {
  "data": {
   "shadows": "numpy.lib.pad"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      260
     ]
    },
    "run_module_suite": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_ediff1d": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      120,
      121,
      122,
      123,
      124,
      125
     ]
    },
    "ediff1d": {
     "line number": [
      120,
      121,
      122,
      123,
      124,
      125
     ]
    },
    "numpy.array": {
     "line number": [
      116,
      117,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      136,
      141,
      146,
      153,
      159,
      165,
      171,
      177,
      183,
      185
     ]
    },
    "in1d": {
     "line number": [
      135,
      140,
      145,
      152,
      158,
      164,
      170,
      176,
      182,
      185
     ]
    },
    "numpy.array": {
     "line number": [
      134,
      139,
      144,
      148,
      161,
      162,
      163,
      167,
      168,
      169,
      173,
      174,
      175,
      179,
      180,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_char_array": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      194
     ]
    },
    "in1d": {
     "line number": [
      192
     ]
    },
    "numpy.array": {
     "line number": [
      188,
      189,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_invert": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      203
     ]
    },
    "in1d": {
     "line number": [
      203,
      203
     ]
    },
    "numpy.array": {
     "line number": [
      201
     ]
    },
    "numpy.invert": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_ravel": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      213,
      214,
      215,
      216
     ]
    },
    "in1d": {
     "line number": [
      213,
      214,
      215,
      216
     ]
    },
    "numpy.arange": {
     "line number": [
      208,
      209,
      210
     ]
    },
    "numpy.array": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_intersect1d": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      79,
      87,
      89
     ]
    },
    "intersect1d": {
     "line number": [
      78,
      86,
      89
     ]
    },
    "numpy.array": {
     "line number": [
      74,
      75,
      77,
      82,
      83,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_manyways": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      257
     ]
    },
    "intersect1d": {
     "line number": [
      254
     ]
    },
    "numpy.array": {
     "line number": [
      250,
      251
     ]
    },
    "setdiff1d": {
     "line number": [
      256
     ]
    },
    "setxor1d": {
     "line number": [
      253
     ]
    },
    "union1d": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_setdiff1d": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      234,
      240,
      242
     ]
    },
    "numpy.arange": {
     "line number": [
      236,
      237
     ]
    },
    "numpy.array": {
     "line number": [
      229,
      230,
      232,
      238
     ]
    },
    "setdiff1d": {
     "line number": [
      233,
      239,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_setdiff1d_char_array": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      247
     ]
    },
    "numpy.array": {
     "line number": [
      245,
      246,
      247
     ]
    },
    "setdiff1d": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_setxor1d": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      97,
      104,
      111,
      113
     ]
    },
    "numpy.array": {
     "line number": [
      92,
      93,
      95,
      99,
      100,
      102,
      106,
      107,
      109
     ]
    },
    "setxor1d": {
     "line number": [
      96,
      103,
      110,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_union1d": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      224,
      226
     ]
    },
    "numpy.array": {
     "line number": [
      219,
      220,
      222
     ]
    },
    "union1d": {
     "line number": [
      223,
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_unique": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      70
     ]
    },
    "check_all": {
     "line number": [
      52,
      60,
      66
     ]
    },
    "len": {
     "line number": [
      56,
      58
     ]
    },
    "list": {
     "line number": [
      64,
      65
     ]
    },
    "numpy.array": {
     "line number": [
      50,
      51,
      64,
      65
     ]
    },
    "numpy.empty": {
     "line number": [
      56,
      58
     ]
    },
    "numpy.typecodes": {
     "line number": [
      45,
      46
     ]
    },
    "numpy.unique": {
     "line number": [
      70
     ]
    },
    "zip": {
     "line number": [
      64,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_unique.check_all": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      20,
      24,
      25,
      29,
      30,
      34,
      35,
      36
     ]
    },
    "unique": {
     "line number": [
      19,
      23,
      28,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      50
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_arrayterator.Arrayterator": {
  "data": {
   "shadows": "numpy.lib.Arrayterator"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.test": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "functools.reduce": {
     "line number": [
      18
     ]
    },
    "len": {
     "line number": [
      27,
      42
     ]
    },
    "list": {
     "line number": [
      30,
      30,
      48,
      48
     ]
    },
    "numpy.all": {
     "line number": [
      45
     ]
    },
    "numpy.arange": {
     "line number": [
      13,
      19
     ]
    },
    "numpy.lib.Arrayterator": {
     "line number": [
      23
     ]
    },
    "numpy.random.randint": {
     "line number": [
      16,
      17,
      22,
      33,
      34,
      35
     ]
    },
    "numpy.random.seed": {
     "line number": [
      13
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      27,
      30,
      42,
      45,
      48
     ]
    },
    "operator.mul": {
     "line number": [
      18
     ]
    },
    "range": {
     "line number": [
      17
     ]
    },
    "slice": {
     "line number": [
      36
     ]
    },
    "tuple": {
     "line number": [
      17,
      36
     ]
    },
    "zip": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      155
     ]
    },
    "run_module_suite": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_financial.TestFinancial": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_broadcast": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      139,
      142,
      146,
      150
     ]
    },
    "list": {
     "line number": [
      142,
      146,
      150
     ]
    },
    "numpy.ipmt": {
     "line number": [
      142
     ]
    },
    "numpy.nper": {
     "line number": [
      139
     ]
    },
    "numpy.ppmt": {
     "line number": [
      146,
      150
     ]
    },
    "range": {
     "line number": [
      142,
      146,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_fv": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      36
     ]
    },
    "numpy.fv": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ipmt": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "numpy.ipmt": {
     "line number": [
      47
     ]
    },
    "numpy.round": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_irr": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      13,
      16,
      19,
      22,
      25,
      28
     ]
    },
    "numpy.irr": {
     "line number": [
      13,
      16,
      19,
      22,
      25,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_mirr": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      72
     ]
    },
    "assert_almost_equal": {
     "line number": [
      63,
      66,
      69
     ]
    },
    "numpy.isnan": {
     "line number": [
      72
     ]
    },
    "numpy.mirr": {
     "line number": [
      63,
      66,
      69,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_nper": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      50
     ]
    },
    "numpy.nper": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_nper2": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      54
     ]
    },
    "numpy.nper": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_npv": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      58
     ]
    },
    "numpy.npv": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pmt": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      40
     ]
    },
    "numpy.pmt": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.ppmt": {
     "line number": [
      44
     ]
    },
    "numpy.round": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pv": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      32
     ]
    },
    "numpy.pv": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_rate": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      8
     ]
    },
    "numpy.rate": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_when": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      76,
      79,
      81,
      85,
      88,
      90,
      94,
      97,
      99,
      103,
      106,
      108,
      112,
      115,
      117,
      121,
      124,
      126,
      130,
      133,
      135
     ]
    },
    "numpy.fv": {
     "line number": [
      94,
      95,
      97,
      98,
      99,
      100
     ]
    },
    "numpy.ipmt": {
     "line number": [
      121,
      122,
      124,
      125,
      126,
      127
     ]
    },
    "numpy.nper": {
     "line number": [
      130,
      131,
      133,
      134,
      135,
      136
     ]
    },
    "numpy.pmt": {
     "line number": [
      103,
      104,
      106,
      107,
      108,
      109
     ]
    },
    "numpy.ppmt": {
     "line number": [
      112,
      113,
      115,
      116,
      117,
      118
     ]
    },
    "numpy.pv": {
     "line number": [
      85,
      86,
      88,
      89,
      90,
      91
     ]
    },
    "numpy.rate": {
     "line number": [
      76,
      77,
      79,
      80,
      81,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      637
     ]
    },
    "numpy.arange": {
     "line number": [
      325
     ]
    },
    "numpy.array": {
     "line number": [
      328,
      330,
      402,
      403,
      404,
      405
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      541,
      549
     ]
    },
    "numpy.complex128": {
     "line number": [
      318
     ]
    },
    "numpy.complex64": {
     "line number": [
      317
     ]
    },
    "numpy.dtype": {
     "line number": [
      324,
      402,
      403,
      404,
      405
     ]
    },
    "numpy.float32": {
     "line number": [
      315
     ]
    },
    "numpy.float64": {
     "line number": [
      316
     ]
    },
    "numpy.int16": {
     "line number": [
      310
     ]
    },
    "numpy.int32": {
     "line number": [
      312
     ]
    },
    "numpy.int64": {
     "line number": [
      314
     ]
    },
    "numpy.int8": {
     "line number": [
      308
     ]
    },
    "numpy.lib.tests.test_format.NbufferT": {
     "line number": [
      403,
      405
     ]
    },
    "numpy.lib.tests.test_format.Ndescr": {
     "line number": [
      403,
      405
     ]
    },
    "numpy.lib.tests.test_format.PbufferT": {
     "line number": [
      402,
      404
     ]
    },
    "numpy.lib.tests.test_format.Pdescr": {
     "line number": [
      402,
      404
     ]
    },
    "numpy.lib.tests.test_format.basic": {
     "line number": [
      332,
      334,
      336,
      338
     ]
    },
    "numpy.lib.tests.test_format.basic_arrays": {
     "line number": [
      326
     ]
    },
    "numpy.lib.tests.test_format.dtype": {
     "line number": [
      325,
      328,
      330
     ]
    },
    "numpy.lib.tests.test_format.scalars": {
     "line number": [
      322
     ]
    },
    "numpy.uint16": {
     "line number": [
      309
     ]
    },
    "numpy.uint32": {
     "line number": [
      311
     ]
    },
    "numpy.uint64": {
     "line number": [
      313
     ]
    },
    "numpy.uint8": {
     "line number": [
      307
     ]
    },
    "object": {
     "line number": [
      319
     ]
    },
    "run_module_suite": {
     "line number": [
      638
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_format.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.BytesIOSRandomSize": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      410
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_format.BytesIOSRandomSize.read": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "numpy.lib.tests.test_format.BytesIOSRandomSize": {
     "line number": [
      414
     ]
    },
    "numpy.lib.tests.test_format.random": {
     "line number": [
      413
     ]
    },
    "super": {
     "line number": [
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.NbufferT": {
  "data": {
   "lineno": 393
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.Ndescr": {
  "data": {
   "lineno": 374
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.PbufferT": {
  "data": {
   "lineno": 355
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.Pdescr": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.asbytes_nested": {
  "data": {
   "shadows": "numpy.compat.asbytes_nested"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.assert_equal": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.bad_version_magic": {
  "data": {
   "lineno": 541
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.basic": {
  "data": {
   "lineno": 325
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.basic_arrays": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.dtype": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.format": {
  "data": {
   "shadows": "numpy.lib.format"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.malformed_magic": {
  "data": {
   "lineno": 549
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.record_arrays": {
  "data": {
   "lineno": 401
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.roundtrip": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      418,
      420
     ]
    },
    "numpy.lib.format.read_array": {
     "line number": [
      421
     ]
    },
    "numpy.lib.format.write_array": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.roundtrip_randsize": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      426
     ]
    },
    "numpy.lib.format.read_array": {
     "line number": [
      429
     ]
    },
    "numpy.lib.format.write_array": {
     "line number": [
      427
     ]
    },
    "numpy.lib.tests.test_format.BytesIOSRandomSize": {
     "line number": [
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.roundtrip_truncated": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      434,
      437
     ]
    },
    "numpy.lib.format.read_array": {
     "line number": [
      438
     ]
    },
    "numpy.lib.format.write_array": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.scalars": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.setup_module": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "numpy.lib.tests.test_format.tempdir": {
     "line number": [
      296
     ]
    },
    "numpy.lib.tests.test_format.tempfile": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.sp": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.teardown_module": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "numpy.lib.tests.test_format.os": {
     "line number": [
      300
     ]
    },
    "numpy.lib.tests.test_format.shutil": {
     "line number": [
      301
     ]
    },
    "numpy.lib.tests.test_format.tempdir": {
     "line number": [
      300,
      300,
      301,
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.tempdir": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.test_bad_header": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      587,
      589,
      593,
      600,
      608
     ]
    },
    "assert_raises": {
     "line number": [
      587,
      589,
      593,
      600,
      608
     ]
    },
    "io.BytesIO": {
     "line number": [
      586,
      588,
      592,
      598,
      606
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      588,
      592
     ]
    },
    "numpy.lib.format.read_array_header_1_0": {
     "line number": [
      587,
      589,
      593,
      600,
      608
     ]
    },
    "numpy.lib.format.write_array_header_1_0": {
     "line number": [
      599,
      607
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_bad_magic_args": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      570,
      571,
      572,
      573
     ]
    },
    "assert_raises": {
     "line number": [
      570,
      571,
      572,
      573
     ]
    },
    "numpy.lib.format.magic": {
     "line number": [
      570,
      571,
      572,
      573
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_compressed_roundtrip": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      513
     ]
    },
    "numpy.lib.tests.test_format.os": {
     "line number": [
      510
     ]
    },
    "numpy.lib.tests.test_format.tempdir": {
     "line number": [
      510
     ]
    },
    "numpy.load": {
     "line number": [
      512
     ]
    },
    "numpy.random.rand": {
     "line number": [
      509
     ]
    },
    "numpy.savez_compressed": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_large_file_support": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      634
     ]
    },
    "nose.SkipTest": {
     "line number": [
      622
     ]
    },
    "numpy.arange": {
     "line number": [
      626
     ]
    },
    "numpy.lib.tests.test_format.tempfile": {
     "line number": [
      614
     ]
    },
    "numpy.load": {
     "line number": [
      632
     ]
    },
    "numpy.save": {
     "line number": [
      627
     ]
    },
    "open": {
     "line number": [
      624,
      630
     ]
    },
    "subprocess.check_call": {
     "line number": [
      620
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_large_header": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      582
     ]
    },
    "assert_raises": {
     "line number": [
      582
     ]
    },
    "io.BytesIO": {
     "line number": [
      576,
      580
     ]
    },
    "numpy.lib.format.write_array_header_1_0": {
     "line number": [
      578,
      582
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_long_str": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      469
     ]
    },
    "numpy.dtype": {
     "line number": [
      467
     ]
    },
    "numpy.lib.format.BUFFER_SIZE": {
     "line number": [
      467
     ]
    },
    "numpy.lib.tests.test_format.roundtrip": {
     "line number": [
      468
     ]
    },
    "numpy.ones": {
     "line number": [
      467
     ]
    },
    "str": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_memmap_roundtrip": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "numpy.lib.format.open_memmap": {
     "line number": [
      488,
      503
     ]
    },
    "numpy.lib.format.write_array": {
     "line number": [
      483
     ]
    },
    "numpy.lib.tests.test_format.assert_equal": {
     "line number": [
      500
     ]
    },
    "numpy.lib.tests.test_format.basic_arrays": {
     "line number": [
      474
     ]
    },
    "numpy.lib.tests.test_format.os": {
     "line number": [
      479,
      480
     ]
    },
    "numpy.lib.tests.test_format.record_arrays": {
     "line number": [
      474
     ]
    },
    "numpy.lib.tests.test_format.sys": {
     "line number": [
      473,
      473
     ]
    },
    "numpy.lib.tests.test_format.tempdir": {
     "line number": [
      479,
      480
     ]
    },
    "open": {
     "line number": [
      481,
      494,
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_magic_bad_magic": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      562
     ]
    },
    "io.BytesIO": {
     "line number": [
      561
     ]
    },
    "numpy.lib.format.read_magic": {
     "line number": [
      562
     ]
    },
    "numpy.lib.tests.test_format.malformed_magic": {
     "line number": [
      560
     ]
    },
    "raises": {
     "line number": [
      562
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_version_1_0_bad_magic": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      567
     ]
    },
    "io.BytesIO": {
     "line number": [
      566
     ]
    },
    "numpy.lib.format.read_array": {
     "line number": [
      567
     ]
    },
    "numpy.lib.tests.test_format.bad_version_magic": {
     "line number": [
      565
     ]
    },
    "numpy.lib.tests.test_format.malformed_magic": {
     "line number": [
      565
     ]
    },
    "raises": {
     "line number": [
      567
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_roundtrip": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "numpy.lib.tests.test_format.basic_arrays": {
     "line number": [
      447
     ]
    },
    "numpy.lib.tests.test_format.record_arrays": {
     "line number": [
      447
     ]
    },
    "numpy.lib.tests.test_format.roundtrip": {
     "line number": [
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_roundtrip_randsize": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "numpy.lib.tests.test_format.basic_arrays": {
     "line number": [
      453
     ]
    },
    "numpy.lib.tests.test_format.record_arrays": {
     "line number": [
      453
     ]
    },
    "numpy.lib.tests.test_format.roundtrip_randsize": {
     "line number": [
      455
     ]
    },
    "object": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_roundtrip_truncated": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      462
     ]
    },
    "numpy.lib.tests.test_format.basic_arrays": {
     "line number": [
      460
     ]
    },
    "numpy.lib.tests.test_format.roundtrip_truncated": {
     "line number": [
      462
     ]
    },
    "object": {
     "line number": [
      461
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_write_version_1_0": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      538
     ]
    },
    "ValueError": {
     "line number": [
      535
     ]
    },
    "io.BytesIO": {
     "line number": [
      517
     ]
    },
    "numpy.arange": {
     "line number": [
      518
     ]
    },
    "numpy.lib.format.write_array": {
     "line number": [
      520,
      521,
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1534
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      1535
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc_ufunc": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1524
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc_ufunc.test_string_arg": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1531
     ]
    },
    "numpy.add": {
     "line number": [
      1531
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1531
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc_ufunc.test_ufunc_arg": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1527
     ]
    },
    "ValueError": {
     "line number": [
      1528
     ]
    },
    "numpy.add": {
     "line number": [
      1528
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1527,
      1528
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAll": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAll.test_basic": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      36,
      37,
      38,
      39
     ]
    },
    "numpy.array": {
     "line number": [
      39
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      36,
      37,
      38,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAll.test_nd": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      43
     ]
    },
    "numpy.alltrue": {
     "line number": [
      44,
      45
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      43
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      44,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAmax": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAmax.test_basic": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "numpy.amax": {
     "line number": [
      254,
      258,
      259
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      254,
      258,
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAmin": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAmin.test_basic": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "numpy.amin": {
     "line number": [
      265,
      269,
      270
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      265,
      269,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAngle": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAngle.test_basic": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "angle": {
     "line number": [
      472,
      475
     ]
    },
    "numpy.arctan": {
     "line number": [
      473,
      473,
      474,
      474
     ]
    },
    "numpy.array": {
     "line number": [
      476
     ]
    },
    "numpy.pi": {
     "line number": [
      473,
      473,
      473,
      474,
      476
     ]
    },
    "numpy.sqrt": {
     "line number": [
      470,
      470
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      477,
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAny": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAny.test_basic": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      20,
      21,
      22
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      20,
      21,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAny.test_nd": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      26
     ]
    },
    "numpy.sometrue": {
     "line number": [
      27,
      28
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      26
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      27,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_basic": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "average": {
     "line number": [
      77,
      79,
      81,
      86,
      87,
      90,
      91,
      94
     ]
    },
    "numpy.array": {
     "line number": [
      76,
      78
     ]
    },
    "numpy.matrix": {
     "line number": [
      93
     ]
    },
    "numpy.ones": {
     "line number": [
      83
     ]
    },
    "numpy.random.rand": {
     "line number": [
      89,
      93
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      77,
      79,
      81
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      86,
      87,
      90,
      91
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_returned": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "average": {
     "line number": [
      127,
      130,
      133,
      138,
      142,
      146
     ]
    },
    "numpy.array": {
     "line number": [
      124,
      131,
      134,
      139,
      143,
      147
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      131,
      134,
      139,
      143,
      147
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_weights": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "average": {
     "line number": [
      99,
      105,
      110,
      120,
      121
     ]
    },
    "numpy.arange": {
     "line number": [
      97,
      98,
      100,
      100
     ]
    },
    "numpy.array": {
     "line number": [
      103,
      106,
      111,
      119
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      101,
      107,
      112
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      120
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1318
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_empty": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1356
     ]
    },
    "numpy.array": {
     "line number": [
      1356
     ]
    },
    "numpy.bincount": {
     "line number": [
      1357
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1358
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_empty_with_minlength": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1361,
      1363
     ]
    },
    "numpy.array": {
     "line number": [
      1361
     ]
    },
    "numpy.bincount": {
     "line number": [
      1362
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1363
     ]
    },
    "numpy.zeros": {
     "line number": [
      1363
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1320
     ]
    },
    "numpy.bincount": {
     "line number": [
      1320
     ]
    },
    "numpy.ones": {
     "line number": [
      1321
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1321
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple2": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1324,
      1325
     ]
    },
    "numpy.bincount": {
     "line number": [
      1324
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1325
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple_weight": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1328
     ]
    },
    "numpy.array": {
     "line number": [
      1329
     ]
    },
    "numpy.bincount": {
     "line number": [
      1330
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1331
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple_weight2": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1334,
      1335,
      1337
     ]
    },
    "numpy.bincount": {
     "line number": [
      1336
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1337
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_minlength": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1340,
      1342
     ]
    },
    "numpy.bincount": {
     "line number": [
      1341
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1342
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_minlength_and_weights": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1350,
      1351,
      1353
     ]
    },
    "numpy.bincount": {
     "line number": [
      1352
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1353
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_minlength_smaller_than_maxvalue": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1345,
      1347
     ]
    },
    "numpy.bincount": {
     "line number": [
      1346
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1347
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1124
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite.test_dtype_order": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      1136,
      1137
     ]
    },
    "numpy.lib.asarray_chkfinite": {
     "line number": [
      1136
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1137
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite.test_simple": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1130,
      1131
     ]
    },
    "numpy.inf": {
     "line number": [
      1127
     ]
    },
    "numpy.lib.asarray_chkfinite": {
     "line number": [
      1129,
      1130,
      1131
     ]
    },
    "numpy.nan": {
     "line number": [
      1128
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1130,
      1131
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCopy": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCopy.test_basic": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      50
     ]
    },
    "numpy.copy": {
     "line number": [
      51
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      52
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      54,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCopy.test_order": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      61,
      64
     ]
    },
    "numpy.copy": {
     "line number": [
      67,
      70
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      62,
      63,
      65,
      66,
      68,
      69,
      71,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1141,
      1144,
      1147,
      1150
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      1140
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_ddof": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": {
    "corrcoef": {
     "line number": [
      1168,
      1169
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1168,
      1169
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_empty": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": {
    "corrcoef": {
     "line number": [
      1172,
      1173
     ]
    },
    "numpy.array": {
     "line number": [
      1172,
      1173
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1172,
      1173
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_simple": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": {
    "corrcoef": {
     "line number": [
      1164,
      1165
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1164,
      1165
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1176
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_basic": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1178,
      1179
     ]
    },
    "numpy.cov": {
     "line number": [
      1179
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1179
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_empty": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": {
    "cov": {
     "line number": [
      1182,
      1183
     ]
    },
    "numpy.array": {
     "line number": [
      1182,
      1183
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1182,
      1183
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCumprod": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCumprod.test_basic": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "ArithmeticError": {
     "line number": [
      332,
      333,
      334
     ]
    },
    "numpy.array": {
     "line number": [
      329,
      330,
      337,
      339,
      342
     ]
    },
    "numpy.complex128": {
     "line number": [
      328
     ]
    },
    "numpy.complex64": {
     "line number": [
      328
     ]
    },
    "numpy.cumprod": {
     "line number": [
      336,
      338,
      341
     ]
    },
    "numpy.float32": {
     "line number": [
      328
     ]
    },
    "numpy.float64": {
     "line number": [
      328
     ]
    },
    "numpy.int16": {
     "line number": [
      327
     ]
    },
    "numpy.int32": {
     "line number": [
      327
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      336,
      338,
      341
     ]
    },
    "numpy.uint16": {
     "line number": [
      327
     ]
    },
    "numpy.uint32": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCumsum": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCumsum.test_basic": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      290,
      291,
      293,
      296,
      299
     ]
    },
    "numpy.complex128": {
     "line number": [
      289
     ]
    },
    "numpy.complex64": {
     "line number": [
      289
     ]
    },
    "numpy.cumsum": {
     "line number": [
      294,
      297,
      300
     ]
    },
    "numpy.float32": {
     "line number": [
      289
     ]
    },
    "numpy.float64": {
     "line number": [
      289
     ]
    },
    "numpy.int16": {
     "line number": [
      288
     ]
    },
    "numpy.int32": {
     "line number": [
      288
     ]
    },
    "numpy.int8": {
     "line number": [
      288
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      294,
      297,
      300
     ]
    },
    "numpy.uint16": {
     "line number": [
      288
     ]
    },
    "numpy.uint32": {
     "line number": [
      289
     ]
    },
    "numpy.uint8": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDelete._check_inverse_of_slicing": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "delete": {
     "line number": [
      374,
      375
     ]
    },
    "int": {
     "line number": [
      378
     ]
    },
    "isinstance": {
     "line number": [
      378
     ]
    },
    "numpy.asarray": {
     "line number": [
      379
     ]
    },
    "numpy.compat.long": {
     "line number": [
      378
     ]
    },
    "numpy.integer": {
     "line number": [
      378
     ]
    },
    "numpy.intp": {
     "line number": [
      379
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      381,
      384
     ]
    },
    "setxor1d": {
     "line number": [
      381,
      383
     ]
    },
    "slice": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.setUp": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      370,
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_0d": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      417,
      419
     ]
    },
    "delete": {
     "line number": [
      418
     ]
    },
    "numpy.array": {
     "line number": [
      415
     ]
    },
    "numpy.lib.tests.test_function_base.warnings": {
     "line number": [
      416,
      417
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      419
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_fancy": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      399,
      400,
      401
     ]
    },
    "FutureWarning": {
     "line number": [
      403,
      407,
      408
     ]
    },
    "bool": {
     "line number": [
      405
     ]
    },
    "delete": {
     "line number": [
      400,
      401
     ]
    },
    "numpy.array": {
     "line number": [
      397,
      405
     ]
    },
    "numpy.lib.tests.test_function_base.warnings": {
     "line number": [
      398,
      399,
      402,
      403
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      407,
      408
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      400,
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_single": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_slices": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_subclass": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "delete": {
     "line number": [
      425,
      426,
      427,
      428,
      429
     ]
    },
    "isinstance": {
     "line number": [
      425,
      426,
      427,
      428,
      429
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      425,
      426,
      427,
      428,
      429
     ]
    },
    "slice": {
     "line number": [
      428,
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_subclass.SubClass": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDiff": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_basic": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "diff": {
     "line number": [
      352,
      353,
      354
     ]
    },
    "numpy.array": {
     "line number": [
      349,
      350,
      351
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      352,
      353,
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_nd": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "diff": {
     "line number": [
      362,
      363,
      364,
      365
     ]
    },
    "numpy.random.rand": {
     "line number": [
      357
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      362,
      363,
      364,
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      681
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_forward": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "digitize": {
     "line number": [
      685
     ]
    },
    "numpy.arange": {
     "line number": [
      683,
      684,
      685
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      685
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_random": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "bin": {
     "line number": [
      694,
      695
     ]
    },
    "digitize": {
     "line number": [
      695
     ]
    },
    "numpy.all": {
     "line number": [
      695
     ]
    },
    "numpy.linspace": {
     "line number": [
      694
     ]
    },
    "numpy.random.rand": {
     "line number": [
      693
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      695
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_reverse": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": {
    "digitize": {
     "line number": [
      690
     ]
    },
    "numpy.arange": {
     "line number": [
      688,
      689,
      690
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      690
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_basic": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": {
    "digitize": {
     "line number": [
      701,
      703
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      701,
      703
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_open": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": {
    "digitize": {
     "line number": [
      708
     ]
    },
    "numpy.arange": {
     "line number": [
      706,
      707,
      708
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      708
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_open_random": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": {
    "digitize": {
     "line number": [
      718
     ]
    },
    "numpy.all": {
     "line number": [
      718
     ]
    },
    "numpy.linspace": {
     "line number": [
      717
     ]
    },
    "numpy.random.rand": {
     "line number": [
      716
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      718
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_open_reverse": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": {
    "digitize": {
     "line number": [
      713
     ]
    },
    "numpy.arange": {
     "line number": [
      711,
      712,
      713
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      713
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_basic": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": {
    "extract": {
     "line number": [
      503
     ]
    },
    "numpy.array": {
     "line number": [
      502
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_both": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "extract": {
     "line number": [
      515
     ]
    },
    "numpy.random.rand": {
     "line number": [
      512
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      518
     ]
    },
    "place": {
     "line number": [
      516,
      517
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_place": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      507
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      509
     ]
    },
    "place": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      729
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_bartlett": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "bartlett": {
     "line number": [
      746
     ]
    },
    "flipud": {
     "line number": [
      747
     ]
    },
    "numpy.sum": {
     "line number": [
      749
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      749
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_blackman": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": {
    "blackman": {
     "line number": [
      753
     ]
    },
    "flipud": {
     "line number": [
      754
     ]
    },
    "numpy.sum": {
     "line number": [
      756
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      756
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      754
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_hamming": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "flipud": {
     "line number": [
      740
     ]
    },
    "hamming": {
     "line number": [
      739
     ]
    },
    "numpy.sum": {
     "line number": [
      742
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      742
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      740
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_hanning": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": {
    "flipud": {
     "line number": [
      733
     ]
    },
    "hanning": {
     "line number": [
      732
     ]
    },
    "numpy.sum": {
     "line number": [
      735
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      735
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      733
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_badargs": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "SyntaxError": {
     "line number": [
      443
     ]
    },
    "gradient": {
     "line number": [
      443
     ]
    },
    "numpy.array": {
     "line number": [
      442,
      443,
      444,
      444
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_basic": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "gradient": {
     "line number": [
      437,
      438
     ]
    },
    "numpy.array": {
     "line number": [
      434,
      435,
      436
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      437,
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_datetime64": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "gradient": {
     "line number": [
      457
     ]
    },
    "numpy.array": {
     "line number": [
      453,
      456
     ]
    },
    "numpy.dtype": {
     "line number": [
      458
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      458
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_masked": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "gradient": {
     "line number": [
      449
     ]
    },
    "numpy.ma.array": {
     "line number": [
      448
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      449
     ]
    },
    "type": {
     "line number": [
      449,
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_timedelta64": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "gradient": {
     "line number": [
      464
     ]
    },
    "numpy.array": {
     "line number": [
      462,
      463
     ]
    },
    "numpy.dtype": {
     "line number": [
      465
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      465
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      845
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.setUp": {
  "data": {
   "lineno": 846
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.tearDown": {
  "data": {
   "lineno": 849
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_density": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": {
    "diff": {
     "line number": [
      893,
      901
     ]
    },
    "histogram": {
     "line number": [
      892,
      899,
      907
     ]
    },
    "numpy.arange": {
     "line number": [
      897,
      905
     ]
    },
    "numpy.histogram": {
     "line number": [
      912
     ]
    },
    "numpy.inf": {
     "line number": [
      906,
      912
     ]
    },
    "numpy.random.rand": {
     "line number": [
      891
     ]
    },
    "numpy.sum": {
     "line number": [
      893,
      901
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      894
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      900,
      908
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      901,
      913
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_empty": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": {
    "histogram": {
     "line number": [
      982
     ]
    },
    "numpy.array": {
     "line number": [
      983,
      984
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      983,
      984
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_normed": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": {
    "diff": {
     "line number": [
      878,
      885
     ]
    },
    "histogram": {
     "line number": [
      877,
      884
     ]
    },
    "numpy.arange": {
     "line number": [
      882
     ]
    },
    "numpy.random.rand": {
     "line number": [
      876
     ]
    },
    "numpy.sum": {
     "line number": [
      878,
      885
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      879,
      886
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_one_bin": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      868
     ]
    },
    "histogram": {
     "line number": [
      865,
      868,
      869
     ]
    },
    "numpy.array": {
     "line number": [
      870,
      871
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      871
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      866,
      867
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      870
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      868
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_outliers": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": {
    "diff": {
     "line number": [
      929,
      934
     ]
    },
    "histogram": {
     "line number": [
      920,
      924,
      928,
      933,
      936
     ]
    },
    "numpy.arange": {
     "line number": [
      917,
      932
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      929
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      921,
      925,
      934,
      937
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_simple": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": {
    "histogram": {
     "line number": [
      855,
      860
     ]
    },
    "numpy.linspace": {
     "line number": [
      860
     ]
    },
    "numpy.random.rand": {
     "line number": [
      854
     ]
    },
    "numpy.sum": {
     "line number": [
      857
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      861
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      857
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_type": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": {
    "float": {
     "line number": [
      946,
      951,
      952
     ]
    },
    "histogram": {
     "line number": [
      942,
      945,
      948,
      951
     ]
    },
    "int": {
     "line number": [
      943,
      948,
      949
     ]
    },
    "issubdtype": {
     "line number": [
      943,
      946,
      949,
      952
     ]
    },
    "numpy.arange": {
     "line number": [
      941
     ]
    },
    "numpy.ones": {
     "line number": [
      948,
      951
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      943,
      946,
      949,
      952
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_weights": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": {
    "histogram": {
     "line number": [
      957,
      958,
      959,
      960,
      967,
      971,
      973,
      977
     ]
    },
    "numpy.arange": {
     "line number": [
      967,
      977
     ]
    },
    "numpy.array": {
     "line number": [
      974
     ]
    },
    "numpy.concatenate": {
     "line number": [
      966
     ]
    },
    "numpy.linspace": {
     "line number": [
      965
     ]
    },
    "numpy.ones": {
     "line number": [
      956,
      966
     ]
    },
    "numpy.random.rand": {
     "line number": [
      955
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      979
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      961,
      962,
      968,
      974
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      972
     ]
    },
    "numpy.zeros": {
     "line number": [
      966
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      987
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_bins_errors": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1070,
      1071,
      1072,
      1073
     ]
    },
    "numpy.arange": {
     "line number": [
      1069
     ]
    },
    "numpy.histogramdd": {
     "line number": [
      1070,
      1071,
      1072,
      1073,
      1074
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1074
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1070,
      1071,
      1072,
      1073
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_empty": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": {
    "histogramdd": {
     "line number": [
      1060
     ]
    },
    "numpy.array": {
     "line number": [
      1061
     ]
    },
    "numpy.histogramdd": {
     "line number": [
      1062
     ]
    },
    "numpy.testing.assert_array_max_ulp": {
     "line number": [
      1061,
      1063
     ]
    },
    "numpy.zeros": {
     "line number": [
      1063
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_identical_samples": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": {
    "histogramdd": {
     "line number": [
      1056
     ]
    },
    "int": {
     "line number": [
      1055
     ]
    },
    "numpy.array": {
     "line number": [
      1057
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1057
     ]
    },
    "numpy.zeros": {
     "line number": [
      1055
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_inf_edges": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1079
     ]
    },
    "numpy.array": {
     "line number": [
      1080,
      1083
     ]
    },
    "numpy.errstate": {
     "line number": [
      1078
     ]
    },
    "numpy.histogramdd": {
     "line number": [
      1081,
      1083,
      1085
     ]
    },
    "numpy.inf": {
     "line number": [
      1081,
      1083,
      1085,
      1085
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1082,
      1084,
      1086
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_rightmost_binedge": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": {
    "histogramdd": {
     "line number": [
      1093,
      1098,
      1103,
      1108
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1094,
      1095,
      1099,
      1100,
      1104,
      1105,
      1109,
      1110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_shape_3d": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": {
    "histogramdd": {
     "line number": [
      1026
     ]
    },
    "numpy.random.rand": {
     "line number": [
      1024
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1027
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_shape_4d": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": {
    "histogramdd": {
     "line number": [
      1040
     ]
    },
    "numpy.random.rand": {
     "line number": [
      1038
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1041
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_simple": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": {
    "histogramdd": {
     "line number": [
      991,
      997,
      1000,
      1008,
      1017
     ]
    },
    "list": {
     "line number": [
      1016,
      1016,
      1016
     ]
    },
    "numpy.all": {
     "line number": [
      998
     ]
    },
    "numpy.arange": {
     "line number": [
      1017,
      1017,
      1017
     ]
    },
    "numpy.array": {
     "line number": [
      989,
      992,
      1002,
      1009
     ]
    },
    "numpy.squeeze": {
     "line number": [
      1007
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      998
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1004
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      994,
      1013,
      1018
     ]
    },
    "numpy.zeros": {
     "line number": [
      1015
     ]
    },
    "range": {
     "line number": [
      1016,
      1016,
      1016
     ]
    },
    "split": {
     "line number": [
      1007
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_weights": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": {
    "histogramdd": {
     "line number": [
      1045,
      1046,
      1047,
      1049,
      1051
     ]
    },
    "int": {
     "line number": [
      1051
     ]
    },
    "numpy.ones": {
     "line number": [
      1047,
      1049,
      1051
     ]
    },
    "numpy.random.rand": {
     "line number": [
      1044
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1048,
      1050,
      1052
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_0d": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      229,
      231
     ]
    },
    "insert": {
     "line number": [
      230
     ]
    },
    "numpy.array": {
     "line number": [
      227,
      230
     ]
    },
    "numpy.lib.tests.test_function_base.warnings": {
     "line number": [
      228,
      229
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      231
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_basic": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      187,
      189
     ]
    },
    "insert": {
     "line number": [
      174,
      175,
      176,
      177,
      178,
      179,
      180,
      182,
      183,
      188
     ]
    },
    "numpy.array": {
     "line number": [
      181,
      188
     ]
    },
    "numpy.float64": {
     "line number": [
      181
     ]
    },
    "numpy.lib.tests.test_function_base.warnings": {
     "line number": [
      186,
      187
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      189
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      174,
      175,
      176,
      177,
      178,
      179,
      180,
      182,
      183,
      188
     ]
    },
    "slice": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_index_array_copied": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      247,
      249
     ]
    },
    "numpy.insert": {
     "line number": [
      248
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_multidim": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      222,
      223
     ]
    },
    "insert": {
     "line number": [
      195,
      196,
      197,
      198,
      204,
      205,
      207,
      208,
      211,
      212,
      216,
      217,
      218,
      219,
      222,
      223
     ]
    },
    "numpy.arange": {
     "line number": [
      201,
      202,
      210,
      215
     ]
    },
    "numpy.array": {
     "line number": [
      200
     ]
    },
    "numpy.concatenate": {
     "line number": [
      202
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      195,
      196,
      197,
      198,
      204,
      205,
      207,
      208,
      211,
      212,
      216,
      218
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      222,
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_subclass": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      237,
      238,
      239,
      240,
      241,
      244
     ]
    },
    "numpy.arange": {
     "line number": [
      236
     ]
    },
    "numpy.array": {
     "line number": [
      243
     ]
    },
    "numpy.insert": {
     "line number": [
      237,
      238,
      239,
      240,
      241,
      244
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      237,
      238,
      239,
      240,
      241,
      244
     ]
    },
    "slice": {
     "line number": [
      240,
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_subclass.SubClass": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestInterp": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1366
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_basic": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": {
    "numpy.interp": {
     "line number": [
      1375
     ]
    },
    "numpy.linspace": {
     "line number": [
      1372,
      1373,
      1374
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1375
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_exceptions": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1368,
      1369
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1368,
      1369
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_if_len_x_is_small": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1404
     ]
    },
    "numpy.interp": {
     "line number": [
      1406
     ]
    },
    "numpy.pi": {
     "line number": [
      1406
     ]
    },
    "numpy.sin": {
     "line number": [
      1405
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1406
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_right_left_behavior": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": {
    "interp": {
     "line number": [
      1378,
      1379,
      1380,
      1381
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1378,
      1379,
      1380,
      1381
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_scalar_interpolation_point": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      1390
     ]
    },
    "numpy.float64": {
     "line number": [
      1392
     ]
    },
    "numpy.interp": {
     "line number": [
      1387,
      1389,
      1391,
      1393
     ]
    },
    "numpy.linspace": {
     "line number": [
      1384,
      1385
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1387,
      1389,
      1391,
      1393
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_zero_dimensional_interpolation_point": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1398,
      1400
     ]
    },
    "numpy.interp": {
     "line number": [
      1399,
      1401
     ]
    },
    "numpy.linspace": {
     "line number": [
      1396,
      1397
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1399,
      1401
     ]
    },
    "object": {
     "line number": [
      1400
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestKaiser": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1205
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestKaiser.test_int_beta": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": {
    "kaiser": {
     "line number": [
      1218
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestKaiser.test_simple": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": {
    "kaiser": {
     "line number": [
      1207,
      1208,
      1209,
      1210,
      1213
     ]
    },
    "numpy.array": {
     "line number": [
      1207,
      1209,
      1211,
      1214
     ]
    },
    "numpy.isfinite": {
     "line number": [
      1208
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1208
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1207,
      1209,
      1210,
      1213
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1436
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_array_like": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": {
    "numpy.median": {
     "line number": [
      1505,
      1507,
      1508
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1508
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1505,
      1507
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_axis_keyword": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1456
     ]
    },
    "numpy.median": {
     "line number": [
      1462,
      1464,
      1467,
      1468,
      1469,
      1470,
      1471
     ]
    },
    "numpy.random.randint": {
     "line number": [
      1460
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1467,
      1468,
      1469,
      1470,
      1471
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1465
     ]
    },
    "range": {
     "line number": [
      1463
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_basic": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1439,
      1440
     ]
    },
    "numpy.array": {
     "line number": [
      1438,
      1448,
      1450,
      1452
     ]
    },
    "numpy.median": {
     "line number": [
      1441,
      1442,
      1443,
      1444,
      1445,
      1446,
      1449,
      1451,
      1453
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1441,
      1442,
      1443,
      1444,
      1445,
      1446
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1449,
      1451,
      1453
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_overwrite_keyword": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": {
    "map": {
     "line number": [
      1493
     ]
    },
    "numpy.arange": {
     "line number": [
      1479,
      1480,
      1492
     ]
    },
    "numpy.array": {
     "line number": [
      1474,
      1478
     ]
    },
    "numpy.float32": {
     "line number": [
      1492
     ]
    },
    "numpy.median": {
     "line number": [
      1481,
      1482,
      1483,
      1484,
      1486,
      1487,
      1488,
      1489,
      1494,
      1495,
      1496,
      1497,
      1498,
      1499,
      1500,
      1501
     ]
    },
    "numpy.random.shuffle": {
     "line number": [
      1493
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1481,
      1482,
      1483,
      1484,
      1486,
      1487,
      1488,
      1489,
      1494,
      1496,
      1498,
      1500
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": {
    "MySubClass": {
     "line number": [
      1521
     ]
    },
    "numpy.median": {
     "line number": [
      1522
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1522
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass.MySubClass": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      1512
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass.MySubClass.__new__": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      1514
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass.MySubClass.mean": {
  "data": {
   "lineno": 1518
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1232
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_indexing": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1265
     ]
    },
    "meshgrid": {
     "line number": [
      1250,
      1260,
      1261,
      1262,
      1263,
      1265
     ]
    },
    "numpy.all": {
     "line number": [
      1251,
      1254
     ]
    },
    "numpy.array": {
     "line number": [
      1251,
      1254
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1251,
      1254,
      1260,
      1261,
      1262,
      1263
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1265
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_simple": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": {
    "meshgrid": {
     "line number": [
      1234
     ]
    },
    "numpy.all": {
     "line number": [
      1235,
      1239
     ]
    },
    "numpy.array": {
     "line number": [
      1235,
      1239
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1235,
      1239
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_single_input": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1245
     ]
    },
    "meshgrid": {
     "line number": [
      1245
     ]
    },
    "numpy.arange": {
     "line number": [
      1245
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1245
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_sparse": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": {
    "meshgrid": {
     "line number": [
      1268
     ]
    },
    "numpy.all": {
     "line number": [
      1269,
      1270
     ]
    },
    "numpy.array": {
     "line number": [
      1269,
      1270
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1269,
      1270
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMsort": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1221
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMsort.test_simple": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": {
    "msort": {
     "line number": [
      1226
     ]
    },
    "numpy.array": {
     "line number": [
      1223,
      1227
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1226
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1273
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_0d": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1312
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1314,
      1315
     ]
    },
    "piecewise": {
     "line number": [
      1313
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_default": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      1305,
      1309
     ]
    },
    "piecewise": {
     "line number": [
      1304,
      1308
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_simple": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1284,
      1288,
      1292
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1277,
      1281,
      1285,
      1289,
      1293,
      1297,
      1300
     ]
    },
    "piecewise": {
     "line number": [
      1276,
      1280,
      1284,
      1288,
      1292,
      1296,
      1299
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestProd": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestProd.test_basic": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "ArithmeticError": {
     "line number": [
      312,
      313,
      314
     ]
    },
    "numpy.array": {
     "line number": [
      309,
      310,
      318,
      320
     ]
    },
    "numpy.complex128": {
     "line number": [
      308
     ]
    },
    "numpy.complex64": {
     "line number": [
      308
     ]
    },
    "numpy.float32": {
     "line number": [
      308
     ]
    },
    "numpy.float64": {
     "line number": [
      308
     ]
    },
    "numpy.int16": {
     "line number": [
      307
     ]
    },
    "numpy.int32": {
     "line number": [
      307
     ]
    },
    "numpy.prod": {
     "line number": [
      316,
      317,
      319
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      317,
      319
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      316
     ]
    },
    "numpy.uint16": {
     "line number": [
      307
     ]
    },
    "numpy.uint32": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPtp": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestPtp.test_basic": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.ptp": {
     "line number": [
      276,
      280,
      281
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      276,
      280,
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestSelect._select": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "len": {
     "line number": [
      153
     ]
    },
    "range": {
     "line number": [
      153
     ]
    },
    "zip": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_basic": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "len": {
     "line number": [
      167,
      168
     ]
    },
    "numpy.array": {
     "line number": [
      158,
      159,
      160,
      161,
      162,
      163
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      164
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      167,
      168
     ]
    },
    "select": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSinc": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      830
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestSinc.test_array_like": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": {
    "list": {
     "line number": [
      840
     ]
    },
    "numpy.array": {
     "line number": [
      839
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      842,
      843
     ]
    },
    "sinc": {
     "line number": [
      839,
      840,
      841
     ]
    },
    "tuple": {
     "line number": [
      841
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSinc.test_simple": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": {
    "flipud": {
     "line number": [
      835
     ]
    },
    "numpy.linspace": {
     "line number": [
      833
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      832
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      835
     ]
    },
    "sinc": {
     "line number": [
      832,
      833
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      759
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_masked": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      806
     ]
    },
    "numpy.ma.array": {
     "line number": [
      809,
      813,
      816
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      811,
      814,
      817
     ]
    },
    "trapz": {
     "line number": [
      811,
      814,
      817
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_matrix": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      821
     ]
    },
    "numpy.matrix": {
     "line number": [
      824,
      825
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      827
     ]
    },
    "trapz": {
     "line number": [
      823,
      826
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_ndim": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      767,
      768,
      769
     ]
    },
    "numpy.ones_like": {
     "line number": [
      771,
      774,
      777
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      789,
      791,
      793,
      797,
      799,
      801
     ]
    },
    "trapz": {
     "line number": [
      788,
      790,
      792,
      796,
      798,
      800
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_simple": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      761
     ]
    },
    "numpy.exp": {
     "line number": [
      762
     ]
    },
    "numpy.pi": {
     "line number": [
      762
     ]
    },
    "numpy.sqrt": {
     "line number": [
      762
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      764
     ]
    },
    "trapz": {
     "line number": [
      762
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_basic": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      485,
      487
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      487
     ]
    },
    "trim_zeros": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_leading_skip": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      490,
      492
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      492
     ]
    },
    "trim_zeros": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_trailing_skip": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      495,
      497
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      497
     ]
    },
    "trim_zeros": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestUnique": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1113
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestUnique.test_simple": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      1116,
      1119,
      1121
     ]
    },
    "numpy.array": {
     "line number": [
      1115,
      1117,
      1117,
      1120
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1116,
      1117,
      1119,
      1121
     ]
    },
    "unique": {
     "line number": [
      1116,
      1117,
      1119,
      1121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestUnwrap": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      721
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestUnwrap.test_simple": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": {
    "diff": {
     "line number": [
      726
     ]
    },
    "numpy.all": {
     "line number": [
      726
     ]
    },
    "numpy.pi": {
     "line number": [
      724,
      726
     ]
    },
    "numpy.random.rand": {
     "line number": [
      726
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      726
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      724
     ]
    },
    "unwrap": {
     "line number": [
      724,
      726
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_UnboundMethod_ticket_1156": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": {
    "Foo": {
     "line number": [
      645,
      647
     ]
    },
    "Foo.bar": {
     "line number": [
      647
     ]
    },
    "numpy.arange": {
     "line number": [
      645,
      646,
      647,
      648
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      645,
      647
     ]
    },
    "vectorize": {
     "line number": [
      645,
      647
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_UnboundMethod_ticket_1156.Foo": {
  "data": {
   "lineno": 641
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_UnboundMethod_ticket_1156.Foo.bar": {
  "data": {
   "lineno": 643
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_assigning_docstring": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "f": {
     "line number": [
      636
     ]
    },
    "f.__doc__": {
     "line number": [
      637
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      637
     ]
    },
    "vectorize": {
     "line number": [
      636
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_assigning_docstring.foo": {
  "data": {
   "lineno": 633
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_cache": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": {
    "f": {
     "line number": [
      678
     ]
    },
    "f.cache": {
     "line number": [
      676
     ]
    },
    "len": {
     "line number": [
      679
     ]
    },
    "numpy.arange": {
     "line number": [
      677
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      678
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      679
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_cache.f": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": {
    "vectorize": {
     "line number": [
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_coverage1_ticket_2100": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "f": {
     "line number": [
      629,
      630
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      630
     ]
    },
    "vectorize": {
     "line number": [
      629
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_coverage1_ticket_2100.foo": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_execution_order_ticket_1487": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": {
    "f1": {
     "line number": [
      653,
      654
     ]
    },
    "f2": {
     "line number": [
      656,
      657
     ]
    },
    "numpy.arange": {
     "line number": [
      653,
      654,
      656,
      657
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      658,
      659
     ]
    },
    "vectorize": {
     "line number": [
      652,
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "f": {
     "line number": [
      560,
      562,
      565
     ]
    },
    "numpy.array": {
     "line number": [
      561,
      563,
      566
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      564,
      567
     ]
    },
    "vectorize": {
     "line number": [
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords.foo": {
  "data": {
   "lineno": 558
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords2_ticket_2100": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "f": {
     "line number": [
      584,
      586,
      589,
      591
     ]
    },
    "numpy.array": {
     "line number": [
      585,
      587,
      592
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      588,
      590,
      593
     ]
    },
    "vectorize": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords2_ticket_2100.foo": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords3_ticket_2100": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      605,
      606,
      607
     ]
    },
    "numpy.vectorize": {
     "line number": [
      603
     ]
    },
    "vpolyval": {
     "line number": [
      605,
      606,
      607
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords3_ticket_2100.mypolyval": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": {
    "list": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords4_ticket_2100": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": {
    "f": {
     "line number": [
      617
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      617
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords4_ticket_2100.f": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "vectorize": {
     "line number": [
      611
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords5_ticket_2100": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "f": {
     "line number": [
      624
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      624
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords5_ticket_2100.f": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": {
    "numpy.prod": {
     "line number": [
      623
     ]
    },
    "vectorize": {
     "line number": [
      621
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords_no_func_code": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      577
     ]
    },
    "f": {
     "line number": [
      575
     ]
    },
    "numpy.lib.tests.test_function_base.random": {
     "line number": [
      575
     ]
    },
    "vectorize": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_large": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": {
    "f": {
     "line number": [
      544,
      545
     ]
    },
    "numpy.linspace": {
     "line number": [
      543
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      546
     ]
    },
    "vectorize": {
     "line number": [
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_scalar": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "f": {
     "line number": [
      538,
      539
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      540
     ]
    },
    "vectorize": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_scalar.addsubtract": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_simple": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "f": {
     "line number": [
      529
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      530
     ]
    },
    "vectorize": {
     "line number": [
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_simple.addsubtract": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_string_ticket_1892": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "f": {
     "line number": [
      663,
      665
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      665
     ]
    },
    "numpy.vectorize": {
     "line number": [
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_ufunc": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "f": {
     "line number": [
      550,
      552
     ]
    },
    "numpy.array": {
     "line number": [
      551
     ]
    },
    "numpy.cos": {
     "line number": [
      553
     ]
    },
    "numpy.lib.tests.test_function_base.math": {
     "line number": [
      550
     ]
    },
    "numpy.pi": {
     "line number": [
      551,
      551,
      551,
      551
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      554
     ]
    },
    "vectorize": {
     "line number": [
      550
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.Test_I0": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      1186
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.Test_I0.test_simple": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": {
    "i0": {
     "line number": [
      1188,
      1190,
      1197
     ]
    },
    "numpy.array": {
     "line number": [
      1188,
      1189,
      1191,
      1192,
      1198
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1188,
      1190,
      1197
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_array_max_ulp": {
  "data": {
   "shadows": "numpy.testing.assert_array_max_ulp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.compare_results": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1410
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1411
     ]
    },
    "range": {
     "line number": [
      1410
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.test_percentile_list": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": {
    "numpy.percentile": {
     "line number": [
      1415
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1415
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.test_percentile_out": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1418,
      1424
     ]
    },
    "numpy.percentile": {
     "line number": [
      1421,
      1422,
      1428,
      1429,
      1432,
      1433
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1422,
      1429,
      1433
     ]
    },
    "numpy.zeros": {
     "line number": [
      1419,
      1427,
      1431
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      266
     ]
    },
    "run_module_suite": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_1d": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      106,
      109
     ]
    },
    "numpy.array": {
     "line number": [
      106
     ]
    },
    "numpy.ones": {
     "line number": [
      107
     ]
    },
    "numpy.r_": {
     "line number": [
      106,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_2d": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      123,
      127
     ]
    },
    "assert_array_equal": {
     "line number": [
      124,
      125,
      128,
      129
     ]
    },
    "numpy.r_": {
     "line number": [
      122,
      126
     ]
    },
    "rand": {
     "line number": [
      120,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_mixed_type": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      113
     ]
    },
    "numpy.r_": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_more_mixed_type": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      117
     ]
    },
    "numpy.array": {
     "line number": [
      116,
      116
     ]
    },
    "numpy.r_": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_basic": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      77,
      78,
      79,
      81
     ]
    },
    "assert_almost_equal": {
     "line number": [
      80,
      82,
      83,
      84
     ]
    },
    "numpy.mgrid": {
     "line number": [
      75,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_linspace_equivalence": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      88
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      89
     ]
    },
    "numpy.linspace": {
     "line number": [
      87
     ]
    },
    "numpy.mgrid": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_nd": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      94,
      95
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      98,
      99,
      100,
      101
     ]
    },
    "assert_array_equal": {
     "line number": [
      96,
      97
     ]
    },
    "numpy.mgrid": {
     "line number": [
      92,
      93
     ]
    },
    "numpy.ones": {
     "line number": [
      96,
      97,
      98,
      99,
      100,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIndexExpression": {
  "data": {
   "lineno": 139
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestIndexExpression.test_regression_1": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      143,
      144
     ]
    },
    "numpy.arange": {
     "line number": [
      142
     ]
    },
    "numpy.index_exp": {
     "line number": [
      144
     ]
    },
    "numpy.s_": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIndexExpression.test_simple_1": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      149,
      150
     ]
    },
    "numpy.index_exp": {
     "line number": [
      149
     ]
    },
    "numpy.random.rand": {
     "line number": [
      147
     ]
    },
    "numpy.s_": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestNdenumerate": {
  "data": {
   "lineno": 132
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestNdenumerate.test_basic": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      135
     ]
    },
    "list": {
     "line number": [
      135
     ]
    },
    "numpy.array": {
     "line number": [
      134
     ]
    },
    "numpy.ndenumerate": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_basic": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      16,
      22
     ]
    },
    "ValueError": {
     "line number": [
      15,
      17,
      18,
      19,
      20,
      21
     ]
    },
    "assert_equal": {
     "line number": [
      11,
      12,
      13,
      14,
      24,
      25,
      28,
      29,
      30,
      31,
      33,
      35,
      37,
      39
     ]
    },
    "assert_raises": {
     "line number": [
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22
     ]
    },
    "numpy.array": {
     "line number": [
      27,
      35,
      37
     ]
    },
    "numpy.ravel_multi_index": {
     "line number": [
      12,
      14,
      18,
      19,
      20,
      21,
      22,
      25,
      28,
      29,
      30,
      31,
      33
     ]
    },
    "numpy.unravel_index": {
     "line number": [
      11,
      13,
      15,
      16,
      17,
      24,
      35,
      37,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_clipmodes": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      71
     ]
    },
    "assert_equal": {
     "line number": [
      66,
      68
     ]
    },
    "assert_raises": {
     "line number": [
      71
     ]
    },
    "numpy.ravel_multi_index": {
     "line number": [
      66,
      67,
      68,
      70,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_dtypes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      48,
      49,
      51,
      52,
      58,
      59,
      61,
      62
     ]
    },
    "numpy.array": {
     "line number": [
      45,
      54
     ]
    },
    "numpy.int16": {
     "line number": [
      43
     ]
    },
    "numpy.int32": {
     "line number": [
      43
     ]
    },
    "numpy.int64": {
     "line number": [
      44
     ]
    },
    "numpy.ravel_multi_index": {
     "line number": [
      48,
      51,
      58,
      61
     ]
    },
    "numpy.uint16": {
     "line number": [
      43
     ]
    },
    "numpy.uint32": {
     "line number": [
      44
     ]
    },
    "numpy.uint64": {
     "line number": [
      44
     ]
    },
    "numpy.unravel_index": {
     "line number": [
      49,
      52,
      59,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.diag_indices": {
  "data": {
   "shadows": "numpy.diag_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.diag_indices_from": {
  "data": {
   "shadows": "numpy.diag_indices_from"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.fill_diagonal": {
  "data": {
   "shadows": "numpy.fill_diagonal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.index_exp": {
  "data": {
   "shadows": "numpy.index_exp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.mgrid": {
  "data": {
   "shadows": "numpy.mgrid"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.ndenumerate": {
  "data": {
   "shadows": "numpy.ndenumerate"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.ndindex": {
  "data": {
   "shadows": "numpy.ndindex"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.s_": {
  "data": {
   "shadows": "numpy.s_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.test_c_": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      154
     ]
    },
    "numpy.array": {
     "line number": [
      153,
      153
     ]
    },
    "numpy.c_": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_diag_indices": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      216,
      228
     ]
    },
    "int": {
     "line number": [
      226
     ]
    },
    "numpy.array": {
     "line number": [
      211,
      217,
      229
     ]
    },
    "numpy.diag_indices": {
     "line number": [
      210,
      223
     ]
    },
    "numpy.zeros": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_diag_indices_from": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      238,
      239
     ]
    },
    "numpy.arange": {
     "line number": [
      238,
      239
     ]
    },
    "numpy.diag_indices_from": {
     "line number": [
      237
     ]
    },
    "numpy.random.random": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_fill_diagonal": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      159,
      167,
      182,
      197
     ]
    },
    "assert_equal": {
     "line number": [
      206
     ]
    },
    "int": {
     "line number": [
      157,
      165,
      180,
      195,
      203
     ]
    },
    "numpy.array": {
     "line number": [
      160,
      168,
      183,
      198,
      205
     ]
    },
    "numpy.fill_diagonal": {
     "line number": [
      158,
      166,
      181,
      196,
      204
     ]
    },
    "numpy.where": {
     "line number": [
      206
     ]
    },
    "numpy.zeros": {
     "line number": [
      157,
      165,
      180,
      195,
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_ndindex": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      245,
      248,
      252
     ]
    },
    "assert_equal": {
     "line number": [
      256,
      259,
      263
     ]
    },
    "list": {
     "line number": [
      243,
      247,
      251,
      252,
      255,
      258,
      262
     ]
    },
    "numpy.ndenumerate": {
     "line number": [
      244
     ]
    },
    "numpy.ndindex": {
     "line number": [
      243,
      247,
      251,
      252,
      255,
      258,
      262
     ]
    },
    "numpy.zeros": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.unravel_index": {
  "data": {
   "shadows": "numpy.unravel_index"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.where": {
  "data": {
   "shadows": "numpy.where"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1685
     ]
    },
    "numpy.lib.tests.test_io.sys": {
     "line number": [
      52,
      53
     ]
    },
    "numpy.ma.testutils.run_module_suite": {
     "line number": [
      1686
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_io.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.ConversionWarning": {
  "data": {
   "shadows": "numpy.lib._iotools.ConversionWarning"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.ConverterError": {
  "data": {
   "shadows": "numpy.lib._iotools.ConverterError"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.ConverterLockError": {
  "data": {
   "shadows": "numpy.lib._iotools.ConverterLockError"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.IS_64BIT": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_io.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.RoundtripTest": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "object": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.RoundtripTest.roundtrip": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      97,
      106
     ]
    },
    "isinstance": {
     "line number": [
      106
     ]
    },
    "numpy.lib.tests.test_io.sys": {
     "line number": [
      91,
      106
     ]
    },
    "numpy.load": {
     "line number": [
      109
     ]
    },
    "save_func": {
     "line number": [
      102
     ]
    },
    "tempfile.NamedTemporaryFile": {
     "line number": [
      92,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_1D": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "int": {
     "line number": [
      128
     ]
    },
    "numpy.array": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_array": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "float": {
     "line number": [
      115
     ]
    },
    "int": {
     "line number": [
      118
     ]
    },
    "numpy.array": {
     "line number": [
      115,
      118,
      121,
      124
     ]
    },
    "numpy.cdouble": {
     "line number": [
      124
     ]
    },
    "numpy.csingle": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_mmap": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      133
     ]
    },
    "numpy.lib.tests.test_io.sys": {
     "line number": [
      131
     ]
    },
    "numpy.testing.dec.knownfailureif": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_record": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.TestCase": {
  "data": {
   "shadows": "numpy.ma.testutils.TestCase"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.TestFromTxt": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "numpy.ma.testutils.TestCase": {
     "line number": [
      781
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_1D": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": {
    "int": {
     "line number": [
      814,
      817,
      821
     ]
    },
    "numpy.array": {
     "line number": [
      814
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      816,
      820
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      818,
      822
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      817,
      821
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_array": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": {
    "float": {
     "line number": [
      808,
      809
     ]
    },
    "int": {
     "line number": [
      803,
      804
     ]
    },
    "numpy.array": {
     "line number": [
      803,
      808
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      802
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      809
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      805,
      810
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      804
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_auto_dtype": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      902
     ]
    },
    "numpy.array": {
     "line number": [
      896,
      897,
      898,
      899,
      900
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      894
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      901,
      903
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      895
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_auto_dtype_uniform": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      910
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      908
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      911
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      909
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_autonames_and_usecols": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": {
    "float": {
     "line number": [
      966
     ]
    },
    "int": {
     "line number": [
      966
     ]
    },
    "numpy.array": {
     "line number": [
      965
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      962
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      967
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      963
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_autostrip": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1415
     ]
    },
    "float": {
     "line number": [
      1418,
      1422
     ]
    },
    "numpy.array": {
     "line number": [
      1417,
      1421
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1416,
      1420
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1419,
      1423
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1416,
      1420
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_commented_header": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": {
    "float": {
     "line number": [
      947
     ]
    },
    "int": {
     "line number": [
      947
     ]
    },
    "numpy.array": {
     "line number": [
      946
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      945,
      956
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      938,
      950
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      948,
      957
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_comments": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": {
    "int": {
     "line number": [
      826,
      829,
      833
     ]
    },
    "numpy.array": {
     "line number": [
      826
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      828,
      832
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      830,
      834
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      829,
      833
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_comments_is_none": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": {
    "numpy.genfromtxt": {
     "line number": [
      1516,
      1519
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1516,
      1519
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1518,
      1521
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_cornercases": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      994
     ]
    },
    "float": {
     "line number": [
      995
     ]
    },
    "numpy.array": {
     "line number": [
      994
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      991
     ]
    },
    "numpy.lib.tests.test_io.strptime": {
     "line number": [
      990
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      996
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      992
     ]
    },
    "numpy.object_": {
     "line number": [
      995
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_cornercases2": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      1004
     ]
    },
    "float": {
     "line number": [
      1005
     ]
    },
    "numpy.array": {
     "line number": [
      1004
     ]
    },
    "numpy.datetime64": {
     "line number": [
      1000
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1001
     ]
    },
    "numpy.lib.tests.test_io.strptime": {
     "line number": [
      1000
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1006
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1002
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_with_usecols": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": {
    "int": {
     "line number": [
      973,
      974,
      976
     ]
    },
    "numpy.array": {
     "line number": [
      976
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      972
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      977
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      973
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_with_usecols_and_names": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": {
    "float": {
     "line number": [
      985
     ]
    },
    "int": {
     "line number": [
      983,
      985
     ]
    },
    "numpy.array": {
     "line number": [
      984
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      981
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      986
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      982
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_default_field_format": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1374
     ]
    },
    "int": {
     "line number": [
      1374,
      1374
     ]
    },
    "numpy.array": {
     "line number": [
      1373
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1371
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1375
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1371
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_dtype_with_converters": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1046,
      1048,
      1048,
      1051,
      1051
     ]
    },
    "numpy.array": {
     "line number": [
      1047,
      1052
     ]
    },
    "numpy.compat.bytes": {
     "line number": [
      1046
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1045,
      1050
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1049,
      1053
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1045,
      1050
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_dtype_with_object": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1079
     ]
    },
    "NotImplementedError": {
     "line number": [
      1075
     ]
    },
    "datetime.datetime": {
     "line number": [
      1067,
      1067
     ]
    },
    "int": {
     "line number": [
      1062,
      1071
     ]
    },
    "numpy.array": {
     "line number": [
      1067
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1065,
      1073
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1065,
      1073
     ]
    },
    "numpy.lib.tests.test_io.strptime": {
     "line number": [
      1063
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1069
     ]
    },
    "numpy.object": {
     "line number": [
      1062,
      1071
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_easy_structured_dtype": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1407,
      1407,
      1409,
      1409
     ]
    },
    "int": {
     "line number": [
      1407,
      1409
     ]
    },
    "numpy.array": {
     "line number": [
      1408
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1406
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1410
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1406
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_empty_file": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1188
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1187
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1186
     ]
    },
    "numpy.lib.tests.test_io.warnings": {
     "line number": [
      1183,
      1184
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1188
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_fancy_dtype": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": {
    "float": {
     "line number": [
      917
     ]
    },
    "int": {
     "line number": [
      917,
      917
     ]
    },
    "numpy.array": {
     "line number": [
      919
     ]
    },
    "numpy.dtype": {
     "line number": [
      917
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      916
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      920
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      918
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_fancy_dtype_alt": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1193
     ]
    },
    "int": {
     "line number": [
      1193,
      1193
     ]
    },
    "numpy.dtype": {
     "line number": [
      1193
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1192
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1195
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1196
     ]
    },
    "numpy.mafromtxt": {
     "line number": [
      1194
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_filling_values": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1509
     ]
    },
    "int": {
     "line number": [
      1510
     ]
    },
    "numpy.array": {
     "line number": [
      1510
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1511
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1512
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1511
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_fixed_width_names": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1494,
      1500
     ]
    },
    "float": {
     "line number": [
      1496,
      1502
     ]
    },
    "int": {
     "line number": [
      1496,
      1496,
      1502,
      1502
     ]
    },
    "numpy.array": {
     "line number": [
      1495,
      1501
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1497,
      1503
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1498,
      1504
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1497,
      1503
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_using_filename": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1570
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      1583
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1584
     ]
    },
    "numpy.lib.tests.test_io.os": {
     "line number": [
      1583,
      1586,
      1587
     ]
    },
    "numpy.lib.tests.test_io.sys": {
     "line number": [
      1571
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      1584
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      1579
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_using_generator": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": {
    "count": {
     "line number": [
      1595
     ]
    },
    "numpy.arange": {
     "line number": [
      1596
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1595
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      1596
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_using_generator.count": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": {
    "numpy.compat.asbytes": {
     "line number": [
      1593
     ]
    },
    "range": {
     "line number": [
      1592
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_header": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      885,
      886,
      887
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      883
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      888,
      889,
      890
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      884
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_incomplete_names": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1452
     ]
    },
    "float": {
     "line number": [
      1460
     ]
    },
    "int": {
     "line number": [
      1455
     ]
    },
    "numpy.array": {
     "line number": [
      1454,
      1459
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1456,
      1461
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1457
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1456,
      1461
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_inconsistent_dtype": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1365
     ]
    },
    "dict": {
     "line number": [
      1363
     ]
    },
    "int": {
     "line number": [
      1364
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1365
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1360
     ]
    },
    "numpy.ma.testutils.assert_raises": {
     "line number": [
      1365
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_integer_delimiter": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1104
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1103
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1103
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1105
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_converter": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1029
     ]
    },
    "float": {
     "line number": [
      1022,
      1024
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1031
     ]
    },
    "numpy.lib._iotools.ConverterError": {
     "line number": [
      1031
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1026
     ]
    },
    "numpy.ma.testutils.assert_raises": {
     "line number": [
      1031
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1327
     ]
    },
    "dict": {
     "line number": [
      1315
     ]
    },
    "int": {
     "line number": [
      1324
     ]
    },
    "len": {
     "line number": [
      1323
     ]
    },
    "numpy.lib._iotools.ConversionWarning": {
     "line number": [
      1321
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1313
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1323,
      1324
     ]
    },
    "numpy.ma.testutils.assert_raises": {
     "line number": [
      1327
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1327
     ]
    },
    "numpy.ones": {
     "line number": [
      1324
     ]
    },
    "numpy.testing.assert_warns": {
     "line number": [
      1321
     ]
    },
    "range": {
     "line number": [
      1310
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise.f": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": {
    "numpy.ndfromtxt": {
     "line number": [
      1320
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise_with_usecols": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1337
     ]
    },
    "int": {
     "line number": [
      1347,
      1352
     ]
    },
    "len": {
     "line number": [
      1346,
      1351
     ]
    },
    "numpy.lib._iotools.ConversionWarning": {
     "line number": [
      1344
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1336
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1346,
      1347,
      1351,
      1354
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1350
     ]
    },
    "numpy.ones": {
     "line number": [
      1347,
      1352
     ]
    },
    "numpy.testing.assert_warns": {
     "line number": [
      1344
     ]
    },
    "range": {
     "line number": [
      1333,
      1353
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise_with_usecols.f": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": {
    "numpy.ndfromtxt": {
     "line number": [
      1343
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_missing": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1110,
      1111,
      1112
     ]
    },
    "numpy.array": {
     "line number": [
      1112
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1109
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1113
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_missing_with_tabs": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      1122
     ]
    },
    "numpy.array": {
     "line number": [
      1121,
      1122
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1119
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1119
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1123,
      1124
     ]
    },
    "numpy.nan": {
     "line number": [
      1121,
      1121,
      1121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_names_auto_completion": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1467,
      1469
     ]
    },
    "int": {
     "line number": [
      1467,
      1467,
      1469,
      1469
     ]
    },
    "numpy.array": {
     "line number": [
      1468
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1466
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1466
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1470
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_names_overwrite": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      931
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      927
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      933
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      929
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_names_with_usecols_bug1636": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1477,
      1477,
      1477,
      1482,
      1482,
      1482,
      1487
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1476,
      1481,
      1486
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1476,
      1481,
      1486
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1479,
      1484,
      1489
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_recfromcsv": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1545
     ]
    },
    "isinstance": {
     "line number": [
      1549,
      1565
     ]
    },
    "numpy.array": {
     "line number": [
      1547,
      1563
     ]
    },
    "numpy.int": {
     "line number": [
      1548,
      1548,
      1556,
      1556,
      1564,
      1564
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1544,
      1552,
      1561
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1554
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1550,
      1557,
      1558,
      1559,
      1566
     ]
    },
    "numpy.recarray": {
     "line number": [
      1549,
      1565
     ]
    },
    "numpy.recfromcsv": {
     "line number": [
      1546,
      1553,
      1562
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_recfromtxt": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1526
     ]
    },
    "isinstance": {
     "line number": [
      1530
     ]
    },
    "numpy.array": {
     "line number": [
      1528
     ]
    },
    "numpy.int": {
     "line number": [
      1529,
      1529,
      1537,
      1537
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1525,
      1533
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1535
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1531,
      1538,
      1539,
      1540
     ]
    },
    "numpy.recarray": {
     "line number": [
      1530
     ]
    },
    "numpy.recfromtxt": {
     "line number": [
      1527,
      1534
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_record": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      788,
      795
     ]
    },
    "numpy.int32": {
     "line number": [
      787,
      787
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      785,
      791
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      789,
      798
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      787,
      797
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_replace_space": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1431,
      1438,
      1445
     ]
    },
    "int": {
     "line number": [
      1431,
      1431,
      1438,
      1438,
      1445,
      1445
     ]
    },
    "numpy.array": {
     "line number": [
      1432,
      1439,
      1446
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1429,
      1435,
      1442
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1429,
      1435,
      1442
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1433,
      1440,
      1447
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_shaped_dtype": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1201,
      1201
     ]
    },
    "int": {
     "line number": [
      1202
     ]
    },
    "numpy.array": {
     "line number": [
      1204
     ]
    },
    "numpy.dtype": {
     "line number": [
      1201
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1200
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      1206
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1203
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_single_dtype_w_explicit_names": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1389,
      1391
     ]
    },
    "numpy.array": {
     "line number": [
      1390
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1388
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1392
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1388
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_single_dtype_w_implicit_names": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1398,
      1400
     ]
    },
    "numpy.array": {
     "line number": [
      1399
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1397
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1401
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1397
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_single_dtype_wo_names": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1381,
      1382
     ]
    },
    "numpy.array": {
     "line number": [
      1382
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1380
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1383
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1380
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_skip_footer": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      854
     ]
    },
    "float": {
     "line number": [
      857
     ]
    },
    "numpy.array": {
     "line number": [
      856
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      855
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      855
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      858
     ]
    },
    "range": {
     "line number": [
      850,
      852,
      856
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_skip_footer_with_invalid": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      865
     ]
    },
    "numpy.array": {
     "line number": [
      870,
      873,
      877,
      879
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      865,
      869,
      872,
      876,
      878
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      866,
      869,
      872,
      876,
      878
     ]
    },
    "numpy.lib.tests.test_io.warnings": {
     "line number": [
      861,
      862
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      870,
      873,
      877,
      879
     ]
    },
    "numpy.ma.testutils.assert_raises": {
     "line number": [
      865
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_skiprows": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      839
     ]
    },
    "int": {
     "line number": [
      838,
      839
     ]
    },
    "numpy.array": {
     "line number": [
      838
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      841,
      845
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      846
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      843,
      847
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      842
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_spacedelimiter": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1096
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1094
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1098
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1095
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_tricky_converter_bug1666": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1036
     ]
    },
    "numpy.array": {
     "line number": [
      1038
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1037
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1035
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1039
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_unused_converter": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1012,
      1017
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1010
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1013,
      1018
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1011,
      1016
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1130,
      1134,
      1137,
      1141,
      1145
     ]
    },
    "numpy.array": {
     "line number": [
      1130,
      1137,
      1145
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1131,
      1138
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1135,
      1142,
      1146
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1134,
      1141,
      1145
     ]
    },
    "numpy.savetxt": {
     "line number": [
      1132,
      1139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_as_css": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1153
     ]
    },
    "numpy.array": {
     "line number": [
      1153
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1151
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1151
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1154
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_with_integer": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1168
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1167
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1167
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_with_named_columns": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1174
     ]
    },
    "float": {
     "line number": [
      1172,
      1172
     ]
    },
    "numpy.array": {
     "line number": [
      1172
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1175,
      1177
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1175,
      1177
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1176,
      1179
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_with_structured_dtype": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1161
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1158
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1162,
      1163
     ]
    },
    "numpy.ndfromtxt": {
     "line number": [
      1161
     ]
    },
    "zip": {
     "line number": [
      1161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_user_filling_values": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1262
     ]
    },
    "int": {
     "line number": [
      1260,
      1260,
      1263,
      1269,
      1273
     ]
    },
    "numpy.array": {
     "line number": [
      1260,
      1268,
      1273
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1267,
      1272
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1267,
      1272
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1270,
      1274
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_user_missing_values": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      1230
     ]
    },
    "dict": {
     "line number": [
      1229
     ]
    },
    "float": {
     "line number": [
      1230
     ]
    },
    "int": {
     "line number": [
      1230
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1232,
      1241,
      1249
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1234,
      1243,
      1252
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1238,
      1247,
      1256
     ]
    },
    "numpy.mafromtxt": {
     "line number": [
      1232,
      1241,
      1249
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_userconverters_with_explicit_dtype": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1085,
      1088
     ]
    },
    "numpy.array": {
     "line number": [
      1087
     ]
    },
    "numpy.compat.bytes": {
     "line number": [
      1086
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1085
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1084
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1089
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_with_masked_column_uniform": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": {
    "numpy.genfromtxt": {
     "line number": [
      1291
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1290
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1293
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1294
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_with_masked_column_various": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      1303,
      1303
     ]
    },
    "int": {
     "line number": [
      1303
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      1299
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1298
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1301
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1304
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_withmissing": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1210
     ]
    },
    "numpy.float": {
     "line number": [
      1222,
      1222
     ]
    },
    "numpy.int": {
     "line number": [
      1214,
      1214
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1209
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1212,
      1220
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1215,
      1216,
      1223,
      1224
     ]
    },
    "numpy.mafromtxt": {
     "line number": [
      1211,
      1219
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_withmissing_float": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": {
    "numpy.float": {
     "line number": [
      1283
     ]
    },
    "numpy.int": {
     "line number": [
      1283
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      1278
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1281
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1284,
      1285
     ]
    },
    "numpy.mafromtxt": {
     "line number": [
      1279
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "numpy.ma.testutils.TestCase": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_1D": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "int": {
     "line number": [
      488,
      489,
      495,
      496
     ]
    },
    "numpy.array": {
     "line number": [
      489,
      496
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      485,
      492
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      488,
      495
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      490,
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_3d_shaped_dtype": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": {
    "float": {
     "line number": [
      595,
      595
     ]
    },
    "int": {
     "line number": [
      596
     ]
    },
    "numpy.array": {
     "line number": [
      598
     ]
    },
    "numpy.dtype": {
     "line number": [
      595
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      594
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      597
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      601
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_array": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "float": {
     "line number": [
      480,
      481
     ]
    },
    "int": {
     "line number": [
      475,
      476
     ]
    },
    "numpy.array": {
     "line number": [
      476,
      481
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      471
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      475,
      480
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      477,
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_comments": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "int": {
     "line number": [
      522,
      524
     ]
    },
    "numpy.array": {
     "line number": [
      524
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      519
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      522
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_converters_with_usecols": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "int": {
     "line number": [
      512,
      513,
      515
     ]
    },
    "numpy.array": {
     "line number": [
      515
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      509
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      512
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_dtype_with_object": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      639,
      639
     ]
    },
    "int": {
     "line number": [
      634
     ]
    },
    "numpy.array": {
     "line number": [
      639
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      637
     ]
    },
    "numpy.lib.tests.test_io.strptime": {
     "line number": [
      635
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      637
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      641
     ]
    },
    "numpy.object": {
     "line number": [
      634
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_empty_field_after_tab": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      677
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      671
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      676
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_empty_file": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      610,
      612
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      607
     ]
    },
    "numpy.lib.tests.test_io.warnings": {
     "line number": [
      604,
      605
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      608,
      610
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      609,
      611
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      612
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_fancy_dtype": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": {
    "float": {
     "line number": [
      579
     ]
    },
    "int": {
     "line number": [
      579,
      579
     ]
    },
    "numpy.array": {
     "line number": [
      581
     ]
    },
    "numpy.dtype": {
     "line number": [
      579
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      576
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      580
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      582
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_generator_source": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": {
    "count": {
     "line number": [
      740
     ]
    },
    "numpy.arange": {
     "line number": [
      741
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      740
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      741
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_generator_source.count": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": {
    "range": {
     "line number": [
      737
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_int64_type": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      656
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      653
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      656
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      657
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_missing": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "int": {
     "line number": [
      503,
      504,
      505
     ]
    },
    "numpy.array": {
     "line number": [
      505
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      500
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      503
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_ndmin_keyword": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      695,
      697
     ]
    },
    "int": {
     "line number": [
      699,
      706,
      709,
      712,
      718,
      721,
      724
     ]
    },
    "numpy.array": {
     "line number": [
      700
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      692,
      703,
      715,
      731
     ]
    },
    "numpy.lib.tests.test_io.warnings": {
     "line number": [
      728,
      729
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      695,
      697,
      699,
      706,
      709,
      712,
      718,
      721,
      724,
      732,
      733
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      701
     ]
    },
    "numpy.ma.testutils.assert_raises": {
     "line number": [
      695,
      697
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      707,
      710,
      713,
      719,
      722,
      725,
      732,
      733
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_record": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      456,
      465
     ]
    },
    "numpy.int32": {
     "line number": [
      455,
      455
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      452,
      459
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      455,
      467
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      457,
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_shaped_dtype": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "float": {
     "line number": [
      586,
      586
     ]
    },
    "int": {
     "line number": [
      587
     ]
    },
    "numpy.array": {
     "line number": [
      589
     ]
    },
    "numpy.dtype": {
     "line number": [
      586
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      585
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      588
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      591
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_skiprows": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "int": {
     "line number": [
      531,
      533,
      539,
      541
     ]
    },
    "numpy.array": {
     "line number": [
      533,
      541
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      528,
      536
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      531,
      539
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      534,
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_structure_unpack": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      687,
      688,
      689
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      681
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      683
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      687,
      688,
      689
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      684,
      685,
      686
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_uint64_type": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": {
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      645
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      648
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      649
     ]
    },
    "numpy.uint64": {
     "line number": [
      648
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_universal_newline": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": {
    "numpy.lib.tests.test_io.os": {
     "line number": [
      661,
      662,
      668
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      665
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      666
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      660
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_unused_converter": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "int": {
     "line number": [
      620,
      625
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      616
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      619,
      624
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      621,
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_usecols": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": {
    "float": {
     "line number": [
      545,
      549,
      552,
      556,
      561
     ]
    },
    "io.BytesIO": {
     "line number": [
      546,
      553
     ]
    },
    "list": {
     "line number": [
      571
     ]
    },
    "numpy.array": {
     "line number": [
      545,
      552,
      561
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      568
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      549,
      556,
      561,
      571
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      550,
      557,
      562
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      572,
      573
     ]
    },
    "numpy.savetxt": {
     "line number": [
      547,
      554
     ]
    },
    "zip": {
     "line number": [
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveLoad": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "numpy.lib.tests.test_io.RoundtripTest": {
     "line number": [
      140
     ]
    },
    "numpy.ma.testutils.TestCase": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSaveLoad.roundtrip": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "numpy.lib.tests.test_io.RoundtripTest": {
     "line number": [
      142
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      143
     ]
    },
    "numpy.save": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.ma.testutils.TestCase": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_1D": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "int": {
     "line number": [
      292
     ]
    },
    "io.BytesIO": {
     "line number": [
      293
     ]
    },
    "numpy.array": {
     "line number": [
      292
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      297
     ]
    },
    "numpy.savetxt": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_array": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "float": {
     "line number": [
      276
     ]
    },
    "int": {
     "line number": [
      285
     ]
    },
    "io.BytesIO": {
     "line number": [
      278,
      286
     ]
    },
    "numpy.array": {
     "line number": [
      276,
      285
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      282,
      283
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      281,
      289
     ]
    },
    "numpy.savetxt": {
     "line number": [
      279,
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_complex_arrays": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      393,
      401,
      409
     ]
    },
    "numpy.complex128": {
     "line number": [
      388
     ]
    },
    "numpy.e": {
     "line number": [
      390
     ]
    },
    "numpy.lib.tests.test_io._assert_floatstr_lines_equal": {
     "line number": [
      397,
      405,
      413
     ]
    },
    "numpy.pi": {
     "line number": [
      389
     ]
    },
    "numpy.savetxt": {
     "line number": [
      394,
      402,
      410
     ]
    },
    "numpy.zeros": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_custom_writer": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "CustomWriter": {
     "line number": [
      423
     ]
    },
    "numpy.array": {
     "line number": [
      424
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      426
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      427
     ]
    },
    "numpy.savetxt": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_custom_writer.CustomWriter": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "list": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_custom_writer.CustomWriter.write": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_delimiter": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      308
     ]
    },
    "numpy.array": {
     "line number": [
      307
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      311
     ]
    },
    "numpy.savetxt": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_file_roundtrip": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      378
     ]
    },
    "numpy.lib.tests.test_io.os": {
     "line number": [
      376,
      383
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      380
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      381
     ]
    },
    "numpy.savetxt": {
     "line number": [
      379
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_format": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      337
     ]
    },
    "io.BytesIO": {
     "line number": [
      315,
      322,
      329,
      336
     ]
    },
    "numpy.array": {
     "line number": [
      314
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      319,
      326,
      333
     ]
    },
    "numpy.ma.testutils.assert_raises": {
     "line number": [
      337
     ]
    },
    "numpy.savetxt": {
     "line number": [
      317,
      323,
      330,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_header_footer": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      343,
      352,
      358,
      366
     ]
    },
    "numpy.array": {
     "line number": [
      344
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      350,
      356,
      364,
      372
     ]
    },
    "numpy.int": {
     "line number": [
      344
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      349,
      355,
      363,
      371
     ]
    },
    "numpy.savetxt": {
     "line number": [
      347,
      353,
      360,
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_record": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      301
     ]
    },
    "numpy.array": {
     "line number": [
      300
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      304
     ]
    },
    "numpy.savetxt": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "numpy.lib.tests.test_io.RoundtripTest": {
     "line number": [
      145
     ]
    },
    "numpy.ma.testutils.TestCase": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.roundtrip": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      148
     ]
    },
    "numpy.lib.tests.test_io.RoundtripTest": {
     "line number": [
      147
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      149
     ]
    },
    "numpy.savez": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_big_arrays": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      156
     ]
    },
    "numpy.lib.tests.test_io.IS_64BIT": {
     "line number": [
      151
     ]
    },
    "numpy.lib.tests.test_io.os": {
     "line number": [
      158
     ]
    },
    "numpy.lib.tests.test_io.sys": {
     "line number": [
      152
     ]
    },
    "numpy.lib.tests.test_io.tempdir": {
     "line number": [
      157
     ]
    },
    "numpy.load": {
     "line number": [
      161
     ]
    },
    "numpy.savez": {
     "line number": [
      159
     ]
    },
    "numpy.testing.dec.skipif": {
     "line number": [
      151,
      152
     ]
    },
    "numpy.testing.dec.slow": {
     "line number": [
      153
     ]
    },
    "numpy.uint8": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_closing_fid": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      257
     ]
    },
    "Exception": {
     "line number": [
      255
     ]
    },
    "numpy.lib.tests.test_io.os": {
     "line number": [
      237,
      259
     ]
    },
    "numpy.lib.tests.test_io.warnings": {
     "line number": [
      250,
      251
     ]
    },
    "numpy.load": {
     "line number": [
      254
     ]
    },
    "numpy.savez": {
     "line number": [
      241
     ]
    },
    "open": {
     "line number": [
      240
     ]
    },
    "range": {
     "line number": [
      252
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_closing_zipfile_after_load": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "numpy.lib.tests.test_io.os": {
     "line number": [
      266
     ]
    },
    "numpy.load": {
     "line number": [
      268
     ]
    },
    "numpy.savez": {
     "line number": [
      267
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      271
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_multiple_arrays": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      167
     ]
    },
    "float": {
     "line number": [
      166
     ]
    },
    "numpy.array": {
     "line number": [
      166,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_named_arrays": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      172
     ]
    },
    "float": {
     "line number": [
      171
     ]
    },
    "io.BytesIO": {
     "line number": [
      173
     ]
    },
    "numpy.array": {
     "line number": [
      171,
      172
     ]
    },
    "numpy.load": {
     "line number": [
      176
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      177,
      178
     ]
    },
    "numpy.savez": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_not_closing_opened_fid": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "numpy.lib.tests.test_io.os": {
     "line number": [
      212,
      228
     ]
    },
    "numpy.load": {
     "line number": [
      221
     ]
    },
    "numpy.savez": {
     "line number": [
      215
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      220,
      222,
      224
     ]
    },
    "open": {
     "line number": [
      214,
      218
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_savez_filename_clashes": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      205
     ]
    },
    "numpy.lib.tests.test_io.threading": {
     "line number": [
      197
     ]
    },
    "range": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_savez_filename_clashes.writer": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      191
     ]
    },
    "numpy.lib.tests.test_io.os": {
     "line number": [
      186,
      194
     ]
    },
    "numpy.random.randn": {
     "line number": [
      188
     ]
    },
    "numpy.savez": {
     "line number": [
      190
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": {
    "numpy.ma.testutils.TestCase": {
     "line number": [
      743
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      752
     ]
    },
    "numpy.float64": {
     "line number": [
      750
     ]
    },
    "numpy.fromregex": {
     "line number": [
      751
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      746
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      754
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record_2": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      763
     ]
    },
    "numpy.fromregex": {
     "line number": [
      762
     ]
    },
    "numpy.int32": {
     "line number": [
      761
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      757
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      765
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record_3": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      774
     ]
    },
    "numpy.float64": {
     "line number": [
      772
     ]
    },
    "numpy.fromregex": {
     "line number": [
      773
     ]
    },
    "numpy.lib.tests.test_io.TextIO": {
     "line number": [
      768
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      775
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TextIO": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TextIO.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "io.BytesIO.__init__": {
     "line number": [
      43
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TextIO.write": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "io.BytesIO.write": {
     "line number": [
      46
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TextIO.writelines": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "io.BytesIO.writelines": {
     "line number": [
      49
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io._assert_floatstr_lines_equal": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      447
     ]
    },
    "numpy.testing.build_err_msg": {
     "line number": [
      446
     ]
    },
    "zip": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.asbytes_nested": {
  "data": {
   "shadows": "numpy.compat.asbytes_nested"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_array_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_raises": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.asstr": {
  "data": {
   "shadows": "numpy.compat.asstr"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.build_err_msg": {
  "data": {
   "shadows": "numpy.testing.build_err_msg"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.bytes": {
  "data": {
   "shadows": "numpy.compat.bytes"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.mkstemp": {
  "data": {
   "shadows": "tempfile.mkstemp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.run_module_suite": {
  "data": {
   "shadows": "numpy.ma.testutils.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.strptime": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      62,
      64
     ]
    },
    "numpy.lib.tests.test_io.sys": {
     "line number": [
      61
     ]
    },
    "numpy.lib.tests.test_io.time": {
     "line number": [
      62,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.tempdir": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.lib.tests.test_io.contextlib": {
     "line number": [
      26
     ]
    },
    "numpy.lib.tests.test_io.shutil": {
     "line number": [
      30
     ]
    },
    "tempfile.mkdtemp": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_gzip_load": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      1602
     ]
    },
    "numpy.lib.tests.test_io.gzip": {
     "line number": [
      1603,
      1609
     ]
    },
    "numpy.load": {
     "line number": [
      1610
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      1610
     ]
    },
    "numpy.random.random": {
     "line number": [
      1600
     ]
    },
    "numpy.save": {
     "line number": [
      1605
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_gzip_loadtxt": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      1619
     ]
    },
    "numpy.lib.tests.test_io.gzip": {
     "line number": [
      1620
     ]
    },
    "numpy.lib.tests.test_io.os": {
     "line number": [
      1627,
      1631,
      1632
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      1629
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      1629
     ]
    },
    "tempfile.mkstemp": {
     "line number": [
      1625
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_gzip_loadtxt_from_string": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      1635
     ]
    },
    "numpy.lib.tests.test_io.gzip": {
     "line number": [
      1636,
      1641
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      1642
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      1642
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_load_refcount": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      1674
     ]
    },
    "len": {
     "line number": [
      1679,
      1681
     ]
    },
    "numpy.lib.tests.test_io.gc": {
     "line number": [
      1678,
      1679,
      1681
     ]
    },
    "numpy.load": {
     "line number": [
      1680
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1683
     ]
    },
    "numpy.savez": {
     "line number": [
      1675
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_npzfile_dict": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      1645
     ]
    },
    "len": {
     "line number": [
      1663
     ]
    },
    "numpy.load": {
     "line number": [
      1652
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      1661
     ]
    },
    "numpy.savez": {
     "line number": [
      1649
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1654,
      1655,
      1656,
      1657,
      1660,
      1663,
      1666,
      1668
     ]
    },
    "numpy.zeros": {
     "line number": [
      1646,
      1647
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      531
     ]
    },
    "numpy.array": {
     "line number": [
      13,
      20,
      21,
      22,
      23
     ]
    },
    "numpy.nan": {
     "line number": [
      13,
      13,
      14,
      15,
      15,
      15,
      15,
      16,
      16,
      16
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_nanfunctions.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "numpy.nanargmax": {
     "line number": [
      146
     ]
    },
    "numpy.nanargmin": {
     "line number": [
      146
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_allnans": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      172,
      173
     ]
    },
    "f": {
     "line number": [
      170,
      172,
      173
     ]
    },
    "numpy.array": {
     "line number": [
      169
     ]
    },
    "numpy.nan": {
     "line number": [
      169,
      173
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      172,
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_empty": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      179
     ]
    },
    "f": {
     "line number": [
      177,
      179,
      181
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      182
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      179
     ]
    },
    "numpy.zeros": {
     "line number": [
      176,
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_matrices": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "f": {
     "line number": [
      192,
      193,
      196,
      199
     ]
    },
    "isinstance": {
     "line number": [
      194,
      197
     ]
    },
    "numpy.eye": {
     "line number": [
      191
     ]
    },
    "numpy.isscalar": {
     "line number": [
      200
     ]
    },
    "numpy.matrix": {
     "line number": [
      191,
      194,
      197
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      194,
      195,
      197,
      198,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_mutation": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "f": {
     "line number": [
      151,
      152
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      150,
      153
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_result_values": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "f": {
     "line number": [
      156,
      160
     ]
    },
    "fcmp": {
     "line number": [
      165
     ]
    },
    "numpy.equal": {
     "line number": [
      166
     ]
    },
    "numpy.greater": {
     "line number": [
      156
     ]
    },
    "numpy.isnan": {
     "line number": [
      164
     ]
    },
    "numpy.less": {
     "line number": [
      156
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      157
     ]
    },
    "numpy.lib.tests.test_nanfunctions.warnings": {
     "line number": [
      158,
      159
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      164,
      165,
      166
     ]
    },
    "zip": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_scalar": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "f": {
     "line number": [
      185,
      186
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      208
     ]
    },
    "numpy.int16": {
     "line number": [
      205
     ]
    },
    "numpy.int32": {
     "line number": [
      205
     ]
    },
    "numpy.int64": {
     "line number": [
      205
     ]
    },
    "numpy.int8": {
     "line number": [
      205
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      203
     ]
    },
    "numpy.uint16": {
     "line number": [
      206
     ]
    },
    "numpy.uint32": {
     "line number": [
      206
     ]
    },
    "numpy.uint64": {
     "line number": [
      206
     ]
    },
    "numpy.uint8": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.integer_arrays": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanargmax": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "numpy.argmax": {
     "line number": [
      230
     ]
    },
    "numpy.nanargmax": {
     "line number": [
      232
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanargmin": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "numpy.argmin": {
     "line number": [
      225
     ]
    },
    "numpy.nanargmin": {
     "line number": [
      227
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanmax": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "numpy.max": {
     "line number": [
      220
     ]
    },
    "numpy.nanmax": {
     "line number": [
      222
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanmean": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      240
     ]
    },
    "numpy.nanmean": {
     "line number": [
      242
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanmin": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "numpy.min": {
     "line number": [
      215
     ]
    },
    "numpy.nanmin": {
     "line number": [
      217
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanstd": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "numpy.nanstd": {
     "line number": [
      256,
      260
     ]
    },
    "numpy.std": {
     "line number": [
      254,
      258
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      256,
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nansum": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "numpy.nansum": {
     "line number": [
      237
     ]
    },
    "numpy.sum": {
     "line number": [
      235
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanvar": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "numpy.nanvar": {
     "line number": [
      247,
      251
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      247,
      251
     ]
    },
    "numpy.var": {
     "line number": [
      245,
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      375
     ]
    },
    "numpy.nanmean": {
     "line number": [
      374
     ]
    },
    "numpy.nanstd": {
     "line number": [
      374
     ]
    },
    "numpy.nanvar": {
     "line number": [
      374
     ]
    },
    "numpy.std": {
     "line number": [
      375
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      372
     ]
    },
    "numpy.var": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_allnans": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      491,
      495
     ]
    },
    "f": {
     "line number": [
      485,
      489,
      493
     ]
    },
    "issubclass": {
     "line number": [
      491,
      495
     ]
    },
    "len": {
     "line number": [
      490,
      494
     ]
    },
    "numpy.array": {
     "line number": [
      484
     ]
    },
    "numpy.isnan": {
     "line number": [
      489,
      493
     ]
    },
    "numpy.lib.tests.test_nanfunctions.warnings": {
     "line number": [
      487,
      488
     ]
    },
    "numpy.nan": {
     "line number": [
      484,
      493
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      489,
      490,
      491,
      493,
      494,
      495
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_ddof": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      454,
      457
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      457
     ]
    },
    "numpy.lib.tests.test_nanfunctions._rdat": {
     "line number": [
      456
     ]
    },
    "numpy.nanstd": {
     "line number": [
      452
     ]
    },
    "numpy.nanvar": {
     "line number": [
      452
     ]
    },
    "numpy.std": {
     "line number": [
      453
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      458
     ]
    },
    "numpy.var": {
     "line number": [
      453
     ]
    },
    "rf": {
     "line number": [
      454,
      456
     ]
    },
    "zip": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_ddof_too_big": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      473
     ]
    },
    "any": {
     "line number": [
      471
     ]
    },
    "issubclass": {
     "line number": [
      473
     ]
    },
    "len": {
     "line number": [
      463,
      472,
      475
     ]
    },
    "nf": {
     "line number": [
      464,
      469
     ]
    },
    "numpy.isnan": {
     "line number": [
      470
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      469
     ]
    },
    "numpy.lib.tests.test_nanfunctions._rdat": {
     "line number": [
      463
     ]
    },
    "numpy.lib.tests.test_nanfunctions.warnings": {
     "line number": [
      466,
      467
     ]
    },
    "numpy.nanstd": {
     "line number": [
      461
     ]
    },
    "numpy.nanvar": {
     "line number": [
      461
     ]
    },
    "numpy.std": {
     "line number": [
      462
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      472,
      473,
      475
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      470
     ]
    },
    "numpy.var": {
     "line number": [
      462
     ]
    },
    "range": {
     "line number": [
      465
     ]
    },
    "rf": {
     "line number": [
      464
     ]
    },
    "zip": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_dtype_error": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      387
     ]
    },
    "f": {
     "line number": [
      385,
      387
     ]
    },
    "numpy.bool_": {
     "line number": [
      386
     ]
    },
    "numpy.int": {
     "line number": [
      387
     ]
    },
    "numpy.int_": {
     "line number": [
      386
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      387
     ]
    },
    "numpy.object": {
     "line number": [
      386
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_dtype_from_char": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      428,
      431,
      435
     ]
    },
    "numpy.eye": {
     "line number": [
      426
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      432,
      436
     ]
    },
    "rf": {
     "line number": [
      428,
      430,
      434
     ]
    },
    "zip": {
     "line number": [
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_dtype_from_dtype": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      415,
      418,
      422
     ]
    },
    "numpy.dtype": {
     "line number": [
      417,
      418,
      421,
      422
     ]
    },
    "numpy.eye": {
     "line number": [
      413
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      419,
      423
     ]
    },
    "rf": {
     "line number": [
      415,
      417,
      421
     ]
    },
    "zip": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_dtype_from_input": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      440,
      444,
      448
     ]
    },
    "numpy.eye": {
     "line number": [
      442
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      445,
      449
     ]
    },
    "rf": {
     "line number": [
      440,
      443,
      447
     ]
    },
    "zip": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_empty": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      505
     ]
    },
    "f": {
     "line number": [
      499,
      503,
      509
     ]
    },
    "issubclass": {
     "line number": [
      505
     ]
    },
    "len": {
     "line number": [
      504,
      510
     ]
    },
    "numpy.isnan": {
     "line number": [
      503
     ]
    },
    "numpy.lib.tests.test_nanfunctions.warnings": {
     "line number": [
      501,
      502,
      507,
      508
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      503,
      504,
      505,
      510
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      509
     ]
    },
    "numpy.zeros": {
     "line number": [
      498,
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_keepdims": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      397,
      400
     ]
    },
    "numpy.eye": {
     "line number": [
      396
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      401
     ]
    },
    "rf": {
     "line number": [
      397,
      399
     ]
    },
    "zip": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_matrices": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "f": {
     "line number": [
      520,
      521,
      524,
      527
     ]
    },
    "isinstance": {
     "line number": [
      522,
      525
     ]
    },
    "numpy.eye": {
     "line number": [
      519
     ]
    },
    "numpy.isscalar": {
     "line number": [
      528
     ]
    },
    "numpy.matrix": {
     "line number": [
      519,
      522,
      525
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      522,
      523,
      525,
      526,
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_mutation": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "f": {
     "line number": [
      380,
      381
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      379,
      382
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_out": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      405,
      408
     ]
    },
    "numpy.eye": {
     "line number": [
      404
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      409,
      410
     ]
    },
    "numpy.zeros": {
     "line number": [
      406
     ]
    },
    "rf": {
     "line number": [
      405,
      407
     ]
    },
    "zip": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_out_dtype_error": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      393
     ]
    },
    "f": {
     "line number": [
      390,
      393
     ]
    },
    "numpy.bool_": {
     "line number": [
      391
     ]
    },
    "numpy.empty": {
     "line number": [
      392
     ]
    },
    "numpy.int_": {
     "line number": [
      391
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      392,
      393
     ]
    },
    "numpy.object": {
     "line number": [
      391
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_result_values": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      478,
      480
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      480
     ]
    },
    "numpy.lib.tests.test_nanfunctions._rdat": {
     "line number": [
      479
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      481
     ]
    },
    "rf": {
     "line number": [
      478,
      479
     ]
    },
    "zip": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_scalar": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "f": {
     "line number": [
      513,
      514
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.max": {
     "line number": [
      29
     ]
    },
    "numpy.min": {
     "line number": [
      29
     ]
    },
    "numpy.nanmax": {
     "line number": [
      28
     ]
    },
    "numpy.nanmin": {
     "line number": [
      28
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_allnans": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      82,
      88
     ]
    },
    "f": {
     "line number": [
      76,
      80,
      86
     ]
    },
    "issubclass": {
     "line number": [
      82,
      88
     ]
    },
    "len": {
     "line number": [
      81,
      87
     ]
    },
    "numpy.array": {
     "line number": [
      75
     ]
    },
    "numpy.isnan": {
     "line number": [
      80,
      86
     ]
    },
    "numpy.lib.tests.test_nanfunctions.warnings": {
     "line number": [
      78,
      79,
      84,
      85
     ]
    },
    "numpy.nan": {
     "line number": [
      75,
      86
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      80,
      81,
      82,
      86,
      87,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_dtype_from_input": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      57,
      61,
      65
     ]
    },
    "numpy.eye": {
     "line number": [
      59
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      62,
      66
     ]
    },
    "rf": {
     "line number": [
      57,
      60,
      64
     ]
    },
    "zip": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_keepdims": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      43
     ]
    },
    "numpy.eye": {
     "line number": [
      39
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      44
     ]
    },
    "rf": {
     "line number": [
      42
     ]
    },
    "zip": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_masked": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "f": {
     "line number": [
      93,
      94,
      95
     ]
    },
    "numpy.isinf": {
     "line number": [
      98
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      91,
      95
     ]
    },
    "numpy.ma.fix_invalid": {
     "line number": [
      91
     ]
    },
    "numpy.nanmin": {
     "line number": [
      93
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      98
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_matrices": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      134
     ]
    },
    "f": {
     "line number": [
      108,
      109,
      112,
      115,
      119,
      122,
      129,
      138
     ]
    },
    "isinstance": {
     "line number": [
      110,
      113,
      123,
      130
     ]
    },
    "issubclass": {
     "line number": [
      134
     ]
    },
    "len": {
     "line number": [
      125,
      133,
      141
     ]
    },
    "numpy.any": {
     "line number": [
      124
     ]
    },
    "numpy.eye": {
     "line number": [
      107
     ]
    },
    "numpy.isnan": {
     "line number": [
      124,
      131,
      131,
      132
     ]
    },
    "numpy.isscalar": {
     "line number": [
      116,
      139
     ]
    },
    "numpy.lib.tests.test_nanfunctions.warnings": {
     "line number": [
      120,
      121,
      127,
      128,
      136,
      137
     ]
    },
    "numpy.matrix": {
     "line number": [
      107,
      110,
      113,
      123,
      130
     ]
    },
    "numpy.nan": {
     "line number": [
      118,
      140
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      110,
      111,
      113,
      114,
      116,
      123,
      124,
      125,
      130,
      131,
      133,
      134,
      139,
      140,
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_mutation": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "f": {
     "line number": [
      35
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      33,
      36
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_out": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      48,
      51
     ]
    },
    "numpy.eye": {
     "line number": [
      47
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      52,
      53
     ]
    },
    "numpy.zeros": {
     "line number": [
      49
     ]
    },
    "rf": {
     "line number": [
      48,
      50
     ]
    },
    "zip": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_result_values": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "nf": {
     "line number": [
      69,
      71
     ]
    },
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      71
     ]
    },
    "numpy.lib.tests.test_nanfunctions._rdat": {
     "line number": [
      70
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      72
     ]
    },
    "rf": {
     "line number": [
      69,
      70
     ]
    },
    "zip": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_scalar": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "f": {
     "line number": [
      101,
      102
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_allnans": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      334
     ]
    },
    "issubclass": {
     "line number": [
      334
     ]
    },
    "len": {
     "line number": [
      333,
      338,
      341
     ]
    },
    "numpy.isnan": {
     "line number": [
      332,
      337
     ]
    },
    "numpy.lib.tests.test_nanfunctions.warnings": {
     "line number": [
      329,
      330
     ]
    },
    "numpy.nan": {
     "line number": [
      331,
      336
     ]
    },
    "numpy.nansum": {
     "line number": [
      331,
      336,
      340
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      332,
      333,
      334,
      337,
      338,
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_dtype_from_char": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      299
     ]
    },
    "numpy.nansum": {
     "line number": [
      303,
      307
     ]
    },
    "numpy.sum": {
     "line number": [
      302,
      306
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      304,
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_dtype_from_dtype": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      290,
      291,
      294,
      295
     ]
    },
    "numpy.eye": {
     "line number": [
      287
     ]
    },
    "numpy.nansum": {
     "line number": [
      291,
      295
     ]
    },
    "numpy.sum": {
     "line number": [
      290,
      294
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      292,
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_dtype_from_input": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      313
     ]
    },
    "numpy.nansum": {
     "line number": [
      315,
      319
     ]
    },
    "numpy.sum": {
     "line number": [
      314,
      318
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      316,
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_empty": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      345,
      351
     ]
    },
    "numpy.nansum": {
     "line number": [
      346,
      349,
      352
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      347,
      350,
      353
     ]
    },
    "numpy.zeros": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_keepdims": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      272
     ]
    },
    "numpy.nansum": {
     "line number": [
      275
     ]
    },
    "numpy.sum": {
     "line number": [
      274
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_matrices": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      363,
      366
     ]
    },
    "numpy.eye": {
     "line number": [
      361
     ]
    },
    "numpy.isscalar": {
     "line number": [
      369
     ]
    },
    "numpy.matrix": {
     "line number": [
      361,
      363,
      366
     ]
    },
    "numpy.nansum": {
     "line number": [
      362,
      365,
      368
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      363,
      364,
      366,
      367,
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_mutation": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      267,
      269
     ]
    },
    "numpy.nansum": {
     "line number": [
      268
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_out": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      279
     ]
    },
    "numpy.nansum": {
     "line number": [
      282
     ]
    },
    "numpy.sum": {
     "line number": [
      281
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      283,
      284
     ]
    },
    "numpy.zeros": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_result_values": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "numpy.lib.tests.test_nanfunctions._ndat": {
     "line number": [
      324
     ]
    },
    "numpy.lib.tests.test_nanfunctions._rdat": {
     "line number": [
      323
     ]
    },
    "numpy.nansum": {
     "line number": [
      324
     ]
    },
    "numpy.sum": {
     "line number": [
      323
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Sum.test_scalar": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "numpy.nansum": {
     "line number": [
      356
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions._ndat": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_nanfunctions._rdat": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_nanfunctions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      171
     ]
    },
    "run_module_suite": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_polynomial.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.TestDocs": {
  "data": {
   "lineno": 84
  },
  "type": "class"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_complex": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      156,
      158
     ]
    },
    "numpy.poly1d": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_doctests": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "rundocs": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_integ_coeffs": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      163
     ]
    },
    "numpy.poly1d": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_objects": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      145,
      147,
      149,
      150,
      151
     ]
    },
    "decimal.Decimal": {
     "line number": [
      143,
      143,
      143,
      144,
      145,
      147,
      149,
      150
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      151
     ]
    },
    "numpy.object_": {
     "line number": [
      151
     ]
    },
    "numpy.poly1d": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_polyfit": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      113,
      117,
      120,
      124,
      129,
      133,
      136,
      137,
      138,
      139
     ]
    },
    "numpy.arange": {
     "line number": [
      108
     ]
    },
    "numpy.array": {
     "line number": [
      104,
      135
     ]
    },
    "numpy.concatenate": {
     "line number": [
      131,
      132
     ]
    },
    "numpy.linspace": {
     "line number": [
      105
     ]
    },
    "numpy.newaxis": {
     "line number": [
      127,
      128,
      135
     ]
    },
    "numpy.polyfit": {
     "line number": [
      111,
      119,
      129,
      133,
      135
     ]
    },
    "numpy.polyval": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_roots": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      89
     ]
    },
    "numpy.roots": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_str_leading_zeros": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      94,
      101
     ]
    },
    "numpy.poly1d": {
     "line number": [
      92,
      98
     ]
    },
    "str": {
     "line number": [
      94,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_zero_dims": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      168
     ]
    },
    "numpy.poly": {
     "line number": [
      167
     ]
    },
    "numpy.zeros": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      684
     ]
    },
    "numpy.lib.recfunctions.get_names": {
     "line number": [
      12
     ]
    },
    "numpy.lib.recfunctions.get_names_flat": {
     "line number": [
      13
     ]
    },
    "numpy.lib.recfunctions.zip_descr": {
     "line number": [
      14
     ]
    },
    "run_module_suite": {
     "line number": [
      685
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_recfunctions.MaskedRecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.MaskedRecords"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields": {
  "data": {
   "lineno": 342
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.setUp": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "float": {
     "line number": [
      349,
      351
     ]
    },
    "int": {
     "line number": [
      351,
      351
     ]
    },
    "numpy.array": {
     "line number": [
      347,
      348,
      349,
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_double": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "append_fields": {
     "line number": [
      366
     ]
    },
    "assert_equal": {
     "line number": [
      370
     ]
    },
    "int": {
     "line number": [
      369,
      369,
      369
     ]
    },
    "numpy.ma.array": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_on_flex": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "append_fields": {
     "line number": [
      375
     ]
    },
    "assert_equal": {
     "line number": [
      379
     ]
    },
    "float": {
     "line number": [
      378
     ]
    },
    "int": {
     "line number": [
      378
     ]
    },
    "numpy.ma.array": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_on_nested": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "append_fields": {
     "line number": [
      384
     ]
    },
    "assert_equal": {
     "line number": [
      392
     ]
    },
    "float": {
     "line number": [
      390
     ]
    },
    "int": {
     "line number": [
      389,
      390,
      391
     ]
    },
    "numpy.ma.array": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_single": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "append_fields": {
     "line number": [
      357
     ]
    },
    "assert_equal": {
     "line number": [
      361
     ]
    },
    "int": {
     "line number": [
      360,
      360
     ]
    },
    "numpy.ma.array": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy": {
  "data": {
   "lineno": 544
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.setUp": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "int": {
     "line number": [
      548,
      548,
      548,
      551,
      551,
      551
     ]
    },
    "list": {
     "line number": [
      546,
      549
     ]
    },
    "numpy.arange": {
     "line number": [
      546,
      546,
      547,
      549,
      549,
      550
     ]
    },
    "numpy.array": {
     "line number": [
      546,
      549
     ]
    },
    "zip": {
     "line number": [
      546,
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_inner_join": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      563
     ]
    },
    "int": {
     "line number": [
      561,
      561,
      561,
      562,
      562
     ]
    },
    "join_by": {
     "line number": [
      557
     ]
    },
    "numpy.array": {
     "line number": [
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_join": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": {
    "int": {
     "line number": [
      572,
      572,
      573,
      573
     ]
    },
    "join_by": {
     "line number": [
      568
     ]
    },
    "numpy.array": {
     "line number": [
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_leftouter_join": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": {
    "int": {
     "line number": [
      617,
      617,
      617,
      617
     ]
    },
    "join_by": {
     "line number": [
      606
     ]
    },
    "numpy.ma.array": {
     "line number": [
      607
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_outer_join": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      601
     ]
    },
    "int": {
     "line number": [
      599,
      599,
      600,
      600
     ]
    },
    "join_by": {
     "line number": [
      578
     ]
    },
    "numpy.ma.array": {
     "line number": [
      579
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2": {
  "data": {
   "lineno": 620
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.setUp": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      621
     ]
    },
    "int": {
     "line number": [
      625,
      625,
      625,
      628,
      628,
      628
     ]
    },
    "list": {
     "line number": [
      623,
      626
     ]
    },
    "numpy.arange": {
     "line number": [
      623,
      623,
      624,
      626,
      626,
      627
     ]
    },
    "numpy.array": {
     "line number": [
      623,
      626
     ]
    },
    "zip": {
     "line number": [
      623,
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_no_postfix": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      646
     ]
    },
    "join_by": {
     "line number": [
      646
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_no_r1postfix": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      642
     ]
    },
    "int": {
     "line number": [
      640,
      640,
      640,
      641,
      641
     ]
    },
    "join_by": {
     "line number": [
      634
     ]
    },
    "numpy.array": {
     "line number": [
      635
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_no_r2postfix": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      660
     ]
    },
    "int": {
     "line number": [
      658,
      658,
      658,
      659,
      659
     ]
    },
    "join_by": {
     "line number": [
      652
     ]
    },
    "numpy.array": {
     "line number": [
      653
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_two_keys_two_vars": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      679,
      680
     ]
    },
    "int": {
     "line number": [
      665,
      665,
      665,
      665,
      669,
      669,
      669,
      669,
      676,
      676,
      676,
      677,
      677,
      677
     ]
    },
    "join_by": {
     "line number": [
      678
     ]
    },
    "list": {
     "line number": [
      663,
      667
     ]
    },
    "numpy.arange": {
     "line number": [
      663,
      664,
      664,
      667,
      668,
      668
     ]
    },
    "numpy.array": {
     "line number": [
      663,
      667,
      671
     ]
    },
    "numpy.repeat": {
     "line number": [
      663,
      667
     ]
    },
    "numpy.tile": {
     "line number": [
      663,
      667
     ]
    },
    "zip": {
     "line number": [
      663,
      667
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays": {
  "data": {
   "lineno": 218
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.setUp": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "float": {
     "line number": [
      225,
      227
     ]
    },
    "int": {
     "line number": [
      227,
      227
     ]
    },
    "numpy.array": {
     "line number": [
      223,
      224,
      225,
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_flatten": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      278,
      284
     ]
    },
    "float": {
     "line number": [
      277,
      283
     ]
    },
    "int": {
     "line number": [
      277,
      282
     ]
    },
    "merge_arrays": {
     "line number": [
      275,
      280
     ]
    },
    "numpy.array": {
     "line number": [
      276,
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_flatten_wflexible": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      293
     ]
    },
    "float": {
     "line number": [
      292,
      298
     ]
    },
    "int": {
     "line number": [
      291,
      292,
      292,
      296,
      297,
      298
     ]
    },
    "merge_arrays": {
     "line number": [
      289,
      295
     ]
    },
    "numpy.array": {
     "line number": [
      290,
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_singlerecord": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      338
     ]
    },
    "float": {
     "line number": [
      337
     ]
    },
    "int": {
     "line number": [
      335,
      336
     ]
    },
    "merge_arrays": {
     "line number": [
      333
     ]
    },
    "numpy.array": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_solo": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      236,
      238,
      241,
      243
     ]
    },
    "int": {
     "line number": [
      235
     ]
    },
    "merge_arrays": {
     "line number": [
      234,
      237,
      240,
      242
     ]
    },
    "numpy.array": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_solo_w_flatten": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      249,
      254
     ]
    },
    "float": {
     "line number": [
      253
     ]
    },
    "int": {
     "line number": [
      253,
      253
     ]
    },
    "merge_arrays": {
     "line number": [
      248,
      251
     ]
    },
    "numpy.array": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_standard": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      263,
      269,
      270
     ]
    },
    "int": {
     "line number": [
      262,
      262,
      268,
      268
     ]
    },
    "merge_arrays": {
     "line number": [
      260,
      265
     ]
    },
    "numpy.array": {
     "line number": [
      261
     ]
    },
    "numpy.ma.array": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_w_shorter_flex": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "float": {
     "line number": [
      329
     ]
    },
    "int": {
     "line number": [
      327,
      329
     ]
    },
    "merge_arrays": {
     "line number": [
      327
     ]
    },
    "numpy.array": {
     "line number": [
      327,
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_w_singlefield": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      322
     ]
    },
    "float": {
     "line number": [
      321
     ]
    },
    "int": {
     "line number": [
      317,
      321
     ]
    },
    "merge_arrays": {
     "line number": [
      317
     ]
    },
    "numpy.array": {
     "line number": [
      317,
      318
     ]
    },
    "numpy.ma.array": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_wmasked_arrays": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      313
     ]
    },
    "assert_equal": {
     "line number": [
      310,
      312
     ]
    },
    "int": {
     "line number": [
      309,
      309
     ]
    },
    "isinstance": {
     "line number": [
      313
     ]
    },
    "merge_arrays": {
     "line number": [
      306,
      311
     ]
    },
    "numpy.ma.array": {
     "line number": [
      305,
      307
     ]
    },
    "numpy.ma.mrecords.MaskedRecords": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.setUp": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "float": {
     "line number": [
      25,
      27
     ]
    },
    "int": {
     "line number": [
      27,
      27
     ]
    },
    "numpy.array": {
     "line number": [
      22,
      23,
      24,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_drop_fields": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      86
     ]
    },
    "assert_equal": {
     "line number": [
      70,
      74,
      79,
      83
     ]
    },
    "drop_fields": {
     "line number": [
      67,
      72,
      76,
      81,
      85
     ]
    },
    "float": {
     "line number": [
      65,
      69
     ]
    },
    "int": {
     "line number": [
      65,
      65,
      69,
      73,
      78,
      78,
      82
     ]
    },
    "numpy.array": {
     "line number": [
      64,
      68,
      73,
      77,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_find_duplicates": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      152,
      153,
      157,
      158,
      162,
      163,
      167,
      168,
      172,
      173
     ]
    },
    "find_duplicates": {
     "line number": [
      150,
      155,
      160,
      165,
      170
     ]
    },
    "float": {
     "line number": [
      148
     ]
    },
    "int": {
     "line number": [
      148
     ]
    },
    "numpy.ma.array": {
     "line number": [
      144
     ]
    },
    "sorted": {
     "line number": [
      152,
      157,
      162,
      167,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_find_duplicates_ignoremask": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      182,
      183,
      187,
      188
     ]
    },
    "find_duplicates": {
     "line number": [
      180,
      185
     ]
    },
    "int": {
     "line number": [
      177
     ]
    },
    "numpy.ma.array": {
     "line number": [
      178
     ]
    },
    "sorted": {
     "line number": [
      182,
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_fieldstructure": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      128,
      132,
      140
     ]
    },
    "float": {
     "line number": [
      126,
      130
     ]
    },
    "get_fieldstructure": {
     "line number": [
      127,
      131,
      137
     ]
    },
    "int": {
     "line number": [
      130,
      134,
      135,
      136,
      136
     ]
    },
    "numpy.dtype": {
     "line number": [
      126,
      130,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_names": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      105,
      109
     ]
    },
    "float": {
     "line number": [
      103,
      107
     ]
    },
    "int": {
     "line number": [
      107,
      107
     ]
    },
    "numpy.dtype": {
     "line number": [
      103,
      107
     ]
    },
    "numpy.lib.tests.test_recfunctions.get_names": {
     "line number": [
      104,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_names_flat": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      116,
      120
     ]
    },
    "float": {
     "line number": [
      114,
      118
     ]
    },
    "int": {
     "line number": [
      118,
      118
     ]
    },
    "numpy.dtype": {
     "line number": [
      114,
      118
     ]
    },
    "numpy.lib.tests.test_recfunctions.get_names_flat": {
     "line number": [
      115,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_rename_fields": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      97,
      98
     ]
    },
    "float": {
     "line number": [
      93,
      93,
      95,
      95
     ]
    },
    "int": {
     "line number": [
      92,
      95
     ]
    },
    "numpy.array": {
     "line number": [
      91
     ]
    },
    "rename_fields": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_zip_descr": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      36,
      39,
      43,
      46,
      51,
      56
     ]
    },
    "float": {
     "line number": [
      44,
      48,
      54,
      59
     ]
    },
    "int": {
     "line number": [
      37,
      37,
      40,
      40,
      44,
      47,
      52,
      53,
      54,
      57,
      58,
      59
     ]
    },
    "numpy.dtype": {
     "line number": [
      37,
      40,
      44,
      47,
      52,
      57
     ]
    },
    "numpy.lib.tests.test_recfunctions.zip_descr": {
     "line number": [
      35,
      38,
      42,
      45,
      50,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields": {
  "data": {
   "lineno": 191
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields.test_masked_flexible": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      213
     ]
    },
    "float": {
     "line number": [
      207,
      212
     ]
    },
    "int": {
     "line number": [
      207,
      212
     ]
    },
    "numpy.ma.array": {
     "line number": [
      206,
      210
     ]
    },
    "numpy.ma.zeros": {
     "line number": [
      208
     ]
    },
    "recursive_fill_fields": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields.test_simple_flexible": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      202
     ]
    },
    "float": {
     "line number": [
      197,
      201
     ]
    },
    "int": {
     "line number": [
      197,
      201
     ]
    },
    "numpy.array": {
     "line number": [
      197,
      200
     ]
    },
    "numpy.zeros": {
     "line number": [
      198
     ]
    },
    "recursive_fill_fields": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays": {
  "data": {
   "lineno": 396
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.setUp": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "float": {
     "line number": [
      403,
      405
     ]
    },
    "int": {
     "line number": [
      405,
      405
     ]
    },
    "numpy.array": {
     "line number": [
      401,
      402,
      403,
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_autoconversion": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      528
     ]
    },
    "TypeError": {
     "line number": [
      525
     ]
    },
    "assert_equal": {
     "line number": [
      521,
      522
     ]
    },
    "bool": {
     "line number": [
      514
     ]
    },
    "float": {
     "line number": [
      514,
      516,
      516
     ]
    },
    "int": {
     "line number": [
      514,
      516
     ]
    },
    "numpy.ma.array": {
     "line number": [
      515,
      517,
      518
     ]
    },
    "stack_arrays": {
     "line number": [
      520,
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_checktitles": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      540,
      541
     ]
    },
    "bool": {
     "line number": [
      533,
      535
     ]
    },
    "float": {
     "line number": [
      533,
      535
     ]
    },
    "int": {
     "line number": [
      533,
      535
     ]
    },
    "numpy.ma.array": {
     "line number": [
      534,
      536,
      538
     ]
    },
    "stack_arrays": {
     "line number": [
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_defaults": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      507,
      508,
      509
     ]
    },
    "float": {
     "line number": [
      499,
      499,
      504,
      504
     ]
    },
    "numpy.array": {
     "line number": [
      498
     ]
    },
    "numpy.ma.array": {
     "line number": [
      502
     ]
    },
    "stack_arrays": {
     "line number": [
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_matching_named_fields": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      478,
      479,
      491,
      492
     ]
    },
    "float": {
     "line number": [
      471,
      471,
      475,
      475,
      482,
      482
     ]
    },
    "int": {
     "line number": [
      482
     ]
    },
    "numpy.array": {
     "line number": [
      470
     ]
    },
    "numpy.ma.array": {
     "line number": [
      473,
      483
     ]
    },
    "stack_arrays": {
     "line number": [
      472,
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_solo": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      412,
      416
     ]
    },
    "stack_arrays": {
     "line number": [
      411,
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_unnamed_and_named_fields": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      445,
      446,
      454,
      455,
      465
     ]
    },
    "float": {
     "line number": [
      444,
      453,
      464
     ]
    },
    "int": {
     "line number": [
      444,
      453,
      464
     ]
    },
    "numpy.ma.array": {
     "line number": [
      440,
      449,
      458
     ]
    },
    "stack_arrays": {
     "line number": [
      439,
      448,
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_unnamed_fields": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      425,
      429,
      433
     ]
    },
    "numpy.array": {
     "line number": [
      424,
      428,
      432
     ]
    },
    "stack_arrays": {
     "line number": [
      423,
      427,
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.get_names": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_recfunctions.get_names_flat": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_recfunctions.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.zip_descr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      255
     ]
    },
    "run_module_suite": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_regression.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_append_fields_dtype_list": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      205
     ]
    },
    "numpy.array": {
     "line number": [
      198
     ]
    },
    "numpy.eye": {
     "line number": [
      199
     ]
    },
    "numpy.float64": {
     "line number": [
      201
     ]
    },
    "numpy.int32": {
     "line number": [
      198,
      199,
      201,
      201
     ]
    },
    "numpy.lib.recfunctions.append_fields": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_asfarray_none": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      139
     ]
    },
    "numpy.array": {
     "line number": [
      139
     ]
    },
    "numpy.asfarray": {
     "line number": [
      139
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      137
     ]
    },
    "numpy.nan": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_cov_parameters": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      25
     ]
    },
    "numpy.cov": {
     "line number": [
      23,
      24
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      19
     ]
    },
    "numpy.random.random": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_histogramdd_too_many_bins": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      121
     ]
    },
    "assert_raises": {
     "line number": [
      121
     ]
    },
    "numpy.histogramdd": {
     "line number": [
      121
     ]
    },
    "numpy.ones": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_include_dirs": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      184,
      185
     ]
    },
    "isinstance": {
     "line number": [
      184
     ]
    },
    "numpy.compat.unicode": {
     "line number": [
      184
     ]
    },
    "numpy.get_include": {
     "line number": [
      182
     ]
    },
    "numpy.get_numarray_include": {
     "line number": [
      182
     ]
    },
    "str": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      155,
      156
     ]
    },
    "int": {
     "line number": [
      144
     ]
    },
    "numpy.dtype": {
     "line number": [
      143
     ]
    },
    "numpy.intp": {
     "line number": [
      143
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing.dp": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "numpy.ix_": {
     "line number": [
      149
     ]
    },
    "numpy.ones": {
     "line number": [
      147
     ]
    },
    "numpy.random.randint": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing.dp2": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "numpy.ix_": {
     "line number": [
      154
     ]
    },
    "numpy.ones": {
     "line number": [
      152
     ]
    },
    "numpy.random.randint": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_loadtxt_fields_subarrays": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "StringIO.StringIO": {
     "line number": [
      215,
      219,
      223,
      227
     ]
    },
    "assert_equal": {
     "line number": [
      216,
      220,
      224,
      229
     ]
    },
    "numpy.array": {
     "line number": [
      216,
      220,
      224,
      229
     ]
    },
    "numpy.lib.tests.test_regression.sys": {
     "line number": [
      209
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      215,
      219,
      223,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_digitize": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.digitize": {
     "line number": [
      30,
      31
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      27
     ]
    },
    "range": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_insert": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.lib.place": {
     "line number": [
      84
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_polymul": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      59
     ]
    },
    "numpy.polymul": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_string_concat": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.append": {
     "line number": [
      66
     ]
    },
    "numpy.array": {
     "line number": [
      65
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_vectorise": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      37
     ]
    },
    "numpy.vectorize": {
     "line number": [
      39
     ]
    },
    "numpy.zeros": {
     "line number": [
      40,
      40,
      40,
      41,
      41,
      41,
      41
     ]
    },
    "vt": {
     "line number": [
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mgrid_single_element": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      45,
      46
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      43
     ]
    },
    "numpy.mgrid": {
     "line number": [
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_nansum_with_boolean": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      237
     ]
    },
    "numpy.bool": {
     "line number": [
      233
     ]
    },
    "numpy.nansum": {
     "line number": [
      235
     ]
    },
    "numpy.zeros": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_ndenumerate_crash": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "list": {
     "line number": [
      135
     ]
    },
    "numpy.array": {
     "line number": [
      135
     ]
    },
    "numpy.ndenumerate": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly1d": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      16
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      14
     ]
    },
    "numpy.poly1d": {
     "line number": [
      16,
      16,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly1d_nan_roots": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      57
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      54
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      57
     ]
    },
    "numpy.nan": {
     "line number": [
      56,
      56
     ]
    },
    "numpy.poly1d": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly_div": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      73
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      68
     ]
    },
    "numpy.poly1d": {
     "line number": [
      70,
      71
     ]
    },
    "numpy.polydiv": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly_eq": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      79,
      80
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      75
     ]
    },
    "numpy.poly1d": {
     "line number": [
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyder_return_type": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      189,
      190,
      191,
      192
     ]
    },
    "isinstance": {
     "line number": [
      189,
      190,
      191,
      192
     ]
    },
    "numpy.ndarray": {
     "line number": [
      190,
      192
     ]
    },
    "numpy.poly1d": {
     "line number": [
      189,
      189,
      191,
      191
     ]
    },
    "numpy.polyder": {
     "line number": [
      189,
      190,
      191,
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polydiv_type": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      113,
      117
     ]
    },
    "numpy.complex": {
     "line number": [
      111,
      113
     ]
    },
    "numpy.float": {
     "line number": [
      117
     ]
    },
    "numpy.int": {
     "line number": [
      115
     ]
    },
    "numpy.ones": {
     "line number": [
      111,
      115
     ]
    },
    "numpy.polydiv": {
     "line number": [
      112,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyfit_build": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      105
     ]
    },
    "numpy.polyfit": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyint_type": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      127,
      130
     ]
    },
    "numpy.complex": {
     "line number": [
      126,
      127
     ]
    },
    "numpy.float": {
     "line number": [
      130
     ]
    },
    "numpy.int": {
     "line number": [
      129
     ]
    },
    "numpy.ones": {
     "line number": [
      126,
      129
     ]
    },
    "numpy.polyint": {
     "line number": [
      127,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_py3_compat": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      250
     ]
    },
    "AttributeError": {
     "line number": [
      249
     ]
    },
    "C": {
     "line number": [
      248
     ]
    },
    "numpy.info": {
     "line number": [
      248
     ]
    },
    "numpy.lib.tests.test_regression.os": {
     "line number": [
      246
     ]
    },
    "open": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_py3_compat.C": {
  "data": {
   "lineno": 242
  },
  "type": "class"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_refcount_vectorize": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      48
     ]
    },
    "numpy.testing.utils._assert_valid_refcount": {
     "line number": [
      52
     ]
    },
    "numpy.vectorize": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_refcount_vectorize.p": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_unique_zero_sized": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      35
     ]
    },
    "numpy.array": {
     "line number": [
      35
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      33
     ]
    },
    "numpy.unique": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_void_coercion": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      161
     ]
    },
    "numpy.dtype": {
     "line number": [
      159
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      158
     ]
    },
    "numpy.r_.dtype": {
     "line number": [
      161
     ]
    },
    "numpy.zeros": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_who_with_0dim_array": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      173
     ]
    },
    "numpy.array": {
     "line number": [
      171
     ]
    },
    "numpy.lib.tests.test_regression.os": {
     "line number": [
      168
     ]
    },
    "numpy.lib.tests.test_regression.rlevel": {
     "line number": [
      163
     ]
    },
    "numpy.lib.tests.test_regression.sys": {
     "line number": [
      167,
      168,
      175,
      176
     ]
    },
    "numpy.who": {
     "line number": [
      171
     ]
    },
    "open": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression._assert_valid_refcount": {
  "data": {
   "shadows": "numpy.testing.utils._assert_valid_refcount"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.append_fields": {
  "data": {
   "shadows": "numpy.lib.recfunctions.append_fields"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.rlevel": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_regression.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.unicode": {
  "data": {
   "shadows": "numpy.compat.unicode"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      227
     ]
    },
    "run_module_suite": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_stride_tricks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.assert_incompatible_shapes_raise": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      24
     ]
    },
    "assert_raises": {
     "line number": [
      24
     ]
    },
    "numpy.lib.stride_tricks.broadcast_arrays": {
     "line number": [
      24
     ]
    },
    "numpy.zeros": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.assert_same_as_ufunc": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      45
     ]
    },
    "int": {
     "line number": [
      30,
      33
     ]
    },
    "numpy.arange": {
     "line number": [
      34
     ]
    },
    "numpy.lib.stride_tricks.broadcast_arrays": {
     "line number": [
      44
     ]
    },
    "numpy.multiply.reduce": {
     "line number": [
      33
     ]
    },
    "numpy.zeros": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.assert_shapes_correct": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      17
     ]
    },
    "len": {
     "line number": [
      16
     ]
    },
    "numpy.lib.stride_tricks.broadcast_arrays": {
     "line number": [
      14
     ]
    },
    "numpy.zeros": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.broadcast_arrays": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.broadcast_arrays"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.test_as_strided": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      214,
      219,
      224
     ]
    },
    "numpy.array": {
     "line number": [
      211,
      213,
      214,
      216,
      218,
      221,
      223
     ]
    },
    "numpy.lib.stride_tricks.as_strided": {
     "line number": [
      212,
      217,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_incompatible_shapes_raise_valueerror": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "numpy.lib.tests.test_stride_tricks.assert_incompatible_shapes_raise": {
     "line number": [
      155,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_one_off": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      61,
      62
     ]
    },
    "numpy.array": {
     "line number": [
      56,
      57,
      59
     ]
    },
    "numpy.lib.stride_tricks.broadcast_arrays": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      52,
      53
     ]
    },
    "numpy.arange": {
     "line number": [
      49,
      50
     ]
    },
    "numpy.lib.stride_tricks.broadcast_arrays": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same_as_ufunc": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "numpy.lib.tests.test_stride_tricks.assert_same_as_ufunc": {
     "line number": [
      198,
      201,
      203,
      207,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same_input_shapes": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "numpy.lib.tests.test_stride_tricks.assert_shapes_correct": {
     "line number": [
      82,
      85,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_two_compatible_by_ones_input_shapes": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "numpy.lib.tests.test_stride_tricks.assert_shapes_correct": {
     "line number": [
      110,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_two_compatible_by_prepending_ones_input_shapes": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "numpy.lib.tests.test_stride_tricks.assert_shapes_correct": {
     "line number": [
      141,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      341
     ]
    },
    "run_module_suite": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag": {
  "data": {
   "lineno": 76
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_diag_bounds": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      112,
      113,
      114,
      115,
      116,
      117
     ]
    },
    "numpy.diag": {
     "line number": [
      112,
      113,
      114,
      115,
      116,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_failure": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      120
     ]
    },
    "numpy.diag": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_fortran_order": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      107
     ]
    },
    "numpy.lib.tests.test_twodim_base.get_mat": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_matrix": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      97,
      101,
      104
     ]
    },
    "numpy.diag": {
     "line number": [
      97,
      101,
      104
     ]
    },
    "numpy.lib.tests.test_twodim_base.get_mat": {
     "line number": [
      93
     ]
    },
    "numpy.zeros": {
     "line number": [
      94
     ]
    },
    "range": {
     "line number": [
      95,
      99,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_vector": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      82,
      88,
      89
     ]
    },
    "numpy.arange": {
     "line number": [
      78
     ]
    },
    "numpy.diag": {
     "line number": [
      82,
      88,
      89
     ]
    },
    "numpy.zeros": {
     "line number": [
      79,
      83
     ]
    },
    "range": {
     "line number": [
      80,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_2d": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      42,
      46
     ]
    },
    "numpy.array": {
     "line number": [
      42,
      46
     ]
    },
    "numpy.eye": {
     "line number": [
      42,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_basic": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      22,
      26,
      30
     ]
    },
    "bool": {
     "line number": [
      30
     ]
    },
    "numpy.array": {
     "line number": [
      22,
      26
     ]
    },
    "numpy.eye": {
     "line number": [
      22,
      26,
      30,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_bool": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      74
     ]
    },
    "bool": {
     "line number": [
      74
     ]
    },
    "numpy.eye": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_diag": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      33,
      37
     ]
    },
    "numpy.array": {
     "line number": [
      33,
      37
     ]
    },
    "numpy.eye": {
     "line number": [
      33,
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_diag2d": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      50,
      53
     ]
    },
    "numpy.array": {
     "line number": [
      50,
      53
     ]
    },
    "numpy.eye": {
     "line number": [
      50,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_eye_bounds": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67
     ]
    },
    "numpy.eye": {
     "line number": [
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_strings": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      70
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      71
     ]
    },
    "numpy.eye": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestFliplr": {
  "data": {
   "lineno": 122
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestFliplr.test_basic": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      124
     ]
    },
    "assert_equal": {
     "line number": [
      127,
      132
     ]
    },
    "numpy.fliplr": {
     "line number": [
      124,
      127,
      132
     ]
    },
    "numpy.lib.tests.test_twodim_base.get_mat": {
     "line number": [
      125
     ]
    },
    "numpy.ones": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestFlipud": {
  "data": {
   "lineno": 134
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestFlipud.test_basic": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      138,
      143
     ]
    },
    "numpy.flipud": {
     "line number": [
      138,
      143
     ]
    },
    "numpy.lib.tests.test_twodim_base.get_mat": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d": {
  "data": {
   "lineno": 175
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_all_outliers": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      224
     ]
    },
    "numpy.histogram2d": {
     "line number": [
      223
     ]
    },
    "rand": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_asym": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      209
     ]
    },
    "assert_array_equal": {
     "line number": [
      210,
      211
     ]
    },
    "numpy.array": {
     "line number": [
      200,
      201,
      203
     ]
    },
    "numpy.histogram2d": {
     "line number": [
      202
     ]
    },
    "numpy.linspace": {
     "line number": [
      210,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_empty": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "assert_array_max_ulp": {
     "line number": [
      228,
      231
     ]
    },
    "numpy.array": {
     "line number": [
      228
     ]
    },
    "numpy.histogram2d": {
     "line number": [
      227,
      230
     ]
    },
    "numpy.zeros": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_norm": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      219
     ]
    },
    "numpy.array": {
     "line number": [
      213,
      214,
      216
     ]
    },
    "numpy.histogram2d": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_simple": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      191,
      193,
      195,
      196,
      197
     ]
    },
    "list": {
     "line number": [
      194,
      194
     ]
    },
    "numpy.array": {
     "line number": [
      177,
      178,
      182
     ]
    },
    "numpy.eye": {
     "line number": [
      195
     ]
    },
    "numpy.histogram2d": {
     "line number": [
      181,
      192,
      194
     ]
    },
    "numpy.linspace": {
     "line number": [
      179,
      180,
      196,
      197
     ]
    },
    "range": {
     "line number": [
      194,
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestRot90": {
  "data": {
   "lineno": 145
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestRot90.test_axes": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      173
     ]
    },
    "numpy.ones": {
     "line number": [
      172
     ]
    },
    "numpy.rot90": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestRot90.test_basic": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      147
     ]
    },
    "assert_equal": {
     "line number": [
      163,
      165,
      167,
      169
     ]
    },
    "numpy.ones": {
     "line number": [
      147
     ]
    },
    "numpy.rot90": {
     "line number": [
      147,
      163,
      165,
      167,
      169
     ]
    },
    "range": {
     "line number": [
      162,
      164,
      166,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTri": {
  "data": {
   "lineno": 234
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTri.test_dtype": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      239,
      240
     ]
    },
    "bool": {
     "line number": [
      240,
      240
     ]
    },
    "numpy.array": {
     "line number": [
      236
     ]
    },
    "numpy.tri": {
     "line number": [
      239,
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTrilIndicesFrom": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "object": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTrilIndicesFrom.test_exceptions": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      329,
      330,
      331
     ]
    },
    "assert_raises": {
     "line number": [
      329,
      330,
      331
     ]
    },
    "numpy.ones": {
     "line number": [
      329,
      330,
      331
     ]
    },
    "numpy.tril_indices_from": {
     "line number": [
      329,
      330,
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndices": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "object": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndices.test_triu_indices": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      307,
      312,
      320
     ]
    },
    "numpy.array": {
     "line number": [
      301,
      308,
      313,
      321
     ]
    },
    "numpy.triu_indices": {
     "line number": [
      298,
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndicesFrom": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "object": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndicesFrom.test_exceptions": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      336,
      337,
      338
     ]
    },
    "assert_raises": {
     "line number": [
      336,
      337,
      338
     ]
    },
    "numpy.ones": {
     "line number": [
      336,
      337,
      338
     ]
    },
    "numpy.triu_indices_from": {
     "line number": [
      336,
      337,
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.add": {
  "data": {
   "shadows": "numpy.add"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.asbytes_nested": {
  "data": {
   "shadows": "numpy.compat.asbytes_nested"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.diag": {
  "data": {
   "shadows": "numpy.diag"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.eye": {
  "data": {
   "shadows": "numpy.eye"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.fliplr": {
  "data": {
   "shadows": "numpy.fliplr"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.flipud": {
  "data": {
   "shadows": "numpy.flipud"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.get_mat": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.add.outer": {
     "line number": [
      17
     ]
    },
    "numpy.arange": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.histogram2d": {
  "data": {
   "shadows": "numpy.histogram2d"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.mask_indices": {
  "data": {
   "shadows": "numpy.mask_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.rot90": {
  "data": {
   "shadows": "numpy.rot90"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.test_mask_indices": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      259,
      262
     ]
    },
    "numpy.arange": {
     "line number": [
      258
     ]
    },
    "numpy.array": {
     "line number": [
      259,
      262
     ]
    },
    "numpy.mask_indices": {
     "line number": [
      257,
      261
     ]
    },
    "numpy.triu": {
     "line number": [
      257,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_indices": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      276,
      281,
      289
     ]
    },
    "numpy.array": {
     "line number": [
      270,
      277,
      282,
      290
     ]
    },
    "numpy.tril_indices": {
     "line number": [
      267,
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_triu": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      248,
      249
     ]
    },
    "assert_equal": {
     "line number": [
      251,
      252
     ]
    },
    "numpy.ones": {
     "line number": [
      245
     ]
    },
    "numpy.tril": {
     "line number": [
      246
     ]
    },
    "numpy.triu": {
     "line number": [
      247
     ]
    },
    "numpy.typecodes": {
     "line number": [
      244,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.tri": {
  "data": {
   "shadows": "numpy.tri"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.tril_indices": {
  "data": {
   "shadows": "numpy.tril_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.tril_indices_from": {
  "data": {
   "shadows": "numpy.tril_indices_from"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.triu_indices": {
  "data": {
   "shadows": "numpy.triu_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.triu_indices_from": {
  "data": {
   "shadows": "numpy.triu_indices_from"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      13
     ]
    },
    "__name__": {
     "line number": [
      336
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_type_check.TestArrayConversion": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestArrayConversion.test_asfarray": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "array": {
     "line number": [
      332
     ]
    },
    "asfarray": {
     "line number": [
      332
     ]
    },
    "float": {
     "line number": [
      334
     ]
    },
    "issubdtype": {
     "line number": [
      334
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      334
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.TestCommonType": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestCommonType.test_basic": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "array": {
     "line number": [
      23,
      24,
      25,
      26,
      27
     ]
    },
    "common_type": {
     "line number": [
      28,
      29,
      30,
      31
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      28,
      29,
      30,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestImag": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestImag.test_cmplx": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "imag": {
     "line number": [
      115
     ]
    },
    "numpy.random.rand": {
     "line number": [
      114,
      114
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestImag.test_real": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "imag": {
     "line number": [
      111
     ]
    },
    "numpy.random.rand": {
     "line number": [
      110
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplex": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplex.test_fail": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "array": {
     "line number": [
      121
     ]
    },
    "iscomplex": {
     "line number": [
      122
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      123
     ]
    },
    "sometrue": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplex.test_pass": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "array": {
     "line number": [
      125
     ]
    },
    "iscomplex": {
     "line number": [
      126
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_basic": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "array": {
     "line number": [
      145,
      147
     ]
    },
    "iscomplexobj": {
     "line number": [
      146,
      148
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      146,
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_complex": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "isfinite": {
     "line number": [
      219
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_complex1": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "array": {
     "line number": [
      223
     ]
    },
    "errstate": {
     "line number": [
      222
     ]
    },
    "isfinite": {
     "line number": [
      223
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_goodvalues": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "alltrue": {
     "line number": [
      198
     ]
    },
    "array": {
     "line number": [
      196
     ]
    },
    "isfinite": {
     "line number": [
      197
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_ind": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "array": {
     "line number": [
      210
     ]
    },
    "errstate": {
     "line number": [
      209
     ]
    },
    "isfinite": {
     "line number": [
      210
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_integer": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "isfinite": {
     "line number": [
      216
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_neginf": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "array": {
     "line number": [
      206
     ]
    },
    "errstate": {
     "line number": [
      205
     ]
    },
    "isfinite": {
     "line number": [
      206
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_posinf": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "array": {
     "line number": [
      202
     ]
    },
    "errstate": {
     "line number": [
      201
     ]
    },
    "isfinite": {
     "line number": [
      202
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_goodvalues": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "alltrue": {
     "line number": [
      231
     ]
    },
    "array": {
     "line number": [
      229
     ]
    },
    "isinf": {
     "line number": [
      230
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_ind": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "array": {
     "line number": [
      251
     ]
    },
    "errstate": {
     "line number": [
      250
     ]
    },
    "isinf": {
     "line number": [
      251
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_neginf": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "array": {
     "line number": [
      243
     ]
    },
    "errstate": {
     "line number": [
      242
     ]
    },
    "isinf": {
     "line number": [
      243
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_neginf_scalar": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "array": {
     "line number": [
      247
     ]
    },
    "errstate": {
     "line number": [
      246
     ]
    },
    "isinf": {
     "line number": [
      247
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_posinf": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "array": {
     "line number": [
      235
     ]
    },
    "errstate": {
     "line number": [
      234
     ]
    },
    "isinf": {
     "line number": [
      235
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_posinf_scalar": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "array": {
     "line number": [
      239
     ]
    },
    "errstate": {
     "line number": [
      238
     ]
    },
    "isinf": {
     "line number": [
      239
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_complex": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "isnan": {
     "line number": [
      186
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_complex1": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "array": {
     "line number": [
      190
     ]
    },
    "errstate": {
     "line number": [
      189
     ]
    },
    "isnan": {
     "line number": [
      190
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_goodvalues": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "alltrue": {
     "line number": [
      165
     ]
    },
    "array": {
     "line number": [
      163
     ]
    },
    "isnan": {
     "line number": [
      164
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_ind": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "array": {
     "line number": [
      177
     ]
    },
    "errstate": {
     "line number": [
      176
     ]
    },
    "isnan": {
     "line number": [
      177
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_integer": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "isnan": {
     "line number": [
      183
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_neginf": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "array": {
     "line number": [
      173
     ]
    },
    "errstate": {
     "line number": [
      172
     ]
    },
    "isnan": {
     "line number": [
      173
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_posinf": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "array": {
     "line number": [
      169
     ]
    },
    "errstate": {
     "line number": [
      168
     ]
    },
    "isnan": {
     "line number": [
      169
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsneginf": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsneginf.test_generic": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "array": {
     "line number": [
      272
     ]
    },
    "errstate": {
     "line number": [
      271
     ]
    },
    "isneginf": {
     "line number": [
      272
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      273,
      274,
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsposinf": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsposinf.test_generic": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "array": {
     "line number": [
      262
     ]
    },
    "errstate": {
     "line number": [
      261
     ]
    },
    "isposinf": {
     "line number": [
      262
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      263,
      264,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsreal": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsreal.test_fail": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "array": {
     "line number": [
      137
     ]
    },
    "isreal": {
     "line number": [
      138
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsreal.test_pass": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "array": {
     "line number": [
      133
     ]
    },
    "isreal": {
     "line number": [
      134
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsrealobj": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsrealobj.test_basic": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "array": {
     "line number": [
      154,
      156
     ]
    },
    "isrealobj": {
     "line number": [
      155,
      157
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      155,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsscalar": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsscalar.test_basic": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "isscalar": {
     "line number": [
      88,
      89,
      90,
      91,
      92,
      93
     ]
    },
    "numpy.compat.long": {
     "line number": [
      92
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      88,
      89,
      90,
      91,
      92,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode.test_default_1": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "mintypecode": {
     "line number": [
      39,
      40,
      41,
      42,
      43
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      39,
      40,
      41,
      42,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode.test_default_2": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "mintypecode": {
     "line number": [
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      58,
      59,
      60,
      62,
      63,
      64,
      65,
      66,
      67,
      68
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      58,
      59,
      60,
      62,
      63,
      64,
      65,
      66,
      67,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode.test_default_3": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "mintypecode": {
     "line number": [
      71,
      73,
      74,
      75,
      77,
      78,
      79,
      80,
      82
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      71,
      73,
      74,
      75,
      77,
      78,
      79,
      80,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_complex_bad": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "array": {
     "line number": [
      298
     ]
    },
    "errstate": {
     "line number": [
      296
     ]
    },
    "isfinite": {
     "line number": [
      301
     ]
    },
    "nan_to_num": {
     "line number": [
      299
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_complex_bad2": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "array": {
     "line number": [
      306
     ]
    },
    "errstate": {
     "line number": [
      304
     ]
    },
    "isfinite": {
     "line number": [
      308
     ]
    },
    "nan_to_num": {
     "line number": [
      307
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_complex_good": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "nan_to_num": {
     "line number": [
      292
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_generic": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "array": {
     "line number": [
      282
     ]
    },
    "errstate": {
     "line number": [
      281
     ]
    },
    "isfinite": {
     "line number": [
      283,
      285
     ]
    },
    "nan_to_num": {
     "line number": [
      282
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      283,
      283,
      285,
      285
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_integer": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "nan_to_num": {
     "line number": [
      288
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestReal": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestReal.test_cmplx": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "numpy.random.rand": {
     "line number": [
      103,
      103
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      104
     ]
    },
    "real": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestReal.test_real": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.random.rand": {
     "line number": [
      99
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      100
     ]
    },
    "real": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestRealIfClose": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestRealIfClose.test_basic": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "iscomplexobj": {
     "line number": [
      324
     ]
    },
    "isrealobj": {
     "line number": [
      321,
      326
     ]
    },
    "numpy.lib.tests.test_type_check.assert_all": {
     "line number": [
      321,
      324,
      326
     ]
    },
    "numpy.random.rand": {
     "line number": [
      319
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      322
     ]
    },
    "real_if_close": {
     "line number": [
      320,
      323,
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check._HAS_CTYPE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_type_check.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.assert_all": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "all": {
     "line number": [
      18
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      61
     ]
    },
    "run_module_suite": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      38,
      40,
      41,
      42
     ]
    },
    "float": {
     "line number": [
      34
     ]
    },
    "numpy.core.array": {
     "line number": [
      33,
      35
     ]
    },
    "numpy.core.zeros": {
     "line number": [
      34
     ]
    },
    "numpy.lib.ufunclike.fix": {
     "line number": [
      37,
      39,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "MyArray": {
     "line number": [
      55,
      58
     ]
    },
    "assert_": {
     "line number": [
      58
     ]
    },
    "assert_array_equal": {
     "line number": [
      57
     ]
    },
    "assert_equal": {
     "line number": [
      59
     ]
    },
    "isinstance": {
     "line number": [
      58
     ]
    },
    "numpy.core.array": {
     "line number": [
      54,
      57
     ]
    },
    "numpy.lib.ufunclike.fix": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass.MyArray": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.core.ndarray": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass.MyArray.__array_wrap__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass.MyArray.__new__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_isneginf": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      27,
      29,
      30
     ]
    },
    "bool": {
     "line number": [
      23
     ]
    },
    "numpy.core.array": {
     "line number": [
      22,
      24
     ]
    },
    "numpy.core.inf": {
     "line number": [
      22,
      22
     ]
    },
    "numpy.core.nan": {
     "line number": [
      22
     ]
    },
    "numpy.core.zeros": {
     "line number": [
      23
     ]
    },
    "numpy.lib.ufunclike.isneginf": {
     "line number": [
      26,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_isposinf": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      16,
      18,
      19
     ]
    },
    "bool": {
     "line number": [
      12
     ]
    },
    "numpy.core.array": {
     "line number": [
      11,
      13
     ]
    },
    "numpy.core.inf": {
     "line number": [
      11,
      11
     ]
    },
    "numpy.core.nan": {
     "line number": [
      11
     ]
    },
    "numpy.core.zeros": {
     "line number": [
      12
     ]
    },
    "numpy.lib.ufunclike.isposinf": {
     "line number": [
      15,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.deprecated": {
  "data": {
   "shadows": "numpy.testing.decorators.deprecated"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.nx": {
  "data": {
   "shadows": "numpy.core"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.ufl": {
  "data": {
   "shadows": "numpy.lib.ufunclike"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      56
     ]
    },
    "numpy.lib.deprecate": {
     "line number": [
      32
     ]
    },
    "numpy.lib.tests.test_utils.old_func3": {
     "line number": [
      32
     ]
    },
    "numpy.lib.tests.test_utils.sys": {
     "line number": [
      9
     ]
    },
    "run_module_suite": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.tests.test_utils.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.arange": {
  "data": {
   "shadows": "numpy.core.arange"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.deprecate": {
  "data": {
   "shadows": "numpy.lib.deprecate"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.new_func3": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_utils.old_func": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "numpy.lib.deprecate": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func2": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.lib.deprecate": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func3": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.test_byte_bounds": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      53
     ]
    },
    "numpy.core.arange": {
     "line number": [
      51
     ]
    },
    "numpy.lib.utils.byte_bounds": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_decorator": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      35
     ]
    },
    "numpy.lib.tests.test_utils.old_func": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_decorator_message": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      38
     ]
    },
    "numpy.lib.tests.test_utils.old_func2": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_fn": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      41,
      42
     ]
    },
    "numpy.lib.tests.test_utils.new_func3": {
     "line number": [
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_lookfor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "StringIO.StringIO": {
     "line number": [
      15
     ]
    },
    "assert_": {
     "line number": [
      19
     ]
    },
    "numpy.lib.utils.lookfor": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_safe_eval_nameconstant": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.lib.utils.safe_eval": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.utils": {
  "data": {
   "shadows": "numpy.lib.utils"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.twodim_base.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.lib.twodim_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.alltrue": {
  "data": {
   "shadows": "numpy.core.numeric.alltrue"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.arange": {
  "data": {
   "shadows": "numpy.core.numeric.arange"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.diag": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      289
     ]
    },
    "abs": {
     "line number": [
      278
     ]
    },
    "len": {
     "line number": [
      277,
      286
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      275
     ]
    },
    "numpy.core.numeric.zeros": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.diagflat": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      332
     ]
    },
    "abs": {
     "line number": [
      336
     ]
    },
    "len": {
     "line number": [
      335
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      339,
      342
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      334
     ]
    },
    "numpy.core.numeric.zeros": {
     "line number": [
      337
     ]
    },
    "wrap": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.diagonal": {
  "data": {
   "shadows": "numpy.core.numeric.diagonal"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.empty": {
  "data": {
   "shadows": "numpy.core.numeric.empty"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.equal": {
  "data": {
   "shadows": "numpy.core.numeric.equal"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.eye": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "float": {
     "line number": [
      170
     ]
    },
    "numpy.core.numeric.zeros": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.fliplr": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      62
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.flipud": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      115
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.greater_equal": {
  "data": {
   "shadows": "numpy.core.numeric.greater_equal"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.histogram2d": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      644
     ]
    },
    "float": {
     "line number": [
      648
     ]
    },
    "len": {
     "line number": [
      643
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      648
     ]
    },
    "numpy.histogramdd": {
     "line number": [
      650
     ]
    },
    "range": {
     "line number": [
      650
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.histogramdd": {
  "data": {
   "shadows": "numpy.histogramdd"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.mask_indices": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": {
    "int": {
     "line number": [
      719
     ]
    },
    "mask_func": {
     "line number": [
      720
     ]
    },
    "numpy.core.numeric.ones": {
     "line number": [
      719
     ]
    },
    "numpy.core.numeric.where": {
     "line number": [
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.multiply": {
  "data": {
   "shadows": "numpy.core.numeric.multiply"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.ones": {
  "data": {
   "shadows": "numpy.core.numeric.ones"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.rot90": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      158
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      156
     ]
    },
    "numpy.lib.twodim_base.fliplr": {
     "line number": [
      163,
      165,
      168
     ]
    },
    "numpy.lib.twodim_base.flipud": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.subtract": {
  "data": {
   "shadows": "numpy.core.numeric.subtract"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.tri": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "float": {
     "line number": [
      349
     ]
    },
    "numpy.core.numeric.arange": {
     "line number": [
      388,
      388
     ]
    },
    "numpy.core.numeric.greater_equal": {
     "line number": [
      388
     ]
    },
    "numpy.core.numeric.subtract.outer": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.tril": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "numpy.core.numeric.asanyarray": {
     "line number": [
      423
     ]
    },
    "numpy.core.numeric.multiply": {
     "line number": [
      424
     ]
    },
    "numpy.lib.twodim_base.tri": {
     "line number": [
      424
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.tril_indices": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "numpy.lib.twodim_base.mask_indices": {
     "line number": [
      794
     ]
    },
    "numpy.lib.twodim_base.tril": {
     "line number": [
      794
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.tril_indices_from": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      821
     ]
    },
    "numpy.lib.twodim_base.tril_indices": {
     "line number": [
      822
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.triu": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "numpy.core.numeric.asanyarray": {
     "line number": [
      449
     ]
    },
    "numpy.core.numeric.multiply": {
     "line number": [
      450
     ]
    },
    "numpy.lib.twodim_base.tri": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.triu_indices": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": {
    "numpy.lib.twodim_base.mask_indices": {
     "line number": [
      897
     ]
    },
    "numpy.lib.twodim_base.triu": {
     "line number": [
      897
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.triu_indices_from": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      928
     ]
    },
    "numpy.lib.twodim_base.triu_indices": {
     "line number": [
      929
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.vander": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "len": {
     "line number": [
      512,
      513
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      510
     ]
    },
    "numpy.core.numeric.ones": {
     "line number": [
      513
     ]
    },
    "range": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.where": {
  "data": {
   "shadows": "numpy.core.numeric.where"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.zeros": {
  "data": {
   "shadows": "numpy.core.numeric.zeros"
  },
  "type": "import"
 },
 "numpy.lib.type_check": {
  "data": {
   "symbols_in_volume": {
    "numpy.core.numeric.cdouble": {
     "line number": [
      546,
      551
     ]
    },
    "numpy.core.numeric.clongdouble": {
     "line number": [
      546,
      552
     ]
    },
    "numpy.core.numeric.csingle": {
     "line number": [
      546,
      550
     ]
    },
    "numpy.core.numeric.double": {
     "line number": [
      545,
      548
     ]
    },
    "numpy.core.numeric.longdouble": {
     "line number": [
      545,
      549
     ]
    },
    "numpy.core.numeric.single": {
     "line number": [
      545,
      547
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.type_check.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.lib.type_check._getmaxmin": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "numpy.core.getlimits.finfo": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check._namefromtype": {
  "data": {
   "lineno": 467
  },
  "type": "constant"
 },
 "numpy.lib.type_check._nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.type_check._typecodes_by_elsize": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.lib.type_check.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.type_check.array": {
  "data": {
   "shadows": "numpy.core.numeric.array"
  },
  "type": "import"
 },
 "numpy.lib.type_check.array_precision": {
  "data": {
   "lineno": 547
  },
  "type": "constant"
 },
 "numpy.lib.type_check.array_type": {
  "data": {
   "lineno": 545
  },
  "type": "constant"
 },
 "numpy.lib.type_check.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.lib.type_check.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.type_check.asfarray": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      103
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      105
     ]
    },
    "numpy.core.numeric.float_": {
     "line number": [
      75,
      104
     ]
    },
    "numpy.core.numeric.inexact": {
     "line number": [
      103
     ]
    },
    "numpy.core.numeric.obj2sctype": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.asscalar": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "numpy.lib.type_check.common_type": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      600
     ]
    },
    "issubclass": {
     "line number": [
      595
     ]
    },
    "max": {
     "line number": [
      601
     ]
    },
    "numpy.core.numeric.integer": {
     "line number": [
      595
     ]
    },
    "numpy.lib.type_check.array_precision": {
     "line number": [
      598
     ]
    },
    "numpy.lib.type_check.array_type": {
     "line number": [
      603,
      605
     ]
    },
    "numpy.lib.type_check.iscomplexobj": {
     "line number": [
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.type_check.getlimits": {
  "data": {
   "shadows": "numpy.core.getlimits"
  },
  "type": "import"
 },
 "numpy.lib.type_check.imag": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "numpy.core.numeric.asanyarray": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.iscomplex": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      204
     ]
    },
    "issubclass": {
     "line number": [
      202
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      201
     ]
    },
    "numpy.core.numeric.complexfloating": {
     "line number": [
      202
     ]
    },
    "numpy.core.numeric.zeros": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.iscomplexobj": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      269
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      269
     ]
    },
    "numpy.core.numeric.complexfloating": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.isnan": {
  "data": {
   "shadows": "numpy.core.numeric.isnan"
  },
  "type": "import"
 },
 "numpy.lib.type_check.isreal": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "numpy.lib.type_check.imag": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.isrealobj": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      303
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      303
     ]
    },
    "numpy.core.numeric.complexfloating": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.mintypecode": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      61
     ]
    },
    "numpy.core.numeric.asarray": {
     "line number": [
      61
     ]
    },
    "numpy.lib.type_check._typecodes_by_elsize": {
     "line number": [
      70
     ]
    },
    "str": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.nan_to_num": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      359,
      366
     ]
    },
    "isneginf": {
     "line number": [
      375
     ]
    },
    "isposinf": {
     "line number": [
      374
     ]
    },
    "issubclass": {
     "line number": [
      361,
      368
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      367,
      370
     ]
    },
    "numpy.core.numeric.complexfloating": {
     "line number": [
      361
     ]
    },
    "numpy.core.numeric.integer": {
     "line number": [
      368
     ]
    },
    "numpy.core.numeric.isnan": {
     "line number": [
      376
     ]
    },
    "numpy.core.numeric.obj2sctype": {
     "line number": [
      360
     ]
    },
    "numpy.lib.type_check._getmaxmin": {
     "line number": [
      377
     ]
    },
    "type": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.obj2sctype": {
  "data": {
   "shadows": "numpy.core.numeric.obj2sctype"
  },
  "type": "import"
 },
 "numpy.lib.type_check.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.type_check.real": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "numpy.core.numeric.asanyarray": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.real_if_close": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      431
     ]
    },
    "numpy.core.getlimits.finfo": {
     "line number": [
      435
     ]
    },
    "numpy.core.numeric.allclose": {
     "line number": [
      437
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      430
     ]
    },
    "numpy.core.numeric.complexfloating": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.typename": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "numpy.lib.type_check._namefromtype": {
     "line number": [
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.type_check.zeros": {
  "data": {
   "shadows": "numpy.core.numeric.zeros"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.ufunclike.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.lib.ufunclike.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike.fix": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.core.numeric.asanyarray": {
     "line number": [
      46,
      50
     ]
    },
    "numpy.core.numeric.ceil": {
     "line number": [
      48
     ]
    },
    "numpy.core.numeric.floor": {
     "line number": [
      47
     ]
    },
    "numpy.core.numeric.where": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.isneginf": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.core.numeric.asarray": {
     "line number": [
      174
     ]
    },
    "numpy.core.numeric.bool_": {
     "line number": [
      175
     ]
    },
    "numpy.core.numeric.empty": {
     "line number": [
      175
     ]
    },
    "numpy.core.numeric.isinf": {
     "line number": [
      176
     ]
    },
    "numpy.core.numeric.logical_and": {
     "line number": [
      176
     ]
    },
    "numpy.core.numeric.signbit": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.isposinf": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "numpy.core.numeric.asarray": {
     "line number": [
      111
     ]
    },
    "numpy.core.numeric.bool_": {
     "line number": [
      112
     ]
    },
    "numpy.core.numeric.empty": {
     "line number": [
      112
     ]
    },
    "numpy.core.numeric.isinf": {
     "line number": [
      113
     ]
    },
    "numpy.core.numeric.logical_and": {
     "line number": [
      113
     ]
    },
    "numpy.core.numeric.signbit": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.user_array": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      206
     ]
    },
    "dir": {
     "line number": [
      211
     ]
    },
    "numpy.core.arange": {
     "line number": [
      207,
      220
     ]
    },
    "numpy.core.less": {
     "line number": [
      219,
      219
     ]
    },
    "numpy.core.reshape": {
     "line number": [
      207,
      220,
      221
     ]
    },
    "numpy.core.shape": {
     "line number": [
      212,
      220
     ]
    },
    "numpy.core.sin": {
     "line number": [
      218
     ]
    },
    "numpy.core.sqrt": {
     "line number": [
      218
     ]
    },
    "numpy.core.transpose": {
     "line number": [
      222
     ]
    },
    "numpy.lib.user_array.container": {
     "line number": [
      209
     ]
    },
    "numpy.lib.user_array.temp": {
     "line number": [
      209
     ]
    },
    "numpy.lib.user_array.ua": {
     "line number": [
      211,
      212,
      212,
      214,
      217
     ]
    },
    "numpy.lib.user_array.ua_small": {
     "line number": [
      215,
      216,
      217,
      218,
      218,
      219,
      219,
      220,
      220,
      221,
      222
     ]
    },
    "print": {
     "line number": [
      211,
      212,
      215,
      217,
      218,
      219,
      220,
      221,
      222
     ]
    },
    "type": {
     "line number": [
      219,
      220
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.user_array.absolute": {
  "data": {
   "shadows": "numpy.core.absolute"
  },
  "type": "import"
 },
 "numpy.lib.user_array.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.user_array.add": {
  "data": {
   "shadows": "numpy.core.add"
  },
  "type": "import"
 },
 "numpy.lib.user_array.arange": {
  "data": {
   "shadows": "numpy.core.arange"
  },
  "type": "import"
 },
 "numpy.lib.user_array.array": {
  "data": {
   "shadows": "numpy.core.array"
  },
  "type": "import"
 },
 "numpy.lib.user_array.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.lib.user_array.bitwise_and": {
  "data": {
   "shadows": "numpy.core.bitwise_and"
  },
  "type": "import"
 },
 "numpy.lib.user_array.bitwise_or": {
  "data": {
   "shadows": "numpy.core.bitwise_or"
  },
  "type": "import"
 },
 "numpy.lib.user_array.bitwise_xor": {
  "data": {
   "shadows": "numpy.core.bitwise_xor"
  },
  "type": "import"
 },
 "numpy.lib.user_array.container": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "object": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.user_array.container.__abs__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__add__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__and__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "numpy.core.bitwise_and": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__array__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__array_wrap__": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__complex__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__div__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      75
     ]
    },
    "numpy.core.divide": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__divmod__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "numpy.core.divide": {
     "line number": [
      91
     ]
    },
    "numpy.core.remainder": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__eq__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "numpy.core.equal": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__float__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "float": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ge__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "numpy.core.greater_equal": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__getattr__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "object.__getattribute__": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__getitem__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__getslice__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__gt__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.core.greater": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__hex__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "hex": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__iadd__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "numpy.core.add": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__iand__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "numpy.core.bitwise_and": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__idiv__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "numpy.core.divide": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ilshift__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "numpy.core.left_shift": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__imod__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "numpy.core.remainder": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__imul__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "numpy.core.multiply": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "numpy.core.array": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__int__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "int": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__invert__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "numpy.core.invert": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ior__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "numpy.core.bitwise_or": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ipow__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "numpy.core.power": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__irshift__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.core.right_shift": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__isub__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.core.subtract": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ixor__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "numpy.core.bitwise_xor": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__le__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "numpy.core.less_equal": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__len__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "len": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__long__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "numpy.compat.long": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__lshift__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.core.left_shift": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__lt__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "numpy.core.less": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__mod__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.core.remainder": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__mul__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      68
     ]
    },
    "numpy.core.multiply": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ne__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "numpy.core.not_equal": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__neg__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__oct__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "oct": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__or__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.core.bitwise_or": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__pos__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__pow__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      98
     ]
    },
    "numpy.core.power": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rand__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "numpy.core.bitwise_and": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rdiv__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      77
     ]
    },
    "numpy.core.divide": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rdivmod__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "numpy.core.divide": {
     "line number": [
      94
     ]
    },
    "numpy.core.remainder": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__repr__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "len": {
     "line number": [
      22,
      23
     ]
    },
    "repr": {
     "line number": [
      23,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rlshift__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "numpy.core.left_shift": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rmod__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "numpy.core.remainder": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ror__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.core.bitwise_or": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rpow__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      100
     ]
    },
    "numpy.core.power": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rrshift__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.core.right_shift": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rshift__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "numpy.core.right_shift": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rsub__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rxor__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.core.bitwise_xor": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__setattr__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      194
     ]
    },
    "object.__setattr__": {
     "line number": [
      190,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__setitem__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__setslice__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__sub__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__xor__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "numpy.core.bitwise_xor": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container._rc": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "len": {
     "line number": [
      182
     ]
    },
    "numpy.core.shape": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container._scalarfunc": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      157
     ]
    },
    "func": {
     "line number": [
      155
     ]
    },
    "len": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.astype": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.byteswap": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.copy": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.tostring": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "numpy.lib.user_array.divide": {
  "data": {
   "shadows": "numpy.core.divide"
  },
  "type": "import"
 },
 "numpy.lib.user_array.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.user_array.equal": {
  "data": {
   "shadows": "numpy.core.equal"
  },
  "type": "import"
 },
 "numpy.lib.user_array.greater": {
  "data": {
   "shadows": "numpy.core.greater"
  },
  "type": "import"
 },
 "numpy.lib.user_array.greater_equal": {
  "data": {
   "shadows": "numpy.core.greater_equal"
  },
  "type": "import"
 },
 "numpy.lib.user_array.invert": {
  "data": {
   "shadows": "numpy.core.invert"
  },
  "type": "import"
 },
 "numpy.lib.user_array.left_shift": {
  "data": {
   "shadows": "numpy.core.left_shift"
  },
  "type": "import"
 },
 "numpy.lib.user_array.less": {
  "data": {
   "shadows": "numpy.core.less"
  },
  "type": "import"
 },
 "numpy.lib.user_array.less_equal": {
  "data": {
   "shadows": "numpy.core.less_equal"
  },
  "type": "import"
 },
 "numpy.lib.user_array.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.user_array.multiply": {
  "data": {
   "shadows": "numpy.core.multiply"
  },
  "type": "import"
 },
 "numpy.lib.user_array.not_equal": {
  "data": {
   "shadows": "numpy.core.not_equal"
  },
  "type": "import"
 },
 "numpy.lib.user_array.power": {
  "data": {
   "shadows": "numpy.core.power"
  },
  "type": "import"
 },
 "numpy.lib.user_array.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.user_array.remainder": {
  "data": {
   "shadows": "numpy.core.remainder"
  },
  "type": "import"
 },
 "numpy.lib.user_array.reshape": {
  "data": {
   "shadows": "numpy.core.reshape"
  },
  "type": "import"
 },
 "numpy.lib.user_array.right_shift": {
  "data": {
   "shadows": "numpy.core.right_shift"
  },
  "type": "import"
 },
 "numpy.lib.user_array.shape": {
  "data": {
   "shadows": "numpy.core.shape"
  },
  "type": "import"
 },
 "numpy.lib.user_array.sin": {
  "data": {
   "shadows": "numpy.core.sin"
  },
  "type": "import"
 },
 "numpy.lib.user_array.sqrt": {
  "data": {
   "shadows": "numpy.core.sqrt"
  },
  "type": "import"
 },
 "numpy.lib.user_array.subtract": {
  "data": {
   "shadows": "numpy.core.subtract"
  },
  "type": "import"
 },
 "numpy.lib.user_array.temp": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "numpy.lib.user_array.transpose": {
  "data": {
   "shadows": "numpy.core.transpose"
  },
  "type": "import"
 },
 "numpy.lib.user_array.ua": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "numpy.lib.user_array.ua_small": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "numpy.lib.utils": {
  "data": {
   "symbols_in_volume": {
    "numpy.lib.utils._Deprecate": {
     "line number": [
      212
     ]
    },
    "numpy.lib.utils.re": {
     "line number": [
      665,
      665
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.lib.utils.SafeEval": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": {
    "numpy.lib.utils.sys": {
     "line number": [
      976
     ]
    },
    "object": {
     "line number": [
      961
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.utils.SafeEval.default": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": {
    "SyntaxError": {
     "line number": [
      1025
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visit": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      1021
     ]
    },
    "meth": {
     "line number": [
      1021,
      1022
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitBytes": {
  "data": {
   "lineno": 1037
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitConst": {
  "data": {
   "lineno": 990
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitDict": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1041
     ]
    },
    "zip": {
     "line number": [
      1042
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitExpression": {
  "data": {
   "lineno": 1028
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitList": {
  "data": {
   "lineno": 1047
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitName": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": {
    "SyntaxError": {
     "line number": [
      1067
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitNameConstant": {
  "data": {
   "lineno": 1069
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitNum": {
  "data": {
   "lineno": 1031
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitStr": {
  "data": {
   "lineno": 1034
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitTuple": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      1045
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitUnaryAdd": {
  "data": {
   "lineno": 1002
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitUnaryOp": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": {
    "SyntaxError": {
     "line number": [
      1057
     ]
    },
    "isinstance": {
     "line number": [
      1052,
      1054
     ]
    },
    "numpy.lib.utils.ast": {
     "line number": [
      1052,
      1054
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitUnarySub": {
  "data": {
   "lineno": 1005
  },
  "type": "function"
 },
 "numpy.lib.utils.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.lib.utils._Deprecate": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "object": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.lib.utils._Deprecate.__call__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      121,
      146
     ]
    },
    "func.__dict__": {
     "line number": [
      145
     ]
    },
    "func.__doc__": {
     "line number": [
      138
     ]
    },
    "numpy.lib.utils._set_function_name": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils._Deprecate.__call__.newfunc": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      134
     ]
    },
    "func": {
     "line number": [
      135
     ]
    },
    "numpy.lib.utils.warnings": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils._Deprecate.__init__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "numpy.lib.utils.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.lib.utils._dictlist": {
  "data": {
   "lineno": 399
  },
  "type": "constant"
 },
 "numpy.lib.utils._function_signature_re": {
  "data": {
   "lineno": 665
  },
  "type": "constant"
 },
 "numpy.lib.utils._getmembers": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      941
     ]
    },
    "dir": {
     "line number": [
      942
     ]
    },
    "getattr": {
     "line number": [
      942
     ]
    },
    "hasattr": {
     "line number": [
      943
     ]
    },
    "numpy.lib.utils.inspect": {
     "line number": [
      940
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils._lookfor_caches": {
  "data": {
   "lineno": 662
  },
  "type": "constant"
 },
 "numpy.lib.utils._lookfor_generate_cache": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      861
     ]
    },
    "BaseException": {
     "line number": [
      881
     ]
    },
    "Exception": {
     "line number": [
      884
     ]
    },
    "ImportError": {
     "line number": [
      830
     ]
    },
    "NameError": {
     "line number": [
      882,
      903,
      930
     ]
    },
    "StringIO.StringIO": {
     "line number": [
      890,
      891
     ]
    },
    "__import__": {
     "line number": [
      829,
      892
     ]
    },
    "getattr": {
     "line number": [
      901,
      902
     ]
    },
    "hasattr": {
     "line number": [
      865,
      925
     ]
    },
    "id": {
     "line number": [
      840,
      841,
      845,
      851,
      852
     ]
    },
    "isinstance": {
     "line number": [
      827,
      833,
      833,
      913
     ]
    },
    "list": {
     "line number": [
      833
     ]
    },
    "numpy.core.ufunc": {
     "line number": [
      913
     ]
    },
    "numpy.lib.utils._getmembers": {
     "line number": [
      899,
      923
     ]
    },
    "numpy.lib.utils._lookfor_caches": {
     "line number": [
      840,
      841,
      845
     ]
    },
    "numpy.lib.utils.inspect": {
     "line number": [
      857,
      918,
      921,
      929
     ]
    },
    "numpy.lib.utils.os": {
     "line number": [
      867,
      868,
      869,
      870,
      872
     ]
    },
    "numpy.lib.utils.sys": {
     "line number": [
      818,
      832,
      887,
      888,
      890,
      891,
      894,
      895
     ]
    },
    "str": {
     "line number": [
      827
     ]
    },
    "tuple": {
     "line number": [
      833
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils._makenamedict": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      404
     ]
    },
    "globals": {
     "line number": [
      404
     ]
    },
    "isinstance": {
     "line number": [
      413
     ]
    },
    "len": {
     "line number": [
      409
     ]
    },
    "locals": {
     "line number": [
      404
     ]
    },
    "numpy.lib.utils.types": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils._namedict": {
  "data": {
   "lineno": 398
  },
  "type": "constant"
 },
 "numpy.lib.utils._set_function_name": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "numpy.lib.utils._split_line": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "len": {
     "line number": [
      380,
      390,
      390,
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.utils.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.lib.utils.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "numpy.lib.utils.byte_bounds": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      254
     ]
    },
    "zip": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.compiler": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "numpy.lib.utils.core": {
  "data": {
   "shadows": "numpy.core"
  },
  "type": "import"
 },
 "numpy.lib.utils.deprecate": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.lib.utils._Deprecate": {
     "line number": [
      208,
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.deprecate_with_doc": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "numpy.lib.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.utils.get_include": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "numpy.core.__file__": {
     "line number": [
      42
     ]
    },
    "numpy.lib.utils.numpy": {
     "line number": [
      36,
      38
     ]
    },
    "numpy.lib.utils.os": {
     "line number": [
      38,
      38,
      42,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.get_numarray_include": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.lib.utils.get_include": {
     "line number": [
      84
     ]
    },
    "numpy.numarray.get_numarray_include_dirs": {
     "line number": [
      80
     ]
    },
    "type": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.get_numarray_include_dirs": {
  "data": {
   "shadows": "numpy.numarray.get_numarray_include_dirs"
  },
  "type": "import"
 },
 "numpy.lib.utils.info": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      501
     ]
    },
    "getattr": {
     "line number": [
      552
     ]
    },
    "hasattr": {
     "line number": [
      474,
      475,
      477,
      524,
      541,
      563,
      572,
      608
     ]
    },
    "id": {
     "line number": [
      493,
      496
     ]
    },
    "isinstance": {
     "line number": [
      482,
      485,
      558
     ]
    },
    "len": {
     "line number": [
      512,
      527,
      533,
      566,
      576,
      594,
      600
     ]
    },
    "numpy.core.ndarray": {
     "line number": [
      482
     ]
    },
    "numpy.lib.utils._dictlist": {
     "line number": [
      487,
      490
     ]
    },
    "numpy.lib.utils._makenamedict": {
     "line number": [
      487
     ]
    },
    "numpy.lib.utils._namedict": {
     "line number": [
      486,
      487,
      492
     ]
    },
    "numpy.lib.utils._split_line": {
     "line number": [
      513,
      534,
      577,
      601
     ]
    },
    "numpy.lib.utils.inspect": {
     "line number": [
      508,
      510,
      510,
      518,
      520,
      525,
      525,
      539,
      542,
      544,
      554,
      564,
      564,
      582,
      584,
      585,
      588,
      590,
      592,
      592,
      606,
      609
     ]
    },
    "numpy.lib.utils.pydoc": {
     "line number": [
      546,
      554
     ]
    },
    "numpy.lib.utils.sys": {
     "line number": [
      422,
      557
     ]
    },
    "numpy.lib.utils.types": {
     "line number": [
      558
     ]
    },
    "numpy.numarray.info": {
     "line number": [
      484
     ]
    },
    "object": {
     "line number": [
      474,
      475,
      476,
      477,
      478,
      480,
      482,
      484,
      485,
      492,
      504,
      508,
      510,
      518,
      520,
      524,
      539,
      541,
      544,
      546,
      552,
      558,
      563,
      572,
      585,
      588,
      590,
      606,
      608,
      609
     ]
    },
    "object.__call__": {
     "line number": [
      582,
      584
     ]
    },
    "object.__call__.__func__": {
     "line number": [
      564
     ]
    },
    "object.__class__.__name__": {
     "line number": [
      561
     ]
    },
    "object.__func__": {
     "line number": [
      592
     ]
    },
    "object.__init__": {
     "line number": [
      542
     ]
    },
    "object.__init__.__func__": {
     "line number": [
      525
     ]
    },
    "object.__name__": {
     "line number": [
      509,
      521,
      591
     ]
    },
    "object._ppimport_attr": {
     "line number": [
      478
     ]
    },
    "object._ppimport_module": {
     "line number": [
      476
     ]
    },
    "object.name": {
     "line number": [
      573
     ]
    },
    "print": {
     "line number": [
      494,
      497,
      499,
      504,
      506,
      517,
      518,
      538,
      542,
      544,
      548,
      555,
      561,
      562,
      581,
      584,
      585,
      588,
      605,
      606,
      609
     ]
    },
    "str": {
     "line number": [
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "numpy.lib.utils.issubclass_": {
  "data": {
   "shadows": "numpy.core.numerictypes.issubclass_"
  },
  "type": "import"
 },
 "numpy.lib.utils.issubdtype": {
  "data": {
   "shadows": "numpy.core.numerictypes.issubdtype"
  },
  "type": "import"
 },
 "numpy.lib.utils.issubsctype": {
  "data": {
   "shadows": "numpy.core.numerictypes.issubsctype"
  },
  "type": "import"
 },
 "numpy.lib.utils.lookfor": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      778
     ]
    },
    "len": {
     "line number": [
      766,
      788
     ]
    },
    "numpy.lib.utils._function_signature_re": {
     "line number": [
      776
     ]
    },
    "numpy.lib.utils._lookfor_generate_cache": {
     "line number": [
      716
     ]
    },
    "numpy.lib.utils.pydoc": {
     "line number": [
      789
     ]
    },
    "pager": {
     "line number": [
      790
     ]
    },
    "print": {
     "line number": [
      792
     ]
    },
    "str": {
     "line number": [
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.lookfor.relevance": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "len": {
     "line number": [
      752
     ]
    },
    "max": {
     "line number": [
      757
     ]
    },
    "sum": {
     "line number": [
      748,
      750
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.lookfor.relevance_value": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": {
    "relevance": {
     "line number": [
      761
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.ndarray": {
  "data": {
   "shadows": "numpy.core.ndarray"
  },
  "type": "import"
 },
 "numpy.lib.utils.nn": {
  "data": {
   "shadows": "numpy.numarray"
  },
  "type": "import"
 },
 "numpy.lib.utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.utils.product": {
  "data": {
   "shadows": "numpy.core.product"
  },
  "type": "import"
 },
 "numpy.lib.utils.pydoc": {
  "data": {
   "shadows": "pydoc"
  },
  "type": "import"
 },
 "numpy.lib.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.lib.utils.safe_eval": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      1120
     ]
    },
    "ImportError": {
     "line number": [
      1123
     ]
    },
    "SyntaxError": {
     "line number": [
      1129,
      1133
     ]
    },
    "numpy.lib.utils.SafeEval": {
     "line number": [
      1126
     ]
    },
    "numpy.lib.utils.ast": {
     "line number": [
      1128,
      1128,
      1132
     ]
    },
    "numpy.lib.utils.source": {
     "line number": [
      1128
     ]
    },
    "numpy.lib.utils.warnings": {
     "line number": [
      1118,
      1120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.source": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": {
    "numpy.lib.utils.inspect": {
     "line number": [
      653,
      654
     ]
    },
    "numpy.lib.utils.sys": {
     "line number": [
      612
     ]
    },
    "object": {
     "line number": [
      653,
      654
     ]
    },
    "print": {
     "line number": [
      653,
      654,
      656
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.lib.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.utils.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.lib.utils.ufunc": {
  "data": {
   "shadows": "numpy.core.ufunc"
  },
  "type": "import"
 },
 "numpy.lib.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.utils.who": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "id": {
     "line number": [
      326
     ]
    },
    "int": {
     "line number": [
      352
     ]
    },
    "isinstance": {
     "line number": [
      324
     ]
    },
    "len": {
     "line number": [
      343,
      345,
      346,
      347,
      348,
      349,
      350,
      354,
      359,
      361,
      363,
      364,
      365
     ]
    },
    "map": {
     "line number": [
      334
     ]
    },
    "max": {
     "line number": [
      355,
      356,
      357
     ]
    },
    "numpy.core.ndarray": {
     "line number": [
      324
     ]
    },
    "numpy.lib.utils.sys": {
     "line number": [
      319
     ]
    },
    "print": {
     "line number": [
      359,
      363,
      367
     ]
    },
    "range": {
     "line number": [
      343,
      361
     ]
    },
    "str": {
     "line number": [
      334,
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg": {
  "data": {
   "symbols_in_volume": {
    "numpy.testing.Tester": {
     "line number": [
      53,
      54
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.linalg.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.linalg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.bench": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.linalg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.info": {
  "data": {},
  "type": "module"
 },
 "numpy.linalg.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.info.depends": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.linalg.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.linalg": {
  "data": {
   "symbols_in_volume": {
    "numpy.compat.asbytes": {
     "line number": [
      34,
      35,
      36,
      37,
      38
     ]
    },
    "numpy.core.cdouble": {
     "line number": [
      117,
      122,
      120,
      122,
      137,
      135,
      137
     ]
    },
    "numpy.core.csingle": {
     "line number": [
      116,
      121,
      119,
      121,
      136,
      134,
      136
     ]
    },
    "numpy.core.double": {
     "line number": [
      115,
      115,
      117,
      120,
      135
     ]
    },
    "numpy.core.fastCopyAndTranspose": {
     "line number": [
      166
     ]
    },
    "numpy.core.intc": {
     "line number": [
      40
     ]
    },
    "numpy.core.single": {
     "line number": [
      114,
      114,
      116,
      119,
      134
     ]
    },
    "numpy.linalg.linalg._determine_error_states": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.linalg.linalg.Inf": {
  "data": {
   "shadows": "numpy.core.Inf"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.LinAlgError": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.linalg._A": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._L": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._N": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._S": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._V": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.linalg.linalg.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._assertFinite": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "numpy.core.isfinite": {
     "line number": [
      216
     ]
    },
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._assertNdSquareness": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "max": {
     "line number": [
      211
     ]
    },
    "min": {
     "line number": [
      211
     ]
    },
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._assertNoEmpty2d": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "numpy.core.product": {
     "line number": [
      221
     ]
    },
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._assertRank2": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "len": {
     "line number": [
      194,
      196
     ]
    },
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._assertRankAtLeast2": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "len": {
     "line number": [
      200,
      202
     ]
    },
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._assertSquareness": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "max": {
     "line number": [
      206
     ]
    },
    "min": {
     "line number": [
      206
     ]
    },
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._commonType": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      150
     ]
    },
    "issubclass": {
     "line number": [
      144
     ]
    },
    "numpy.core.cdouble": {
     "line number": [
      157
     ]
    },
    "numpy.core.double": {
     "line number": [
      153,
      154,
      155,
      160
     ]
    },
    "numpy.core.inexact": {
     "line number": [
      144
     ]
    },
    "numpy.core.single": {
     "line number": [
      141
     ]
    },
    "numpy.linalg.linalg._complex_types_map": {
     "line number": [
      158
     ]
    },
    "numpy.linalg.linalg._realType": {
     "line number": [
      147
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._complexType": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "numpy.core.cdouble": {
     "line number": [
      127
     ]
    },
    "numpy.linalg.linalg._complex_types_map": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._complex_types_map": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._convertarray": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": {
    "numpy.linalg.linalg._commonType": {
     "line number": [
      974
     ]
    },
    "numpy.linalg.linalg._fastCT": {
     "line number": [
      975
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._determine_error_states": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.core.errstate": {
     "line number": [
      81
     ]
    },
    "numpy.core.geterrobj": {
     "line number": [
      78,
      83
     ]
    },
    "numpy.linalg.linalg._linalg_error_extobj": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._fastCT": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._fastCopyAndTranspose": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "len": {
     "line number": [
      187
     ]
    },
    "numpy.linalg.linalg._fastCT": {
     "line number": [
      184,
      186
     ]
    },
    "type": {
     "line number": [
      183,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._linalgRealType": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.core.double": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._linalg_error_extobj": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._makearray": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      108
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._multi_svd_norm": {
  "data": {
   "lineno": 1894,
   "symbols_in_volume": {
    "numpy.core.rollaxis": {
     "line number": [
      1919,
      1919
     ]
    },
    "numpy.linalg.linalg.svd": {
     "line number": [
      1920
     ]
    },
    "op": {
     "line number": [
      1920
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_nonposdef": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_singular": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_svd_nonconvergence": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._realType": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "numpy.core.double": {
     "line number": [
      124
     ]
    },
    "numpy.linalg.linalg._real_types_map": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._real_types_map": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._to_native_byte_order": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "len": {
     "line number": [
      175
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg._umath_linalg": {
  "data": {
   "shadows": "numpy.linalg._umath_linalg"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.abs": {
  "data": {
   "shadows": "numpy.core.abs"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.add": {
  "data": {
   "shadows": "numpy.core.add"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.all": {
  "data": {
   "shadows": "numpy.core.all"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.amax": {
  "data": {
   "shadows": "numpy.core.amax"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.amin": {
  "data": {
   "shadows": "numpy.core.amin"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.array": {
  "data": {
   "shadows": "numpy.core.array"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.asfarray": {
  "data": {
   "shadows": "numpy.lib.asfarray"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.broadcast": {
  "data": {
   "shadows": "numpy.core.broadcast"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.cdouble": {
  "data": {
   "shadows": "numpy.core.cdouble"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.cholesky": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "gufunc": {
     "line number": [
      597,
      603
     ]
    },
    "numpy.linalg._umath_linalg.cholesky_lo": {
     "line number": [
      597
     ]
    },
    "numpy.linalg.linalg._assertNdSquareness": {
     "line number": [
      600
     ]
    },
    "numpy.linalg.linalg._assertRankAtLeast2": {
     "line number": [
      599
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      601
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      598
     ]
    },
    "numpy.linalg.linalg._raise_linalgerror_nonposdef": {
     "line number": [
      596
     ]
    },
    "numpy.linalg.linalg.get_linalg_error_extobj": {
     "line number": [
      596
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      602
     ]
    },
    "wrap": {
     "line number": [
      598,
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.complexfloating": {
  "data": {
   "shadows": "numpy.core.complexfloating"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.cond": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      1422
     ]
    },
    "numpy.linalg.linalg.inv": {
     "line number": [
      1427
     ]
    },
    "numpy.linalg.linalg.norm": {
     "line number": [
      1427,
      1427
     ]
    },
    "numpy.linalg.linalg.svd": {
     "line number": [
      1424
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.csingle": {
  "data": {
   "shadows": "numpy.core.csingle"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.det": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      1723
     ]
    },
    "numpy.linalg._umath_linalg.det": {
     "line number": [
      1729
     ]
    },
    "numpy.linalg.linalg._assertNdSquareness": {
     "line number": [
      1726
     ]
    },
    "numpy.linalg.linalg._assertNoEmpty2d": {
     "line number": [
      1724
     ]
    },
    "numpy.linalg.linalg._assertRankAtLeast2": {
     "line number": [
      1725
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      1727
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      1728
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.dot": {
  "data": {
   "shadows": "numpy.core.dot"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.double": {
  "data": {
   "shadows": "numpy.core.double"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.eig": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": {
    "numpy.core.all": {
     "line number": [
      1105
     ]
    },
    "numpy.linalg._umath_linalg.eig": {
     "line number": [
      1103
     ]
    },
    "numpy.linalg.linalg._assertFinite": {
     "line number": [
      1097
     ]
    },
    "numpy.linalg.linalg._assertNdSquareness": {
     "line number": [
      1096
     ]
    },
    "numpy.linalg.linalg._assertRankAtLeast2": {
     "line number": [
      1095
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      1098
     ]
    },
    "numpy.linalg.linalg._complexType": {
     "line number": [
      1110
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      1094
     ]
    },
    "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence": {
     "line number": [
      1101
     ]
    },
    "numpy.linalg.linalg._realType": {
     "line number": [
      1108
     ]
    },
    "numpy.linalg.linalg.get_linalg_error_extobj": {
     "line number": [
      1100
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      1102,
      1105
     ]
    },
    "wrap": {
     "line number": [
      1094,
      1113
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.eigh": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1202
     ]
    },
    "gufunc": {
     "line number": [
      1212,
      1214,
      1217
     ]
    },
    "numpy.linalg._umath_linalg.eigh_lo": {
     "line number": [
      1212
     ]
    },
    "numpy.linalg._umath_linalg.eigh_up": {
     "line number": [
      1214
     ]
    },
    "numpy.linalg.linalg._assertNdSquareness": {
     "line number": [
      1206
     ]
    },
    "numpy.linalg.linalg._assertRankAtLeast2": {
     "line number": [
      1205
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      1207
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      1204
     ]
    },
    "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence": {
     "line number": [
      1210
     ]
    },
    "numpy.linalg.linalg._realType": {
     "line number": [
      1218
     ]
    },
    "numpy.linalg.linalg.get_linalg_error_extobj": {
     "line number": [
      1209
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      1216
     ]
    },
    "wrap": {
     "line number": [
      1204,
      1220
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.eigvals": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": {
    "numpy.core.all": {
     "line number": [
      897
     ]
    },
    "numpy.linalg._umath_linalg.eigvals": {
     "line number": [
      894
     ]
    },
    "numpy.linalg.linalg._assertFinite": {
     "line number": [
      888
     ]
    },
    "numpy.linalg.linalg._assertNdSquareness": {
     "line number": [
      887
     ]
    },
    "numpy.linalg.linalg._assertNoEmpty2d": {
     "line number": [
      885
     ]
    },
    "numpy.linalg.linalg._assertRankAtLeast2": {
     "line number": [
      886
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      889
     ]
    },
    "numpy.linalg.linalg._complexType": {
     "line number": [
      901
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      884
     ]
    },
    "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence": {
     "line number": [
      892
     ]
    },
    "numpy.linalg.linalg._realType": {
     "line number": [
      899
     ]
    },
    "numpy.linalg.linalg.get_linalg_error_extobj": {
     "line number": [
      891
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      893,
      896
     ]
    },
    "wrap": {
     "line number": [
      884
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.eigvalsh": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      955
     ]
    },
    "gufunc": {
     "line number": [
      960,
      962,
      970
     ]
    },
    "numpy.linalg._umath_linalg.eigvalsh_lo": {
     "line number": [
      960
     ]
    },
    "numpy.linalg._umath_linalg.eigvalsh_up": {
     "line number": [
      962
     ]
    },
    "numpy.linalg.linalg._assertNdSquareness": {
     "line number": [
      967
     ]
    },
    "numpy.linalg.linalg._assertNoEmpty2d": {
     "line number": [
      965
     ]
    },
    "numpy.linalg.linalg._assertRankAtLeast2": {
     "line number": [
      966
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      968
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      964
     ]
    },
    "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence": {
     "line number": [
      958
     ]
    },
    "numpy.linalg.linalg._realType": {
     "line number": [
      971
     ]
    },
    "numpy.linalg.linalg.get_linalg_error_extobj": {
     "line number": [
      957
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      969
     ]
    },
    "wrap": {
     "line number": [
      964
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.empty": {
  "data": {
   "shadows": "numpy.core.empty"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.empty_like": {
  "data": {
   "shadows": "numpy.core.empty_like"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.errstate": {
  "data": {
   "shadows": "numpy.core.errstate"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.fastCopyAndTranspose": {
  "data": {
   "shadows": "numpy.core.fastCopyAndTranspose"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.finfo": {
  "data": {
   "shadows": "numpy.core.finfo"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.fortran_int": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.linalg.linalg.get_linalg_error_extobj": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "list": {
     "line number": [
      102
     ]
    },
    "numpy.linalg.linalg._linalg_error_extobj": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.geterrobj": {
  "data": {
   "shadows": "numpy.core.geterrobj"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.inexact": {
  "data": {
   "shadows": "numpy.core.inexact"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.intc": {
  "data": {
   "shadows": "numpy.core.intc"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.inv": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "numpy.core.empty_like": {
     "line number": [
      516
     ]
    },
    "numpy.linalg._umath_linalg.inv": {
     "line number": [
      520
     ]
    },
    "numpy.linalg.linalg._assertNdSquareness": {
     "line number": [
      511
     ]
    },
    "numpy.linalg.linalg._assertRankAtLeast2": {
     "line number": [
      510
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      512
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      509
     ]
    },
    "numpy.linalg.linalg._raise_linalgerror_singular": {
     "line number": [
      519
     ]
    },
    "numpy.linalg.linalg.get_linalg_error_extobj": {
     "line number": [
      519
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      518
     ]
    },
    "wrap": {
     "line number": [
      509,
      516,
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.isComplexType": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      112
     ]
    },
    "numpy.core.complexfloating": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.isfinite": {
  "data": {
   "shadows": "numpy.core.isfinite"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.lapack_lite": {
  "data": {
   "shadows": "numpy.linalg.lapack_lite"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.longdouble": {
  "data": {
   "shadows": "numpy.core.longdouble"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.lstsq": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1837
     ]
    },
    "int": {
     "line number": [
      1837,
      1846,
      1853,
      1864
     ]
    },
    "lapack_routine": {
     "line number": [
      1840,
      1844,
      1856,
      1859,
      1862,
      1866
     ]
    },
    "len": {
     "line number": [
      1819
     ]
    },
    "max": {
     "line number": [
      1826,
      1837
     ]
    },
    "min": {
     "line number": [
      1836,
      1837,
      1838,
      1838,
      1890
     ]
    },
    "numpy.core.abs": {
     "line number": [
      1846,
      1875,
      1884
     ]
    },
    "numpy.core.array": {
     "line number": [
      1870,
      1872,
      1875,
      1878,
      1881
     ]
    },
    "numpy.core.newaxis": {
     "line number": [
      1821
     ]
    },
    "numpy.core.ravel": {
     "line number": [
      1872,
      1875,
      1878
     ]
    },
    "numpy.core.sum": {
     "line number": [
      1875,
      1878,
      1884,
      1887
     ]
    },
    "numpy.core.transpose": {
     "line number": [
      1881,
      1884,
      1887
     ]
    },
    "numpy.core.zeros": {
     "line number": [
      1832,
      1836,
      1838,
      1842,
      1843,
      1847,
      1848,
      1849,
      1854,
      1855,
      1861,
      1865
     ]
    },
    "numpy.linalg.lapack_lite.dgelsd": {
     "line number": [
      1850,
      1859
     ]
    },
    "numpy.linalg.lapack_lite.zgelsd": {
     "line number": [
      1840
     ]
    },
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      1828,
      1869
     ]
    },
    "numpy.linalg.linalg._assertRank2": {
     "line number": [
      1822
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      1829
     ]
    },
    "numpy.linalg.linalg._fastCopyAndTranspose": {
     "line number": [
      1834
     ]
    },
    "numpy.linalg.linalg._linalgRealType": {
     "line number": [
      1831
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      1817,
      1818
     ]
    },
    "numpy.linalg.linalg._realType": {
     "line number": [
      1830
     ]
    },
    "numpy.linalg.linalg._to_native_byte_order": {
     "line number": [
      1835
     ]
    },
    "numpy.linalg.linalg.fortran_int": {
     "line number": [
      1838
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      1839,
      1874,
      1883
     ]
    },
    "numpy.linalg.linalg.math": {
     "line number": [
      1837
     ]
    },
    "wrap": {
     "line number": [
      1818,
      1891,
      1891
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.matrix_power": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.matrix_power"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.matrix_rank": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1508
     ]
    },
    "int": {
     "line number": [
      1510
     ]
    },
    "max": {
     "line number": [
      1513
     ]
    },
    "numpy.core.all": {
     "line number": [
      1510
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      1506
     ]
    },
    "numpy.core.finfo": {
     "line number": [
      1513
     ]
    },
    "numpy.core.sum": {
     "line number": [
      1514
     ]
    },
    "numpy.linalg.linalg.svd": {
     "line number": [
      1511
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.maximum": {
  "data": {
   "shadows": "numpy.core.maximum"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.multiply": {
  "data": {
   "shadows": "numpy.core.multiply"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.newaxis": {
  "data": {
   "shadows": "numpy.core.newaxis"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.norm": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2083
     ]
    },
    "ValueError": {
     "line number": [
      2084,
      2102,
      2105,
      2129,
      2131
     ]
    },
    "isinstance": {
     "line number": [
      2062
     ]
    },
    "len": {
     "line number": [
      2065,
      2099
     ]
    },
    "numpy.core.Inf": {
     "line number": [
      2066,
      2068,
      2114,
      2122
     ]
    },
    "numpy.core.abs": {
     "line number": [
      2067,
      2069,
      2075,
      2089,
      2093,
      2096,
      2113,
      2117,
      2121,
      2125
     ]
    },
    "numpy.core.add.reduce": {
     "line number": [
      2056,
      2075,
      2079,
      2098,
      2113,
      2117,
      2121,
      2125,
      2127
     ]
    },
    "numpy.core.amax": {
     "line number": [
      2107
     ]
    },
    "numpy.core.amin": {
     "line number": [
      2109
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      2052
     ]
    },
    "numpy.core.longdouble": {
     "line number": [
      2085
     ]
    },
    "numpy.core.sqrt": {
     "line number": [
      2056,
      2079,
      2127
     ]
    },
    "numpy.lib.asfarray": {
     "line number": [
      2091
     ]
    },
    "numpy.linalg.linalg._multi_svd_norm": {
     "line number": [
      2107,
      2109
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      2091
     ]
    },
    "ord": {
     "line number": [
      2055,
      2066,
      2068,
      2070,
      2073,
      2076,
      2076,
      2082,
      2097,
      2098,
      2106,
      2108,
      2110,
      2114,
      2118,
      2122,
      2126
     ]
    },
    "range": {
     "line number": [
      2061
     ]
    },
    "tuple": {
     "line number": [
      2061,
      2062
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.pinv": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": {
    "min": {
     "line number": [
      1589
     ]
    },
    "numpy.core.dot": {
     "line number": [
      1594
     ]
    },
    "numpy.core.maximum.reduce": {
     "line number": [
      1588
     ]
    },
    "numpy.core.multiply": {
     "line number": [
      1594
     ]
    },
    "numpy.core.newaxis": {
     "line number": [
      1594
     ]
    },
    "numpy.core.transpose": {
     "line number": [
      1594,
      1594
     ]
    },
    "numpy.linalg.linalg._assertNoEmpty2d": {
     "line number": [
      1583
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      1582
     ]
    },
    "numpy.linalg.linalg.svd": {
     "line number": [
      1585
     ]
    },
    "range": {
     "line number": [
      1589
     ]
    },
    "wrap": {
     "line number": [
      1582,
      1595
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.product": {
  "data": {
   "shadows": "numpy.core.product"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.qr": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      729,
      733
     ]
    },
    "ValueError": {
     "line number": [
      736
     ]
    },
    "int": {
     "line number": [
      762,
      805
     ]
    },
    "lapack_routine": {
     "line number": [
      757,
      764,
      791,
      794,
      800,
      807
     ]
    },
    "min": {
     "line number": [
      745
     ]
    },
    "numpy.core.abs": {
     "line number": [
      762,
      805
     ]
    },
    "numpy.core.empty": {
     "line number": [
      784,
      787
     ]
    },
    "numpy.core.zeros": {
     "line number": [
      746,
      756,
      763,
      799,
      806
     ]
    },
    "numpy.lib.triu": {
     "line number": [
      771,
      814
     ]
    },
    "numpy.linalg.lapack_lite.dgeqrf": {
     "line number": [
      751
     ]
    },
    "numpy.linalg.lapack_lite.dorgqr": {
     "line number": [
      794
     ]
    },
    "numpy.linalg.lapack_lite.zgeqrf": {
     "line number": [
      748
     ]
    },
    "numpy.linalg.lapack_lite.zungqr": {
     "line number": [
      791
     ]
    },
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      759,
      766,
      802,
      809
     ]
    },
    "numpy.linalg.linalg._assertNoEmpty2d": {
     "line number": [
      740
     ]
    },
    "numpy.linalg.linalg._assertRank2": {
     "line number": [
      739
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      742
     ]
    },
    "numpy.linalg.linalg._fastCopyAndTranspose": {
     "line number": [
      743,
      770,
      811,
      812
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      738
     ]
    },
    "numpy.linalg.linalg._to_native_byte_order": {
     "line number": [
      744
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      747,
      790
     ]
    },
    "numpy.linalg.linalg.warnings": {
     "line number": [
      729,
      733
     ]
    },
    "wrap": {
     "line number": [
      738,
      771,
      779,
      814,
      814
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.ravel": {
  "data": {
   "shadows": "numpy.core.ravel"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.rollaxis": {
  "data": {
   "shadows": "numpy.core.rollaxis"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.single": {
  "data": {
   "shadows": "numpy.core.single"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.size": {
  "data": {
   "shadows": "numpy.core.size"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.slogdet": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": {
    "numpy.core.asarray": {
     "line number": [
      1669
     ]
    },
    "numpy.linalg._umath_linalg.slogdet": {
     "line number": [
      1676
     ]
    },
    "numpy.linalg.linalg._assertNdSquareness": {
     "line number": [
      1672
     ]
    },
    "numpy.linalg.linalg._assertNoEmpty2d": {
     "line number": [
      1670
     ]
    },
    "numpy.linalg.linalg._assertRankAtLeast2": {
     "line number": [
      1671
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      1673
     ]
    },
    "numpy.linalg.linalg._realType": {
     "line number": [
      1674
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      1675
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.solve": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "gufunc": {
     "line number": [
      381
     ]
    },
    "numpy.core.broadcast": {
     "line number": [
      366,
      374
     ]
    },
    "numpy.core.empty": {
     "line number": [
      367,
      375
     ]
    },
    "numpy.linalg._umath_linalg.solve": {
     "line number": [
      377
     ]
    },
    "numpy.linalg._umath_linalg.solve1": {
     "line number": [
      369
     ]
    },
    "numpy.linalg.linalg._assertNdSquareness": {
     "line number": [
      355
     ]
    },
    "numpy.linalg.linalg._assertRankAtLeast2": {
     "line number": [
      354
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      357
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      353,
      356
     ]
    },
    "numpy.linalg.linalg._raise_linalgerror_singular": {
     "line number": [
      380
     ]
    },
    "numpy.linalg.linalg.get_linalg_error_extobj": {
     "line number": [
      380
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      379
     ]
    },
    "wrap": {
     "line number": [
      356,
      367,
      375,
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.sqrt": {
  "data": {
   "shadows": "numpy.core.sqrt"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.sum": {
  "data": {
   "shadows": "numpy.core.sum"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.svd": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": {
    "gufunc": {
     "line number": [
      1317,
      1319,
      1322,
      1324,
      1327,
      1334,
      1336,
      1339
     ]
    },
    "numpy.linalg._umath_linalg.svd_m": {
     "line number": [
      1334
     ]
    },
    "numpy.linalg._umath_linalg.svd_m_f": {
     "line number": [
      1317
     ]
    },
    "numpy.linalg._umath_linalg.svd_m_s": {
     "line number": [
      1322
     ]
    },
    "numpy.linalg._umath_linalg.svd_n": {
     "line number": [
      1336
     ]
    },
    "numpy.linalg._umath_linalg.svd_n_f": {
     "line number": [
      1319
     ]
    },
    "numpy.linalg._umath_linalg.svd_n_s": {
     "line number": [
      1324
     ]
    },
    "numpy.linalg.linalg._assertNoEmpty2d": {
     "line number": [
      1306
     ]
    },
    "numpy.linalg.linalg._assertRankAtLeast2": {
     "line number": [
      1307
     ]
    },
    "numpy.linalg.linalg._commonType": {
     "line number": [
      1308
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      1305
     ]
    },
    "numpy.linalg.linalg._raise_linalgerror_svd_nonconvergence": {
     "line number": [
      1310
     ]
    },
    "numpy.linalg.linalg._realType": {
     "line number": [
      1329,
      1340
     ]
    },
    "numpy.linalg.linalg.get_linalg_error_extobj": {
     "line number": [
      1310
     ]
    },
    "numpy.linalg.linalg.isComplexType": {
     "line number": [
      1326,
      1338
     ]
    },
    "wrap": {
     "line number": [
      1305,
      1331,
      1331
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.tensorinv": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      447
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      439
     ]
    },
    "numpy.linalg.linalg.inv": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.tensorsolve": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "list": {
     "line number": [
      279
     ]
    },
    "numpy.core.asarray": {
     "line number": [
      275
     ]
    },
    "numpy.linalg.linalg._makearray": {
     "line number": [
      274
     ]
    },
    "numpy.linalg.linalg.solve": {
     "line number": [
      292
     ]
    },
    "range": {
     "line number": [
      279
     ]
    },
    "wrap": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.linalg.transpose": {
  "data": {
   "shadows": "numpy.core.transpose"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.triu": {
  "data": {
   "shadows": "numpy.lib.triu"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.zeros": {
  "data": {
   "shadows": "numpy.core.zeros"
  },
  "type": "import"
 },
 "numpy.linalg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      54
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      56
     ]
    },
    "numpy.linalg.setup.configuration": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.linalg.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.linalg.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      9
     ]
    },
    "numpy.distutils.system_info.get_info": {
     "line number": [
      26
     ]
    },
    "numpy.linalg.setup.os": {
     "line number": [
      17,
      18,
      19,
      20,
      21,
      22,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.setup.configuration.get_lapack_lite_sources": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.linalg.setup.sys": {
     "line number": [
      32
     ]
    },
    "print": {
     "line number": [
      29,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.setup.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "numpy.linalg.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.linalg.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.linalg.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.linalg.test": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_build": {
  "data": {},
  "type": "module"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "object": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      20
     ]
    },
    "RuntimeError": {
     "line number": [
      21
     ]
    },
    "subprocess.PIPE": {
     "line number": [
      18,
      18
     ]
    },
    "subprocess.Popen": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.get_dependencies": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      27
     ]
    },
    "subprocess.PIPE": {
     "line number": [
      24,
      24
     ]
    },
    "subprocess.Popen": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.grep_dependencies": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      34
     ]
    },
    "numpy.linalg.tests.test_build.re": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.TestF77Mismatch": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_build.TestF77Mismatch.test_lapack": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "len": {
     "line number": [
      50
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      49
     ]
    },
    "numpy.linalg.lapack_lite.__file__": {
     "line number": [
      48
     ]
    },
    "numpy.linalg.tests.test_build.FindDependenciesLdd": {
     "line number": [
      47
     ]
    },
    "numpy.linalg.tests.test_build.sys": {
     "line number": [
      44
     ]
    },
    "numpy.testing.dec.skipif": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.asbytes_nested": {
  "data": {
   "shadows": "numpy.compat.asbytes_nested"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.call": {
  "data": {
   "shadows": "subprocess.call"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.lapack_lite": {
  "data": {
   "shadows": "numpy.linalg.lapack_lite"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      23
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.linalg.tests.test_deprecations.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations.test_qr_mode_full_future_warning": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      17,
      18,
      19,
      20
     ]
    },
    "numpy.eye": {
     "line number": [
      16
     ]
    },
    "numpy.linalg.qr": {
     "line number": [
      17,
      18,
      19,
      20
     ]
    },
    "numpy.testing.assert_warns": {
     "line number": [
      17,
      18,
      19,
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1152
     ]
    },
    "isinstance": {
     "line number": [
      208
     ]
    },
    "numpy.array": {
     "line number": [
      84,
      85,
      87,
      88,
      90,
      91,
      93,
      94,
      96,
      97,
      99,
      100,
      102,
      103,
      115,
      124,
      125,
      127,
      128,
      130,
      131,
      133,
      134,
      136,
      137,
      139,
      140,
      142,
      143,
      145,
      146,
      148,
      149,
      151,
      152,
      166,
      169,
      172,
      175,
      178,
      185,
      211,
      215,
      220,
      224
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      102,
      103,
      178
     ]
    },
    "numpy.cdouble": {
     "line number": [
      96,
      97,
      99,
      100,
      142,
      143,
      145,
      146,
      148,
      149,
      151,
      152,
      175
     ]
    },
    "numpy.csingle": {
     "line number": [
      93,
      94,
      136,
      137,
      139,
      140,
      172
     ]
    },
    "numpy.double": {
     "line number": [
      87,
      88,
      90,
      91,
      102,
      103,
      130,
      131,
      133,
      134,
      169,
      178
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      104,
      180
     ]
    },
    "numpy.linalg.tests.test_linalg.GENERALIZED_HERMITIAN_CASES": {
     "line number": [
      206,
      285
     ]
    },
    "numpy.linalg.tests.test_linalg.GENERALIZED_NONSQUARE_CASES": {
     "line number": [
      205,
      284
     ]
    },
    "numpy.linalg.tests.test_linalg.GENERALIZED_SQUARE_CASES": {
     "line number": [
      204,
      283
     ]
    },
    "numpy.linalg.tests.test_linalg.HERMITIAN_CASES": {
     "line number": [
      206,
      282
     ]
    },
    "numpy.linalg.tests.test_linalg.LinalgCase": {
     "line number": [
      83,
      86,
      89,
      92,
      95,
      98,
      101,
      105,
      108,
      111,
      114,
      117,
      123,
      126,
      129,
      132,
      135,
      138,
      141,
      144,
      147,
      150,
      153,
      156,
      159,
      165,
      168,
      171,
      174,
      177,
      181,
      184,
      187,
      190,
      216,
      225,
      291
     ]
    },
    "numpy.linalg.tests.test_linalg.NONSQUARE_CASES": {
     "line number": [
      205,
      281
     ]
    },
    "numpy.linalg.tests.test_linalg.SQUARE_CASES": {
     "line number": [
      204,
      280
     ]
    },
    "numpy.linalg.tests.test_linalg._stride_comb_iter": {
     "line number": [
      289,
      290
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      216,
      225,
      289,
      291
     ]
    },
    "numpy.linalg.tests.test_linalg.b": {
     "line number": [
      216,
      225,
      290,
      291
     ]
    },
    "numpy.linalg.tests.test_linalg.new_case": {
     "line number": [
      218,
      227,
      293
     ]
    },
    "numpy.linalg.tests.test_linalg.new_cases": {
     "line number": [
      293,
      294
     ]
    },
    "numpy.matrix": {
     "line number": [
      116,
      118,
      119,
      188
     ]
    },
    "numpy.ndarray": {
     "line number": [
      208
     ]
    },
    "numpy.random.rand": {
     "line number": [
      106,
      107,
      109,
      110,
      154,
      155,
      157,
      158,
      160,
      161,
      191
     ]
    },
    "numpy.random.seed": {
     "line number": [
      80
     ]
    },
    "numpy.single": {
     "line number": [
      84,
      85,
      124,
      125,
      127,
      128,
      166
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      31
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      1153
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.linalg.tests.test_linalg.GENERALIZED_HERMITIAN_CASES": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.GENERALIZED_NONSQUARE_CASES": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.GENERALIZED_SQUARE_CASES": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.HERMITIAN_CASES": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "object": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase.test_generalized_herm_cases": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.GENERALIZED_HERMITIAN_CASES": {
     "line number": [
      340
     ]
    },
    "numpy.linalg.tests.test_linalg._check_cases": {
     "line number": [
      340
     ]
    },
    "numpy.testing.dec.slow": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.HermitianTestCase": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "object": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.HermitianTestCase.test_herm_cases": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.HERMITIAN_CASES": {
     "line number": [
      334
     ]
    },
    "numpy.linalg.tests.test_linalg._check_cases": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "object": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      60
     ]
    },
    "str": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase.__repr__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase.check": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "do": {
     "line number": [
      68,
      70
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedNonsquareTestCase": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "object": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedNonsquareTestCase.test_generalized_nonsq_cases": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.GENERALIZED_NONSQUARE_CASES": {
     "line number": [
      329
     ]
    },
    "numpy.linalg.tests.test_linalg._check_cases": {
     "line number": [
      329
     ]
    },
    "numpy.testing.dec.slow": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedTestCase": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "object": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedTestCase.test_generalized_sq_cases": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.GENERALIZED_SQUARE_CASES": {
     "line number": [
      323
     ]
    },
    "numpy.linalg.tests.test_linalg._check_cases": {
     "line number": [
      323
     ]
    },
    "numpy.testing.dec.slow": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "object": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase.test_sq_cases": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.NONSQUARE_CASES": {
     "line number": [
      317
     ]
    },
    "numpy.linalg.tests.test_linalg._check_cases": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgTestCase": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "object": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgTestCase.test_sq_cases": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.SQUARE_CASES": {
     "line number": [
      312
     ]
    },
    "numpy.linalg.tests.test_linalg._check_cases": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.NONSQUARE_CASES": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.SQUARE_CASES": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.TestBoolPower": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": {
    "object": {
     "line number": [
      680
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestBoolPower.test_square": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      682
     ]
    },
    "numpy.linalg.matrix_power": {
     "line number": [
      683
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCond2": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.LinalgTestCase": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCond2.do": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      540
     ]
    },
    "numpy.linalg.cond": {
     "line number": [
      542
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      541
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      540,
      542
     ]
    },
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal": {
     "line number": [
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCondInf": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "object": {
     "line number": [
      545
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCondInf.test": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      547
     ]
    },
    "numpy.inf": {
     "line number": [
      548
     ]
    },
    "numpy.linalg.cond": {
     "line number": [
      548
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCondSVD": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedTestCase": {
     "line number": [
      531
     ]
    },
    "numpy.linalg.tests.test_linalg.LinalgTestCase": {
     "line number": [
      531
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCondSVD.do": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      533
     ]
    },
    "numpy.linalg.cond": {
     "line number": [
      535
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      534
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      533,
      535
     ]
    },
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal": {
     "line number": [
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedTestCase": {
     "line number": [
      558
     ]
    },
    "numpy.linalg.tests.test_linalg.LinalgTestCase": {
     "line number": [
      558
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestDet.do": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      573
     ]
    },
    "numpy.asarray": {
     "line number": [
      562,
      563,
      565
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      570,
      571
     ]
    },
    "numpy.cdouble": {
     "line number": [
      565
     ]
    },
    "numpy.double": {
     "line number": [
      562,
      563
     ]
    },
    "numpy.exp": {
     "line number": [
      568
     ]
    },
    "numpy.inf": {
     "line number": [
      574
     ]
    },
    "numpy.linalg.det": {
     "line number": [
      560
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      566
     ]
    },
    "numpy.linalg.slogdet": {
     "line number": [
      561
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      560,
      561,
      562,
      563,
      565
     ]
    },
    "numpy.multiply.reduce": {
     "line number": [
      567,
      568
     ]
    },
    "numpy.single": {
     "line number": [
      562
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      567,
      568,
      573
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      574
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet.test_types": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      596
     ]
    },
    "numpy.csingle": {
     "line number": [
      596
     ]
    },
    "numpy.double": {
     "line number": [
      596
     ]
    },
    "numpy.single": {
     "line number": [
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet.test_types.check": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      591
     ]
    },
    "numpy.linalg.det": {
     "line number": [
      592
     ]
    },
    "numpy.linalg.slogdet": {
     "line number": [
      593
     ]
    },
    "numpy.linalg.tests.test_linalg.get_real_dtype": {
     "line number": [
      594
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      592,
      594,
      595
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet.test_zero": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      580,
      586
     ]
    },
    "numpy.double": {
     "line number": [
      578,
      583,
      584,
      587
     ]
    },
    "numpy.inf": {
     "line number": [
      582,
      585
     ]
    },
    "numpy.linalg.det": {
     "line number": [
      577,
      578,
      579,
      580
     ]
    },
    "numpy.linalg.slogdet": {
     "line number": [
      582,
      583,
      584,
      585,
      586,
      587
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      577,
      578,
      579,
      580,
      582,
      583,
      584,
      585,
      586,
      587
     ]
    },
    "type": {
     "line number": [
      578,
      580,
      583,
      584,
      586,
      587
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEig": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedTestCase": {
     "line number": [
      484
     ]
    },
    "numpy.linalg.tests.test_linalg.LinalgTestCase": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEig.do": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      490,
      490
     ]
    },
    "numpy.asarray": {
     "line number": [
      488,
      488
     ]
    },
    "numpy.linalg.eig": {
     "line number": [
      486
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      486,
      487,
      490
     ]
    },
    "numpy.linalg.tests.test_linalg.dot_generalized": {
     "line number": [
      487
     ]
    },
    "numpy.linalg.tests.test_linalg.get_rtol": {
     "line number": [
      489
     ]
    },
    "numpy.linalg.tests.test_linalg.imply": {
     "line number": [
      490
     ]
    },
    "numpy.matrix": {
     "line number": [
      490,
      490
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      490
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEig.test_types": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      504
     ]
    },
    "numpy.csingle": {
     "line number": [
      504
     ]
    },
    "numpy.double": {
     "line number": [
      504
     ]
    },
    "numpy.single": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEig.test_types.check": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      494,
      499
     ]
    },
    "numpy.linalg.eig": {
     "line number": [
      495,
      500
     ]
    },
    "numpy.linalg.tests.test_linalg.get_complex_dtype": {
     "line number": [
      501,
      502
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      496,
      497,
      501,
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase": {
     "line number": [
      739
     ]
    },
    "numpy.linalg.tests.test_linalg.HermitianTestCase": {
     "line number": [
      739
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.do": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      750,
      750,
      758,
      758
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      743,
      744,
      749,
      753,
      757,
      759
     ]
    },
    "numpy.linalg.tests.test_linalg.dot_generalized": {
     "line number": [
      749,
      757
     ]
    },
    "numpy.linalg.tests.test_linalg.get_rtol": {
     "line number": [
      751,
      759
     ]
    },
    "numpy.linalg.tests.test_linalg.numpy.linalg": {
     "line number": [
      743,
      744,
      753
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      749,
      757
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      747,
      755
     ]
    },
    "repr": {
     "line number": [
      759
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_UPLO": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      777,
      778,
      779
     ]
    },
    "numpy.double": {
     "line number": [
      777,
      778,
      779,
      780
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      783,
      786,
      789,
      792,
      795
     ]
    },
    "numpy.linalg.tests.test_linalg.get_rtol": {
     "line number": [
      780
     ]
    },
    "numpy.sort": {
     "line number": [
      784,
      787,
      790,
      793,
      796
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      784,
      787,
      790,
      793,
      796
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_invalid": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      772,
      773,
      774
     ]
    },
    "numpy.array": {
     "line number": [
      771
     ]
    },
    "numpy.float32": {
     "line number": [
      771
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      772,
      773,
      774
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      772,
      773,
      774
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_types": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      767
     ]
    },
    "numpy.csingle": {
     "line number": [
      767
     ]
    },
    "numpy.double": {
     "line number": [
      767
     ]
    },
    "numpy.single": {
     "line number": [
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_types.check": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      763
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      764
     ]
    },
    "numpy.linalg.tests.test_linalg.get_real_dtype": {
     "line number": [
      765
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      765,
      766
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedTestCase": {
     "line number": [
      468
     ]
    },
    "numpy.linalg.tests.test_linalg.LinalgTestCase": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.do": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "numpy.linalg.eig": {
     "line number": [
      471
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      470
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      470,
      471
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      472
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.test_types": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      480
     ]
    },
    "numpy.csingle": {
     "line number": [
      480
     ]
    },
    "numpy.double": {
     "line number": [
      480
     ]
    },
    "numpy.single": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.test_types.check": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      476,
      478
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      477,
      479
     ]
    },
    "numpy.linalg.tests.test_linalg.get_complex_dtype": {
     "line number": [
      479
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      477,
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase": {
     "line number": [
      686
     ]
    },
    "numpy.linalg.tests.test_linalg.HermitianTestCase": {
     "line number": [
      686
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.do": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      690,
      691,
      697
     ]
    },
    "numpy.linalg.tests.test_linalg.get_rtol": {
     "line number": [
      695,
      700
     ]
    },
    "numpy.linalg.tests.test_linalg.numpy.linalg": {
     "line number": [
      690,
      691,
      697
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      694,
      699
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_UPLO": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      717,
      718,
      719
     ]
    },
    "numpy.double": {
     "line number": [
      717,
      718,
      719,
      720
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      723,
      726,
      729,
      732,
      735
     ]
    },
    "numpy.linalg.tests.test_linalg.get_rtol": {
     "line number": [
      720
     ]
    },
    "numpy.sort": {
     "line number": [
      724,
      727,
      730,
      733,
      736
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      724,
      727,
      730,
      733,
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_invalid": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      712,
      713,
      714
     ]
    },
    "numpy.array": {
     "line number": [
      711
     ]
    },
    "numpy.float32": {
     "line number": [
      711
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      712,
      713,
      714
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      712,
      713,
      714
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_types": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      707
     ]
    },
    "numpy.csingle": {
     "line number": [
      707
     ]
    },
    "numpy.double": {
     "line number": [
      707
     ]
    },
    "numpy.single": {
     "line number": [
      707
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_types.check": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      704
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      705
     ]
    },
    "numpy.linalg.tests.test_linalg.get_real_dtype": {
     "line number": [
      706
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      706
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestInv": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedTestCase": {
     "line number": [
      438
     ]
    },
    "numpy.linalg.tests.test_linalg.LinalgTestCase": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestInv.do": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      443,
      443
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      440
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      440,
      441,
      442,
      443
     ]
    },
    "numpy.linalg.tests.test_linalg.dot_generalized": {
     "line number": [
      441
     ]
    },
    "numpy.linalg.tests.test_linalg.identity_like_generalized": {
     "line number": [
      442
     ]
    },
    "numpy.linalg.tests.test_linalg.imply": {
     "line number": [
      443
     ]
    },
    "numpy.matrix": {
     "line number": [
      443,
      443
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      443
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_0_size": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      460
     ]
    },
    "numpy.complex64": {
     "line number": [
      462,
      464
     ]
    },
    "numpy.float64": {
     "line number": [
      458
     ]
    },
    "numpy.int_": {
     "line number": [
      456
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      457,
      463
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      456,
      457,
      459,
      460,
      462,
      463,
      465
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      458,
      460,
      464
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      459,
      465
     ]
    },
    "numpy.zeros": {
     "line number": [
      456,
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_0_size.ArraySubclass": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_types": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      449
     ]
    },
    "numpy.csingle": {
     "line number": [
      449
     ]
    },
    "numpy.double": {
     "line number": [
      449
     ]
    },
    "numpy.single": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_types.check": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      447
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      448
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestLstsq": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase": {
     "line number": [
      600
     ]
    },
    "numpy.linalg.tests.test_linalg.LinalgTestCase": {
     "line number": [
      600
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestLstsq.do": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      613
     ]
    },
    "isinstance": {
     "line number": [
      622,
      622,
      623,
      623
     ]
    },
    "len": {
     "line number": [
      615
     ]
    },
    "numpy.array": {
     "line number": [
      619
     ]
    },
    "numpy.asarray": {
     "line number": [
      602,
      613,
      614,
      615
     ]
    },
    "numpy.dot": {
     "line number": [
      607,
      613
     ]
    },
    "numpy.floating": {
     "line number": [
      621
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      621
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      605
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      604
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      602,
      604,
      605,
      607,
      613
     ]
    },
    "numpy.linalg.tests.test_linalg.b": {
     "line number": [
      605,
      607,
      613,
      615,
      622,
      623
     ]
    },
    "numpy.linalg.tests.test_linalg.imply": {
     "line number": [
      622,
      623
     ]
    },
    "numpy.matrix": {
     "line number": [
      622,
      622,
      623,
      623
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      621,
      622,
      623
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      607,
      611,
      620
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      608,
      610,
      617
     ]
    },
    "type": {
     "line number": [
      619
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      627,
      628,
      629,
      630
     ]
    },
    "numpy.identity": {
     "line number": [
      632
     ]
    },
    "object": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_invert_noninvertible": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": {
    "numpy.linalg.linalg.LinAlgError": {
     "line number": [
      676
     ]
    },
    "numpy.linalg.matrix_power": {
     "line number": [
      677
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      676
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_large_power": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": {
    "numpy.linalg.matrix_power": {
     "line number": [
      638
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      638
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_large_power_trailing_zero": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": {
    "numpy.identity": {
     "line number": [
      641
     ]
    },
    "numpy.linalg.matrix_power": {
     "line number": [
      641
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_invert": {
  "data": {
   "lineno": 667
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_invert.tz": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      670
     ]
    },
    "numpy.identity": {
     "line number": [
      670
     ]
    },
    "numpy.linalg.matrix_power": {
     "line number": [
      669
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      670
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_one": {
  "data": {
   "lineno": 651
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_one.tz": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "numpy.linalg.matrix_power": {
     "line number": [
      653
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      654,
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_two": {
  "data": {
   "lineno": 659
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_two.tz": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      662
     ]
    },
    "numpy.linalg.matrix_power": {
     "line number": [
      661
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      662,
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_zero": {
  "data": {
   "lineno": 643
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_zero.tz": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": {
    "numpy.identity": {
     "line number": [
      646
     ]
    },
    "numpy.linalg.matrix_power": {
     "line number": [
      645
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      646,
      647
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixRank": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": {
    "object": {
     "line number": [
      952
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixRank.test_matrix_rank": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      967
     ]
    },
    "numpy.eye": {
     "line number": [
      955,
      957
     ]
    },
    "numpy.linalg.matrix_rank": {
     "line number": [
      955,
      958,
      960,
      962,
      963,
      965,
      967,
      969
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      955,
      958,
      960,
      962,
      963,
      965,
      969
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      967
     ]
    },
    "numpy.zeros": {
     "line number": [
      960,
      963,
      967
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestNormDouble": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": {
    "numpy.double": {
     "line number": [
      938
     ]
    },
    "numpy.linalg.tests.test_linalg._TestNorm": {
     "line number": [
      937
     ]
    },
    "numpy.testing.dec": {
     "line number": [
      939
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestNormInt64": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      948
     ]
    },
    "numpy.linalg.tests.test_linalg._TestNorm": {
     "line number": [
      947
     ]
    },
    "numpy.testing.dec": {
     "line number": [
      949
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestNormSingle": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      943
     ]
    },
    "numpy.linalg.tests.test_linalg._TestNorm": {
     "line number": [
      942
     ]
    },
    "numpy.testing.dec": {
     "line number": [
      944
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestPinv": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.LinalgTestCase": {
     "line number": [
      551
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestPinv.do": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      555,
      555
     ]
    },
    "numpy.asarray": {
     "line number": [
      554
     ]
    },
    "numpy.dot": {
     "line number": [
      554
     ]
    },
    "numpy.identity": {
     "line number": [
      554
     ]
    },
    "numpy.linalg.pinv": {
     "line number": [
      553
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      553,
      554,
      554,
      555
     ]
    },
    "numpy.linalg.tests.test_linalg.imply": {
     "line number": [
      555
     ]
    },
    "numpy.matrix": {
     "line number": [
      555,
      555
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      555
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": {
    "object": {
     "line number": [
      985
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestQR.check_qr": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      999,
      1000,
      1011,
      1012,
      1022
     ]
    },
    "min": {
     "line number": [
      993
     ]
    },
    "numpy.dot": {
     "line number": [
      1003,
      1004,
      1015,
      1016
     ]
    },
    "numpy.eye": {
     "line number": [
      1004,
      1016
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      990,
      991,
      992,
      996,
      1003,
      1008,
      1015,
      1020
     ]
    },
    "numpy.linalg.tests.test_linalg.numpy.linalg": {
     "line number": [
      996,
      1008,
      1020
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      997,
      998,
      999,
      1000,
      1001,
      1002,
      1009,
      1010,
      1011,
      1012,
      1013,
      1014,
      1021,
      1022
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1003,
      1004,
      1005,
      1015,
      1016,
      1017,
      1023
     ]
    },
    "numpy.triu": {
     "line number": [
      1005,
      1017
     ]
    },
    "type": {
     "line number": [
      990
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR.test_mode_all_but_economic": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1053,
      1054
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      1053,
      1056,
      1063
     ]
    },
    "numpy.linalg.tests.test_linalg.b": {
     "line number": [
      1054,
      1057,
      1064
     ]
    },
    "numpy.matrix": {
     "line number": [
      1061,
      1068
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR.test_mode_raw": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1036
     ]
    },
    "numpy.double": {
     "line number": [
      1036,
      1041,
      1042,
      1047,
      1048
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      1036,
      1037,
      1040,
      1046
     ]
    },
    "numpy.linalg.tests.test_linalg.b": {
     "line number": [
      1037
     ]
    },
    "numpy.linalg.tests.test_linalg.numpy.linalg": {
     "line number": [
      1040,
      1046
     ]
    },
    "numpy.single": {
     "line number": [
      1037
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1041,
      1042,
      1043,
      1044,
      1047,
      1048,
      1049,
      1050
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR.test_qr_empty": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      1026,
      1027
     ]
    },
    "numpy.linalg.tests.test_linalg.numpy.linalg": {
     "line number": [
      1027,
      1027
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1027
     ]
    },
    "numpy.zeros": {
     "line number": [
      1026
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSVD": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedTestCase": {
     "line number": [
      508
     ]
    },
    "numpy.linalg.tests.test_linalg.LinalgTestCase": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSVD.do": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      514,
      514,
      515,
      515
     ]
    },
    "numpy.asarray": {
     "line number": [
      511,
      511,
      512
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      510
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      510,
      511,
      514,
      515
     ]
    },
    "numpy.linalg.tests.test_linalg.dot_generalized": {
     "line number": [
      511
     ]
    },
    "numpy.linalg.tests.test_linalg.get_rtol": {
     "line number": [
      513
     ]
    },
    "numpy.linalg.tests.test_linalg.imply": {
     "line number": [
      514,
      515
     ]
    },
    "numpy.matrix": {
     "line number": [
      514,
      514,
      515,
      515
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      514,
      515
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSVD.test_types": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      527
     ]
    },
    "numpy.csingle": {
     "line number": [
      527
     ]
    },
    "numpy.double": {
     "line number": [
      527
     ]
    },
    "numpy.single": {
     "line number": [
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSVD.test_types.check": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      519
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      520,
      524
     ]
    },
    "numpy.linalg.tests.test_linalg.get_real_dtype": {
     "line number": [
      522,
      525
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      521,
      522,
      523,
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedTestCase": {
     "line number": [
      373
     ]
    },
    "numpy.linalg.tests.test_linalg.LinalgTestCase": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.do": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      377,
      377
     ]
    },
    "numpy.linalg.solve": {
     "line number": [
      375
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      375,
      376
     ]
    },
    "numpy.linalg.tests.test_linalg.b": {
     "line number": [
      375,
      376,
      377
     ]
    },
    "numpy.linalg.tests.test_linalg.dot_generalized": {
     "line number": [
      376
     ]
    },
    "numpy.linalg.tests.test_linalg.imply": {
     "line number": [
      377
     ]
    },
    "numpy.matrix": {
     "line number": [
      377,
      377
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      377
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      400,
      404,
      405,
      415,
      416,
      417
     ]
    },
    "isinstance": {
     "line number": [
      396,
      412
     ]
    },
    "numpy.arange": {
     "line number": [
      390,
      391,
      403,
      408,
      414
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      399
     ]
    },
    "numpy.linalg.solve": {
     "line number": [
      393,
      394,
      399,
      400,
      404,
      405,
      409,
      410,
      415,
      416,
      417
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      390,
      393,
      394,
      399,
      400,
      404,
      405,
      409,
      410,
      415,
      416,
      417
     ]
    },
    "numpy.linalg.tests.test_linalg.b": {
     "line number": [
      391,
      393,
      394,
      399,
      400,
      403,
      404,
      405,
      408,
      409,
      410,
      414,
      415,
      416,
      417
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      396,
      412
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      395,
      411
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      399,
      400,
      404,
      405,
      415,
      416,
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size.ArraySubclass": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size_k": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      429,
      435
     ]
    },
    "numpy.arange": {
     "line number": [
      423,
      424
     ]
    },
    "numpy.linalg.solve": {
     "line number": [
      426,
      427,
      432,
      433
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      423,
      426,
      427,
      432,
      433
     ]
    },
    "numpy.linalg.tests.test_linalg.b": {
     "line number": [
      424,
      426,
      427,
      432,
      433
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      429,
      435
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      428,
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size_k.ArraySubclass": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_types": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      383
     ]
    },
    "numpy.csingle": {
     "line number": [
      383
     ]
    },
    "numpy.double": {
     "line number": [
      383
     ]
    },
    "numpy.single": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_types.check": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      381
     ]
    },
    "numpy.linalg.solve": {
     "line number": [
      382
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": {
    "numpy.testing.dec": {
     "line number": [
      802
     ]
    },
    "object": {
     "line number": [
      799
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_axis": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": {
    "numpy.Inf": {
     "line number": [
      859,
      859,
      868,
      868
     ]
    },
    "numpy.arange": {
     "line number": [
      866
     ]
    },
    "numpy.array": {
     "line number": [
      858
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      860,
      861,
      862,
      863,
      869,
      869,
      872,
      873,
      876,
      877,
      880,
      881,
      884,
      885
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      861,
      863,
      869,
      874,
      878,
      882,
      886
     ]
    },
    "range": {
     "line number": [
      860,
      862,
      873,
      877,
      881,
      885
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_bad_args": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      897,
      898,
      903,
      904,
      905,
      908,
      909,
      910
     ]
    },
    "numpy.arange": {
     "line number": [
      892
     ]
    },
    "numpy.array": {
     "line number": [
      891
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      897,
      898,
      903,
      904,
      905,
      908,
      909,
      910
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      897,
      898,
      903,
      904,
      905,
      908,
      909,
      910
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_complex_high_ord": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": {
    "numpy.clongdouble": {
     "line number": [
      926
     ]
    },
    "numpy.complex128": {
     "line number": [
      931
     ]
    },
    "numpy.complex64": {
     "line number": [
      933
     ]
    },
    "numpy.empty": {
     "line number": [
      926
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      930,
      932,
      934
     ]
    },
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal": {
     "line number": [
      930,
      932,
      934
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_empty": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      806,
      807
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      807
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      805,
      806,
      807
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      805,
      806,
      807
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_intmin": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      921
     ]
    },
    "numpy.int32": {
     "line number": [
      921
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      922
     ]
    },
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal": {
     "line number": [
      922
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_longdouble_norm": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      915
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      916
     ]
    },
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal": {
     "line number": [
      916
     ]
    },
    "numpy.longdouble": {
     "line number": [
      915
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_matrix": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      850,
      851,
      852
     ]
    },
    "numpy.inf": {
     "line number": [
      843,
      844
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      841,
      842,
      843,
      844,
      845,
      846,
      847,
      848,
      850,
      851,
      852
     ]
    },
    "numpy.matrix": {
     "line number": [
      840
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      841,
      842,
      843,
      844,
      845,
      846,
      847,
      848
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      850,
      851,
      852
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_vector": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": {
    "_test": {
     "line number": [
      833,
      837
     ]
    },
    "numpy.array": {
     "line number": [
      835,
      835,
      836
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      810,
      832,
      835
     ]
    },
    "numpy.linalg.tests.test_linalg.b": {
     "line number": [
      811,
      832,
      835
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_vector._test": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      817,
      819
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      815,
      817,
      819,
      821,
      823,
      825,
      827,
      829
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      815,
      817,
      819,
      821,
      823,
      825,
      827,
      829
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._check_cases": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      308
     ]
    },
    "Exception": {
     "line number": [
      305
     ]
    },
    "numpy.linalg.tests.test_linalg.traceback": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._stride_comb_iter": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      250
     ]
    },
    "isinstance": {
     "line number": [
      238
     ]
    },
    "list": {
     "line number": [
      264,
      269,
      274
     ]
    },
    "numpy.all": {
     "line number": [
      259
     ]
    },
    "numpy.empty": {
     "line number": [
      254
     ]
    },
    "numpy.lib.stride_tricks.as_strided": {
     "line number": [
      266,
      271,
      277
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      250,
      250
     ]
    },
    "numpy.linalg.tests.test_linalg.b": {
     "line number": [
      250,
      250
     ]
    },
    "numpy.linalg.tests.test_linalg.itertools": {
     "line number": [
      249
     ]
    },
    "numpy.ndarray": {
     "line number": [
      238
     ]
    },
    "numpy.uint32": {
     "line number": [
      255
     ]
    },
    "slice": {
     "line number": [
      251
     ]
    },
    "tuple": {
     "line number": [
      249,
      251
     ]
    },
    "zip": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.a": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.assert_almost_equal": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      35
     ]
    },
    "numpy.csingle": {
     "line number": [
      35
     ]
    },
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal": {
     "line number": [
      39
     ]
    },
    "numpy.single": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.atleast_2d": {
  "data": {
   "shadows": "numpy.atleast_2d"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.b": {
  "data": {
   "lineno": 224
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.cdouble": {
  "data": {
   "shadows": "numpy.cdouble"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.csingle": {
  "data": {
   "shadows": "numpy.csingle"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.dot_generalized": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      353
     ]
    },
    "map": {
     "line number": [
      355
     ]
    },
    "numpy.asarray": {
     "line number": [
      344
     ]
    },
    "numpy.common_type": {
     "line number": [
      354
     ]
    },
    "numpy.dot": {
     "line number": [
      356,
      359
     ]
    },
    "numpy.empty": {
     "line number": [
      354
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      344,
      344,
      345,
      346,
      348,
      349,
      351,
      354,
      355,
      356,
      359
     ]
    },
    "numpy.linalg.tests.test_linalg.b": {
     "line number": [
      346,
      348,
      349,
      354,
      356,
      359
     ]
    },
    "numpy.linalg.tests.test_linalg.itertools": {
     "line number": [
      355
     ]
    },
    "range": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.double": {
  "data": {
   "shadows": "numpy.double"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.get_complex_dtype": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      49,
      48,
      49
     ]
    },
    "numpy.csingle": {
     "line number": [
      49,
      48,
      49
     ]
    },
    "numpy.double": {
     "line number": [
      48
     ]
    },
    "numpy.single": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.get_real_dtype": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.cdouble": {
     "line number": [
      44
     ]
    },
    "numpy.csingle": {
     "line number": [
      44
     ]
    },
    "numpy.double": {
     "line number": [
      43,
      43,
      44
     ]
    },
    "numpy.single": {
     "line number": [
      43,
      43,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.get_rtol": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "numpy.csingle": {
     "line number": [
      53
     ]
    },
    "numpy.single": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.identity": {
  "data": {
   "shadows": "numpy.identity"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.identity_like_generalized": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "map": {
     "line number": [
      366
     ]
    },
    "numpy.asarray": {
     "line number": [
      363
     ]
    },
    "numpy.empty": {
     "line number": [
      365
     ]
    },
    "numpy.identity": {
     "line number": [
      367,
      370
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      363,
      363,
      364,
      365,
      365,
      366,
      367,
      370
     ]
    },
    "numpy.linalg.tests.test_linalg.itertools": {
     "line number": [
      366
     ]
    },
    "range": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.ifthen": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.imply": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.matrix_power": {
  "data": {
   "shadows": "numpy.linalg.matrix_power"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.matrix_rank": {
  "data": {
   "shadows": "numpy.linalg.matrix_rank"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.multiply": {
  "data": {
   "shadows": "numpy.multiply"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.new_case": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.new_cases": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.numpy.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.old_assert_almost_equal": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.resource": {
  "data": {
   "shadows": "resource"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.single": {
  "data": {
   "shadows": "numpy.single"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.test_byteorder_check": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      1079
     ]
    },
    "numpy.float32": {
     "line number": [
      1078
     ]
    },
    "numpy.float64": {
     "line number": [
      1078
     ]
    },
    "numpy.linalg.tests.test_linalg.numpy.linalg": {
     "line number": [
      1083,
      1083,
      1083
     ]
    },
    "numpy.linalg.tests.test_linalg.sys": {
     "line number": [
      1073
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1087,
      1089
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1082
     ]
    },
    "routine": {
     "line number": [
      1085,
      1087,
      1089
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_generalized_raise_multiloop": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1096,
      1097
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      1103
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      1103
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1103
     ]
    },
    "numpy.zeros": {
     "line number": [
      1099
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_reduced_rank": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": {
    "numpy.linalg.matrix_rank": {
     "line number": [
      980,
      982
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      974
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      980,
      982
     ]
    },
    "range": {
     "line number": [
      975
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_xerbla_override": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1113
     ]
    },
    "OSError": {
     "line number": [
      1113
     ]
    },
    "ValueError": {
     "line number": [
      1127,
      1138
     ]
    },
    "nose.SkipTest": {
     "line number": [
      1115,
      1149
     ]
    },
    "numpy.array": {
     "line number": [
      1133
     ]
    },
    "numpy.double": {
     "line number": [
      1135
     ]
    },
    "numpy.intc": {
     "line number": [
      1137
     ]
    },
    "numpy.linalg.lapack_lite.dgetrf": {
     "line number": [
      1134
     ]
    },
    "numpy.linalg.lapack_lite.xerbla": {
     "line number": [
      1126
     ]
    },
    "numpy.linalg.tests.test_linalg.a": {
     "line number": [
      1133,
      1135,
      1137
     ]
    },
    "numpy.linalg.tests.test_linalg.os": {
     "line number": [
      1112,
      1119,
      1120,
      1130,
      1130,
      1141,
      1141,
      1144,
      1144,
      1147,
      1148,
      1148,
      1148
     ]
    },
    "numpy.linalg.tests.test_linalg.resource": {
     "line number": [
      1123,
      1123
     ]
    },
    "str": {
     "line number": [
      1139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      86
     ]
    },
    "run_module_suite": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.linalg.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_eig_build": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      34
     ]
    },
    "numpy.arange": {
     "line number": [
      28
     ]
    },
    "numpy.array": {
     "line number": [
      15
     ]
    },
    "numpy.float64": {
     "line number": [
      28
     ]
    },
    "numpy.linalg.eig": {
     "line number": [
      31
     ]
    },
    "numpy.linalg.tests.test_regression.rlevel": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_eigh_build": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      45
     ]
    },
    "numpy.array": {
     "line number": [
      40
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      44
     ]
    },
    "numpy.linalg.tests.test_regression.rlevel": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_lapack_endian": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      70
     ]
    },
    "numpy.array": {
     "line number": [
      64,
      66
     ]
    },
    "numpy.linalg.cholesky": {
     "line number": [
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_large_svd_32bit": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      74
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_norm_vector_badarg": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      60
     ]
    },
    "numpy.array": {
     "line number": [
      60
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_svd_build": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      55
     ]
    },
    "numpy.array": {
     "line number": [
      49
     ]
    },
    "numpy.dot": {
     "line number": [
      53
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      51
     ]
    },
    "numpy.linalg.tests.test_regression.rlevel": {
     "line number": [
      47
     ]
    },
    "numpy.transpose": {
     "line number": [
      53
     ]
    },
    "numpy.zeros": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_svd_no_uv": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      84
     ]
    },
    "complex": {
     "line number": [
      80
     ]
    },
    "float": {
     "line number": [
      80
     ]
    },
    "numpy.absolute": {
     "line number": [
      83
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      83
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      82
     ]
    },
    "numpy.ones": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.float64": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.rlevel": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_regression.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "numpy.ma": {
  "data": {
   "symbols_in_volume": {
    "numpy.ma.__all__": {
     "line number": [
      53,
      54
     ]
    },
    "numpy.testing.Tester": {
     "line number": [
      57,
      58
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.ma.__all__": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "numpy.ma.__author__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.ma.__date__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.ma.__revision__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.ma.__version__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.ma.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.bench": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "numpy.ma.bench.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.bench.compare_functions_1v": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "locals": {
     "line number": [
      68,
      72
     ]
    },
    "numpy.ma.bench.nmxl": {
     "line number": [
      63
     ]
    },
    "numpy.ma.bench.nmxs": {
     "line number": [
      63
     ]
    },
    "numpy.ma.bench.timer": {
     "line number": [
      68,
      72
     ]
    },
    "numpy.ma.bench.xl": {
     "line number": [
      63
     ]
    },
    "numpy.ma.bench.xs": {
     "line number": [
      63
     ]
    },
    "print": {
     "line number": [
      65,
      66,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.bench.compare_functions_2v": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "locals": {
     "line number": [
      96,
      100
     ]
    },
    "numpy.ma.bench.nmxl": {
     "line number": [
      90
     ]
    },
    "numpy.ma.bench.nmxs": {
     "line number": [
      88
     ]
    },
    "numpy.ma.bench.nmyl": {
     "line number": [
      91
     ]
    },
    "numpy.ma.bench.nmys": {
     "line number": [
      89
     ]
    },
    "numpy.ma.bench.timer": {
     "line number": [
      96,
      100
     ]
    },
    "numpy.ma.bench.xl": {
     "line number": [
      90
     ]
    },
    "numpy.ma.bench.xs": {
     "line number": [
      88
     ]
    },
    "numpy.ma.bench.yl": {
     "line number": [
      91
     ]
    },
    "numpy.ma.bench.ys": {
     "line number": [
      89
     ]
    },
    "print": {
     "line number": [
      93,
      94,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.bench.compare_methods": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "locals": {
     "line number": [
      80,
      84
     ]
    },
    "numpy.ma.bench.nmxl": {
     "line number": [
      76
     ]
    },
    "numpy.ma.bench.nmxs": {
     "line number": [
      76
     ]
    },
    "numpy.ma.bench.timer": {
     "line number": [
      80,
      84
     ]
    },
    "numpy.ma.bench.xl": {
     "line number": [
      76
     ]
    },
    "numpy.ma.bench.xs": {
     "line number": [
      76
     ]
    },
    "print": {
     "line number": [
      77,
      78,
      82
     ]
    },
    "vars": {
     "line number": [
      79,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.bench.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.bench.m1": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.ma.bench.m2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.ma.bench.maskx": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.ma.bench.masky": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmxl": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmxs": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmyl": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmys": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmzl": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmzs": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.ma.bench.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.bench.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.bench.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "numpy.ma.bench.timer": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "int": {
     "line number": [
      51
     ]
    },
    "min": {
     "line number": [
      49,
      51
     ]
    },
    "numpy.ma.bench.numpy": {
     "line number": [
      51,
      51
     ]
    },
    "numpy.ma.bench.timeit": {
     "line number": [
      48
     ]
    },
    "print": {
     "line number": [
      45,
      54
     ]
    },
    "tuple": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.bench.xl": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.ma.bench.xs": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.ma.bench.yl": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.ma.bench.ys": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.ma.bench.zl": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.ma.bench.zs": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.ma.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.extras": {
  "data": {
   "symbols_in_volume": {
    "numpy.apply_along_axis.__doc__": {
     "line number": [
      412
     ]
    },
    "numpy.apply_over_axes.__doc__": {
     "line number": [
      438
     ]
    },
    "numpy.ma.extras._fromnxfunction": {
     "line number": [
      297,
      298,
      299,
      304,
      305,
      306,
      307,
      309,
      311
     ]
    },
    "numpy.ma.extras.apply_along_axis": {
     "line number": [
      412
     ]
    },
    "numpy.ma.extras.apply_over_axes": {
     "line number": [
      438
     ]
    },
    "numpy.ma.extras.mr_class": {
     "line number": [
      1504
     ]
    },
    "numpy.ma.extras.polyfit": {
     "line number": [
      1885,
      1885
     ]
    },
    "numpy.ma.extras.vander": {
     "line number": [
      1849,
      1849
     ]
    },
    "numpy.polyfit.__doc__": {
     "line number": [
      1885
     ]
    },
    "numpy.vander.__doc__": {
     "line number": [
      1849
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.extras.AxisConcatenator": {
  "data": {
   "shadows": "numpy.lib.index_tricks.AxisConcatenator"
  },
  "type": "import"
 },
 "numpy.ma.extras.MAxisConcatenator": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": {
    "numpy.lib.index_tricks.AxisConcatenator": {
     "line number": [
      1419
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.extras.MAxisConcatenator.__getitem__": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": {
    "MAError": {
     "line number": [
      1436
     ]
    },
    "TypeError": {
     "line number": [
      1465
     ]
    },
    "ValueError": {
     "line number": [
      1465,
      1466
     ]
    },
    "abs": {
     "line number": [
      1453
     ]
    },
    "asarray": {
     "line number": [
      1468
     ]
    },
    "complex": {
     "line number": [
      1452
     ]
    },
    "concatenate": {
     "line number": [
      1482
     ]
    },
    "int": {
     "line number": [
      1453,
      1463
     ]
    },
    "isinstance": {
     "line number": [
      1435,
      1437,
      1444,
      1452,
      1457,
      1474
     ]
    },
    "len": {
     "line number": [
      1442
     ]
    },
    "numpy.ScalarType": {
     "line number": [
      1467
     ]
    },
    "numpy.arange": {
     "line number": [
      1456
     ]
    },
    "numpy.linspace": {
     "line number": [
      1454
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1474
     ]
    },
    "range": {
     "line number": [
      1442
     ]
    },
    "slice": {
     "line number": [
      1444
     ]
    },
    "str": {
     "line number": [
      1435,
      1457
     ]
    },
    "tuple": {
     "line number": [
      1437,
      1482
     ]
    },
    "type": {
     "line number": [
      1467
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.MAxisConcatenator.__init__": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": {
    "numpy.lib.index_tricks.AxisConcatenator.__init__": {
     "line number": [
      1432
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.ma.extras.__author__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.ma.extras.__date__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.ma.extras.__revision__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.ma.extras.__version__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.ma.extras._covhelper": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1224,
      1242
     ]
    },
    "bool": {
     "line number": [
      1229
     ]
    },
    "float": {
     "line number": [
      1220,
      1239
     ]
    },
    "int": {
     "line number": [
      1229,
      1237,
      1252
     ]
    },
    "numpy.array": {
     "line number": [
      1239
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1252
     ]
    },
    "numpy.logical_not": {
     "line number": [
      1237,
      1252
     ]
    },
    "numpy.logical_or": {
     "line number": [
      1246
     ]
    },
    "slice": {
     "line number": [
      1232,
      1234
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras._ezclump": {
  "data": {
   "lineno": 1729,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1742
     ]
    },
    "numpy.ma.extras.itertools": {
     "line number": [
      1741,
      1742
     ]
    },
    "slice": {
     "line number": [
      1740
     ]
    },
    "zip": {
     "line number": [
      1741
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction": {
  "data": {
   "lineno": 224
  },
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction.__call__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "func": {
     "line number": [
      278,
      279,
      282,
      283,
      292,
      293
     ]
    },
    "getattr": {
     "line number": [
      274
     ]
    },
    "getmaskarray": {
     "line number": [
      279,
      283,
      293
     ]
    },
    "isinstance": {
     "line number": [
      277,
      281,
      281
     ]
    },
    "len": {
     "line number": [
      275,
      288
     ]
    },
    "list": {
     "line number": [
      281,
      287
     ]
    },
    "masked_array": {
     "line number": [
      280,
      284,
      294
     ]
    },
    "numpy": {
     "line number": [
      274
     ]
    },
    "numpy.asarray": {
     "line number": [
      282,
      292
     ]
    },
    "numpy.ma.extras.issequence": {
     "line number": [
      288
     ]
    },
    "numpy.ndarray": {
     "line number": [
      277
     ]
    },
    "tuple": {
     "line number": [
      281,
      282,
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction.__init__": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction.getdoc": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      263,
      264
     ]
    },
    "numpy": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.extras.apply_along_axis": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      352
     ]
    },
    "ValueError": {
     "line number": [
      336
     ]
    },
    "asarray": {
     "line number": [
      375,
      386,
      403,
      409
     ]
    },
    "func1d": {
     "line number": [
      346,
      373,
      401
     ]
    },
    "hasattr": {
     "line number": [
      406
     ]
    },
    "len": {
     "line number": [
      351
     ]
    },
    "list": {
     "line number": [
      340,
      384
     ]
    },
    "numpy.array": {
     "line number": [
      331,
      378
     ]
    },
    "numpy.asarray": {
     "line number": [
      343,
      359,
      405,
      407
     ]
    },
    "numpy.dtype": {
     "line number": [
      405
     ]
    },
    "numpy.isscalar": {
     "line number": [
      348
     ]
    },
    "numpy.ma.extras.flatten_inplace": {
     "line number": [
      387,
      389,
      402
     ]
    },
    "numpy.product": {
     "line number": [
      362,
      382
     ]
    },
    "numpy.zeros": {
     "line number": [
      339
     ]
    },
    "object": {
     "line number": [
      360,
      388
     ]
    },
    "range": {
     "line number": [
      340
     ]
    },
    "slice": {
     "line number": [
      342,
      380
     ]
    },
    "tuple": {
     "line number": [
      346,
      361,
      373,
      374,
      389,
      401,
      402
     ]
    },
    "zeros": {
     "line number": [
      360,
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.apply_over_axes": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      435
     ]
    },
    "func": {
     "line number": [
      427,
      427
     ]
    },
    "getmaskarray": {
     "line number": [
      420
     ]
    },
    "numpy.array": {
     "line number": [
      422
     ]
    },
    "numpy.asarray": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.atleast_1d": {
  "data": {
   "lineno": 297
  },
  "type": "constant"
 },
 "numpy.ma.extras.atleast_2d": {
  "data": {
   "lineno": 298
  },
  "type": "constant"
 },
 "numpy.ma.extras.atleast_3d": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "numpy.ma.extras.average": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      539,
      562
     ]
    },
    "asarray": {
     "line number": [
      491
     ]
    },
    "eval": {
     "line number": [
      534,
      557
     ]
    },
    "filled": {
     "line number": [
      502,
      511,
      521,
      545
     ]
    },
    "float": {
     "line number": [
      500,
      509,
      511,
      526,
      536,
      543,
      550,
      552,
      560,
      577
     ]
    },
    "isinstance": {
     "line number": [
      569,
      574,
      576
     ]
    },
    "len": {
     "line number": [
      532,
      555
     ]
    },
    "masked_array": {
     "line number": [
      575
     ]
    },
    "numpy.array": {
     "line number": [
      511,
      526,
      550
     ]
    },
    "numpy.core.umath.add.reduce": {
     "line number": [
      503,
      504,
      509,
      543
     ]
    },
    "numpy.ndarray": {
     "line number": [
      576
     ]
    },
    "ones": {
     "line number": [
      577
     ]
    },
    "repr": {
     "line number": [
      534,
      557
     ]
    },
    "slice": {
     "line number": [
      533,
      556
     ]
    },
    "tuple": {
     "line number": [
      534,
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.clump_masked": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1827
     ]
    },
    "numpy.ma.extras._ezclump": {
     "line number": [
      1826
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.clump_unmasked": {
  "data": {
   "lineno": 1746,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      1779
     ]
    },
    "numpy.ma.extras._ezclump": {
     "line number": [
      1782
     ]
    },
    "slice": {
     "line number": [
      1781
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.column_stack": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "numpy.ma.extras.compress_cols": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": {
    "numpy.ma.extras.compress_rowcols": {
     "line number": [
      768
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.compress_rowcols": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      723
     ]
    },
    "asarray": {
     "line number": [
      721
     ]
    },
    "getmask": {
     "line number": [
      724
     ]
    },
    "len": {
     "line number": [
      732
     ]
    },
    "list": {
     "line number": [
      732,
      732
     ]
    },
    "numpy.array": {
     "line number": [
      730
     ]
    },
    "numpy.unique": {
     "line number": [
      735,
      738
     ]
    },
    "range": {
     "line number": [
      732,
      732
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.compress_rows": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": {
    "numpy.ma.extras.compress_rowcols": {
     "line number": [
      754
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.corrcoef": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1374,
      1394
     ]
    },
    "int": {
     "line number": [
      1373
     ]
    },
    "numpy.dot": {
     "line number": [
      1386,
      1389
     ]
    },
    "numpy.ma.extras._covhelper": {
     "line number": [
      1383
     ]
    },
    "numpy.ma.extras.diagflat": {
     "line number": [
      1400
     ]
    },
    "numpy.ma.extras.dot": {
     "line number": [
      1387,
      1390
     ]
    },
    "numpy.ma.extras.mask_cols": {
     "line number": [
      1405,
      1410
     ]
    },
    "range": {
     "line number": [
      1403,
      1404,
      1408,
      1409
     ]
    },
    "vstack": {
     "line number": [
      1405,
      1411
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.count_masked": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "getmaskarray": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.cov": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1312
     ]
    },
    "int": {
     "line number": [
      1311
     ]
    },
    "numpy.dot": {
     "line number": [
      1322,
      1325
     ]
    },
    "numpy.ma.extras._covhelper": {
     "line number": [
      1320
     ]
    },
    "numpy.ma.extras.dot": {
     "line number": [
      1323,
      1326
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.diagflat": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "numpy.ma.extras.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.extras.dot": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": {
    "filled": {
     "line number": [
      1002,
      1002
     ]
    },
    "getmaskarray": {
     "line number": [
      1004,
      1005
     ]
    },
    "masked_array": {
     "line number": [
      1007
     ]
    },
    "numpy.dot": {
     "line number": [
      1002,
      1006
     ]
    },
    "numpy.ma.extras.mask_cols": {
     "line number": [
      1000
     ]
    },
    "numpy.ma.extras.mask_rows": {
     "line number": [
      999
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.dstack": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "numpy.ma.extras.ediff1d": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1034
     ]
    },
    "numpy.ma.extras.hstack": {
     "line number": [
      1037
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.flatnotmasked_contiguous": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": {
    "getmask": {
     "line number": [
      1657
     ]
    },
    "len": {
     "line number": [
      1663
     ]
    },
    "list": {
     "line number": [
      1663
     ]
    },
    "numpy.ma.extras.itertools": {
     "line number": [
      1662
     ]
    },
    "slice": {
     "line number": [
      1659,
      1665
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.flatnotmasked_edges": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": {
    "getmask": {
     "line number": [
      1555
     ]
    },
    "len": {
     "line number": [
      1559
     ]
    },
    "numpy.any": {
     "line number": [
      1556
     ]
    },
    "numpy.array": {
     "line number": [
      1557
     ]
    },
    "numpy.flatnonzero": {
     "line number": [
      1558
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.flatten_inplace": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      321
     ]
    },
    "len": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.hsplit": {
  "data": {
   "lineno": 309
  },
  "type": "constant"
 },
 "numpy.ma.extras.hstack": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "numpy.ma.extras.in1d": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1155
     ]
    },
    "numpy.ma.extras.unique": {
     "line number": [
      1141,
      1142
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.intersect1d": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": {
    "numpy.ma.extras.unique": {
     "line number": [
      1093,
      1093
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.issequence": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      57
     ]
    },
    "list": {
     "line number": [
      57
     ]
    },
    "numpy.ndarray": {
     "line number": [
      57
     ]
    },
    "tuple": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.ma.extras.lstsq": {
  "data": {
   "shadows": "numpy.linalg.lstsq"
  },
  "type": "import"
 },
 "numpy.ma.extras.ma": {
  "data": {
   "shadows": "core"
  },
  "type": "import"
 },
 "numpy.ma.extras.mask_cols": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": {
    "numpy.ma.extras.mask_rowcols": {
     "line number": [
      948
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.mask_rowcols": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      847
     ]
    },
    "asarray": {
     "line number": [
      845
     ]
    },
    "getmask": {
     "line number": [
      848
     ]
    },
    "numpy.unique": {
     "line number": [
      855,
      857
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.mask_rows": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": {
    "numpy.ma.extras.mask_rowcols": {
     "line number": [
      903
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.masked_all": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "float": {
     "line number": [
      115
     ]
    },
    "make_mask_descr": {
     "line number": [
      163
     ]
    },
    "masked_array": {
     "line number": [
      162
     ]
    },
    "numpy.empty": {
     "line number": [
      162
     ]
    },
    "numpy.ones": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.masked_all_like": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "make_mask_descr": {
     "line number": [
      217
     ]
    },
    "numpy.empty_like": {
     "line number": [
      216
     ]
    },
    "numpy.ones": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.median": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "_median1D": {
     "line number": [
      663,
      665
     ]
    },
    "numpy.ma.extras.apply_along_axis": {
     "line number": [
      665
     ]
    },
    "sort": {
     "line number": [
      661
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.median._median1D": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": {
    "count": {
     "line number": [
      645
     ]
    },
    "divmod": {
     "line number": [
      646
     ]
    },
    "filled": {
     "line number": [
      645
     ]
    },
    "slice": {
     "line number": [
      648,
      650
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.mr_": {
  "data": {
   "lineno": 1504
  },
  "type": "constant"
 },
 "numpy.ma.extras.mr_class": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": {
    "numpy.ma.extras.MAxisConcatenator": {
     "line number": [
      1485
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.extras.mr_class.__init__": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": {
    "numpy.ma.extras.MAxisConcatenator": {
     "line number": [
      1502
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.ma.extras.notmasked_contiguous": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1713
     ]
    },
    "asarray": {
     "line number": [
      1710
     ]
    },
    "numpy.ma.extras.flatnotmasked_contiguous": {
     "line number": [
      1715,
      1725
     ]
    },
    "range": {
     "line number": [
      1723
     ]
    },
    "slice": {
     "line number": [
      1721
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.notmasked_edges": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": {
    "asarray": {
     "line number": [
      1607
     ]
    },
    "getmaskarray": {
     "line number": [
      1610
     ]
    },
    "numpy.array": {
     "line number": [
      1611
     ]
    },
    "numpy.asarray": {
     "line number": [
      1611
     ]
    },
    "numpy.indices": {
     "line number": [
      1611
     ]
    },
    "numpy.ma.extras.flatnotmasked_edges": {
     "line number": [
      1609
     ]
    },
    "range": {
     "line number": [
      1612,
      1613
     ]
    },
    "tuple": {
     "line number": [
      1612,
      1613
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.extras.nxarray": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.ma.extras.polyfit": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1867,
      1872,
      1874
     ]
    },
    "asarray": {
     "line number": [
      1856,
      1857,
      1870
     ]
    },
    "getmask": {
     "line number": [
      1859,
      1861,
      1863,
      1875
     ]
    },
    "mask_or": {
     "line number": [
      1861,
      1865,
      1875
     ]
    },
    "numpy.ma.extras.cov": {
     "line number": [
      1883
     ]
    },
    "numpy.ma.extras.mask_rows": {
     "line number": [
      1863
     ]
    },
    "numpy.polyfit": {
     "line number": [
      1883
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.extras.setdiff1d": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": {
    "numpy.ma.extras.in1d": {
     "line number": [
      1200
     ]
    },
    "numpy.ma.extras.unique": {
     "line number": [
      1198,
      1199
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.setxor1d": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": {
    "numpy.ma.extras.unique": {
     "line number": [
      1110,
      1111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.umath": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.ma.extras.union1d": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": {
    "numpy.ma.extras.unique": {
     "line number": [
      1174
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.unique": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1057
     ]
    },
    "list": {
     "line number": [
      1058
     ]
    },
    "numpy.unique": {
     "line number": [
      1054
     ]
    },
    "tuple": {
     "line number": [
      1057,
      1060
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.vander": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": {
    "getmask": {
     "line number": [
      1845
     ]
    },
    "numpy.vander": {
     "line number": [
      1844
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.extras.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma.mrecords": {
  "data": {
   "symbols_in_volume": {
    "numpy.core.numerictypes._typestr": {
     "line number": [
      36
     ]
    },
    "numpy.core.records._byteorderconv": {
     "line number": [
      35
     ]
    },
    "numpy.ma.core._check_fill_value": {
     "line number": [
      42
     ]
    },
    "numpy.ma.mrecords.MaskedRecords": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.mrecords.MAError": {
  "data": {
   "shadows": "numpy.ma.MAError"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.MaskedArray"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.MaskedRecords": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "numpy.ma.MaskedArray": {
     "line number": [
      103
     ]
    },
    "object": {
     "line number": [
      103
     ]
    },
    "property": {
     "line number": [
      182,
      187
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.mrecords.MaskedRecords.__array_finalize__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      160,
      162
     ]
    },
    "len": {
     "line number": [
      168
     ]
    },
    "numpy.array": {
     "line number": [
      168
     ]
    },
    "numpy.ma.make_mask_descr": {
     "line number": [
      167
     ]
    },
    "numpy.ma.make_mask_none": {
     "line number": [
      165
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      162,
      164
     ]
    },
    "numpy.ndarray": {
     "line number": [
      174
     ]
    },
    "numpy.ndarray.__getattribute__": {
     "line number": [
      163
     ]
    },
    "numpy.recarray": {
     "line number": [
      169,
      175
     ]
    },
    "tuple": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__getattribute__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      200,
      206
     ]
    },
    "IndexError": {
     "line number": [
      221
     ]
    },
    "KeyError": {
     "line number": [
      205
     ]
    },
    "NotImplementedError": {
     "line number": [
      212
     ]
    },
    "TypeError": {
     "line number": [
      205
     ]
    },
    "ValueError": {
     "line number": [
      235
     ]
    },
    "len": {
     "line number": [
      224
     ]
    },
    "numpy.bool": {
     "line number": [
      224
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      226
     ]
    },
    "numpy.ndarray": {
     "line number": [
      227
     ]
    },
    "numpy.ndarray.__getattribute__": {
     "line number": [
      202,
      208
     ]
    },
    "numpy.ndarray.view": {
     "line number": [
      209
     ]
    },
    "object.__getattribute__": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__getitem__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      302
     ]
    },
    "numpy.array": {
     "line number": [
      319,
      320
     ]
    },
    "numpy.compat.basestring": {
     "line number": [
      302
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      307
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      315
     ]
    },
    "numpy.ndarray.__getattribute__": {
     "line number": [
      299
     ]
    },
    "numpy.ndarray.view": {
     "line number": [
      300
     ]
    },
    "numpy.recarray": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__getstate__": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__len__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "len": {
     "line number": [
      193,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__new__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "len": {
     "line number": [
      132,
      153
     ]
    },
    "numpy.array": {
     "line number": [
      134,
      153
     ]
    },
    "numpy.dtype": {
     "line number": [
      124
     ]
    },
    "numpy.ma.MAError": {
     "line number": [
      144
     ]
    },
    "numpy.ma.make_mask_descr": {
     "line number": [
      129
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      120,
      130
     ]
    },
    "numpy.recarray.__new__": {
     "line number": [
      124
     ]
    },
    "numpy.reshape": {
     "line number": [
      140
     ]
    },
    "numpy.resize": {
     "line number": [
      138
     ]
    },
    "numpy.size": {
     "line number": [
      130
     ]
    },
    "tuple": {
     "line number": [
      132,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__reduce__": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__repr__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      345
     ]
    },
    "len": {
     "line number": [
      344
     ]
    },
    "max": {
     "line number": [
      344
     ]
    },
    "str": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__setattr__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      278
     ]
    },
    "KeyError": {
     "line number": [
      277
     ]
    },
    "TypeError": {
     "line number": [
      277
     ]
    },
    "exctype": {
     "line number": [
      261
     ]
    },
    "numpy.ma.filled": {
     "line number": [
      288
     ]
    },
    "numpy.ma.getmaskarray": {
     "line number": [
      289
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      280
     ]
    },
    "numpy.ma.mrecords.sys": {
     "line number": [
      260
     ]
    },
    "numpy.ndarray.__getattribute__": {
     "line number": [
      257,
      258,
      264,
      290
     ]
    },
    "object.__delattr__": {
     "line number": [
      271
     ]
    },
    "object.__getattribute__": {
     "line number": [
      249
     ]
    },
    "object.__setattr__": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__setitem__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      326
     ]
    },
    "numpy.compat.basestring": {
     "line number": [
      326
     ]
    },
    "numpy.ma.MaskedArray.__setitem__": {
     "line number": [
      325
     ]
    },
    "numpy.ma.getmaskarray": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__setstate__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "numpy.bool_": {
     "line number": [
      449
     ]
    },
    "numpy.dtype": {
     "line number": [
      449
     ]
    },
    "numpy.ndarray.__setstate__": {
     "line number": [
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__str__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      334,
      338
     ]
    },
    "str": {
     "line number": [
      333,
      337
     ]
    },
    "zip": {
     "line number": [
      334,
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords._getdata": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "numpy.ndarray.view": {
     "line number": [
      181
     ]
    },
    "numpy.recarray": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords._getfieldmask": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.copy": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "type": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.harden_mask": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.soften_mask": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.tolist": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      415,
      416
     ]
    },
    "object": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.view": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      368
     ]
    },
    "getattr": {
     "line number": [
      383
     ]
    },
    "issubclass": {
     "line number": [
      362
     ]
    },
    "numpy.dtype": {
     "line number": [
      354,
      362,
      363,
      364,
      366,
      369,
      369,
      369,
      375,
      378,
      381
     ]
    },
    "numpy.dtype.fields": {
     "line number": [
      373
     ]
    },
    "numpy.ma.make_mask_descr": {
     "line number": [
      384
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      383,
      383
     ]
    },
    "numpy.ndarray": {
     "line number": [
      362,
      385
     ]
    },
    "numpy.ndarray.view": {
     "line number": [
      356,
      358,
      363,
      366,
      378,
      381
     ]
    },
    "type": {
     "line number": [
      355,
      358,
      360,
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.__all__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.ma.mrecords.__author__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.ma.mrecords._byteorderconv": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.ma.mrecords._check_fill_value": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.ma.mrecords._checknames": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      80
     ]
    },
    "isinstance": {
     "line number": [
      75,
      77
     ]
    },
    "len": {
     "line number": [
      70,
      81
     ]
    },
    "list": {
     "line number": [
      75
     ]
    },
    "numpy.dtype": {
     "line number": [
      93
     ]
    },
    "numpy.ma.mrecords.reserved_fields": {
     "line number": [
      86,
      87
     ]
    },
    "range": {
     "line number": [
      71
     ]
    },
    "repr": {
     "line number": [
      80
     ]
    },
    "str": {
     "line number": [
      77
     ]
    },
    "tuple": {
     "line number": [
      75
     ]
    },
    "zip": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords._get_fieldmask": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "len": {
     "line number": [
      99
     ]
    },
    "numpy.empty": {
     "line number": [
      98
     ]
    },
    "tuple": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords._getformats": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      53
     ]
    },
    "issubclass": {
     "line number": [
      60
     ]
    },
    "numpy.asarray": {
     "line number": [
      58
     ]
    },
    "numpy.core.numerictypes.flexible": {
     "line number": [
      60
     ]
    },
    "numpy.ma.mrecords._typestr": {
     "line number": [
      59
     ]
    },
    "repr": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords._guessvartypes": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      598,
      603,
      606,
      609
     ]
    },
    "complex": {
     "line number": [
      608,
      612
     ]
    },
    "float": {
     "line number": [
      605,
      614
     ]
    },
    "int": {
     "line number": [
      602,
      616
     ]
    },
    "len": {
     "line number": [
      595,
      597
     ]
    },
    "numpy.asarray": {
     "line number": [
      594
     ]
    },
    "numpy.dtype": {
     "line number": [
      612,
      614,
      616
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords._mrreconstruct": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      469
     ]
    },
    "numpy.ndarray.__new__": {
     "line number": [
      466,
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords._typestr": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.ma.mrecords.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.addfield": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": {
    "len": {
     "line number": [
      711
     ]
    },
    "numpy.bool_": {
     "line number": [
      725
     ]
    },
    "numpy.dtype": {
     "line number": [
      715,
      725
     ]
    },
    "numpy.ma.array": {
     "line number": [
      712
     ]
    },
    "numpy.ma.getmaskarray": {
     "line number": [
      731
     ]
    },
    "numpy.ma.mrecords.MaskedRecords": {
     "line number": [
      722
     ]
    },
    "numpy.ma.mrecords.reserved_fields": {
     "line number": [
      710
     ]
    },
    "numpy.recarray": {
     "line number": [
      716,
      726
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.bool_": {
  "data": {
   "shadows": "numpy.bool_"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.dtype": {
  "data": {
   "shadows": "numpy.dtype"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.filled": {
  "data": {
   "shadows": "numpy.ma.filled"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.fromarrays": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "list": {
     "line number": [
      514
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      509
     ]
    },
    "numpy.core.records.fromarrays": {
     "line number": [
      510
     ]
    },
    "numpy.dtype": {
     "line number": [
      511
     ]
    },
    "numpy.ma.getdata": {
     "line number": [
      508
     ]
    },
    "numpy.ma.getmaskarray": {
     "line number": [
      509
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      513
     ]
    },
    "zip": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.fromrecords": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      557
     ]
    },
    "getattr": {
     "line number": [
      553
     ]
    },
    "isinstance": {
     "line number": [
      559,
      561
     ]
    },
    "len": {
     "line number": [
      556,
      558,
      576,
      579
     ]
    },
    "numpy.array": {
     "line number": [
      575
     ]
    },
    "numpy.core.records.fromrecords": {
     "line number": [
      567
     ]
    },
    "numpy.dtype": {
     "line number": [
      564,
      565,
      567
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      561
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      569
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      523,
      574
     ]
    },
    "numpy.ndarray": {
     "line number": [
      559,
      562
     ]
    },
    "tuple": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.fromtextfile": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": {
    "len": {
     "line number": [
      668,
      675,
      684,
      687
     ]
    },
    "numpy.core.records.fromarrays": {
     "line number": [
      700
     ]
    },
    "numpy.dtype": {
     "line number": [
      683
     ]
    },
    "numpy.ma.default_fill_value": {
     "line number": [
      692
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      674,
      697
     ]
    },
    "numpy.ma.mrecords._guessvartypes": {
     "line number": [
      681,
      688
     ]
    },
    "numpy.ma.mrecords.openfile": {
     "line number": [
      661
     ]
    },
    "numpy.ma.mrecords.warnings": {
     "line number": [
      687
     ]
    },
    "zip": {
     "line number": [
      691,
      698
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.getdata": {
  "data": {
   "shadows": "numpy.ma.getdata"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.getmaskarray": {
  "data": {
   "shadows": "numpy.ma.getmaskarray"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.masked": {
  "data": {
   "shadows": "numpy.ma.masked"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.masked_array": {
  "data": {
   "shadows": "numpy.ma.masked_array"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.mrecarray": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "numpy.ma.mrecords.narray": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.nomask": {
  "data": {
   "shadows": "numpy.ma.nomask"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.ntypes": {
  "data": {
   "shadows": "numpy.core.numerictypes"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.openfile": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      627,
      628
     ]
    },
    "NotImplementedError": {
     "line number": [
      633
     ]
    },
    "hasattr": {
     "line number": [
      622
     ]
    },
    "open": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.mrecords.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.recarray": {
  "data": {
   "shadows": "numpy.recarray"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.recfromarrays": {
  "data": {
   "shadows": "numpy.core.records.fromarrays"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.recfromrecords": {
  "data": {
   "shadows": "numpy.core.records.fromrecords"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.reserved_fields": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.ma.mrecords.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      17
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      20
     ]
    },
    "numpy.ma.setup.config": {
     "line number": [
      20
     ]
    },
    "numpy.ma.setup.configuration": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.ma.setup.__author__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.ma.setup.__date__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.ma.setup.__revision__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.ma.setup.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.ma.setup.config": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.ma.setup.configuration": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.ma.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.ma.test": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_extras": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      922
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      923
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.tests.test_extras.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.core.MaskedArray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.Test2DFunctions": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.Test2DFunctions.test_compress2d": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      352
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      352,
      357,
      361,
      365
     ]
    },
    "numpy.ma.extras.compress_rowcols": {
     "line number": [
      354,
      355,
      356,
      358,
      359,
      360,
      362,
      363,
      364,
      366,
      367,
      368
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      354,
      355,
      356,
      358,
      359,
      360,
      362,
      363,
      364,
      366,
      367,
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.Test2DFunctions.test_dot": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      404
     ]
    },
    "numpy.dot": {
     "line number": [
      414,
      416,
      426,
      429,
      444,
      448,
      455,
      459,
      466,
      470
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      407,
      408,
      419,
      420,
      432,
      433,
      439,
      440,
      450,
      451,
      461,
      462
     ]
    },
    "numpy.ma.core.nomask": {
     "line number": [
      435,
      437
     ]
    },
    "numpy.ma.extras.dot": {
     "line number": [
      409,
      411,
      413,
      415,
      421,
      423,
      425,
      427,
      428,
      434,
      436,
      441,
      443,
      445,
      447,
      452,
      454,
      456,
      458,
      463,
      465,
      467,
      469
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      410,
      412,
      414,
      416,
      422,
      424,
      426,
      427,
      429,
      435,
      437,
      442,
      444,
      446,
      448,
      453,
      455,
      457,
      459,
      464,
      466,
      468,
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.Test2DFunctions.test_mask_rowcols": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      372
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      372,
      380,
      387,
      394
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      395,
      396,
      397
     ]
    },
    "numpy.ma.extras.mask_rowcols": {
     "line number": [
      374,
      376,
      378,
      381,
      383,
      385,
      388,
      390,
      392,
      395,
      396,
      397,
      398,
      399,
      400
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      374,
      376,
      378,
      381,
      383,
      385,
      388,
      390,
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "numpy.ma.core.arange": {
     "line number": [
      476
     ]
    },
    "numpy.ma.extras.apply_along_axis": {
     "line number": [
      479
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d.myfunc": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyOverAxes": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestApplyOverAxes.test_basic": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      488,
      492
     ]
    },
    "numpy.bool": {
     "line number": [
      490
     ]
    },
    "numpy.ma.core.arange": {
     "line number": [
      486
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      490
     ]
    },
    "numpy.ma.extras.apply_over_axes": {
     "line number": [
      487,
      491
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      489
     ]
    },
    "numpy.sum": {
     "line number": [
      487,
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      707
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      751
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      752
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      751
     ]
    },
    "numpy.ma.extras.ediff1d": {
     "line number": [
      753
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      754,
      755,
      756
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_ndarray": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      810,
      816
     ]
    },
    "numpy.arange": {
     "line number": [
      806
     ]
    },
    "numpy.ma.core.MaskedArray": {
     "line number": [
      810,
      816
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      808,
      815
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      814,
      814
     ]
    },
    "numpy.ma.extras.ediff1d": {
     "line number": [
      807,
      814
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      809,
      811,
      812,
      817,
      818
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_tobegin": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      760
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      762,
      768
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      761
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      760
     ]
    },
    "numpy.ma.extras.ediff1d": {
     "line number": [
      761,
      767
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      763,
      764,
      765,
      769,
      770,
      771
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_tobegin_toend": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      790
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      792,
      798
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      791,
      791,
      797
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      790
     ]
    },
    "numpy.ma.extras.ediff1d": {
     "line number": [
      791,
      797
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      793,
      794,
      795,
      800,
      801,
      802
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_toend": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      775
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      777,
      783
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      776
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      775
     ]
    },
    "numpy.ma.extras.ediff1d": {
     "line number": [
      776,
      782
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      778,
      779,
      780,
      784,
      785,
      786
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_in1d": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": {
    "numpy.ma.core.array": {
     "line number": [
      856,
      857,
      861,
      862
     ]
    },
    "numpy.ma.extras.in1d": {
     "line number": [
      858,
      863,
      866
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      866
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      859,
      864
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_in1d_invert": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": {
    "numpy.invert": {
     "line number": [
      872,
      876
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      870,
      871,
      874,
      875
     ]
    },
    "numpy.ma.extras.in1d": {
     "line number": [
      872,
      872,
      876,
      876,
      878
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      878
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      872,
      876
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_intersect1d": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": {
    "numpy.ma.core.array": {
     "line number": [
      822,
      823,
      825
     ]
    },
    "numpy.ma.extras.intersect1d": {
     "line number": [
      824
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      826
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setdiff1d": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": {
    "numpy.ma.core.arange": {
     "line number": [
      897,
      898
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      892,
      893,
      895,
      899
     ]
    },
    "numpy.ma.extras.setdiff1d": {
     "line number": [
      894,
      899
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      895,
      899
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setdiff1d_char_array": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      903,
      904,
      905
     ]
    },
    "numpy.ma.extras.setdiff1d": {
     "line number": [
      905
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      905
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setxor1d": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      843,
      849
     ]
    },
    "numpy.ma.core.MaskedArray": {
     "line number": [
      843,
      849
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      830,
      831,
      833,
      835,
      838,
      840,
      841,
      846,
      847
     ]
    },
    "numpy.ma.extras.setxor1d": {
     "line number": [
      832,
      837,
      842,
      848,
      852
     ]
    },
    "numpy.ma.testutils.assert_": {
     "line number": [
      843,
      849
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      852
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      833,
      838,
      844,
      850
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_union1d": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": {
    "numpy.ma.core.array": {
     "line number": [
      882,
      883,
      885
     ]
    },
    "numpy.ma.extras.union1d": {
     "line number": [
      884,
      888
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      888
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      886
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_allmasked": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": {
    "numpy.ma.core.masked": {
     "line number": [
      743,
      745
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      736,
      738,
      745
     ]
    },
    "numpy.ma.extras.unique": {
     "line number": [
      737,
      744
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      738,
      739,
      740,
      745,
      746,
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_onlist": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      713
     ]
    },
    "numpy.ma.core.MaskedArray": {
     "line number": [
      713
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      714
     ]
    },
    "numpy.ma.extras.unique": {
     "line number": [
      712
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      714,
      715,
      716
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_onmaskedarray": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": {
    "numpy.ma.core.masked_array": {
     "line number": [
      720,
      722,
      727,
      730
     ]
    },
    "numpy.ma.extras.unique": {
     "line number": [
      721,
      729
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      722,
      723,
      724,
      730,
      731,
      732
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_complex": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      208
     ]
    },
    "numpy.array": {
     "line number": [
      207,
      229
     ]
    },
    "numpy.average": {
     "line number": [
      214,
      232
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      209
     ]
    },
    "numpy.ma.extras.average": {
     "line number": [
      213,
      218,
      219,
      219,
      223,
      224,
      224,
      231,
      236,
      237,
      238,
      242,
      243,
      244
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      215,
      216,
      220,
      221,
      225,
      226,
      233,
      234,
      239,
      240,
      245,
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_onintegers_with_mask": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "numpy.ma.core.array": {
     "line number": [
      199,
      201
     ]
    },
    "numpy.ma.extras.average": {
     "line number": [
      199,
      201
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      200,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage1": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "numpy.ma.core.array": {
     "line number": [
      122,
      130
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      128,
      132
     ]
    },
    "numpy.ma.extras.average": {
     "line number": [
      123,
      124,
      125,
      129,
      133,
      134,
      135,
      136
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      123,
      124,
      126,
      129,
      133,
      134,
      135,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage2": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "numpy.add.reduce": {
     "line number": [
      147
     ]
    },
    "numpy.arange": {
     "line number": [
      147,
      148
     ]
    },
    "numpy.float_": {
     "line number": [
      143,
      146
     ]
    },
    "numpy.ma.core.arange": {
     "line number": [
      143,
      146,
      146
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      146
     ]
    },
    "numpy.ma.core.count": {
     "line number": [
      165
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      161,
      162,
      163,
      164,
      165,
      166
     ]
    },
    "numpy.ma.core.ones": {
     "line number": [
      159
     ]
    },
    "numpy.ma.core.zeros": {
     "line number": [
      156
     ]
    },
    "numpy.ma.extras.average": {
     "line number": [
      144,
      145,
      147,
      148,
      149,
      150,
      150,
      151,
      152,
      154,
      155,
      155,
      161,
      162,
      163,
      164,
      165,
      167,
      168,
      169,
      170
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      144,
      145,
      147,
      148,
      149,
      151,
      152,
      154,
      161,
      162,
      163,
      164,
      165,
      167,
      168,
      169,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage3": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "float": {
     "line number": [
      186
     ]
    },
    "numpy.ma.core.arange": {
     "line number": [
      175,
      176
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      186
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      187
     ]
    },
    "numpy.ma.core.ones": {
     "line number": [
      180,
      182,
      184,
      184
     ]
    },
    "numpy.ma.core.shape": {
     "line number": [
      178,
      178,
      181,
      181,
      183,
      183,
      185,
      185
     ]
    },
    "numpy.ma.extras.average": {
     "line number": [
      177,
      180,
      182,
      184,
      188,
      190,
      192,
      194
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      178,
      179,
      181,
      183,
      185,
      189,
      191,
      193,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.TestConcatenator": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_1d": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      261
     ]
    },
    "numpy.ma.core.MaskedArray": {
     "line number": [
      261
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      256
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      259
     ]
    },
    "numpy.ma.core.ones": {
     "line number": [
      257
     ]
    },
    "numpy.ma.extras.mr_": {
     "line number": [
      256,
      260,
      263
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      256,
      262,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_2d": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "numpy.ma.core.masked_array": {
     "line number": [
      271,
      272
     ]
    },
    "numpy.ma.extras.mr_": {
     "line number": [
      273,
      278
     ]
    },
    "numpy.ma.testutils.assert_array_equal": {
     "line number": [
      275,
      276,
      277,
      280,
      281,
      282
     ]
    },
    "numpy.ma.testutils.rand": {
     "line number": [
      267,
      268,
      269,
      270
     ]
    },
    "numpy.r_": {
     "line number": [
      277,
      282
     ]
    },
    "numpy.round_": {
     "line number": [
      269,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      601
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.setUp": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": {
    "numpy.ma.core.array": {
     "line number": [
      604
     ]
    },
    "numpy.random.rand": {
     "line number": [
      604
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_1d_w_missing": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      643
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      635,
      636,
      638,
      648,
      649,
      651
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      632
     ]
    },
    "numpy.ma.extras.corrcoef": {
     "line number": [
      635,
      637,
      639,
      642,
      648,
      650,
      652
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      635,
      636,
      638,
      648,
      649,
      651
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_1d_wo_missing": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "numpy.corrcoef": {
     "line number": [
      614,
      615,
      617
     ]
    },
    "numpy.ma.extras.corrcoef": {
     "line number": [
      614,
      616,
      618
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      614,
      615,
      617
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_2d_w_missing": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": {
    "numpy.corrcoef": {
     "line number": [
      661
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      657
     ]
    },
    "numpy.ma.extras.corrcoef": {
     "line number": [
      660
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      662
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_2d_wo_missing": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": {
    "numpy.corrcoef": {
     "line number": [
      623,
      624,
      626
     ]
    },
    "numpy.ma.extras.corrcoef": {
     "line number": [
      623,
      625,
      627
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      623,
      624,
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_ddof": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": {
    "numpy.corrcoef": {
     "line number": [
      609
     ]
    },
    "numpy.ma.extras.corrcoef": {
     "line number": [
      609
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      609
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      534
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestCov.setUp": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "numpy.ma.core.array": {
     "line number": [
      537
     ]
    },
    "numpy.random.rand": {
     "line number": [
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_1d_w_missing": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      568
     ]
    },
    "numpy.cov": {
     "line number": [
      561,
      562,
      563,
      573,
      574,
      576
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      558
     ]
    },
    "numpy.ma.extras.cov": {
     "line number": [
      561,
      562,
      564,
      567,
      573,
      575,
      577
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      561,
      562,
      563,
      573,
      574,
      576
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_1d_wo_missing": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "numpy.cov": {
     "line number": [
      542,
      543,
      544
     ]
    },
    "numpy.ma.extras.cov": {
     "line number": [
      542,
      543,
      545
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      542,
      543,
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_2d_w_missing": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "int": {
     "line number": [
      584
     ]
    },
    "numpy.cov": {
     "line number": [
      588,
      590,
      594,
      597
     ]
    },
    "numpy.dot": {
     "line number": [
      585,
      591
     ]
    },
    "numpy.logical_not": {
     "line number": [
      584
     ]
    },
    "numpy.ma.core.getmaskarray": {
     "line number": [
      584
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      582
     ]
    },
    "numpy.ma.extras.cov": {
     "line number": [
      587,
      589,
      593,
      596
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      587,
      589,
      593,
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_2d_wo_missing": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "numpy.cov": {
     "line number": [
      550,
      551,
      552
     ]
    },
    "numpy.ma.extras.cov": {
     "line number": [
      550,
      551,
      553
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      550,
      551,
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_clump_masked": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      87
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      88
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      87
     ]
    },
    "numpy.ma.extras.clump_masked": {
     "line number": [
      90
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      92
     ]
    },
    "slice": {
     "line number": [
      91,
      91,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_clump_unmasked": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      96
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      97
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      96
     ]
    },
    "numpy.ma.extras.clump_unmasked": {
     "line number": [
      98
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      100
     ]
    },
    "slice": {
     "line number": [
      99,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_flatnotmasked_contiguous": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "numpy.ma.core.arange": {
     "line number": [
      104
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      109,
      113
     ]
    },
    "numpy.ma.extras.flatnotmasked_contiguous": {
     "line number": [
      106,
      110,
      114
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      107,
      111,
      115
     ]
    },
    "slice": {
     "line number": [
      107,
      111,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_masked_all": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "float": {
     "line number": [
      38,
      39
     ]
    },
    "numpy.dtype": {
     "line number": [
      42,
      52
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      39,
      44,
      47,
      54,
      58,
      62
     ]
    },
    "numpy.ma.extras.masked_all": {
     "line number": [
      38,
      43,
      46,
      53,
      57,
      61
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      40,
      45,
      50,
      56,
      60,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_masked_all_like": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "float": {
     "line number": [
      68,
      70
     ]
    },
    "numpy.dtype": {
     "line number": [
      73,
      79
     ]
    },
    "numpy.ma.core.array": {
     "line number": [
      68,
      70,
      74,
      76,
      80
     ]
    },
    "numpy.ma.extras.masked_all_like": {
     "line number": [
      69,
      75,
      82
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      71,
      77,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      495
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_2d": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "float": {
     "line number": [
      502
     ]
    },
    "len": {
     "line number": [
      504
     ]
    },
    "numpy.arange": {
     "line number": [
      504
     ]
    },
    "numpy.empty": {
     "line number": [
      502
     ]
    },
    "numpy.linspace": {
     "line number": [
      500
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      501
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      500,
      502
     ]
    },
    "numpy.ma.extras.median": {
     "line number": [
      508,
      509,
      510,
      511
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      508,
      509,
      510,
      511
     ]
    },
    "numpy.random.shuffle": {
     "line number": [
      506
     ]
    },
    "numpy.zeros": {
     "line number": [
      510,
      511
     ]
    },
    "range": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_2d_waxis": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      515
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      516
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      515
     ]
    },
    "numpy.ma.extras.median": {
     "line number": [
      517,
      518,
      519,
      520
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      517,
      518,
      519,
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_3d": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "numpy.ma.arange": {
     "line number": [
      524,
      529
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      525,
      530
     ]
    },
    "numpy.ma.extras.median": {
     "line number": [
      526,
      528,
      531
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      526,
      528,
      531
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestNotMasked": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestNotMasked.test_contiguous": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "len": {
     "line number": [
      336,
      339
     ]
    },
    "numpy.arange": {
     "line number": [
      326
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      326
     ]
    },
    "numpy.ma.extras.notmasked_contiguous": {
     "line number": [
      330,
      335,
      341
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      331,
      332,
      333,
      338,
      342,
      344,
      345
     ]
    },
    "slice": {
     "line number": [
      331,
      332,
      333,
      342,
      344,
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestNotMasked.test_edges": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      292
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      316
     ]
    },
    "numpy.ma.core.masked_array": {
     "line number": [
      292
     ]
    },
    "numpy.ma.extras.notmasked_edges": {
     "line number": [
      298,
      300,
      303,
      307,
      309,
      312,
      317,
      320
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      299,
      301,
      302,
      304,
      305,
      308,
      310,
      311,
      313,
      314,
      318,
      319,
      321,
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestPolynomial": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      665
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestPolynomial.test_polyfit": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": {
    "numpy.ma.core.MaskedArray": {
     "line number": [
      674,
      676
     ]
    },
    "numpy.ma.core.masked": {
     "line number": [
      675,
      677
     ]
    },
    "numpy.ma.extras.polyfit": {
     "line number": [
      672,
      679,
      685,
      690,
      700
     ]
    },
    "numpy.ma.testutils.assert_almost_equal": {
     "line number": [
      672,
      683,
      688,
      693,
      704
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      702
     ]
    },
    "numpy.polyfit": {
     "line number": [
      672,
      680,
      686,
      691,
      701
     ]
    },
    "numpy.random.rand": {
     "line number": [
      670,
      671,
      695
     ]
    },
    "zip": {
     "line number": [
      682,
      687,
      692,
      703
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestShapeBase": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      908
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestShapeBase.test_atleast2d": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": {
    "numpy.ma.core.masked_array": {
     "line number": [
      912
     ]
    },
    "numpy.ma.extras.atleast_2d": {
     "line number": [
      913
     ]
    },
    "numpy.ma.testutils.assert_equal": {
     "line number": [
      914,
      915,
      916,
      917
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.__author__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_extras.__date__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_extras.__revision__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_extras.__version__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_extras.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.apply_along_axis": {
  "data": {
   "shadows": "numpy.ma.extras.apply_along_axis"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.apply_over_axes": {
  "data": {
   "shadows": "numpy.ma.extras.apply_over_axes"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.arange": {
  "data": {
   "shadows": "numpy.ma.core.arange"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.array": {
  "data": {
   "shadows": "numpy.ma.core.array"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.assert_": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.assert_almost_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.assert_array_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.assert_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.atleast_2d": {
  "data": {
   "shadows": "numpy.ma.extras.atleast_2d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.average": {
  "data": {
   "shadows": "numpy.ma.extras.average"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.clump_masked": {
  "data": {
   "shadows": "numpy.ma.extras.clump_masked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.clump_unmasked": {
  "data": {
   "shadows": "numpy.ma.extras.clump_unmasked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.compress_rowcols": {
  "data": {
   "shadows": "numpy.ma.extras.compress_rowcols"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.corrcoef": {
  "data": {
   "shadows": "numpy.ma.extras.corrcoef"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.count": {
  "data": {
   "shadows": "numpy.ma.core.count"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.cov": {
  "data": {
   "shadows": "numpy.ma.extras.cov"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.dot": {
  "data": {
   "shadows": "numpy.ma.extras.dot"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.ediff1d": {
  "data": {
   "shadows": "numpy.ma.extras.ediff1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.flatnotmasked_contiguous": {
  "data": {
   "shadows": "numpy.ma.extras.flatnotmasked_contiguous"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.getmaskarray": {
  "data": {
   "shadows": "numpy.ma.core.getmaskarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.in1d": {
  "data": {
   "shadows": "numpy.ma.extras.in1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.intersect1d": {
  "data": {
   "shadows": "numpy.ma.extras.intersect1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.mask_rowcols": {
  "data": {
   "shadows": "numpy.ma.extras.mask_rowcols"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.masked": {
  "data": {
   "shadows": "numpy.ma.core.masked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.masked_all": {
  "data": {
   "shadows": "numpy.ma.extras.masked_all"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.masked_all_like": {
  "data": {
   "shadows": "numpy.ma.extras.masked_all_like"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.masked_array": {
  "data": {
   "shadows": "numpy.ma.core.masked_array"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.median": {
  "data": {
   "shadows": "numpy.ma.extras.median"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.mr_": {
  "data": {
   "shadows": "numpy.ma.extras.mr_"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.nomask": {
  "data": {
   "shadows": "numpy.ma.core.nomask"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.notmasked_contiguous": {
  "data": {
   "shadows": "numpy.ma.extras.notmasked_contiguous"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.notmasked_edges": {
  "data": {
   "shadows": "numpy.ma.extras.notmasked_edges"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.ones": {
  "data": {
   "shadows": "numpy.ma.core.ones"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.polyfit": {
  "data": {
   "shadows": "numpy.ma.extras.polyfit"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.rand": {
  "data": {
   "shadows": "numpy.ma.testutils.rand"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.setdiff1d": {
  "data": {
   "shadows": "numpy.ma.extras.setdiff1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.setxor1d": {
  "data": {
   "shadows": "numpy.ma.extras.setxor1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.shape": {
  "data": {
   "shadows": "numpy.ma.core.shape"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.union1d": {
  "data": {
   "shadows": "numpy.ma.extras.union1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.unique": {
  "data": {
   "shadows": "numpy.ma.extras.unique"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.zeros": {
  "data": {
   "shadows": "numpy.ma.core.zeros"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      516
     ]
    },
    "run_module_suite": {
     "line number": [
      517
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.tests.test_mrecords.MaskedRecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.MaskedRecords"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.__init__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.setup": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "float": {
     "line number": [
      45
     ]
    },
    "int": {
     "line number": [
      45
     ]
    },
    "list": {
     "line number": [
      47
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      44
     ]
    },
    "numpy.ma.array": {
     "line number": [
      47
     ]
    },
    "zip": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_byview": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      56
     ]
    },
    "assert_equal": {
     "line number": [
      54,
      59
     ]
    },
    "assert_equal_records": {
     "line number": [
      55,
      57,
      60
     ]
    },
    "isinstance": {
     "line number": [
      56
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      53,
      60
     ]
    },
    "numpy.recarray": {
     "line number": [
      56,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_exotic_formats": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      338,
      342
     ]
    },
    "assert_equal_records": {
     "line number": [
      349
     ]
    },
    "float": {
     "line number": [
      336
     ]
    },
    "int": {
     "line number": [
      336
     ]
    },
    "numpy.array": {
     "line number": [
      343,
      350
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      338
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      337,
      341,
      346
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      336,
      340,
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_filled": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      309,
      310,
      311
     ]
    },
    "float": {
     "line number": [
      303,
      305,
      310
     ]
    },
    "int": {
     "line number": [
      302,
      305,
      309
     ]
    },
    "numpy.array": {
     "line number": [
      309,
      310,
      311
     ]
    },
    "numpy.ma.array": {
     "line number": [
      302,
      303,
      304
     ]
    },
    "numpy.ma.mrecords.fromarrays": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_get": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      72,
      80,
      87,
      90
     ]
    },
    "assert_equal": {
     "line number": [
      68,
      69,
      73,
      74,
      76,
      77,
      78,
      81,
      82,
      84,
      85,
      86,
      91,
      93,
      99
     ]
    },
    "assert_equal_records": {
     "line number": [
      94,
      97
     ]
    },
    "getattr": {
     "line number": [
      68,
      99
     ]
    },
    "isinstance": {
     "line number": [
      72,
      80,
      90
     ]
    },
    "numpy.array": {
     "line number": [
      95
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      74
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      87
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      65,
      72,
      80,
      90,
      97
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_hardmask": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      287
     ]
    },
    "assert_equal_records": {
     "line number": [
      279,
      284
     ]
    },
    "numpy.ma.make_mask": {
     "line number": [
      286
     ]
    },
    "numpy.ma.make_mask_none": {
     "line number": [
      285
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      275
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      278,
      282,
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_pickling": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      295,
      297
     ]
    },
    "assert_equal_records": {
     "line number": [
      296,
      298
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      292
     ]
    },
    "numpy.ma.tests.test_mrecords.pickle": {
     "line number": [
      293,
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_elements": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      216,
      220,
      224,
      225,
      226,
      227,
      228,
      230,
      234,
      235,
      236,
      237,
      238,
      240
     ]
    },
    "bool": {
     "line number": [
      218
     ]
    },
    "numpy.array": {
     "line number": [
      217
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      229,
      239
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      215,
      233
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      214,
      222,
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_fields": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      109,
      110,
      113,
      114,
      116,
      117,
      123,
      124,
      125,
      126,
      127,
      133,
      134,
      136,
      137,
      147,
      148
     ]
    },
    "bool": {
     "line number": [
      119,
      129
     ]
    },
    "int": {
     "line number": [
      139
     ]
    },
    "numpy.array": {
     "line number": [
      118,
      128
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      126
     ]
    },
    "numpy.ma.array": {
     "line number": [
      140,
      142
     ]
    },
    "numpy.ma.getdata": {
     "line number": [
      126
     ]
    },
    "numpy.ma.getmaskarray": {
     "line number": [
      114,
      125
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      121,
      135
     ]
    },
    "numpy.ma.mrecords.MaskedRecords": {
     "line number": [
      141
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      104,
      131
     ]
    },
    "numpy.ma.tests.test_mrecords.warnings": {
     "line number": [
      144,
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_fields_mask": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      156,
      157,
      162,
      163
     ]
    },
    "float": {
     "line number": [
      160
     ]
    },
    "int": {
     "line number": [
      160
     ]
    },
    "numpy.arange": {
     "line number": [
      159
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      155,
      161
     ]
    },
    "numpy.ma.mrecords.fromarrays": {
     "line number": [
      159
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      154
     ]
    },
    "numpy.random.rand": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      170,
      171,
      172,
      173,
      177,
      178
     ]
    },
    "bool": {
     "line number": [
      174,
      179
     ]
    },
    "numpy.array": {
     "line number": [
      174,
      179
     ]
    },
    "numpy.ma.getmaskarray": {
     "line number": [
      170,
      177
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      169
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      167
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask_fromarray": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      186,
      187,
      188,
      191,
      192,
      193
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask_fromfields": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      201,
      202,
      203,
      207,
      208,
      209
     ]
    },
    "bool": {
     "line number": [
      199,
      199,
      199
     ]
    },
    "numpy.array": {
     "line number": [
      198
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_setslices_hardmask": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      259
     ]
    },
    "Exception": {
     "line number": [
      262
     ]
    },
    "NotImplementedError": {
     "line number": [
      256,
      266
     ]
    },
    "TypeError": {
     "line number": [
      266,
      269
     ]
    },
    "assert_equal": {
     "line number": [
      249,
      250,
      251,
      253,
      254,
      255
     ]
    },
    "numpy.compat.asbytes_nested": {
     "line number": [
      252
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_tolist": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      322
     ]
    },
    "float": {
     "line number": [
      316,
      318
     ]
    },
    "int": {
     "line number": [
      315,
      318
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      323,
      324
     ]
    },
    "numpy.ma.array": {
     "line number": [
      315,
      316,
      317
     ]
    },
    "numpy.ma.mrecords.fromarrays": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_withnames": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      332
     ]
    },
    "float": {
     "line number": [
      330
     ]
    },
    "numpy.ma.mrecords.mrecarray": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport": {
  "data": {
   "lineno": 393
  },
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.__init__": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.setup": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "float": {
     "line number": [
      402,
      405
     ]
    },
    "int": {
     "line number": [
      401,
      405
     ]
    },
    "list": {
     "line number": [
      403
     ]
    },
    "map": {
     "line number": [
      403
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      403,
      407,
      407,
      408
     ]
    },
    "numpy.core.records.fromarrays": {
     "line number": [
      409
     ]
    },
    "numpy.ma.array": {
     "line number": [
      401,
      402,
      403
     ]
    },
    "numpy.ma.mrecords.fromarrays": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_addfield": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      499,
      500
     ]
    },
    "numpy.ma.array": {
     "line number": [
      498
     ]
    },
    "numpy.ma.mrecords.addfield": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromarrays": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      418
     ]
    },
    "assert_equal_records": {
     "line number": [
      421
     ]
    },
    "float": {
     "line number": [
      414
     ]
    },
    "getattr": {
     "line number": [
      418
     ]
    },
    "int": {
     "line number": [
      413
     ]
    },
    "numpy.ma.array": {
     "line number": [
      413,
      414,
      415,
      420
     ]
    },
    "numpy.ma.mrecords.fromarrays": {
     "line number": [
      421
     ]
    },
    "zip": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromrecords": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      437,
      439,
      442,
      444,
      447
     ]
    },
    "assert_equal_records": {
     "line number": [
      434,
      448,
      449
     ]
    },
    "float": {
     "line number": [
      442
     ]
    },
    "getattr": {
     "line number": [
      439,
      439,
      444,
      444
     ]
    },
    "int": {
     "line number": [
      442
     ]
    },
    "numpy.core.records.fromrecords": {
     "line number": [
      432
     ]
    },
    "numpy.ma.mrecords.fromrecords": {
     "line number": [
      433,
      436,
      441,
      446
     ]
    },
    "zip": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromrecords_wmask": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      457,
      461,
      465,
      470
     ]
    },
    "assert_equal_records": {
     "line number": [
      456,
      460,
      464,
      469
     ]
    },
    "numpy.ma.mrecords.fromrecords": {
     "line number": [
      455,
      459,
      463,
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromtextfile": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      490,
      491,
      492
     ]
    },
    "isinstance": {
     "line number": [
      489
     ]
    },
    "numpy.compat.asbytes": {
     "line number": [
      474
     ]
    },
    "numpy.ma.mrecords.MaskedRecords": {
     "line number": [
      489
     ]
    },
    "numpy.ma.mrecords.fromtextfile": {
     "line number": [
      486
     ]
    },
    "numpy.ma.tests.test_mrecords.os": {
     "line number": [
      484,
      485,
      487
     ]
    },
    "numpy.ma.tests.test_mrecords.tempfile": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView": {
  "data": {
   "lineno": 353
  },
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestView.setUp": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "list": {
     "line number": [
      358,
      361
     ]
    },
    "numpy.arange": {
     "line number": [
      356
     ]
    },
    "numpy.array": {
     "line number": [
      358
     ]
    },
    "numpy.float": {
     "line number": [
      357,
      357
     ]
    },
    "numpy.ma.array": {
     "line number": [
      361
     ]
    },
    "numpy.ma.mrecords.fromarrays": {
     "line number": [
      362
     ]
    },
    "numpy.random.rand": {
     "line number": [
      356
     ]
    },
    "numpy.recarray": {
     "line number": [
      359
     ]
    },
    "zip": {
     "line number": [
      358,
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_by_itself": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "assert_equal_records": {
     "line number": [
      370,
      371
     ]
    },
    "isinstance": {
     "line number": [
      369
     ]
    },
    "numpy.ma.mrecords.MaskedRecords": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_flexible_type": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      388
     ]
    },
    "assert_equal_records": {
     "line number": [
      386
     ]
    },
    "isinstance": {
     "line number": [
      385
     ]
    },
    "numpy.dtype": {
     "line number": [
      388
     ]
    },
    "numpy.float": {
     "line number": [
      383,
      383
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      387
     ]
    },
    "numpy.ma.mrecords.MaskedRecords": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_simple_dtype": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      378
     ]
    },
    "isinstance": {
     "line number": [
      377
     ]
    },
    "list": {
     "line number": [
      378
     ]
    },
    "numpy.array": {
     "line number": [
      378
     ]
    },
    "numpy.float": {
     "line number": [
      375,
      378
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      377
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      379
     ]
    },
    "zip": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.__author__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_mrecords.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_mrecords.__revision__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_mrecords.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.addfield": {
  "data": {
   "shadows": "numpy.ma.mrecords.addfield"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.asbytes_nested": {
  "data": {
   "shadows": "numpy.compat.asbytes_nested"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.fromarrays": {
  "data": {
   "shadows": "numpy.ma.mrecords.fromarrays"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.fromrecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.fromrecords"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.fromtextfile": {
  "data": {
   "shadows": "numpy.ma.mrecords.fromtextfile"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.masked": {
  "data": {
   "shadows": "numpy.ma.masked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.mrecarray": {
  "data": {
   "shadows": "numpy.ma.mrecords.mrecarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.nomask": {
  "data": {
   "shadows": "numpy.ma.nomask"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.numpy.ma.testutils": {
  "data": {
   "shadows": "numpy.ma.testutils"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.recarray": {
  "data": {
   "shadows": "numpy.recarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.recfromarrays": {
  "data": {
   "shadows": "numpy.core.records.fromarrays"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.recfromrecords": {
  "data": {
   "shadows": "numpy.core.records.fromrecords"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.test_record_array_with_object_field": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "int": {
     "line number": [
      510
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      507
     ]
    },
    "numpy.object": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      876
     ]
    },
    "numpy.pi": {
     "line number": [
      13
     ]
    },
    "run_module_suite": {
     "line number": [
      877
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods": {
  "data": {
   "lineno": 722
  },
  "type": "class"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.setUp": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "array": {
     "line number": [
      740,
      741,
      742,
      750,
      751,
      752
     ]
    },
    "numpy.array": {
     "line number": [
      725,
      734,
      744
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_clip": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": {
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      766,
      767,
      768
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_cumprod": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": {
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      794,
      796
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_cumsum": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": {
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      801,
      803
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_ptp": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": {
    "numpy.float_": {
     "line number": [
      774,
      775
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      780,
      781
     ]
    },
    "numpy.zeros": {
     "line number": [
      774,
      775
     ]
    },
    "range": {
     "line number": [
      776,
      778
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_swapaxes": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": {
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      786
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_trace": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": {
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      760
     ]
    },
    "sum": {
     "line number": [
      761
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_varstd": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": {
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      807,
      808,
      809,
      810,
      813,
      814,
      815
     ]
    },
    "numpy.sqrt": {
     "line number": [
      815
     ]
    },
    "range": {
     "line number": [
      812
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "numpy.ma.tests.test_old_ma.TestMa.setUp": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "array": {
     "line number": [
      30,
      31,
      33
     ]
    },
    "numpy.array": {
     "line number": [
      25,
      26,
      32
     ]
    },
    "numpy.ma.tests.test_old_ma.pi": {
     "line number": [
      25
     ]
    },
    "numpy.where": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAPI": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      644,
      645
     ]
    },
    "numpy.ndarray": {
     "line number": [
      644
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAddSumProd": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "add.accumulate": {
     "line number": [
      186
     ]
    },
    "add.reduce": {
     "line number": [
      185,
      199
     ]
    },
    "array": {
     "line number": [
      187,
      188
     ]
    },
    "concatenate": {
     "line number": [
      198
     ]
    },
    "filled": {
     "line number": [
      190,
      194
     ]
    },
    "len": {
     "line number": [
      196
     ]
    },
    "numpy.add.accumulate": {
     "line number": [
      186
     ]
    },
    "numpy.add.reduce": {
     "line number": [
      185,
      199
     ]
    },
    "numpy.concatenate": {
     "line number": [
      197
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      185,
      186,
      187,
      188,
      189,
      190,
      191,
      192,
      193,
      194,
      197,
      199,
      200,
      201
     ]
    },
    "numpy.product": {
     "line number": [
      192,
      193,
      194,
      201
     ]
    },
    "numpy.sum": {
     "line number": [
      189,
      190,
      191,
      200
     ]
    },
    "product": {
     "line number": [
      192,
      193,
      195,
      201
     ]
    },
    "sum": {
     "line number": [
      187,
      188,
      189,
      190,
      191,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testArithmetic": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      104,
      104
     ]
    },
    "add": {
     "line number": [
      106
     ]
    },
    "array": {
     "line number": [
      77
     ]
    },
    "divide": {
     "line number": [
      110
     ]
    },
    "masked_array": {
     "line number": [
      78
     ]
    },
    "multiply": {
     "line number": [
      108
     ]
    },
    "numpy.add": {
     "line number": [
      106
     ]
    },
    "numpy.divide": {
     "line number": [
      110
     ]
    },
    "numpy.errstate": {
     "line number": [
      92,
      97,
      109
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      79,
      80,
      81,
      88,
      89,
      90,
      91,
      93,
      94,
      95,
      96,
      98,
      99,
      100,
      101,
      102,
      103,
      104,
      105,
      106,
      107,
      108,
      110
     ]
    },
    "numpy.multiply": {
     "line number": [
      108
     ]
    },
    "numpy.subtract": {
     "line number": [
      107
     ]
    },
    "subtract": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testArrayAttributes": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": {
    "array": {
     "line number": [
      639,
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testArrayMethods": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": {
    "array": {
     "line number": [
      622,
      623,
      632
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      624,
      625,
      626,
      627,
      628,
      629,
      630,
      631,
      633,
      634,
      635,
      636
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAverage1": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "array": {
     "line number": [
      522,
      530
     ]
    },
    "average": {
     "line number": [
      523,
      524,
      525,
      529,
      533,
      534,
      535,
      536
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      523,
      524,
      526,
      533,
      535,
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAverage2": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "allclose": {
     "line number": [
      544,
      545,
      547,
      549,
      550,
      552,
      553,
      555,
      562,
      563,
      568,
      569,
      570,
      571
     ]
    },
    "arange": {
     "line number": [
      543,
      546,
      546,
      574,
      575
     ]
    },
    "array": {
     "line number": [
      546,
      585
     ]
    },
    "average": {
     "line number": [
      544,
      545,
      547,
      549,
      550,
      551,
      551,
      552,
      553,
      555,
      556,
      556,
      562,
      563,
      564,
      565,
      566,
      568,
      569,
      570,
      571,
      576,
      579,
      581,
      583,
      587,
      589,
      591,
      593
     ]
    },
    "count": {
     "line number": [
      566
     ]
    },
    "float": {
     "line number": [
      585
     ]
    },
    "masked_array": {
     "line number": [
      562,
      563,
      564,
      565,
      566,
      567,
      586
     ]
    },
    "numpy.add.reduce": {
     "line number": [
      548
     ]
    },
    "numpy.arange": {
     "line number": [
      548,
      549
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      588,
      590,
      592,
      594
     ]
    },
    "ones": {
     "line number": [
      560,
      579,
      581,
      583,
      583
     ]
    },
    "shape": {
     "line number": [
      577,
      577,
      580,
      580,
      582,
      582,
      584,
      584
     ]
    },
    "zeros": {
     "line number": [
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testBasic1d": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "count": {
     "line number": [
      48
     ]
    },
    "filled": {
     "line number": [
      50
     ]
    },
    "functools.reduce": {
     "line number": [
      47,
      48
     ]
    },
    "isMaskedArray": {
     "line number": [
      42,
      43
     ]
    },
    "len": {
     "line number": [
      48
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      49,
      50,
      51
     ]
    },
    "shape": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testBasic2d": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "count": {
     "line number": [
      68
     ]
    },
    "filled": {
     "line number": [
      70
     ]
    },
    "functools.reduce": {
     "line number": [
      67,
      68
     ]
    },
    "isMaskedArray": {
     "line number": [
      63,
      64
     ]
    },
    "len": {
     "line number": [
      68
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      69,
      70,
      71
     ]
    },
    "shape": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testCI": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "allequal": {
     "line number": [
      233,
      235,
      237,
      238,
      242
     ]
    },
    "array": {
     "line number": [
      207,
      208,
      209,
      233,
      235,
      237,
      238,
      242,
      244
     ]
    },
    "assert_": {
     "line number": [
      212,
      214,
      215,
      216,
      217,
      218,
      219,
      220,
      223,
      226,
      228,
      230,
      233,
      235,
      237,
      238,
      241,
      242,
      243,
      251
     ]
    },
    "getmask": {
     "line number": [
      233,
      235,
      237
     ]
    },
    "masked_array": {
     "line number": [
      234,
      236
     ]
    },
    "masked_values": {
     "line number": [
      240
     ]
    },
    "numpy.arange": {
     "line number": [
      239
     ]
    },
    "numpy.array": {
     "line number": [
      206,
      245
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      212,
      217,
      218,
      219,
      220,
      223,
      226,
      228,
      230,
      241,
      243
     ]
    },
    "numpy.sort": {
     "line number": [
      212
     ]
    },
    "object": {
     "line number": [
      244,
      245
     ]
    },
    "repr": {
     "line number": [
      211
     ]
    },
    "sort": {
     "line number": [
      212
     ]
    },
    "str": {
     "line number": [
      211,
      248,
      249
     ]
    },
    "type": {
     "line number": [
      214,
      214,
      248,
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testCopySize": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "allequal": {
     "line number": [
      265,
      277
     ]
    },
    "arange": {
     "line number": [
      282
     ]
    },
    "array": {
     "line number": [
      263,
      268,
      271,
      279
     ]
    },
    "concatenate": {
     "line number": [
      285
     ]
    },
    "filled": {
     "line number": [
      280
     ]
    },
    "getmask": {
     "line number": [
      286
     ]
    },
    "make_mask": {
     "line number": [
      256,
      257,
      259
     ]
    },
    "numpy.arange": {
     "line number": [
      262
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      285,
      286,
      288,
      290
     ]
    },
    "repeat": {
     "line number": [
      287,
      289
     ]
    },
    "resize": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testInplace": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      449,
      451,
      452,
      459,
      460,
      467,
      468,
      475,
      476,
      483,
      484,
      488,
      491,
      492
     ]
    },
    "assert_": {
     "line number": [
      455,
      457,
      463,
      465,
      471,
      473,
      479,
      481,
      487,
      489,
      495
     ]
    },
    "numpy.core.numerictypes.float32": {
     "line number": [
      491
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      455,
      457,
      463,
      465,
      471,
      473,
      479,
      481,
      487,
      489,
      495
     ]
    },
    "ones": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMaPut": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "all": {
     "line number": [
      317
     ]
    },
    "assert_": {
     "line number": [
      317
     ]
    },
    "numpy.nonzero": {
     "line number": [
      315
     ]
    },
    "put": {
     "line number": [
      316
     ]
    },
    "take": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMasked": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      509
     ]
    },
    "filled": {
     "line number": [
      513
     ]
    },
    "str": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMinMax": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "max": {
     "line number": [
      177
     ]
    },
    "maximum": {
     "line number": [
      177
     ]
    },
    "min": {
     "line number": [
      180
     ]
    },
    "minimum": {
     "line number": [
      180
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      177,
      180
     ]
    },
    "numpy.ravel": {
     "line number": [
      173
     ]
    },
    "ravel": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMinMax2": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      418,
      419
     ]
    },
    "assert_": {
     "line number": [
      416,
      417,
      422,
      423,
      424,
      425
     ]
    },
    "greater": {
     "line number": [
      423
     ]
    },
    "less": {
     "line number": [
      422
     ]
    },
    "maximum": {
     "line number": [
      417,
      423,
      425
     ]
    },
    "minimum": {
     "line number": [
      416,
      422,
      424
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      416,
      417,
      422,
      423
     ]
    },
    "where": {
     "line number": [
      422,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMixedArithmetic": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "array": {
     "line number": [
      115
     ]
    },
    "isinstance": {
     "line number": [
      116,
      117
     ]
    },
    "numpy.array": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testOddFeatures": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      321,
      330,
      398,
      400
     ]
    },
    "array": {
     "line number": [
      359,
      360,
      380,
      382,
      384,
      386,
      402
     ]
    },
    "assert_": {
     "line number": [
      323,
      325,
      326,
      327,
      332,
      334,
      335,
      337,
      338,
      339,
      340,
      341,
      342,
      343,
      345,
      346,
      347,
      348,
      349,
      350,
      352,
      353,
      354,
      355,
      356,
      357,
      358,
      363,
      366,
      367,
      368,
      369,
      370,
      371,
      373,
      374,
      375,
      376,
      377,
      378,
      379,
      380,
      382,
      384,
      386,
      388,
      392,
      394,
      395,
      396,
      397,
      406,
      407,
      408,
      410,
      412
     ]
    },
    "choose": {
     "line number": [
      393
     ]
    },
    "conjugate": {
     "line number": [
      327
     ]
    },
    "count": {
     "line number": [
      334
     ]
    },
    "equal": {
     "line number": [
      376
     ]
    },
    "getmask": {
     "line number": [
      407
     ]
    },
    "greater": {
     "line number": [
      370
     ]
    },
    "greater_equal": {
     "line number": [
      371
     ]
    },
    "less": {
     "line number": [
      373
     ]
    },
    "less_equal": {
     "line number": [
      374
     ]
    },
    "list": {
     "line number": [
      378,
      379,
      380,
      382,
      384
     ]
    },
    "masked_equal": {
     "line number": [
      376,
      384
     ]
    },
    "masked_greater": {
     "line number": [
      370
     ]
    },
    "masked_greater_equal": {
     "line number": [
      372
     ]
    },
    "masked_inside": {
     "line number": [
      378,
      380
     ]
    },
    "masked_less": {
     "line number": [
      373
     ]
    },
    "masked_less_equal": {
     "line number": [
      374
     ]
    },
    "masked_not_equal": {
     "line number": [
      375,
      377,
      386
     ]
    },
    "masked_outside": {
     "line number": [
      379,
      382
     ]
    },
    "masked_where": {
     "line number": [
      351,
      370,
      371,
      373,
      374,
      375,
      376,
      377,
      388,
      391
     ]
    },
    "not_equal": {
     "line number": [
      375,
      377
     ]
    },
    "numpy.core.numerictypes.float32": {
     "line number": [
      389
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      325,
      326,
      327,
      343,
      358,
      363,
      366,
      370,
      371,
      373,
      374,
      375,
      376,
      377,
      378,
      379,
      380,
      382,
      384,
      386,
      388,
      392,
      394,
      406,
      408,
      410,
      412
     ]
    },
    "ones": {
     "line number": [
      389
     ]
    },
    "range": {
     "line number": [
      378,
      379,
      380,
      382,
      384
     ]
    },
    "shape": {
     "line number": [
      335
     ]
    },
    "str": {
     "line number": [
      332,
      332
     ]
    },
    "where": {
     "line number": [
      334,
      335,
      336,
      344,
      362,
      365,
      404,
      405,
      409,
      411
     ]
    },
    "zeros": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testPickle": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      500
     ]
    },
    "assert_": {
     "line number": [
      505
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      505
     ]
    },
    "numpy.ma.tests.test_old_ma.pickle": {
     "line number": [
      503,
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testPut": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      294
     ]
    },
    "array": {
     "line number": [
      297,
      306
     ]
    },
    "make_mask": {
     "line number": [
      296
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      304,
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testScalarArithmetic": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "array": {
     "line number": [
      606,
      610,
      617
     ]
    },
    "maximum": {
     "line number": [
      614
     ]
    },
    "minimum": {
     "line number": [
      615
     ]
    },
    "numpy.errstate": {
     "line number": [
      608
     ]
    },
    "numpy.seterr": {
     "line number": [
      609
     ]
    },
    "str": {
     "line number": [
      619,
      619
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testSingleElementSubscript": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "array": {
     "line number": [
      648,
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testTakeTransposeInnerOuter": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      429
     ]
    },
    "array": {
     "line number": [
      440
     ]
    },
    "assert_": {
     "line number": [
      434,
      435,
      436,
      438,
      443,
      444,
      445
     ]
    },
    "filled": {
     "line number": [
      436,
      436,
      438,
      438
     ]
    },
    "inner": {
     "line number": [
      437
     ]
    },
    "numpy.arange": {
     "line number": [
      430
     ]
    },
    "numpy.inner": {
     "line number": [
      436
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      434,
      435,
      436,
      438
     ]
    },
    "numpy.outer": {
     "line number": [
      438
     ]
    },
    "numpy.take": {
     "line number": [
      435
     ]
    },
    "numpy.transpose": {
     "line number": [
      434
     ]
    },
    "object": {
     "line number": [
      440
     ]
    },
    "outer": {
     "line number": [
      439
     ]
    },
    "take": {
     "line number": [
      435,
      442
     ]
    },
    "transpose": {
     "line number": [
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testToPython": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      601
     ]
    },
    "ValueError": {
     "line number": [
      602,
      603
     ]
    },
    "array": {
     "line number": [
      597,
      598,
      599,
      600,
      601,
      602,
      603
     ]
    },
    "bool": {
     "line number": [
      602,
      603
     ]
    },
    "float": {
     "line number": [
      598,
      600,
      601
     ]
    },
    "int": {
     "line number": [
      597,
      599
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testUfuncs1": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      129,
      130,
      131
     ]
    },
    "absolute": {
     "line number": [
      137
     ]
    },
    "arccos": {
     "line number": [
      134
     ]
    },
    "arcsin": {
     "line number": [
      133
     ]
    },
    "arctan": {
     "line number": [
      135
     ]
    },
    "arctan2": {
     "line number": [
      136
     ]
    },
    "concatenate": {
     "line number": [
      145,
      146,
      147,
      148
     ]
    },
    "conjugate": {
     "line number": [
      144
     ]
    },
    "cos": {
     "line number": [
      122
     ]
    },
    "cosh": {
     "line number": [
      123
     ]
    },
    "equal": {
     "line number": [
      138
     ]
    },
    "exp": {
     "line number": [
      132
     ]
    },
    "greater": {
     "line number": [
      141
     ]
    },
    "greater_equal": {
     "line number": [
      143
     ]
    },
    "less": {
     "line number": [
      140
     ]
    },
    "less_equal": {
     "line number": [
      142
     ]
    },
    "log": {
     "line number": [
      130
     ]
    },
    "log10": {
     "line number": [
      131
     ]
    },
    "not_equal": {
     "line number": [
      139
     ]
    },
    "numpy.absolute": {
     "line number": [
      137
     ]
    },
    "numpy.arccos": {
     "line number": [
      134
     ]
    },
    "numpy.arcsin": {
     "line number": [
      133
     ]
    },
    "numpy.arctan": {
     "line number": [
      135
     ]
    },
    "numpy.arctan2": {
     "line number": [
      136
     ]
    },
    "numpy.concatenate": {
     "line number": [
      145,
      146,
      147,
      148
     ]
    },
    "numpy.conjugate": {
     "line number": [
      144
     ]
    },
    "numpy.cos": {
     "line number": [
      122
     ]
    },
    "numpy.cosh": {
     "line number": [
      123
     ]
    },
    "numpy.equal": {
     "line number": [
      138
     ]
    },
    "numpy.errstate": {
     "line number": [
      128
     ]
    },
    "numpy.exp": {
     "line number": [
      132
     ]
    },
    "numpy.greater": {
     "line number": [
      141
     ]
    },
    "numpy.greater_equal": {
     "line number": [
      143
     ]
    },
    "numpy.less": {
     "line number": [
      140
     ]
    },
    "numpy.less_equal": {
     "line number": [
      142
     ]
    },
    "numpy.log": {
     "line number": [
      130
     ]
    },
    "numpy.log10": {
     "line number": [
      131
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      122,
      123,
      124,
      125,
      126,
      127,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148
     ]
    },
    "numpy.not_equal": {
     "line number": [
      139
     ]
    },
    "numpy.sin": {
     "line number": [
      124
     ]
    },
    "numpy.sinh": {
     "line number": [
      125
     ]
    },
    "numpy.sqrt": {
     "line number": [
      129
     ]
    },
    "numpy.tan": {
     "line number": [
      126
     ]
    },
    "numpy.tanh": {
     "line number": [
      127
     ]
    },
    "sin": {
     "line number": [
      124
     ]
    },
    "sinh": {
     "line number": [
      125
     ]
    },
    "sqrt": {
     "line number": [
      129
     ]
    },
    "tan": {
     "line number": [
      126
     ]
    },
    "tanh": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_xtestCount": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "array": {
     "line number": [
      152,
      159
     ]
    },
    "assert_": {
     "line number": [
      161,
      163,
      165,
      167
     ]
    },
    "count": {
     "line number": [
      154,
      156,
      157,
      158,
      161,
      163,
      165,
      166,
      167,
      168
     ]
    },
    "getmask": {
     "line number": [
      167
     ]
    },
    "int": {
     "line number": [
      156,
      165
     ]
    },
    "isinstance": {
     "line number": [
      154,
      156,
      161,
      163,
      165
     ]
    },
    "numpy.integer": {
     "line number": [
      154,
      163
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      159,
      166,
      168
     ]
    },
    "numpy.ma.tests.test_old_ma.sys": {
     "line number": [
      153,
      162
     ]
    },
    "numpy.ndarray": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs": {
  "data": {
   "lineno": 654
  },
  "type": "class"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.setUp": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "array": {
     "line number": [
      656,
      657
     ]
    },
    "numpy.ma.tests.test_old_ma.pi": {
     "line number": [
      656,
      657
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_minmax": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      707
     ]
    },
    "masked_where": {
     "line number": [
      708
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_nonzero": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": {
    "array": {
     "line number": [
      718
     ]
    },
    "nonzero": {
     "line number": [
      719
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      719
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_reduce": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "alltrue": {
     "line number": [
      701
     ]
    },
    "product": {
     "line number": [
      704
     ]
    },
    "sometrue": {
     "line number": [
      702
     ]
    },
    "sum": {
     "line number": [
      703
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_testUfuncRegression": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      685
     ]
    },
    "getattr": {
     "line number": [
      684,
      686,
      687
     ]
    },
    "mf": {
     "line number": [
      695
     ]
    },
    "numpy.errstate": {
     "line number": [
      689
     ]
    },
    "numpy.ma": {
     "line number": [
      687
     ]
    },
    "numpy.ma.core.umath": {
     "line number": [
      684
     ]
    },
    "numpy.ma.tests.test_old_ma.eq": {
     "line number": [
      696
     ]
    },
    "numpy.ma.tests.test_old_ma.eqmask": {
     "line number": [
      697
     ]
    },
    "numpy.seterr": {
     "line number": [
      691,
      693
     ]
    },
    "uf": {
     "line number": [
      694
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.eq": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "allclose": {
     "line number": [
      15
     ]
    },
    "print": {
     "line number": [
      17
     ]
    },
    "str": {
     "line number": [
      20,
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.eqmask": {
  "data": {
   "lineno": 819
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.float32": {
  "data": {
   "shadows": "numpy.core.numerictypes.float32"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.pi": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_old_ma.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.umath": {
  "data": {
   "shadows": "numpy.ma.core.umath"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      73
     ]
    },
    "run_module_suite": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.tests.test_regression.MaskType": {
  "data": {
   "shadows": "numpy.ma.MaskType"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_atleast_2d": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      48,
      49
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      47
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_ddof_corrcoef": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      71
     ]
    },
    "numpy.array": {
     "line number": [
      67
     ]
    },
    "numpy.ma.corrcoef": {
     "line number": [
      68,
      69
     ]
    },
    "numpy.ma.masked_equal": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "numpy.ma.array": {
     "line number": [
      18
     ]
    },
    "numpy.ma.tests.test_regression.rlevel": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_create": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      14
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      13
     ]
    },
    "numpy.ma.nonzero": {
     "line number": [
      14
     ]
    },
    "numpy.ma.tests.test_regression.rlevel": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_multiply": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "numpy.ma.masked": {
     "line number": [
      31
     ]
    },
    "numpy.ma.tests.test_regression.rlevel": {
     "line number": [
      28
     ]
    },
    "numpy.ma.zeros": {
     "line number": [
      30
     ]
    },
    "numpy.zeros": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_repeat": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.ma.array": {
     "line number": [
      38
     ]
    },
    "numpy.ma.tests.test_regression.rlevel": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_repr_unicode": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "numpy.compat.sixu": {
     "line number": [
      42
     ]
    },
    "numpy.ma.array": {
     "line number": [
      42
     ]
    },
    "repr": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_mem_masked_where": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "numpy.ma.MaskType": {
     "line number": [
      24
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      25
     ]
    },
    "numpy.ma.tests.test_regression.rlevel": {
     "line number": [
      20
     ]
    },
    "numpy.zeros": {
     "line number": [
      23,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_set_fill_value_unicode_py3": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      55
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_var_sets_maskedarray_scalar": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      62
     ]
    },
    "float": {
     "line number": [
      60
     ]
    },
    "numpy.arange": {
     "line number": [
      59
     ]
    },
    "numpy.ma.array": {
     "line number": [
      59,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.masked_where": {
  "data": {
   "shadows": "numpy.ma.masked_where"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.rlevel": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_regression.sixu": {
  "data": {
   "shadows": "numpy.compat.sixu"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      180
     ]
    },
    "numpy.ma.tests.test_subclassing.MMatrix": {
     "line number": [
      71
     ]
    },
    "numpy.ma.tests.test_subclassing.MSubArray": {
     "line number": [
      54
     ]
    },
    "numpy.ma.tests.test_subclassing.SubArray": {
     "line number": [
      36
     ]
    },
    "run_module_suite": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.tests.test_subclassing.MMatrix": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.matrix": {
     "line number": [
      56
     ]
    },
    "property": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.MMatrix.__array_finalize__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.matrix.__array_finalize__": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MMatrix.__new__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "numpy.matrix": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MMatrix._get_series": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MSubArray": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.ma.tests.test_subclassing.SubArray": {
     "line number": [
      38
     ]
    },
    "property": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.MSubArray.__array_finalize__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "numpy.ma.tests.test_subclassing.SubArray": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MSubArray.__new__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "numpy.ma.tests.test_subclassing.SubArray": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MSubArray._get_series": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__add__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.ndarray.__add__": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__array_finalize__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__new__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.asanyarray": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.setUp": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      77
     ]
    },
    "numpy.ma.tests.test_subclassing.mmatrix": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_attributepropagation": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      125
     ]
    },
    "array": {
     "line number": [
      125
     ]
    },
    "assert_equal": {
     "line number": [
      133,
      142,
      144,
      149
     ]
    },
    "hasattr": {
     "line number": [
      148
     ]
    },
    "isinstance": {
     "line number": [
      130,
      131,
      132,
      136,
      137,
      138
     ]
    },
    "masked_array": {
     "line number": [
      126,
      147
     ]
    },
    "numpy.ma.tests.test_subclassing.MSubArray": {
     "line number": [
      131,
      137
     ]
    },
    "numpy.ma.tests.test_subclassing.SubArray": {
     "line number": [
      132,
      138
     ]
    },
    "numpy.ma.tests.test_subclassing.msubarray": {
     "line number": [
      127
     ]
    },
    "numpy.ma.tests.test_subclassing.subarray": {
     "line number": [
      126,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_data_subclassing": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      88
     ]
    },
    "isinstance": {
     "line number": [
      87,
      89
     ]
    },
    "masked_array": {
     "line number": [
      86
     ]
    },
    "numpy.arange": {
     "line number": [
      83
     ]
    },
    "numpy.ma.tests.test_subclassing.SubArray": {
     "line number": [
      85,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_binary_operations": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "add": {
     "line number": [
      107,
      108,
      110,
      111
     ]
    },
    "add.outer": {
     "line number": [
      112
     ]
    },
    "assert_equal": {
     "line number": [
      110
     ]
    },
    "hypot": {
     "line number": [
      113,
      114
     ]
    },
    "isinstance": {
     "line number": [
      107,
      108,
      111,
      112,
      113,
      114
     ]
    },
    "numpy.ma.tests.test_subclassing.mmatrix": {
     "line number": [
      107,
      108,
      112,
      113,
      114
     ]
    },
    "numpy.matrix": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_binary_operations2": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      122
     ]
    },
    "divide": {
     "line number": [
      120,
      121,
      122,
      122
     ]
    },
    "isinstance": {
     "line number": [
      120,
      121
     ]
    },
    "masked_array": {
     "line number": [
      119
     ]
    },
    "numpy.ma.tests.test_subclassing.mmatrix": {
     "line number": [
      120,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_unary_operations": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      101
     ]
    },
    "isinstance": {
     "line number": [
      100
     ]
    },
    "log": {
     "line number": [
      100,
      101
     ]
    },
    "numpy.errstate": {
     "line number": [
      99
     ]
    },
    "numpy.log": {
     "line number": [
      101
     ]
    },
    "numpy.ma.tests.test_subclassing.mmatrix": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_maskedarray_subclassing": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      94
     ]
    },
    "numpy.matrix": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclasspreservation": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "asanyarray": {
     "line number": [
      173
     ]
    },
    "asarray": {
     "line number": [
      163
     ]
    },
    "assert_equal": {
     "line number": [
      161,
      166,
      170,
      171,
      175,
      176
     ]
    },
    "isinstance": {
     "line number": [
      159,
      160,
      164,
      165,
      169,
      174
     ]
    },
    "masked_array": {
     "line number": [
      158,
      168
     ]
    },
    "numpy.arange": {
     "line number": [
      153
     ]
    },
    "numpy.ma.tests.test_subclassing.MSubArray": {
     "line number": [
      156,
      159,
      164,
      169,
      174
     ]
    },
    "zip": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.__date__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.__revision__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.__version__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.mmatrix": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.msubarray": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.subarray": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      431
     ]
    },
    "eval": {
     "line number": [
      455
     ]
    },
    "numpy.ma.timer_comparison.cur": {
     "line number": [
      457,
      457
     ]
    },
    "numpy.ma.timer_comparison.func": {
     "line number": [
      447
     ]
    },
    "numpy.ma.timer_comparison.setup_base": {
     "line number": [
      437
     ]
    },
    "numpy.ma.timer_comparison.setup_cur": {
     "line number": [
      447
     ]
    },
    "numpy.ma.timer_comparison.timeit": {
     "line number": [
      447
     ]
    },
    "numpy.pi": {
     "line number": [
      15
     ]
    },
    "numpy.seterr": {
     "line number": [
      13
     ]
    },
    "numpy.sort": {
     "line number": [
      451
     ]
    },
    "print": {
     "line number": [
      454,
      455,
      457
     ]
    },
    "range": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.timer_comparison.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.build_err_msg": {
  "data": {
   "shadows": "np.testing.utils.build_err_msg"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.cur": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.float_": {
  "data": {
   "shadows": "numpy.float_"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.fromnumeric": {
  "data": {
   "shadows": "np.core.fromnumeric"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.func": {
  "data": {
   "lineno": 445
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison.moduletester": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "object": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.ma.timer_comparison.moduletester.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      50
     ]
    },
    "id": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.assert_array_compare": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      104,
      106
     ]
    },
    "bool": {
     "line number": [
      89
     ]
    },
    "comparison": {
     "line number": [
      86
     ]
    },
    "isinstance": {
     "line number": [
      66,
      72,
      89
     ]
    },
    "len": {
     "line number": [
      97
     ]
    },
    "np.testing.utils.build_err_msg": {
     "line number": [
      79,
      98,
      105
     ]
    },
    "numpy.float_": {
     "line number": [
      65,
      71
     ]
    },
    "numpy.isnan": {
     "line number": [
      67,
      68,
      73,
      74
     ]
    },
    "numpy.ndarray": {
     "line number": [
      66,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.assert_array_equal": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.test_0": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      115
     ]
    },
    "numpy.ma.timer_comparison.pi": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.test_1": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "functools.reduce": {
     "line number": [
      137,
      138,
      147
     ]
    },
    "len": {
     "line number": [
      138,
      147
     ]
    },
    "numpy.array": {
     "line number": [
      122,
      123,
      129
     ]
    },
    "numpy.ma.timer_comparison.pi": {
     "line number": [
      122
     ]
    },
    "numpy.where": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.test_2": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      183
     ]
    },
    "numpy.array": {
     "line number": [
      151,
      188
     ]
    },
    "object": {
     "line number": [
      187,
      188
     ]
    },
    "repr": {
     "line number": [
      156
     ]
    },
    "str": {
     "line number": [
      156
     ]
    },
    "type": {
     "line number": [
      159,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.test_3": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.test_4": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      221
     ]
    },
    "numpy.inner": {
     "line number": [
      227
     ]
    },
    "numpy.outer": {
     "line number": [
      229
     ]
    },
    "numpy.take": {
     "line number": [
      226
     ]
    },
    "numpy.transpose": {
     "line number": [
      225
     ]
    },
    "object": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.test_5": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "numpy.float_": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.test_6": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "numpy.float_": {
     "line number": [
      294,
      296,
      299,
      307,
      308,
      311,
      319,
      320,
      323,
      331,
      332,
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.test_7": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      367
     ]
    },
    "getattr": {
     "line number": [
      366,
      368,
      369
     ]
    },
    "mf": {
     "line number": [
      372
     ]
    },
    "np.core.fromnumeric": {
     "line number": [
      368
     ]
    },
    "numpy.ma.timer_comparison.pi": {
     "line number": [
      343,
      344
     ]
    },
    "uf": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.test_99": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "numpy.add.reduce": {
     "line number": [
      401
     ]
    },
    "numpy.arange": {
     "line number": [
      401,
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.moduletester.test_A": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.pi": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.setup_base": {
  "data": {
   "lineno": 433
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison.setup_cur": {
  "data": {
   "lineno": 437
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "numpy.ma.version": {
  "data": {
   "symbols_in_volume": {
    "int": {
     "line number": [
      14
     ]
    },
    "max": {
     "line number": [
      14
     ]
    },
    "numpy.ma.version.release": {
     "line number": [
      9
     ]
    },
    "numpy.ma.version.revision": {
     "line number": [
      14
     ]
    },
    "numpy.ma.version.version": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.ma.version.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.version.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.version.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.version.release": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.ma.version.revision": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.ma.version.version": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.matlib": {
  "data": {
   "symbols_in_volume": {
    "numpy.__all__": {
     "line number": [
      10
     ]
    },
    "numpy.__version__": {
     "line number": [
      8
     ]
    },
    "numpy.matlib.__all__": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.matlib.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.matlib.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.matlib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matlib.asmatrix": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.asmatrix"
  },
  "type": "import"
 },
 "numpy.matlib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matlib.empty": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.matrixlib.defmatrix.matrix": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matlib.eye": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "float": {
     "line number": [
      176
     ]
    },
    "numpy.eye": {
     "line number": [
      213
     ]
    },
    "numpy.matrixlib.defmatrix.asmatrix": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matlib.identity": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "array": {
     "line number": [
      171
     ]
    },
    "numpy.matlib.empty": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matlib.matrix": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.matrix"
  },
  "type": "import"
 },
 "numpy.matlib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matlib.ones": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "numpy.matrixlib.defmatrix.matrix": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matlib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matlib.rand": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      256
     ]
    },
    "numpy.matrixlib.defmatrix.asmatrix": {
     "line number": [
      258
     ]
    },
    "numpy.random.rand": {
     "line number": [
      258
     ]
    },
    "tuple": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matlib.randn": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      306
     ]
    },
    "numpy.matrixlib.defmatrix.asmatrix": {
     "line number": [
      308
     ]
    },
    "numpy.random.randn": {
     "line number": [
      308
     ]
    },
    "tuple": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matlib.repmat": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "asanyarray": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matlib.zeros": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.matrixlib.defmatrix.matrix": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib": {
  "data": {
   "symbols_in_volume": {
    "numpy.testing.Tester": {
     "line number": [
      11,
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.matrixlib.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.matrixlib.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.matrixlib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.bench": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.matrixlib.defmatrix": {
  "data": {
   "symbols_in_volume": {
    "chr": {
     "line number": [
      31
     ]
    },
    "numpy.matrixlib.defmatrix._NumCharTable": {
     "line number": [
      20
     ]
    },
    "numpy.matrixlib.defmatrix._numchars": {
     "line number": [
      36
     ]
    },
    "numpy.matrixlib.defmatrix._table": {
     "line number": [
      31,
      35
     ]
    },
    "numpy.matrixlib.defmatrix._todelete": {
     "line number": [
      37
     ]
    },
    "numpy.matrixlib.defmatrix.asmatrix": {
     "line number": [
      1094
     ]
    },
    "numpy.matrixlib.defmatrix.sys": {
     "line number": [
      13
     ]
    },
    "range": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.matrixlib.defmatrix.N": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix._NumCharTable": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "numpy.matrixlib.defmatrix._NumCharTable.__getitem__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "chr": {
     "line number": [
      16,
      17
     ]
    },
    "numpy.matrixlib.defmatrix._numchars": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.matrixlib.defmatrix._convert_from_string": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      61
     ]
    },
    "len": {
     "line number": [
      59,
      60
     ]
    },
    "map": {
     "line number": [
      57
     ]
    },
    "numpy.matrixlib.defmatrix._eval": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix._eval": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      44
     ]
    },
    "eval": {
     "line number": [
      46
     ]
    },
    "numpy.matrixlib.defmatrix._table": {
     "line number": [
      42
     ]
    },
    "numpy.matrixlib.defmatrix._todelete": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix._from_string": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1014,
      1017,
      1018
     ]
    },
    "numpy.core.numeric.concatenate": {
     "line number": [
      1021,
      1022
     ]
    },
    "str.split": {
     "line number": [
      1001
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix._numchars": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.matrixlib.defmatrix._table": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.matrixlib.defmatrix._todelete": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.matrixlib.defmatrix.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.asmatrix": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "numpy.matrixlib.defmatrix.matrix": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.binary_repr": {
  "data": {
   "shadows": "numpy.core.numeric.binary_repr"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.bmat": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1070,
      1082,
      1086,
      1091
     ]
    },
    "list": {
     "line number": [
      1082
     ]
    },
    "numpy.core.numeric.concatenate": {
     "line number": [
      1087,
      1089,
      1090
     ]
    },
    "numpy.core.numeric.ndarray": {
     "line number": [
      1086,
      1091
     ]
    },
    "numpy.matrixlib.defmatrix._from_string": {
     "line number": [
      1080
     ]
    },
    "numpy.matrixlib.defmatrix.matrix": {
     "line number": [
      1080,
      1087,
      1090,
      1092
     ]
    },
    "numpy.matrixlib.defmatrix.sys": {
     "line number": [
      1073
     ]
    },
    "str": {
     "line number": [
      1070
     ]
    },
    "tuple": {
     "line number": [
      1082
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.concatenate": {
  "data": {
   "shadows": "numpy.core.numeric.concatenate"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.func": {
  "data": {
   "shadows": "numpy.dual.pinv"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.identity": {
  "data": {
   "shadows": "numpy.core.numeric.identity"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.isscalar": {
  "data": {
   "shadows": "numpy.core.numeric.isscalar"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.issubdtype": {
  "data": {
   "shadows": "numpy.core.numerictypes.issubdtype"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.mat": {
  "data": {
   "lineno": 1094
  },
  "type": "constant"
 },
 "numpy.matrixlib.defmatrix.matrix": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray": {
     "line number": [
      206
     ]
    },
    "property": {
     "line number": [
      994,
      995,
      996,
      997,
      998
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.matrixlib.defmatrix.matrix.__array_finalize__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      303
     ]
    },
    "isinstance": {
     "line number": [
      292
     ]
    },
    "len": {
     "line number": [
      298
     ]
    },
    "numpy.matrixlib.defmatrix.matrix": {
     "line number": [
      292
     ]
    },
    "tuple": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__getitem__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      320
     ]
    },
    "len": {
     "line number": [
      329
     ]
    },
    "numpy.core.numeric.isscalar": {
     "line number": [
      332
     ]
    },
    "numpy.core.numeric.ndarray": {
     "line number": [
      320
     ]
    },
    "numpy.core.numeric.ndarray.__getitem__": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__imul__": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__ipow__": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__mul__": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      344
     ]
    },
    "hasattr": {
     "line number": [
      342
     ]
    },
    "isinstance": {
     "line number": [
      339
     ]
    },
    "list": {
     "line number": [
      339
     ]
    },
    "numpy.core.numeric.dot": {
     "line number": [
      341,
      343
     ]
    },
    "numpy.core.numeric.isscalar": {
     "line number": [
      342
     ]
    },
    "numpy.core.numeric.ndarray": {
     "line number": [
      339
     ]
    },
    "numpy.matrixlib.defmatrix.asmatrix": {
     "line number": [
      341
     ]
    },
    "tuple": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__new__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      272
     ]
    },
    "isinstance": {
     "line number": [
      245,
      253,
      264
     ]
    },
    "numpy.core.numeric.array": {
     "line number": [
      268
     ]
    },
    "numpy.core.numeric.dtype": {
     "line number": [
      257
     ]
    },
    "numpy.core.numeric.ndarray": {
     "line number": [
      253
     ]
    },
    "numpy.core.numeric.ndarray.__new__": {
     "line number": [
      285
     ]
    },
    "numpy.matrixlib.defmatrix._convert_from_string": {
     "line number": [
      265
     ]
    },
    "numpy.matrixlib.defmatrix.matrix": {
     "line number": [
      245
     ]
    },
    "str": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__pow__": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "numpy.matrixlib.defmatrix.matrix_power": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__repr__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "len": {
     "line number": [
      368
     ]
    },
    "range": {
     "line number": [
      368
     ]
    },
    "repr": {
     "line number": [
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__rmul__": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "numpy.core.numeric.dot": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__rpow__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__str__": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "str": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix._align": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix._collapse": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.all": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.all": {
     "line number": [
      653
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.any": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.any": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.argmax": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.argmax": {
     "line number": [
      723
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.argmin": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.argmin": {
     "line number": [
      793
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.getA": {
  "data": {
   "lineno": 872
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.getA1": {
  "data": {
   "lineno": 901
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.getH": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      989
     ]
    },
    "numpy.core.numeric.complexfloating": {
     "line number": [
      989
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.getI": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": {
    "numpy.core.numeric": {
     "line number": [
      865,
      866
     ]
    },
    "numpy.dual.pinv": {
     "line number": [
      870
     ]
    },
    "numpy.matrixlib.defmatrix.asmatrix": {
     "line number": [
      870
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.getT": {
  "data": {
   "lineno": 928
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.max": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.max": {
     "line number": [
      688
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.mean": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.mean": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.min": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.min": {
     "line number": [
      758
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.prod": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.prod": {
     "line number": [
      590
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.ptp": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.ptp": {
     "line number": [
      826
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.std": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.std": {
     "line number": [
      523
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.sum": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.sum": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.tolist": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.var": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "numpy.core.numeric.ndarray.var": {
     "line number": [
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix_power": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      173
     ]
    },
    "ValueError": {
     "line number": [
      171
     ]
    },
    "int": {
     "line number": [
      172
     ]
    },
    "len": {
     "line number": [
      170,
      194
     ]
    },
    "numpy.core.numeric.asanyarray": {
     "line number": [
      169
     ]
    },
    "numpy.core.numeric.binary_repr": {
     "line number": [
      193
     ]
    },
    "numpy.core.numeric.dot": {
     "line number": [
      188,
      196,
      200,
      202
     ]
    },
    "numpy.core.numeric.identity": {
     "line number": [
      179
     ]
    },
    "numpy.core.numerictypes.issubdtype": {
     "line number": [
      172
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      182
     ]
    },
    "range": {
     "line number": [
      187,
      199
     ]
    },
    "type": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.matrixlib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      12
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      15
     ]
    },
    "numpy.matrixlib.setup.config": {
     "line number": [
      15
     ]
    },
    "numpy.matrixlib.setup.configuration": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.matrixlib.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup.config": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.matrixlib.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.matrixlib.test": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.matrixlib.tests.test_defmatrix": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      399
     ]
    },
    "run_module_suite": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra": {
  "data": {
   "lineno": 209
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_basic": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "allclose": {
     "line number": [
      219,
      225,
      228,
      229,
      230,
      234
     ]
    },
    "array": {
     "line number": [
      213
     ]
    },
    "assert_": {
     "line number": [
      219,
      225,
      228,
      229,
      230,
      234
     ]
    },
    "dot": {
     "line number": [
      220,
      226,
      228
     ]
    },
    "identity": {
     "line number": [
      217,
      223
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      222
     ]
    },
    "numpy.matrix": {
     "line number": [
      215,
      232
     ]
    },
    "range": {
     "line number": [
      218,
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_notimplemented": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      257,
      265
     ]
    },
    "numpy.matrix": {
     "line number": [
      251
     ]
    },
    "object": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_pow": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "assert_array_almost_equal": {
     "line number": [
      245,
      246,
      247
     ]
    },
    "numpy.dot": {
     "line number": [
      246,
      247
     ]
    },
    "numpy.eye": {
     "line number": [
      247
     ]
    },
    "numpy.matrix": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCasting": {
  "data": {
   "lineno": 190
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCasting.test_basic": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "all": {
     "line number": [
      199,
      200,
      206
     ]
    },
    "arange": {
     "line number": [
      192
     ]
    },
    "assert_": {
     "line number": [
      198,
      199,
      200,
      205,
      206
     ]
    },
    "numpy.matrix": {
     "line number": [
      193
     ]
    },
    "ones": {
     "line number": [
      196,
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_basic": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "all": {
     "line number": [
      15,
      23,
      24,
      28
     ]
    },
    "arange": {
     "line number": [
      30
     ]
    },
    "array": {
     "line number": [
      13,
      19,
      26
     ]
    },
    "assert_": {
     "line number": [
      15,
      23,
      24,
      28,
      32
     ]
    },
    "numpy.bmat": {
     "line number": [
      17,
      18,
      28
     ]
    },
    "numpy.matrix": {
     "line number": [
      14,
      27,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_bmat_nondefault_str": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      55
     ]
    },
    "all": {
     "line number": [
      53,
      54,
      56,
      58
     ]
    },
    "array": {
     "line number": [
      39,
      40,
      41,
      45,
      49
     ]
    },
    "assert_": {
     "line number": [
      53,
      54,
      56,
      58
     ]
    },
    "assert_raises": {
     "line number": [
      55
     ]
    },
    "numpy.bmat": {
     "line number": [
      53,
      54,
      55,
      56,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_exceptions": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      36
     ]
    },
    "assert_raises": {
     "line number": [
      36
     ]
    },
    "numpy.matrix": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestIndexing": {
  "data": {
   "lineno": 313
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestIndexing.test_basic": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      319
     ]
    },
    "float": {
     "line number": [
      315,
      316
     ]
    },
    "numpy.asmatrix": {
     "line number": [
      315
     ]
    },
    "zeros": {
     "line number": [
      315,
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestMatrixReturn": {
  "data": {
   "lineno": 271
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestMatrixReturn.test_instance_methods": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      305,
      306,
      307,
      309,
      310
     ]
    },
    "dir": {
     "line number": [
      292
     ]
    },
    "f": {
     "line number": [
      304
     ]
    },
    "getattr": {
     "line number": [
      295
     ]
    },
    "isinstance": {
     "line number": [
      296
     ]
    },
    "numpy.array": {
     "line number": [
      281
     ]
    },
    "numpy.matrix": {
     "line number": [
      273,
      305,
      306,
      307,
      308,
      309,
      310
     ]
    },
    "numpy.matrixlib.tests.test_defmatrix.collections": {
     "line number": [
      296
     ]
    },
    "type": {
     "line number": [
      305,
      306,
      307,
      309,
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing": {
  "data": {
   "lineno": 322
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.setUp": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "numpy.matrix": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_array_from_matrix_list": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "array": {
     "line number": [
      333
     ]
    },
    "assert_equal": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_array_to_list": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_boolean_indexing": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      376
     ]
    },
    "array": {
     "line number": [
      379,
      380
     ]
    },
    "assert_array_equal": {
     "line number": [
      379,
      380
     ]
    },
    "numpy.asmatrix": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_dimesions": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_fancy_indexing": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      343,
      346,
      349
     ]
    },
    "assert_equal": {
     "line number": [
      344,
      347,
      350
     ]
    },
    "isinstance": {
     "line number": [
      343,
      346,
      349
     ]
    },
    "numpy.matrix": {
     "line number": [
      343,
      344,
      346,
      347,
      349,
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_list_indexing": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      383
     ]
    },
    "assert_array_equal": {
     "line number": [
      386,
      387
     ]
    },
    "numpy.asmatrix": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_matrix_element": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      354,
      355,
      356,
      357,
      360,
      361,
      362
     ]
    },
    "numpy.matrix": {
     "line number": [
      353,
      354,
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_row_column_indexing": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      370,
      371,
      372,
      373
     ]
    },
    "numpy.asmatrix": {
     "line number": [
      369
     ]
    },
    "numpy.eye": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_scalar_indexing": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      366
     ]
    },
    "float": {
     "line number": [
      365
     ]
    },
    "numpy.asmatrix": {
     "line number": [
      365
     ]
    },
    "zeros": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower": {
  "data": {
   "lineno": 389
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower.test_list": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      397
     ]
    },
    "numpy.matrixlib.defmatrix.matrix_power": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower.test_returntype": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "array": {
     "line number": [
      391
     ]
    },
    "assert_": {
     "line number": [
      392,
      394
     ]
    },
    "numpy.matrix": {
     "line number": [
      394
     ]
    },
    "numpy.matrixlib.defmatrix.matrix_power": {
     "line number": [
      392,
      394
     ]
    },
    "numpy.matrixlib.mat": {
     "line number": [
      393
     ]
    },
    "type": {
     "line number": [
      392,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_asmatrix": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      176
     ]
    },
    "assert_": {
     "line number": [
      179
     ]
    },
    "numpy.asmatrix": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_basic": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "all": {
     "line number": [
      134,
      135,
      136,
      141,
      142
     ]
    },
    "allclose": {
     "line number": [
      133,
      140
     ]
    },
    "array": {
     "line number": [
      130,
      134,
      135,
      141,
      142
     ]
    },
    "assert_": {
     "line number": [
      133,
      134,
      135,
      136,
      140,
      141,
      142
     ]
    },
    "conjugate": {
     "line number": [
      142
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      133,
      140
     ]
    },
    "numpy.matrix": {
     "line number": [
      132,
      139
     ]
    },
    "transpose": {
     "line number": [
      134,
      135,
      141,
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_comparisons": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      172,
      173
     ]
    },
    "all": {
     "line number": [
      155,
      156,
      158,
      159,
      160,
      164,
      165,
      168,
      170,
      172,
      173
     ]
    },
    "any": {
     "line number": [
      157,
      161,
      163,
      166,
      169
     ]
    },
    "arange": {
     "line number": [
      152
     ]
    },
    "assert_": {
     "line number": [
      155,
      156,
      157,
      158,
      159,
      160,
      161,
      163,
      164,
      165,
      166,
      168,
      169,
      170,
      172,
      173
     ]
    },
    "numpy.matrix": {
     "line number": [
      153,
      154,
      156,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_max": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      97,
      98,
      99,
      101,
      102,
      103
     ]
    },
    "numpy.matrix": {
     "line number": [
      96,
      98,
      99,
      102,
      103
     ]
    },
    "numpy.max": {
     "line number": [
      101,
      102,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_min": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      107,
      108,
      109,
      111,
      112,
      113
     ]
    },
    "numpy.matrix": {
     "line number": [
      106,
      108,
      109,
      112,
      113
     ]
    },
    "numpy.min": {
     "line number": [
      111,
      112,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_noaxis": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      183,
      184
     ]
    },
    "numpy.matrix": {
     "line number": [
      182,
      183,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_pinv": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "arange": {
     "line number": [
      145
     ]
    },
    "assert_almost_equal": {
     "line number": [
      149
     ]
    },
    "numpy.matrix": {
     "line number": [
      145,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_prod": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      93
     ]
    },
    "assert_equal": {
     "line number": [
      84,
      85,
      86,
      88,
      89,
      90
     ]
    },
    "numpy.matrix": {
     "line number": [
      83,
      85,
      86,
      89,
      90,
      92
     ]
    },
    "numpy.prod": {
     "line number": [
      88,
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_ptp": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "all": {
     "line number": [
      118,
      119
     ]
    },
    "array": {
     "line number": [
      118,
      119
     ]
    },
    "assert_": {
     "line number": [
      117,
      118,
      119
     ]
    },
    "numpy.arange": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_repr": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      188
     ]
    },
    "numpy.matrix": {
     "line number": [
      187
     ]
    },
    "repr": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_sum": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      73,
      74,
      77,
      78
     ]
    },
    "assert_equal": {
     "line number": [
      75,
      79
     ]
    },
    "numpy.matrix": {
     "line number": [
      66,
      70,
      71
     ]
    },
    "numpy.sum": {
     "line number": [
      77,
      78,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_var": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      124,
      125
     ]
    },
    "numpy.arange": {
     "line number": [
      122
     ]
    },
    "numpy.matrix": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.asmatrix": {
  "data": {
   "shadows": "numpy.asmatrix"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.bmat": {
  "data": {
   "shadows": "numpy.bmat"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.mat": {
  "data": {
   "shadows": "numpy.matrixlib.mat"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.matrix_power": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.matrix_power"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray": {
  "data": {},
  "type": "module"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView.test_keywords": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      17
     ]
    },
    "assert_array_equal": {
     "line number": [
      15
     ]
    },
    "assert_equal": {
     "line number": [
      18
     ]
    },
    "isinstance": {
     "line number": [
      17
     ]
    },
    "numpy.array": {
     "line number": [
      12
     ]
    },
    "numpy.dtype": {
     "line number": [
      18
     ]
    },
    "numpy.int8": {
     "line number": [
      12,
      12
     ]
    },
    "numpy.matrix": {
     "line number": [
      14,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView.test_type": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      9
     ]
    },
    "isinstance": {
     "line number": [
      9
     ]
    },
    "numpy.array": {
     "line number": [
      8
     ]
    },
    "numpy.matrix": {
     "line number": [
      9,
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_multiarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric": {
  "data": {},
  "type": "module"
 },
 "numpy.matrixlib.tests.test_numeric.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.TestDot": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_numeric.TestDot.test_matscalar": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      9
     ]
    },
    "numpy.core.ones": {
     "line number": [
      9
     ]
    },
    "numpy.matrix": {
     "line number": [
      9
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_numeric.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.ones": {
  "data": {
   "shadows": "numpy.core.ones"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression": {
  "data": {},
  "type": "module"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_kron_matrix": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      12
     ]
    },
    "numpy.kron": {
     "line number": [
      12
     ]
    },
    "numpy.matrix": {
     "line number": [
      11
     ]
    },
    "numpy.matrixlib.tests.test_regression.rlevel": {
     "line number": [
      9
     ]
    },
    "type": {
     "line number": [
      12,
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_multiply_by_1d_vector": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      28
     ]
    },
    "numpy.matrixlib.tests.test_regression.rlevel": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_multiply_by_1d_vector.mul": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      26
     ]
    },
    "numpy.mat": {
     "line number": [
      26
     ]
    },
    "numpy.ones": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_properties": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      17,
      18,
      20,
      21
     ]
    },
    "float": {
     "line number": [
      16
     ]
    },
    "numpy.matrix": {
     "line number": [
      16,
      17,
      18,
      19,
      20,
      21
     ]
    },
    "numpy.matrixlib.tests.test_regression.rlevel": {
     "line number": [
      14
     ]
    },
    "type": {
     "line number": [
      17,
      18,
      20,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_std_argmax": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.asmatrix": {
     "line number": [
      32
     ]
    },
    "numpy.matrixlib.tests.test_regression.rlevel": {
     "line number": [
      30
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.rlevel": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.msg": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "numpy.numarray": {
  "data": {
   "symbols_in_volume": {
    "numpy.ModuleDeprecationWarning": {
     "line number": [
      21
     ]
    },
    "numpy.numarray.__all__": {
     "line number": [
      24,
      25,
      26,
      27,
      28,
      29
     ]
    },
    "numpy.numarray._msg": {
     "line number": [
      21
     ]
    },
    "numpy.numarray.warnings": {
     "line number": [
      21
     ]
    },
    "numpy.testing.Tester": {
     "line number": [
      37,
      38
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.ModuleDeprecationWarning": {
  "data": {
   "shadows": "numpy.ModuleDeprecationWarning"
  },
  "type": "import"
 },
 "numpy.numarray.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.numarray.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.numarray._msg": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.numarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      266
     ]
    },
    "numpy.numarray.alter_code1.converttree": {
     "line number": [
      267
     ]
    },
    "numpy.numarray.alter_code1.re": {
     "line number": [
      95,
      133,
      134,
      135,
      136,
      138,
      139,
      140,
      141,
      143,
      144,
      145,
      146,
      230
     ]
    },
    "numpy.numarray.alter_code1.sys": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.alter_code1.__all__": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1._func": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "numpy.numarray.alter_code1.convertall": {
     "line number": [
      256
     ]
    },
    "numpy.numarray.alter_code1.convertsrc": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.addimport": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.numarray.alter_code1.os": {
     "line number": [
      101,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.changeimports": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "len": {
     "line number": [
      82,
      83
     ]
    },
    "numpy.numarray.alter_code1.re": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.convertall": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "numpy.numarray.alter_code1.convertfile": {
     "line number": [
      228
     ]
    },
    "numpy.numarray.alter_code1.glob": {
     "line number": [
      225
     ]
    },
    "numpy.numarray.alter_code1.os": {
     "line number": [
      218,
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.convertfile": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "numpy.numarray.alter_code1.fromstr": {
     "line number": [
      205
     ]
    },
    "numpy.numarray.alter_code1.makenewfile": {
     "line number": [
      212
     ]
    },
    "numpy.numarray.alter_code1.os": {
     "line number": [
      208,
      209,
      211
     ]
    },
    "open": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.convertsrc": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "numpy.numarray.alter_code1.glob": {
     "line number": [
      237,
      241
     ]
    },
    "numpy.numarray.alter_code1.header_re": {
     "line number": [
      246
     ]
    },
    "numpy.numarray.alter_code1.makenewfile": {
     "line number": [
      253
     ]
    },
    "numpy.numarray.alter_code1.os": {
     "line number": [
      232,
      237,
      241,
      249,
      250,
      252
     ]
    },
    "open": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.converttree": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "numpy.numarray.alter_code1._func": {
     "line number": [
      263
     ]
    },
    "numpy.numarray.alter_code1.os": {
     "line number": [
      259,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.flatindex_re": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.fromargs": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "numpy.numarray.alter_code1.convertfile": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.fromstr": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.numarray.alter_code1.changeimports": {
     "line number": [
      172,
      179
     ]
    },
    "numpy.numarray.alter_code1.datetime": {
     "line number": [
      185
     ]
    },
    "numpy.numarray.alter_code1.os": {
     "line number": [
      184
     ]
    },
    "numpy.numarray.alter_code1.replaceattr": {
     "line number": [
      181
     ]
    },
    "numpy.numarray.alter_code1.replaceother": {
     "line number": [
      182
     ]
    },
    "numpy.numarray.alter_code1.sys": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.header_re": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.info_re": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.isbyte_re": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.iscarr_re": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.isfarr_re": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.makenewfile": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "file": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.new_re": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.repeat_re": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.replaceattr": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "numpy.numarray.alter_code1.flatindex_re": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.replaceother": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "numpy.numarray.alter_code1.addimport": {
     "line number": [
      157
     ]
    },
    "numpy.numarray.alter_code1.info_re": {
     "line number": [
      152
     ]
    },
    "numpy.numarray.alter_code1.isbyte_re": {
     "line number": [
      159
     ]
    },
    "numpy.numarray.alter_code1.iscarr_re": {
     "line number": [
      160
     ]
    },
    "numpy.numarray.alter_code1.isfarr_re": {
     "line number": [
      161
     ]
    },
    "numpy.numarray.alter_code1.new_re": {
     "line number": [
      153
     ]
    },
    "numpy.numarray.alter_code1.repeat_re": {
     "line number": [
      162
     ]
    },
    "numpy.numarray.alter_code1.setimag_re": {
     "line number": [
      165
     ]
    },
    "numpy.numarray.alter_code1.setimaginary_re": {
     "line number": [
      166
     ]
    },
    "numpy.numarray.alter_code1.setreal_re": {
     "line number": [
      164
     ]
    },
    "numpy.numarray.alter_code1.setshape_re": {
     "line number": [
      163
     ]
    },
    "numpy.numarray.alter_code1.toggle_re": {
     "line number": [
      154
     ]
    },
    "numpy.numarray.alter_code1.type_re": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.setimag_re": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.setimaginary_re": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.setreal_re": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.setshape_re": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.toggle_re": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.type_re": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code2": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      67
     ]
    },
    "numpy.numarray.alter_code2.fromargs": {
     "line number": [
      68
     ]
    },
    "numpy.numarray.alter_code2.sys": {
     "line number": [
      68
     ]
    },
    "numpy.numarray.alter_code2.warnings": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.alter_code2.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code2._func": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "numpy.numarray.alter_code2.convertall": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code2.convertall": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "numpy.numarray.alter_code2.convertfile": {
     "line number": [
      55
     ]
    },
    "numpy.numarray.alter_code2.glob": {
     "line number": [
      53
     ]
    },
    "numpy.numarray.alter_code2.os": {
     "line number": [
      46,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.convertfile": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "fromstr": {
     "line number": [
      39
     ]
    },
    "numpy.numarray.alter_code2.getandcopy": {
     "line number": [
      38
     ]
    },
    "numpy.numarray.alter_code2.makenewfile": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.converttree": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "numpy.numarray.alter_code2._func": {
     "line number": [
      64
     ]
    },
    "numpy.numarray.alter_code2.os": {
     "line number": [
      60,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code2.fromargs": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.numarray.alter_code2.convertfile": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.getandcopy": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "file": {
     "line number": [
      25
     ]
    },
    "numpy.numarray.alter_code2.makenewfile": {
     "line number": [
      29
     ]
    },
    "numpy.numarray.alter_code2.os": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code2.makenewfile": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "file": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code2.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.numarray.bench": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.numarray.compat": {
  "data": {},
  "type": "module"
 },
 "numpy.numarray.compat.ArrayType": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.numarray.compat.NewAxis": {
  "data": {
   "shadows": "numpy.newaxis"
  },
  "type": "import"
 },
 "numpy.numarray.compat.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.numarray.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.convolve": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      5,
      8,
      16
     ]
    },
    "numpy.numarray.convolve.msg": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.convolve.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.convolve.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.convolve.msg": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.numarray.convolve.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.fft": {
  "data": {
   "symbols_in_volume": {
    "numpy.oldnumeric.fft": {
     "line number": [
      8
     ]
    },
    "numpy.oldnumeric.fft.__all__": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.fft.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.numarray.fft.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.fft.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.fft.nof": {
  "data": {
   "shadows": "numpy.oldnumeric.fft"
  },
  "type": "import"
 },
 "numpy.numarray.fft.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.functions": {
  "data": {
   "symbols_in_volume": {
    "list": {
     "line number": [
      159
     ]
    },
    "numpy.numarray.functions.__all__": {
     "line number": [
      6
     ]
    },
    "numpy.numarray.functions.arange": {
     "line number": [
      98
     ]
    },
    "numpy.numarray.functions.asarray": {
     "line number": [
      322
     ]
    },
    "numpy.numarray.functions.sys": {
     "line number": [
      44,
      49
     ]
    },
    "range": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.functions.CLIP": {
  "data": {
   "shadows": "numpy.CLIP"
  },
  "type": "import"
 },
 "numpy.numarray.functions.EarlyEOFError": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.functions.FileSeekWarning": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.functions.RAISE": {
  "data": {
   "shadows": "numpy.RAISE"
  },
  "type": "import"
 },
 "numpy.numarray.functions.SizeMismatchError": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.functions.SizeMismatchWarning": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.functions.WRAP": {
  "data": {
   "shadows": "numpy.WRAP"
  },
  "type": "import"
 },
 "numpy.numarray.functions._BLOCKSIZE": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "numpy.numarray.functions.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.numarray.functions._resizebuf": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "len": {
     "line number": [
      271,
      272,
      274
     ]
    },
    "numpy.newbuffer": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions._warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.numarray.functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.functions.all": {
  "data": {
   "shadows": "numpy.all"
  },
  "type": "import"
 },
 "numpy.numarray.functions.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "numpy.numarray.functions.alltrue": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "numpy.alltrue": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.and_": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "numpy.numarray.functions.any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "numpy.numarray.functions.arange": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      96
     ]
    },
    "numpy.numarray.functions.type2dtype": {
     "line number": [
      95
     ]
    },
    "type": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.argmax": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "numpy.argmax": {
     "line number": [
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.argmin": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "numpy.argmin": {
     "line number": [
      488
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.argsort": {
  "data": {
   "shadows": "numpy.argsort"
  },
  "type": "import"
 },
 "numpy.numarray.functions.around": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "numpy.around": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.array": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      304,
      306,
      308
     ]
    },
    "numpy.array": {
     "line number": [
      311
     ]
    },
    "numpy.empty": {
     "line number": [
      303
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      309
     ]
    },
    "numpy.numarray.functions.copy": {
     "line number": [
      311
     ]
    },
    "numpy.numarray.functions.fromfile": {
     "line number": [
      305
     ]
    },
    "numpy.numarray.functions.fromstring": {
     "line number": [
      307
     ]
    },
    "numpy.numarray.functions.type2dtype": {
     "line number": [
      297
     ]
    },
    "numpy.shape": {
     "line number": [
      299,
      303,
      305,
      307,
      312,
      313
     ]
    },
    "str": {
     "line number": [
      306
     ]
    },
    "type": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.array2list": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "numpy.numarray.functions.array_equal": {
  "data": {
   "shadows": "numpy.array_equal"
  },
  "type": "import"
 },
 "numpy.numarray.functions.array_equiv": {
  "data": {
   "shadows": "numpy.array_equiv"
  },
  "type": "import"
 },
 "numpy.numarray.functions.array_repr": {
  "data": {
   "shadows": "numpy.array_repr"
  },
  "type": "import"
 },
 "numpy.numarray.functions.array_str": {
  "data": {
   "shadows": "numpy.array_str"
  },
  "type": "import"
 },
 "numpy.numarray.functions.arrayrange": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "numpy.numarray.functions.asarray": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      317
     ]
    },
    "numpy.ndarray": {
     "line number": [
      317
     ]
    },
    "numpy.numarray.functions.array": {
     "line number": [
      320
     ]
    },
    "type": {
     "line number": [
      317,
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.average": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "numpy.average": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.choose": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "numpy.RAISE": {
     "line number": [
      122
     ]
    },
    "numpy.asarray": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.clip": {
  "data": {
   "shadows": "numpy.clip"
  },
  "type": "import"
 },
 "numpy.numarray.functions.compress": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "numpy.compress": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.concatenate": {
  "data": {
   "shadows": "numpy.concatenate"
  },
  "type": "import"
 },
 "numpy.numarray.functions.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.numarray.functions.copy_reg": {
  "data": {
   "shadows": "copy_reg"
  },
  "type": "import"
 },
 "numpy.numarray.functions.cumproduct": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      482
     ]
    },
    "type": {
     "line number": [
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.cumsum": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      479
     ]
    },
    "type": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.diagonal": {
  "data": {
   "shadows": "numpy.diagonal"
  },
  "type": "import"
 },
 "numpy.numarray.functions.divide_remainder": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.numarray.functions.asarray": {
     "line number": [
      109,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.functions.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.numarray.functions.e": {
  "data": {
   "shadows": "numpy.e"
  },
  "type": "import"
 },
 "numpy.numarray.functions.explicit_type": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "numpy.numarray.functions.flush_caches": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "numpy.numarray.functions.fromfile": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      217,
      245
     ]
    },
    "IOError": {
     "line number": [
      217,
      248
     ]
    },
    "ValueError": {
     "line number": [
      175,
      179
     ]
    },
    "int": {
     "line number": [
      208
     ]
    },
    "isinstance": {
     "line number": [
      166,
      171
     ]
    },
    "len": {
     "line number": [
      185,
      192,
      227,
      230,
      231,
      233,
      237,
      244,
      251,
      252,
      258
     ]
    },
    "list": {
     "line number": [
      174,
      256
     ]
    },
    "max": {
     "line number": [
      209,
      220
     ]
    },
    "numpy.empty": {
     "line number": [
      180
     ]
    },
    "numpy.ndarray": {
     "line number": [
      260
     ]
    },
    "numpy.newbuffer": {
     "line number": [
      222
     ]
    },
    "numpy.not_equal": {
     "line number": [
      262
     ]
    },
    "numpy.numarray.functions.EarlyEOFError": {
     "line number": [
      186,
      193
     ]
    },
    "numpy.numarray.functions.FileSeekWarning": {
     "line number": [
      247,
      250
     ]
    },
    "numpy.numarray.functions.SizeMismatchError": {
     "line number": [
      239
     ]
    },
    "numpy.numarray.functions.SizeMismatchWarning": {
     "line number": [
      242
     ]
    },
    "numpy.numarray.functions._BLOCKSIZE": {
     "line number": [
      183,
      184,
      185,
      187,
      188,
      189,
      209
     ]
    },
    "numpy.numarray.functions._resizebuf": {
     "line number": [
      231,
      253
     ]
    },
    "numpy.numarray.functions.type2dtype": {
     "line number": [
      168
     ]
    },
    "numpy.product": {
     "line number": [
      208
     ]
    },
    "numpy.shape": {
     "line number": [
      169,
      170,
      171,
      172,
      172,
      174,
      177,
      180,
      208,
      256,
      256,
      258,
      260
     ]
    },
    "numpy.shape.index": {
     "line number": [
      257
     ]
    },
    "open": {
     "line number": [
      167
     ]
    },
    "str": {
     "line number": [
      166
     ]
    },
    "tuple": {
     "line number": [
      171
     ]
    },
    "type": {
     "line number": [
      168,
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.fromfunction": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "numpy.fromfunction": {
     "line number": [
      71
     ]
    },
    "numpy.numarray.functions.type2dtype": {
     "line number": [
      70
     ]
    },
    "numpy.shape": {
     "line number": [
      71
     ]
    },
    "type": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.fromlist": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      293
     ]
    },
    "numpy.numarray.functions.type2dtype": {
     "line number": [
      292
     ]
    },
    "type": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.fromstring": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "numpy.fromstring": {
     "line number": [
      284
     ]
    },
    "numpy.numarray.functions.type2dtype": {
     "line number": [
      279
     ]
    },
    "numpy.product": {
     "line number": [
      283
     ]
    },
    "numpy.shape": {
     "line number": [
      280,
      283,
      285,
      286
     ]
    },
    "type": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.getShape": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      343,
      345,
      347
     ]
    },
    "issubclass": {
     "line number": [
      342
     ]
    },
    "len": {
     "line number": [
      337,
      344
     ]
    },
    "numpy.MAXDIMS": {
     "line number": [
      344
     ]
    },
    "numpy.array": {
     "line number": [
      341
     ]
    },
    "numpy.integer": {
     "line number": [
      342
     ]
    },
    "numpy.shape": {
     "line number": [
      335,
      338,
      338,
      340,
      340,
      341,
      348
     ]
    },
    "tuple": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.getTypeObject": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      331
     ]
    },
    "numpy.array": {
     "line number": [
      329
     ]
    },
    "type": {
     "line number": [
      326,
      327
     ]
    },
    "typefrom": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.identity": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "numpy.identity": {
     "line number": [
      353
     ]
    },
    "numpy.numarray.functions.type2dtype": {
     "line number": [
      352
     ]
    },
    "type": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.indices": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "numpy.indices": {
     "line number": [
      91
     ]
    },
    "numpy.shape": {
     "line number": [
      91
     ]
    },
    "type": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.info": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "bp": {
     "line number": [
      377,
      378,
      401
     ]
    },
    "getattr": {
     "line number": [
      360,
      362
     ]
    },
    "hex": {
     "line number": [
      389
     ]
    },
    "int": {
     "line number": [
      359
     ]
    },
    "len": {
     "line number": [
      371
     ]
    },
    "numpy": {
     "line number": [
      356,
      361,
      369,
      379,
      381,
      383,
      402
     ]
    },
    "numpy.numarray.functions.sys": {
     "line number": [
      355,
      393,
      397,
      400
     ]
    },
    "print": {
     "line number": [
      365,
      366,
      368,
      370,
      375,
      376,
      377,
      378,
      380,
      382,
      389,
      390,
      393,
      396,
      399,
      401,
      403,
      405
     ]
    },
    "repr": {
     "line number": [
      382
     ]
    },
    "type": {
     "line number": [
      360
     ]
    },
    "typefrom": {
     "line number": [
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.innerproduct": {
  "data": {
   "shadows": "numpy.inner"
  },
  "type": "import"
 },
 "numpy.numarray.functions.inputarray": {
  "data": {
   "lineno": 322
  },
  "type": "constant"
 },
 "numpy.numarray.functions.isBigEndian": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.numarray.functions.kroneckerproduct": {
  "data": {
   "shadows": "numpy.kron"
  },
  "type": "import"
 },
 "numpy.numarray.functions.lexsort": {
  "data": {
   "shadows": "numpy.lexsort"
  },
  "type": "import"
 },
 "numpy.numarray.functions.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.numarray.functions.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.numarray.functions.matrixmultiply": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.numarray.functions.newobj": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      494
     ]
    },
    "numpy.empty_like": {
     "line number": [
      492
     ]
    },
    "type": {
     "line number": [
      491,
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.nonzero": {
  "data": {
   "shadows": "numpy.nonzero"
  },
  "type": "import"
 },
 "numpy.numarray.functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.numarray.functions.ones": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "numpy.numarray.functions.type2dtype": {
     "line number": [
      73
     ]
    },
    "numpy.ones": {
     "line number": [
      74
     ]
    },
    "numpy.shape": {
     "line number": [
      74
     ]
    },
    "type": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.numarray.functions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.numarray.functions.outerproduct": {
  "data": {
   "shadows": "numpy.outer"
  },
  "type": "import"
 },
 "numpy.numarray.functions.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "numpy.numarray.functions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.functions.put": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      410
     ]
    },
    "int": {
     "line number": [
      417
     ]
    },
    "isinstance": {
     "line number": [
      409,
      417
     ]
    },
    "list": {
     "line number": [
      422,
      425
     ]
    },
    "numpy.RAISE": {
     "line number": [
      408
     ]
    },
    "numpy.compat.long": {
     "line number": [
      417
     ]
    },
    "numpy.integer": {
     "line number": [
      417
     ]
    },
    "numpy.ndarray": {
     "line number": [
      409
     ]
    },
    "numpy.numarray.functions.array": {
     "line number": [
      409,
      411,
      413
     ]
    },
    "numpy.numarray.functions.asarray": {
     "line number": [
      411
     ]
    },
    "numpy.numarray.functions.indices": {
     "line number": [
      414,
      416,
      419,
      427
     ]
    },
    "range": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.putmask": {
  "data": {
   "shadows": "numpy.putmask"
  },
  "type": "import"
 },
 "numpy.numarray.functions.rank": {
  "data": {
   "shadows": "numpy.rank"
  },
  "type": "import"
 },
 "numpy.numarray.functions.ravel": {
  "data": {
   "shadows": "numpy.ravel"
  },
  "type": "import"
 },
 "numpy.numarray.functions.repeat": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "numpy.numarray.functions.array": {
     "line number": [
      431
     ]
    },
    "numpy.repeat": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.reshape": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "len": {
     "line number": [
      435
     ]
    },
    "numpy.numarray.functions.array": {
     "line number": [
      437
     ]
    },
    "numpy.reshape": {
     "line number": [
      437
     ]
    },
    "numpy.shape": {
     "line number": [
      436,
      436,
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.resize": {
  "data": {
   "shadows": "numpy.resize"
  },
  "type": "import"
 },
 "numpy.numarray.functions.round": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      443
     ]
    },
    "numpy.numarray.functions.around": {
     "line number": [
      444
     ]
    },
    "warnings.warn": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.searchsorted": {
  "data": {
   "shadows": "numpy.searchsorted"
  },
  "type": "import"
 },
 "numpy.numarray.functions.shape": {
  "data": {
   "shadows": "numpy.shape"
  },
  "type": "import"
 },
 "numpy.numarray.functions.size": {
  "data": {
   "shadows": "numpy.size"
  },
  "type": "import"
 },
 "numpy.numarray.functions.sometrue": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "numpy.numarray.functions.array": {
     "line number": [
      447
     ]
    },
    "numpy.sometrue": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.sort": {
  "data": {
   "shadows": "numpy.sort"
  },
  "type": "import"
 },
 "numpy.numarray.functions.swapaxes": {
  "data": {
   "shadows": "numpy.swapaxes"
  },
  "type": "import"
 },
 "numpy.numarray.functions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.numarray.functions.take": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "int": {
     "line number": [
      452
     ]
    },
    "isinstance": {
     "line number": [
      452
     ]
    },
    "list": {
     "line number": [
      458,
      461
     ]
    },
    "numpy.RAISE": {
     "line number": [
      450
     ]
    },
    "numpy.asarray": {
     "line number": [
      451
     ]
    },
    "numpy.compat.long": {
     "line number": [
      452
     ]
    },
    "numpy.integer": {
     "line number": [
      452
     ]
    },
    "numpy.numarray.functions.array": {
     "line number": [
      451,
      451,
      453,
      458,
      462
     ]
    },
    "numpy.numarray.functions.indices": {
     "line number": [
      453,
      463
     ]
    },
    "range": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.tensormultiply": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      472
     ]
    },
    "numpy.asarray": {
     "line number": [
      470,
      470
     ]
    },
    "numpy.dot": {
     "line number": [
      474
     ]
    },
    "numpy.reshape": {
     "line number": [
      474,
      474,
      475
     ]
    },
    "numpy.shape": {
     "line number": [
      473,
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.tname": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "numpy.numarray.functions.togglebyteorder": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "numpy.numarray.functions.trace": {
  "data": {
   "shadows": "numpy.trace"
  },
  "type": "import"
 },
 "numpy.numarray.functions.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "numpy.numarray.functions.type2dtype": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      62,
      64,
      66
     ]
    },
    "type": {
     "line number": [
      60,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.numarray.functions.vdot": {
  "data": {
   "shadows": "numpy.vdot"
  },
  "type": "import"
 },
 "numpy.numarray.functions.where": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "numpy.where": {
     "line number": [
      82,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.functions.zeros": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.numarray.functions.type2dtype": {
     "line number": [
      77
     ]
    },
    "numpy.shape": {
     "line number": [
      78
     ]
    },
    "numpy.zeros": {
     "line number": [
      78
     ]
    },
    "type": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.image": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      5,
      8,
      16
     ]
    },
    "numpy.numarray.image.msg": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.image.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.image.msg": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.numarray.image.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.linear_algebra": {
  "data": {
   "symbols_in_volume": {
    "list": {
     "line number": [
      7
     ]
    },
    "numpy.numarray.linear_algebra.__all__": {
     "line number": [
      8
     ]
    },
    "numpy.oldnumeric.linear_algebra.__all__": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.linear_algebra.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.numarray.linear_algebra._qr": {
  "data": {
   "shadows": "numpy.linalg.qr"
  },
  "type": "import"
 },
 "numpy.numarray.linear_algebra.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.linear_algebra.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.linear_algebra.nol": {
  "data": {
   "shadows": "numpy.oldnumeric.linear_algebra"
  },
  "type": "import"
 },
 "numpy.numarray.linear_algebra.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.linear_algebra.qr_decomposition": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.linalg.qr": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.ma": {
  "data": {},
  "type": "module"
 },
 "numpy.numarray.ma.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.ma.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.ma.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.matrix": {
  "data": {},
  "type": "module"
 },
 "numpy.numarray.matrix.Matrix": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "numpy.matrix": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.matrix.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.numarray.matrix._matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.numarray.matrix.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.matrix.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.matrix.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.mlab": {
  "data": {
   "symbols_in_volume": {
    "numpy.oldnumeric.mlab": {
     "line number": [
      8
     ]
    },
    "numpy.oldnumeric.mlab.__all__": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.mlab.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.numarray.mlab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.mlab.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.mlab.nom": {
  "data": {
   "shadows": "numpy.oldnumeric.mlab"
  },
  "type": "import"
 },
 "numpy.numarray.mlab.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.nd_image": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      5,
      8,
      16
     ]
    },
    "numpy.numarray.nd_image.msg": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.nd_image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.nd_image.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.nd_image.msg": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.numarray.nd_image.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.numerictypes": {
  "data": {
   "symbols_in_volume": {
    "bool": {
     "line number": [
      316,
      344,
      345,
      513
     ]
    },
    "complex": {
     "line number": [
      195,
      196,
      316,
      324,
      330,
      336,
      342,
      513
     ]
    },
    "float": {
     "line number": [
      316,
      323,
      329,
      335,
      341,
      513
     ]
    },
    "int": {
     "line number": [
      316,
      321,
      327,
      333,
      339,
      513
     ]
    },
    "numpy.compat.long": {
     "line number": [
      316,
      322,
      328,
      334,
      340,
      513
     ]
    },
    "numpy.numarray.numerictypes.AnyType": {
     "line number": [
      175
     ]
    },
    "numpy.numarray.numerictypes.Bool": {
     "line number": [
      199,
      242,
      262,
      457,
      477
     ]
    },
    "numpy.numarray.numerictypes.BooleanType": {
     "line number": [
      181
     ]
    },
    "numpy.numarray.numerictypes.Complex32": {
     "line number": [
      213,
      256,
      280,
      472,
      492,
      526
     ]
    },
    "numpy.numarray.numerictypes.Complex64": {
     "line number": [
      214,
      238,
      257,
      279,
      473,
      472,
      473,
      493,
      492,
      493,
      527
     ]
    },
    "numpy.numarray.numerictypes.ComplexType": {
     "line number": [
      195,
      196
     ]
    },
    "numpy.numarray.numerictypes.Float32": {
     "line number": [
      210,
      254,
      278,
      469,
      489,
      524
     ]
    },
    "numpy.numarray.numerictypes.Float64": {
     "line number": [
      211,
      237,
      255,
      277,
      470,
      469,
      470,
      490,
      489,
      490,
      525
     ]
    },
    "numpy.numarray.numerictypes.FloatingType": {
     "line number": [
      187,
      188
     ]
    },
    "numpy.numarray.numerictypes.HasUInt64": {
     "line number": [
      223,
      251,
      307,
      455
     ]
    },
    "numpy.numarray.numerictypes.Int16": {
     "line number": [
      201,
      219,
      247,
      265,
      460,
      480,
      518
     ]
    },
    "numpy.numarray.numerictypes.Int32": {
     "line number": [
      202,
      220,
      228,
      230,
      248,
      267,
      275,
      461,
      481,
      520,
      539,
      548
     ]
    },
    "numpy.numarray.numerictypes.Int64": {
     "line number": [
      203,
      222,
      225,
      250,
      268,
      273,
      462,
      459,
      460,
      461,
      462,
      482,
      477,
      479,
      480,
      481,
      482,
      484,
      485,
      486,
      487,
      522,
      536,
      545
     ]
    },
    "numpy.numarray.numerictypes.Int8": {
     "line number": [
      200,
      218,
      246,
      261,
      263,
      459,
      479,
      516
     ]
    },
    "numpy.numarray.numerictypes.LP64": {
     "line number": [
      221,
      272,
      319,
      544
     ]
    },
    "numpy.numarray.numerictypes.Object": {
     "line number": [
      198
     ]
    },
    "numpy.numarray.numerictypes.ObjectType": {
     "line number": [
      177
     ]
    },
    "numpy.numarray.numerictypes.SignedIntegralType": {
     "line number": [
      182,
      183,
      184,
      185
     ]
    },
    "numpy.numarray.numerictypes.UInt16": {
     "line number": [
      206,
      235,
      244,
      266,
      465,
      485,
      519
     ]
    },
    "numpy.numarray.numerictypes.UInt32": {
     "line number": [
      207,
      229,
      236,
      245,
      269,
      466,
      486,
      521,
      540,
      549
     ]
    },
    "numpy.numarray.numerictypes.UInt64": {
     "line number": [
      208,
      224,
      252,
      270,
      457,
      464,
      465,
      466,
      467,
      523,
      537,
      546
     ]
    },
    "numpy.numarray.numerictypes.UInt8": {
     "line number": [
      205,
      234,
      243,
      264,
      464,
      467,
      484,
      487,
      517
     ]
    },
    "numpy.numarray.numerictypes.UnsignedIntegralType": {
     "line number": [
      190,
      191,
      192,
      193
     ]
    },
    "numpy.numarray.numerictypes.__all__": {
     "line number": [
      226,
      231
     ]
    },
    "numpy.numarray.numerictypes._initGenericCoercions": {
     "line number": [
      429
     ]
    },
    "numpy.numarray.numerictypes._register": {
     "line number": [
      218,
      219,
      220,
      222,
      224,
      225,
      228,
      229,
      230,
      234,
      235,
      236,
      237,
      238,
      242,
      243,
      244,
      245,
      246,
      247,
      248,
      250,
      252,
      254,
      255,
      256,
      257,
      261,
      262,
      263,
      264,
      265,
      266,
      267,
      268,
      269,
      270,
      273,
      275,
      277,
      278,
      279,
      280
     ]
    },
    "numpy.numarray.numerictypes._scipy_alias": {
     "line number": [
      288,
      289,
      290,
      291,
      292,
      293,
      294,
      295,
      296,
      297,
      299,
      300,
      301,
      302
     ]
    },
    "numpy.numarray.numerictypes._scipy_dtypechar": {
     "line number": [
      531
     ]
    },
    "numpy.numarray.numerictypes._scipy_dtypechar_inverse": {
     "line number": [
      532,
      536,
      537,
      539,
      540,
      545,
      546,
      548,
      549
     ]
    },
    "numpy.numarray.numerictypes._tAny": {
     "line number": [
      175
     ]
    },
    "numpy.numarray.numerictypes._tBool": {
     "line number": [
      181
     ]
    },
    "numpy.numarray.numerictypes._tComplex32": {
     "line number": [
      195
     ]
    },
    "numpy.numarray.numerictypes._tComplex64": {
     "line number": [
      196
     ]
    },
    "numpy.numarray.numerictypes._tFloat32": {
     "line number": [
      187
     ]
    },
    "numpy.numarray.numerictypes._tFloat64": {
     "line number": [
      188
     ]
    },
    "numpy.numarray.numerictypes._tInt16": {
     "line number": [
      183
     ]
    },
    "numpy.numarray.numerictypes._tInt32": {
     "line number": [
      184
     ]
    },
    "numpy.numarray.numerictypes._tInt64": {
     "line number": [
      185
     ]
    },
    "numpy.numarray.numerictypes._tInt8": {
     "line number": [
      182
     ]
    },
    "numpy.numarray.numerictypes._tObject": {
     "line number": [
      177
     ]
    },
    "numpy.numarray.numerictypes._tUInt16": {
     "line number": [
      191
     ]
    },
    "numpy.numarray.numerictypes._tUInt32": {
     "line number": [
      192
     ]
    },
    "numpy.numarray.numerictypes._tUInt64": {
     "line number": [
      193
     ]
    },
    "numpy.numarray.numerictypes._tUInt8": {
     "line number": [
      190
     ]
    },
    "numpy.numarray.numerictypes._val": {
     "line number": [
      535,
      538,
      542
     ]
    },
    "numpy.numarray.numerictypes.numpy": {
     "line number": [
      50,
      54,
      534
     ]
    },
    "numpy.numarray.numerictypes.pythonTypeMap": {
     "line number": [
      344
     ]
    },
    "numpy.numarray.numerictypes.scalarTypeMap": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.numerictypes.Any": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.AnyType": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "numpy.numarray.numerictypes.NumericType": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.Bool": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.BooleanType": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "numpy.numarray.numerictypes.NumericType": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.Byte": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Complex": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Complex32": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Complex64": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.ComplexType": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "numpy.numarray.numerictypes.NumericType": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.Float": {
  "data": {
   "lineno": 237
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Float32": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Float64": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.FloatingType": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "numpy.numarray.numerictypes.NumericType": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.HasUInt64": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Int": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Int16": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Int32": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Int64": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Int8": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.IntegralType": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.numarray.numerictypes.NumericType": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.IsType": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      84
     ]
    },
    "numpy.numarray.numerictypes.typeDict": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.LP64": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Long": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.MAX_ALIGN": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.MAX_INT_SIZE": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.MaximumType": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "numpy.numarray.numerictypes._MaximumType": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.MaybeLong": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.NumericType": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "object": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.NumericType.__getnewargs__": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.NumericType.__getstate__": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.NumericType.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      125
     ]
    },
    "bytes": {
     "line number": [
      127
     ]
    },
    "isinstance": {
     "line number": [
      124
     ]
    },
    "numpy.numarray.numerictypes._register": {
     "line number": [
      131
     ]
    },
    "str": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.NumericType.__new__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      112
     ]
    },
    "bytes": {
     "line number": [
      110
     ]
    },
    "numpy.numarray.numerictypes.typeDict": {
     "line number": [
      108,
      109
     ]
    },
    "object.__new__": {
     "line number": [
      116
     ]
    },
    "type": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.Object": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.ObjectType": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.numarray.numerictypes.NumericType": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.Short": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.SignedIntegralType": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "numpy.numarray.numerictypes.IntegralType": {
     "line number": [
      155
     ]
    },
    "numpy.numarray.numerictypes.SignedType": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.SignedType": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "object": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.UInt16": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.UInt32": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.UInt64": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.UInt8": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.UnsignedIntegralType": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.numarray.numerictypes.IntegralType": {
     "line number": [
      158
     ]
    },
    "numpy.numarray.numerictypes.UnsignedType": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.UnsignedType": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "object": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes._MaximumType": {
  "data": {
   "lineno": 476
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._initGenericCoercions": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "float": {
     "line number": [
      423,
      424,
      426,
      426,
      426,
      427
     ]
    },
    "int": {
     "line number": [
      427,
      427
     ]
    },
    "isinstance": {
     "line number": [
      358,
      358,
      363,
      363
     ]
    },
    "min": {
     "line number": [
      371,
      376
     ]
    },
    "numpy.numarray.numerictypes.IntegralType": {
     "line number": [
      358,
      363
     ]
    },
    "numpy.numarray.numerictypes.MAX_INT_SIZE": {
     "line number": [
      371,
      376
     ]
    },
    "numpy.numarray.numerictypes.SignedIntegralType": {
     "line number": [
      358,
      363
     ]
    },
    "numpy.numarray.numerictypes.genericTypeRank": {
     "line number": [
      354,
      356,
      359,
      364,
      394
     ]
    },
    "numpy.numarray.numerictypes.pythonTypeMap": {
     "line number": [
      389
     ]
    },
    "numpy.numarray.numerictypes.pythonTypeRank": {
     "line number": [
      387,
      403,
      406
     ]
    },
    "numpy.numarray.numerictypes.scalarTypeMap": {
     "line number": [
      404,
      407
     ]
    },
    "numpy.numarray.numerictypes.typeDict": {
     "line number": [
      355,
      361
     ]
    },
    "str": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes._register": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      91
     ]
    },
    "numpy.numarray.numerictypes.typeDict": {
     "line number": [
      90,
      92
     ]
    },
    "type": {
     "line number": [
      92,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes._scipy_alias": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "eval": {
     "line number": [
      285
     ]
    },
    "globals": {
     "line number": [
      286,
      286
     ]
    },
    "numpy.numarray.numerictypes._register": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes._scipy_dtypechar": {
  "data": {
   "lineno": 515
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._scipy_dtypechar_inverse": {
  "data": {
   "lineno": 530
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tAny": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tBool": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tComplex32": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tComplex64": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tFloat32": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tFloat64": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tInt16": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tInt32": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tInt64": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tInt8": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tObject": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tUInt16": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tUInt32": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tUInt64": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tUInt8": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._val": {
  "data": {
   "lineno": 534
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.numerictypes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.numerictypes.genericPromotionExclusions": {
  "data": {
   "lineno": 432
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.genericTypeRank": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.getType": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      510
     ]
    },
    "TypeError": {
     "line number": [
      511
     ]
    },
    "isinstance": {
     "line number": [
      506
     ]
    },
    "numpy.numarray.numerictypes.NumericType": {
     "line number": [
      506
     ]
    },
    "numpy.numarray.numerictypes.typeDict": {
     "line number": [
      509
     ]
    },
    "type": {
     "line number": [
      506,
      507,
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.numarray.numerictypes.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.numarray.numerictypes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.numerictypes.pythonTypeMap": {
  "data": {
   "lineno": 332
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.pythonTypeRank": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.scalarTypeMap": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.scalarTypes": {
  "data": {
   "lineno": 513
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.typeDict": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.typecodes": {
  "data": {
   "lineno": 449
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.typefrom": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "numpy.numarray.numerictypes._scipy_dtypechar_inverse": {
     "line number": [
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.random_array": {
  "data": {},
  "type": "module"
 },
 "numpy.numarray.random_array.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.numarray.random_array.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.random_array.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.random_array.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.session": {
  "data": {
   "symbols_in_volume": {
    "numpy.numarray.session._foo": {
     "line number": [
      88
     ]
    },
    "numpy.numarray.session.sys": {
     "line number": [
      87
     ]
    },
    "type": {
     "line number": [
      87,
      88,
      89
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.session.ObjectNotFound": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.session.SAVEFILE": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "numpy.numarray.session.VERBOSE": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "numpy.numarray.session._ModuleProxy": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "object": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.session._ModuleProxy.__getnewargs__": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "numpy.numarray.session._ModuleProxy.__getstate__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "numpy.numarray.session._ModuleProxy.__new__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      156
     ]
    },
    "numpy.numarray.session._errout": {
     "line number": [
      157
     ]
    },
    "numpy.numarray.session._loadmodule": {
     "line number": [
      155
     ]
    },
    "numpy.numarray.session._verbose": {
     "line number": [
      149,
      153
     ]
    },
    "object.__new__": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session._ObjectProxy": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "object": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.session._ObjectProxy.__getnewargs__": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "numpy.numarray.session._ObjectProxy.__getstate__": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "numpy.numarray.session._ObjectProxy.__new__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      198
     ]
    },
    "ImportError": {
     "line number": [
      192
     ]
    },
    "KeyError": {
     "line number": [
      192
     ]
    },
    "getattr": {
     "line number": [
      197
     ]
    },
    "numpy.numarray.session._ProxyingFailure": {
     "line number": [
      195,
      201
     ]
    },
    "numpy.numarray.session._errout": {
     "line number": [
      181,
      193,
      199
     ]
    },
    "numpy.numarray.session._loadmodule": {
     "line number": [
      191
     ]
    },
    "numpy.numarray.session._unknown": {
     "line number": [
      180
     ]
    },
    "numpy.numarray.session._verbose": {
     "line number": [
      185,
      189
     ]
    },
    "object.__new__": {
     "line number": [
      186
     ]
    },
    "str": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session._PROXY_ALLOWED": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "numpy.numarray.session._ProxyingFailure": {
  "data": {
   "lineno": 136
  },
  "type": "class"
 },
 "numpy.numarray.session._ProxyingFailure.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "type": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session._ProxyingFailure.__repr__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "numpy.numarray.session._SaveSession": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "object": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.session._SaveSession.__getnewargs__": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "numpy.numarray.session._SaveSession.__getstate__": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "numpy.numarray.session._SaveSession.__new__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "numpy.numarray.session._verbose": {
     "line number": [
      217,
      219
     ]
    },
    "object.__new__": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session.__all__": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "numpy.numarray.session._caller": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.numarray.session.sys": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session._callers_globals": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "numpy.numarray.session._caller": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session._callers_modules": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      124
     ]
    },
    "isinstance": {
     "line number": [
      123
     ]
    },
    "numpy.numarray.session._callers_globals": {
     "line number": [
      120
     ]
    },
    "numpy.numarray.session.sys": {
     "line number": [
      123
     ]
    },
    "type": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session._errout": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "numpy.numarray.session.sys": {
     "line number": [
      129,
      130
     ]
    },
    "print": {
     "line number": [
      129,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session._foo": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "numpy.numarray.session._loadmodule": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "exec": {
     "line number": [
      172
     ]
    },
    "len": {
     "line number": [
      170
     ]
    },
    "numpy.numarray.session.sys": {
     "line number": [
      167,
      173
     ]
    },
    "range": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session._locate": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "numpy.numarray.session.ObjectNotFound": {
     "line number": [
      241
     ]
    },
    "numpy.numarray.session.sys": {
     "line number": [
      235
     ]
    },
    "object": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session._unknown": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "numpy.numarray.session._PROXY_ALLOWED": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session._update_proxy_types": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "numpy.numarray.session._verbose": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "numpy.numarray.session.VERBOSE": {
     "line number": [
      133
     ]
    },
    "numpy.numarray.session._errout": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.session.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.session.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "numpy.numarray.session.load": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      332
     ]
    },
    "isinstance": {
     "line number": [
      323,
      331
     ]
    },
    "list": {
     "line number": [
      335
     ]
    },
    "numpy.numarray.session.SAVEFILE": {
     "line number": [
      304
     ]
    },
    "numpy.numarray.session.VERBOSE": {
     "line number": [
      321
     ]
    },
    "numpy.numarray.session._SaveSession": {
     "line number": [
      331
     ]
    },
    "numpy.numarray.session._callers_globals": {
     "line number": [
      326
     ]
    },
    "numpy.numarray.session._verbose": {
     "line number": [
      333,
      342
     ]
    },
    "numpy.numarray.session.pickle": {
     "line number": [
      328
     ]
    },
    "open": {
     "line number": [
      324
     ]
    },
    "str": {
     "line number": [
      323,
      342
     ]
    },
    "zip": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session.numpy.numarray.session": {
  "data": {
   "shadows": "numpy.numarray.session"
  },
  "type": "import"
 },
 "numpy.numarray.session.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.numarray.session.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.session.save": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "SystemError": {
     "line number": [
      286
     ]
    },
    "TypeError": {
     "line number": [
      286
     ]
    },
    "isinstance": {
     "line number": [
      264,
      288
     ]
    },
    "list": {
     "line number": [
      271,
      275
     ]
    },
    "numpy.numarray.session.ObjectNotFound": {
     "line number": [
      293
     ]
    },
    "numpy.numarray.session.SAVEFILE": {
     "line number": [
      243
     ]
    },
    "numpy.numarray.session.VERBOSE": {
     "line number": [
      260
     ]
    },
    "numpy.numarray.session._ModuleProxy": {
     "line number": [
      289
     ]
    },
    "numpy.numarray.session._ObjectProxy": {
     "line number": [
      298
     ]
    },
    "numpy.numarray.session._SaveSession": {
     "line number": [
      300
     ]
    },
    "numpy.numarray.session._callers_globals": {
     "line number": [
      268
     ]
    },
    "numpy.numarray.session._callers_modules": {
     "line number": [
      275
     ]
    },
    "numpy.numarray.session._errout": {
     "line number": [
      294
     ]
    },
    "numpy.numarray.session._locate": {
     "line number": [
      292
     ]
    },
    "numpy.numarray.session._update_proxy_types": {
     "line number": [
      262
     ]
    },
    "numpy.numarray.session._verbose": {
     "line number": [
      279,
      282,
      285
     ]
    },
    "numpy.numarray.session.pickle": {
     "line number": [
      277,
      286
     ]
    },
    "numpy.numarray.session.sys": {
     "line number": [
      275,
      288
     ]
    },
    "open": {
     "line number": [
      265
     ]
    },
    "str": {
     "line number": [
      264
     ]
    },
    "type": {
     "line number": [
      282,
      288,
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.session.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.numarray.session.test": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "numpy.numarray.session.doctest": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      17
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      19
     ]
    },
    "numpy.numarray.setup.configuration": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.numarray.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.numarray.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.numarray.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.numarray.test": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.numarray.ufuncs": {
  "data": {},
  "type": "module"
 },
 "numpy.numarray.ufuncs.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.numarray.ufuncs.abs": {
  "data": {
   "shadows": "numpy.absolute"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.absolute": {
  "data": {
   "shadows": "numpy.absolute"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.add": {
  "data": {
   "shadows": "numpy.add"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arccos": {
  "data": {
   "shadows": "numpy.arccos"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arccosh": {
  "data": {
   "shadows": "numpy.arccosh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arcsin": {
  "data": {
   "shadows": "numpy.arcsin"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arcsinh": {
  "data": {
   "shadows": "numpy.arcsinh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arctan": {
  "data": {
   "shadows": "numpy.arctan"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arctan2": {
  "data": {
   "shadows": "numpy.arctan2"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arctanh": {
  "data": {
   "shadows": "numpy.arctanh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.bitwise_and": {
  "data": {
   "shadows": "numpy.bitwise_and"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.bitwise_not": {
  "data": {
   "shadows": "numpy.invert"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.bitwise_or": {
  "data": {
   "shadows": "numpy.bitwise_or"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.bitwise_xor": {
  "data": {
   "shadows": "numpy.bitwise_xor"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.ceil": {
  "data": {
   "shadows": "numpy.ceil"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.conjugate": {
  "data": {
   "shadows": "numpy.conjugate"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.cosh": {
  "data": {
   "shadows": "numpy.cosh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.divide": {
  "data": {
   "shadows": "numpy.divide"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.equal": {
  "data": {
   "shadows": "numpy.equal"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.fabs": {
  "data": {
   "shadows": "numpy.fabs"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.floor": {
  "data": {
   "shadows": "numpy.floor"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.floor_divide": {
  "data": {
   "shadows": "numpy.floor_divide"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.fmod": {
  "data": {
   "shadows": "numpy.fmod"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.greater": {
  "data": {
   "shadows": "numpy.greater"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.greater_equal": {
  "data": {
   "shadows": "numpy.greater_equal"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.hypot": {
  "data": {
   "shadows": "numpy.hypot"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.less": {
  "data": {
   "shadows": "numpy.less"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.less_equal": {
  "data": {
   "shadows": "numpy.less_equal"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.log10": {
  "data": {
   "shadows": "numpy.log10"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.logical_and": {
  "data": {
   "shadows": "numpy.logical_and"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.logical_not": {
  "data": {
   "shadows": "numpy.logical_not"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.logical_or": {
  "data": {
   "shadows": "numpy.logical_or"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.logical_xor": {
  "data": {
   "shadows": "numpy.logical_xor"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.lshift": {
  "data": {
   "shadows": "numpy.left_shift"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.maximum": {
  "data": {
   "shadows": "numpy.maximum"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.minimum": {
  "data": {
   "shadows": "numpy.minimum"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.minus": {
  "data": {
   "shadows": "numpy.negative"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.multiply": {
  "data": {
   "shadows": "numpy.multiply"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.negative": {
  "data": {
   "shadows": "numpy.negative"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.not_equal": {
  "data": {
   "shadows": "numpy.not_equal"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.power": {
  "data": {
   "shadows": "numpy.power"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.product": {
  "data": {
   "shadows": "numpy.product"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.remainder": {
  "data": {
   "shadows": "numpy.remainder"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.rshift": {
  "data": {
   "shadows": "numpy.right_shift"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.sign": {
  "data": {
   "shadows": "numpy.sign"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.sinh": {
  "data": {
   "shadows": "numpy.sinh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.subtract": {
  "data": {
   "shadows": "numpy.subtract"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.sum": {
  "data": {
   "shadows": "numpy.sum"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.tan": {
  "data": {
   "shadows": "numpy.tan"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.tanh": {
  "data": {
   "shadows": "numpy.tanh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.true_divide": {
  "data": {
   "shadows": "numpy.true_divide"
  },
  "type": "import"
 },
 "numpy.numarray.util": {
  "data": {},
  "type": "module"
 },
 "numpy.numarray.util.MathDomainError": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "ArithmeticError": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.util.NumOverflowError": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "ArithmeticError": {
     "line number": [
      17
     ]
    },
    "OverflowError": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.util.UnderflowError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "ArithmeticError": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.numarray.util.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.numarray.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.numarray.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.numarray.util.get_numarray_include_dirs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "numpy.__file__": {
     "line number": [
      47
     ]
    },
    "numpy.numarray.util.os": {
     "line number": [
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.util.handleError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      33
     ]
    },
    "numpy.FPE_DIVIDEBYZERO": {
     "line number": [
      29
     ]
    },
    "numpy.FPE_INVALID": {
     "line number": [
      24
     ]
    },
    "numpy.FPE_OVERFLOW": {
     "line number": [
      34
     ]
    },
    "numpy.FPE_UNDERFLOW": {
     "line number": [
      39
     ]
    },
    "numpy.geterr": {
     "line number": [
      23
     ]
    },
    "numpy.numarray.util.MathDomainError": {
     "line number": [
      28
     ]
    },
    "numpy.numarray.util.NumOverflowError": {
     "line number": [
      38
     ]
    },
    "numpy.numarray.util.UnderflowError": {
     "line number": [
      43
     ]
    },
    "print": {
     "line number": [
      26,
      31,
      36,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.numarray.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.numarray.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.numarray.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.numarray.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.object": {
  "data": {
   "shadows": "__builtin__.object"
  },
  "type": "import"
 },
 "numpy.oldnumeric": {
  "data": {
   "symbols_in_volume": {
    "numpy.oldnumeric.__all__": {
     "line number": [
      41,
      42,
      43,
      44,
      45
     ]
    },
    "numpy.oldnumeric._msg": {
     "line number": [
      11
     ]
    },
    "numpy.oldnumeric.numpy": {
     "line number": [
      37,
      38
     ]
    },
    "numpy.oldnumeric.warnings": {
     "line number": [
      11
     ]
    },
    "numpy.testing.Tester": {
     "line number": [
      54,
      55
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.oldnumeric.__all__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.oldnumeric.__version__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.oldnumeric._move_axis_to_0": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "len": {
     "line number": [
      17
     ]
    },
    "list": {
     "line number": [
      20,
      20
     ]
    },
    "range": {
     "line number": [
      20,
      20
     ]
    },
    "transpose": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric._msg": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.oldnumeric.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      242
     ]
    },
    "numpy.oldnumeric.alter_code1._astr": {
     "line number": [
      54,
      58,
      62,
      66,
      107
     ]
    },
    "numpy.oldnumeric.alter_code1._chars": {
     "line number": [
      64
     ]
    },
    "numpy.oldnumeric.alter_code1._func2": {
     "line number": [
      52
     ]
    },
    "numpy.oldnumeric.alter_code1._func4": {
     "line number": [
      56
     ]
    },
    "numpy.oldnumeric.alter_code1._meth1": {
     "line number": [
      60
     ]
    },
    "numpy.oldnumeric.alter_code1._types": {
     "line number": [
      105
     ]
    },
    "numpy.oldnumeric.alter_code1.fromargs": {
     "line number": [
      243
     ]
    },
    "numpy.oldnumeric.alter_code1.func_re": {
     "line number": [
      54,
      58,
      62
     ]
    },
    "numpy.oldnumeric.alter_code1.istest_re": {
     "line number": [
      107
     ]
    },
    "numpy.oldnumeric.alter_code1.meth_re": {
     "line number": [
      66
     ]
    },
    "numpy.oldnumeric.alter_code1.re": {
     "line number": [
      54,
      54,
      58,
      58,
      62,
      62,
      66,
      66,
      75,
      107,
      127,
      128,
      207
     ]
    },
    "numpy.oldnumeric.alter_code1.sys": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.alter_code1.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._astr": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._chars": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._func": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1.convertall": {
     "line number": [
      233
     ]
    },
    "numpy.oldnumeric.alter_code1.convertsrc": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1._func2": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._func4": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._meth1": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._types": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.changeimports": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "len": {
     "line number": [
      89,
      90
     ]
    },
    "numpy.oldnumeric.alter_code1.re": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.convertall": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1.convertfile": {
     "line number": [
      205
     ]
    },
    "numpy.oldnumeric.alter_code1.glob": {
     "line number": [
      202
     ]
    },
    "numpy.oldnumeric.alter_code1.os": {
     "line number": [
      195,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.convertfile": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1.fromstr": {
     "line number": [
      182
     ]
    },
    "numpy.oldnumeric.alter_code1.makenewfile": {
     "line number": [
      189
     ]
    },
    "numpy.oldnumeric.alter_code1.os": {
     "line number": [
      185,
      186,
      188
     ]
    },
    "open": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.convertsrc": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1.glob": {
     "line number": [
      214,
      218
     ]
    },
    "numpy.oldnumeric.alter_code1.header_re": {
     "line number": [
      223
     ]
    },
    "numpy.oldnumeric.alter_code1.makenewfile": {
     "line number": [
      230
     ]
    },
    "numpy.oldnumeric.alter_code1.os": {
     "line number": [
      209,
      214,
      218,
      226,
      227,
      229
     ]
    },
    "open": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.converttree": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1._func": {
     "line number": [
      239
     ]
    },
    "numpy.oldnumeric.alter_code1.os": {
     "line number": [
      236,
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.fixistesting": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1._types": {
     "line number": [
      109
     ]
    },
    "numpy.oldnumeric.alter_code1.istest_re": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.fixtypechars": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1._chars": {
     "line number": [
      71,
      72
     ]
    },
    "numpy.oldnumeric.alter_code1._func2": {
     "line number": [
      69
     ]
    },
    "numpy.oldnumeric.alter_code1._func4": {
     "line number": [
      69
     ]
    },
    "numpy.oldnumeric.alter_code1._meth1": {
     "line number": [
      69
     ]
    },
    "numpy.oldnumeric.alter_code1.func_re": {
     "line number": [
      70
     ]
    },
    "numpy.oldnumeric.alter_code1.meth_re": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.flatindex_re": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.fromargs": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1.converttree": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.fromstr": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1.changeimports": {
     "line number": [
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156
     ]
    },
    "numpy.oldnumeric.alter_code1.datetime": {
     "line number": [
      161
     ]
    },
    "numpy.oldnumeric.alter_code1.fixistesting": {
     "line number": [
      140
     ]
    },
    "numpy.oldnumeric.alter_code1.fixtypechars": {
     "line number": [
      139
     ]
    },
    "numpy.oldnumeric.alter_code1.os": {
     "line number": [
      162
     ]
    },
    "numpy.oldnumeric.alter_code1.replaceattr": {
     "line number": [
      158
     ]
    },
    "numpy.oldnumeric.alter_code1.replaceother": {
     "line number": [
      159
     ]
    },
    "numpy.oldnumeric.alter_code1.sys": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.func_re": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.header_re": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.istest_re": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.makenewfile": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "file": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.meth_re": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.replaceattr": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1.flatindex_re": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.replaceother": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code1.svspc2": {
     "line number": [
      131
     ]
    },
    "numpy.oldnumeric.alter_code1.svspc3": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.svspc2": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.svspc3": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      147
     ]
    },
    "numpy.oldnumeric.alter_code2.fromargs": {
     "line number": [
      148
     ]
    },
    "numpy.oldnumeric.alter_code2.sys": {
     "line number": [
      148
     ]
    },
    "numpy.oldnumeric.alter_code2.warnings": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.alter_code2.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code2._func": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code2.convertall": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.changeimports": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "len": {
     "line number": [
      55,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.convertall": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code2.convertfile": {
     "line number": [
      136
     ]
    },
    "numpy.oldnumeric.alter_code2.glob": {
     "line number": [
      134
     ]
    },
    "numpy.oldnumeric.alter_code2.os": {
     "line number": [
      127,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.convertfile": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code2.fromstr": {
     "line number": [
      120
     ]
    },
    "numpy.oldnumeric.alter_code2.getandcopy": {
     "line number": [
      119
     ]
    },
    "numpy.oldnumeric.alter_code2.makenewfile": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.converttree": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code2._func": {
     "line number": [
      145
     ]
    },
    "numpy.oldnumeric.alter_code2.os": {
     "line number": [
      141,
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.fromargs": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code2.convertfile": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.fromstr": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code2.changeimports": {
     "line number": [
      81,
      82,
      83,
      84,
      86,
      87,
      88,
      89,
      90
     ]
    },
    "numpy.oldnumeric.alter_code2.datetime": {
     "line number": [
      94
     ]
    },
    "numpy.oldnumeric.alter_code2.os": {
     "line number": [
      95
     ]
    },
    "numpy.oldnumeric.alter_code2.replaceattr": {
     "line number": [
      92
     ]
    },
    "numpy.oldnumeric.alter_code2.replaceother": {
     "line number": [
      93
     ]
    },
    "numpy.oldnumeric.alter_code2.sys": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.getandcopy": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "file": {
     "line number": [
      106
     ]
    },
    "numpy.oldnumeric.alter_code2.makenewfile": {
     "line number": [
      110
     ]
    },
    "numpy.oldnumeric.alter_code2.os": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.makenewfile": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "file": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.replaceattr": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.replaceother": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "numpy.oldnumeric.alter_code2.re": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.replacetypechars": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.oldnumeric.array_printer": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.array_printer.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.oldnumeric.array_printer._array2string": {
  "data": {
   "shadows": "numpy.array2string"
  },
  "type": "import"
 },
 "numpy.oldnumeric.array_printer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.array_printer.array2string": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "numpy.array2string": {
     "line number": [
      16
     ]
    },
    "repr": {
     "line number": [
      12
     ]
    },
    "str": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.array_printer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.array_printer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.arrayfns": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.arrayfns.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.oldnumeric.arrayfns.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.arrayfns.array_set": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      21
     ]
    },
    "ValueError": {
     "line number": [
      19
     ]
    },
    "isinstance": {
     "line number": [
      20
     ]
    },
    "numpy.asarray": {
     "line number": [
      17,
      22,
      23
     ]
    },
    "numpy.ndarray": {
     "line number": [
      20
     ]
    },
    "numpy.oldnumeric.arrayfns.error": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.arrayfns.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "numpy.oldnumeric.arrayfns.construct3": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.arrayfns.digitize": {
  "data": {
   "shadows": "numpy.digitize"
  },
  "type": "import"
 },
 "numpy.oldnumeric.arrayfns.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.arrayfns.error": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.arrayfns.find_mask": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.arrayfns.histogram": {
  "data": {
   "shadows": "numpy.bincount"
  },
  "type": "import"
 },
 "numpy.oldnumeric.arrayfns.index_sort": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.arrayfns.interp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "numpy.interp": {
     "line number": [
      37
     ]
    },
    "numpy.oldnumeric.arrayfns.error": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.arrayfns.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.arrayfns.nz": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      48
     ]
    },
    "numpy.asarray": {
     "line number": [
      46
     ]
    },
    "numpy.flatnonzero": {
     "line number": [
      49
     ]
    },
    "numpy.ubyte": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.arrayfns.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.arrayfns.reverse": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      55
     ]
    },
    "numpy.asarray": {
     "line number": [
      53
     ]
    },
    "numpy.empty_like": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.arrayfns.span": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      68
     ]
    },
    "numpy.linspace": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.arrayfns.to_corners": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.arrayfns.zmin_zmax": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      76
     ]
    },
    "float": {
     "line number": [
      73
     ]
    },
    "int": {
     "line number": [
      74
     ]
    },
    "numpy.asarray": {
     "line number": [
      73,
      74
     ]
    },
    "numpy.nonzero": {
     "line number": [
      77
     ]
    },
    "numpy.r_": {
     "line number": [
      84,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.bench": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat": {
  "data": {
   "symbols_in_volume": {
    "numpy.core.multiarray": {
     "line number": [
      28
     ]
    },
    "numpy.core.umath.sin": {
     "line number": [
      35,
      36
     ]
    },
    "numpy.deprecate": {
     "line number": [
      45,
      48
     ]
    },
    "numpy.oldnumeric.compat.mu": {
     "line number": [
      37,
      38,
      48
     ]
    },
    "numpy.oldnumeric.compat.sys": {
     "line number": [
      40,
      102
     ]
    },
    "type": {
     "line number": [
      35,
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.compat.ArrayType": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat.DumpArray": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat.LittleEndian": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat.LoadArray": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "numpy.oldnumeric.compat.pickle": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat.NewAxis": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat.Pickler": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.oldnumeric.compat.pickle": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.compat.Pickler.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat.Pickler.save_array": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat.UFuncType": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat.UfuncType": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat.Unpickler": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.oldnumeric.compat.copy": {
     "line number": [
      114
     ]
    },
    "numpy.oldnumeric.compat.pickle": {
     "line number": [
      110,
      114
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.compat.Unpickler.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat.Unpickler.load_array": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.oldnumeric.compat._LoadArray": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat._LoadArray": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "int": {
     "line number": [
      88,
      89
     ]
    },
    "numpy.oldnumeric.compat.LittleEndian": {
     "line number": [
      97,
      97
     ]
    },
    "numpy.oldnumeric.compat.mu": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.array": {
  "data": {
   "shadows": "numpy.core.numeric.array"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.array_constructor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.core.numeric.array": {
     "line number": [
      58
     ]
    },
    "numpy.oldnumeric.compat.LittleEndian": {
     "line number": [
      56,
      62
     ]
    },
    "numpy.oldnumeric.compat.mu": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat.arrayrange": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat.arraytype": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.deprecate": {
  "data": {
   "shadows": "numpy.deprecate"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.dump": {
  "data": {
   "shadows": "pickle.dump"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.dumps": {
  "data": {
   "shadows": "pickle.dumps"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.load": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "numpy.oldnumeric.compat.loads": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat.loads": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.oldnumeric.compat.pickle": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat.matrixmultiply": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat.mu": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat.multiarray": {
  "data": {
   "shadows": "numpy.core.multiarray"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.pickle_array": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.oldnumeric.compat.LittleEndian": {
     "line number": [
      70,
      73
     ]
    },
    "numpy.oldnumeric.compat.array_constructor": {
     "line number": [
      69,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.oldnumeric.compat.um": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.oldnumeric.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.fft.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.oldnumeric.fft.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.fft": {
  "data": {
   "shadows": "numpy.fft.fft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.fft2d": {
  "data": {
   "shadows": "numpy.fft.fft2"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.fftnd": {
  "data": {
   "shadows": "numpy.fft.fftn"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.hermite_fft": {
  "data": {
   "shadows": "numpy.fft.hfft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_fft": {
  "data": {
   "shadows": "numpy.fft.ifft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_fft2d": {
  "data": {
   "shadows": "numpy.fft.ifft2"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_fftnd": {
  "data": {
   "shadows": "numpy.fft.ifftn"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_hermite_fft": {
  "data": {
   "shadows": "numpy.fft.ihfft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_real_fft": {
  "data": {
   "shadows": "numpy.fft.irfft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_real_fft2d": {
  "data": {
   "shadows": "numpy.fft.irfft2"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_real_fftnd": {
  "data": {
   "shadows": "numpy.fft.irfftn"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.real_fft": {
  "data": {
   "shadows": "numpy.fft.rfft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.real_fft2d": {
  "data": {
   "shadows": "numpy.fft.rfft2"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.real_fftnd": {
  "data": {
   "shadows": "numpy.fft.rfftn"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fix_default_axis": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      293
     ]
    },
    "numpy.oldnumeric.fix_default_axis._all": {
     "line number": [
      57
     ]
    },
    "numpy.oldnumeric.fix_default_axis._astr": {
     "line number": [
      59
     ]
    },
    "numpy.oldnumeric.fix_default_axis._func0": {
     "line number": [
      54
     ]
    },
    "numpy.oldnumeric.fix_default_axis._funcm1": {
     "line number": [
      54
     ]
    },
    "numpy.oldnumeric.fix_default_axis.fromargs": {
     "line number": [
      294
     ]
    },
    "numpy.oldnumeric.fix_default_axis.func_re": {
     "line number": [
      59
     ]
    },
    "numpy.oldnumeric.fix_default_axis.re": {
     "line number": [
      59
     ]
    },
    "numpy.oldnumeric.fix_default_axis.string": {
     "line number": [
      63,
      63,
      63
     ]
    },
    "numpy.oldnumeric.fix_default_axis.sys": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.fix_default_axis.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.oldnumeric.fix_default_axis._add_axis": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "len": {
     "line number": [
      95
     ]
    },
    "numpy.oldnumeric.fix_default_axis._args3": {
     "line number": [
      67
     ]
    },
    "numpy.oldnumeric.fix_default_axis.disallowed": {
     "line number": [
      76
     ]
    },
    "numpy.oldnumeric.fix_default_axis.func_re": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis._all": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.oldnumeric.fix_default_axis._args3": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.oldnumeric.fix_default_axis._astr": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "numpy.oldnumeric.fix_default_axis._func": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "numpy.oldnumeric.fix_default_axis.convertall": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis._func0": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.oldnumeric.fix_default_axis._funcm1": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.oldnumeric.fix_default_axis._import_change": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "len": {
     "line number": [
      146,
      152,
      165,
      181,
      187,
      212
     ]
    },
    "numpy.oldnumeric.fix_default_axis.disallowed": {
     "line number": [
      175
     ]
    },
    "numpy.oldnumeric.fix_default_axis.re": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fix_default_axis.add_axis": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "numpy.oldnumeric.fix_default_axis._add_axis": {
     "line number": [
      228,
      231
     ]
    },
    "numpy.oldnumeric.fix_default_axis._func0": {
     "line number": [
      230,
      235
     ]
    },
    "numpy.oldnumeric.fix_default_axis._funcm1": {
     "line number": [
      227,
      235
     ]
    },
    "numpy.oldnumeric.fix_default_axis._import_change": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis.convertall": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "numpy.oldnumeric.fix_default_axis.convertfile": {
     "line number": [
      282
     ]
    },
    "numpy.oldnumeric.fix_default_axis.glob": {
     "line number": [
      280
     ]
    },
    "numpy.oldnumeric.fix_default_axis.os": {
     "line number": [
      273,
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis.convertfile": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "numpy.oldnumeric.fix_default_axis.add_axis": {
     "line number": [
      262
     ]
    },
    "numpy.oldnumeric.fix_default_axis.copyfile": {
     "line number": [
      265
     ]
    },
    "numpy.oldnumeric.fix_default_axis.getfile": {
     "line number": [
      261
     ]
    },
    "numpy.oldnumeric.fix_default_axis.makenewfile": {
     "line number": [
      266
     ]
    },
    "numpy.oldnumeric.fix_default_axis.sys": {
     "line number": [
      267
     ]
    },
    "print": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis.converttree": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "numpy.oldnumeric.fix_default_axis._func": {
     "line number": [
      291
     ]
    },
    "numpy.oldnumeric.fix_default_axis.os": {
     "line number": [
      287,
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis.copyfile": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "numpy.oldnumeric.fix_default_axis.makenewfile": {
     "line number": [
      252
     ]
    },
    "numpy.oldnumeric.fix_default_axis.os": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis.disallowed": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "numpy.oldnumeric.fix_default_axis.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fix_default_axis.fromargs": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "numpy.oldnumeric.fix_default_axis.convertfile": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis.func_re": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.oldnumeric.fix_default_axis.getfile": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "file": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fix_default_axis.makenewfile": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "file": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.fix_default_axis.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fix_default_axis.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fix_default_axis.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fix_default_axis.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fix_default_axis.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.oldnumeric.functions": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.functions.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.oldnumeric.functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.functions.alltrue": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "numpy.alltrue": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.arange": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "convtypecode2": {
     "line number": [
      103
     ]
    },
    "numpy.core.multiarray.arange": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.argmax": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.argmax": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.argmin": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.argmin": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.array": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "convtypecode2": {
     "line number": [
      81
     ]
    },
    "numpy.core.multiarray.array": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.asarray": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "convtypecode2": {
     "line number": [
      89
     ]
    },
    "numpy.core.multiarray.array": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.average": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "numpy.average": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.compress": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "numpy.compress": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.cross_product": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "numpy.cross": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.cumproduct": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "numpy.cumproduct": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.cumsum": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.cumsum": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.functions.empty": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "convtypecode": {
     "line number": [
      77
     ]
    },
    "numpy.core.multiarray.empty": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.fromfunction": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "int": {
     "line number": [
      52
     ]
    },
    "numpy.fromfunction": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.fromstring": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "convtypecode": {
     "line number": [
      107
     ]
    },
    "numpy.core.multiarray.fromstring": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.identity": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "convtypecode": {
     "line number": [
      73
     ]
    },
    "numpy.core.numeric.identity": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.indices": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "convtypecode": {
     "line number": [
      117
     ]
    },
    "numpy.indices": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.mu": {
  "data": {
   "shadows": "numpy.core.multiarray"
  },
  "type": "import"
 },
 "numpy.oldnumeric.functions.nn": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.oldnumeric.functions.nonzero": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      97
     ]
    },
    "len": {
     "line number": [
      94
     ]
    },
    "numpy.nonzero": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.functions.ones": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "convtypecode": {
     "line number": [
      58
     ]
    },
    "numpy.core.multiarray.empty": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.functions.product": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.product": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.ravel": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.ravel": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.repeat": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.repeat": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.reshape": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.reshape": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.sarray": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "convtypecode2": {
     "line number": [
      85
     ]
    },
    "numpy.core.multiarray.array": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.sometrue": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.sometrue": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.sum": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.sum": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.take": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "numpy.take": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.trace": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "numpy.trace": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.where": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "numpy.where": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.functions.zeros": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "convtypecode": {
     "line number": [
      67
     ]
    },
    "numpy.core.multiarray.zeros": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra": {
  "data": {
   "symbols_in_volume": {
    "numpy.linalg.LinAlgError": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.linear_algebra.Heigenvalues": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "numpy.linalg.eigvalsh": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.Heigenvectors": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "numpy.core.transpose": {
     "line number": [
      55
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.LinAlgError": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.oldnumeric.linear_algebra.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.oldnumeric.linear_algebra.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.linear_algebra.cholesky_decomposition": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.linalg.cholesky": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.determinant": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "numpy.linalg.det": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.linear_algebra.eigenvalues": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.linalg.eigvals": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.eigenvectors": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.core.transpose": {
     "line number": [
      51
     ]
    },
    "numpy.linalg.eig": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.generalized_inverse": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "numpy.linalg.pinv": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.inverse": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.linalg.inv": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.oldnumeric.linear_algebra.linear_least_squares": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "numpy.linalg.lstsq": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.linear_algebra.singular_value_decomposition": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "numpy.linalg.svd": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.solve_linear_equations": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.linalg.solve": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.transpose": {
  "data": {
   "shadows": "numpy.core.transpose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix": {
  "data": {
   "symbols_in_volume": {
    "chr": {
     "line number": [
      19
     ]
    },
    "numpy.oldnumeric.matrix._numchars": {
     "line number": [
      25
     ]
    },
    "numpy.oldnumeric.matrix._table": {
     "line number": [
      19,
      24
     ]
    },
    "numpy.oldnumeric.matrix._todelete": {
     "line number": [
      26
     ]
    },
    "range": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.matrix.LinearAlgebra": {
  "data": {
   "shadows": "numpy.oldnumeric.linear_algebra"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix.Matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix.Numeric": {
  "data": {
   "shadows": "numpy.oldnumeric"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.oldnumeric.matrix._binary": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "bin": {
     "line number": [
      64,
      66,
      68,
      70
     ]
    },
    "numpy.oldnumeric.matrix._lkup": {
     "line number": [
      66
     ]
    },
    "oct": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.matrix._convert_from_string": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      47
     ]
    },
    "len": {
     "line number": [
      45,
      46
     ]
    },
    "map": {
     "line number": [
      43
     ]
    },
    "numpy.oldnumeric.matrix._eval": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.matrix._eval": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "eval": {
     "line number": [
      31
     ]
    },
    "numpy.oldnumeric.matrix._table": {
     "line number": [
      31
     ]
    },
    "numpy.oldnumeric.matrix._todelete": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.matrix._lkup": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "numpy.oldnumeric.matrix._numchars": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.oldnumeric.matrix._table": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.oldnumeric.matrix._todelete": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.oldnumeric.matrix.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix.dot": {
  "data": {
   "shadows": "numpy.oldnumeric.dot"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix.identity": {
  "data": {
   "shadows": "numpy.oldnumeric.identity"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix.multiply": {
  "data": {
   "shadows": "numpy.oldnumeric.multiply"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix.squeeze": {
  "data": {
   "shadows": "numpy.squeeze"
  },
  "type": "import"
 },
 "numpy.oldnumeric.matrix.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc": {
  "data": {
   "symbols_in_volume": {
    "numpy.oldnumeric.misc.sys": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.misc.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.oldnumeric.misc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.argsort": {
  "data": {
   "shadows": "numpy.argsort"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.around": {
  "data": {
   "shadows": "numpy.around"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.array_repr": {
  "data": {
   "shadows": "numpy.array_repr"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.array_str": {
  "data": {
   "shadows": "numpy.array_str"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.choose": {
  "data": {
   "shadows": "numpy.choose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.clip": {
  "data": {
   "shadows": "numpy.clip"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.concatenate": {
  "data": {
   "shadows": "numpy.concatenate"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.convolve": {
  "data": {
   "shadows": "numpy.convolve"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.copy_reg": {
  "data": {
   "shadows": "copy_reg"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.cross_correlate": {
  "data": {
   "shadows": "numpy.correlate"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.diagonal": {
  "data": {
   "shadows": "numpy.diagonal"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.e": {
  "data": {
   "shadows": "numpy.e"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.innerproduct": {
  "data": {
   "shadows": "numpy.inner"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.insert": {
  "data": {
   "shadows": "numpy.place"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.outerproduct": {
  "data": {
   "shadows": "numpy.outer"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.put": {
  "data": {
   "shadows": "numpy.put"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.putmask": {
  "data": {
   "shadows": "numpy.putmask"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.rank": {
  "data": {
   "shadows": "numpy.rank"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.resize": {
  "data": {
   "shadows": "numpy.resize"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.searchsorted": {
  "data": {
   "shadows": "numpy.searchsorted"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.shape": {
  "data": {
   "shadows": "numpy.shape"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.sign": {
  "data": {
   "shadows": "numpy.sign"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.size": {
  "data": {
   "shadows": "numpy.size"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.sort": {
  "data": {
   "shadows": "numpy.sort"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.swapaxes": {
  "data": {
   "shadows": "numpy.swapaxes"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.vdot": {
  "data": {
   "shadows": "numpy.vdot"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab": {
  "data": {
   "symbols_in_volume": {
    "numpy.oldnumeric.mlab.__all__": {
     "line number": [
      113,
      114,
      114,
      115,
      115,
      116,
      116,
      117,
      117,
      118,
      118,
      120,
      121,
      122,
      123,
      124
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.mlab.LinearAlgebra": {
  "data": {
   "shadows": "numpy.oldnumeric.linear_algebra"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.RandomArray": {
  "data": {
   "shadows": "numpy.oldnumeric.random_array"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab._Ncumprod": {
  "data": {
   "shadows": "numpy.cumprod"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab._Nmax": {
  "data": {
   "shadows": "numpy.amax"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab._Nmean": {
  "data": {
   "shadows": "numpy.mean"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab._Nmin": {
  "data": {
   "shadows": "numpy.amin"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab._Nprod": {
  "data": {
   "shadows": "numpy.prod"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab._Nptp": {
  "data": {
   "shadows": "numpy.ptp"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab._Nstd": {
  "data": {
   "shadows": "numpy.std"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab._Ntrapz": {
  "data": {
   "shadows": "numpy.trapz"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.oldnumeric.mlab.__version__": {
  "data": {
   "shadows": "numpy.__version__"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.angle": {
  "data": {
   "shadows": "numpy.angle"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.bartlett": {
  "data": {
   "shadows": "numpy.bartlett"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.blackman": {
  "data": {
   "shadows": "numpy.blackman"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.compat_all": {
  "data": {
   "shadows": "__all__"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.corrcoef": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      98
     ]
    },
    "numpy.multiply.outer": {
     "line number": [
      99
     ]
    },
    "numpy.oldnumeric.mlab.cov": {
     "line number": [
      97
     ]
    },
    "numpy.sqrt": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.cov": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      87
     ]
    },
    "conjugate": {
     "line number": [
      94
     ]
    },
    "dot": {
     "line number": [
      94
     ]
    },
    "numpy.mean": {
     "line number": [
      88,
      89
     ]
    },
    "numpy.squeeze": {
     "line number": [
      94
     ]
    },
    "numpy.transpose": {
     "line number": [
      79,
      80,
      82,
      84,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.cumprod": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "numpy.cumprod": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.diag": {
  "data": {
   "shadows": "numpy.diag"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.diff": {
  "data": {
   "shadows": "numpy.diff"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.eig": {
  "data": {
   "shadows": "numpy.linalg.eig"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.eye": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "convtypecode": {
     "line number": [
      31
     ]
    },
    "numpy.arange": {
     "line number": [
      33,
      33
     ]
    },
    "numpy.equal": {
     "line number": [
      33
     ]
    },
    "numpy.subtract.outer": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.fliplr": {
  "data": {
   "shadows": "numpy.fliplr"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.flipud": {
  "data": {
   "shadows": "numpy.flipud"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.functions_all": {
  "data": {
   "shadows": "__all__"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.hamming": {
  "data": {
   "shadows": "numpy.hamming"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.hanning": {
  "data": {
   "shadows": "numpy.hanning"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.kaiser": {
  "data": {
   "shadows": "numpy.kaiser"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.max": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.amax": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.mean": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.median": {
  "data": {
   "shadows": "numpy.median"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.min": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "numpy.amin": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.misc_all": {
  "data": {
   "shadows": "__all__"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.msort": {
  "data": {
   "shadows": "numpy.msort"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.multiply": {
  "data": {
   "shadows": "numpy.multiply"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.precision_all": {
  "data": {
   "shadows": "__all__"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.prod": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "numpy.prod": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.ptp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "numpy.ptp": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.roots": {
  "data": {
   "shadows": "numpy.roots"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.rot90": {
  "data": {
   "shadows": "numpy.rot90"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.sinc": {
  "data": {
   "shadows": "numpy.sinc"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.squeeze": {
  "data": {
   "shadows": "numpy.squeeze"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.std": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "asarray": {
     "line number": [
      66
     ]
    },
    "numpy.sqrt": {
     "line number": [
      67
     ]
    },
    "numpy.std": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.svd": {
  "data": {
   "shadows": "numpy.linalg.svd"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.trapz": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.trapz": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.tri": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "convtypecode": {
     "line number": [
      41
     ]
    },
    "numpy.arange": {
     "line number": [
      43,
      43
     ]
    },
    "numpy.greater_equal": {
     "line number": [
      43
     ]
    },
    "numpy.subtract.outer": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.mlab.tril": {
  "data": {
   "shadows": "numpy.tril"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.triu": {
  "data": {
   "shadows": "numpy.triu"
  },
  "type": "import"
 },
 "numpy.oldnumeric.mlab.ufuncs_all": {
  "data": {
   "shadows": "__all__"
  },
  "type": "import"
 },
 "numpy.oldnumeric.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.precision": {
  "data": {
   "symbols_in_volume": {
    "numpy.oldnumeric.precision.PrecisionError": {
     "line number": [
      50,
      56,
      62,
      68,
      74,
      81,
      86,
      91,
      96,
      101,
      106,
      113,
      118,
      123,
      128,
      133,
      138,
      145,
      150,
      155,
      160,
      165,
      170
     ]
    },
    "numpy.oldnumeric.precision.UnsignedInt128": {
     "line number": [
      72
     ]
    },
    "numpy.oldnumeric.precision.UnsignedInt16": {
     "line number": [
      54
     ]
    },
    "numpy.oldnumeric.precision.UnsignedInt32": {
     "line number": [
      60
     ]
    },
    "numpy.oldnumeric.precision.UnsignedInt64": {
     "line number": [
      66
     ]
    },
    "numpy.oldnumeric.precision.UnsignedInt8": {
     "line number": [
      48
     ]
    },
    "numpy.oldnumeric.precision.__all__": {
     "line number": [
      49,
      55,
      61,
      67,
      73,
      80,
      85,
      90,
      95,
      100,
      105,
      112,
      117,
      122,
      127,
      132,
      137,
      144,
      149,
      154,
      159,
      164,
      169
     ]
    },
    "numpy.oldnumeric.precision._code_table": {
     "line number": [
      47,
      53,
      59,
      65,
      71,
      79,
      84,
      89,
      94,
      99,
      104,
      111,
      116,
      121,
      126,
      131,
      136,
      143,
      148,
      153,
      158,
      163,
      168
     ]
    },
    "numpy.oldnumeric.precision._fill_table": {
     "line number": [
      31
     ]
    },
    "numpy.oldnumeric.precision._lookup": {
     "line number": [
      47,
      53,
      59,
      65,
      71,
      79,
      84,
      89,
      94,
      99,
      104,
      111,
      116,
      121,
      126,
      131,
      136,
      143,
      148,
      153,
      158,
      163,
      168
     ]
    },
    "numpy.oldnumeric.precision.typecodes": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.precision.Character": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Complex": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Complex0": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Complex128": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Complex16": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Complex32": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Complex64": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Complex8": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Float": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Float0": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Float128": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Float16": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Float32": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Float64": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Float8": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Int": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Int0": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Int128": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Int16": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Int32": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Int64": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.Int8": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.PrecisionError": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.precision.PyObject": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.UInt128": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.UInt16": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.UInt32": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.UInt64": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.UInt8": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.UnsignedInt128": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.UnsignedInt16": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.UnsignedInt32": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.UnsignedInt64": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.UnsignedInt8": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision._code_table": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.oldnumeric.precision._fill_table": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.oldnumeric.precision._get_precisions": {
     "line number": [
      28
     ]
    },
    "numpy.oldnumeric.precision.typecodes": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.precision._get_precisions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "numpy.oldnumeric.precision.typecodes": {
     "line number": [
      22
     ]
    },
    "zeros": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.precision._lookup": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.oldnumeric.precision.PrecisionError": {
     "line number": [
      41
     ]
    },
    "str": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.precision.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.precision.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.precision.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.precision.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "numpy.oldnumeric.precision.typecodes": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.oldnumeric.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.random_array": {
  "data": {
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      13
     ]
    },
    "__name__": {
     "line number": [
      268
     ]
    },
    "numpy.oldnumeric.random_array.test": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.random_array.ArgumentError": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.oldnumeric.random_array.F": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "numpy.random.mtrand.f": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.oldnumeric.random_array.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.random_array.beta": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.random.mtrand.beta": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.binomial": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "numpy.random.mtrand.binomial": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.chi_square": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "numpy.random.mtrand.chisquare": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.random_array.exponential": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "numpy.random.mtrand.exponential": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.gamma": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "numpy.random.mtrand.gamma": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.get_seed": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.mean_var_test": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "len": {
     "line number": [
      191,
      195
     ]
    },
    "numpy.sum": {
     "line number": [
      192,
      194,
      199
     ]
    },
    "print": {
     "line number": [
      195,
      196,
      197,
      200
     ]
    },
    "type": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.mt": {
  "data": {
   "shadows": "numpy.random.mtrand"
  },
  "type": "import"
 },
 "numpy.oldnumeric.random_array.multinomial": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "numpy.random.mtrand.multinomial": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.multivariate_normal": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "numpy.random.mtrand.multivariate_normal": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.negative_binomial": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "numpy.random.mtrand.negative_binomial": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.noncentral_F": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "numpy.random.mtrand.noncentral_f": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.noncentral_chi_square": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.random.mtrand.noncentral_chisquare": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.normal": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.random.mtrand.normal": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.random_array.permutation": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.random.mtrand.permutation": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.poisson": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "numpy.random.mtrand.poisson": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.random_array.randint": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "int": {
     "line number": [
      46,
      51,
      57
     ]
    },
    "isinstance": {
     "line number": [
      46,
      51,
      54
     ]
    },
    "numpy.int": {
     "line number": [
      55
     ]
    },
    "numpy.ndarray": {
     "line number": [
      54
     ]
    },
    "numpy.oldnumeric.random_array.ArgumentError": {
     "line number": [
      47,
      52
     ]
    },
    "numpy.oldnumeric.random_array.random": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.random": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.random.mtrand.random_sample": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.random_integers": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "numpy.oldnumeric.random_array.randint": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.seed": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "numpy.random.mtrand.seed": {
     "line number": [
      20,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.standard_normal": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.random.mtrand.standard_normal": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.test": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "SystemExit": {
     "line number": [
      207,
      212,
      217,
      220,
      230,
      237,
      241
     ]
    },
    "len": {
     "line number": [
      211,
      216,
      229
     ]
    },
    "numpy.array": {
     "line number": [
      235,
      235,
      238,
      238,
      242,
      242
     ]
    },
    "numpy.dot": {
     "line number": [
      248
     ]
    },
    "numpy.maximum.reduce": {
     "line number": [
      219
     ]
    },
    "numpy.minimum.reduce": {
     "line number": [
      219
     ]
    },
    "numpy.oldnumeric.random_array.F": {
     "line number": [
      255
     ]
    },
    "numpy.oldnumeric.random_array.beta": {
     "line number": [
      249
     ]
    },
    "numpy.oldnumeric.random_array.binomial": {
     "line number": [
      260
     ]
    },
    "numpy.oldnumeric.random_array.chi_square": {
     "line number": [
      253
     ]
    },
    "numpy.oldnumeric.random_array.exponential": {
     "line number": [
      233
     ]
    },
    "numpy.oldnumeric.random_array.gamma": {
     "line number": [
      251
     ]
    },
    "numpy.oldnumeric.random_array.mean_var_test": {
     "line number": [
      232,
      234,
      250,
      252,
      254,
      256,
      258
     ]
    },
    "numpy.oldnumeric.random_array.multinomial": {
     "line number": [
      264
     ]
    },
    "numpy.oldnumeric.random_array.multivariate_normal": {
     "line number": [
      235,
      238,
      242
     ]
    },
    "numpy.oldnumeric.random_array.negative_binomial": {
     "line number": [
      262
     ]
    },
    "numpy.oldnumeric.random_array.normal": {
     "line number": [
      228
     ]
    },
    "numpy.oldnumeric.random_array.permutation": {
     "line number": [
      223
     ]
    },
    "numpy.oldnumeric.random_array.poisson": {
     "line number": [
      257
     ]
    },
    "numpy.oldnumeric.random_array.randint": {
     "line number": [
      222,
      224
     ]
    },
    "numpy.oldnumeric.random_array.random": {
     "line number": [
      208,
      209,
      210
     ]
    },
    "numpy.oldnumeric.random_array.random_integers": {
     "line number": [
      226
     ]
    },
    "numpy.oldnumeric.random_array.uniform": {
     "line number": [
      215
     ]
    },
    "numpy.random.mtrand.get_state": {
     "line number": [
      203,
      205
     ]
    },
    "numpy.random.mtrand.set_state": {
     "line number": [
      204
     ]
    },
    "numpy.sqrt": {
     "line number": [
      254
     ]
    },
    "numpy.sum": {
     "line number": [
      209,
      214,
      243,
      266
     ]
    },
    "numpy.transpose": {
     "line number": [
      248
     ]
    },
    "print": {
     "line number": [
      208,
      209,
      214,
      221,
      222,
      223,
      224,
      225,
      226,
      236,
      239,
      240,
      244,
      245,
      247,
      248,
      259,
      260,
      261,
      262,
      263,
      265,
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.random_array.uniform": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.random.mtrand.uniform": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng": {
  "data": {
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.CreateGenerator": {
     "line number": [
      121
     ]
    },
    "numpy.oldnumeric.rng.UniformDistribution": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.rng.CreateGenerator": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "object": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.rng.CreateGenerator.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      110
     ]
    },
    "numpy.oldnumeric.rng.Distribution": {
     "line number": [
      110
     ]
    },
    "numpy.oldnumeric.rng.default_distribution": {
     "line number": [
      109
     ]
    },
    "numpy.oldnumeric.rng.error": {
     "line number": [
      111
     ]
    },
    "numpy.random.mtrand.RandomState": {
     "line number": [
      105,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.CreateGenerator.ranf": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.CreateGenerator.sample": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.Distribution": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "object": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.rng.Distribution.__call__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.Distribution.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.Distribution._onesample": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.Distribution._sample": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.Distribution.density": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.ExponentialDistribution": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.Distribution": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.rng.ExponentialDistribution.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.Distribution": {
     "line number": [
      42
     ]
    },
    "numpy.oldnumeric.rng.error": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.ExponentialDistribution.density": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.math": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.LogNormalDistribution": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.Distribution": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.rng.LogNormalDistribution.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "float": {
     "line number": [
      53,
      54
     ]
    },
    "numpy.oldnumeric.rng.Distribution": {
     "line number": [
      57
     ]
    },
    "numpy.oldnumeric.rng.error": {
     "line number": [
      56
     ]
    },
    "numpy.oldnumeric.rng.math": {
     "line number": [
      58,
      59,
      60,
      61,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.LogNormalDistribution.density": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.math": {
     "line number": [
      65,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.NormalDistribution": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.Distribution": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.rng.NormalDistribution.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "float": {
     "line number": [
      71,
      72
     ]
    },
    "numpy.oldnumeric.rng.Distribution": {
     "line number": [
      75
     ]
    },
    "numpy.oldnumeric.rng.error": {
     "line number": [
      74
     ]
    },
    "numpy.oldnumeric.rng.math": {
     "line number": [
      76,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.NormalDistribution.density": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.math": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.UniformDistribution": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.Distribution": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.rng.UniformDistribution.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "float": {
     "line number": [
      85,
      86
     ]
    },
    "numpy.oldnumeric.rng.Distribution": {
     "line number": [
      90
     ]
    },
    "numpy.oldnumeric.rng.error": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.UniformDistribution.density": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.oldnumeric.rng.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng.default_distribution": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "numpy.oldnumeric.rng.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng.error": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.rng.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng.mt": {
  "data": {
   "shadows": "numpy.random.mtrand"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng.random_sample": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.standard_generator": {
     "line number": [
      133,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.ranf": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "numpy.oldnumeric.rng.standard_generator": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng.standard_generator": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "numpy.oldnumeric.rng_stats": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.rng_stats.Numeric": {
  "data": {
   "shadows": "numpy.oldnumeric"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng_stats.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.oldnumeric.rng_stats.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng_stats.average": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "len": {
     "line number": [
      9
     ]
    },
    "numpy.oldnumeric.add.reduce": {
     "line number": [
      9
     ]
    },
    "numpy.oldnumeric.array": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng_stats.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng_stats.histogram": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "max": {
     "line number": [
      23,
      25,
      27,
      30
     ]
    },
    "min": {
     "line number": [
      22,
      25,
      29,
      30,
      31,
      35
     ]
    },
    "numpy.oldnumeric.Float": {
     "line number": [
      20
     ]
    },
    "numpy.oldnumeric.Int": {
     "line number": [
      31
     ]
    },
    "numpy.oldnumeric.NewAxis": {
     "line number": [
      33
     ]
    },
    "numpy.oldnumeric.add.reduce": {
     "line number": [
      32,
      34
     ]
    },
    "numpy.oldnumeric.arange": {
     "line number": [
      33,
      35
     ]
    },
    "numpy.oldnumeric.array": {
     "line number": [
      20,
      36
     ]
    },
    "numpy.oldnumeric.equal": {
     "line number": [
      32,
      34
     ]
    },
    "numpy.oldnumeric.floor": {
     "line number": [
      31
     ]
    },
    "numpy.oldnumeric.greater_equal": {
     "line number": [
      28
     ]
    },
    "numpy.oldnumeric.less_equal": {
     "line number": [
      27
     ]
    },
    "numpy.oldnumeric.logical_and": {
     "line number": [
      27
     ]
    },
    "numpy.oldnumeric.maximum.reduce": {
     "line number": [
      23
     ]
    },
    "numpy.oldnumeric.minimum.reduce": {
     "line number": [
      22
     ]
    },
    "numpy.oldnumeric.repeat": {
     "line number": [
      26
     ]
    },
    "numpy.oldnumeric.transpose": {
     "line number": [
      36
     ]
    },
    "range": {
     "line number": [
      21,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng_stats.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng_stats.standardDeviation": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.oldnumeric.array": {
     "line number": [
      16
     ]
    },
    "numpy.oldnumeric.rng_stats.variance": {
     "line number": [
      17
     ]
    },
    "numpy.oldnumeric.sqrt": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng_stats.variance": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "len": {
     "line number": [
      13
     ]
    },
    "numpy.oldnumeric.add.reduce": {
     "line number": [
      13
     ]
    },
    "numpy.oldnumeric.array": {
     "line number": [
      12
     ]
    },
    "numpy.oldnumeric.rng_stats.average": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      9
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      11
     ]
    },
    "numpy.oldnumeric.setup.configuration": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.oldnumeric.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.oldnumeric.test": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.oldnumeric.tests.test_oldnumeric": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      94
     ]
    },
    "numpy.oldnumeric.tests.test_oldnumeric.nose": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.complex128": {
  "data": {
   "shadows": "numpy.core.numeric.complex128"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.complex64": {
  "data": {
   "shadows": "numpy.core.numeric.complex64"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.float32": {
  "data": {
   "shadows": "numpy.core.numeric.float32"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.float64": {
  "data": {
   "shadows": "numpy.core.numeric.float64"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.int16": {
  "data": {
   "shadows": "numpy.core.numeric.int16"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.int32": {
  "data": {
   "shadows": "numpy.core.numeric.int32"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.int64": {
  "data": {
   "shadows": "numpy.core.numeric.int64"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.int8": {
  "data": {
   "shadows": "numpy.core.numeric.int8"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.test_oldtypes": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.oldnumeric.tests.test_oldnumeric.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.test_oldtypes.test_oldtypes": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      60,
      89
     ]
    },
    "assert_array_equal": {
     "line number": [
      16,
      19,
      22,
      25,
      28,
      31,
      34,
      37,
      40,
      43,
      46,
      49,
      52,
      55,
      59,
      66,
      67,
      71,
      72,
      76,
      77,
      81,
      82,
      87,
      88
     ]
    },
    "complex": {
     "line number": [
      30,
      33,
      36
     ]
    },
    "float": {
     "line number": [
      15,
      18,
      21
     ]
    },
    "int": {
     "line number": [
      45
     ]
    },
    "numpy.array": {
     "line number": [
      14,
      15,
      17,
      18,
      20,
      21,
      23,
      24,
      26,
      27,
      29,
      30,
      32,
      33,
      35,
      36,
      38,
      39,
      41,
      42,
      44,
      45,
      47,
      48,
      50,
      51,
      53,
      54,
      57,
      58,
      63,
      64,
      65,
      68,
      69,
      70,
      73,
      74,
      75,
      78,
      79,
      80,
      84,
      85,
      86
     ]
    },
    "numpy.core.numeric.complex128": {
     "line number": [
      42
     ]
    },
    "numpy.core.numeric.complex64": {
     "line number": [
      39
     ]
    },
    "numpy.core.numeric.float32": {
     "line number": [
      24
     ]
    },
    "numpy.core.numeric.float64": {
     "line number": [
      27
     ]
    },
    "numpy.core.numeric.int16": {
     "line number": [
      51
     ]
    },
    "numpy.core.numeric.int32": {
     "line number": [
      54
     ]
    },
    "numpy.core.numeric.int64": {
     "line number": [
      58
     ]
    },
    "numpy.core.numeric.int8": {
     "line number": [
      48
     ]
    },
    "numpy.core.numeric.uint": {
     "line number": [
      65
     ]
    },
    "numpy.core.numeric.uint16": {
     "line number": [
      75
     ]
    },
    "numpy.core.numeric.uint32": {
     "line number": [
      80
     ]
    },
    "numpy.core.numeric.uint64": {
     "line number": [
      86
     ]
    },
    "numpy.core.numeric.uint8": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.uint": {
  "data": {
   "shadows": "numpy.core.numeric.uint"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.uint16": {
  "data": {
   "shadows": "numpy.core.numeric.uint16"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.uint32": {
  "data": {
   "shadows": "numpy.core.numeric.uint32"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.uint64": {
  "data": {
   "shadows": "numpy.core.numeric.uint64"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.uint8": {
  "data": {
   "shadows": "numpy.core.numeric.uint8"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_regression": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.oldnumeric.tests.test_regression.TestRegression.test_mlab_import": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.tests.test_regression.TestRegression.test_numeric_random": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.oldnumeric.random_array.randint": {
     "line number": [
      11
     ]
    },
    "numpy.oldnumeric.tests.test_regression.rlevel": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_regression.mlab": {
  "data": {
   "shadows": "numpy.oldnumeric.mlab"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_regression.randint": {
  "data": {
   "shadows": "numpy.oldnumeric.random_array.randint"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_regression.rlevel": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.oldnumeric.typeconv": {
  "data": {
   "symbols_in_volume": {
    "int": {
     "line number": [
      20
     ]
    },
    "numpy.byte": {
     "line number": [
      7
     ]
    },
    "numpy.dtype": {
     "line number": [
      7,
      8,
      12,
      13,
      20
     ]
    },
    "numpy.oldnumeric.typeconv._oldtypecodes": {
     "line number": [
      62
     ]
    },
    "numpy.short": {
     "line number": [
      8
     ]
    },
    "numpy.uintc": {
     "line number": [
      13
     ]
    },
    "numpy.ushort": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.typeconv.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.oldnumeric.typeconv._changedtypes": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.oldnumeric.typeconv._oldtypecodes": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.oldnumeric.typeconv._oldtypecodes.__getitem__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      58
     ]
    },
    "numpy.dtype": {
     "line number": [
      55
     ]
    },
    "numpy.oldnumeric.typeconv._changedtypes": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.typeconv.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.typeconv.convtypecode": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      29
     ]
    },
    "numpy.oldnumeric.typeconv.oldtype2dtype": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.typeconv.convtypecode2": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      43
     ]
    },
    "numpy.oldnumeric.typeconv.oldtype2dtype": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.oldnumeric.typeconv.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.typeconv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.typeconv.oldtype2dtype": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.oldnumeric.typeconv.oldtypecodes": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "numpy.oldnumeric.typeconv.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.ufuncs.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.oldnumeric.ufuncs.absolute": {
  "data": {
   "shadows": "numpy.absolute"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.add": {
  "data": {
   "shadows": "numpy.add"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arccos": {
  "data": {
   "shadows": "numpy.arccos"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arccosh": {
  "data": {
   "shadows": "numpy.arccosh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arcsin": {
  "data": {
   "shadows": "numpy.arcsin"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arcsinh": {
  "data": {
   "shadows": "numpy.arcsinh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arctan": {
  "data": {
   "shadows": "numpy.arctan"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arctan2": {
  "data": {
   "shadows": "numpy.arctan2"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arctanh": {
  "data": {
   "shadows": "numpy.arctanh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.bitwise_and": {
  "data": {
   "shadows": "numpy.bitwise_and"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.bitwise_or": {
  "data": {
   "shadows": "numpy.bitwise_or"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.bitwise_xor": {
  "data": {
   "shadows": "numpy.bitwise_xor"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.ceil": {
  "data": {
   "shadows": "numpy.ceil"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.conjugate": {
  "data": {
   "shadows": "numpy.conjugate"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.cosh": {
  "data": {
   "shadows": "numpy.cosh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.divide": {
  "data": {
   "shadows": "numpy.divide"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.divide_safe": {
  "data": {
   "shadows": "numpy.divide"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.equal": {
  "data": {
   "shadows": "numpy.equal"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.fabs": {
  "data": {
   "shadows": "numpy.fabs"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.floor": {
  "data": {
   "shadows": "numpy.floor"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.floor_divide": {
  "data": {
   "shadows": "numpy.floor_divide"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.fmod": {
  "data": {
   "shadows": "numpy.fmod"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.greater": {
  "data": {
   "shadows": "numpy.greater"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.greater_equal": {
  "data": {
   "shadows": "numpy.greater_equal"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.hypot": {
  "data": {
   "shadows": "numpy.hypot"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.invert": {
  "data": {
   "shadows": "numpy.invert"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.left_shift": {
  "data": {
   "shadows": "numpy.left_shift"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.less": {
  "data": {
   "shadows": "numpy.less"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.less_equal": {
  "data": {
   "shadows": "numpy.less_equal"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.log10": {
  "data": {
   "shadows": "numpy.log10"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.logical_and": {
  "data": {
   "shadows": "numpy.logical_and"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.logical_not": {
  "data": {
   "shadows": "numpy.logical_not"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.logical_or": {
  "data": {
   "shadows": "numpy.logical_or"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.logical_xor": {
  "data": {
   "shadows": "numpy.logical_xor"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.maximum": {
  "data": {
   "shadows": "numpy.maximum"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.minimum": {
  "data": {
   "shadows": "numpy.minimum"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.multiply": {
  "data": {
   "shadows": "numpy.multiply"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.negative": {
  "data": {
   "shadows": "numpy.negative"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.not_equal": {
  "data": {
   "shadows": "numpy.not_equal"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.power": {
  "data": {
   "shadows": "numpy.power"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.remainder": {
  "data": {
   "shadows": "numpy.remainder"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.right_shift": {
  "data": {
   "shadows": "numpy.right_shift"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.sinh": {
  "data": {
   "shadows": "numpy.sinh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.subtract": {
  "data": {
   "shadows": "numpy.subtract"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.tan": {
  "data": {
   "shadows": "numpy.tan"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.tanh": {
  "data": {
   "shadows": "numpy.tanh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.true_divide": {
  "data": {
   "shadows": "numpy.true_divide"
  },
  "type": "import"
 },
 "numpy.oldnumeric.user_array": {
  "data": {
   "symbols_in_volume": {
    "numpy.oldnumeric": {
     "line number": [
      9
     ]
    },
    "numpy.oldnumeric.__all__": {
     "line number": [
      7
     ]
    },
    "numpy.oldnumeric.user_array.__all__": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.oldnumeric.user_array.UserArray": {
  "data": {
   "shadows": "numpy.lib.user_array.container"
  },
  "type": "import"
 },
 "numpy.oldnumeric.user_array.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.oldnumeric.user_array.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.oldnumeric.user_array.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.oldnumeric.user_array.nold": {
  "data": {
   "shadows": "numpy.oldnumeric"
  },
  "type": "import"
 },
 "numpy.oldnumeric.user_array.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.oldnumeric.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.pkgload": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "PackageLoader": {
     "line number": [
      150
     ]
    },
    "loader": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial": {
  "data": {
   "symbols_in_volume": {
    "numpy.testing.Tester": {
     "line number": [
      28,
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.polynomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.bench": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev": {
  "data": {
   "symbols_in_volume": {
    "exec": {
     "line number": [
      2015
     ]
    },
    "numpy.array": {
     "line number": [
      442,
      445,
      448,
      451
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.chebyshev.__all__": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev._cseries_to_zseries": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_der": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "len": {
     "line number": [
      280
     ]
    },
    "numpy.arange": {
     "line number": [
      282
     ]
    },
    "numpy.array": {
     "line number": [
      281
     ]
    },
    "numpy.polynomial.chebyshev._zseries_div": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_div": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "len": {
     "line number": [
      223,
      224
     ]
    },
    "numpy.empty": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_int": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "len": {
     "line number": [
      311
     ]
    },
    "numpy.arange": {
     "line number": [
      314
     ]
    },
    "numpy.array": {
     "line number": [
      312
     ]
    },
    "numpy.polynomial.chebyshev._zseries_mul": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_mul": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "numpy.convolve": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_to_cseries": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.cheb2poly": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "len": {
     "line number": [
      422
     ]
    },
    "polyadd": {
     "line number": [
      432,
      433
     ]
    },
    "polymulx": {
     "line number": [
      432,
      433
     ]
    },
    "polysub": {
     "line number": [
      431
     ]
    },
    "range": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebadd": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "len": {
     "line number": [
      597,
      597
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebcompanion": {
  "data": {
   "lineno": 1767,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1796
     ]
    },
    "len": {
     "line number": [
      1795,
      1797,
      1800
     ]
    },
    "numpy.array": {
     "line number": [
      1798,
      1802
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1802,
      1805
     ]
    },
    "numpy.zeros": {
     "line number": [
      1801
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebder": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      932,
      934,
      936,
      938
     ]
    },
    "int": {
     "line number": [
      929
     ]
    },
    "len": {
     "line number": [
      946
     ]
    },
    "numpy.array": {
     "line number": [
      926
     ]
    },
    "numpy.double": {
     "line number": [
      928
     ]
    },
    "numpy.empty": {
     "line number": [
      953
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      945,
      961
     ]
    },
    "range": {
     "line number": [
      950,
      954
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebdiv": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      797
     ]
    },
    "len": {
     "line number": [
      799,
      800
     ]
    },
    "numpy.polynomial.chebyshev._cseries_to_zseries": {
     "line number": [
      806,
      807
     ]
    },
    "numpy.polynomial.chebyshev._zseries_div": {
     "line number": [
      808
     ]
    },
    "numpy.polynomial.chebyshev._zseries_to_cseries": {
     "line number": [
      809,
      810
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebdomain": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev.chebfit": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1719,
      1721,
      1723,
      1725,
      1733,
      1735
     ]
    },
    "ValueError": {
     "line number": [
      1717
     ]
    },
    "int": {
     "line number": [
      1711
     ]
    },
    "issubclass": {
     "line number": [
      1746
     ]
    },
    "len": {
     "line number": [
      1724,
      1724,
      1734,
      1734,
      1743
     ]
    },
    "numpy.asarray": {
     "line number": [
      1712,
      1713,
      1731
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      1746
     ]
    },
    "numpy.finfo": {
     "line number": [
      1743
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      1753
     ]
    },
    "numpy.polynomial.chebyshev.chebvander": {
     "line number": [
      1728
     ]
    },
    "numpy.polynomial.chebyshev.warnings": {
     "line number": [
      1759
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1747,
      1749
     ]
    },
    "numpy.square": {
     "line number": [
      1747,
      1747,
      1749
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebfromroots": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "divmod": {
     "line number": [
      547
     ]
    },
    "len": {
     "line number": [
      539,
      545
     ]
    },
    "numpy.ones": {
     "line number": [
      540
     ]
    },
    "numpy.polynomial.chebyshev.chebline": {
     "line number": [
      544
     ]
    },
    "numpy.polynomial.chebyshev.chebmul": {
     "line number": [
      548,
      550
     ]
    },
    "range": {
     "line number": [
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebgauss": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1905
     ]
    },
    "int": {
     "line number": [
      1903
     ]
    },
    "numpy.arange": {
     "line number": [
      1907
     ]
    },
    "numpy.cos": {
     "line number": [
      1907
     ]
    },
    "numpy.ones": {
     "line number": [
      1908
     ]
    },
    "numpy.pi": {
     "line number": [
      1907,
      1908
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebgrid2d": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebval": {
     "line number": [
      1289,
      1290
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebgrid3d": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebval": {
     "line number": [
      1406,
      1407,
      1408
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebint": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1058,
      1060,
      1062,
      1064,
      1066
     ]
    },
    "int": {
     "line number": [
      1055
     ]
    },
    "len": {
     "line number": [
      1061,
      1074,
      1076
     ]
    },
    "list": {
     "line number": [
      1074
     ]
    },
    "numpy.all": {
     "line number": [
      1078
     ]
    },
    "numpy.array": {
     "line number": [
      1050
     ]
    },
    "numpy.double": {
     "line number": [
      1052
     ]
    },
    "numpy.empty": {
     "line number": [
      1081
     ]
    },
    "numpy.iterable": {
     "line number": [
      1053
     ]
    },
    "numpy.polynomial.chebyshev.chebval": {
     "line number": [
      1090
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      1073,
      1092
     ]
    },
    "range": {
     "line number": [
      1075,
      1086
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebline": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      485,
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebmul": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev._cseries_to_zseries": {
     "line number": [
      741,
      742
     ]
    },
    "numpy.polynomial.chebyshev._zseries_mul": {
     "line number": [
      743
     ]
    },
    "numpy.polynomial.chebyshev._zseries_to_cseries": {
     "line number": [
      744
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebmulx": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": {
    "len": {
     "line number": [
      686,
      689,
      692
     ]
    },
    "numpy.empty": {
     "line number": [
      689
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebone": {
  "data": {
   "lineno": 448
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev.chebpow": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      849,
      851
     ]
    },
    "int": {
     "line number": [
      847
     ]
    },
    "numpy.array": {
     "line number": [
      853
     ]
    },
    "numpy.convolve": {
     "line number": [
      862
     ]
    },
    "numpy.polynomial.chebyshev._cseries_to_zseries": {
     "line number": [
      859
     ]
    },
    "numpy.polynomial.chebyshev._zseries_to_cseries": {
     "line number": [
      863
     ]
    },
    "pow": {
     "line number": [
      847,
      848
     ]
    },
    "range": {
     "line number": [
      861
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebpts1": {
  "data": {
   "lineno": 1941,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1970,
      1972
     ]
    },
    "int": {
     "line number": [
      1968
     ]
    },
    "numpy.cos": {
     "line number": [
      1975
     ]
    },
    "numpy.linspace": {
     "line number": [
      1974
     ]
    },
    "numpy.pi": {
     "line number": [
      1974,
      1974
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebpts2": {
  "data": {
   "lineno": 1978,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2003,
      2005
     ]
    },
    "int": {
     "line number": [
      2001
     ]
    },
    "numpy.cos": {
     "line number": [
      2008
     ]
    },
    "numpy.linspace": {
     "line number": [
      2007
     ]
    },
    "numpy.pi": {
     "line number": [
      2007
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebroots": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1857,
      1859
     ]
    },
    "numpy.array": {
     "line number": [
      1858,
      1860
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      1863
     ]
    },
    "numpy.polynomial.chebyshev.chebcompanion": {
     "line number": [
      1862
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebsub": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": {
    "len": {
     "line number": [
      649,
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebtrim": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev.chebval": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1161,
      1163
     ]
    },
    "len": {
     "line number": [
      1166,
      1169,
      1176
     ]
    },
    "list": {
     "line number": [
      1161
     ]
    },
    "numpy.array": {
     "line number": [
      1158
     ]
    },
    "numpy.asarray": {
     "line number": [
      1162
     ]
    },
    "numpy.double": {
     "line number": [
      1160
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1163
     ]
    },
    "range": {
     "line number": [
      1176
     ]
    },
    "tuple": {
     "line number": [
      1161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebval2d": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1232
     ]
    },
    "numpy.array": {
     "line number": [
      1230
     ]
    },
    "numpy.polynomial.chebyshev.chebval": {
     "line number": [
      1234,
      1235
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebval3d": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1345
     ]
    },
    "numpy.array": {
     "line number": [
      1343
     ]
    },
    "numpy.polynomial.chebyshev.chebval": {
     "line number": [
      1347,
      1348,
      1349
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebvander": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1449,
      1451
     ]
    },
    "int": {
     "line number": [
      1447
     ]
    },
    "numpy.array": {
     "line number": [
      1453
     ]
    },
    "numpy.empty": {
     "line number": [
      1456
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      1464
     ]
    },
    "range": {
     "line number": [
      1462
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebvander2d": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1520
     ]
    },
    "id": {
     "line number": [
      1518,
      1518,
      1518
     ]
    },
    "int": {
     "line number": [
      1517
     ]
    },
    "numpy.array": {
     "line number": [
      1522
     ]
    },
    "numpy.polynomial.chebyshev.chebvander": {
     "line number": [
      1524,
      1525
     ]
    },
    "zip": {
     "line number": [
      1518
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebvander3d": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1584
     ]
    },
    "id": {
     "line number": [
      1582,
      1582,
      1582
     ]
    },
    "int": {
     "line number": [
      1581
     ]
    },
    "numpy.array": {
     "line number": [
      1586
     ]
    },
    "numpy.polynomial.chebyshev.chebvander": {
     "line number": [
      1588,
      1589,
      1590
     ]
    },
    "zip": {
     "line number": [
      1582
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebweight": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      1937,
      1937
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebx": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev.chebzero": {
  "data": {
   "lineno": 445
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.poly2cheb": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "len": {
     "line number": [
      368
     ]
    },
    "numpy.polynomial.chebyshev.chebadd": {
     "line number": [
      371
     ]
    },
    "numpy.polynomial.chebyshev.chebmulx": {
     "line number": [
      371
     ]
    },
    "range": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite": {
  "data": {
   "symbols_in_volume": {
    "exec": {
     "line number": [
      1750
     ]
    },
    "numpy.array": {
     "line number": [
      188,
      191,
      194,
      197
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.hermite.__all__": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.herm2poly": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "len": {
     "line number": [
      166
     ]
    },
    "polyadd": {
     "line number": [
      179,
      180
     ]
    },
    "polymulx": {
     "line number": [
      179,
      180
     ]
    },
    "polysub": {
     "line number": [
      178
     ]
    },
    "range": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermadd": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "len": {
     "line number": [
      342,
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermcompanion": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1574
     ]
    },
    "len": {
     "line number": [
      1573,
      1575,
      1578
     ]
    },
    "numpy.arange": {
     "line number": [
      1580,
      1584
     ]
    },
    "numpy.array": {
     "line number": [
      1576
     ]
    },
    "numpy.hstack": {
     "line number": [
      1580
     ]
    },
    "numpy.multiply.accumulate": {
     "line number": [
      1570,
      1581
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1580,
      1584
     ]
    },
    "numpy.zeros": {
     "line number": [
      1579
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermder": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      697,
      699,
      701,
      703
     ]
    },
    "int": {
     "line number": [
      694
     ]
    },
    "len": {
     "line number": [
      711
     ]
    },
    "numpy.array": {
     "line number": [
      691
     ]
    },
    "numpy.double": {
     "line number": [
      693
     ]
    },
    "numpy.empty": {
     "line number": [
      718
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      710,
      722
     ]
    },
    "range": {
     "line number": [
      715,
      719
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermdiv": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      563
     ]
    },
    "len": {
     "line number": [
      565,
      566
     ]
    },
    "numpy.empty": {
     "line number": [
      572
     ]
    },
    "numpy.polynomial.hermite.hermmul": {
     "line number": [
      575
     ]
    },
    "range": {
     "line number": [
      574
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermdomain": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.hermfit": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1496,
      1498,
      1500,
      1502,
      1510,
      1512
     ]
    },
    "ValueError": {
     "line number": [
      1494
     ]
    },
    "int": {
     "line number": [
      1488
     ]
    },
    "issubclass": {
     "line number": [
      1523
     ]
    },
    "len": {
     "line number": [
      1501,
      1501,
      1511,
      1511,
      1520
     ]
    },
    "numpy.asarray": {
     "line number": [
      1489,
      1490,
      1508
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      1523
     ]
    },
    "numpy.finfo": {
     "line number": [
      1520
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      1530
     ]
    },
    "numpy.polynomial.hermite.hermvander": {
     "line number": [
      1505
     ]
    },
    "numpy.polynomial.hermite.warnings": {
     "line number": [
      1536
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1524,
      1526
     ]
    },
    "numpy.square": {
     "line number": [
      1524,
      1524,
      1526
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermfromroots": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "divmod": {
     "line number": [
      294
     ]
    },
    "len": {
     "line number": [
      286,
      292
     ]
    },
    "numpy.ones": {
     "line number": [
      287
     ]
    },
    "numpy.polynomial.hermite.hermline": {
     "line number": [
      291
     ]
    },
    "numpy.polynomial.hermite.hermmul": {
     "line number": [
      295,
      297
     ]
    },
    "range": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermgauss": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1687
     ]
    },
    "int": {
     "line number": [
      1685
     ]
    },
    "numpy.abs": {
     "line number": [
      1704,
      1705
     ]
    },
    "numpy.array": {
     "line number": [
      1691
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      1693
     ]
    },
    "numpy.pi": {
     "line number": [
      1713
     ]
    },
    "numpy.polynomial.hermite.hermcompanion": {
     "line number": [
      1692
     ]
    },
    "numpy.polynomial.hermite.hermder": {
     "line number": [
      1698
     ]
    },
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      1697,
      1698,
      1703
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1713
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermgrid2d": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      1053,
      1054
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermgrid3d": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      1170,
      1171,
      1172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermint": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      817,
      819,
      821,
      823,
      825
     ]
    },
    "int": {
     "line number": [
      814
     ]
    },
    "len": {
     "line number": [
      820,
      833,
      835
     ]
    },
    "list": {
     "line number": [
      833
     ]
    },
    "numpy.all": {
     "line number": [
      837
     ]
    },
    "numpy.array": {
     "line number": [
      809
     ]
    },
    "numpy.double": {
     "line number": [
      811
     ]
    },
    "numpy.empty": {
     "line number": [
      840
     ]
    },
    "numpy.iterable": {
     "line number": [
      812
     ]
    },
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      845
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      832,
      847
     ]
    },
    "range": {
     "line number": [
      834,
      843
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermline": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      231,
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermmul": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "len": {
     "line number": [
      490,
      490,
      497,
      500,
      504,
      507
     ]
    },
    "numpy.polynomial.hermite.hermadd": {
     "line number": [
      511,
      512
     ]
    },
    "numpy.polynomial.hermite.hermmulx": {
     "line number": [
      511,
      512
     ]
    },
    "numpy.polynomial.hermite.hermsub": {
     "line number": [
      510
     ]
    },
    "range": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermmulx": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "len": {
     "line number": [
      437,
      440,
      443
     ]
    },
    "numpy.empty": {
     "line number": [
      440
     ]
    },
    "range": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermone": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.hermpow": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      620,
      622
     ]
    },
    "int": {
     "line number": [
      618
     ]
    },
    "numpy.array": {
     "line number": [
      624
     ]
    },
    "numpy.polynomial.hermite.hermmul": {
     "line number": [
      632
     ]
    },
    "pow": {
     "line number": [
      618,
      619
     ]
    },
    "range": {
     "line number": [
      631
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermroots": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1638,
      1640
     ]
    },
    "numpy.array": {
     "line number": [
      1639,
      1641
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      1644
     ]
    },
    "numpy.polynomial.hermite.hermcompanion": {
     "line number": [
      1643
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermsub": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "len": {
     "line number": [
      390,
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermtrim": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.hermval": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      923,
      925
     ]
    },
    "len": {
     "line number": [
      929,
      932,
      936,
      939
     ]
    },
    "list": {
     "line number": [
      923
     ]
    },
    "numpy.array": {
     "line number": [
      920
     ]
    },
    "numpy.asarray": {
     "line number": [
      924
     ]
    },
    "numpy.double": {
     "line number": [
      922
     ]
    },
    "numpy.ndarray": {
     "line number": [
      925
     ]
    },
    "range": {
     "line number": [
      939
     ]
    },
    "tuple": {
     "line number": [
      923
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermval2d": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      996
     ]
    },
    "numpy.array": {
     "line number": [
      994
     ]
    },
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      998,
      999
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermval3d": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1109
     ]
    },
    "numpy.array": {
     "line number": [
      1107
     ]
    },
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      1111,
      1112,
      1113
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermvander": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1222,
      1224
     ]
    },
    "int": {
     "line number": [
      1220
     ]
    },
    "numpy.array": {
     "line number": [
      1226
     ]
    },
    "numpy.empty": {
     "line number": [
      1229
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      1236
     ]
    },
    "range": {
     "line number": [
      1234
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermvander2d": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1292
     ]
    },
    "id": {
     "line number": [
      1290,
      1290,
      1290
     ]
    },
    "int": {
     "line number": [
      1289
     ]
    },
    "numpy.array": {
     "line number": [
      1294
     ]
    },
    "numpy.polynomial.hermite.hermvander": {
     "line number": [
      1296,
      1297
     ]
    },
    "zip": {
     "line number": [
      1290
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermvander3d": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1356
     ]
    },
    "id": {
     "line number": [
      1354,
      1354,
      1354
     ]
    },
    "int": {
     "line number": [
      1353
     ]
    },
    "numpy.array": {
     "line number": [
      1358
     ]
    },
    "numpy.polynomial.hermite.hermvander": {
     "line number": [
      1360,
      1361,
      1362
     ]
    },
    "zip": {
     "line number": [
      1354
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermweight": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      1742
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermx": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.hermzero": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.poly2herm": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "len": {
     "line number": [
      118
     ]
    },
    "numpy.polynomial.hermite.hermadd": {
     "line number": [
      121
     ]
    },
    "numpy.polynomial.hermite.hermmulx": {
     "line number": [
      121
     ]
    },
    "range": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e": {
  "data": {
   "symbols_in_volume": {
    "exec": {
     "line number": [
      1746
     ]
    },
    "numpy.array": {
     "line number": [
      187,
      190,
      193,
      196
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.hermite_e.__all__": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.herme2poly": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "len": {
     "line number": [
      166
     ]
    },
    "polyadd": {
     "line number": [
      178,
      179
     ]
    },
    "polymulx": {
     "line number": [
      178,
      179
     ]
    },
    "polysub": {
     "line number": [
      177
     ]
    },
    "range": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeadd": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "len": {
     "line number": [
      342,
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermecompanion": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1571
     ]
    },
    "len": {
     "line number": [
      1570,
      1572,
      1575
     ]
    },
    "numpy.arange": {
     "line number": [
      1577,
      1581
     ]
    },
    "numpy.array": {
     "line number": [
      1573
     ]
    },
    "numpy.hstack": {
     "line number": [
      1577
     ]
    },
    "numpy.multiply.accumulate": {
     "line number": [
      1567,
      1578
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1577,
      1581
     ]
    },
    "numpy.zeros": {
     "line number": [
      1576
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeder": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      695,
      697,
      699,
      701
     ]
    },
    "int": {
     "line number": [
      692
     ]
    },
    "len": {
     "line number": [
      709
     ]
    },
    "numpy.array": {
     "line number": [
      689
     ]
    },
    "numpy.double": {
     "line number": [
      691
     ]
    },
    "numpy.empty": {
     "line number": [
      716
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      708,
      720
     ]
    },
    "range": {
     "line number": [
      713,
      717
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermediv": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      561
     ]
    },
    "len": {
     "line number": [
      563,
      564
     ]
    },
    "numpy.empty": {
     "line number": [
      570
     ]
    },
    "numpy.polynomial.hermite_e.hermemul": {
     "line number": [
      573
     ]
    },
    "range": {
     "line number": [
      572
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermedomain": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.hermefit": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1492,
      1494,
      1496,
      1498,
      1506,
      1508
     ]
    },
    "ValueError": {
     "line number": [
      1490
     ]
    },
    "int": {
     "line number": [
      1484
     ]
    },
    "issubclass": {
     "line number": [
      1519
     ]
    },
    "len": {
     "line number": [
      1497,
      1497,
      1507,
      1507,
      1516
     ]
    },
    "numpy.asarray": {
     "line number": [
      1485,
      1486,
      1504
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      1519
     ]
    },
    "numpy.finfo": {
     "line number": [
      1516
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      1526
     ]
    },
    "numpy.polynomial.hermite_e.hermevander": {
     "line number": [
      1501
     ]
    },
    "numpy.polynomial.hermite_e.warnings": {
     "line number": [
      1532
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1520,
      1522
     ]
    },
    "numpy.square": {
     "line number": [
      1520,
      1520,
      1522
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermefromroots": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "divmod": {
     "line number": [
      294
     ]
    },
    "len": {
     "line number": [
      286,
      292
     ]
    },
    "numpy.ones": {
     "line number": [
      287
     ]
    },
    "numpy.polynomial.hermite_e.hermeline": {
     "line number": [
      291
     ]
    },
    "numpy.polynomial.hermite_e.hermemul": {
     "line number": [
      295,
      297
     ]
    },
    "range": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermegauss": {
  "data": {
   "lineno": 1646,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1684
     ]
    },
    "int": {
     "line number": [
      1682
     ]
    },
    "numpy.abs": {
     "line number": [
      1701,
      1702
     ]
    },
    "numpy.array": {
     "line number": [
      1688
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      1690
     ]
    },
    "numpy.pi": {
     "line number": [
      1710
     ]
    },
    "numpy.polynomial.hermite_e.hermecompanion": {
     "line number": [
      1689
     ]
    },
    "numpy.polynomial.hermite_e.hermeder": {
     "line number": [
      1695
     ]
    },
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      1694,
      1695,
      1700
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1710
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermegrid2d": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": {
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      1050,
      1051
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermegrid3d": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": {
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      1167,
      1168,
      1169
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeint": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      815,
      817,
      819,
      821,
      823
     ]
    },
    "int": {
     "line number": [
      812
     ]
    },
    "len": {
     "line number": [
      818,
      831,
      833
     ]
    },
    "list": {
     "line number": [
      831
     ]
    },
    "numpy.all": {
     "line number": [
      835
     ]
    },
    "numpy.array": {
     "line number": [
      807
     ]
    },
    "numpy.double": {
     "line number": [
      809
     ]
    },
    "numpy.empty": {
     "line number": [
      838
     ]
    },
    "numpy.iterable": {
     "line number": [
      810
     ]
    },
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      843
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      830,
      845
     ]
    },
    "range": {
     "line number": [
      832,
      841
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeline": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      231,
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermemul": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "len": {
     "line number": [
      490,
      490,
      497,
      500,
      504,
      507
     ]
    },
    "numpy.polynomial.hermite_e.hermeadd": {
     "line number": [
      511,
      512
     ]
    },
    "numpy.polynomial.hermite_e.hermemulx": {
     "line number": [
      511,
      512
     ]
    },
    "numpy.polynomial.hermite_e.hermesub": {
     "line number": [
      510
     ]
    },
    "range": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermemulx": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "len": {
     "line number": [
      437,
      440,
      443
     ]
    },
    "numpy.empty": {
     "line number": [
      440
     ]
    },
    "range": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeone": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.hermepow": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      618,
      620
     ]
    },
    "int": {
     "line number": [
      616
     ]
    },
    "numpy.array": {
     "line number": [
      622
     ]
    },
    "numpy.polynomial.hermite_e.hermemul": {
     "line number": [
      630
     ]
    },
    "pow": {
     "line number": [
      616,
      617
     ]
    },
    "range": {
     "line number": [
      629
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeroots": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1635,
      1637
     ]
    },
    "numpy.array": {
     "line number": [
      1636,
      1638
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      1641
     ]
    },
    "numpy.polynomial.hermite_e.hermecompanion": {
     "line number": [
      1640
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermesub": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "len": {
     "line number": [
      390,
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermetrim": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.hermeval": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      921,
      923
     ]
    },
    "len": {
     "line number": [
      926,
      929,
      933,
      936
     ]
    },
    "list": {
     "line number": [
      921
     ]
    },
    "numpy.array": {
     "line number": [
      918
     ]
    },
    "numpy.asarray": {
     "line number": [
      922
     ]
    },
    "numpy.double": {
     "line number": [
      920
     ]
    },
    "numpy.ndarray": {
     "line number": [
      923
     ]
    },
    "range": {
     "line number": [
      936
     ]
    },
    "tuple": {
     "line number": [
      921
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeval2d": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      993
     ]
    },
    "numpy.array": {
     "line number": [
      991
     ]
    },
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      995,
      996
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeval3d": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1106
     ]
    },
    "numpy.array": {
     "line number": [
      1104
     ]
    },
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      1108,
      1109,
      1110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermevander": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1219,
      1221
     ]
    },
    "int": {
     "line number": [
      1217
     ]
    },
    "numpy.array": {
     "line number": [
      1223
     ]
    },
    "numpy.empty": {
     "line number": [
      1226
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      1232
     ]
    },
    "range": {
     "line number": [
      1230
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermevander2d": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1288
     ]
    },
    "id": {
     "line number": [
      1286,
      1286,
      1286
     ]
    },
    "int": {
     "line number": [
      1285
     ]
    },
    "numpy.array": {
     "line number": [
      1290
     ]
    },
    "numpy.polynomial.hermite_e.hermevander": {
     "line number": [
      1292,
      1293
     ]
    },
    "zip": {
     "line number": [
      1286
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermevander3d": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1352
     ]
    },
    "id": {
     "line number": [
      1350,
      1350,
      1350
     ]
    },
    "int": {
     "line number": [
      1349
     ]
    },
    "numpy.array": {
     "line number": [
      1354
     ]
    },
    "numpy.polynomial.hermite_e.hermevander": {
     "line number": [
      1356,
      1357,
      1358
     ]
    },
    "zip": {
     "line number": [
      1350
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeweight": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      1738
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermex": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.hermezero": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.poly2herme": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "len": {
     "line number": [
      118
     ]
    },
    "numpy.polynomial.hermite_e.hermeadd": {
     "line number": [
      121
     ]
    },
    "numpy.polynomial.hermite_e.hermemulx": {
     "line number": [
      121
     ]
    },
    "range": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre": {
  "data": {
   "symbols_in_volume": {
    "exec": {
     "line number": [
      1742
     ]
    },
    "numpy.array": {
     "line number": [
      184,
      187,
      190,
      193
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.laguerre.__all__": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.lag2poly": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "len": {
     "line number": [
      165
     ]
    },
    "polyadd": {
     "line number": [
      175,
      176
     ]
    },
    "polymulx": {
     "line number": [
      175,
      176
     ]
    },
    "polysub": {
     "line number": [
      174,
      175,
      176
     ]
    },
    "range": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagadd": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "len": {
     "line number": [
      339,
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagcompanion": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1572
     ]
    },
    "len": {
     "line number": [
      1571,
      1573,
      1576
     ]
    },
    "numpy.arange": {
     "line number": [
      1581,
      1582
     ]
    },
    "numpy.array": {
     "line number": [
      1574
     ]
    },
    "numpy.multiply.accumulate": {
     "line number": [
      1568
     ]
    },
    "numpy.zeros": {
     "line number": [
      1577
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagder": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      693,
      695,
      697,
      699
     ]
    },
    "int": {
     "line number": [
      690
     ]
    },
    "len": {
     "line number": [
      707
     ]
    },
    "numpy.array": {
     "line number": [
      687
     ]
    },
    "numpy.double": {
     "line number": [
      689
     ]
    },
    "numpy.empty": {
     "line number": [
      714
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      706,
      720
     ]
    },
    "range": {
     "line number": [
      711,
      715
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagdiv": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      559
     ]
    },
    "len": {
     "line number": [
      561,
      562
     ]
    },
    "numpy.empty": {
     "line number": [
      568
     ]
    },
    "numpy.polynomial.laguerre.lagmul": {
     "line number": [
      571
     ]
    },
    "range": {
     "line number": [
      570
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagdomain": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.lagfit": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1495,
      1497,
      1499,
      1501,
      1509,
      1511
     ]
    },
    "ValueError": {
     "line number": [
      1493
     ]
    },
    "int": {
     "line number": [
      1487
     ]
    },
    "issubclass": {
     "line number": [
      1522
     ]
    },
    "len": {
     "line number": [
      1500,
      1500,
      1510,
      1510,
      1519
     ]
    },
    "numpy.asarray": {
     "line number": [
      1488,
      1489,
      1507
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      1522
     ]
    },
    "numpy.finfo": {
     "line number": [
      1519
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      1529
     ]
    },
    "numpy.polynomial.laguerre.lagvander": {
     "line number": [
      1504
     ]
    },
    "numpy.polynomial.laguerre.warnings": {
     "line number": [
      1535
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1523,
      1525
     ]
    },
    "numpy.square": {
     "line number": [
      1523,
      1523,
      1525
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagfromroots": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "divmod": {
     "line number": [
      290
     ]
    },
    "len": {
     "line number": [
      282,
      288
     ]
    },
    "numpy.ones": {
     "line number": [
      283
     ]
    },
    "numpy.polynomial.laguerre.lagline": {
     "line number": [
      287
     ]
    },
    "numpy.polynomial.laguerre.lagmul": {
     "line number": [
      291,
      293
     ]
    },
    "range": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.laggauss": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1685
     ]
    },
    "int": {
     "line number": [
      1683
     ]
    },
    "numpy.abs": {
     "line number": [
      1702,
      1703
     ]
    },
    "numpy.array": {
     "line number": [
      1689
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      1691
     ]
    },
    "numpy.polynomial.laguerre.lagcompanion": {
     "line number": [
      1690
     ]
    },
    "numpy.polynomial.laguerre.lagder": {
     "line number": [
      1696
     ]
    },
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      1695,
      1696,
      1701
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.laggrid2d": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      1053,
      1054
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.laggrid3d": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      1170,
      1171,
      1172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagint": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      816,
      818,
      820,
      822,
      824
     ]
    },
    "int": {
     "line number": [
      813
     ]
    },
    "len": {
     "line number": [
      819,
      832,
      834
     ]
    },
    "list": {
     "line number": [
      832
     ]
    },
    "numpy.all": {
     "line number": [
      836
     ]
    },
    "numpy.array": {
     "line number": [
      808
     ]
    },
    "numpy.double": {
     "line number": [
      810
     ]
    },
    "numpy.empty": {
     "line number": [
      839
     ]
    },
    "numpy.iterable": {
     "line number": [
      811
     ]
    },
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      845
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      831,
      847
     ]
    },
    "range": {
     "line number": [
      833,
      842
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagline": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      227,
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagmul": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "len": {
     "line number": [
      488,
      488,
      495,
      498,
      502,
      505
     ]
    },
    "numpy.polynomial.laguerre.lagadd": {
     "line number": [
      509,
      510
     ]
    },
    "numpy.polynomial.laguerre.lagmulx": {
     "line number": [
      509,
      510
     ]
    },
    "numpy.polynomial.laguerre.lagsub": {
     "line number": [
      508,
      509,
      510
     ]
    },
    "range": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagmulx": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": {
    "len": {
     "line number": [
      434,
      437,
      440
     ]
    },
    "numpy.empty": {
     "line number": [
      437
     ]
    },
    "range": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagone": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.lagpow": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      616,
      618
     ]
    },
    "int": {
     "line number": [
      614
     ]
    },
    "numpy.array": {
     "line number": [
      620
     ]
    },
    "numpy.polynomial.laguerre.lagmul": {
     "line number": [
      628
     ]
    },
    "pow": {
     "line number": [
      614,
      615
     ]
    },
    "range": {
     "line number": [
      627
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagroots": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1636,
      1638
     ]
    },
    "numpy.array": {
     "line number": [
      1637,
      1639
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      1642
     ]
    },
    "numpy.polynomial.laguerre.lagcompanion": {
     "line number": [
      1641
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagsub": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "len": {
     "line number": [
      387,
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagtrim": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.lagval": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      923,
      925
     ]
    },
    "len": {
     "line number": [
      929,
      932,
      936,
      939
     ]
    },
    "list": {
     "line number": [
      923
     ]
    },
    "numpy.array": {
     "line number": [
      920
     ]
    },
    "numpy.asarray": {
     "line number": [
      924
     ]
    },
    "numpy.double": {
     "line number": [
      922
     ]
    },
    "numpy.ndarray": {
     "line number": [
      925
     ]
    },
    "range": {
     "line number": [
      939
     ]
    },
    "tuple": {
     "line number": [
      923
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagval2d": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      996
     ]
    },
    "numpy.array": {
     "line number": [
      994
     ]
    },
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      998,
      999
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagval3d": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1109
     ]
    },
    "numpy.array": {
     "line number": [
      1107
     ]
    },
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      1111,
      1112,
      1113
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagvander": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1222,
      1224
     ]
    },
    "int": {
     "line number": [
      1220
     ]
    },
    "numpy.array": {
     "line number": [
      1226
     ]
    },
    "numpy.empty": {
     "line number": [
      1229
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      1235
     ]
    },
    "range": {
     "line number": [
      1233
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagvander2d": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1291
     ]
    },
    "id": {
     "line number": [
      1289,
      1289,
      1289
     ]
    },
    "int": {
     "line number": [
      1288
     ]
    },
    "numpy.array": {
     "line number": [
      1293
     ]
    },
    "numpy.polynomial.laguerre.lagvander": {
     "line number": [
      1295,
      1296
     ]
    },
    "zip": {
     "line number": [
      1289
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagvander3d": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1355
     ]
    },
    "id": {
     "line number": [
      1353,
      1353,
      1353
     ]
    },
    "int": {
     "line number": [
      1352
     ]
    },
    "numpy.array": {
     "line number": [
      1357
     ]
    },
    "numpy.polynomial.laguerre.lagvander": {
     "line number": [
      1359,
      1360,
      1361
     ]
    },
    "zip": {
     "line number": [
      1353
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagweight": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      1735
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagx": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.lagzero": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.poly2lag": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "len": {
     "line number": [
      117
     ]
    },
    "numpy.polynomial.laguerre.lagadd": {
     "line number": [
      120
     ]
    },
    "numpy.polynomial.laguerre.lagmulx": {
     "line number": [
      120
     ]
    },
    "range": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre": {
  "data": {
   "symbols_in_volume": {
    "exec": {
     "line number": [
      1768
     ]
    },
    "numpy.array": {
     "line number": [
      216,
      219,
      222,
      225
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.legendre.__all__": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.leg2poly": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "len": {
     "line number": [
      197
     ]
    },
    "polyadd": {
     "line number": [
      207,
      208
     ]
    },
    "polymulx": {
     "line number": [
      207,
      208
     ]
    },
    "polysub": {
     "line number": [
      206
     ]
    },
    "range": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legadd": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "len": {
     "line number": [
      371,
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legcompanion": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1597
     ]
    },
    "len": {
     "line number": [
      1596,
      1598,
      1601
     ]
    },
    "numpy.arange": {
     "line number": [
      1603,
      1606
     ]
    },
    "numpy.array": {
     "line number": [
      1599
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1603
     ]
    },
    "numpy.zeros": {
     "line number": [
      1602
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legder": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      732,
      734,
      736,
      738
     ]
    },
    "int": {
     "line number": [
      729
     ]
    },
    "len": {
     "line number": [
      746
     ]
    },
    "numpy.array": {
     "line number": [
      726
     ]
    },
    "numpy.double": {
     "line number": [
      728
     ]
    },
    "numpy.empty": {
     "line number": [
      753
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      745,
      761
     ]
    },
    "range": {
     "line number": [
      750,
      754
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legdiv": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      596
     ]
    },
    "len": {
     "line number": [
      598,
      599
     ]
    },
    "numpy.empty": {
     "line number": [
      605
     ]
    },
    "numpy.polynomial.legendre.legmul": {
     "line number": [
      608
     ]
    },
    "range": {
     "line number": [
      607
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legdomain": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.legfit": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1520,
      1522,
      1524,
      1526,
      1534,
      1536
     ]
    },
    "ValueError": {
     "line number": [
      1518
     ]
    },
    "int": {
     "line number": [
      1512
     ]
    },
    "issubclass": {
     "line number": [
      1547
     ]
    },
    "len": {
     "line number": [
      1525,
      1525,
      1535,
      1535,
      1544
     ]
    },
    "numpy.asarray": {
     "line number": [
      1513,
      1514,
      1532
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      1547
     ]
    },
    "numpy.finfo": {
     "line number": [
      1544
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      1554
     ]
    },
    "numpy.polynomial.legendre.legvander": {
     "line number": [
      1529
     ]
    },
    "numpy.polynomial.legendre.warnings": {
     "line number": [
      1560
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1548,
      1550
     ]
    },
    "numpy.square": {
     "line number": [
      1548,
      1548,
      1550
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legfromroots": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "divmod": {
     "line number": [
      321
     ]
    },
    "len": {
     "line number": [
      313,
      319
     ]
    },
    "numpy.ones": {
     "line number": [
      314
     ]
    },
    "numpy.polynomial.legendre.legline": {
     "line number": [
      318
     ]
    },
    "numpy.polynomial.legendre.legmul": {
     "line number": [
      322,
      324
     ]
    },
    "range": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.leggauss": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1706
     ]
    },
    "int": {
     "line number": [
      1704
     ]
    },
    "numpy.abs": {
     "line number": [
      1723,
      1724
     ]
    },
    "numpy.array": {
     "line number": [
      1710
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      1712
     ]
    },
    "numpy.polynomial.legendre.legcompanion": {
     "line number": [
      1711
     ]
    },
    "numpy.polynomial.legendre.legder": {
     "line number": [
      1717
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      1716,
      1717,
      1722
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.leggrid2d": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legval": {
     "line number": [
      1090,
      1091
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.leggrid3d": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legval": {
     "line number": [
      1207,
      1208,
      1209
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legint": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      858,
      860,
      862,
      864,
      866
     ]
    },
    "int": {
     "line number": [
      855
     ]
    },
    "len": {
     "line number": [
      861,
      874,
      876
     ]
    },
    "list": {
     "line number": [
      874
     ]
    },
    "numpy.all": {
     "line number": [
      878
     ]
    },
    "numpy.array": {
     "line number": [
      850
     ]
    },
    "numpy.double": {
     "line number": [
      852
     ]
    },
    "numpy.empty": {
     "line number": [
      881
     ]
    },
    "numpy.iterable": {
     "line number": [
      853
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      890
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      873,
      892
     ]
    },
    "range": {
     "line number": [
      875,
      886
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legline": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      259,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legmul": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "len": {
     "line number": [
      522,
      522,
      529,
      532,
      536,
      539
     ]
    },
    "numpy.polynomial.legendre.legadd": {
     "line number": [
      543,
      544
     ]
    },
    "numpy.polynomial.legendre.legmulx": {
     "line number": [
      543,
      544
     ]
    },
    "numpy.polynomial.legendre.legsub": {
     "line number": [
      542
     ]
    },
    "range": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legmulx": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "len": {
     "line number": [
      464,
      467,
      470
     ]
    },
    "numpy.empty": {
     "line number": [
      467
     ]
    },
    "range": {
     "line number": [
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legone": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.legpow": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      650,
      652
     ]
    },
    "int": {
     "line number": [
      648
     ]
    },
    "numpy.array": {
     "line number": [
      654
     ]
    },
    "numpy.polynomial.legendre.legmul": {
     "line number": [
      662
     ]
    },
    "pow": {
     "line number": [
      648,
      649
     ]
    },
    "range": {
     "line number": [
      661
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legroots": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1657,
      1659
     ]
    },
    "numpy.array": {
     "line number": [
      1658,
      1660
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      1663
     ]
    },
    "numpy.polynomial.legendre.legcompanion": {
     "line number": [
      1662
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legsub": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "len": {
     "line number": [
      423,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legtrim": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.legval": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      961,
      963
     ]
    },
    "len": {
     "line number": [
      966,
      969,
      973,
      976
     ]
    },
    "list": {
     "line number": [
      961
     ]
    },
    "numpy.array": {
     "line number": [
      958
     ]
    },
    "numpy.asarray": {
     "line number": [
      962
     ]
    },
    "numpy.double": {
     "line number": [
      960
     ]
    },
    "numpy.ndarray": {
     "line number": [
      963
     ]
    },
    "range": {
     "line number": [
      976
     ]
    },
    "tuple": {
     "line number": [
      961
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legval2d": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1033
     ]
    },
    "numpy.array": {
     "line number": [
      1031
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      1035,
      1036
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legval3d": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1146
     ]
    },
    "numpy.array": {
     "line number": [
      1144
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      1148,
      1149,
      1150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legvander": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1250,
      1252
     ]
    },
    "int": {
     "line number": [
      1248
     ]
    },
    "numpy.array": {
     "line number": [
      1254
     ]
    },
    "numpy.empty": {
     "line number": [
      1257
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      1265
     ]
    },
    "range": {
     "line number": [
      1263
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legvander2d": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1321
     ]
    },
    "id": {
     "line number": [
      1319,
      1319,
      1319
     ]
    },
    "int": {
     "line number": [
      1318
     ]
    },
    "numpy.array": {
     "line number": [
      1323
     ]
    },
    "numpy.polynomial.legendre.legvander": {
     "line number": [
      1325,
      1326
     ]
    },
    "zip": {
     "line number": [
      1319
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legvander3d": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1385
     ]
    },
    "id": {
     "line number": [
      1383,
      1383,
      1383
     ]
    },
    "int": {
     "line number": [
      1382
     ]
    },
    "numpy.array": {
     "line number": [
      1387
     ]
    },
    "numpy.polynomial.legendre.legvander": {
     "line number": [
      1389,
      1390,
      1391
     ]
    },
    "zip": {
     "line number": [
      1383
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legweight": {
  "data": {
   "lineno": 1737
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legx": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.legzero": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.poly2leg": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "len": {
     "line number": [
      143
     ]
    },
    "numpy.polynomial.legendre.legadd": {
     "line number": [
      146
     ]
    },
    "numpy.polynomial.legendre.legmulx": {
     "line number": [
      146
     ]
    },
    "range": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial": {
  "data": {
   "symbols_in_volume": {
    "exec": {
     "line number": [
      1493
     ]
    },
    "numpy.array": {
     "line number": [
      78,
      81,
      84,
      87
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.polynomial.__all__": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.polyadd": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "len": {
     "line number": [
      238,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polycompanion": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1419
     ]
    },
    "len": {
     "line number": [
      1418,
      1420,
      1423
     ]
    },
    "numpy.array": {
     "line number": [
      1421
     ]
    },
    "numpy.zeros": {
     "line number": [
      1424
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyder": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      535,
      537,
      539,
      541
     ]
    },
    "int": {
     "line number": [
      532
     ]
    },
    "len": {
     "line number": [
      549
     ]
    },
    "numpy.array": {
     "line number": [
      527
     ]
    },
    "numpy.empty": {
     "line number": [
      556
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      548,
      560
     ]
    },
    "range": {
     "line number": [
      553,
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polydiv": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      403
     ]
    },
    "len": {
     "line number": [
      405,
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polydomain": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.polyfit": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1343,
      1345,
      1347,
      1349,
      1357,
      1359
     ]
    },
    "ValueError": {
     "line number": [
      1341
     ]
    },
    "int": {
     "line number": [
      1335
     ]
    },
    "issubclass": {
     "line number": [
      1370
     ]
    },
    "len": {
     "line number": [
      1348,
      1348,
      1358,
      1358,
      1367
     ]
    },
    "numpy.asarray": {
     "line number": [
      1336,
      1337,
      1355
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      1370
     ]
    },
    "numpy.finfo": {
     "line number": [
      1367
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      1377
     ]
    },
    "numpy.polynomial.polynomial.polyvander": {
     "line number": [
      1352
     ]
    },
    "numpy.polynomial.polynomial.warnings": {
     "line number": [
      1383
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1371,
      1373
     ]
    },
    "numpy.square": {
     "line number": [
      1371,
      1371,
      1373
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyfromroots": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "divmod": {
     "line number": [
      194
     ]
    },
    "len": {
     "line number": [
      186,
      192
     ]
    },
    "numpy.ones": {
     "line number": [
      187
     ]
    },
    "numpy.polynomial.polynomial.polyline": {
     "line number": [
      191
     ]
    },
    "numpy.polynomial.polynomial.polymul": {
     "line number": [
      195,
      197
     ]
    },
    "range": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polygrid2d": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      889,
      890
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polygrid3d": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      1006,
      1007,
      1008
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyint": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      651,
      653,
      655,
      657,
      659
     ]
    },
    "int": {
     "line number": [
      648
     ]
    },
    "len": {
     "line number": [
      654,
      667,
      670
     ]
    },
    "list": {
     "line number": [
      667
     ]
    },
    "numpy.all": {
     "line number": [
      672
     ]
    },
    "numpy.array": {
     "line number": [
      641
     ]
    },
    "numpy.empty": {
     "line number": [
      675
     ]
    },
    "numpy.iterable": {
     "line number": [
      646
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      680
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      668,
      682
     ]
    },
    "range": {
     "line number": [
      669,
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyline": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      123,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polymul": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "numpy.convolve": {
     "line number": [
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polymulx": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "len": {
     "line number": [
      320,
      323
     ]
    },
    "numpy.empty": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyone": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.polypow": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      459,
      461
     ]
    },
    "int": {
     "line number": [
      457
     ]
    },
    "numpy.array": {
     "line number": [
      463
     ]
    },
    "numpy.convolve": {
     "line number": [
      471
     ]
    },
    "pow": {
     "line number": [
      457,
      458
     ]
    },
    "range": {
     "line number": [
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyroots": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1478,
      1480
     ]
    },
    "numpy.array": {
     "line number": [
      1479,
      1481
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      1484
     ]
    },
    "numpy.polynomial.polynomial.polycompanion": {
     "line number": [
      1483
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polysub": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "len": {
     "line number": [
      283,
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polytrim": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.polyval": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      771,
      773
     ]
    },
    "len": {
     "line number": [
      777
     ]
    },
    "list": {
     "line number": [
      771
     ]
    },
    "numpy.array": {
     "line number": [
      767
     ]
    },
    "numpy.asarray": {
     "line number": [
      772
     ]
    },
    "numpy.ndarray": {
     "line number": [
      773
     ]
    },
    "range": {
     "line number": [
      777
     ]
    },
    "tuple": {
     "line number": [
      771
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyval2d": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      832
     ]
    },
    "numpy.array": {
     "line number": [
      830
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      834,
      835
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyval3d": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      945
     ]
    },
    "numpy.array": {
     "line number": [
      943
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      947,
      948,
      949
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvander": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1052,
      1054
     ]
    },
    "int": {
     "line number": [
      1050
     ]
    },
    "numpy.array": {
     "line number": [
      1056
     ]
    },
    "numpy.empty": {
     "line number": [
      1059
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      1065
     ]
    },
    "range": {
     "line number": [
      1063
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvander2d": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1116
     ]
    },
    "id": {
     "line number": [
      1114,
      1114,
      1114
     ]
    },
    "int": {
     "line number": [
      1113
     ]
    },
    "numpy.array": {
     "line number": [
      1118
     ]
    },
    "numpy.polynomial.polynomial.polyvander": {
     "line number": [
      1120,
      1121
     ]
    },
    "zip": {
     "line number": [
      1114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvander3d": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1182
     ]
    },
    "id": {
     "line number": [
      1180,
      1180,
      1180
     ]
    },
    "int": {
     "line number": [
      1179
     ]
    },
    "numpy.array": {
     "line number": [
      1184
     ]
    },
    "numpy.polynomial.polynomial.polyvander": {
     "line number": [
      1186,
      1187,
      1188
     ]
    },
    "zip": {
     "line number": [
      1180
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyx": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.polyzero": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.polytemplate": {
  "data": {
   "symbols_in_volume": {
    "numpy.polynomial.polytemplate.string": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.polytemplate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.polytemplate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.polytemplate.polytemplate": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.polytemplate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.polytemplate.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "numpy.polynomial.polytemplate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils": {
  "data": {},
  "type": "module"
 },
 "numpy.polynomial.polyutils.PolyBase": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "object": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.PolyDomainError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.polynomial.polyutils.PolyError": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.PolyError": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.RankWarning": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.polynomial.polyutils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.as_series": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      148,
      150,
      167
     ]
    },
    "any": {
     "line number": [
      149,
      154
     ]
    },
    "len": {
     "line number": [
      158
     ]
    },
    "min": {
     "line number": [
      147
     ]
    },
    "numpy.array": {
     "line number": [
      146,
      168
     ]
    },
    "numpy.common_type": {
     "line number": [
      165
     ]
    },
    "numpy.dtype": {
     "line number": [
      154,
      157,
      158
     ]
    },
    "numpy.empty": {
     "line number": [
      158
     ]
    },
    "numpy.polynomial.polyutils.trimseq": {
     "line number": [
      152
     ]
    },
    "object": {
     "line number": [
      154,
      157,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.getdomain": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      268,
      268
     ]
    },
    "numpy.array": {
     "line number": [
      268,
      270
     ]
    },
    "numpy.polynomial.polyutils.as_series": {
     "line number": [
      264
     ]
    },
    "numpy.typecodes": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.mapdomain": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "numpy.asanyarray": {
     "line number": [
      382
     ]
    },
    "numpy.polynomial.polyutils.mapparms": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.mapparms": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.trimcoef": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      217
     ]
    },
    "len": {
     "line number": [
      221
     ]
    },
    "numpy.abs": {
     "line number": [
      220
     ]
    },
    "numpy.polynomial.polyutils.as_series": {
     "line number": [
      219
     ]
    },
    "numpy.where": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.trimseq": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "len": {
     "line number": [
      96,
      99
     ]
    },
    "range": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      9
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      11
     ]
    },
    "numpy.polynomial.setup.configuration": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.polynomial.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.polynomial.test": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      556
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.T0": {
     "line number": [
      27
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.T1": {
     "line number": [
      27
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.T2": {
     "line number": [
      27
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.T3": {
     "line number": [
      27
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.T4": {
     "line number": [
      27
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.T5": {
     "line number": [
      27
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.T6": {
     "line number": [
      27
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.T7": {
     "line number": [
      27
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.T8": {
     "line number": [
      27
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.T9": {
     "line number": [
      27
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      557
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_chebyshev.T0": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T1": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T2": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T3": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T4": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T5": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T6": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T7": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T8": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T9": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebadd": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "max": {
     "line number": [
      68
     ]
    },
    "numpy.polynomial.chebyshev.chebadd": {
     "line number": [
      71
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.trim": {
     "line number": [
      72,
      72
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      72
     ]
    },
    "numpy.zeros": {
     "line number": [
      68
     ]
    },
    "range": {
     "line number": [
      65,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebdiv": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebadd": {
     "line number": [
      108,
      110
     ]
    },
    "numpy.polynomial.chebyshev.chebdiv": {
     "line number": [
      109
     ]
    },
    "numpy.polynomial.chebyshev.chebmul": {
     "line number": [
      110
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.trim": {
     "line number": [
      111,
      111
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      111
     ]
    },
    "range": {
     "line number": [
      103,
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebmul": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      98
     ]
    },
    "numpy.polynomial.chebyshev.chebmul": {
     "line number": [
      99
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.trim": {
     "line number": [
      100,
      100
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      100
     ]
    },
    "numpy.zeros": {
     "line number": [
      96
     ]
    },
    "range": {
     "line number": [
      93,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebmulx": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebmulx": {
     "line number": [
      85,
      86,
      90
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      85,
      86,
      90
     ]
    },
    "range": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebsub": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "max": {
     "line number": [
      78
     ]
    },
    "numpy.polynomial.chebyshev.chebsub": {
     "line number": [
      81
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.trim": {
     "line number": [
      82,
      82
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      82
     ]
    },
    "numpy.zeros": {
     "line number": [
      78
     ]
    },
    "range": {
     "line number": [
      75,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebcompanion": {
     "line number": [
      453
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      453
     ]
    },
    "range": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebcompanion": {
     "line number": [
      456
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion.test_raises": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      447,
      448
     ]
    },
    "numpy.polynomial.chebyshev.chebcompanion": {
     "line number": [
      447,
      448
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      447,
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebdomain": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebdomain": {
     "line number": [
      50
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebone": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebone": {
     "line number": [
      56
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebx": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebx": {
     "line number": [
      59
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebzero": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebzero": {
     "line number": [
      53
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestDerivative": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestDerivative.test_chebder": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      312,
      313
     ]
    },
    "numpy.polynomial.chebyshev.chebder": {
     "line number": [
      312,
      313,
      318,
      325,
      332
     ]
    },
    "numpy.polynomial.chebyshev.chebint": {
     "line number": [
      325,
      332
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.trim": {
     "line number": [
      319,
      319,
      326,
      326,
      333,
      333
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      326,
      333
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      319
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      312,
      313
     ]
    },
    "range": {
     "line number": [
      316,
      322,
      323,
      329,
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestDerivative.test_chebder_axis": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebder": {
     "line number": [
      339,
      340,
      343,
      344
     ]
    },
    "numpy.random.random": {
     "line number": [
      337
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      341,
      345
     ]
    },
    "numpy.vstack": {
     "line number": [
      339,
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      116
     ]
    },
    "numpy.einsum": {
     "line number": [
      117,
      118
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      122
     ]
    },
    "numpy.random.random": {
     "line number": [
      121
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebgrid2d": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      185
     ]
    },
    "numpy.ones": {
     "line number": [
      190
     ]
    },
    "numpy.polynomial.chebyshev.chebgrid2d": {
     "line number": [
      186,
      191
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      192
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebgrid3d": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      199
     ]
    },
    "numpy.ones": {
     "line number": [
      204
     ]
    },
    "numpy.polynomial.chebyshev.chebgrid3d": {
     "line number": [
      200,
      205
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      206
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebval": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      130
     ]
    },
    "numpy.polynomial.chebyshev.chebval": {
     "line number": [
      127,
      135,
      142,
      143,
      144
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      131
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.Tlist": {
     "line number": [
      131
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      136
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      127,
      142,
      143,
      144
     ]
    },
    "numpy.zeros": {
     "line number": [
      141
     ]
    },
    "range": {
     "line number": [
      132,
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebval2d": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      151
     ]
    },
    "numpy.ones": {
     "line number": [
      159
     ]
    },
    "numpy.polynomial.chebyshev.chebval2d": {
     "line number": [
      151,
      155,
      160
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      161
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      156
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebval3d": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      168
     ]
    },
    "numpy.ones": {
     "line number": [
      176
     ]
    },
    "numpy.polynomial.chebyshev.chebval3d": {
     "line number": [
      168,
      172,
      177
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      178
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      173
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting.test_chebfit": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      406,
      407,
      408,
      409,
      410,
      411,
      412
     ]
    },
    "ValueError": {
     "line number": [
      405
     ]
    },
    "f": {
     "line number": [
      416
     ]
    },
    "len": {
     "line number": [
      419,
      423
     ]
    },
    "numpy.array": {
     "line number": [
      426,
      427,
      436,
      437
     ]
    },
    "numpy.linspace": {
     "line number": [
      415
     ]
    },
    "numpy.polynomial.chebyshev.chebfit": {
     "line number": [
      405,
      406,
      407,
      408,
      409,
      410,
      411,
      412,
      418,
      422,
      426,
      433,
      436,
      441
     ]
    },
    "numpy.polynomial.chebyshev.chebval": {
     "line number": [
      420,
      424
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      420,
      424,
      427,
      434,
      437,
      441
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      419,
      423
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      405,
      406,
      407,
      408,
      409,
      410,
      411,
      412
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting.test_chebfit.f": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestGauss": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      459
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestGauss.test_100": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      468
     ]
    },
    "numpy.eye": {
     "line number": [
      471
     ]
    },
    "numpy.pi": {
     "line number": [
      474
     ]
    },
    "numpy.polynomial.chebyshev.chebgauss": {
     "line number": [
      462
     ]
    },
    "numpy.polynomial.chebyshev.chebvander": {
     "line number": [
      467
     ]
    },
    "numpy.sqrt": {
     "line number": [
      469
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      471,
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestIntegral": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestIntegral.test_chebint": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      213,
      214,
      215
     ]
    },
    "list": {
     "line number": [
      268,
      278,
      288
     ]
    },
    "numpy.polynomial.chebyshev.cheb2poly": {
     "line number": [
      230,
      248
     ]
    },
    "numpy.polynomial.chebyshev.chebint": {
     "line number": [
      213,
      214,
      215,
      220,
      229,
      238,
      247,
      257,
      258,
      267,
      268,
      277,
      278,
      287,
      288
     ]
    },
    "numpy.polynomial.chebyshev.chebval": {
     "line number": [
      239
     ]
    },
    "numpy.polynomial.chebyshev.poly2cheb": {
     "line number": [
      228,
      237,
      246
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.trim": {
     "line number": [
      231,
      231,
      249,
      249,
      259,
      259,
      269,
      269,
      279,
      279,
      289,
      289
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      221,
      231,
      239,
      249,
      259,
      269,
      279,
      289
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      213,
      214,
      215
     ]
    },
    "range": {
     "line number": [
      218,
      224,
      234,
      242,
      252,
      253,
      256,
      262,
      263,
      266,
      268,
      272,
      273,
      276,
      278,
      282,
      283,
      286,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestIntegral.test_chebint_axis": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebint": {
     "line number": [
      295,
      296,
      299,
      300,
      303,
      304
     ]
    },
    "numpy.random.random": {
     "line number": [
      293
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      297,
      301,
      305
     ]
    },
    "numpy.vstack": {
     "line number": [
      295,
      299,
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_cheb2poly": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.cheb2poly": {
     "line number": [
      513
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.Tlist": {
     "line number": [
      513
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      513
     ]
    },
    "range": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebfromroots": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      484
     ]
    },
    "numpy.linspace": {
     "line number": [
      484
     ]
    },
    "numpy.pi": {
     "line number": [
      484
     ]
    },
    "numpy.polynomial.chebyshev.chebfromroots": {
     "line number": [
      481,
      486
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.trim": {
     "line number": [
      482,
      487,
      487
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      482,
      487
     ]
    },
    "range": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebline": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebline": {
     "line number": [
      509
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebpts1": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      527,
      528
     ]
    },
    "numpy.polynomial.chebyshev.chebpts1": {
     "line number": [
      527,
      528,
      532,
      534,
      536,
      538
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      532,
      534,
      536,
      538
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      527,
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebpts2": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      543,
      544
     ]
    },
    "numpy.polynomial.chebyshev.chebpts2": {
     "line number": [
      543,
      544,
      548,
      550,
      552,
      554
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      548,
      550,
      552,
      554
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      543,
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebroots": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      493
     ]
    },
    "numpy.polynomial.chebyshev.chebfromroots": {
     "line number": [
      494
     ]
    },
    "numpy.polynomial.chebyshev.chebroots": {
     "line number": [
      490,
      491,
      494
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.trim": {
     "line number": [
      495,
      495
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      490,
      491,
      495
     ]
    },
    "range": {
     "line number": [
      492
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebtrim": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      501
     ]
    },
    "numpy.polynomial.chebyshev.chebtrim": {
     "line number": [
      501,
      504,
      505,
      506
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      504,
      505,
      506
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_poly2cheb": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.poly2cheb": {
     "line number": [
      517
     ]
    },
    "numpy.polynomial.tests.test_chebyshev.Tlist": {
     "line number": [
      517
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      517
     ]
    },
    "range": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_weight": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      520
     ]
    },
    "numpy.polynomial.chebyshev.chebweight": {
     "line number": [
      522
     ]
    },
    "numpy.sqrt": {
     "line number": [
      521,
      521
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      523
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate.test__cseries_to_zseries": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      34,
      35
     ]
    },
    "numpy.double": {
     "line number": [
      34,
      35
     ]
    },
    "numpy.polynomial.chebyshev._cseries_to_zseries": {
     "line number": [
      36
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      37
     ]
    },
    "range": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate.test__zseries_to_cseries": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      41,
      42
     ]
    },
    "numpy.double": {
     "line number": [
      41,
      42
     ]
    },
    "numpy.polynomial.chebyshev._zseries_to_cseries": {
     "line number": [
      43
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      44
     ]
    },
    "range": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      350
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander.test_chebvander": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      355
     ]
    },
    "numpy.array": {
     "line number": [
      363
     ]
    },
    "numpy.polynomial.chebyshev.chebval": {
     "line number": [
      360,
      368
     ]
    },
    "numpy.polynomial.chebyshev.chebvander": {
     "line number": [
      356,
      364
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      357,
      365
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      360,
      368
     ]
    },
    "range": {
     "line number": [
      358,
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander.test_chebvander2d": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      376
     ]
    },
    "numpy.polynomial.chebyshev.chebval2d": {
     "line number": [
      375
     ]
    },
    "numpy.polynomial.chebyshev.chebvander2d": {
     "line number": [
      374,
      380
     ]
    },
    "numpy.random.random": {
     "line number": [
      373
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      381
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander.test_chebvander3d": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      390
     ]
    },
    "numpy.polynomial.chebyshev.chebval3d": {
     "line number": [
      389
     ]
    },
    "numpy.polynomial.chebyshev.chebvander3d": {
     "line number": [
      388,
      394
     ]
    },
    "numpy.random.random": {
     "line number": [
      387
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      395
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.Tlist": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.cheb": {
  "data": {
   "shadows": "numpy.polynomial.chebyshev"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.trim": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.polynomial.chebyshev.chebtrim": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      523
     ]
    },
    "numpy.polynomial.Chebyshev": {
     "line number": [
      19
     ]
    },
    "numpy.polynomial.Hermite": {
     "line number": [
      20
     ]
    },
    "numpy.polynomial.HermiteE": {
     "line number": [
      20
     ]
    },
    "numpy.polynomial.Laguerre": {
     "line number": [
      19
     ]
    },
    "numpy.polynomial.Legendre": {
     "line number": [
      19
     ]
    },
    "numpy.polynomial.Polynomial": {
     "line number": [
      19
     ]
    },
    "numpy.random.random": {
     "line number": [
      60
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_classes.Chebyshev": {
  "data": {
   "shadows": "numpy.polynomial.Chebyshev"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.Hermite": {
  "data": {
   "shadows": "numpy.polynomial.Hermite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.HermiteE": {
  "data": {
   "shadows": "numpy.polynomial.HermiteE"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.KnownFailure": {
  "data": {
   "shadows": "numpy.testing.noseclasses.KnownFailure"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.Laguerre": {
  "data": {
   "shadows": "numpy.polynomial.Laguerre"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.Legendre": {
  "data": {
   "shadows": "numpy.polynomial.Legendre"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.Polynomial": {
  "data": {
   "shadows": "numpy.polynomial.Polynomial"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      67,
      69
     ]
    },
    "numpy.all": {
     "line number": [
      64,
      65
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      64,
      65
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.check_add": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      215,
      216,
      225,
      226,
      227
     ]
    },
    "Poly.domain": {
     "line number": [
      225
     ]
    },
    "Poly.window": {
     "line number": [
      226
     ]
    },
    "TypeError": {
     "line number": [
      225,
      226,
      228,
      230
     ]
    },
    "list": {
     "line number": [
      213,
      214
     ]
    },
    "numpy.array": {
     "line number": [
      223,
      224
     ]
    },
    "numpy.polynomial.Chebyshev": {
     "line number": [
      228
     ]
    },
    "numpy.polynomial.Polynomial": {
     "line number": [
      227,
      230
     ]
    },
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
     "line number": [
      218,
      219,
      220,
      221,
      222,
      223,
      224
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      213,
      214
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      225,
      226,
      228,
      230
     ]
    },
    "p1": {
     "line number": [
      215,
      217,
      218,
      219,
      220,
      221,
      222,
      223,
      224
     ]
    },
    "p1.__add__": {
     "line number": [
      225,
      226,
      228,
      230
     ]
    },
    "p2": {
     "line number": [
      216,
      217,
      218
     ]
    },
    "tuple": {
     "line number": [
      221,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_basis": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      127,
      128
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      130,
      131,
      132
     ]
    },
    "p": {
     "line number": [
      129
     ]
    },
    "p.coef": {
     "line number": [
      132
     ]
    },
    "p.domain": {
     "line number": [
      130
     ]
    },
    "p.window": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_call": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "P": {
     "line number": [
      472,
      477
     ]
    },
    "Poly.cast": {
     "line number": [
      477
     ]
    },
    "Poly.domain": {
     "line number": [
      473
     ]
    },
    "numpy.linspace": {
     "line number": [
      474
     ]
    },
    "numpy.polynomial.Polynomial": {
     "line number": [
      472
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      480
     ]
    },
    "p": {
     "line number": [
      477,
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_cast": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "Poly1": {
     "line number": [
      100
     ]
    },
    "Poly1.domain": {
     "line number": [
      98
     ]
    },
    "Poly1.window": {
     "line number": [
      99
     ]
    },
    "numpy.linspace": {
     "line number": [
      95
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      96,
      98,
      99,
      102,
      103
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      106,
      107,
      108
     ]
    },
    "p1": {
     "line number": [
      100,
      104,
      108
     ]
    },
    "p2": {
     "line number": [
      104,
      108
     ]
    },
    "p2.domain": {
     "line number": [
      106
     ]
    },
    "p2.window": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_conversion": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "Poly1": {
     "line number": [
      83
     ]
    },
    "numpy.linspace": {
     "line number": [
      78
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      79,
      81,
      82,
      85,
      86
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      89,
      90,
      91
     ]
    },
    "p1": {
     "line number": [
      91
     ]
    },
    "p2": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_copy": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "Poly.basis": {
     "line number": [
      391
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      393,
      394,
      395,
      396,
      397
     ]
    },
    "p1": {
     "line number": [
      391,
      393,
      394
     ]
    },
    "p1.coef": {
     "line number": [
      395
     ]
    },
    "p1.copy": {
     "line number": [
      392
     ]
    },
    "p1.domain": {
     "line number": [
      396
     ]
    },
    "p1.window": {
     "line number": [
      397
     ]
    },
    "p2": {
     "line number": [
      392,
      393,
      394
     ]
    },
    "p2.coef": {
     "line number": [
      395
     ]
    },
    "p2.domain": {
     "line number": [
      396
     ]
    },
    "p2.window": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_cutdeg": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      484
     ]
    },
    "ValueError": {
     "line number": [
      485,
      486
     ]
    },
    "len": {
     "line number": [
      487,
      488,
      489,
      490
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      487,
      488,
      489,
      490
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      485,
      486
     ]
    },
    "p": {
     "line number": [
      484
     ]
    },
    "p.cutdeg": {
     "line number": [
      485,
      486,
      487,
      488,
      489,
      490
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_degree": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "Poly.basis": {
     "line number": [
      386
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      387
     ]
    },
    "p": {
     "line number": [
      386
     ]
    },
    "p.degree": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_deriv": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      434
     ]
    },
    "Poly.domain": {
     "line number": [
      432
     ]
    },
    "Poly.window": {
     "line number": [
      433
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      432,
      433
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      437,
      438
     ]
    },
    "p1": {
     "line number": [
      434
     ]
    },
    "p1.coef": {
     "line number": [
      438
     ]
    },
    "p1.integ": {
     "line number": [
      435,
      436
     ]
    },
    "p2": {
     "line number": [
      435
     ]
    },
    "p2.deriv": {
     "line number": [
      437,
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_divmod": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      337,
      338,
      339,
      365,
      367,
      368,
      369,
      370,
      371
     ]
    },
    "Poly.domain": {
     "line number": [
      369
     ]
    },
    "Poly.window": {
     "line number": [
      370
     ]
    },
    "TypeError": {
     "line number": [
      369,
      370,
      372,
      374
     ]
    },
    "divmod": {
     "line number": [
      342,
      345,
      348,
      351,
      354,
      357,
      360,
      363,
      366,
      369,
      370,
      372,
      374
     ]
    },
    "list": {
     "line number": [
      334,
      335,
      336,
      341
     ]
    },
    "numpy.array": {
     "line number": [
      357,
      360
     ]
    },
    "numpy.polynomial.Chebyshev": {
     "line number": [
      372
     ]
    },
    "numpy.polynomial.Polynomial": {
     "line number": [
      371,
      374
     ]
    },
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
     "line number": [
      343,
      344,
      346,
      347,
      349,
      350,
      352,
      353,
      355,
      356,
      358,
      359,
      361,
      362,
      364,
      365,
      367,
      368
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      334,
      335,
      336
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      369,
      370,
      372,
      374
     ]
    },
    "p1": {
     "line number": [
      337,
      340,
      343,
      346,
      349,
      352,
      355,
      358,
      361,
      369,
      370,
      372,
      374
     ]
    },
    "p2": {
     "line number": [
      338,
      340,
      342,
      348,
      354,
      360,
      363,
      364,
      366
     ]
    },
    "tuple": {
     "line number": [
      351,
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_equal": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      190,
      191,
      192,
      193
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      194,
      195,
      196,
      197
     ]
    },
    "p1": {
     "line number": [
      190,
      194,
      194,
      195,
      196,
      197
     ]
    },
    "p2": {
     "line number": [
      191,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_fit": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "f": {
     "line number": [
      159
     ]
    },
    "numpy.linspace": {
     "line number": [
      158
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      168,
      169,
      182
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      163,
      164,
      171,
      172,
      173,
      186
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      165,
      177,
      178
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      181
     ]
    },
    "p": {
     "line number": [
      162,
      164,
      170,
      171,
      176
     ]
    },
    "p.degree": {
     "line number": [
      165
     ]
    },
    "p.domain": {
     "line number": [
      163,
      172,
      177
     ]
    },
    "p.window": {
     "line number": [
      173,
      178
     ]
    },
    "p1": {
     "line number": [
      184,
      186
     ]
    },
    "p2": {
     "line number": [
      185,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_fit.f": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_floordiv": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      283,
      284,
      285,
      295,
      297,
      298,
      299
     ]
    },
    "Poly.domain": {
     "line number": [
      297
     ]
    },
    "Poly.window": {
     "line number": [
      298
     ]
    },
    "TypeError": {
     "line number": [
      297,
      298,
      300,
      302
     ]
    },
    "list": {
     "line number": [
      280,
      281,
      282,
      287
     ]
    },
    "numpy.array": {
     "line number": [
      293,
      294
     ]
    },
    "numpy.polynomial.Chebyshev": {
     "line number": [
      300
     ]
    },
    "numpy.polynomial.Polynomial": {
     "line number": [
      299,
      302
     ]
    },
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
     "line number": [
      288,
      289,
      290,
      291,
      292,
      293,
      294,
      295,
      296
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      280,
      281,
      282
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      297,
      298,
      300,
      302
     ]
    },
    "p1": {
     "line number": [
      283,
      286,
      288,
      289,
      290,
      291,
      292,
      293,
      294
     ]
    },
    "p1.__floordiv__": {
     "line number": [
      297,
      298,
      300,
      302
     ]
    },
    "p2": {
     "line number": [
      284,
      286,
      288,
      290,
      292,
      294,
      295,
      296,
      296
     ]
    },
    "tuple": {
     "line number": [
      291,
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_fromroots": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "len": {
     "line number": [
      142
     ]
    },
    "numpy.polynomial.Polynomial.cast": {
     "line number": [
      150
     ]
    },
    "numpy.polynomial.Polynomial.domain": {
     "line number": [
      148
     ]
    },
    "numpy.polynomial.Polynomial.window": {
     "line number": [
      149
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      138,
      139,
      140
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      145,
      151
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      142,
      143,
      144
     ]
    },
    "p1": {
     "line number": [
      141,
      145,
      150
     ]
    },
    "p1.degree": {
     "line number": [
      142
     ]
    },
    "p1.domain": {
     "line number": [
      143
     ]
    },
    "p1.window": {
     "line number": [
      144
     ]
    },
    "p2": {
     "line number": [
      150
     ]
    },
    "p2.coef": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_identity": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      119
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      117,
      118
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      123
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      121,
      122
     ]
    },
    "p": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_integ": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "P": {
     "line number": [
      403,
      406,
      407,
      409,
      412,
      413,
      415,
      418,
      419,
      422,
      425,
      426
     ]
    },
    "P.cast": {
     "line number": [
      404,
      405,
      410,
      411,
      416,
      417,
      423,
      424
     ]
    },
    "Poly.cast": {
     "line number": [
      403,
      409,
      415,
      422
     ]
    },
    "Poly.domain": {
     "line number": [
      421
     ]
    },
    "numpy.polynomial.Polynomial": {
     "line number": [
      401
     ]
    },
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
     "line number": [
      406,
      407,
      412,
      413,
      418,
      419,
      425,
      426
     ]
    },
    "p1": {
     "line number": [
      404,
      406,
      410,
      412,
      416,
      418,
      423,
      425
     ]
    },
    "p2": {
     "line number": [
      405,
      407,
      411,
      413,
      417,
      419,
      424,
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_linspace": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      444
     ]
    },
    "Poly.domain": {
     "line number": [
      442
     ]
    },
    "Poly.window": {
     "line number": [
      443
     ]
    },
    "numpy.linspace": {
     "line number": [
      446,
      452
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      442,
      443
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      449,
      450,
      455,
      456
     ]
    },
    "p": {
     "line number": [
      444,
      447,
      453
     ]
    },
    "p.linspace": {
     "line number": [
      448,
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_mapparms": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      515,
      519
     ]
    },
    "Poly.domain": {
     "line number": [
      513
     ]
    },
    "Poly.window": {
     "line number": [
      514
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      516,
      520
     ]
    },
    "p": {
     "line number": [
      515,
      519
     ]
    },
    "p.mapparms": {
     "line number": [
      516,
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_mod": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      310,
      311,
      312,
      322,
      323,
      324,
      325,
      326
     ]
    },
    "Poly.domain": {
     "line number": [
      324
     ]
    },
    "Poly.window": {
     "line number": [
      325
     ]
    },
    "TypeError": {
     "line number": [
      324,
      325,
      327,
      329
     ]
    },
    "list": {
     "line number": [
      307,
      308,
      309,
      314
     ]
    },
    "numpy.array": {
     "line number": [
      320,
      321
     ]
    },
    "numpy.polynomial.Chebyshev": {
     "line number": [
      327
     ]
    },
    "numpy.polynomial.Polynomial": {
     "line number": [
      326,
      329
     ]
    },
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
     "line number": [
      315,
      316,
      317,
      318,
      319,
      320,
      321,
      322,
      323
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      307,
      308,
      309
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      324,
      325,
      327,
      329
     ]
    },
    "p1": {
     "line number": [
      310,
      313
     ]
    },
    "p1.__mod__": {
     "line number": [
      324,
      325,
      327,
      329
     ]
    },
    "p2": {
     "line number": [
      311,
      313,
      315,
      317,
      319,
      321,
      322,
      323
     ]
    },
    "tuple": {
     "line number": [
      318,
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_mul": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      259,
      260,
      269,
      270,
      271,
      272,
      273
     ]
    },
    "Poly.domain": {
     "line number": [
      271
     ]
    },
    "Poly.window": {
     "line number": [
      272
     ]
    },
    "TypeError": {
     "line number": [
      271,
      272,
      274,
      276
     ]
    },
    "list": {
     "line number": [
      257,
      258
     ]
    },
    "numpy.array": {
     "line number": [
      267,
      268
     ]
    },
    "numpy.polynomial.Chebyshev": {
     "line number": [
      274
     ]
    },
    "numpy.polynomial.Polynomial": {
     "line number": [
      273,
      276
     ]
    },
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
     "line number": [
      262,
      263,
      264,
      265,
      266,
      267,
      268,
      269,
      270
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      257,
      258
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      271,
      272,
      274,
      276
     ]
    },
    "p1": {
     "line number": [
      259,
      261,
      262,
      263,
      264,
      265,
      266,
      267,
      268,
      269,
      269,
      270,
      270
     ]
    },
    "p1.__mul__": {
     "line number": [
      271,
      272,
      274,
      276
     ]
    },
    "p2": {
     "line number": [
      260,
      261,
      262
     ]
    },
    "tuple": {
     "line number": [
      265,
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_not_equal": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      201,
      202,
      203,
      204
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      205,
      206,
      207,
      208
     ]
    },
    "p1": {
     "line number": [
      201,
      205,
      205,
      206,
      207,
      208
     ]
    },
    "p2": {
     "line number": [
      202,
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_pow": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      462,
      463
     ]
    },
    "Poly.domain": {
     "line number": [
      460
     ]
    },
    "Poly.window": {
     "line number": [
      461
     ]
    },
    "ValueError": {
     "line number": [
      467,
      468
     ]
    },
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
     "line number": [
      465
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      460,
      461
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      467,
      468
     ]
    },
    "range": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_roots": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "Poly.domain": {
     "line number": [
      378
     ]
    },
    "Poly.fromroots": {
     "line number": [
      381
     ]
    },
    "Poly.window": {
     "line number": [
      379
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      378,
      379,
      380
     ]
    },
    "numpy.sort": {
     "line number": [
      380,
      381
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_sub": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      238,
      239,
      248,
      249,
      250
     ]
    },
    "Poly.domain": {
     "line number": [
      248
     ]
    },
    "Poly.window": {
     "line number": [
      249
     ]
    },
    "TypeError": {
     "line number": [
      248,
      249,
      251,
      253
     ]
    },
    "list": {
     "line number": [
      236,
      237
     ]
    },
    "numpy.array": {
     "line number": [
      246,
      247
     ]
    },
    "numpy.polynomial.Chebyshev": {
     "line number": [
      251
     ]
    },
    "numpy.polynomial.Polynomial": {
     "line number": [
      250,
      253
     ]
    },
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
     "line number": [
      241,
      242,
      243,
      244,
      245,
      246,
      247
     ]
    },
    "numpy.polynomial.tests.test_classes.random": {
     "line number": [
      236,
      237
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      248,
      249,
      251,
      253
     ]
    },
    "p1": {
     "line number": [
      238,
      240,
      241,
      242,
      243,
      244,
      245,
      246,
      247
     ]
    },
    "p1.__sub__": {
     "line number": [
      248,
      249,
      251,
      253
     ]
    },
    "p2": {
     "line number": [
      239,
      240,
      241
     ]
    },
    "tuple": {
     "line number": [
      244,
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_trim": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      505
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      506,
      507,
      508
     ]
    },
    "p": {
     "line number": [
      505
     ]
    },
    "p.trim": {
     "line number": [
      506,
      507,
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_truncate": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "Poly": {
     "line number": [
      494
     ]
    },
    "ValueError": {
     "line number": [
      495,
      496
     ]
    },
    "len": {
     "line number": [
      497,
      498,
      499,
      500
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      497,
      498,
      499,
      500
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      495,
      496
     ]
    },
    "p": {
     "line number": [
      494
     ]
    },
    "p.truncate": {
     "line number": [
      495,
      496,
      497,
      498,
      499,
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.classes": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_classes.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.random": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_classes.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.test_class_methods": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "numpy.polynomial.tests.test_classes.classes": {
     "line number": [
      24,
      25,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      519
     ]
    },
    "numpy.array": {
     "line number": [
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22
     ]
    },
    "numpy.polynomial.tests.test_hermite.H0": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_hermite.H1": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_hermite.H2": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_hermite.H3": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_hermite.H4": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_hermite.H5": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_hermite.H6": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_hermite.H7": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_hermite.H8": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_hermite.H9": {
     "line number": [
      24
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_hermite.H0": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H1": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H2": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H3": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H4": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H5": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H6": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H7": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H8": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H9": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.Hlist": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      47
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermadd": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "max": {
     "line number": [
      53
     ]
    },
    "numpy.polynomial.hermite.hermadd": {
     "line number": [
      56
     ]
    },
    "numpy.polynomial.tests.test_hermite.trim": {
     "line number": [
      57,
      57
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      57
     ]
    },
    "numpy.zeros": {
     "line number": [
      53
     ]
    },
    "range": {
     "line number": [
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermdiv": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermadd": {
     "line number": [
      97,
      99
     ]
    },
    "numpy.polynomial.hermite.hermdiv": {
     "line number": [
      98
     ]
    },
    "numpy.polynomial.hermite.hermmul": {
     "line number": [
      99
     ]
    },
    "numpy.polynomial.tests.test_hermite.trim": {
     "line number": [
      100,
      100
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      100
     ]
    },
    "range": {
     "line number": [
      92,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermmul": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "len": {
     "line number": [
      88
     ]
    },
    "numpy.polynomial.hermite.hermmul": {
     "line number": [
      86
     ]
    },
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      81,
      85,
      87
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      88
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      89
     ]
    },
    "range": {
     "line number": [
      79,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermmulx": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermmulx": {
     "line number": [
      70,
      71,
      75
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      70,
      71,
      75
     ]
    },
    "range": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermsub": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "max": {
     "line number": [
      63
     ]
    },
    "numpy.polynomial.hermite.hermsub": {
     "line number": [
      66
     ]
    },
    "numpy.polynomial.tests.test_hermite.trim": {
     "line number": [
      67,
      67
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      67
     ]
    },
    "numpy.zeros": {
     "line number": [
      63
     ]
    },
    "range": {
     "line number": [
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      434
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermcompanion": {
     "line number": [
      443
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      443
     ]
    },
    "range": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermcompanion": {
     "line number": [
      446
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion.test_raises": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      437,
      438
     ]
    },
    "numpy.polynomial.hermite.hermcompanion": {
     "line number": [
      437,
      438
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      437,
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermdomain": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermdomain": {
     "line number": [
      34
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermone": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermone": {
     "line number": [
      40
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermx": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermx": {
     "line number": [
      43
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermzero": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermzero": {
     "line number": [
      37
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestDerivative": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestDerivative.test_hermder": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      302,
      303
     ]
    },
    "numpy.polynomial.hermite.hermder": {
     "line number": [
      302,
      303,
      308,
      315,
      322
     ]
    },
    "numpy.polynomial.hermite.hermint": {
     "line number": [
      315,
      322
     ]
    },
    "numpy.polynomial.tests.test_hermite.trim": {
     "line number": [
      309,
      309,
      316,
      316,
      323,
      323
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      316,
      323
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      309
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      302,
      303
     ]
    },
    "range": {
     "line number": [
      306,
      312,
      313,
      319,
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestDerivative.test_hermder_axis": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermder": {
     "line number": [
      329,
      330,
      333,
      334
     ]
    },
    "numpy.random.random": {
     "line number": [
      327
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      331,
      335
     ]
    },
    "numpy.vstack": {
     "line number": [
      329,
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      105
     ]
    },
    "numpy.einsum": {
     "line number": [
      106,
      107
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      111
     ]
    },
    "numpy.random.random": {
     "line number": [
      110
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermgrid2d": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      175
     ]
    },
    "numpy.ones": {
     "line number": [
      180
     ]
    },
    "numpy.polynomial.hermite.hermgrid2d": {
     "line number": [
      176,
      181
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      182
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermgrid3d": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      189
     ]
    },
    "numpy.ones": {
     "line number": [
      194
     ]
    },
    "numpy.polynomial.hermite.hermgrid3d": {
     "line number": [
      190,
      195
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      196
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermval": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      119
     ]
    },
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      116,
      125,
      132,
      133,
      134
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      120
     ]
    },
    "numpy.polynomial.tests.test_hermite.Hlist": {
     "line number": [
      120
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      126
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      116,
      132,
      133,
      134
     ]
    },
    "numpy.zeros": {
     "line number": [
      123,
      131
     ]
    },
    "range": {
     "line number": [
      121,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermval2d": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      141
     ]
    },
    "numpy.ones": {
     "line number": [
      149
     ]
    },
    "numpy.polynomial.hermite.hermval2d": {
     "line number": [
      141,
      145,
      150
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      151
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      146
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermval3d": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      158
     ]
    },
    "numpy.ones": {
     "line number": [
      166
     ]
    },
    "numpy.polynomial.hermite.hermval3d": {
     "line number": [
      158,
      162,
      167
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      168
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      163
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting.test_hermfit": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      396,
      397,
      398,
      399,
      400,
      401,
      402
     ]
    },
    "ValueError": {
     "line number": [
      395
     ]
    },
    "f": {
     "line number": [
      406
     ]
    },
    "len": {
     "line number": [
      409,
      413
     ]
    },
    "numpy.array": {
     "line number": [
      416,
      417,
      426,
      427
     ]
    },
    "numpy.linspace": {
     "line number": [
      405
     ]
    },
    "numpy.polynomial.hermite.hermfit": {
     "line number": [
      395,
      396,
      397,
      398,
      399,
      400,
      401,
      402,
      408,
      412,
      416,
      423,
      426,
      431
     ]
    },
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      410,
      414
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      410,
      414,
      417,
      424,
      427,
      431
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      409,
      413
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      395,
      396,
      397,
      398,
      399,
      400,
      401,
      402
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting.test_hermfit.f": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestGauss": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestGauss.test_100": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      458
     ]
    },
    "numpy.eye": {
     "line number": [
      461
     ]
    },
    "numpy.pi": {
     "line number": [
      464
     ]
    },
    "numpy.polynomial.hermite.hermgauss": {
     "line number": [
      452
     ]
    },
    "numpy.polynomial.hermite.hermvander": {
     "line number": [
      457
     ]
    },
    "numpy.sqrt": {
     "line number": [
      459,
      464
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      461,
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestIntegral": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestIntegral.test_hermint": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      203,
      204,
      205
     ]
    },
    "list": {
     "line number": [
      258,
      268,
      278
     ]
    },
    "numpy.polynomial.hermite.herm2poly": {
     "line number": [
      220,
      238
     ]
    },
    "numpy.polynomial.hermite.hermint": {
     "line number": [
      203,
      204,
      205,
      210,
      219,
      228,
      237,
      247,
      248,
      257,
      258,
      267,
      268,
      277,
      278
     ]
    },
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      229
     ]
    },
    "numpy.polynomial.hermite.poly2herm": {
     "line number": [
      218,
      227,
      236
     ]
    },
    "numpy.polynomial.tests.test_hermite.trim": {
     "line number": [
      221,
      221,
      239,
      239,
      249,
      249,
      259,
      259,
      269,
      269,
      279,
      279
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      211,
      221,
      229,
      239,
      249,
      259,
      269,
      279
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      203,
      204,
      205
     ]
    },
    "range": {
     "line number": [
      208,
      214,
      224,
      232,
      242,
      243,
      246,
      252,
      253,
      256,
      258,
      262,
      263,
      266,
      268,
      272,
      273,
      276,
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestIntegral.test_hermint_axis": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermint": {
     "line number": [
      285,
      286,
      289,
      290,
      293,
      294
     ]
    },
    "numpy.random.random": {
     "line number": [
      283
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      287,
      291,
      295
     ]
    },
    "numpy.vstack": {
     "line number": [
      285,
      289,
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_herm2poly": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.herm2poly": {
     "line number": [
      506
     ]
    },
    "numpy.polynomial.tests.test_hermite.Hlist": {
     "line number": [
      506
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      506
     ]
    },
    "range": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermfromroots": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "len": {
     "line number": [
      478
     ]
    },
    "numpy.cos": {
     "line number": [
      474
     ]
    },
    "numpy.linspace": {
     "line number": [
      474
     ]
    },
    "numpy.pi": {
     "line number": [
      474
     ]
    },
    "numpy.polynomial.hermite.herm2poly": {
     "line number": [
      479
     ]
    },
    "numpy.polynomial.hermite.hermfromroots": {
     "line number": [
      471,
      475
     ]
    },
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      476
     ]
    },
    "numpy.polynomial.tests.test_hermite.trim": {
     "line number": [
      472
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      478
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      472,
      479,
      480
     ]
    },
    "range": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermline": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermline": {
     "line number": [
      502
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermroots": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      486
     ]
    },
    "numpy.polynomial.hermite.hermfromroots": {
     "line number": [
      487
     ]
    },
    "numpy.polynomial.hermite.hermroots": {
     "line number": [
      483,
      484,
      487
     ]
    },
    "numpy.polynomial.tests.test_hermite.trim": {
     "line number": [
      488,
      488
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      483,
      484,
      488
     ]
    },
    "range": {
     "line number": [
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermtrim": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      494
     ]
    },
    "numpy.polynomial.hermite.hermtrim": {
     "line number": [
      494,
      497,
      498,
      499
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      497,
      498,
      499
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_poly2herm": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.poly2herm": {
     "line number": [
      510
     ]
    },
    "numpy.polynomial.tests.test_hermite.Hlist": {
     "line number": [
      510
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      510
     ]
    },
    "range": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_weight": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      514
     ]
    },
    "numpy.linspace": {
     "line number": [
      513
     ]
    },
    "numpy.polynomial.hermite.hermweight": {
     "line number": [
      515
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestVander": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      340
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestVander.test_hermvander": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      345
     ]
    },
    "numpy.array": {
     "line number": [
      353
     ]
    },
    "numpy.polynomial.hermite.hermval": {
     "line number": [
      350,
      358
     ]
    },
    "numpy.polynomial.hermite.hermvander": {
     "line number": [
      346,
      354
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      347,
      355
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      350,
      358
     ]
    },
    "range": {
     "line number": [
      348,
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestVander.test_hermvander2d": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      366
     ]
    },
    "numpy.polynomial.hermite.hermval2d": {
     "line number": [
      365
     ]
    },
    "numpy.polynomial.hermite.hermvander2d": {
     "line number": [
      364,
      370
     ]
    },
    "numpy.random.random": {
     "line number": [
      363
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      371
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestVander.test_hermvander3d": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      380
     ]
    },
    "numpy.polynomial.hermite.hermval3d": {
     "line number": [
      379
     ]
    },
    "numpy.polynomial.hermite.hermvander3d": {
     "line number": [
      378,
      384
     ]
    },
    "numpy.random.random": {
     "line number": [
      377
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      385
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.herm": {
  "data": {
   "shadows": "numpy.polynomial.hermite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.trim": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.polynomial.hermite.hermtrim": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      516
     ]
    },
    "numpy.array": {
     "line number": [
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.He0": {
     "line number": [
      22
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.He1": {
     "line number": [
      22
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.He2": {
     "line number": [
      22
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.He3": {
     "line number": [
      22
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.He4": {
     "line number": [
      22
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.He5": {
     "line number": [
      22
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.He6": {
     "line number": [
      22
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.He7": {
     "line number": [
      22
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.He8": {
     "line number": [
      22
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.He9": {
     "line number": [
      22
     ]
    },
    "run_module_suite": {
     "line number": [
      517
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_hermite_e.He0": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He1": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He2": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He3": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He4": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He5": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He6": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He7": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He8": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He9": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.Helist": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermeadd": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      54
     ]
    },
    "max": {
     "line number": [
      50
     ]
    },
    "numpy.polynomial.hermite_e.hermeadd": {
     "line number": [
      53
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.trim": {
     "line number": [
      54,
      54
     ]
    },
    "numpy.zeros": {
     "line number": [
      50
     ]
    },
    "range": {
     "line number": [
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermediv": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      97
     ]
    },
    "numpy.polynomial.hermite_e.hermeadd": {
     "line number": [
      94,
      96
     ]
    },
    "numpy.polynomial.hermite_e.hermediv": {
     "line number": [
      95
     ]
    },
    "numpy.polynomial.hermite_e.hermemul": {
     "line number": [
      96
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.trim": {
     "line number": [
      97,
      97
     ]
    },
    "range": {
     "line number": [
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermemul": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      85
     ]
    },
    "assert_almost_equal": {
     "line number": [
      86
     ]
    },
    "len": {
     "line number": [
      85
     ]
    },
    "numpy.polynomial.hermite_e.hermemul": {
     "line number": [
      83
     ]
    },
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      78,
      82,
      84
     ]
    },
    "range": {
     "line number": [
      76,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermemulx": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      67,
      68,
      72
     ]
    },
    "numpy.polynomial.hermite_e.hermemulx": {
     "line number": [
      67,
      68,
      72
     ]
    },
    "range": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermesub": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      64
     ]
    },
    "max": {
     "line number": [
      60
     ]
    },
    "numpy.polynomial.hermite_e.hermesub": {
     "line number": [
      63
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.trim": {
     "line number": [
      64,
      64
     ]
    },
    "numpy.zeros": {
     "line number": [
      60
     ]
    },
    "range": {
     "line number": [
      57,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion": {
  "data": {
   "lineno": 431
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      440
     ]
    },
    "numpy.polynomial.hermite_e.hermecompanion": {
     "line number": [
      440
     ]
    },
    "range": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      443
     ]
    },
    "numpy.polynomial.hermite_e.hermecompanion": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion.test_raises": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      434,
      435
     ]
    },
    "assert_raises": {
     "line number": [
      434,
      435
     ]
    },
    "numpy.polynomial.hermite_e.hermecompanion": {
     "line number": [
      434,
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermedomain": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      31
     ]
    },
    "numpy.polynomial.hermite_e.hermedomain": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermeone": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      37
     ]
    },
    "numpy.polynomial.hermite_e.hermeone": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermex": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      40
     ]
    },
    "numpy.polynomial.hermite_e.hermex": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermezero": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      34
     ]
    },
    "numpy.polynomial.hermite_e.hermezero": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestDerivative": {
  "data": {
   "lineno": 295
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestDerivative.test_hermeder": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      299,
      300
     ]
    },
    "assert_almost_equal": {
     "line number": [
      313,
      320
     ]
    },
    "assert_equal": {
     "line number": [
      306
     ]
    },
    "assert_raises": {
     "line number": [
      299,
      300
     ]
    },
    "numpy.polynomial.hermite_e.hermeder": {
     "line number": [
      299,
      300,
      305,
      312,
      319
     ]
    },
    "numpy.polynomial.hermite_e.hermeint": {
     "line number": [
      312,
      319
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.trim": {
     "line number": [
      306,
      306,
      313,
      313,
      320,
      320
     ]
    },
    "range": {
     "line number": [
      303,
      309,
      310,
      316,
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestDerivative.test_hermeder_axis": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      328,
      332
     ]
    },
    "numpy.polynomial.hermite_e.hermeder": {
     "line number": [
      326,
      327,
      330,
      331
     ]
    },
    "numpy.random.random": {
     "line number": [
      324
     ]
    },
    "numpy.vstack": {
     "line number": [
      326,
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      102
     ]
    },
    "numpy.einsum": {
     "line number": [
      103,
      104
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      108
     ]
    },
    "numpy.random.random": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermegrid2d": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      179
     ]
    },
    "assert_almost_equal": {
     "line number": [
      174
     ]
    },
    "numpy.einsum": {
     "line number": [
      172
     ]
    },
    "numpy.ones": {
     "line number": [
      177
     ]
    },
    "numpy.polynomial.hermite_e.hermegrid2d": {
     "line number": [
      173,
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermegrid3d": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      193
     ]
    },
    "assert_almost_equal": {
     "line number": [
      188
     ]
    },
    "numpy.einsum": {
     "line number": [
      186
     ]
    },
    "numpy.ones": {
     "line number": [
      191
     ]
    },
    "numpy.polynomial.hermite_e.hermegrid3d": {
     "line number": [
      187,
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermeval": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      123
     ]
    },
    "assert_equal": {
     "line number": [
      113,
      129,
      130,
      131
     ]
    },
    "numpy.linspace": {
     "line number": [
      116
     ]
    },
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      113,
      122,
      129,
      130,
      131
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      117
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.Helist": {
     "line number": [
      117
     ]
    },
    "numpy.zeros": {
     "line number": [
      120,
      128
     ]
    },
    "range": {
     "line number": [
      118,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermeval2d": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      138
     ]
    },
    "assert_": {
     "line number": [
      148
     ]
    },
    "assert_almost_equal": {
     "line number": [
      143
     ]
    },
    "assert_raises": {
     "line number": [
      138
     ]
    },
    "numpy.ones": {
     "line number": [
      146
     ]
    },
    "numpy.polynomial.hermite_e.hermeval2d": {
     "line number": [
      138,
      142,
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermeval3d": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      155
     ]
    },
    "assert_": {
     "line number": [
      165
     ]
    },
    "assert_almost_equal": {
     "line number": [
      160
     ]
    },
    "assert_raises": {
     "line number": [
      155
     ]
    },
    "numpy.ones": {
     "line number": [
      163
     ]
    },
    "numpy.polynomial.hermite_e.hermeval3d": {
     "line number": [
      155,
      159,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting": {
  "data": {
   "lineno": 385
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting.test_hermefit": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      393,
      394,
      395,
      396,
      397,
      398,
      399
     ]
    },
    "ValueError": {
     "line number": [
      392
     ]
    },
    "assert_almost_equal": {
     "line number": [
      407,
      411,
      414,
      421,
      424,
      428
     ]
    },
    "assert_equal": {
     "line number": [
      406,
      410
     ]
    },
    "assert_raises": {
     "line number": [
      392,
      393,
      394,
      395,
      396,
      397,
      398,
      399
     ]
    },
    "f": {
     "line number": [
      403
     ]
    },
    "len": {
     "line number": [
      406,
      410
     ]
    },
    "numpy.array": {
     "line number": [
      413,
      414,
      423,
      424
     ]
    },
    "numpy.linspace": {
     "line number": [
      402
     ]
    },
    "numpy.polynomial.hermite_e.hermefit": {
     "line number": [
      392,
      393,
      394,
      395,
      396,
      397,
      398,
      399,
      405,
      409,
      413,
      420,
      423,
      428
     ]
    },
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      407,
      411
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting.test_hermefit.f": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestGauss": {
  "data": {
   "lineno": 446
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestGauss.test_100": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      458,
      462
     ]
    },
    "numpy.dot": {
     "line number": [
      455
     ]
    },
    "numpy.eye": {
     "line number": [
      458
     ]
    },
    "numpy.pi": {
     "line number": [
      461
     ]
    },
    "numpy.polynomial.hermite_e.hermegauss": {
     "line number": [
      449
     ]
    },
    "numpy.polynomial.hermite_e.hermevander": {
     "line number": [
      454
     ]
    },
    "numpy.sqrt": {
     "line number": [
      456,
      461
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestIntegral": {
  "data": {
   "lineno": 196
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestIntegral.test_hermeint": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      200,
      201,
      202
     ]
    },
    "assert_almost_equal": {
     "line number": [
      208,
      218,
      226,
      236,
      246,
      256,
      266,
      276
     ]
    },
    "assert_raises": {
     "line number": [
      200,
      201,
      202
     ]
    },
    "list": {
     "line number": [
      255,
      265,
      275
     ]
    },
    "numpy.polynomial.hermite_e.herme2poly": {
     "line number": [
      217,
      235
     ]
    },
    "numpy.polynomial.hermite_e.hermeint": {
     "line number": [
      200,
      201,
      202,
      207,
      216,
      225,
      234,
      244,
      245,
      254,
      255,
      264,
      265,
      274,
      275
     ]
    },
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      226
     ]
    },
    "numpy.polynomial.hermite_e.poly2herme": {
     "line number": [
      215,
      224,
      233
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.trim": {
     "line number": [
      218,
      218,
      236,
      236,
      246,
      246,
      256,
      256,
      266,
      266,
      276,
      276
     ]
    },
    "range": {
     "line number": [
      205,
      211,
      221,
      229,
      239,
      240,
      243,
      249,
      250,
      253,
      255,
      259,
      260,
      263,
      265,
      269,
      270,
      273,
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestIntegral.test_hermeint_axis": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      284,
      288,
      292
     ]
    },
    "numpy.polynomial.hermite_e.hermeint": {
     "line number": [
      282,
      283,
      286,
      287,
      290,
      291
     ]
    },
    "numpy.random.random": {
     "line number": [
      280
     ]
    },
    "numpy.vstack": {
     "line number": [
      282,
      286,
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc": {
  "data": {
   "lineno": 465
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_herme2poly": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      503
     ]
    },
    "numpy.polynomial.hermite_e.herme2poly": {
     "line number": [
      503
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.Helist": {
     "line number": [
      503
     ]
    },
    "range": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermefromroots": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      475
     ]
    },
    "assert_almost_equal": {
     "line number": [
      469,
      476,
      477
     ]
    },
    "len": {
     "line number": [
      475
     ]
    },
    "numpy.cos": {
     "line number": [
      471
     ]
    },
    "numpy.linspace": {
     "line number": [
      471
     ]
    },
    "numpy.pi": {
     "line number": [
      471
     ]
    },
    "numpy.polynomial.hermite_e.herme2poly": {
     "line number": [
      476
     ]
    },
    "numpy.polynomial.hermite_e.hermefromroots": {
     "line number": [
      468,
      472
     ]
    },
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      473
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.trim": {
     "line number": [
      469
     ]
    },
    "range": {
     "line number": [
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermeline": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      499
     ]
    },
    "numpy.polynomial.hermite_e.hermeline": {
     "line number": [
      499
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermeroots": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      480,
      481,
      485
     ]
    },
    "numpy.linspace": {
     "line number": [
      483
     ]
    },
    "numpy.polynomial.hermite_e.hermefromroots": {
     "line number": [
      484
     ]
    },
    "numpy.polynomial.hermite_e.hermeroots": {
     "line number": [
      480,
      481,
      484
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.trim": {
     "line number": [
      485,
      485
     ]
    },
    "range": {
     "line number": [
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermetrim": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      491
     ]
    },
    "assert_equal": {
     "line number": [
      494,
      495,
      496
     ]
    },
    "assert_raises": {
     "line number": [
      491
     ]
    },
    "numpy.polynomial.hermite_e.hermetrim": {
     "line number": [
      491,
      494,
      495,
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_poly2herme": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      507
     ]
    },
    "numpy.polynomial.hermite_e.poly2herme": {
     "line number": [
      507
     ]
    },
    "numpy.polynomial.tests.test_hermite_e.Helist": {
     "line number": [
      507
     ]
    },
    "range": {
     "line number": [
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_weight": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      513
     ]
    },
    "numpy.exp": {
     "line number": [
      511
     ]
    },
    "numpy.linspace": {
     "line number": [
      510
     ]
    },
    "numpy.polynomial.hermite_e.hermeweight": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander.test_hermevander": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      344,
      352
     ]
    },
    "assert_almost_equal": {
     "line number": [
      347,
      355
     ]
    },
    "numpy.arange": {
     "line number": [
      342
     ]
    },
    "numpy.array": {
     "line number": [
      350
     ]
    },
    "numpy.polynomial.hermite_e.hermeval": {
     "line number": [
      347,
      355
     ]
    },
    "numpy.polynomial.hermite_e.hermevander": {
     "line number": [
      343,
      351
     ]
    },
    "range": {
     "line number": [
      345,
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander.test_hermevander2d": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      368
     ]
    },
    "assert_almost_equal": {
     "line number": [
      364
     ]
    },
    "numpy.dot": {
     "line number": [
      363
     ]
    },
    "numpy.polynomial.hermite_e.hermeval2d": {
     "line number": [
      362
     ]
    },
    "numpy.polynomial.hermite_e.hermevander2d": {
     "line number": [
      361,
      367
     ]
    },
    "numpy.random.random": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander.test_hermevander3d": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      382
     ]
    },
    "assert_almost_equal": {
     "line number": [
      378
     ]
    },
    "numpy.dot": {
     "line number": [
      377
     ]
    },
    "numpy.polynomial.hermite_e.hermeval3d": {
     "line number": [
      376
     ]
    },
    "numpy.polynomial.hermite_e.hermevander3d": {
     "line number": [
      375,
      381
     ]
    },
    "numpy.random.random": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.herme": {
  "data": {
   "shadows": "numpy.polynomial.hermite_e"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.trim": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.polynomial.hermite_e.hermetrim": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      514
     ]
    },
    "numpy.array": {
     "line number": [
      13,
      14,
      15,
      16,
      17,
      18,
      19
     ]
    },
    "numpy.polynomial.tests.test_laguerre.L0": {
     "line number": [
      21
     ]
    },
    "numpy.polynomial.tests.test_laguerre.L1": {
     "line number": [
      21
     ]
    },
    "numpy.polynomial.tests.test_laguerre.L2": {
     "line number": [
      21
     ]
    },
    "numpy.polynomial.tests.test_laguerre.L3": {
     "line number": [
      21
     ]
    },
    "numpy.polynomial.tests.test_laguerre.L4": {
     "line number": [
      21
     ]
    },
    "numpy.polynomial.tests.test_laguerre.L5": {
     "line number": [
      21
     ]
    },
    "numpy.polynomial.tests.test_laguerre.L6": {
     "line number": [
      21
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_laguerre.L0": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L1": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L2": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L3": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L4": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L5": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L6": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.Llist": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      43
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagadd": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "max": {
     "line number": [
      49
     ]
    },
    "numpy.polynomial.laguerre.lagadd": {
     "line number": [
      52
     ]
    },
    "numpy.polynomial.tests.test_laguerre.trim": {
     "line number": [
      53,
      53
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      53
     ]
    },
    "numpy.zeros": {
     "line number": [
      49
     ]
    },
    "range": {
     "line number": [
      46,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagdiv": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagadd": {
     "line number": [
      93,
      95
     ]
    },
    "numpy.polynomial.laguerre.lagdiv": {
     "line number": [
      94
     ]
    },
    "numpy.polynomial.laguerre.lagmul": {
     "line number": [
      95
     ]
    },
    "numpy.polynomial.tests.test_laguerre.trim": {
     "line number": [
      96,
      96
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      96
     ]
    },
    "range": {
     "line number": [
      88,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagmul": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "len": {
     "line number": [
      84
     ]
    },
    "numpy.polynomial.laguerre.lagmul": {
     "line number": [
      82
     ]
    },
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      77,
      81,
      83
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      84
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      85
     ]
    },
    "range": {
     "line number": [
      75,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagmulx": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagmulx": {
     "line number": [
      66,
      67,
      71
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      71
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      66,
      67
     ]
    },
    "range": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagsub": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "max": {
     "line number": [
      59
     ]
    },
    "numpy.polynomial.laguerre.lagsub": {
     "line number": [
      62
     ]
    },
    "numpy.polynomial.tests.test_laguerre.trim": {
     "line number": [
      63,
      63
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      63
     ]
    },
    "numpy.zeros": {
     "line number": [
      59
     ]
    },
    "range": {
     "line number": [
      56,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagcompanion": {
     "line number": [
      438
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      438
     ]
    },
    "range": {
     "line number": [
      436
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagcompanion": {
     "line number": [
      441
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion.test_raises": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      432,
      433
     ]
    },
    "numpy.polynomial.laguerre.lagcompanion": {
     "line number": [
      432,
      433
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      432,
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagdomain": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagdomain": {
     "line number": [
      30
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagone": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagone": {
     "line number": [
      36
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagx": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagx": {
     "line number": [
      39
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagzero": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagzero": {
     "line number": [
      33
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestDerivative": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestDerivative.test_lagder": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      297,
      298
     ]
    },
    "numpy.polynomial.laguerre.lagder": {
     "line number": [
      297,
      298,
      303,
      310,
      317
     ]
    },
    "numpy.polynomial.laguerre.lagint": {
     "line number": [
      310,
      317
     ]
    },
    "numpy.polynomial.tests.test_laguerre.trim": {
     "line number": [
      304,
      304,
      311,
      311,
      318,
      318
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      311,
      318
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      304
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      297,
      298
     ]
    },
    "range": {
     "line number": [
      301,
      307,
      308,
      314,
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestDerivative.test_lagder_axis": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagder": {
     "line number": [
      324,
      325,
      328,
      329
     ]
    },
    "numpy.random.random": {
     "line number": [
      322
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      326,
      330
     ]
    },
    "numpy.vstack": {
     "line number": [
      324,
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      101
     ]
    },
    "numpy.einsum": {
     "line number": [
      102,
      103
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      107
     ]
    },
    "numpy.random.random": {
     "line number": [
      106
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_laggrid2d": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      170
     ]
    },
    "numpy.ones": {
     "line number": [
      175
     ]
    },
    "numpy.polynomial.laguerre.laggrid2d": {
     "line number": [
      171,
      176
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      177
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_laggrid3d": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      184
     ]
    },
    "numpy.ones": {
     "line number": [
      189
     ]
    },
    "numpy.polynomial.laguerre.laggrid3d": {
     "line number": [
      185,
      190
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      191
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_lagval": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      114
     ]
    },
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      111,
      120,
      127,
      128,
      129
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      115
     ]
    },
    "numpy.polynomial.tests.test_laguerre.Llist": {
     "line number": [
      115
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      121
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      111,
      127,
      128,
      129
     ]
    },
    "numpy.zeros": {
     "line number": [
      118,
      126
     ]
    },
    "range": {
     "line number": [
      116,
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_lagval2d": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      136
     ]
    },
    "numpy.ones": {
     "line number": [
      144
     ]
    },
    "numpy.polynomial.laguerre.lagval2d": {
     "line number": [
      136,
      140,
      145
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      146
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      141
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_lagval3d": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      153
     ]
    },
    "numpy.ones": {
     "line number": [
      161
     ]
    },
    "numpy.polynomial.laguerre.lagval3d": {
     "line number": [
      153,
      157,
      162
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      163
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      158
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestFitting": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestFitting.test_lagfit": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      391,
      392,
      393,
      394,
      395,
      396,
      397
     ]
    },
    "ValueError": {
     "line number": [
      390
     ]
    },
    "f": {
     "line number": [
      401
     ]
    },
    "len": {
     "line number": [
      404,
      408
     ]
    },
    "numpy.array": {
     "line number": [
      411,
      412,
      421,
      422
     ]
    },
    "numpy.linspace": {
     "line number": [
      400
     ]
    },
    "numpy.polynomial.laguerre.lagfit": {
     "line number": [
      390,
      391,
      392,
      393,
      394,
      395,
      396,
      397,
      403,
      407,
      411,
      418,
      421,
      426
     ]
    },
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      405,
      409
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      405,
      409,
      412,
      419,
      422,
      426
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      404,
      408
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      390,
      391,
      392,
      393,
      394,
      395,
      396,
      397
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestFitting.test_lagfit.f": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestGauss": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestGauss.test_100": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      453
     ]
    },
    "numpy.eye": {
     "line number": [
      456
     ]
    },
    "numpy.polynomial.laguerre.laggauss": {
     "line number": [
      447
     ]
    },
    "numpy.polynomial.laguerre.lagvander": {
     "line number": [
      452
     ]
    },
    "numpy.sqrt": {
     "line number": [
      454
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      456,
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestIntegral": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestIntegral.test_lagint": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      198,
      199,
      200
     ]
    },
    "list": {
     "line number": [
      253,
      263,
      273
     ]
    },
    "numpy.polynomial.laguerre.lag2poly": {
     "line number": [
      215,
      233
     ]
    },
    "numpy.polynomial.laguerre.lagint": {
     "line number": [
      198,
      199,
      200,
      205,
      214,
      223,
      232,
      242,
      243,
      252,
      253,
      262,
      263,
      272,
      273
     ]
    },
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      224
     ]
    },
    "numpy.polynomial.laguerre.poly2lag": {
     "line number": [
      213,
      222,
      231
     ]
    },
    "numpy.polynomial.tests.test_laguerre.trim": {
     "line number": [
      216,
      216,
      234,
      234,
      244,
      244,
      254,
      254,
      264,
      264,
      274,
      274
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      206,
      216,
      224,
      234,
      244,
      254,
      264,
      274
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      198,
      199,
      200
     ]
    },
    "range": {
     "line number": [
      203,
      209,
      219,
      227,
      237,
      238,
      241,
      247,
      248,
      251,
      253,
      257,
      258,
      261,
      263,
      267,
      268,
      271,
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestIntegral.test_lagint_axis": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagint": {
     "line number": [
      280,
      281,
      284,
      285,
      288,
      289
     ]
    },
    "numpy.random.random": {
     "line number": [
      278
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      282,
      286,
      290
     ]
    },
    "numpy.vstack": {
     "line number": [
      280,
      284,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      463
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lag2poly": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lag2poly": {
     "line number": [
      501
     ]
    },
    "numpy.polynomial.tests.test_laguerre.Llist": {
     "line number": [
      501
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      501
     ]
    },
    "range": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagfromroots": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "len": {
     "line number": [
      473
     ]
    },
    "numpy.cos": {
     "line number": [
      469
     ]
    },
    "numpy.linspace": {
     "line number": [
      469
     ]
    },
    "numpy.pi": {
     "line number": [
      469
     ]
    },
    "numpy.polynomial.laguerre.lag2poly": {
     "line number": [
      474
     ]
    },
    "numpy.polynomial.laguerre.lagfromroots": {
     "line number": [
      466,
      470
     ]
    },
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      471
     ]
    },
    "numpy.polynomial.tests.test_laguerre.trim": {
     "line number": [
      467
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      473
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      467,
      474,
      475
     ]
    },
    "range": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagline": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagline": {
     "line number": [
      497
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagroots": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      481
     ]
    },
    "numpy.polynomial.laguerre.lagfromroots": {
     "line number": [
      482
     ]
    },
    "numpy.polynomial.laguerre.lagroots": {
     "line number": [
      478,
      479,
      482
     ]
    },
    "numpy.polynomial.tests.test_laguerre.trim": {
     "line number": [
      483,
      483
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      478,
      479,
      483
     ]
    },
    "range": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagtrim": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      489
     ]
    },
    "numpy.polynomial.laguerre.lagtrim": {
     "line number": [
      489,
      492,
      493,
      494
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      492,
      493,
      494
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_poly2lag": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.poly2lag": {
     "line number": [
      505
     ]
    },
    "numpy.polynomial.tests.test_laguerre.Llist": {
     "line number": [
      505
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      505
     ]
    },
    "range": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_weight": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      509
     ]
    },
    "numpy.linspace": {
     "line number": [
      508
     ]
    },
    "numpy.polynomial.laguerre.lagweight": {
     "line number": [
      510
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      335
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander.test_lagvander": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      340
     ]
    },
    "numpy.array": {
     "line number": [
      348
     ]
    },
    "numpy.polynomial.laguerre.lagval": {
     "line number": [
      345,
      353
     ]
    },
    "numpy.polynomial.laguerre.lagvander": {
     "line number": [
      341,
      349
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      342,
      350
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      345,
      353
     ]
    },
    "range": {
     "line number": [
      343,
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander.test_lagvander2d": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      361
     ]
    },
    "numpy.polynomial.laguerre.lagval2d": {
     "line number": [
      360
     ]
    },
    "numpy.polynomial.laguerre.lagvander2d": {
     "line number": [
      359,
      365
     ]
    },
    "numpy.random.random": {
     "line number": [
      358
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      366
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander.test_lagvander3d": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      375
     ]
    },
    "numpy.polynomial.laguerre.lagval3d": {
     "line number": [
      374
     ]
    },
    "numpy.polynomial.laguerre.lagvander3d": {
     "line number": [
      373,
      379
     ]
    },
    "numpy.random.random": {
     "line number": [
      372
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      380
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.lag": {
  "data": {
   "shadows": "numpy.polynomial.laguerre"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.trim": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "numpy.polynomial.laguerre.lagtrim": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      517
     ]
    },
    "numpy.array": {
     "line number": [
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22
     ]
    },
    "numpy.polynomial.tests.test_legendre.L0": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_legendre.L1": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_legendre.L2": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_legendre.L3": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_legendre.L4": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_legendre.L5": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_legendre.L6": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_legendre.L7": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_legendre.L8": {
     "line number": [
      24
     ]
    },
    "numpy.polynomial.tests.test_legendre.L9": {
     "line number": [
      24
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      518
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_legendre.L0": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L1": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L2": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L3": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L4": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L5": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L6": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L7": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L8": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L9": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.Llist": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      46
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legadd": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "max": {
     "line number": [
      52
     ]
    },
    "numpy.polynomial.legendre.legadd": {
     "line number": [
      55
     ]
    },
    "numpy.polynomial.tests.test_legendre.trim": {
     "line number": [
      56,
      56
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      56
     ]
    },
    "numpy.zeros": {
     "line number": [
      52
     ]
    },
    "range": {
     "line number": [
      49,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legdiv": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legadd": {
     "line number": [
      97,
      99
     ]
    },
    "numpy.polynomial.legendre.legdiv": {
     "line number": [
      98
     ]
    },
    "numpy.polynomial.legendre.legmul": {
     "line number": [
      99
     ]
    },
    "numpy.polynomial.tests.test_legendre.trim": {
     "line number": [
      100,
      100
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      100
     ]
    },
    "range": {
     "line number": [
      92,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legmul": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "len": {
     "line number": [
      88
     ]
    },
    "numpy.polynomial.legendre.legmul": {
     "line number": [
      86
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      81,
      85,
      87
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      88
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      89
     ]
    },
    "range": {
     "line number": [
      79,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legmulx": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legmulx": {
     "line number": [
      69,
      70,
      75
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      69,
      70,
      75
     ]
    },
    "range": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legsub": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "max": {
     "line number": [
      62
     ]
    },
    "numpy.polynomial.legendre.legsub": {
     "line number": [
      65
     ]
    },
    "numpy.polynomial.tests.test_legendre.trim": {
     "line number": [
      66,
      66
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      66
     ]
    },
    "numpy.zeros": {
     "line number": [
      62
     ]
    },
    "range": {
     "line number": [
      59,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legcompanion": {
     "line number": [
      441
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      441
     ]
    },
    "range": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legcompanion": {
     "line number": [
      444
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion.test_raises": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      435,
      436
     ]
    },
    "numpy.polynomial.legendre.legcompanion": {
     "line number": [
      435,
      436
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      435,
      436
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legdomain": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legdomain": {
     "line number": [
      33
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legone": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legone": {
     "line number": [
      39
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legx": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legx": {
     "line number": [
      42
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legzero": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legzero": {
     "line number": [
      36
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestDerivative": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestDerivative.test_legder": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      301,
      302
     ]
    },
    "numpy.polynomial.legendre.legder": {
     "line number": [
      301,
      302,
      307,
      314,
      321
     ]
    },
    "numpy.polynomial.legendre.legint": {
     "line number": [
      314,
      321
     ]
    },
    "numpy.polynomial.tests.test_legendre.trim": {
     "line number": [
      308,
      308,
      315,
      315,
      322,
      322
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      315,
      322
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      308
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      301,
      302
     ]
    },
    "range": {
     "line number": [
      305,
      311,
      312,
      318,
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestDerivative.test_legder_axis": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legder": {
     "line number": [
      328,
      329,
      332,
      333
     ]
    },
    "numpy.random.random": {
     "line number": [
      326
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      330,
      334
     ]
    },
    "numpy.vstack": {
     "line number": [
      328,
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      105
     ]
    },
    "numpy.einsum": {
     "line number": [
      106,
      107
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      111
     ]
    },
    "numpy.random.random": {
     "line number": [
      110
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_leggrid2d": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      174
     ]
    },
    "numpy.ones": {
     "line number": [
      179
     ]
    },
    "numpy.polynomial.legendre.leggrid2d": {
     "line number": [
      175,
      180
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      181
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_leggrid3d": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      188
     ]
    },
    "numpy.ones": {
     "line number": [
      193
     ]
    },
    "numpy.polynomial.legendre.leggrid3d": {
     "line number": [
      189,
      194
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      195
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_legval": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      118
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      115,
      124,
      131,
      132,
      133
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      119
     ]
    },
    "numpy.polynomial.tests.test_legendre.Llist": {
     "line number": [
      119
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      125
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      115,
      131,
      132,
      133
     ]
    },
    "numpy.zeros": {
     "line number": [
      122,
      130
     ]
    },
    "range": {
     "line number": [
      120,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_legval2d": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      140
     ]
    },
    "numpy.ones": {
     "line number": [
      148
     ]
    },
    "numpy.polynomial.legendre.legval2d": {
     "line number": [
      140,
      144,
      149
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      150
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      145
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_legval3d": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      157
     ]
    },
    "numpy.ones": {
     "line number": [
      165
     ]
    },
    "numpy.polynomial.legendre.legval3d": {
     "line number": [
      157,
      161,
      166
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      167
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      162
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      386
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting.test_legfit": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      394,
      395,
      396,
      397,
      398,
      399,
      400
     ]
    },
    "ValueError": {
     "line number": [
      393
     ]
    },
    "f": {
     "line number": [
      404
     ]
    },
    "len": {
     "line number": [
      407,
      411
     ]
    },
    "numpy.array": {
     "line number": [
      414,
      415,
      424,
      425
     ]
    },
    "numpy.linspace": {
     "line number": [
      403
     ]
    },
    "numpy.polynomial.legendre.legfit": {
     "line number": [
      393,
      394,
      395,
      396,
      397,
      398,
      399,
      400,
      406,
      410,
      414,
      421,
      424,
      429
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      408,
      412
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      408,
      412,
      415,
      422,
      425,
      429
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      407,
      411
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      393,
      394,
      395,
      396,
      397,
      398,
      399,
      400
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting.test_legfit.f": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestGauss": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestGauss.test_100": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      456
     ]
    },
    "numpy.eye": {
     "line number": [
      459
     ]
    },
    "numpy.polynomial.legendre.leggauss": {
     "line number": [
      450
     ]
    },
    "numpy.polynomial.legendre.legvander": {
     "line number": [
      455
     ]
    },
    "numpy.sqrt": {
     "line number": [
      457
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      459,
      463
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestIntegral": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestIntegral.test_legint": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      202,
      203,
      204
     ]
    },
    "list": {
     "line number": [
      257,
      267,
      277
     ]
    },
    "numpy.polynomial.legendre.leg2poly": {
     "line number": [
      219,
      237
     ]
    },
    "numpy.polynomial.legendre.legint": {
     "line number": [
      202,
      203,
      204,
      209,
      218,
      227,
      236,
      246,
      247,
      256,
      257,
      266,
      267,
      276,
      277
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      228
     ]
    },
    "numpy.polynomial.legendre.poly2leg": {
     "line number": [
      217,
      226,
      235
     ]
    },
    "numpy.polynomial.tests.test_legendre.trim": {
     "line number": [
      220,
      220,
      238,
      238,
      248,
      248,
      258,
      258,
      268,
      268,
      278,
      278
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      210,
      220,
      228,
      238,
      248,
      258,
      268,
      278
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      202,
      203,
      204
     ]
    },
    "range": {
     "line number": [
      207,
      213,
      223,
      231,
      241,
      242,
      245,
      251,
      252,
      255,
      257,
      261,
      262,
      265,
      267,
      271,
      272,
      275,
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestIntegral.test_legint_axis": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legint": {
     "line number": [
      284,
      285,
      288,
      289,
      292,
      293
     ]
    },
    "numpy.random.random": {
     "line number": [
      282
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      286,
      290,
      294
     ]
    },
    "numpy.vstack": {
     "line number": [
      284,
      288,
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      466
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_leg2poly": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.leg2poly": {
     "line number": [
      504
     ]
    },
    "numpy.polynomial.tests.test_legendre.Llist": {
     "line number": [
      504
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      504
     ]
    },
    "range": {
     "line number": [
      503
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legfromroots": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "len": {
     "line number": [
      476
     ]
    },
    "numpy.cos": {
     "line number": [
      472
     ]
    },
    "numpy.linspace": {
     "line number": [
      472
     ]
    },
    "numpy.pi": {
     "line number": [
      472
     ]
    },
    "numpy.polynomial.legendre.leg2poly": {
     "line number": [
      477
     ]
    },
    "numpy.polynomial.legendre.legfromroots": {
     "line number": [
      469,
      473
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      474
     ]
    },
    "numpy.polynomial.tests.test_legendre.trim": {
     "line number": [
      470
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      476
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      470,
      477,
      478
     ]
    },
    "range": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legline": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legline": {
     "line number": [
      500
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legroots": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      484
     ]
    },
    "numpy.polynomial.legendre.legfromroots": {
     "line number": [
      485
     ]
    },
    "numpy.polynomial.legendre.legroots": {
     "line number": [
      481,
      482,
      485
     ]
    },
    "numpy.polynomial.tests.test_legendre.trim": {
     "line number": [
      486,
      486
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      481,
      482,
      486
     ]
    },
    "range": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legtrim": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      492
     ]
    },
    "numpy.polynomial.legendre.legtrim": {
     "line number": [
      492,
      495,
      496,
      497
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      495,
      496,
      497
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      492
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_poly2leg": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.poly2leg": {
     "line number": [
      508
     ]
    },
    "numpy.polynomial.tests.test_legendre.Llist": {
     "line number": [
      508
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      508
     ]
    },
    "range": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_weight": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      511
     ]
    },
    "numpy.polynomial.legendre.legweight": {
     "line number": [
      513
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestVander": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      339
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestVander.test_legvander": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      344
     ]
    },
    "numpy.array": {
     "line number": [
      352
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      349,
      357
     ]
    },
    "numpy.polynomial.legendre.legvander": {
     "line number": [
      345,
      353
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      346,
      354
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      349,
      357
     ]
    },
    "range": {
     "line number": [
      347,
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestVander.test_legvander2d": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      365
     ]
    },
    "numpy.polynomial.legendre.legval2d": {
     "line number": [
      364
     ]
    },
    "numpy.polynomial.legendre.legvander2d": {
     "line number": [
      363,
      369
     ]
    },
    "numpy.random.random": {
     "line number": [
      362
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      370
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestVander.test_legvander3d": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      378
     ]
    },
    "numpy.polynomial.legendre.legval3d": {
     "line number": [
      377
     ]
    },
    "numpy.polynomial.legendre.legvander3d": {
     "line number": [
      376,
      382
     ]
    },
    "numpy.random.random": {
     "line number": [
      375
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      383
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.leg": {
  "data": {
   "shadows": "numpy.polynomial.legendre"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.trim": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legtrim": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      479
     ]
    },
    "numpy.polynomial.tests.test_polynomial.T0": {
     "line number": [
      26
     ]
    },
    "numpy.polynomial.tests.test_polynomial.T1": {
     "line number": [
      26
     ]
    },
    "numpy.polynomial.tests.test_polynomial.T2": {
     "line number": [
      26
     ]
    },
    "numpy.polynomial.tests.test_polynomial.T3": {
     "line number": [
      26
     ]
    },
    "numpy.polynomial.tests.test_polynomial.T4": {
     "line number": [
      26
     ]
    },
    "numpy.polynomial.tests.test_polynomial.T5": {
     "line number": [
      26
     ]
    },
    "numpy.polynomial.tests.test_polynomial.T6": {
     "line number": [
      26
     ]
    },
    "numpy.polynomial.tests.test_polynomial.T7": {
     "line number": [
      26
     ]
    },
    "numpy.polynomial.tests.test_polynomial.T8": {
     "line number": [
      26
     ]
    },
    "numpy.polynomial.tests.test_polynomial.T9": {
     "line number": [
      26
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_polynomial.T0": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T1": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T2": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T3": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T4": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T5": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T6": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T7": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T8": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T9": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polyadd": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "max": {
     "line number": [
      50
     ]
    },
    "numpy.polynomial.polynomial.polyadd": {
     "line number": [
      53
     ]
    },
    "numpy.polynomial.tests.test_polynomial.trim": {
     "line number": [
      54,
      54
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      54
     ]
    },
    "numpy.zeros": {
     "line number": [
      50
     ]
    },
    "range": {
     "line number": [
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polydiv": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      85
     ]
    },
    "numpy.polynomial.polynomial.polyadd": {
     "line number": [
      99,
      101
     ]
    },
    "numpy.polynomial.polynomial.polydiv": {
     "line number": [
      85,
      88,
      90,
      100
     ]
    },
    "numpy.polynomial.polynomial.polymul": {
     "line number": [
      101
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      89,
      91,
      102
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      85
     ]
    },
    "range": {
     "line number": [
      94,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polymul": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polymul": {
     "line number": [
      80
     ]
    },
    "numpy.polynomial.tests.test_polynomial.trim": {
     "line number": [
      81,
      81
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      81
     ]
    },
    "numpy.zeros": {
     "line number": [
      78
     ]
    },
    "range": {
     "line number": [
      75,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polymulx": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polymulx": {
     "line number": [
      67,
      68,
      72
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      67,
      68,
      72
     ]
    },
    "range": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polysub": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "max": {
     "line number": [
      60
     ]
    },
    "numpy.polynomial.polynomial.polysub": {
     "line number": [
      63
     ]
    },
    "numpy.polynomial.tests.test_polynomial.trim": {
     "line number": [
      64,
      64
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      64
     ]
    },
    "numpy.zeros": {
     "line number": [
      60
     ]
    },
    "range": {
     "line number": [
      57,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      386
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polycompanion": {
     "line number": [
      395
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      395
     ]
    },
    "range": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polycompanion": {
     "line number": [
      398
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion.test_raises": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      389,
      390
     ]
    },
    "numpy.polynomial.polynomial.polycompanion": {
     "line number": [
      389,
      390
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      389,
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polydomain": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polydomain": {
     "line number": [
      32
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyone": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polyone": {
     "line number": [
      38
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyx": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polyx": {
     "line number": [
      41
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyzero": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polyzero": {
     "line number": [
      35
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestDerivative": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestDerivative.test_polyder": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      300,
      301
     ]
    },
    "numpy.polynomial.polynomial.polyder": {
     "line number": [
      300,
      301,
      306,
      313,
      320
     ]
    },
    "numpy.polynomial.polynomial.polyint": {
     "line number": [
      313,
      320
     ]
    },
    "numpy.polynomial.tests.test_polynomial.trim": {
     "line number": [
      307,
      307,
      314,
      314,
      321,
      321
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      314,
      321
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      307
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      300,
      301
     ]
    },
    "range": {
     "line number": [
      304,
      310,
      311,
      317,
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestDerivative.test_polyder_axis": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polyder": {
     "line number": [
      327,
      328,
      331,
      332
     ]
    },
    "numpy.random.random": {
     "line number": [
      325
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      329,
      333
     ]
    },
    "numpy.vstack": {
     "line number": [
      327,
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      107
     ]
    },
    "numpy.einsum": {
     "line number": [
      108,
      109
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      113
     ]
    },
    "numpy.random.random": {
     "line number": [
      112
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polygrid2d": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      178
     ]
    },
    "numpy.ones": {
     "line number": [
      183
     ]
    },
    "numpy.polynomial.polynomial.polygrid2d": {
     "line number": [
      179,
      184
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      185
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polygrid3d": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      192
     ]
    },
    "numpy.ones": {
     "line number": [
      197
     ]
    },
    "numpy.polynomial.polynomial.polygrid3d": {
     "line number": [
      193,
      198
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      199
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyval": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      121
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      118,
      125,
      128,
      135,
      136,
      137
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      126,
      129
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      118,
      135,
      136,
      137
     ]
    },
    "numpy.zeros": {
     "line number": [
      134
     ]
    },
    "range": {
     "line number": [
      122,
      123,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyval2d": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      144
     ]
    },
    "numpy.ones": {
     "line number": [
      152
     ]
    },
    "numpy.polynomial.polynomial.polyval2d": {
     "line number": [
      144,
      148,
      153
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      154
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      149
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyval3d": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      161
     ]
    },
    "numpy.ones": {
     "line number": [
      169
     ]
    },
    "numpy.polynomial.polynomial.polyval3d": {
     "line number": [
      161,
      165,
      170
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      171
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      166
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestIntegral": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestIntegral.test_polyint": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      206,
      207,
      208
     ]
    },
    "list": {
     "line number": [
      256,
      266,
      276
     ]
    },
    "numpy.polynomial.polynomial.polyint": {
     "line number": [
      206,
      207,
      208,
      213,
      221,
      228,
      236,
      245,
      246,
      255,
      256,
      265,
      266,
      275,
      276
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      229
     ]
    },
    "numpy.polynomial.tests.test_polynomial.trim": {
     "line number": [
      222,
      222,
      237,
      237,
      247,
      247,
      257,
      257,
      267,
      267,
      277,
      277
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      214,
      222,
      229,
      237,
      247,
      257,
      267,
      277
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      206,
      207,
      208
     ]
    },
    "range": {
     "line number": [
      211,
      217,
      225,
      232,
      240,
      241,
      244,
      250,
      251,
      254,
      256,
      260,
      261,
      264,
      266,
      270,
      271,
      274,
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestIntegral.test_polyint_axis": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polyint": {
     "line number": [
      283,
      284,
      287,
      288,
      291,
      292
     ]
    },
    "numpy.random.random": {
     "line number": [
      281
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      285,
      289,
      293
     ]
    },
    "numpy.vstack": {
     "line number": [
      283,
      287,
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfit": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      426,
      427,
      428,
      429,
      430,
      431,
      432
     ]
    },
    "ValueError": {
     "line number": [
      425
     ]
    },
    "f": {
     "line number": [
      436
     ]
    },
    "len": {
     "line number": [
      439,
      443
     ]
    },
    "numpy.array": {
     "line number": [
      446,
      447,
      456,
      457
     ]
    },
    "numpy.linspace": {
     "line number": [
      435
     ]
    },
    "numpy.polynomial.polynomial.polyfit": {
     "line number": [
      425,
      426,
      427,
      428,
      429,
      430,
      431,
      432,
      438,
      442,
      446,
      453,
      456,
      461
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      440,
      444
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      440,
      444,
      447,
      454,
      457,
      461
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      439,
      443
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      425,
      426,
      427,
      428,
      429,
      430,
      431,
      432
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfit.f": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfromroots": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      407
     ]
    },
    "numpy.linspace": {
     "line number": [
      407
     ]
    },
    "numpy.pi": {
     "line number": [
      407
     ]
    },
    "numpy.polynomial.polynomial.polyfromroots": {
     "line number": [
      404,
      409
     ]
    },
    "numpy.polynomial.tests.test_polynomial.Tlist": {
     "line number": [
      408
     ]
    },
    "numpy.polynomial.tests.test_polynomial.trim": {
     "line number": [
      405,
      410,
      410
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      405,
      410
     ]
    },
    "range": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyline": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polyline": {
     "line number": [
      476
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyroots": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      416
     ]
    },
    "numpy.polynomial.polynomial.polyfromroots": {
     "line number": [
      417
     ]
    },
    "numpy.polynomial.polynomial.polyroots": {
     "line number": [
      413,
      414,
      417
     ]
    },
    "numpy.polynomial.tests.test_polynomial.trim": {
     "line number": [
      418,
      418
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      413,
      414,
      418
     ]
    },
    "range": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polytrim": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      468
     ]
    },
    "numpy.polynomial.polynomial.polytrim": {
     "line number": [
      468,
      471,
      472,
      473
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      471,
      472,
      473
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      338
     ]
    },
    "numpy.testing.TestCase": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander.test_polyvander": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      343
     ]
    },
    "numpy.array": {
     "line number": [
      351
     ]
    },
    "numpy.polynomial.polynomial.polyval": {
     "line number": [
      348,
      356
     ]
    },
    "numpy.polynomial.polynomial.polyvander": {
     "line number": [
      344,
      352
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      345,
      353
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      348,
      356
     ]
    },
    "range": {
     "line number": [
      346,
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander.test_polyvander2d": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      364
     ]
    },
    "numpy.polynomial.polynomial.polyval2d": {
     "line number": [
      363
     ]
    },
    "numpy.polynomial.polynomial.polyvander2d": {
     "line number": [
      362,
      368
     ]
    },
    "numpy.random.random": {
     "line number": [
      361
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      369
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander.test_polyvander3d": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      378
     ]
    },
    "numpy.polynomial.polynomial.polyval3d": {
     "line number": [
      377
     ]
    },
    "numpy.polynomial.polynomial.polyvander3d": {
     "line number": [
      376,
      382
     ]
    },
    "numpy.random.random": {
     "line number": [
      375
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      383
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.Tlist": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.poly": {
  "data": {
   "shadows": "numpy.polynomial.polynomial"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.trim": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.polynomial.polynomial.polytrim": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils": {
  "data": {},
  "type": "module"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_getdomain": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      50,
      56
     ]
    },
    "numpy.polynomial.polyutils.getdomain": {
     "line number": [
      49,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_mapdomain": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      87
     ]
    },
    "assert_almost_equal": {
     "line number": [
      64,
      72,
      80
     ]
    },
    "isinstance": {
     "line number": [
      87
     ]
    },
    "numpy.array": {
     "line number": [
      77,
      78
     ]
    },
    "numpy.matrix": {
     "line number": [
      85,
      87
     ]
    },
    "numpy.polynomial.polyutils.mapdomain": {
     "line number": [
      63,
      71,
      79,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_mapparms": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "assert_almost_equal": {
     "line number": [
      95,
      102
     ]
    },
    "numpy.polynomial.polyutils.mapparms": {
     "line number": [
      94,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_as_series": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      20,
      21,
      22
     ]
    },
    "assert_": {
     "line number": [
      30,
      31
     ]
    },
    "assert_raises": {
     "line number": [
      20,
      21,
      22
     ]
    },
    "len": {
     "line number": [
      25
     ]
    },
    "numpy.ones": {
     "line number": [
      27,
      28
     ]
    },
    "numpy.polynomial.polyutils.as_series": {
     "line number": [
      20,
      21,
      22,
      29
     ]
    },
    "range": {
     "line number": [
      25,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_trimcoef": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      36
     ]
    },
    "assert_equal": {
     "line number": [
      38,
      39,
      40
     ]
    },
    "assert_raises": {
     "line number": [
      36
     ]
    },
    "numpy.polynomial.polyutils.trimcoef": {
     "line number": [
      36,
      38,
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_trimseq": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      16
     ]
    },
    "numpy.polynomial.polyutils.trimseq": {
     "line number": [
      15
     ]
    },
    "range": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.pu": {
  "data": {
   "shadows": "numpy.polynomial.polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      82
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_printing.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.poly": {
  "data": {
   "shadows": "numpy.polynomial"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.test_repr": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_printing.test_repr.test_chebyshev_str": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "numpy.polynomial.Chebyshev": {
     "line number": [
      51
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      53
     ]
    },
    "repr": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_repr.test_hermiteE_repr": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.polynomial.HermiteE": {
     "line number": [
      69
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      71
     ]
    },
    "repr": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_repr.test_hermite_repr": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "numpy.polynomial.Hermite": {
     "line number": [
      63
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      65
     ]
    },
    "repr": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_repr.test_laguerre_repr": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.polynomial.Laguerre": {
     "line number": [
      75
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      77
     ]
    },
    "repr": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_repr.test_legendre_repr": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.polynomial.Legendre": {
     "line number": [
      57
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      59
     ]
    },
    "repr": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_repr.test_polynomial_str": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "numpy.polynomial.Polynomial": {
     "line number": [
      45
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      47
     ]
    },
    "repr": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_str": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_printing.test_str.test_chebyshev_str": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.polynomial.Chebyshev": {
     "line number": [
      14
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      16
     ]
    },
    "str": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_str.test_hermiteE_str": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.polynomial.HermiteE": {
     "line number": [
      32
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      34
     ]
    },
    "str": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_str.test_hermite_str": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.polynomial.Hermite": {
     "line number": [
      26
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      28
     ]
    },
    "str": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_str.test_laguerre_str": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.polynomial.Laguerre": {
     "line number": [
      38
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      40
     ]
    },
    "str": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_str.test_legendre_str": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.polynomial.Legendre": {
     "line number": [
      20
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      22
     ]
    },
    "str": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.test_str.test_polynomial_str": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "numpy.polynomial.Polynomial": {
     "line number": [
      8
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      10
     ]
    },
    "str": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.polynomial.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random": {
  "data": {
   "symbols_in_volume": {
    "numpy.random.warnings": {
     "line number": [
      97,
      98
     ]
    },
    "numpy.testing.Tester": {
     "line number": [
      113,
      114
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.random.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.random.__RandomState_ctor": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "RandomState": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.random.bench": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "numpy.random.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.random.info": {
  "data": {},
  "type": "module"
 },
 "numpy.random.info.__all__": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "numpy.random.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.random.info.depends": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "numpy.random.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.random.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      73
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      75
     ]
    },
    "numpy.random.setup.configuration": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.random.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.random.setup.configuration": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      22
     ]
    },
    "numpy.random.setup.needs_mingw_ftime_workaround": {
     "line number": [
      38
     ]
    },
    "os.path.join": {
     "line number": [
      44,
      48,
      49,
      50,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.setup.configuration.generate_libraries": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.get_mathlibs": {
     "line number": [
      26
     ]
    },
    "numpy.random.setup.testcode_wincrypt": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.setup.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "numpy.random.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.random.setup.get_mathlibs": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_mathlibs"
  },
  "type": "import"
 },
 "numpy.random.setup.get_msvc_build_version": {
  "data": {
   "shadows": "distutils.msvccompiler.get_build_version"
  },
  "type": "import"
 },
 "numpy.random.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.random.setup.needs_mingw_ftime_workaround": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "distutils.msvccompiler.get_build_version": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.setup.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.random.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.random.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.random.setup.split": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "numpy.random.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.random.setup.testcode_wincrypt": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "numpy.random.test": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "numpy.random.tests.test_random": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      610
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      611
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.random.tests.test_random.TestBinomial": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestBinomial.test_n_zero": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.random.binomial": {
     "line number": [
      17,
      18
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      17
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      18
     ]
    },
    "numpy.zeros": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.TestMultinomial": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_basic": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "numpy.random.multinomial": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_int_negative_interval": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      31,
      32
     ]
    },
    "numpy.random.randint": {
     "line number": [
      29,
      30
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      29,
      31,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_size": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      45
     ]
    },
    "numpy.array": {
     "line number": [
      42
     ]
    },
    "numpy.float": {
     "line number": [
      46
     ]
    },
    "numpy.random.multinomial": {
     "line number": [
      37,
      38,
      39,
      40,
      41,
      42,
      45
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      37,
      38,
      39,
      40,
      41,
      42
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      45
     ]
    },
    "numpy.uint32": {
     "line number": [
      37,
      38,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_zero_probability": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.random.multinomial": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestRandomDist.setUp": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_beta": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      273
     ]
    },
    "numpy.random.beta": {
     "line number": [
      272
     ]
    },
    "numpy.random.seed": {
     "line number": [
      271
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_binomial": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      281
     ]
    },
    "numpy.random.binomial": {
     "line number": [
      280
     ]
    },
    "numpy.random.seed": {
     "line number": [
      279
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_bytes": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "numpy.compat.asbytes": {
     "line number": [
      231
     ]
    },
    "numpy.random.bytes": {
     "line number": [
      230
     ]
    },
    "numpy.random.seed": {
     "line number": [
      229
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_chisquare": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      289
     ]
    },
    "numpy.random.chisquare": {
     "line number": [
      288
     ]
    },
    "numpy.random.seed": {
     "line number": [
      287
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_exceptions": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      179,
      180,
      181,
      182,
      183,
      185,
      186,
      187,
      188,
      189
     ]
    },
    "numpy.random.choice": {
     "line number": [
      178
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      179,
      180,
      181,
      182,
      183,
      185,
      186,
      187,
      188,
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_noninteger": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      174
     ]
    },
    "numpy.random.choice": {
     "line number": [
      173
     ]
    },
    "numpy.random.seed": {
     "line number": [
      172
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_nonuniform_noreplace": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      168
     ]
    },
    "numpy.random.choice": {
     "line number": [
      166
     ]
    },
    "numpy.random.seed": {
     "line number": [
      165
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_nonuniform_replace": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      155
     ]
    },
    "numpy.random.choice": {
     "line number": [
      154
     ]
    },
    "numpy.random.seed": {
     "line number": [
      153
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_return_shape": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      226
     ]
    },
    "numpy.array": {
     "line number": [
      201,
      214
     ]
    },
    "numpy.empty": {
     "line number": [
      202,
      215
     ]
    },
    "numpy.isscalar": {
     "line number": [
      195,
      196,
      197,
      198,
      199,
      208,
      209,
      210,
      211,
      212
     ]
    },
    "numpy.random.choice": {
     "line number": [
      195,
      196,
      197,
      198,
      199,
      200,
      204,
      208,
      209,
      210,
      211,
      212,
      213,
      217,
      222,
      223,
      224,
      225,
      226
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      195,
      196,
      197,
      198,
      199,
      200,
      204,
      208,
      209,
      210,
      211,
      212,
      213,
      217,
      222,
      223,
      224,
      225,
      226
     ]
    },
    "object": {
     "line number": [
      202,
      215
     ]
    },
    "tuple": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_uniform_noreplace": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      161
     ]
    },
    "numpy.random.choice": {
     "line number": [
      160
     ]
    },
    "numpy.random.seed": {
     "line number": [
      159
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_uniform_replace": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      149
     ]
    },
    "numpy.random.choice": {
     "line number": [
      148
     ]
    },
    "numpy.random.seed": {
     "line number": [
      147
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_dirichlet": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      296,
      298
     ]
    },
    "numpy.random.mtrand.dirichlet": {
     "line number": [
      297
     ]
    },
    "numpy.random.seed": {
     "line number": [
      295
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_dirichlet_size": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      316
     ]
    },
    "numpy.array": {
     "line number": [
      308,
      314
     ]
    },
    "numpy.float": {
     "line number": [
      316
     ]
    },
    "numpy.random.dirichlet": {
     "line number": [
      309,
      310,
      311,
      312,
      313,
      314,
      316
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      309,
      310,
      311,
      312,
      313,
      314
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      316
     ]
    },
    "numpy.uint32": {
     "line number": [
      309,
      310,
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_exponential": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      321
     ]
    },
    "numpy.random.exponential": {
     "line number": [
      320
     ]
    },
    "numpy.random.seed": {
     "line number": [
      319
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_f": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      329
     ]
    },
    "numpy.random.f": {
     "line number": [
      328
     ]
    },
    "numpy.random.seed": {
     "line number": [
      327
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_gamma": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      337
     ]
    },
    "numpy.random.gamma": {
     "line number": [
      336
     ]
    },
    "numpy.random.seed": {
     "line number": [
      335
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_geometric": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      345
     ]
    },
    "numpy.random.geometric": {
     "line number": [
      344
     ]
    },
    "numpy.random.seed": {
     "line number": [
      343
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_gumbel": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      353
     ]
    },
    "numpy.random.gumbel": {
     "line number": [
      352
     ]
    },
    "numpy.random.seed": {
     "line number": [
      351
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_hypergeometric": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      361,
      368,
      372,
      377,
      381
     ]
    },
    "numpy.random.hypergeometric": {
     "line number": [
      360,
      367,
      371,
      376,
      380
     ]
    },
    "numpy.random.seed": {
     "line number": [
      359
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      364,
      369,
      373,
      378,
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_laplace": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      387
     ]
    },
    "numpy.random.laplace": {
     "line number": [
      386
     ]
    },
    "numpy.random.seed": {
     "line number": [
      385
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_logistic": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      395
     ]
    },
    "numpy.random.logistic": {
     "line number": [
      394
     ]
    },
    "numpy.random.seed": {
     "line number": [
      393
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_lognormal": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      403
     ]
    },
    "numpy.random.lognormal": {
     "line number": [
      402
     ]
    },
    "numpy.random.seed": {
     "line number": [
      401
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_logseries": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      411
     ]
    },
    "numpy.random.logseries": {
     "line number": [
      410
     ]
    },
    "numpy.random.seed": {
     "line number": [
      409
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_multinomial": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      419
     ]
    },
    "numpy.random.multinomial": {
     "line number": [
      418
     ]
    },
    "numpy.random.seed": {
     "line number": [
      417
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_multivariate_normal": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      433
     ]
    },
    "numpy.random.multivariate_normal": {
     "line number": [
      432
     ]
    },
    "numpy.random.seed": {
     "line number": [
      428
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_negative_binomial": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      444
     ]
    },
    "numpy.random.negative_binomial": {
     "line number": [
      443
     ]
    },
    "numpy.random.seed": {
     "line number": [
      442
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_noncentral_chisquare": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      452
     ]
    },
    "numpy.random.noncentral_chisquare": {
     "line number": [
      451
     ]
    },
    "numpy.random.seed": {
     "line number": [
      450
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_noncentral_f": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      461
     ]
    },
    "numpy.random.noncentral_f": {
     "line number": [
      459
     ]
    },
    "numpy.random.seed": {
     "line number": [
      458
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_normal": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      469
     ]
    },
    "numpy.random.normal": {
     "line number": [
      468
     ]
    },
    "numpy.random.seed": {
     "line number": [
      467
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      472
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_pareto": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      477
     ]
    },
    "numpy.random.pareto": {
     "line number": [
      476
     ]
    },
    "numpy.random.seed": {
     "line number": [
      475
     ]
    },
    "numpy.testing.assert_array_almost_equal_nulp": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_poisson": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      491
     ]
    },
    "numpy.random.poisson": {
     "line number": [
      490
     ]
    },
    "numpy.random.seed": {
     "line number": [
      489
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_poisson_exceptions": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      499,
      500,
      501,
      502
     ]
    },
    "numpy.iinfo": {
     "line number": [
      497
     ]
    },
    "numpy.random.poisson": {
     "line number": [
      499,
      500,
      501,
      502
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      499,
      500,
      501,
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_power": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      507
     ]
    },
    "numpy.random.power": {
     "line number": [
      506
     ]
    },
    "numpy.random.seed": {
     "line number": [
      505
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_rand": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      109
     ]
    },
    "numpy.random.rand": {
     "line number": [
      108
     ]
    },
    "numpy.random.seed": {
     "line number": [
      107
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_randint": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      125
     ]
    },
    "numpy.random.randint": {
     "line number": [
      124
     ]
    },
    "numpy.random.seed": {
     "line number": [
      123
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_randn": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      117
     ]
    },
    "numpy.random.randn": {
     "line number": [
      116
     ]
    },
    "numpy.random.seed": {
     "line number": [
      115
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_random_integers": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      133
     ]
    },
    "numpy.random.random_integers": {
     "line number": [
      132
     ]
    },
    "numpy.random.seed": {
     "line number": [
      131
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_random_sample": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      141
     ]
    },
    "numpy.random.random_sample": {
     "line number": [
      140
     ]
    },
    "numpy.random.seed": {
     "line number": [
      139
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_rayleigh": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      515
     ]
    },
    "numpy.random.rayleigh": {
     "line number": [
      514
     ]
    },
    "numpy.random.seed": {
     "line number": [
      513
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      518
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_shuffle": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "conv": {
     "line number": [
      241,
      244
     ]
    },
    "numpy.asarray": {
     "line number": [
      237,
      239
     ]
    },
    "numpy.random.seed": {
     "line number": [
      240
     ]
    },
    "numpy.random.shuffle": {
     "line number": [
      242
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_shuffle_flexible": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      251
     ]
    },
    "numpy.dtype": {
     "line number": [
      250
     ]
    },
    "numpy.int32": {
     "line number": [
      250,
      250
     ]
    },
    "numpy.random.shuffle": {
     "line number": [
      254
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      255,
      256
     ]
    },
    "range": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_shuffle_masked": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      261
     ]
    },
    "numpy.ma.count_masked": {
     "line number": [
      262,
      263,
      266,
      268
     ]
    },
    "numpy.ma.masked_values": {
     "line number": [
      260,
      261
     ]
    },
    "numpy.random.shuffle": {
     "line number": [
      265,
      267
     ]
    },
    "numpy.reshape": {
     "line number": [
      260
     ]
    },
    "range": {
     "line number": [
      260,
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_cauchy": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      523
     ]
    },
    "numpy.random.seed": {
     "line number": [
      521
     ]
    },
    "numpy.random.standard_cauchy": {
     "line number": [
      522
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_exponential": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      531
     ]
    },
    "numpy.random.seed": {
     "line number": [
      529
     ]
    },
    "numpy.random.standard_exponential": {
     "line number": [
      530
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_gamma": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      539
     ]
    },
    "numpy.random.seed": {
     "line number": [
      537
     ]
    },
    "numpy.random.standard_gamma": {
     "line number": [
      538
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_normal": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      547
     ]
    },
    "numpy.random.seed": {
     "line number": [
      545
     ]
    },
    "numpy.random.standard_normal": {
     "line number": [
      546
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      550
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_t": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      555
     ]
    },
    "numpy.random.seed": {
     "line number": [
      553
     ]
    },
    "numpy.random.standard_t": {
     "line number": [
      554
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_triangular": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      564
     ]
    },
    "numpy.random.seed": {
     "line number": [
      561
     ]
    },
    "numpy.random.triangular": {
     "line number": [
      562
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      567
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_uniform": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      572
     ]
    },
    "numpy.random.seed": {
     "line number": [
      570
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      571
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_vonmises": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      581
     ]
    },
    "numpy.random.seed": {
     "line number": [
      579
     ]
    },
    "numpy.random.vonmises": {
     "line number": [
      580
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_wald": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      589
     ]
    },
    "numpy.random.seed": {
     "line number": [
      587
     ]
    },
    "numpy.random.wald": {
     "line number": [
      588
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      592
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_weibull": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      597
     ]
    },
    "numpy.random.seed": {
     "line number": [
      595
     ]
    },
    "numpy.random.weibull": {
     "line number": [
      596
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      600
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_zipf": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      605
     ]
    },
    "numpy.random.seed": {
     "line number": [
      603
     ]
    },
    "numpy.random.zipf": {
     "line number": [
      604
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestSetState.setUp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "numpy.random.RandomState": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_backwards_compatibility": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      90,
      91
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_basic": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      59
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_gaussian_reset": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      67
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_gaussian_reset_in_media_res": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      78
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_negative_binomial": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      85
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.random.tests.test_regression.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "numpy.testing.TestCase": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.random.tests.test_regression.TestRegression.test_VonMises_range": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      17,
      17
     ]
    },
    "numpy.linspace": {
     "line number": [
      15
     ]
    },
    "numpy.pi": {
     "line number": [
      17,
      17
     ]
    },
    "numpy.random.mtrand.vonmises": {
     "line number": [
      16
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_call_within_randomstate": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      70
     ]
    },
    "numpy.ones": {
     "line number": [
      75
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      69
     ]
    },
    "numpy.random.seed": {
     "line number": [
      72
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      75
     ]
    },
    "range": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_hypergeometric_range": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      21,
      22
     ]
    },
    "numpy.random.hypergeometric": {
     "line number": [
      21,
      22
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      21,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_logseries_convergence": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "float": {
     "line number": [
      32,
      36
     ]
    },
    "numpy.random.logseries": {
     "line number": [
      28
     ]
    },
    "numpy.random.seed": {
     "line number": [
      27
     ]
    },
    "numpy.sum": {
     "line number": [
      32,
      36
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      34,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_multivariate_normal_size_types": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      83
     ]
    },
    "numpy.int_": {
     "line number": [
      82
     ]
    },
    "numpy.random.multivariate_normal": {
     "line number": [
      81,
      82,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_permutation_longs": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "numpy.compat.long": {
     "line number": [
      44
     ]
    },
    "numpy.random.permutation": {
     "line number": [
      42,
      44
     ]
    },
    "numpy.random.seed": {
     "line number": [
      41,
      43
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_randint_range": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      54
     ]
    },
    "numpy.iinfo": {
     "line number": [
      49,
      50
     ]
    },
    "numpy.random.randint": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_shuffle_mixed_dimension": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "list": {
     "line number": [
      63
     ]
    },
    "numpy.random.seed": {
     "line number": [
      62
     ]
    },
    "numpy.random.shuffle": {
     "line number": [
      64
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.random.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      28
     ]
    },
    "print": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.show_config": {
  "data": {
   "shadows": "numpy.__config__.show"
  },
  "type": "import"
 },
 "numpy.str": {
  "data": {
   "shadows": "__builtin__.str"
  },
  "type": "import"
 },
 "numpy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.test": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "numpy.testing": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "numpy.testing.Tester": {
  "data": {
   "shadows": "NoseTester"
  },
  "type": "import"
 },
 "numpy.testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.dec": {
  "data": {
   "shadows": "decorators"
  },
  "type": "import"
 },
 "numpy.testing.decorators": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.decorators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.decorators.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.testing.decorators.deprecated": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "numpy.testing.decorators.deprecated.deprecate_decorator": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "conditional": {
     "line number": [
      264,
      266
     ]
    },
    "f": {
     "line number": [
      268,
      270
     ]
    },
    "isinstance": {
     "line number": [
      263
     ]
    },
    "numpy.testing.decorators.collections": {
     "line number": [
      263
     ]
    },
    "numpy.testing.decorators.nose": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.decorators.deprecated.deprecate_decorator._deprecated_imp": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      257,
      260
     ]
    },
    "DeprecationWarning": {
     "line number": [
      259
     ]
    },
    "f": {
     "line number": [
      255
     ]
    },
    "f.__name__": {
     "line number": [
      258,
      261
     ]
    },
    "len": {
     "line number": [
      256
     ]
    },
    "numpy.testing.decorators.warnings": {
     "line number": [
      253,
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.decorators.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.decorators.knownfailureif": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "fail_condition": {
     "line number": [
      202,
      204
     ]
    },
    "isinstance": {
     "line number": [
      201
     ]
    },
    "numpy.testing.decorators.collections": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.decorators.knownfailureif.knownfail_decorator": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "f": {
     "line number": [
      216
     ]
    },
    "numpy.testing.decorators.nose": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.decorators.knownfailureif.knownfail_decorator.knownfailer": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "KnownFailureTest": {
     "line number": [
      213
     ]
    },
    "f": {
     "line number": [
      215
     ]
    },
    "fail_val": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.decorators.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.testing.decorators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.decorators.setastest": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "numpy.testing.decorators.setastest.set_test": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "numpy.testing.decorators.skipif": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "numpy.testing.decorators.skipif.skip_decorator": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "f": {
     "line number": [
      157,
      162
     ]
    },
    "isinstance": {
     "line number": [
      125
     ]
    },
    "numpy.testing.decorators.collections": {
     "line number": [
      125
     ]
    },
    "numpy.testing.decorators.nose": {
     "line number": [
      157,
      162
     ]
    },
    "skip_condition": {
     "line number": [
      126,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.decorators.skipif.skip_decorator.get_msg": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "numpy.testing.decorators.skipif.skip_decorator.skipper_func": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "f": {
     "line number": [
      146
     ]
    },
    "get_msg": {
     "line number": [
      144
     ]
    },
    "numpy.testing.decorators.nose": {
     "line number": [
      144
     ]
    },
    "skip_val": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.decorators.skipif.skip_decorator.skipper_gen": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "f": {
     "line number": [
      151,
      153
     ]
    },
    "get_msg": {
     "line number": [
      151
     ]
    },
    "numpy.testing.decorators.nose": {
     "line number": [
      151
     ]
    },
    "skip_val": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.decorators.slow": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "numpy.testing.decorators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses": {
  "data": {
   "symbols_in_volume": {
    "numpy.testing.noseclasses.numpy": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.testing.noseclasses.ErrorClass": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClass"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.ErrorClassPlugin": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClassPlugin"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.KnownFailure": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "nose.plugins.errorclass.ErrorClass": {
     "line number": [
      313
     ]
    },
    "nose.plugins.errorclass.ErrorClassPlugin": {
     "line number": [
      306
     ]
    },
    "numpy.testing.noseclasses.KnownFailureTest": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.KnownFailure.configure": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.KnownFailure.options": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "numpy.testing.noseclasses.os": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.KnownFailureTest": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyDocTestCase": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "nose.plugins.doctests.DocTestCase": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyDocTestCase.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "numpy.testing.noseclasses.doctest": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDocTestFinder": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.testing.noseclasses.doctest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyDocTestFinder._find": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      103
     ]
    },
    "getattr": {
     "line number": [
      102,
      104
     ]
    },
    "inspect.isclass": {
     "line number": [
      87,
      95,
      107
     ]
    },
    "inspect.isfunction": {
     "line number": [
      107
     ]
    },
    "inspect.ismethod": {
     "line number": [
      108
     ]
    },
    "inspect.ismodule": {
     "line number": [
      84
     ]
    },
    "inspect.isroutine": {
     "line number": [
      87
     ]
    },
    "isinstance": {
     "line number": [
      101,
      103,
      108
     ]
    },
    "numpy.testing.noseclasses.doctest": {
     "line number": [
      72
     ]
    },
    "property": {
     "line number": [
      108
     ]
    },
    "staticmethod": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDocTestFinder._from_module": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      64
     ]
    },
    "hasattr": {
     "line number": [
      57
     ]
    },
    "isinstance": {
     "line number": [
      60
     ]
    },
    "numpy.testing.noseclasses.inspect": {
     "line number": [
      37,
      40,
      43,
      46,
      53,
      56
     ]
    },
    "object": {
     "line number": [
      37,
      40,
      43,
      46,
      53,
      56,
      57,
      60
     ]
    },
    "object.__globals__": {
     "line number": [
      39
     ]
    },
    "object.__module__": {
     "line number": [
      42,
      45,
      59
     ]
    },
    "object.__self__.__class__.__module__": {
     "line number": [
      52
     ]
    },
    "property": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "nose.plugins.doctests.Doctest": {
     "line number": [
      160
     ]
    },
    "numpy.testing.noseclasses.NumpyDocTestCase": {
     "line number": [
      172
     ]
    },
    "numpy.testing.noseclasses.NumpyDocTestFinder": {
     "line number": [
      174
     ]
    },
    "numpy.testing.noseclasses.NumpyOutputChecker": {
     "line number": [
      173
     ]
    },
    "numpy.testing.noseclasses.doctest": {
     "line number": [
      165,
      165
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyDoctest.afterContext": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "numpy.testing.noseclasses.numpy": {
     "line number": [
      270
     ]
    },
    "numpy.testing.noseclasses.print_state": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest.configure": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "nose.plugins.base.Plugin.configure": {
     "line number": [
      188
     ]
    },
    "numpy.testing.noseclasses.doctest": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest.loadTestsFromModule": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      247
     ]
    },
    "nose.plugins.doctests.log.debug": {
     "line number": [
      243
     ]
    },
    "nose.util.src": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest.options": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "nose.plugins.base.Plugin.options": {
     "line number": [
      178
     ]
    },
    "numpy.testing.noseclasses.os": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest.set_test_context": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      236
     ]
    },
    "get_package_name": {
     "line number": [
      218
     ]
    },
    "numpy.testing.noseclasses.numpy": {
     "line number": [
      231
     ]
    },
    "numpy.testing.noseclasses.os": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest.wantFile": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "nose.plugins.doctests.Doctest.wantFile": {
     "line number": [
      277
     ]
    },
    "numpy.testing.noseclasses.os": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyOutputChecker": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "numpy.testing.noseclasses.doctest": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyOutputChecker.check_output": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "numpy.testing.noseclasses.doctest": {
     "line number": [
      120,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyTestProgram": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "numpy.testing.noseclasses.nose": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyTestProgram.runTests": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "numpy.testing.noseclasses.nose": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.Plugin": {
  "data": {
   "shadows": "nose.plugins.base.Plugin"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.Unplugger": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "object": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.Unplugger.__init__": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.Unplugger.configure": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.Unplugger.options": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.ismethod": {
  "data": {
   "shadows": "inspect.ismethod"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.ismodule": {
  "data": {
   "shadows": "inspect.ismodule"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.isroutine": {
  "data": {
   "shadows": "inspect.isroutine"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.npd": {
  "data": {
   "shadows": "nose.plugins.doctests"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.print_state": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "numpy.testing.noseclasses.src": {
  "data": {
   "shadows": "nose.util.src"
  },
  "type": "import"
 },
 "numpy.testing.nosetester": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.nosetester.ModuleDeprecationWarning": {
  "data": {
   "shadows": "numpy.ModuleDeprecationWarning"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.NoseTester": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "object": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.nosetester.NoseTester.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      146
     ]
    },
    "getattr": {
     "line number": [
      151
     ]
    },
    "isinstance": {
     "line number": [
      149
     ]
    },
    "numpy.testing.nosetester.get_package_name": {
     "line number": [
      160
     ]
    },
    "numpy.testing.nosetester.os": {
     "line number": [
      147,
      149,
      150
     ]
    },
    "numpy.testing.nosetester.sys": {
     "line number": [
      143
     ]
    },
    "str": {
     "line number": [
      153
     ]
    },
    "type": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.nosetester.NoseTester._get_custom_doctester": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "NumpyDoctest": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.nosetester.NoseTester._show_system_info": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "numpy.testing.nosetester.import_nose": {
     "line number": [
      204
     ]
    },
    "numpy.testing.nosetester.nose": {
     "line number": [
      204,
      219
     ]
    },
    "numpy.testing.nosetester.numpy": {
     "line number": [
      207,
      208
     ]
    },
    "numpy.testing.nosetester.os": {
     "line number": [
      208,
      214
     ]
    },
    "numpy.testing.nosetester.scipy": {
     "line number": [
      213,
      214
     ]
    },
    "numpy.testing.nosetester.sys": {
     "line number": [
      217
     ]
    },
    "print": {
     "line number": [
      207,
      209,
      213,
      215,
      218,
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.nosetester.NoseTester._test_argv": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      186
     ]
    },
    "isinstance": {
     "line number": [
      185
     ]
    },
    "numpy.compat.basestring": {
     "line number": [
      185
     ]
    },
    "str": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.nosetester.NoseTester.bench": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "Unplugger": {
     "line number": [
      457
     ]
    },
    "numpy.testing.nosetester.import_nose": {
     "line number": [
      453
     ]
    },
    "numpy.testing.nosetester.nose": {
     "line number": [
      453,
      459
     ]
    },
    "numpy.testing.nosetester.os": {
     "line number": [
      450
     ]
    },
    "print": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.nosetester.NoseTester.prepare_test_args": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "KnownFailure": {
     "line number": [
      258
     ]
    },
    "Unplugger": {
     "line number": [
      272
     ]
    },
    "numpy.testing.nosetester.import_nose": {
     "line number": [
      245
     ]
    },
    "numpy.testing.nosetester.nose": {
     "line number": [
      259
     ]
    },
    "p": {
     "line number": [
      259,
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.nosetester.NoseTester.test": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      360,
      371
     ]
    },
    "FutureWarning": {
     "line number": [
      380
     ]
    },
    "NumpyTestProgram": {
     "line number": [
      386
     ]
    },
    "RuntimeWarning": {
     "line number": [
      360
     ]
    },
    "dict": {
     "line number": [
      360
     ]
    },
    "min": {
     "line number": [
      341
     ]
    },
    "numpy.ModuleDeprecationWarning": {
     "line number": [
      379
     ]
    },
    "numpy.testing.nosetester.doctest": {
     "line number": [
      355
     ]
    },
    "numpy.testing.nosetester.warnings": {
     "line number": [
      365,
      368,
      371,
      374,
      376,
      377,
      378,
      379,
      380
     ]
    },
    "print": {
     "line number": [
      347,
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.nosetester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.get_package_name": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "numpy.testing.nosetester.os": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.nosetester.import_nose": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      63,
      74
     ]
    },
    "numpy.testing.nosetester.nose": {
     "line number": [
      66,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.nosetester.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.nose.plugins.builtin": {
  "data": {
   "shadows": "nose.plugins.builtin"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.run_module_suite": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      83
     ]
    },
    "numpy.testing.nosetester.import_nose": {
     "line number": [
      85
     ]
    },
    "numpy.testing.nosetester.sys": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.nosetester.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.testing.nosetester.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.testing.numpytest": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.numpytest.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.testing.numpytest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.numpytest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.numpytest.importall": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      16
     ]
    },
    "Exception": {
     "line number": [
      32
     ]
    },
    "__import__": {
     "line number": [
      19
     ]
    },
    "exec": {
     "line number": [
      31
     ]
    },
    "isinstance": {
     "line number": [
      18
     ]
    },
    "numpy.testing.numpytest.os": {
     "line number": [
      22,
      23,
      24,
      25,
      27,
      27
     ]
    },
    "numpy.testing.numpytest.warnings": {
     "line number": [
      15
     ]
    },
    "print": {
     "line number": [
      33
     ]
    },
    "str": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.numpytest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.testing.numpytest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.numpytest.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.testing.print_coercion_tables": {
  "data": {
   "symbols_in_volume": {
    "numpy.testing.print_coercion_tables.print_cancast_table": {
     "line number": [
      72
     ]
    },
    "numpy.testing.print_coercion_tables.print_coercion_table": {
     "line number": [
      77,
      80,
      83,
      86,
      89
     ]
    },
    "numpy.typecodes": {
     "line number": [
      72,
      77,
      80,
      83,
      86,
      89
     ]
    },
    "print": {
     "line number": [
      71,
      73,
      74,
      75,
      76,
      78,
      79,
      81,
      82,
      84,
      85,
      87,
      88
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.testing.print_coercion_tables.GenericObject": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      20
     ]
    },
    "object": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.print_coercion_tables.GenericObject.__add__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.GenericObject.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.GenericObject.__radd__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.print_coercion_tables.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.print_coercion_tables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.print_coercion_tables.print_cancast_table": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "int": {
     "line number": [
      29
     ]
    },
    "numpy.can_cast": {
     "line number": [
      29
     ]
    },
    "print": {
     "line number": [
      23,
      24,
      25,
      27,
      29,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.print_coercion_table": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      64
     ]
    },
    "TypeError": {
     "line number": [
      66
     ]
    },
    "ValueError": {
     "line number": [
      62
     ]
    },
    "coltype": {
     "line number": [
      53
     ]
    },
    "isinstance": {
     "line number": [
      58
     ]
    },
    "numpy.add": {
     "line number": [
      57
     ]
    },
    "numpy.array": {
     "line number": [
      50
     ]
    },
    "numpy.dtype": {
     "line number": [
      61
     ]
    },
    "numpy.ndarray": {
     "line number": [
      58
     ]
    },
    "numpy.obj2sctype": {
     "line number": [
      40,
      47
     ]
    },
    "numpy.promote_types": {
     "line number": [
      55
     ]
    },
    "numpy.testing.print_coercion_tables.GenericObject": {
     "line number": [
      38,
      45
     ]
    },
    "print": {
     "line number": [
      33,
      34,
      35,
      42,
      68,
      69
     ]
    },
    "rowtype": {
     "line number": [
      50,
      50,
      52
     ]
    },
    "type": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.setup": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      12
     ]
    },
    "numpy.distutils.core.setup": {
     "line number": [
      14
     ]
    },
    "numpy.testing.setup.configuration": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.testing.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.testing.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "numpy.distutils.misc_util.Configuration": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.testing.test": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.testing.tests.test_decorators": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      184
     ]
    },
    "run_module_suite": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.testing.tests.test_decorators.DidntSkipException": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_decorators.KnownFailureTest": {
  "data": {
   "shadows": "numpy.testing.noseclasses.KnownFailureTest"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.test_deprecated": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      175,
      181
     ]
    },
    "ValueError": {
     "line number": [
      179
     ]
    },
    "assert_raises": {
     "line number": [
      175,
      179,
      181
     ]
    },
    "deprecated_func": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_deprecated.deprecated_func": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      161
     ]
    },
    "numpy.testing.tests.test_decorators.warnings": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_deprecated.deprecated_func2": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      167
     ]
    },
    "numpy.testing.tests.test_decorators.warnings": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_deprecated.deprecated_func3": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "numpy.testing.tests.test_decorators.warnings": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_deprecated.non_deprecated_func": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      28,
      29,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest.f_default": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest.f_isnottest": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest.f_istest": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      71,
      85
     ]
    },
    "f1": {
     "line number": [
      69
     ]
    },
    "f2": {
     "line number": [
      81
     ]
    },
    "numpy.testing.tests.test_decorators.DidntSkipException": {
     "line number": [
      70,
      82
     ]
    },
    "numpy.testing.tests.test_decorators.nose": {
     "line number": [
      72,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable.f1": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.testing.tests.test_decorators.DidntSkipException": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable.f2": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.testing.tests.test_decorators.DidntSkipException": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable.skip_tester": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_hardcoded": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      43,
      56
     ]
    },
    "f1": {
     "line number": [
      41
     ]
    },
    "f2": {
     "line number": [
      52
     ]
    },
    "numpy.testing.tests.test_decorators.DidntSkipException": {
     "line number": [
      42,
      53
     ]
    },
    "numpy.testing.tests.test_decorators.nose": {
     "line number": [
      44,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_hardcoded.f1": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.testing.tests.test_decorators.DidntSkipException": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_hardcoded.f2": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.testing.tests.test_decorators.DidntSkipException": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      134,
      148
     ]
    },
    "g1": {
     "line number": [
      129
     ]
    },
    "g2": {
     "line number": [
      145
     ]
    },
    "numpy.testing.noseclasses.KnownFailureTest": {
     "line number": [
      131,
      147
     ]
    },
    "numpy.testing.tests.test_decorators.DidntSkipException": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable.g1": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "range": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable.g2": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.testing.tests.test_decorators.DidntSkipException": {
     "line number": [
      141
     ]
    },
    "range": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable.skip_tester": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_hardcoded": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      100,
      113
     ]
    },
    "g1": {
     "line number": [
      95
     ]
    },
    "g2": {
     "line number": [
      110
     ]
    },
    "numpy.testing.noseclasses.KnownFailureTest": {
     "line number": [
      97,
      112
     ]
    },
    "numpy.testing.tests.test_decorators.DidntSkipException": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_hardcoded.g1": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "range": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_hardcoded.g2": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "numpy.testing.tests.test_decorators.DidntSkipException": {
     "line number": [
      107
     ]
    },
    "range": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_slow": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "assert_": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_slow.slow_func": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_doctesting": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      51
     ]
    },
    "numpy.testing.noseclasses.NumpyDoctest": {
     "line number": [
      56
     ]
    },
    "numpy.testing.tests.test_doctesting.argv": {
     "line number": [
      56
     ]
    },
    "numpy.testing.tests.test_doctesting.nose": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.testing.tests.test_doctesting.NumpyDoctest": {
  "data": {
   "shadows": "numpy.testing.noseclasses.NumpyDoctest"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_doctesting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_doctesting.argv": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.testing.tests.test_doctesting.check_empty_output": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_implicit_np": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_random_directive": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_skip": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_whitespace_enabled": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_doctesting.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_doctesting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      473
     ]
    },
    "run_module_suite": {
     "line number": [
      474
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils._GenericTest": {
     "line number": [
      201
     ]
    },
    "numpy.testing.tests.test_utils.unittest": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.setUp": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_complex": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      232,
      232,
      233,
      233,
      234,
      234
     ]
    },
    "numpy.array": {
     "line number": [
      232,
      233,
      234
     ]
    },
    "numpy.nan": {
     "line number": [
      232,
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_complex_item": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      224,
      224,
      225,
      225,
      226,
      226,
      227,
      227,
      228,
      228,
      229,
      229
     ]
    },
    "numpy.inf": {
     "line number": [
      226,
      226,
      229
     ]
    },
    "numpy.nan": {
     "line number": [
      225,
      225,
      226,
      226,
      227,
      228,
      228,
      229,
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_inf_item": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      217
     ]
    },
    "numpy.inf": {
     "line number": [
      215,
      215,
      216,
      216,
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_nan_item": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      207,
      209,
      211
     ]
    },
    "numpy.inf": {
     "line number": [
      210,
      212
     ]
    },
    "numpy.nan": {
     "line number": [
      206,
      206,
      208,
      210,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_simple_item": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils.unittest": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.setUp": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_nan_array": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      267,
      269,
      271
     ]
    },
    "numpy.array": {
     "line number": [
      263,
      264,
      265
     ]
    },
    "numpy.inf": {
     "line number": [
      265
     ]
    },
    "numpy.nan": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_nan_items": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      279,
      281,
      283
     ]
    },
    "numpy.array": {
     "line number": [
      275,
      276,
      277
     ]
    },
    "numpy.inf": {
     "line number": [
      277
     ]
    },
    "numpy.nan": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_simple_arrays": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      249
     ]
    },
    "numpy.array": {
     "line number": [
      244,
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_simple_items": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils._GenericTest": {
     "line number": [
      169
     ]
    },
    "numpy.testing.tests.test_utils.unittest": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.setUp": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_inf": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      198
     ]
    },
    "numpy.array": {
     "line number": [
      195
     ]
    },
    "numpy.inf": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_nan": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      187,
      189,
      191
     ]
    },
    "numpy.array": {
     "line number": [
      183,
      184,
      185
     ]
    },
    "numpy.inf": {
     "line number": [
      185
     ]
    },
    "numpy.nan": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_simple": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      179
     ]
    },
    "numpy.array": {
     "line number": [
      174,
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils.unittest": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_big_float32": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "assert_array_almost_equal_nulp": {
     "line number": [
      398
     ]
    },
    "numpy.float32": {
     "line number": [
      396
     ]
    },
    "numpy.random.randn": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_big_float64": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      405
     ]
    },
    "numpy.random.randn": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_big_float64.failure": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "assert_array_almost_equal_nulp": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      412
     ]
    },
    "numpy.random.randn": {
     "line number": [
      408,
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex.failure": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "assert_array_almost_equal_nulp": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex2": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "assert_array_almost_equal_nulp": {
     "line number": [
      418
     ]
    },
    "numpy.array": {
     "line number": [
      416
     ]
    },
    "numpy.complex": {
     "line number": [
      416
     ]
    },
    "numpy.random.randn": {
     "line number": [
      415,
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_simple": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "assert_array_almost_equal_nulp": {
     "line number": [
      385
     ]
    },
    "numpy.finfo": {
     "line number": [
      384
     ]
    },
    "numpy.float64": {
     "line number": [
      384
     ]
    },
    "numpy.max": {
     "line number": [
      385
     ]
    },
    "numpy.ones": {
     "line number": [
      383
     ]
    },
    "numpy.random.randn": {
     "line number": [
      382
     ]
    },
    "numpy.random.seed": {
     "line number": [
      380
     ]
    },
    "range": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_simple2": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      393
     ]
    },
    "numpy.random.randn": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_simple2.failure": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "assert_array_almost_equal_nulp": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils._GenericTest": {
     "line number": [
      56
     ]
    },
    "numpy.testing.tests.test_utils.unittest": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.setUp": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank1": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "foo": {
     "line number": [
      73,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank1.foo": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank3": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "foo": {
     "line number": [
      92,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank3.foo": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_nan_array": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      100,
      101,
      105
     ]
    },
    "numpy.nan": {
     "line number": [
      100,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_recarrays": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      121,
      128
     ]
    },
    "numpy.float": {
     "line number": [
      121,
      121,
      128,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_string_arrays": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      110,
      111,
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils.unittest": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_simple": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      360,
      366,
      370,
      374
     ]
    },
    "assert_allclose": {
     "line number": [
      359,
      360,
      365,
      366,
      369,
      370,
      373,
      374
     ]
    },
    "numpy.array": {
     "line number": [
      362,
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils.TestArrayEqual": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestEqual.setUp": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_complex": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      164,
      164,
      165,
      165
     ]
    },
    "numpy.array": {
     "line number": [
      164,
      165
     ]
    },
    "numpy.nan": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_complex_item": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      154,
      154,
      155,
      155,
      156,
      156,
      157,
      157,
      158,
      158
     ]
    },
    "numpy.inf": {
     "line number": [
      158
     ]
    },
    "numpy.nan": {
     "line number": [
      155,
      155,
      156,
      157,
      157,
      158,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_inf_items": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      145,
      145,
      146,
      146,
      147,
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_nan_items": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      139,
      139,
      140,
      140,
      141,
      141,
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_negative_zero": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "numpy.NZERO": {
     "line number": [
      161
     ]
    },
    "numpy.PZERO": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_non_numeric": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils.unittest": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestRaises.does_not_raise_exception": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.raises_exception": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.setUp": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.setUp.MyException": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_catch_no_raise": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      313,
      316
     ]
    },
    "raises": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_correct_catch": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "raises": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_wrong_exception": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      308
     ]
    },
    "RuntimeError": {
     "line number": [
      304,
      305
     ]
    },
    "raises": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils.unittest": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestULP.test_double": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "assert_array_max_ulp": {
     "line number": [
      437
     ]
    },
    "numpy.finfo": {
     "line number": [
      436
     ]
    },
    "numpy.float64": {
     "line number": [
      434,
      435,
      436
     ]
    },
    "numpy.ones": {
     "line number": [
      434
     ]
    },
    "numpy.random.randn": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_equal": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "assert_array_max_ulp": {
     "line number": [
      423
     ]
    },
    "numpy.random.randn": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_inf": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "assert_array_max_ulp": {
     "line number": [
      443
     ]
    },
    "numpy.array": {
     "line number": [
      441,
      442
     ]
    },
    "numpy.finfo": {
     "line number": [
      442
     ]
    },
    "numpy.float32": {
     "line number": [
      440
     ]
    },
    "numpy.float64": {
     "line number": [
      440
     ]
    },
    "numpy.inf": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_nan": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      458,
      461,
      464,
      467,
      470
     ]
    },
    "assert_array_max_ulp": {
     "line number": [
      459,
      462,
      465,
      468,
      471
     ]
    },
    "numpy.NZERO": {
     "line number": [
      457
     ]
    },
    "numpy.PZERO": {
     "line number": [
      456
     ]
    },
    "numpy.array": {
     "line number": [
      452,
      453,
      454,
      455,
      456,
      457
     ]
    },
    "numpy.finfo": {
     "line number": [
      454,
      455
     ]
    },
    "numpy.float32": {
     "line number": [
      447,
      448
     ]
    },
    "numpy.float64": {
     "line number": [
      447
     ]
    },
    "numpy.inf": {
     "line number": [
      452
     ]
    },
    "numpy.nan": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_single": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "assert_array_max_ulp": {
     "line number": [
      430
     ]
    },
    "numpy.finfo": {
     "line number": [
      429
     ]
    },
    "numpy.float32": {
     "line number": [
      427,
      428,
      429
     ]
    },
    "numpy.ones": {
     "line number": [
      427
     ]
    },
    "numpy.random.randn": {
     "line number": [
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils.unittest": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      328
     ]
    },
    "UserWarning": {
     "line number": [
      325
     ]
    },
    "assert_equal": {
     "line number": [
      325,
      329,
      332
     ]
    },
    "assert_no_warnings": {
     "line number": [
      329
     ]
    },
    "assert_raises": {
     "line number": [
      328
     ]
    },
    "assert_warns": {
     "line number": [
      325
     ]
    },
    "numpy.testing.tests.test_utils.sys": {
     "line number": [
      324,
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn.f": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "numpy.testing.tests.test_utils.warnings": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn_wrong_warning": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      346,
      352
     ]
    },
    "UserWarning": {
     "line number": [
      344
     ]
    },
    "assert_warns": {
     "line number": [
      344
     ]
    },
    "numpy.testing.tests.test_utils.sys": {
     "line number": [
      340,
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn_wrong_warning.f": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      337
     ]
    },
    "numpy.testing.tests.test_utils.warnings": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "object": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils._GenericTest._test_equal": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest._test_not_equal": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      18,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_diffshape": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      46,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank1_eq": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      25,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank1_noteq": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      32,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank2_eq": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_objarray": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      53
     ]
    },
    "numpy.object": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      13
     ]
    },
    "__name__": {
     "line number": [
      101
     ]
    },
    "numpy.core.multiarray.__file__": {
     "line number": [
      11
     ]
    },
    "numpy.ctypeslib.load_library": {
     "line number": [
      11
     ]
    },
    "run_module_suite": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.tests.test_ctypeslib.TestLoadLibrary": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "numpy.tests.test_ctypeslib.TestLoadLibrary.test_basic": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      23
     ]
    },
    "numpy.core.multiarray.__file__": {
     "line number": [
      22
     ]
    },
    "numpy.ctypeslib.load_library": {
     "line number": [
      21
     ]
    },
    "numpy.tests.test_ctypeslib._HAS_CTYPE": {
     "line number": [
      17
     ]
    },
    "numpy.tests.test_ctypeslib.cdll": {
     "line number": [
      21
     ]
    },
    "numpy.tests.test_ctypeslib.sys": {
     "line number": [
      18
     ]
    },
    "print": {
     "line number": [
      26
     ]
    },
    "str": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestLoadLibrary.test_basic2": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      38,
      40
     ]
    },
    "numpy.core.multiarray.__file__": {
     "line number": [
      37
     ]
    },
    "numpy.ctypeslib.load_library": {
     "line number": [
      36
     ]
    },
    "numpy.distutils.misc_util.get_shared_lib_extension": {
     "line number": [
      35
     ]
    },
    "numpy.tests.test_ctypeslib._HAS_CTYPE": {
     "line number": [
      28
     ]
    },
    "numpy.tests.test_ctypeslib.cdll": {
     "line number": [
      36
     ]
    },
    "numpy.tests.test_ctypeslib.sys": {
     "line number": [
      29
     ]
    },
    "print": {
     "line number": [
      39,
      43
     ]
    },
    "str": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_dtype": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      56,
      69
     ]
    },
    "numpy.array": {
     "line number": [
      49,
      52,
      55,
      57
     ]
    },
    "numpy.ctypeslib.ndpointer": {
     "line number": [
      48,
      51,
      54,
      62,
      65
     ]
    },
    "numpy.dtype": {
     "line number": [
      53,
      61,
      64,
      67
     ]
    },
    "numpy.float64": {
     "line number": [
      59
     ]
    },
    "numpy.intc": {
     "line number": [
      47,
      59
     ]
    },
    "numpy.zeros": {
     "line number": [
      63,
      66,
      69,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_flags": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      95,
      98
     ]
    },
    "numpy.array": {
     "line number": [
      91,
      98
     ]
    },
    "numpy.ctypeslib.ndpointer": {
     "line number": [
      92,
      94,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_ndim": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      76,
      78
     ]
    },
    "numpy.array": {
     "line number": [
      75,
      76,
      78,
      79,
      81
     ]
    },
    "numpy.ctypeslib.ndpointer": {
     "line number": [
      74,
      77,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_shape": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      86
     ]
    },
    "numpy.array": {
     "line number": [
      85,
      86,
      88
     ]
    },
    "numpy.ctypeslib.ndpointer": {
     "line number": [
      84,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib._HAS_CTYPE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.tests.test_ctypeslib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.cdll": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.tests.test_ctypeslib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.get_shared_lib_extension": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_shared_lib_extension"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.load_library": {
  "data": {
   "shadows": "numpy.ctypeslib.load_library"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.ndpointer": {
  "data": {
   "shadows": "numpy.ctypeslib.ndpointer"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      54
     ]
    },
    "numpy.testing.run_module_suite": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.tests.test_matlib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.numpy.matlib": {
  "data": {
   "shadows": "numpy.matlib"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.test_empty": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      9
     ]
    },
    "numpy.matlib.empty": {
     "line number": [
      8
     ]
    },
    "numpy.matrix": {
     "line number": [
      9
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      9,
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_eye": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "int": {
     "line number": [
      31
     ]
    },
    "numpy.matlib.eye": {
     "line number": [
      31
     ]
    },
    "numpy.matrix": {
     "line number": [
      32
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_identity": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.int": {
     "line number": [
      27
     ]
    },
    "numpy.matlib.identity": {
     "line number": [
      27
     ]
    },
    "numpy.matrix": {
     "line number": [
      28
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_ones": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.matlib.ones": {
     "line number": [
      13,
      17
     ]
    },
    "numpy.matrix": {
     "line number": [
      14,
      17
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      13,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_rand": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.matlib.rand": {
     "line number": [
      37
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_randn": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.matlib.randn": {
     "line number": [
      42
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_repmat": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      47
     ]
    },
    "numpy.array": {
     "line number": [
      49
     ]
    },
    "numpy.matlib.repmat": {
     "line number": [
      48
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_zeros": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.matlib.zeros": {
     "line number": [
      20,
      24
     ]
    },
    "numpy.matrix": {
     "line number": [
      21,
      24
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      20,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "numpy.unicode": {
  "data": {
   "shadows": "__builtin__.unicode"
  },
  "type": "import"
 },
 "numpy.version": {
  "data": {
   "symbols_in_volume": {
    "numpy.version.full_version": {
     "line number": [
      10
     ]
    },
    "numpy.version.release": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "module"
 },
 "numpy.version.full_version": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.version.git_revision": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.version.release": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.version.short_version": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.version.version": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}