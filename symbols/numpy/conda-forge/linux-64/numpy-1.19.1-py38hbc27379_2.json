{
 "numpy": {
  "lineno": null,
  "symbols_in_volume": [
   "builtins.int",
   "builtins.str",
   "numpy._pytesttester.PytestTester",
   "os.environ.get",
   "os.uname",
   "sys.platform",
   "sys.stderr.write",
   "sys.version_info",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "module"
 },
 "numpy.__config__": {
  "lineno": null,
  "symbols_in_volume": [
   "os.add_dll_directory",
   "os.environ",
   "os.environ.setdefault",
   "os.path.dirname",
   "os.path.isdir",
   "os.path.join",
   "os.pathsep",
   "sys.platform",
   "sys.version_info"
  ],
  "type": "module"
 },
 "numpy.__config__.get_info": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.__config__.show": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.__dir__": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.__getattr__": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.testing"
  ],
  "type": "function"
 },
 "numpy._distributor_init": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy._globals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy._globals.ModuleDeprecationWarning": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy._globals.VisibleDeprecationWarning": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy._globals._NoValueType": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy._globals._NoValueType.__new__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy._globals._NoValueType.__reduce__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy._globals._NoValueType.__repr__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy._mac_os_check": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy._pytesttester": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy._pytesttester.PytestTester": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy._pytesttester.PytestTester.__call__": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.testing.IS_PYPY",
   "os.path.abspath",
   "pytest.main",
   "sys.modules",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy._pytesttester.PytestTester.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy._pytesttester._show_numpy_info": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.__version__",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy._sanity_check": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.compat._inspect": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.compat._inspect.formatargspec": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat._inspect.formatargvalues": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat._inspect.formatargvalues.convert": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat._inspect.getargs": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat._inspect.getargspec": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat._inspect.getargvalues": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat._inspect.iscode": {
  "lineno": 41,
  "symbols_in_volume": [
   "types.CodeType"
  ],
  "type": "function"
 },
 "numpy.compat._inspect.isfunction": {
  "lineno": 26,
  "symbols_in_volume": [
   "types.FunctionType"
  ],
  "type": "function"
 },
 "numpy.compat._inspect.ismethod": {
  "lineno": 13,
  "symbols_in_volume": [
   "types.MethodType"
  ],
  "type": "function"
 },
 "numpy.compat._inspect.joinseq": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat._inspect.strseq": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k": {
  "lineno": null,
  "symbols_in_volume": [
   "os.PathLike",
   "os.fspath",
   "sys.version_info"
  ],
  "type": "module"
 },
 "numpy.compat.py3k._PurePath__fspath__": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k.asbytes": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k.asbytes_nested": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k.asstr": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k.asunicode": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k.asunicode_nested": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k.contextlib_nullcontext": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.compat.py3k.contextlib_nullcontext.__enter__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k.contextlib_nullcontext.__exit__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k.contextlib_nullcontext.__init__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k.getexception": {
  "lineno": 64,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "numpy.compat.py3k.is_pathlib_path": {
  "lineno": 79,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.compat.py3k.isfileobj": {
  "lineno": 53,
  "symbols_in_volume": [
   "io.BufferedReader",
   "io.BufferedWriter",
   "io.FileIO"
  ],
  "type": "function"
 },
 "numpy.compat.py3k.npy_load_module": {
  "lineno": 109,
  "symbols_in_volume": [
   "importlib.machinery.SourceFileLoader"
  ],
  "type": "function"
 },
 "numpy.compat.py3k.open_latin1": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.py3k.os_PathLike": {
  "lineno": 143,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "numpy.compat.py3k.os_PathLike.__fspath__": {
  "lineno": 146,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.compat.py3k.os_PathLike.__subclasshook__": {
  "lineno": 151,
  "symbols_in_volume": [
   "pathlib.PurePath"
  ],
  "type": "function"
 },
 "numpy.compat.py3k.os_fspath": {
  "lineno": 158,
  "symbols_in_volume": [
   "pathlib.PurePath"
  ],
  "type": "function"
 },
 "numpy.compat.py3k.sixu": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.compat.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "numpy.compat.setup.configuration": {
  "lineno": 1,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration"
  ],
  "type": "function"
 },
 "numpy.compat.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.compat.tests.test_compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.compat.tests.test_compat.test_isfileobj": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.compat.isfileobj",
   "numpy.testing.assert_",
   "numpy.testing.tempdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "hypothesis.settings.load_profile",
   "hypothesis.settings.register_profile"
  ],
  "type": "module"
 },
 "numpy.conftest.add_np": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numpy.conftest.check_fpu_mode": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.get_fpu_mode",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numpy.conftest.pytest_addoption": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.conftest.pytest_configure": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.conftest.pytest_itemcollected": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.get_fpu_mode",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "numpy.conftest.pytest_sessionstart": {
  "lineno": 44,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "numpy.core": {
  "lineno": null,
  "symbols_in_volume": [
   "copyreg",
   "copyreg.pickle",
   "numpy._pytesttester.PytestTester",
   "numpy.version.version",
   "os",
   "os.environ",
   "sys.executable",
   "sys.modules.__path__",
   "sys.version_info"
  ],
  "type": "module"
 },
 "numpy.core._add_newdocs": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.core.function_base.add_newdoc"
  ],
  "type": "module"
 },
 "numpy.core._add_newdocs.add_newdoc_for_scalar_type": {
  "lineno": 6709,
  "symbols_in_volume": [
   "numpy.core.dtype",
   "numpy.core.function_base.add_newdoc",
   "numpy.core.numerictypes"
  ],
  "type": "function"
 },
 "numpy.core._add_newdocs.numeric_type_aliases": {
  "lineno": 6673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._add_newdocs.numeric_type_aliases.type_aliases_gen": {
  "lineno": 6674,
  "symbols_in_volume": [
   "numpy.core.numerictypes"
  ],
  "type": "function"
 },
 "numpy.core._asarray": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core._asarray.asanyarray": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._asarray.asarray": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._asarray.ascontiguousarray": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._asarray.asfortranarray": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._asarray.require": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._dtype": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core._dtype.__repr__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._dtype.__str__": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.flexible"
  ],
  "type": "function"
 },
 "numpy.core._dtype._byte_order_str": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core._dtype._construction_repr": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._dtype._datetime_metadata_str": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.datetime_data"
  ],
  "type": "function"
 },
 "numpy.core._dtype._is_packed": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._dtype._isunsized": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._dtype._kind_name": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._dtype._name_get": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.timedelta64",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core._dtype._name_includes_bit_suffix": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.flexible",
   "numpy.issubdtype",
   "numpy.object_"
  ],
  "type": "function"
 },
 "numpy.core._dtype._scalar_str": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.datetime64",
   "numpy.issubdtype",
   "numpy.number",
   "numpy.object_",
   "numpy.string_",
   "numpy.timedelta64",
   "numpy.unicode_",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core._dtype._struct_dict_str": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._dtype._struct_list_str": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._dtype._struct_str": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core._dtype._subarray_str": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._dtype._unpack_field": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._dtype_ctypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core._dtype_ctypes._from_ctypes_array": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core._dtype_ctypes._from_ctypes_scalar": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core._dtype_ctypes._from_ctypes_structure": {
  "lineno": 36,
  "symbols_in_volume": [
   "ctypes.alignment",
   "ctypes.sizeof",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core._dtype_ctypes._from_ctypes_union": {
  "lineno": 83,
  "symbols_in_volume": [
   "ctypes.sizeof",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core._dtype_ctypes.dtype_from_ctypes_type": {
  "lineno": 100,
  "symbols_in_volume": [
   "_ctypes.Array",
   "_ctypes.Structure",
   "_ctypes.Union",
   "_ctypes._Pointer"
  ],
  "type": "function"
 },
 "numpy.core._exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core._exceptions.AxisError": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.core._exceptions.AxisError.__init__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions.TooHardError": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.core._exceptions.UFuncTypeError": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._exceptions.UFuncTypeError.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._ArrayMemoryError": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._exceptions._ArrayMemoryError.__init__": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._ArrayMemoryError.__str__": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._ArrayMemoryError._size_to_string": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._ArrayMemoryError._total_size": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._UFuncBinaryResolutionError": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._exceptions._UFuncBinaryResolutionError.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._UFuncBinaryResolutionError.__str__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._UFuncCastingError": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._exceptions._UFuncCastingError.__init__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._UFuncInputCastingError": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._exceptions._UFuncInputCastingError.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._UFuncInputCastingError.__str__": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._UFuncNoLoopError": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._exceptions._UFuncNoLoopError.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._UFuncNoLoopError.__str__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._UFuncOutputCastingError": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._exceptions._UFuncOutputCastingError.__init__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._UFuncOutputCastingError.__str__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._exceptions._display_as_base": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.core._exceptions._unpack_tuple": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal": {
  "lineno": null,
  "symbols_in_volume": [
   "ctypes",
   "platform.python_implementation",
   "re.compile",
   "sys.byteorder"
  ],
  "type": "module"
 },
 "numpy.core._internal._Stream": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._internal._Stream.__bool__": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._Stream.__init__": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._Stream.advance": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._Stream.consume": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._Stream.consume_until": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._Stream.next": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.__dtype_from_pep3118": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._add_trailing_padding": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._array_descr": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._commastring": {
  "lineno": 157,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "numpy.core._internal._copy_fields": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._ctypes": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._internal._ctypes.__init__": {
  "lineno": 249,
  "symbols_in_volume": [
   "ctypes"
  ],
  "type": "function"
 },
 "numpy.core._internal._ctypes._as_parameter_": {
  "lineno": 344,
  "symbols_in_volume": [
   "ctypes.c_void_p"
  ],
  "type": "function"
 },
 "numpy.core._internal._ctypes.data": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._ctypes.data_as": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._ctypes.shape": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._ctypes.shape_as": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._ctypes.strides": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._ctypes.strides_as": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._dtype_from_pep3118": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._fix_names": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._gcd": {
  "lineno": 753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._getfield_is_safe": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._getintp_ctype": {
  "lineno": 216,
  "symbols_in_volume": [
   "ctypes",
   "ctypes.c_int",
   "ctypes.c_long",
   "ctypes.c_longlong",
   "numpy.intp"
  ],
  "type": "function"
 },
 "numpy.core._internal._lcm": {
  "lineno": 759,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._makenames_list": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._missing_ctypes": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._internal._missing_ctypes.c_void_p": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._internal._missing_ctypes.c_void_p.__init__": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._missing_ctypes.cast": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._newnames": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._prod": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._reconstruct": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._ufunc_doc_signature_formatter": {
  "lineno": 781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._usefields": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal._view_is_safe": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.array_function_errmsg_formatter": {
  "lineno": 774,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.array_ufunc_errmsg_formatter": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.dummy_ctype": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._internal.dummy_ctype.__call__": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.dummy_ctype.__eq__": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.dummy_ctype.__init__": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.dummy_ctype.__mul__": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.dummy_ctype.__ne__": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.npy_ctypes_check": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.recursive": {
  "lineno": 845,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._internal.recursive.__call__": {
  "lineno": 872,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._internal.recursive.__init__": {
  "lineno": 870,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._methods": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.core.numerictypes.cdouble",
   "numpy.core.numerictypes.clongdouble",
   "numpy.core.numerictypes.csingle",
   "numpy.core.numerictypes.double",
   "numpy.core.numerictypes.dtype",
   "numpy.core.numerictypes.longdouble",
   "numpy.core.numerictypes.single",
   "numpy.core.umath.add.reduce",
   "numpy.core.umath.logical_and.reduce",
   "numpy.core.umath.logical_or.reduce",
   "numpy.core.umath.maximum.reduce",
   "numpy.core.umath.minimum.reduce",
   "numpy.core.umath.multiply.reduce"
  ],
  "type": "module"
 },
 "numpy.core._methods._all": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._methods._amax": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy._globals._NoValue"
  ],
  "type": "function"
 },
 "numpy.core._methods._amin": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy._globals._NoValue"
  ],
  "type": "function"
 },
 "numpy.core._methods._any": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._methods._clip": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.core.umath.clip",
   "numpy.core.umath.maximum",
   "numpy.core.umath.minimum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core._methods._clip_dep_invoke_with_casting": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.core._exceptions._UFuncOutputCastingError",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core._methods._clip_dep_is_byte_swapped": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.core.multiarray.ndarray"
  ],
  "type": "function"
 },
 "numpy.core._methods._clip_dep_is_scalar_nan": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.core.fromnumeric.ndim",
   "numpy.core.umath.isnan"
  ],
  "type": "function"
 },
 "numpy.core._methods._count_reduce_items": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.core.multiarray.normalize_axis_index"
  ],
  "type": "function"
 },
 "numpy.core._methods._dump": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.compat.contextlib_nullcontext",
   "numpy.compat.os_fspath",
   "numpy.compat.pickle.dump"
  ],
  "type": "function"
 },
 "numpy.core._methods._dumps": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.compat.pickle.dumps"
  ],
  "type": "function"
 },
 "numpy.core._methods._mean": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.core._asarray.asanyarray",
   "numpy.core.multiarray.dtype",
   "numpy.core.multiarray.ndarray",
   "numpy.core.numerictypes.bool_",
   "numpy.core.numerictypes.float16",
   "numpy.core.numerictypes.integer",
   "numpy.core.umath.true_divide",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core._methods._prod": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy._globals._NoValue"
  ],
  "type": "function"
 },
 "numpy.core._methods._ptp": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.core.umath.subtract"
  ],
  "type": "function"
 },
 "numpy.core._methods._std": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.core.multiarray.ndarray",
   "numpy.core.umath.sqrt"
  ],
  "type": "function"
 },
 "numpy.core._methods._sum": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy._globals._NoValue"
  ],
  "type": "function"
 },
 "numpy.core._methods._var": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.core._asarray.asanyarray",
   "numpy.core.multiarray.dtype",
   "numpy.core.multiarray.ndarray",
   "numpy.core.numerictypes.bool_",
   "numpy.core.numerictypes.floating",
   "numpy.core.numerictypes.integer",
   "numpy.core.umath.add",
   "numpy.core.umath.conjugate",
   "numpy.core.umath.multiply",
   "numpy.core.umath.true_divide",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core._string_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core._string_helpers.english_capitalize": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._string_helpers.english_lower": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._string_helpers.english_upper": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._type_aliases": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.compat.unicode",
   "numpy.core._string_helpers.english_lower",
   "numpy.core.multiarray.typeinfo.items"
  ],
  "type": "module"
 },
 "numpy.core._type_aliases.TypeNADict": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._type_aliases.TypeNADict.__getitem__": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy._globals.VisibleDeprecationWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core._type_aliases.TypeNADict.get": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy._globals.VisibleDeprecationWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core._type_aliases._add_aliases": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.core._string_helpers.english_capitalize"
  ],
  "type": "function"
 },
 "numpy.core._type_aliases._add_array_type": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._type_aliases._add_integer_aliases": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._type_aliases._add_types": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._type_aliases._bits_of": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.core.multiarray.dtype"
  ],
  "type": "function"
 },
 "numpy.core._type_aliases._set_array_types": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.core.multiarray.dtype"
  ],
  "type": "function"
 },
 "numpy.core._type_aliases._set_up_aliases": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._type_aliases.bitname": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.core._dtype._kind_name",
   "numpy.core.multiarray.dtype"
  ],
  "type": "function"
 },
 "numpy.core._ufunc_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core._ufunc_config._setdef": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_config._unspecified": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core._ufunc_config.errstate": {
  "lineno": 369,
  "symbols_in_volume": [
   "contextlib.ContextDecorator"
  ],
  "type": "class"
 },
 "numpy.core._ufunc_config.errstate.__enter__": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_config.errstate.__exit__": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_config.errstate.__init__": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_config.getbufsize": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_config.geterr": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_config.geterrcall": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_config.setbufsize": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_config.seterr": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_config.seterrcall": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_reconstruct": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core._ufunc_reduce": {
  "lineno": 128,
  "symbols_in_volume": [
   "pickle.whichmodule"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "module"
 },
 "numpy.core.arrayprint.BoolFormat": {
  "lineno": 1136,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.arrayprint.BoolFormat.__call__": {
  "lineno": 1142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.BoolFormat.__init__": {
  "lineno": 1137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.ComplexFloatingFormat": {
  "lineno": 1146,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.arrayprint.ComplexFloatingFormat.__call__": {
  "lineno": 1168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.ComplexFloatingFormat.__init__": {
  "lineno": 1148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.DatetimeFormat": {
  "lineno": 1205,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.arrayprint.DatetimeFormat.__call__": {
  "lineno": 1225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.DatetimeFormat.__init__": {
  "lineno": 1206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.DatetimeFormat._format_non_nat": {
  "lineno": 1230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.FloatingFormat": {
  "lineno": 834,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.arrayprint.FloatingFormat.__call__": {
  "lineno": 947,
  "symbols_in_volume": [
   "numpy.isfinite",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint.FloatingFormat.__init__": {
  "lineno": 836,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.FloatingFormat.fillFormat": {
  "lineno": 863,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.signbit"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint.IntegerFormat": {
  "lineno": 1123,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.arrayprint.IntegerFormat.__call__": {
  "lineno": 1132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.IntegerFormat.__init__": {
  "lineno": 1124,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint.StructuredVoidFormat": {
  "lineno": 1252,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.arrayprint.StructuredVoidFormat.__call__": {
  "lineno": 1277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.StructuredVoidFormat.__init__": {
  "lineno": 1260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.StructuredVoidFormat.from_data": {
  "lineno": 1263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.SubArrayFormat": {
  "lineno": 1242,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.arrayprint.SubArrayFormat.__call__": {
  "lineno": 1246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.SubArrayFormat.__init__": {
  "lineno": 1243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.TimedeltaFormat": {
  "lineno": 1237,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.arrayprint.TimedeltaFormat._format_non_nat": {
  "lineno": 1238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._TimelikeFormat": {
  "lineno": 1179,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.arrayprint._TimelikeFormat.__call__": {
  "lineno": 1198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._TimelikeFormat.__init__": {
  "lineno": 1180,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint._TimelikeFormat._format_non_nat": {
  "lineno": 1194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._array2string": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._array2string_dispatcher": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._array_repr_dispatcher": {
  "lineno": 1412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._array_repr_implementation": {
  "lineno": 1365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._array_str_dispatcher": {
  "lineno": 1493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._array_str_implementation": {
  "lineno": 1473,
  "symbols_in_volume": [
   "numpy.ndarray.__getitem__"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint._extendLine": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._formatArray": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._formatArray.recurser": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._get_format_function": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._get_formatdict": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._get_formatdict.indirect": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._guarded_repr_or_str": {
  "lineno": 1466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._leading_trailing": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.index_exp"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint._make_options_dict": {
  "lineno": 60,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.isnan",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint._none_or_positive_arg": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._object_format": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._recursive_guard": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._recursive_guard.decorating_function": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint._recursive_guard.decorating_function.wrapper": {
  "lineno": 461,
  "symbols_in_volume": [
   "_dummy_thread.get_ident",
   "functools.wraps"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint._void_scalar_repr": {
  "lineno": 1288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.array2string": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy._NoValue",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint.array_repr": {
  "lineno": 1417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.array_str": {
  "lineno": 1498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.dtype_is_implied": {
  "lineno": 1304,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint.dtype_short_repr": {
  "lineno": 1340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.format_float_positional": {
  "lineno": 1046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.format_float_scientific": {
  "lineno": 977,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.get_printoptions": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.printoptions": {
  "lineno": 289,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "numpy.get_printoptions",
   "numpy.set_printoptions"
  ],
  "type": "function"
 },
 "numpy.core.arrayprint.repr_format": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.set_printoptions": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.set_string_function": {
  "lineno": 1546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.arrayprint.str_format": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.cversions": {
  "lineno": null,
  "symbols_in_volume": [
   "code_generators.genapi.fullapi_hash",
   "code_generators.numpy_api.full_api",
   "os.path.dirname"
  ],
  "type": "module"
 },
 "numpy.core.defchararray": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.core.defchararray._binary_op_dispatcher": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._center_dispatcher": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._clean_args": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._code_dispatcher": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._count_dispatcher": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._endswith_dispatcher": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._expandtabs_dispatcher": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._get_num_chars": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._join_dispatcher": {
  "lineno": 934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._just_dispatcher": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._mod_dispatcher": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._multiply_dispatcher": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._partition_dispatcher": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._replace_dispatcher": {
  "lineno": 1139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._split_dispatcher": {
  "lineno": 1311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._splitlines_dispatcher": {
  "lineno": 1437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._startswith_dispatcher": {
  "lineno": 1471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._strip_dispatcher": {
  "lineno": 1353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._to_string_or_unicode_array": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.defchararray._translate_dispatcher": {
  "lineno": 1630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._unary_op_dispatcher": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray._use_unicode": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.defchararray._zfill_dispatcher": {
  "lineno": 1706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.add": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.array": {
  "lineno": 2613,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.asarray": {
  "lineno": 2746,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.capitalize": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.center": {
  "lineno": 423,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.compat.asbytes",
   "numpy.core.multiarray._vec_string",
   "numpy.issubdtype",
   "numpy.max",
   "numpy.string_"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.chararray": {
  "lineno": 1805,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.core.defchararray.chararray.__add__": {
  "lineno": 2063,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__array_finalize__": {
  "lineno": 1981,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__eq__": {
  "lineno": 2003,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__ge__": {
  "lineno": 2023,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__getitem__": {
  "lineno": 1986,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__gt__": {
  "lineno": 2043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__le__": {
  "lineno": 2033,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__lt__": {
  "lineno": 2053,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__mod__": {
  "lineno": 2107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__mul__": {
  "lineno": 2085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__ne__": {
  "lineno": 2013,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__new__": {
  "lineno": 1946,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__radd__": {
  "lineno": 2074,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__rmod__": {
  "lineno": 2119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.__rmul__": {
  "lineno": 2096,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.argsort": {
  "lineno": 2122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.capitalize": {
  "lineno": 2143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.center": {
  "lineno": 2155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.count": {
  "lineno": 2166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.decode": {
  "lineno": 2178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.encode": {
  "lineno": 2189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.endswith": {
  "lineno": 2200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.expandtabs": {
  "lineno": 2212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.find": {
  "lineno": 2224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.index": {
  "lineno": 2236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.isalnum": {
  "lineno": 2247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.isalpha": {
  "lineno": 2260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.isdecimal": {
  "lineno": 2600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.isdigit": {
  "lineno": 2273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.islower": {
  "lineno": 2285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.isnumeric": {
  "lineno": 2588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.isspace": {
  "lineno": 2298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.istitle": {
  "lineno": 2311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.isupper": {
  "lineno": 2323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.join": {
  "lineno": 2336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.ljust": {
  "lineno": 2348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.lower": {
  "lineno": 2360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.lstrip": {
  "lineno": 2372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.partition": {
  "lineno": 2384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.replace": {
  "lineno": 2394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.rfind": {
  "lineno": 2406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.rindex": {
  "lineno": 2419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.rjust": {
  "lineno": 2431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.rpartition": {
  "lineno": 2443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.rsplit": {
  "lineno": 2453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.rstrip": {
  "lineno": 2465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.split": {
  "lineno": 2477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.splitlines": {
  "lineno": 2489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.startswith": {
  "lineno": 2501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.strip": {
  "lineno": 2513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.swapcase": {
  "lineno": 2525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.title": {
  "lineno": 2537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.translate": {
  "lineno": 2550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.upper": {
  "lineno": 2564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.chararray.zfill": {
  "lineno": 2576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.count": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.decode": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.encode": {
  "lineno": 560,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.endswith": {
  "lineno": 600,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.equal": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.expandtabs": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.find": {
  "lineno": 684,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.greater": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.greater_equal": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.index": {
  "lineno": 720,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.isalnum": {
  "lineno": 749,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.isalpha": {
  "lineno": 775,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.isdecimal": {
  "lineno": 1773,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.isdigit": {
  "lineno": 801,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.islower": {
  "lineno": 827,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.isnumeric": {
  "lineno": 1741,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.isspace": {
  "lineno": 854,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.istitle": {
  "lineno": 881,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.isupper": {
  "lineno": 907,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.join": {
  "lineno": 938,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.less": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.less_equal": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.ljust": {
  "lineno": 969,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.compat.asbytes",
   "numpy.core.multiarray._vec_string",
   "numpy.issubdtype",
   "numpy.max",
   "numpy.string_"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.lower": {
  "lineno": 1005,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.lstrip": {
  "lineno": 1044,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.mod": {
  "lineno": 352,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.multiply": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.not_equal": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.defchararray.partition": {
  "lineno": 1103,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.replace": {
  "lineno": 1143,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.rfind": {
  "lineno": 1176,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.rindex": {
  "lineno": 1209,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.rjust": {
  "lineno": 1239,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.compat.asbytes",
   "numpy.core.multiarray._vec_string",
   "numpy.issubdtype",
   "numpy.max",
   "numpy.string_"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.rpartition": {
  "lineno": 1275,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.rsplit": {
  "lineno": 1315,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.rstrip": {
  "lineno": 1357,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.split": {
  "lineno": 1402,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.splitlines": {
  "lineno": 1441,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.startswith": {
  "lineno": 1475,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.str_len": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.strip": {
  "lineno": 1507,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.swapcase": {
  "lineno": 1552,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.title": {
  "lineno": 1590,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.translate": {
  "lineno": 1634,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.upper": {
  "lineno": 1671,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.defchararray.zfill": {
  "lineno": 1710,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray._vec_string",
   "numpy.max"
  ],
  "type": "function"
 },
 "numpy.core.einsumfunc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.einsumfunc._can_dot": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.einsumfunc._compute_size_by_dict": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.einsumfunc._einsum_dispatcher": {
  "lineno": 989,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.einsumfunc._einsum_path_dispatcher": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.einsumfunc._find_contraction": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.einsumfunc._flop_count": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.einsumfunc._greedy_path": {
  "lineno": 312,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "numpy.core.einsumfunc._optimal_path": {
  "lineno": 145,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "numpy.core.einsumfunc._parse_einsum_input": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray",
   "operator.index"
  ],
  "type": "function"
 },
 "numpy.core.einsumfunc._parse_possible_contraction": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.einsumfunc._update_other_results": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.einsumfunc.einsum": {
  "lineno": 997,
  "symbols_in_volume": [
   "numpy.core.multiarray.c_einsum",
   "numpy.core.numeric.tensordot",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.core.einsumfunc.einsum_path": {
  "lineno": 706,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "types.GeneratorType"
  ],
  "type": "module"
 },
 "numpy.core.fromnumeric._alen_dispathcer": {
  "lineno": 2834,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._all_dispatcher": {
  "lineno": 2333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._amax_dispatcher": {
  "lineno": 2584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._amin_dispatcher": {
  "lineno": 2709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._any_dispatcher": {
  "lineno": 2245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._argmax_dispatcher": {
  "lineno": 1110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._argmin_dispatcher": {
  "lineno": 1191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._argpartition_dispatcher": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._argsort_dispatcher": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._around_dispatcher": {
  "lineno": 3164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._choose_dispatcher": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._clip_dispatcher": {
  "lineno": 2029,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._compress_dispatcher": {
  "lineno": 1961,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._cumprod_dispatcher": {
  "lineno": 3003,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._cumsum_dispatcher": {
  "lineno": 2414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._diagonal_dispatcher": {
  "lineno": 1498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._mean_dispatcher": {
  "lineno": 3265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._ndim_dispatcher": {
  "lineno": 3071,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._nonzero_dispatcher": {
  "lineno": 1812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._partition_dispatcher": {
  "lineno": 656,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._prod_dispatcher": {
  "lineno": 2876,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._ptp_dispatcher": {
  "lineno": 2486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._put_dispatcher": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._ravel_dispatcher": {
  "lineno": 1701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._repeat_dispatcher": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._reshape_dispatcher": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._resize_dispatcher": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._searchsorted_dispatcher": {
  "lineno": 1272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._shape_dispatcher": {
  "lineno": 1911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._size_dispatcher": {
  "lineno": 3113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._sort_dispatcher": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._squeeze_dispatcher": {
  "lineno": 1424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._std_dispatcher": {
  "lineno": 3376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._sum_dispatcher": {
  "lineno": 2100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._swapaxes_dispatcher": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._take_dispatcher": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._trace_dispatcher": {
  "lineno": 1632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._transpose_dispatcher": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._var_dispatcher": {
  "lineno": 3500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._wrapfunc": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._wrapit": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric._wrapreduction": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.alen": {
  "lineno": 2838,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.all": {
  "lineno": 2337,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.logical_and"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.alltrue": {
  "lineno": 3678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.amax": {
  "lineno": 2589,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.maximum"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.amin": {
  "lineno": 2714,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.any": {
  "lineno": 2249,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.logical_or"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.argmax": {
  "lineno": 1114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.argmin": {
  "lineno": 1195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.argpartition": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.argsort": {
  "lineno": 999,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.around": {
  "lineno": 3168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.choose": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.clip": {
  "lineno": 2033,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.compress": {
  "lineno": 1965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.cumprod": {
  "lineno": 3007,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.cumproduct": {
  "lineno": 3652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.cumsum": {
  "lineno": 2418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.diagonal": {
  "lineno": 1502,
  "symbols_in_volume": [
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.mean": {
  "lineno": 3269,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.ndim": {
  "lineno": 3075,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.nonzero": {
  "lineno": 1816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.partition": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.prod": {
  "lineno": 2881,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.multiply"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.product": {
  "lineno": 3640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.ptp": {
  "lineno": 2490,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.put": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.ravel": {
  "lineno": 1705,
  "symbols_in_volume": [
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.repeat": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.reshape": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.resize": {
  "lineno": 1350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.round_": {
  "lineno": 3628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.searchsorted": {
  "lineno": 1276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.shape": {
  "lineno": 1915,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.size": {
  "lineno": 3117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.sometrue": {
  "lineno": 3664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.sort": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.squeeze": {
  "lineno": 1428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.std": {
  "lineno": 3381,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.sum": {
  "lineno": 2105,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.add",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.swapaxes": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.take": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.trace": {
  "lineno": 1637,
  "symbols_in_volume": [
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.core.fromnumeric.transpose": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.fromnumeric.var": {
  "lineno": 3505,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.core.function_base": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.core.function_base._add_docstring": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.core.multiarray.add_docstring",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.function_base._geomspace_dispatcher": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.function_base._linspace_dispatcher": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.function_base._logspace_dispatcher": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.function_base._needs_add_docstring": {
  "lineno": 419,
  "symbols_in_volume": [
   "types.FunctionType",
   "types.MethodType"
  ],
  "type": "function"
 },
 "numpy.core.function_base.add_newdoc": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.function_base.geomspace": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.function_base.linspace": {
  "lineno": 23,
  "symbols_in_volume": [
   "operator.index"
  ],
  "type": "function"
 },
 "numpy.core.function_base.logspace": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.generate_numpy_api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.generate_numpy_api.do_generate_api": {
  "lineno": 157,
  "symbols_in_volume": [
   "genapi.BoolValuesApi",
   "genapi.FunctionApi",
   "genapi.GlobalVarApi",
   "genapi.TypeApi",
   "genapi.check_api_dict",
   "genapi.get_api_functions",
   "genapi.merge_api_dicts",
   "genapi.order_dict",
   "genapi.write_file"
  ],
  "type": "function"
 },
 "numpy.core.generate_numpy_api.generate_api": {
  "lineno": 140,
  "symbols_in_volume": [
   "genapi.should_rebuild",
   "numpy_api.__file__",
   "numpy_api.multiarray_api",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.core.getlimits": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.getlimits.MachArLike": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.getlimits.MachArLike.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits._discovered_machar": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits._fr0": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits._fr1": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits._get_machar": {
  "lineno": 237,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.getlimits._register_known_types": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits._register_type": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits.finfo": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.getlimits.finfo.__new__": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits.finfo.__repr__": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits.finfo.__str__": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits.finfo._init": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits.iinfo": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.getlimits.iinfo.__init__": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.__repr__": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.__str__": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.max": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.min": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.machar": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.machar.MachAr": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.core.machar.MachAr.__init__": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.core._ufunc_config.errstate"
  ],
  "type": "function"
 },
 "numpy.core.machar.MachAr.__str__": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.machar.MachAr._do_init": {
  "lineno": 116,
  "symbols_in_volume": [
   "math.log10",
   "numpy.core.fromnumeric.any"
  ],
  "type": "function"
 },
 "numpy.core.memmap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.memmap.memmap": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.core.memmap.memmap.__array_finalize__": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.may_share_memory"
  ],
  "type": "function"
 },
 "numpy.core.memmap.memmap.__array_wrap__": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.core.memmap.memmap.__getitem__": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.memmap.memmap.__new__": {
  "lineno": 205,
  "symbols_in_volume": [
   "mmap.ACCESS_COPY",
   "mmap.ACCESS_READ",
   "mmap.ACCESS_WRITE",
   "mmap.ALLOCATIONGRANULARITY",
   "mmap.mmap",
   "numpy.compat.contextlib_nullcontext",
   "numpy.compat.is_pathlib_path",
   "numpy.compat.os_fspath",
   "numpy.intp"
  ],
  "type": "function"
 },
 "numpy.core.memmap.memmap.flush": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "module"
 },
 "numpy.core.multiarray.bincount": {
  "lineno": 852,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.busday_count": {
  "lineno": 1529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.busday_offset": {
  "lineno": 1435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.can_cast": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.concatenate": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.copyto": {
  "lineno": 1043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.datetime_as_string": {
  "lineno": 1597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.dot": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.empty_like": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.inner": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.is_busday": {
  "lineno": 1381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.lexsort": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.may_share_memory": {
  "lineno": 1340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.min_scalar_type": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.packbits": {
  "lineno": 1123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.putmask": {
  "lineno": 1078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.ravel_multi_index": {
  "lineno": 929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.result_type": {
  "lineno": 634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.shares_memory": {
  "lineno": 1265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.unpackbits": {
  "lineno": 1181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.unravel_index": {
  "lineno": 990,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.multiarray.vdot": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.multiarray.where": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "sys.byteorder"
  ],
  "type": "module"
 },
 "numpy.core.numeric.ComplexWarning": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.numeric._allclose_dispatcher": {
  "lineno": 2117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._argwhere_dispatcher": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._array_equal_dispatcher": {
  "lineno": 2313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._array_equiv_dispatcher": {
  "lineno": 2388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._convolve_dispatcher": {
  "lineno": 716,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._correlate_dispatcher": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._count_nonzero_dispatcher": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._cross_dispatcher": {
  "lineno": 1448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._flatnonzero_dispatcher": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._frombuffer": {
  "lineno": 1812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._full_like_dispatcher": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._isclose_dispatcher": {
  "lineno": 2193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._maketup": {
  "lineno": 2073,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._mode_from_name": {
  "lineno": 637,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._move_axis_to_0": {
  "lineno": 1444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._moveaxis_dispatcher": {
  "lineno": 1367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._ones_like_dispatcher": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._outer_dispatcher": {
  "lineno": 820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._roll_dispatcher": {
  "lineno": 1109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._rollaxis_dispatcher": {
  "lineno": 1214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._tensordot_dispatcher": {
  "lineno": 912,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric._zeros_like_dispatcher": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.allclose": {
  "lineno": 2121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.argwhere": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.ndim"
  ],
  "type": "function"
 },
 "numpy.core.numeric.array_equal": {
  "lineno": 2317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.array_equiv": {
  "lineno": 2392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.base_repr": {
  "lineno": 2012,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.binary_repr": {
  "lineno": 1897,
  "symbols_in_volume": [
   "operator.index"
  ],
  "type": "function"
 },
 "numpy.core.numeric.binary_repr.warn_if_insufficient": {
  "lineno": 1969,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.numeric.convolve": {
  "lineno": 720,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.correlate": {
  "lineno": 647,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.count_nonzero": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.character",
   "numpy.intp",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "numpy.core.numeric.cross": {
  "lineno": 1452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.extend_all": {
  "lineno": 2446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.flatnonzero": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.nonzero",
   "numpy.ravel"
  ],
  "type": "function"
 },
 "numpy.core.numeric.fromfunction": {
  "lineno": 1756,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.full": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.full_like": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.identity": {
  "lineno": 2084,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "numpy.core.numeric.indices": {
  "lineno": 1653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.isclose": {
  "lineno": 2197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.isclose.within_tol": {
  "lineno": 2274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.isfortran": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.isscalar": {
  "lineno": 1816,
  "symbols_in_volume": [
   "numbers.Number"
  ],
  "type": "function"
 },
 "numpy.core.numeric.moveaxis": {
  "lineno": 1371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.normalize_axis_tuple": {
  "lineno": 1308,
  "symbols_in_volume": [
   "operator.index"
  ],
  "type": "function"
 },
 "numpy.core.numeric.ones": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.ones_like": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.outer": {
  "lineno": 824,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.roll": {
  "lineno": 1113,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "numpy.core.numeric.rollaxis": {
  "lineno": 1218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.tensordot": {
  "lineno": 916,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numeric.zeros_like": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numerictypes": {
  "lineno": null,
  "symbols_in_volume": [
   "builtins.bool",
   "builtins.bytes",
   "builtins.complex",
   "builtins.float",
   "builtins.int",
   "builtins.str",
   "numpy.core.multiarray.array",
   "types.BooleanType",
   "types.BufferType",
   "types.ComplexType",
   "types.FloatType",
   "types.IntType",
   "types.LongType",
   "types.StringType",
   "types.UnicodeType"
  ],
  "type": "module"
 },
 "numpy.core.numerictypes._can_coerce_all": {
  "lineno": 545,
  "symbols_in_volume": [
   "numpy.core.multiarray.dtype"
  ],
  "type": "function"
 },
 "numpy.core.numerictypes._construct_lookups": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numerictypes._find_common_coerce": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numerictypes._register_types": {
  "lineno": 560,
  "symbols_in_volume": [
   "numbers.Complex.register",
   "numbers.Integral.register",
   "numbers.Number.register",
   "numbers.Real.register"
  ],
  "type": "function"
 },
 "numpy.core.numerictypes._typedict": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.numerictypes._typedict.__getitem__": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.numerictypes.find_common_type": {
  "lineno": 569,
  "symbols_in_volume": [
   "numpy.core.multiarray.dtype",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.core.numerictypes.issctype": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.core.multiarray.dtype",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.core.numerictypes.issubclass_": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.core.numerictypes.issubdtype": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.core.multiarray.dtype",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.core.numerictypes.issubsctype": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.core.numerictypes.maximum_sctype": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.core.multiarray.dtype",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.core.numerictypes.obj2sctype": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.core.multiarray.dtype",
   "numpy.core.multiarray.ndarray",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.core.numerictypes.sctype2char": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.core.multiarray.dtype",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.core.overrides": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.core._multiarray_umath._get_implementing_args",
   "numpy.core._multiarray_umath.add_docstring",
   "numpy.core._multiarray_umath.implement_array_function",
   "os.environ.get",
   "textwrap.dedent"
  ],
  "type": "module"
 },
 "numpy.core.overrides.array_function_dispatch": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.overrides.array_function_dispatch.decorator": {
  "lineno": 166,
  "symbols_in_volume": [
   "functools",
   "numpy.core._multiarray_umath.add_docstring",
   "numpy.core._multiarray_umath.implement_array_function"
  ],
  "type": "function"
 },
 "numpy.core.overrides.array_function_from_dispatcher": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.overrides.array_function_from_dispatcher.decorator": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.overrides.set_module": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.overrides.set_module.decorator": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.overrides.verify_matching_signatures": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.compat._inspect.getargspec"
  ],
  "type": "function"
 },
 "numpy.core.records": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.records._OrderedCounter": {
  "lineno": 78,
  "symbols_in_volume": [
   "collections.Counter",
   "collections.OrderedDict"
  ],
  "type": "class"
 },
 "numpy.core.records._OrderedCounter.__reduce__": {
  "lineno": 84,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "numpy.core.records._OrderedCounter.__repr__": {
  "lineno": 81,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "numpy.core.records._deprecate_shape_0_as_None": {
  "lineno": 584,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.records.array": {
  "lineno": 953,
  "symbols_in_volume": [
   "numpy.compat.isfileobj"
  ],
  "type": "function"
 },
 "numpy.core.records.find_duplicate": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.format_parser": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.core.records.format_parser.__init__": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.format_parser._createdtype": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.format_parser._parseFormats": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.format_parser._setfieldnames": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.fromarrays": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.fromfile": {
  "lineno": 856,
  "symbols_in_volume": [
   "numpy.compat.contextlib_nullcontext",
   "numpy.compat.isfileobj",
   "numpy.compat.os_fspath"
  ],
  "type": "function"
 },
 "numpy.core.records.fromrecords": {
  "lineno": 689,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.records.fromstring": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.get_remaining_size": {
  "lineno": 847,
  "symbols_in_volume": [
   "os.fstat",
   "os.path.getsize"
  ],
  "type": "function"
 },
 "numpy.core.records.recarray": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.records.recarray.__array_finalize__": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.recarray.__getattribute__": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.recarray.__getitem__": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.recarray.__new__": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.recarray.__repr__": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.recarray.__setattr__": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.recarray.field": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.record": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.records.record.__getattribute__": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.record.__getitem__": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.record.__repr__": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.record.__setattr__": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.record.__str__": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.records.record.pprint": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup",
   "os.environ.get"
  ],
  "type": "module"
 },
 "numpy.core.setup.CallOnceOnly": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.setup.CallOnceOnly.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup.CallOnceOnly.check_complex": {
  "lineno": 61,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "numpy.core.setup.CallOnceOnly.check_ieee_macros": {
  "lineno": 53,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "numpy.core.setup.CallOnceOnly.check_types": {
  "lineno": 45,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "numpy.core.setup.check_complex": {
  "lineno": 188,
  "symbols_in_volume": [
   "os.uname",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.setup.check_complex.check_prec": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup.check_ieee_macros": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup.check_ieee_macros._add_decl": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities": {
  "lineno": 108,
  "symbols_in_volume": [
   "os.path.sep"
  ],
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities.check_func": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities.check_funcs": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities.check_funcs_once": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup.check_mathlib": {
  "lineno": 367,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "numpy.core.setup.check_types": {
  "lineno": 266,
  "symbols_in_volume": [
   "sys.builtin_module_names"
  ],
  "type": "function"
 },
 "numpy.core.setup.configuration": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy._build_utils.apple_accelerate.get_sgemv_fix",
   "numpy._build_utils.apple_accelerate.uses_accelerate_framework",
   "numpy.compat.npy_load_module",
   "numpy.distutils.misc_util.Configuration",
   "numpy.distutils.misc_util.dot_join",
   "numpy.distutils.system_info.get_info",
   "os.environ.get",
   "os.path.join",
   "os.path.sep",
   "platform.platform",
   "platform.python_compiler",
   "sys.platform",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_api_func": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_api_func.generate_api": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.distutils.log.info",
   "os.path.join",
   "sys.path",
   "sys.path.insert"
  ],
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_config_h": {
  "lineno": 417,
  "symbols_in_volume": [
   "distutils.dep_util.newer",
   "numpy.distutils.log.info",
   "os.makedirs",
   "os.name",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "sys.platform",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_numpyconfig_h": {
  "lineno": 520,
  "symbols_in_volume": [
   "distutils.dep_util.newer",
   "numpy.distutils.log.info",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_umath_c": {
  "lineno": 877,
  "symbols_in_volume": [
   "distutils.dep_util.newer",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.core.setup.configuration.get_mathlib_info": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup.is_npy_no_signal": {
  "lineno": 76,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.core.setup.is_npy_no_smp": {
  "lineno": 81,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "numpy.core.setup.pythonlib_dir": {
  "lineno": 69,
  "symbols_in_volume": [
   "distutils.sysconfig.get_config_var",
   "os.path.join",
   "sys.platform",
   "sys.prefix"
  ],
  "type": "function"
 },
 "numpy.core.setup.visibility_define": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup.win32_checks": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.get_build_architecture",
   "os.name",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.core.setup_common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.setup_common.MismatchCAPIWarning": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.setup_common.check_api_version": {
  "lineno": 81,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.setup_common.check_for_right_shift_internal_compiler_error": {
  "lineno": 397,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.core.setup_common.check_long_double_representation": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.mingw32",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.core.setup_common.fname2def": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup_common.get_api_versions": {
  "lineno": 60,
  "symbols_in_volume": [
   "sys.path",
   "sys.path.insert"
  ],
  "type": "function"
 },
 "numpy.core.setup_common.is_released": {
  "lineno": 48,
  "symbols_in_volume": [
   "distutils.version.LooseVersion"
  ],
  "type": "function"
 },
 "numpy.core.setup_common.long_double_representation": {
  "lineno": 338,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "numpy.core.setup_common.pyod": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup_common.sym2def": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.setup_common.type2def": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "module"
 },
 "numpy.core.shape_base._accumulate": {
  "lineno": 535,
  "symbols_in_volume": [
   "itertools.accumulate"
  ],
  "type": "function"
 },
 "numpy.core.shape_base._arrays_for_stack_dispatcher": {
  "lineno": 208,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.shape_base._atleast_1d_dispatcher": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._atleast_2d_dispatcher": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._atleast_3d_dispatcher": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._atleast_nd": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._block": {
  "lineno": 650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._block_check_depths_match": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._block_concatenate": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._block_dispatcher": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._block_format_index": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._block_info_recursion": {
  "lineno": 597,
  "symbols_in_volume": [
   "functools.reduce",
   "operator.add"
  ],
  "type": "function"
 },
 "numpy.core.shape_base._block_setup": {
  "lineno": 856,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._block_slicing": {
  "lineno": 873,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._concatenate_shapes": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._stack_dispatcher": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base._vhstack_dispatcher": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base.atleast_1d": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base.atleast_2d": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base.atleast_3d": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base.block": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base.hstack": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base.stack": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.shape_base.vstack": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests._locales": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests._locales.CommaDecimalPointLocale": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests._locales.CommaDecimalPointLocale.__enter__": {
  "lineno": 68,
  "symbols_in_volume": [
   "locale.LC_NUMERIC",
   "locale.setlocale",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.core.tests._locales.CommaDecimalPointLocale.__exit__": {
  "lineno": 73,
  "symbols_in_volume": [
   "locale.LC_NUMERIC",
   "locale.setlocale"
  ],
  "type": "function"
 },
 "numpy.core.tests._locales.CommaDecimalPointLocale.setup": {
  "lineno": 60,
  "symbols_in_volume": [
   "locale.LC_NUMERIC",
   "locale.setlocale",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.core.tests._locales.CommaDecimalPointLocale.teardown": {
  "lineno": 65,
  "symbols_in_volume": [
   "locale.LC_NUMERIC",
   "locale.setlocale"
  ],
  "type": "function"
 },
 "numpy.core.tests._locales.find_comma_decimal_point_locale": {
  "lineno": 12,
  "symbols_in_volume": [
   "locale.Error",
   "locale.LC_NUMERIC",
   "locale.getlocale",
   "locale.setlocale",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.core.tests.test__exceptions": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.core._exceptions._ArrayMemoryError"
  ],
  "type": "module"
 },
 "numpy.core.tests.test__exceptions.TestArrayMemoryError": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test__exceptions.TestArrayMemoryError.test__size_to_string": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test__exceptions.TestArrayMemoryError.test__total_size": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test__exceptions.TestArrayMemoryError.test_str": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_abc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_abc.TestABC": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_abc.TestABC.test_abstract": {
  "lineno": 9,
  "symbols_in_volume": [
   "numbers.Complex",
   "numbers.Integral",
   "numbers.Number",
   "numbers.Real",
   "numpy.complexfloating",
   "numpy.floating",
   "numpy.inexact",
   "numpy.integer",
   "numpy.number",
   "numpy.signedinteger",
   "numpy.testing.assert_",
   "numpy.unsignedinteger"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_abc.TestABC.test_complex": {
  "lineno": 31,
  "symbols_in_volume": [
   "numbers.Complex",
   "numbers.Real",
   "numpy.core.numerictypes.sctypes",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_abc.TestABC.test_floats": {
  "lineno": 20,
  "symbols_in_volume": [
   "numbers.Rational",
   "numbers.Real",
   "numpy.core.numerictypes.sctypes",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_abc.TestABC.test_int": {
  "lineno": 42,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.core.numerictypes.sctypes",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_abc.TestABC.test_uint": {
  "lineno": 49,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.core.numerictypes.sctypes",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_api.test_array_array": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.MAXDIMS",
   "numpy.array",
   "numpy.dtype",
   "numpy.float64",
   "numpy.full",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint8",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_array_astype": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_array_astype.MyNDArray": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_api.test_array_astype_warning": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.array",
   "numpy.complex_",
   "numpy.sctypes",
   "numpy.testing.assert_warns",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_array_impossible_casts": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._rational_tests.rational",
   "numpy.testing.assert_raises",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_broadcast_arrays": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.broadcast_arrays",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_contiguous_flags": {
  "lineno": 517,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_contiguous_flags.check_contig": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copy_order": {
  "lineno": 449,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.copy",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copy_order.check_copy_result": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copyto": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.copyto",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copyto_fromscalar": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.copyto",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copyto_permut": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.copyto",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_fastCopyAndTranspose": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.fastCopyAndTranspose",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_none_to_nan_cast": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.typecodes",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_string_to_boolean_cast": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.bytes_",
   "numpy.dtype",
   "numpy.testing.assert_array_equal",
   "numpy.unicode",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_string_to_boolean_cast_errors": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.bytes_",
   "numpy.dtype",
   "numpy.testing.assert_raises",
   "numpy.unicode",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_api.test_string_to_complex_cast": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clongdouble",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.str_",
   "numpy.unicode_",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_any_text": {
  "lineno": 398,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.array2string",
   "hypothesis.extra.numpy.dtype",
   "hypothesis.extra.numpy.from_dtype",
   "hypothesis.given",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_basic": {
  "lineno": 211,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "hypothesis.extra.numpy.array2string",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_edgeitems_kwarg": {
  "lineno": 330,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array2string",
   "hypothesis.extra.numpy.zeros",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_format_function": {
  "lineno": 227,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.array2string",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_format_function._format_function": {
  "lineno": 229,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.abs"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_linewidth": {
  "lineno": 356,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.full",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_linewidth.make_str": {
  "lineno": 359,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array2string"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_refcount": {
  "lineno": 410,
  "symbols_in_volume": [
   "gc.collect",
   "gc.disable",
   "gc.enable",
   "hypothesis.extra.numpy.arange",
   "hypothesis.extra.numpy.array2string",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_structure_format": {
  "lineno": 262,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.array2string",
   "hypothesis.extra.numpy.datetime64",
   "hypothesis.extra.numpy.dtype",
   "hypothesis.extra.numpy.float64",
   "hypothesis.extra.numpy.full",
   "hypothesis.extra.numpy.set_printoptions",
   "hypothesis.extra.numpy.str_",
   "hypothesis.extra.numpy.zeros",
   "numpy.testing.assert_equal",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_summarize_1d": {
  "lineno": 338,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_summarize_2d": {
  "lineno": 346,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_unexpected_kwarg": {
  "lineno": 218,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.array2string",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_unstructured_void_repr": {
  "lineno": 318,
  "symbols_in_volume": [
   "hypothesis.extra.numpy",
   "hypothesis.extra.numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_wide_element": {
  "lineno": 387,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.array2string",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass": {
  "lineno": 61,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.DuckCounter": {
  "lineno": 102,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.DuckCounter.__getitem__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.DuckCounter.__str__": {
  "lineno": 112,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array2string"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.DuckCounter.to_string": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.sub": {
  "lineno": 64,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.sub.__getitem__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.sub.__new__": {
  "lineno": 65,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_containing_list": {
  "lineno": 144,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_fieldless_structured": {
  "lineno": 156,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.dtype",
   "hypothesis.extra.numpy.empty",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_nan_inf": {
  "lineno": 16,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.inf",
   "hypothesis.extra.numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_object_subclass": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_object_subclass.sub": {
  "lineno": 42,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_object_subclass.sub.__getitem__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_object_subclass.sub.__new__": {
  "lineno": 43,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_self_containing": {
  "lineno": 123,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_subclass": {
  "lineno": 20,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_subclass.sub": {
  "lineno": 21,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_void_scalar_recursion": {
  "lineno": 152,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestComplexArray": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestComplexArray.test_str": {
  "lineno": 164,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.cdouble",
   "hypothesis.extra.numpy.clongdouble",
   "hypothesis.extra.numpy.complex64",
   "hypothesis.extra.numpy.inf",
   "hypothesis.extra.numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestContextManager": {
  "lineno": 857,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestContextManager.test_ctx_mgr": {
  "lineno": 858,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestContextManager.test_ctx_mgr_as_smth": {
  "lineno": 882,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestContextManager.test_ctx_mgr_exceptions": {
  "lineno": 872,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.get_printoptions",
   "hypothesis.extra.numpy.printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestContextManager.test_ctx_mgr_restores": {
  "lineno": 864,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.get_printoptions",
   "hypothesis.extra.numpy.printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.setup": {
  "lineno": 427,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.get_printoptions"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.teardown": {
  "lineno": 430,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.set_printoptions"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_0d_arrays": {
  "lineno": 477,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.array2string",
   "hypothesis.extra.numpy.datetime64",
   "hypothesis.extra.numpy.set_printoptions",
   "hypothesis.extra.numpy.str_",
   "hypothesis.extra.numpy.timedelta64",
   "hypothesis.extra.numpy.zeros",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_bad_args": {
  "lineno": 846,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_basic": {
  "lineno": 433,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_bool_spacing": {
  "lineno": 532,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_dtype_linewidth_wrapping": {
  "lineno": 706,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "hypothesis.extra.numpy.ones",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_edgeitems": {
  "lineno": 776,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "hypothesis.extra.numpy.set_printoptions",
   "hypothesis.extra.numpy.zeros",
   "numpy.testing.assert_equal",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_float_overflow_nowarn": {
  "lineno": 585,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_float_spacing": {
  "lineno": 508,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.inf",
   "hypothesis.extra.numpy.nan",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_floatmode": {
  "lineno": 596,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.float16",
   "hypothesis.extra.numpy.float64",
   "hypothesis.extra.numpy.set_printoptions",
   "hypothesis.extra.numpy.zeros",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_formatter": {
  "lineno": 449,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_formatter_reset": {
  "lineno": 454,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_legacy_mode_scalars": {
  "lineno": 687,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.complex128",
   "hypothesis.extra.numpy.float64",
   "hypothesis.extra.numpy.nan",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_legacy_stray_comma": {
  "lineno": 699,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_linewidth_repr": {
  "lineno": 721,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.full",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_linewidth_str": {
  "lineno": 758,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.full",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_precision_zero": {
  "lineno": 439,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_sign_spacing": {
  "lineno": 544,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arange",
   "hypothesis.extra.numpy.array",
   "hypothesis.extra.numpy.set_printoptions",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_sign_spacing_structured": {
  "lineno": 590,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.test_unicode_object_array": {
  "lineno": 851,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_conversion_utils.StringConverterTestCase": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_conversion_utils.StringConverterTestCase._check": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.StringConverterTestCase._check_value_error": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.StringConverterTestCase.test_wrong_type": {
  "lineno": 49,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.StringConverterTestCase.test_wrong_value": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.TestByteorderConverter": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.run_byteorder_converter"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_conversion_utils.TestByteorderConverter.test_valid": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.TestCastingConverter": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.run_casting_converter"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_conversion_utils.TestCastingConverter.test_valid": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.TestClipmodeConverter": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.run_clipmode_converter"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_conversion_utils.TestClipmodeConverter.test_valid": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.CLIP",
   "numpy.RAISE",
   "numpy.WRAP"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.TestOrderConverter": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.run_order_converter"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_conversion_utils.TestOrderConverter.test_flatten_invalid_order": {
  "lineno": 122,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.TestOrderConverter.test_valid": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.TestSearchsideConverter": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.run_searchside_converter"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_conversion_utils.TestSearchsideConverter.test_valid": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.TestSelectkindConverter": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.run_selectkind_converter"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_conversion_utils.TestSelectkindConverter.test_valid": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_conversion_utils.TestSortkindConverter": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.run_sortkind_converter"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_conversion_utils.TestSortkindConverter.test_valid": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_cpu_features": {
  "lineno": null,
  "symbols_in_volume": [
   "platform.machine",
   "re.IGNORECASE",
   "re.match",
   "sys.platform.startswith"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_cpu_features.AbstractTest": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_cpu_features.AbstractTest.cpu_have": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_cpu_features.AbstractTest.get_cpuinfo_item": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_cpu_features.AbstractTest.load_flags": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_cpu_features.AbstractTest.load_flags_auxv": {
  "lineno": 94,
  "symbols_in_volume": [
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_cpu_features.AbstractTest.load_flags_cpuinfo": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_cpu_features.AbstractTest.test_features": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.core._multiarray_umath.__cpu_features__.get"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_cpu_features.Test_ARM_Features": {
  "lineno": 147,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_cpu_features.Test_ARM_Features.load_flags": {
  "lineno": 156,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_cpu_features.Test_POWER_Features": {
  "lineno": 138,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_cpu_features.Test_POWER_Features.load_flags": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_cpu_features.Test_X86_Features": {
  "lineno": 109,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_cpu_features.Test_X86_Features.load_flags": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_cpu_features.assert_features_equal": {
  "lineno": 4,
  "symbols_in_volume": [
   "numpy.core._multiarray_umath.__cpu_features__",
   "subprocess.check_output",
   "textwrap.indent"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_datetime.TestDateTime": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_assert_equal": {
  "lineno": 2314,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_cast_overflow": {
  "lineno": 784,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_cast_overflow.cast": {
  "lineno": 786,
  "symbols_in_volume": [
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_cast_overflow.cast2": {
  "lineno": 790,
  "symbols_in_volume": [
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_compare_generic_nat": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.testing.assert_",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_corecursive_input": {
  "lineno": 2318,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_creation_overflow": {
  "lineno": 1613,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.timedelta64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_add": {
  "lineno": 958,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_arange": {
  "lineno": 1776,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_arange_no_dtype": {
  "lineno": 1817,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_array_find_type": {
  "lineno": 275,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.array",
   "numpy.bool_",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_array_str": {
  "lineno": 684,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array2string",
   "numpy.datetime_as_string",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_as_string": {
  "lineno": 1631,
  "symbols_in_volume": [
   "datetime",
   "numpy.datetime64",
   "numpy.datetime_as_string",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_as_string_timezone": {
  "lineno": 1736,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.datetime_as_string",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.skipif",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busday_holidays_count": {
  "lineno": 2189,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.busday_count",
   "numpy.busday_offset",
   "numpy.busdaycalendar",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busday_holidays_offset": {
  "lineno": 2021,
  "symbols_in_volume": [
   "numpy.busday_offset",
   "numpy.busdaycalendar",
   "numpy.datetime64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busday_offset": {
  "lineno": 1926,
  "symbols_in_volume": [
   "numpy.busday_offset",
   "numpy.datetime64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busdaycalendar": {
  "lineno": 1987,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.busdaycalendar",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_casting_rules": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.can_cast",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_compare": {
  "lineno": 1351,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.equal",
   "numpy.greater",
   "numpy.greater_equal",
   "numpy.less",
   "numpy.less_equal",
   "numpy.not_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_compare_nat": {
  "lineno": 1367,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.equal",
   "numpy.greater",
   "numpy.greater_equal",
   "numpy.less",
   "numpy.less_equal",
   "numpy.not_equal",
   "numpy.testing.assert_",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_divide": {
  "lineno": 1286,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.divide",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings",
   "numpy.timedelta64",
   "numpy.true_divide"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_dtype_creation": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_is_busday": {
  "lineno": 2225,
  "symbols_in_volume": [
   "numpy.busdaycalendar",
   "numpy.is_busday",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_like": {
  "lineno": 907,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty_like",
   "numpy.ones_like",
   "numpy.testing.assert_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_maximum_reduce": {
  "lineno": 1915,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.maximum.reduce",
   "numpy.testing.assert_equal",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_minmax": {
  "lineno": 1391,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.fmax",
   "numpy.fmin",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_multiply": {
  "lineno": 1103,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.multiply",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_multiply.check": {
  "lineno": 1148,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_nat_argsort_stability": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.datetime64",
   "numpy.testing.assert_equal",
   "numpy.tile",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_nat_casting": {
  "lineno": 512,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_scalar_construction": {
  "lineno": 190,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_scalar_construction_timezone": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_string_conversion": {
  "lineno": 646,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.empty_like",
   "numpy.string_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_subtract": {
  "lineno": 1028,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.subtract",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_timedelta_sort_nat": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_unary": {
  "lineno": 918,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.array",
   "numpy.negative",
   "numpy.positive",
   "numpy.sign",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_y2038": {
  "lineno": 2242,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_days_creation": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_days_to_pydate": {
  "lineno": 600,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_different_unit_comparison": {
  "lineno": 844,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.equal",
   "numpy.less",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_as": {
  "lineno": 1491,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_day": {
  "lineno": 1470,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_fs": {
  "lineno": 1487,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_hour": {
  "lineno": 1475,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_minute": {
  "lineno": 1479,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_month": {
  "lineno": 1460,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_second": {
  "lineno": 1483,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_week": {
  "lineno": 1465,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_year": {
  "lineno": 1455,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_dtype_comparison": {
  "lineno": 622,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_dtype_promotion": {
  "lineno": 751,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.promote_types",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_hours": {
  "lineno": 1450,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_isfinite_isinf_isnan_units": {
  "lineno": 2298,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isfinite",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_isfinite_scalar": {
  "lineno": 2290,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.isfinite",
   "numpy.testing.assert_",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_isnat": {
  "lineno": 2262,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.isnat",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_isnat_error": {
  "lineno": 2283,
  "symbols_in_volume": [
   "numpy.isnat",
   "numpy.testing.assert_raises",
   "numpy.typecodes",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_limit_str_roundtrip": {
  "lineno": 2346,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.iinfo",
   "numpy.int64",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_limit_symmetry": {
  "lineno": 2330,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.iinfo",
   "numpy.int64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_month_truncation": {
  "lineno": 831,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_pickle": {
  "lineno": 715,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_pydatetime_creation": {
  "lineno": 628,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.date.today",
   "numpy.array",
   "numpy.datetime64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_pyobject_roundtrip": {
  "lineno": 794,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_setstate": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_string_parser_error_check": {
  "lineno": 1530,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_string_parser_variants": {
  "lineno": 1494,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_0_dim_object_array_conversion": {
  "lineno": 422,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_arange": {
  "lineno": 1822,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_arange_no_dtype": {
  "lineno": 1910,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_array_str": {
  "lineno": 698,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_divmod": {
  "lineno": 1239,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_divmod_warnings": {
  "lineno": 1266,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_floor_div_error": {
  "lineno": 1227,
  "symbols_in_volume": [
   "numpy.testing.assert_raises_regex",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_floor_div_precision": {
  "lineno": 1210,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_floor_div_warnings": {
  "lineno": 1192,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_floor_divide": {
  "lineno": 1159,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_modulus": {
  "lineno": 1840,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_modulus_div_by_zero": {
  "lineno": 1890,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_modulus_error": {
  "lineno": 1878,
  "symbols_in_volume": [
   "numpy.testing.assert_raises_regex",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_modulus_type_resolution": {
  "lineno": 1895,
  "symbols_in_volume": [
   "numpy.testing.assert_raises_regex",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_nat_argsort_stability": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.testing.assert_equal",
   "numpy.tile",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_np_int_construction": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_object_array_conversion": {
  "lineno": 413,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_scalar_construction": {
  "lineno": 327,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_scalar_construction_units": {
  "lineno": 432,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTimeData": {
  "lineno": 2369,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_datetime.TestDateTimeData.test_basic": {
  "lineno": 2371,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.datetime_data",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_defchararray.TestBasic": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_object_array": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.char.array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_object_array_unicode": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.char.array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_string": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.char.array",
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_string_array": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.char.array",
   "numpy.char.asarray",
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.char.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode_array": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.char.array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode_array.fail": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.char.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_unicode_upconvert": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.char.array",
   "numpy.testing.assert_",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestChar": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestChar.setup": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestChar.test_it": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.setup": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_equal": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_greater": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_greater_equal": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_less": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_less_equal": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_not_equal": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed1": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed1.setup": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed2": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed2.setup": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestInformation.setup": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_count": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_endswith": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_endswith.fail": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_find": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_index": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.char.index",
   "numpy.integer",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_index.fail": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isalnum": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isalpha": {
  "lineno": 253,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isdigit": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_islower": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isspace": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_istitle": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isupper": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_len": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.char.str_len",
   "numpy.integer",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rfind": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rindex": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.char.rindex",
   "numpy.integer",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rindex.fail": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_startswith": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_startswith.fail": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestMethods.setup": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_capitalize": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_center": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.char.center",
   "numpy.char.str_len",
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_decode": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.char.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_encode": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_expandtabs": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isdecimal": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isdecimal.fail": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isnumeric": {
  "lineno": 556,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isnumeric.fail": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_join": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.char.join",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_ljust": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.char.ljust",
   "numpy.char.str_len",
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_lower": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_lstrip": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_partition": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_replace": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rjust": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.char.rjust",
   "numpy.char.str_len",
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rpartition": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rsplit": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.object_",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rstrip": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_split": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.object_",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_splitlines": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.char.array",
   "numpy.object_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_strip": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_swapcase": {
  "lineno": 517,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_title": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_upper": {
  "lineno": 543,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestOperations.setup": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_add": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_mod": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_mul": {
  "lineno": 595,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_radd": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_rmod": {
  "lineno": 635,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_rmul": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_slice": {
  "lineno": 644,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_broadcast_error": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_broadcast_error.fail": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string",
   "numpy.int_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_args_tuple": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_args_tuple.fail": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string",
   "numpy.string_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_function_args": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_function_args.fail": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string",
   "numpy.string_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_result_type": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_result_type.fail": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string",
   "numpy.int_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_type_descr": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_type_descr.fail": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_existent_method": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_existent_method.fail": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string",
   "numpy.string_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_string_array": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_string_array.fail": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.core.multiarray._vec_string",
   "numpy.string_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace.setup": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace.test1": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.test_empty_indexing": {
  "lineno": 662,
  "symbols_in_volume": [
   "numpy.chararray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_deprecations.BuiltInRoundComplexDType": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.BuiltInRoundComplexDType.test_deprecated": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.BuiltInRoundComplexDType.test_not_deprecated": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestAlen": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestAlen.test_alen": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.alen",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestArrayDataAttributeAssignmentDeprecation": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestArrayDataAttributeAssignmentDeprecation.test_data_attr_assignment": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestBinaryReprInsufficientWidthParameterForRepresentation": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestBinaryReprInsufficientWidthParameterForRepresentation.test_insufficient_width_negative": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.binary_repr"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestBinaryReprInsufficientWidthParameterForRepresentation.test_insufficient_width_positive": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.binary_repr"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestBincount": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestBincount.test_bincount_minlength": {
  "lineno": 425,
  "symbols_in_volume": [
   "numpy.bincount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_array_richcompare_legacy_weirdness": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.int16",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "numpy.zeros",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_normal_types": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros",
   "operator.eq",
   "operator.ne"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_string": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_void_dtype_equality_failures": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_warns",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_void_dtype_equality_failures.NotArray": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_void_dtype_equality_failures.NotArray.__array__": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_void_dtype_equality_failures.NotArray.__ne__": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestDTypeCoercion": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.character",
   "numpy.complexfloating",
   "numpy.flexible",
   "numpy.floating",
   "numpy.generic",
   "numpy.inexact",
   "numpy.integer",
   "numpy.number",
   "numpy.signedinteger",
   "numpy.unsignedinteger"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestDTypeCoercion.test_array_construction": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestDTypeCoercion.test_dtype_coercion": {
  "lineno": 580,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestDTypeCoercion.test_not_deprecated": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.sctypes.values"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestDatetime64Timezone": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestDatetime64Timezone.test_datetime": {
  "lineno": 248,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pytest.mark.skipif",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestDatetime64Timezone.test_string": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestDatetimeEvent": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestDatetimeEvent.test_3_tuple": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestFromStringAndFileInvalidData": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestFromStringAndFileInvalidData.test_deprecate_unparsable_data_file": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromfile",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "tempfile.TemporaryFile",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestFromStringAndFileInvalidData.test_deprecate_unparsable_string": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._multiarray_tests.fromstring_null_term_c_api",
   "numpy.fromstring",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_warns",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestFromstring": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestFromstring.test_fromstring": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.fromstring"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestGeneratorSum": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestGeneratorSum.test_generator_sum": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestNPY_CHAR": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestNPY_CHAR.test_npy_char_deprecation": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.npy_char_deprecation",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestNonCContiguousViewDeprecation": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestNonCContiguousViewDeprecation.test_fortran_contiguous": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestNonNumericConjugate": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestNonNumericConjugate.test_conjugate": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestNonTupleNDIndexDeprecation": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestNonTupleNDIndexDeprecation.test_basic": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "numpy.zeros",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestNonZero": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestNonZero.test_zerod": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestNumericStyleTypecodes": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestNumericStyleTypecodes.test_all_dtypes": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestPositiveOnNonNumerical": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestPositiveOnNonNumerical.test_positive_on_non_number": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.array",
   "operator.pos"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestPyArray_AS1D": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestPyArray_AS1D.test_npy_pyarrayas1d_deprecation": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.npy_pyarrayas1d_deprecation",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestPyArray_AS2D": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestPyArray_AS2D.test_npy_pyarrayas2d_deprecation": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.npy_pyarrayas2d_deprecation",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestSctypeNA": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestSctypeNA.test_sctypeNA": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.sctypeNA",
   "numpy.typeNA",
   "numpy.typeNA.get"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestShape1Fields": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestShape1Fields.test_shape_1_fields": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestTestDeprecated": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestTestDeprecated.test_assert_deprecated": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestTestDeprecated.test_assert_deprecated.foo": {
  "lineno": 342,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestToString": {
  "lineno": 552,
  "symbols_in_volume": [
   "re.escape"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestToString.test_tostring": {
  "lineno": 556,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestToString.test_tostring_matches_tobytes": {
  "lineno": 560,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_warns",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestTruthTestingEmptyArrays": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestTruthTestingEmptyArrays.test_1d": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestTruthTestingEmptyArrays.test_2d": {
  "lineno": 417,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.Test_GetSet_NumericOps": {
  "lineno": 513,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.Test_GetSet_NumericOps.test_get_numeric_ops": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.getset_numericops",
   "numpy.set_numeric_ops",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.Test_UPDATEIFCOPY": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.Test_UPDATEIFCOPY.test_npy_updateifcopy_deprecation": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._multiarray_tests.npy_updateifcopy_deprecation"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.assert_deprecated": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy._NoValue",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.assert_not_deprecated": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.setup": {
  "lineno": 33,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.teardown": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._VisibleDeprecationTestCase": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.test_deprecate_ragged_arrays": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_dtype.TestBuiltin": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_bad_param": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_dtype": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_dtype_bytes_str_equivalence": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.dtype",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_dtype_from_bytes": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_equivalent_dtype_hashing": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.uint32",
   "numpy.uintp",
   "numpy.ulonglong"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_field_order_equality": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_invalid_types": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_run": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.compat.unicode",
   "numpy.dtype",
   "numpy.int32",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributeDeletion": {
  "lineno": 930,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributeDeletion.test_dtype_non_writable_attributes_deletion": {
  "lineno": 932,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributeDeletion.test_dtype_writable_attributes_deletion": {
  "lineno": 941,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributes": {
  "lineno": 948,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributes.test_descr_has_trailing_void": {
  "lineno": 949,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributes.test_name_dtype_subclass": {
  "lineno": 959,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributes.test_name_dtype_subclass.user_def_subcls": {
  "lineno": 961,
  "symbols_in_volume": [
   "numpy.void"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes": {
  "lineno": 1094,
  "symbols_in_volume": [
   "itertools.permutations",
   "numpy.typecodes"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.check": {
  "lineno": 1096,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_array": {
  "lineno": 1102,
  "symbols_in_volume": [
   "ctypes.c_uint8",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_big_endian_structure": {
  "lineno": 1262,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_big_endian_structure.PaddedStruct": {
  "lineno": 1263,
  "symbols_in_volume": [
   "ctypes.BigEndianStructure",
   "ctypes.c_uint16",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_big_endian_structure_packed": {
  "lineno": 1230,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_big_endian_structure_packed.BigEndStruct": {
  "lineno": 1231,
  "symbols_in_volume": [
   "ctypes.BigEndianStructure",
   "ctypes.c_uint32",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_bit_fields": {
  "lineno": 1122,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_bit_fields.BitfieldStruct": {
  "lineno": 1123,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_large_packed_structure": {
  "lineno": 1211,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_large_packed_structure.PackedStructure": {
  "lineno": 1212,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.c_uint16",
   "ctypes.c_uint32",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_little_endian_structure": {
  "lineno": 1250,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_little_endian_structure.PaddedStruct": {
  "lineno": 1251,
  "symbols_in_volume": [
   "ctypes.LittleEndianStructure",
   "ctypes.c_uint16",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_little_endian_structure_packed": {
  "lineno": 1240,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_little_endian_structure_packed.LittleEndStruct": {
  "lineno": 1241,
  "symbols_in_volume": [
   "ctypes.LittleEndianStructure",
   "ctypes.c_uint32",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_packed_structure": {
  "lineno": 1198,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.uint16",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_packed_structure.PackedStructure": {
  "lineno": 1199,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.c_uint16",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_padded_structure": {
  "lineno": 1110,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.uint16",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_padded_structure.PaddedStruct": {
  "lineno": 1111,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.c_uint16",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_pairs": {
  "lineno": 1283,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_pointer": {
  "lineno": 1131,
  "symbols_in_volume": [
   "ctypes.POINTER",
   "ctypes.c_uint8",
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_simple_endian_types": {
  "lineno": 1274,
  "symbols_in_volume": [
   "ctypes.c_uint16.__ctype_be__",
   "ctypes.c_uint16.__ctype_le__",
   "ctypes.c_uint8.__ctype_be__",
   "ctypes.c_uint8.__ctype_le__",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_union": {
  "lineno": 1138,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.uint16",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_union.Union": {
  "lineno": 1139,
  "symbols_in_volume": [
   "ctypes.Union",
   "ctypes.c_uint16",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_union_packed": {
  "lineno": 1175,
  "symbols_in_volume": [
   "ctypes.sizeof",
   "numpy.dtype",
   "numpy.uint16",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_union_packed.Struct": {
  "lineno": 1176,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.c_uint32",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_union_packed.Union": {
  "lineno": 1182,
  "symbols_in_volume": [
   "ctypes.Union",
   "ctypes.c_uint16",
   "ctypes.c_uint32",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_union_with_struct_packed": {
  "lineno": 1152,
  "symbols_in_volume": [
   "ctypes.sizeof",
   "numpy.dtype",
   "numpy.uint16",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_union_with_struct_packed.Struct": {
  "lineno": 1153,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.c_uint32",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_union_with_struct_packed.Union": {
  "lineno": 1160,
  "symbols_in_volume": [
   "ctypes.Union",
   "ctypes.c_uint16",
   "ctypes.c_uint32",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromCTypes.test_void_pointer": {
  "lineno": 1135,
  "symbols_in_volume": [
   "ctypes.c_void_p",
   "numpy.uintp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromDTypeAttribute": {
  "lineno": 1050,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromDTypeAttribute.test_recursion": {
  "lineno": 1058,
  "symbols_in_volume": [
   "numpy.dtype",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromDTypeAttribute.test_recursion.dt": {
  "lineno": 1059,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromDTypeAttribute.test_simple": {
  "lineno": 1051,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromDTypeAttribute.test_simple.dt": {
  "lineno": 1052,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromDTypeAttribute.test_void_subtype": {
  "lineno": 1071,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromDTypeAttribute.test_void_subtype.dt": {
  "lineno": 1072,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.void"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestFromDTypeAttribute.test_void_subtype_recursion": {
  "lineno": 1082,
  "symbols_in_volume": [
   "numpy.dtype",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestFromDTypeAttribute.test_void_subtype_recursion.dt": {
  "lineno": 1083,
  "symbols_in_volume": [
   "numpy.void"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestMetadata": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_base_metadata_copied": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_metadata_rejects_nondict": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_metadata_takes_dict": {
  "lineno": 765,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_nested_metadata": {
  "lineno": 774,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_no_metadata": {
  "lineno": 761,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMonsterType": {
  "lineno": 742,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestMonsterType.test1": {
  "lineno": 745,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestPickling.check_pickling": {
  "lineno": 968,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_builtin": {
  "lineno": 981,
  "symbols_in_volume": [
   "numpy.compat.unicode",
   "numpy.dtype",
   "numpy.int32",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_datetime": {
  "lineno": 1012,
  "symbols_in_volume": [
   "numpy.dtype",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_metadata": {
  "lineno": 1022,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_structured": {
  "lineno": 986,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_structured_aligned": {
  "lineno": 990,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_structured_padded": {
  "lineno": 998,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_structured_titles": {
  "lineno": 1006,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_structured_unaligned": {
  "lineno": 994,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_aligned_size": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_bool_commastring": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_comma_datetime": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_different_names": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_different_titles": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_equivalent_record": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_fieldless_views": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "numpy.frombuffer",
   "numpy.fromiter",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_fields_by_index": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float32",
   "numpy.int8",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "operator.getitem"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_from_dict_with_zero_width_field": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_from_dictproxy": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_multifield_index": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "operator.getitem",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_mutate": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_nonint_offsets": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.uint32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_nonint_offsets.make_dtype": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_not_lists": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_partial_dict": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_refcount_dictionary_setting": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.HAS_REFCOUNT",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_union_struct": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString": {
  "lineno": 782,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestString.test_base_dtype_with_object_type": {
  "lineno": 903,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_complex_dtype_str": {
  "lineno": 783,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_empty_string_to_object": {
  "lineno": 907,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_repr_str_subarray": {
  "lineno": 898,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_repr_structured": {
  "lineno": 848,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_repr_structured_datetime": {
  "lineno": 893,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_repr_structured_not_packed": {
  "lineno": 868,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_void_subclass_fields": {
  "lineno": 923,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.record",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_void_subclass_sized": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.record",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_void_subclass_unsized": {
  "lineno": 911,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.record",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestStructuredDtypeSparseFields": {
  "lineno": 712,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestStructuredDtypeSparseFields.test_sparse_field_assignment": {
  "lineno": 722,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "pytest.mark.valgrind_error",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestStructuredDtypeSparseFields.test_sparse_field_assignment_fancy": {
  "lineno": 732,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestStructuredObjectRefcounting": {
  "lineno": 612,
  "symbols_in_volume": [
   "numpy.testing.HAS_REFCOUNT",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestStructuredObjectRefcounting.test_structured_object_create_delete": {
  "lineno": 617,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.empty",
   "numpy.ones",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pytest.mark.skip",
   "pytest.param",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestStructuredObjectRefcounting.test_structured_object_indexing": {
  "lineno": 659,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestStructuredObjectRefcounting.test_structured_object_item_setting": {
  "lineno": 639,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.array",
   "pytest.mark.parametrize",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestStructuredObjectRefcounting.test_structured_object_take_and_repeat": {
  "lineno": 691,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.array",
   "pytest.mark.parametrize",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_alignment": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_equivalent_record": {
  "lineno": 455,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_nonequivalent_record": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_equal": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.dtype",
   "pytest.warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_invalid": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.iinfo",
   "numpy.intc",
   "numpy.intp",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_matches_ndim": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_monster": {
  "lineno": 493,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_sequence": {
  "lineno": 508,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.int16",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_sequence.IntLike": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_sequence.IntLike.__index__": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_sequence.IntLike.__int__": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_simple": {
  "lineno": 487,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_single_subarray": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.assert_dtype_equal": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.assert_dtype_not_equal": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.iter_struct_object_dtypes": {
  "lineno": 575,
  "symbols_in_volume": [
   "numpy.dtype",
   "pytest.param"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.test_dtypes_are_true": {
  "lineno": 1037,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.test_invalid_dtype_string": {
  "lineno": 1044,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_dtype.test_rational_dtype": {
  "lineno": 1027,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._rational_tests.rational",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_einsum.TestEinsum": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_einsum.TestEinsum.check_einsum_sums": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.dot",
   "numpy.dtype",
   "numpy.einsum",
   "numpy.eye",
   "numpy.full",
   "numpy.inner",
   "numpy.logical_and",
   "numpy.multiply",
   "numpy.ones",
   "numpy.outer",
   "numpy.sum",
   "numpy.tensordot",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "numpy.trace"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.optimize_compare": {
  "lineno": 758,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.random.rand",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_broadcasting_dot_cases": {
  "lineno": 859,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_collapse": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_combined_views_mapping": {
  "lineno": 853,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.einsum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_complex": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_edge_cases": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_all_contig_non_contig_output": {
  "lineno": 720,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.float32",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_broadcast": {
  "lineno": 630,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.einsum",
   "numpy.prod",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_errors": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.einsum",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_failed_on_p9_and_s390x": {
  "lineno": 712,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.random.random_sample",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_fixed_collapsingbug": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.einsum",
   "numpy.random.normal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_fixedstridebug": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.einsum",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.tensordot",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_misc": {
  "lineno": 580,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.einsum",
   "numpy.int64",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_cfloat128": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_cfloat64": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_clongdouble": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.clongdouble"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_float16": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_float32": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_float64": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_int16": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_int32": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_int64": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_int8": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_longdouble": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.longdouble"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_uint16": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_uint32": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_uint64": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_sums_uint8": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_einsum_views": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.einsum",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_expand": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_hadamard_like_products": {
  "lineno": 776,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_index_transformations": {
  "lineno": 781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_inner_product": {
  "lineno": 831,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_out_is_res": {
  "lineno": 753,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.einsum"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_random_cases": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_small_boolean_arrays": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.einsum",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsum.test_subscript_range": {
  "lineno": 619,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsumPath": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_einsum.TestEinsumPath.assert_path_equal": {
  "lineno": 892,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsumPath.build_operands": {
  "lineno": 881,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsumPath.test_edge_paths": {
  "lineno": 944,
  "symbols_in_volume": [
   "numpy.einsum_path"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsumPath.test_long_paths": {
  "lineno": 919,
  "symbols_in_volume": [
   "numpy.einsum_path"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsumPath.test_memory_contraints": {
  "lineno": 901,
  "symbols_in_volume": [
   "numpy.einsum_path"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsumPath.test_path_type_input": {
  "lineno": 988,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.einsum_path",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinsumPath.test_spaces": {
  "lineno": 1007,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.einsum"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_einsum.test_overlap": {
  "lineno": 1014,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.einsum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_errstate": {
  "lineno": null,
  "symbols_in_volume": [
   "sysconfig.get_config_var"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_errstate.TestErrstate": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_divide": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.errstate",
   "numpy.testing.assert_raises",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_errcall": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.geterrcall",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_errcall.foo": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_errstate_decorator": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_errstate_decorator.foo": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.errstate"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_invalid": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.errstate",
   "numpy.sqrt",
   "numpy.testing.assert_raises",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_extint128.exc_iter": {
  "lineno": 43,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "traceback.format_exc"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.exc_iter.iterate": {
  "lineno": 52,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_add_128": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_add_128",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_ceildiv_128_64": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_ceildiv_128_64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_divmod_128_64": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_divmod_128_64",
   "numpy.testing.assert_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_floordiv_128_64": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_floordiv_128_64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_gt_128": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_gt_128",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_mul_64_64": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_mul_64_64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_neg_128": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_neg_128",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_safe_binop": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_safe_binop",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "operator.add",
   "operator.mul",
   "operator.sub"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_shl_128": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_shl_128",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_shr_128": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_shr_128",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_sub_128": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_sub_128",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_to_128": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_to_128",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_to_64": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.extint_to_64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__add__": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__div__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__mul__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__new__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__rdiv__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__rsub__": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__sub__": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity2": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestGeomspace": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_basic": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.geomspace",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_bounds": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.geomspace",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_complex": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.geomspace",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_dtype": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.geomspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_physical_quantities": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.geomspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_start_stop_array": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.geomspace",
   "numpy.stack",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_start_stop_array_scalar": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.geomspace",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_subclass": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.geomspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_interface": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_interface.Arrayish": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_interface.Arrayish.__array_interface__": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_interface.Arrayish.__init__": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_interface.Arrayish.__mul__": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_basic": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_complex": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_corner": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_denormal_numbers": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.nextafter",
   "numpy.sctypes",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_dtype": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_equivalent_to_arange": {
  "lineno": 345,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_object": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_retstep": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.linspace",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_start_stop_array": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.stack",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_start_stop_array_scalar": {
  "lineno": 253,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_subclass": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_type": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_basic": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.logspace",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_dtype": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.logspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_physical_quantities": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.logspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_start_stop_array": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logspace",
   "numpy.stack",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_subclass": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_getlimits.TestDouble": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestDouble.test_singleton": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.core.finfo",
   "numpy.double",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestFinfo": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestFinfo.test_basic": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.complex64",
   "numpy.core.finfo",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestHalf": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestHalf.test_singleton": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.core.finfo",
   "numpy.half",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestIinfo": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestIinfo.test_basic": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.core.iinfo",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestIinfo.test_unsigned_max": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.core.iinfo",
   "numpy.sctypes",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestLongdouble": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestLongdouble.test_singleton": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.core.finfo",
   "numpy.longdouble",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestPythonFloat": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestPythonFloat.test_singleton": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.core.finfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestRepr": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestRepr.test_finfo_repr": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestRepr.test_iinfo_repr": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int16",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestSingle": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestSingle.test_singleton": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.core.finfo",
   "numpy.single",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.assert_ma_equal": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.test_instances": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.core.finfo",
   "numpy.core.iinfo"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.test_known_types": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.core.getlimits._discovered_machar",
   "numpy.core.getlimits._float_ma",
   "numpy.dtype",
   "numpy.errstate",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.longdouble"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.test_plausible_finfo": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.sctypes",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_half.TestHalf": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_half.TestHalf.setup": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.uint16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_array_interface": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_array_interface.Dummy": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_coercion": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.power",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_conversion_denormal_round_even": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_conversion_rounding": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.finfo",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.nextafter",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_conversions": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float16",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "numpy.uint16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_correctness": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.nonzero",
   "numpy.testing.assert_equal",
   "numpy.uint16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_fpe": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.divide",
   "numpy.errstate",
   "numpy.float16",
   "numpy.inf",
   "numpy.nan",
   "numpy.nextafter",
   "numpy.spacing",
   "platform.machine",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_funcs": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dot",
   "numpy.float16",
   "numpy.float32",
   "numpy.inf",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_ordering": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.nonzero",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_rounding": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_ufuncs": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.add",
   "numpy.array",
   "numpy.conjugate",
   "numpy.copysign",
   "numpy.divide",
   "numpy.divmod",
   "numpy.equal",
   "numpy.float16",
   "numpy.floor_divide",
   "numpy.fmax",
   "numpy.fmin",
   "numpy.frexp",
   "numpy.greater",
   "numpy.greater_equal",
   "numpy.inf",
   "numpy.isfinite",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.ldexp",
   "numpy.less",
   "numpy.less_equal",
   "numpy.logical_and",
   "numpy.logical_not",
   "numpy.logical_or",
   "numpy.logical_xor",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.modf",
   "numpy.multiply",
   "numpy.nan",
   "numpy.negative",
   "numpy.not_equal",
   "numpy.ones_like",
   "numpy.positive",
   "numpy.reciprocal",
   "numpy.remainder",
   "numpy.sign",
   "numpy.signbit",
   "numpy.square",
   "numpy.subtract",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_values": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.inf",
   "numpy.testing.assert_equal",
   "numpy.uint16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_nans_infs": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.float16",
   "numpy.inf",
   "numpy.isfinite",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.signbit",
   "numpy.spacing",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_spacing_nextafter": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float16",
   "numpy.inf",
   "numpy.nan",
   "numpy.nextafter",
   "numpy.spacing",
   "numpy.testing.assert_equal",
   "numpy.uint16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_half.assert_raises_fpe": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_arraytypes_fasttake": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_iterators_exceptions": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_iterators_exceptions.assign": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_mapping": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_mapping.assign": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_mapping_error_message": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.testing.assert_raises_regex",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_methods": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_multiindex_exceptions": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_put_exceptions": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_take_from_object": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_indexing.TestArrayToIndexDeprecation": {
  "lineno": 1219,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestArrayToIndexDeprecation.test_array_to_index_error": {
  "lineno": 1223,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.reshape",
   "numpy.take",
   "numpy.testing.assert_raises",
   "operator.index"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBooleanIndexing": {
  "lineno": 1198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestBooleanIndexing.test_bool_as_int_argument_errors": {
  "lineno": 1200,
  "symbols_in_volume": [
   "numpy.True_",
   "numpy.array",
   "numpy.bool_",
   "numpy.reshape",
   "numpy.take",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "operator.index"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBooleanIndexing.test_boolean_indexing_weirdness": {
  "lineno": 1211,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.assign": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.test_broadcast_subspace": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.test_index_is_larger": {
  "lineno": 572,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.test_prepend_not_one": {
  "lineno": 551,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.s_",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.test_prepending_ones": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.test_simple_broadcasting_errors": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.s_",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestCApiAccess": {
  "lineno": 1260,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestCApiAccess.test_getitem": {
  "lineno": 1261,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.arange",
   "numpy.core._multiarray_tests.array_indexing",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestCApiAccess.test_setitem": {
  "lineno": 1277,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.arange",
   "numpy.core._multiarray_tests.array_indexing",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFancyIndexingCast": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestFancyIndexingCast.test_boolean_index_cast_assign": {
  "lineno": 652,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFancyIndexingEquivalence": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestFancyIndexingEquivalence.test_cast_equivalence": {
  "lineno": 706,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFancyIndexingEquivalence.test_object_assign": {
  "lineno": 674,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFieldIndexing": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestFieldIndexing.test_scalar_return_type": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument": {
  "lineno": 1143,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_non_integer_argument_errors": {
  "lineno": 1173,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.reshape",
   "numpy.take",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_non_integer_sequence_multiplication": {
  "lineno": 1181,
  "symbols_in_volume": [
   "numpy.float_",
   "numpy.int_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_non_integer_sequence_multiplication.mult": {
  "lineno": 1183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_reduce_axis_float_index": {
  "lineno": 1190,
  "symbols_in_volume": [
   "numpy.min",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_valid_indexing": {
  "lineno": 1150,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_valid_slicing": {
  "lineno": 1160,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_assignment_needs_api": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_assignment_value_mismatch": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_assignment_value_mismatch.f": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_indexing_list": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_indexing_onedim": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_indexing_twodim": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_shape_mismatch": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broaderrors_indexing": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broken_sequence_not_nd_index": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broken_sequence_not_nd_index.SequenceLike": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broken_sequence_not_nd_index.SequenceLike.__getitem__": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broken_sequence_not_nd_index.SequenceLike.__index__": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broken_sequence_not_nd_index.SequenceLike.__len__": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_ellipsis_index": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_empty_fancy_index": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_empty_tuple_index": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int_",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_everything_returns_views": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_index_no_array_to_index": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_index_no_floats": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_indexing_array_negative_strides": {
  "lineno": 517,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_indexing_array_weird_strides": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.broadcast_to",
   "numpy.intp",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_memory_order": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_nonbaseclass_values": {
  "lineno": 352,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_nonbaseclass_values.SubClass": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_nonbaseclass_values.SubClass.__array_finalize__": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_none_index": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.newaxis",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_reverse_strides_and_subspace_bufferinit": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_reversed_strides_result_allocation": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_same_kind_index_casting": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "numpy.uintp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_array_bool": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float_",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type.ArrayLike": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type.ArrayLike.__array__": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type.Zero": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type.Zero.__index__": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_single_bool_index": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_single_int_index": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_slicing_no_floats": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_small_regressions": {
  "lineno": 428,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.intp",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint8",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_subclass_writeable": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.rec.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_too_many_fancy_indices_special_case": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_trivial_fancy_not_possible": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_trivial_fancy_out_of_bounds": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.intp",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_tuple_subclass": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_tuple_subclass.TupleSubclass": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_unaligned": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.int16",
   "numpy.int8",
   "numpy.intp",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_uncontiguous_subspace_assignment": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.full",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_void_scalar_empty_tuple": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._check_multi_index": {
  "lineno": 1011,
  "symbols_in_volume": [
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._check_single_index": {
  "lineno": 1035,
  "symbols_in_volume": [
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._compare_index_result": {
  "lineno": 1059,
  "symbols_in_volume": [
   "numpy.may_share_memory",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._get_multi_index": {
  "lineno": 772,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.arange",
   "numpy.array",
   "numpy.broadcast",
   "numpy.intp",
   "numpy.ndarray",
   "numpy.nonzero",
   "numpy.prod",
   "numpy.product",
   "numpy.ravel_multi_index"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.setup": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.int8",
   "numpy.intp",
   "numpy.prod",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_1d": {
  "lineno": 1138,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_boolean": {
  "lineno": 1091,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_multidim": {
  "lineno": 1108,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.VisibleDeprecationWarning",
   "numpy.testing.assert_raises",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_multidim.isskip": {
  "lineno": 1117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultipleEllipsisError": {
  "lineno": 1249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestMultipleEllipsisError.test_basic": {
  "lineno": 1253,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestNonIntegerArrayLike": {
  "lineno": 1232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestNonIntegerArrayLike.test_basic": {
  "lineno": 1239,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_basic": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_basic.SubClass": {
  "lineno": 593,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_fancy_on_read_only": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_fancy_on_read_only.SubClass": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_finalize_gets_full_info": {
  "lineno": 630,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_finalize_gets_full_info.SubClass": {
  "lineno": 632,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_finalize_gets_full_info.SubClass.__array_finalize__": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_item_selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_item_selection.TestTake": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_empty_argpartition": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int16",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_empty_partition": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int16",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_refcounting": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_simple": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.intp",
   "numpy.issubdtype",
   "numpy.number",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_unicode_mode": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.finfo",
   "numpy.longdouble"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_longdouble.TestCommaDecimalPointLocale": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.core.tests._locales.CommaDecimalPointLocale"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_longdouble.TestCommaDecimalPointLocale.test_fromstring_best_effort": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromstring",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestCommaDecimalPointLocale.test_fromstring_best_effort_float": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromstring",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestCommaDecimalPointLocale.test_fromstring_foreign": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.fromstring",
   "numpy.longdouble",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestCommaDecimalPointLocale.test_fromstring_foreign_repr": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.fromstring",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestCommaDecimalPointLocale.test_fromstring_foreign_sep": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromstring",
   "numpy.longdouble",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestCommaDecimalPointLocale.test_fromstring_foreign_value": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.fromstring",
   "numpy.longdouble",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestCommaDecimalPointLocale.test_repr_roundtrip_foreign": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.longdouble",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestFileBased": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_fromfile": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.fromfile",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "numpy.testing.temppath",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_fromfile_bogus": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromfile",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_fromfile_complex": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromfile",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_genfromtxt": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "numpy.testing.temppath",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_loadtxt": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "numpy.testing.temppath",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_tofile_roundtrip": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.fromfile",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "numpy.testing.temppath",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_array_and_stringlike_roundtrip": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.bytes_",
   "numpy.longdouble",
   "numpy.str_",
   "pytest.mark.parametrize",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_array_repr": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.longdouble",
   "numpy.testing.assert_",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_bogus_string": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.longdouble",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_format": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromstring",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_bogus": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromstring",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_complex": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromstring",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_empty": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromstring",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_missing": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromstring",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_longdouble_from_bool": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.longdouble",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_longdouble_from_int": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.double",
   "numpy.finfo",
   "numpy.longdouble",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_percent": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_repr_exact": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_repr_roundtrip": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_repr_roundtrip_bytes": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_scalar_extraction": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_machar": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_machar.TestMachAr": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_machar.TestMachAr._run_machar_highprec": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.machar.MachAr",
   "numpy.core.numerictypes.float96"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_machar.TestMachAr.test_underlow": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.check_unary_fuzz": {
  "lineno": 602,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.int16",
   "numpy.random.RandomState",
   "numpy.shares_memory"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_1d_manual": {
  "lineno": 877,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.add",
   "numpy.arange",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.float32",
   "numpy.float64",
   "numpy.index_exp",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_1d_manual.check": {
  "lineno": 881,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_accumulate_fuzz": {
  "lineno": 669,
  "symbols_in_volume": [
   "numpy.add.accumulate",
   "numpy.int16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_accumulate_fuzz.get_out_axis_size": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduce_fuzz": {
  "lineno": 682,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.int16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduce_fuzz.get_out_axis_size": {
  "lineno": 683,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduceat_fuzz": {
  "lineno": 689,
  "symbols_in_volume": [
   "numpy.int16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduceat_fuzz.do_reduceat": {
  "lineno": 699,
  "symbols_in_volume": [
   "numpy.add.reduceat",
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduceat_fuzz.get_out_axis_size": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduceat_manual": {
  "lineno": 712,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.arange",
   "numpy.int16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduceat_manual.check": {
  "lineno": 713,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_inplace_op_simple_manual": {
  "lineno": 921,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_ufunc_at_manual": {
  "lineno": 770,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.arange",
   "numpy.int16",
   "numpy.invert"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_ufunc_at_manual.check": {
  "lineno": 771,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_gufunc_fuzz": {
  "lineno": 726,
  "symbols_in_volume": [
   "numpy.core._umath_tests.euclidean_pdist",
   "numpy.errstate",
   "numpy.random.RandomState",
   "numpy.shares_memory",
   "numpy.sqrt",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_ufunc_1d_manual": {
  "lineno": 794,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.arange",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.dtype",
   "numpy.errstate",
   "numpy.float32",
   "numpy.float64",
   "numpy.index_exp",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.integer",
   "numpy.invert",
   "numpy.issubdtype",
   "numpy.reciprocal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_ufunc_1d_manual.check": {
  "lineno": 797,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_ufunc_call_fuzz": {
  "lineno": 665,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.invert",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_ufunc_where_same": {
  "lineno": 862,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool_",
   "numpy.invert"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_ufunc_where_same.check": {
  "lineno": 866,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap._check_assignment": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.product",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap._indices": {
  "lineno": 48,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap._indices_for_axis": {
  "lineno": 37,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap._indices_for_nelems": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.assert_copy_equivalent": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.check_internal_overlap": {
  "lineno": 450,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.core._multiarray_tests.internal_overlap",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.check_may_share_memory_easy_fuzz": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.may_share_memory",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.check_may_share_memory_exact": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.may_share_memory",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.iter_random_view_pairs": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.iter_random_view_pairs.random_slice": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.intp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.iter_random_view_pairs.random_slice_fixed_size": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_diophantine_fuzz": {
  "lineno": 81,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.core._multiarray_tests.solve_diophantine",
   "numpy.iinfo",
   "numpy.intp",
   "numpy.random.RandomState",
   "numpy.testing.assert_",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_diophantine_overflow": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.solve_diophantine",
   "numpy.iinfo",
   "numpy.int64",
   "numpy.intp",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_diophantine": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_diophantine.check": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.solve_diophantine",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_fuzz": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int8",
   "numpy.intp",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_manual": {
  "lineno": 474,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int8",
   "numpy.lib.stride_tricks.as_strided"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_slices": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._multiarray_tests.internal_overlap",
   "numpy.int16",
   "numpy.intp",
   "numpy.random.RandomState",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_slices.random_slice": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.intp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_may_share_memory_bad_max_work": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.may_share_memory",
   "numpy.shares_memory",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_may_share_memory_easy_fuzz": {
  "lineno": 354,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_may_share_memory_harder_fuzz": {
  "lineno": 364,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_may_share_memory_manual": {
  "lineno": 183,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.int16",
   "numpy.int8",
   "numpy.may_share_memory",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs": {
  "lineno": 539,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.may_share_memory",
   "numpy.shares_memory",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray.__array_interface__": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray.__init__": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray2": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray2.__array__": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray2.__init__": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_overlapping_assignments": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_shares_memory_api": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.TooHardError",
   "numpy.int8",
   "numpy.shares_memory",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.view_element_first_byte": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.lib.stride_tricks.DummyArray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_memmap.TestMemmap": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_memmap.TestMemmap.setup": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.arange",
   "tempfile.NamedTemporaryFile",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.teardown": {
  "lineno": 26,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_arithmetic_drops_references": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_attributes": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_del": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_empty_array": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.memmap",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_filename": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_equal",
   "os.path.abspath",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_filename_fileobj": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_flush": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_getitem": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_indexing_drops_references": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_memmap_subclass": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_memmap_subclass.MemmapSubClass": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.memmap"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_mmap_offset_greater_than_allocation_granularity": {
  "lineno": 194,
  "symbols_in_volume": [
   "mmap.ALLOCATIONGRANULARITY",
   "numpy.memmap",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_no_shape": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_open_with_filename": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.memmap",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_path": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_equal",
   "pathlib.Path",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_roundtrip": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.memmap",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_slicing_keeps_references": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_ufunc_return_ndarray": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.average",
   "numpy.isscalar",
   "numpy.memmap",
   "numpy.multiply",
   "numpy.ndarray",
   "numpy.product",
   "numpy.subtract",
   "numpy.sum",
   "numpy.testing.assert_",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_unnamed_file": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.memmap",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_view": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.memmap",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.testing.IS_PYPY"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon": {
  "lineno": 5929,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_exceptions": {
  "lineno": 5937,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_matrix_matrix_values": {
  "lineno": 6080,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.stack",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_matrix_vector_values": {
  "lineno": 6053,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.stack",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_result_types": {
  "lineno": 5975,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_scalar_output": {
  "lineno": 5990,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_shapes": {
  "lineno": 5955,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_vector_matrix_values": {
  "lineno": 6026,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.stack",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_vector_vector_values": {
  "lineno": 6007,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAlen": {
  "lineno": 6430,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAlen.test_basic": {
  "lineno": 6431,
  "symbols_in_volume": [
   "numpy.alen",
   "numpy.array",
   "numpy.testing.assert_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAlen.test_singleton": {
  "lineno": 6445,
  "symbols_in_volume": [
   "numpy.alen",
   "numpy.testing.assert_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAlignment": {
  "lineno": 8368,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAlignment.check": {
  "lineno": 8374,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAlignment.test_strided_loop_alignments": {
  "lineno": 8406,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.complex64",
   "numpy.float64",
   "numpy.longdouble",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAlignment.test_various_alignments": {
  "lineno": 8395,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArange": {
  "lineno": 8191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArange.test_infinite": {
  "lineno": 8192,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArange.test_nan_step": {
  "lineno": 8198,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArange.test_zero_step": {
  "lineno": 8204,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax": {
  "lineno": 4054,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.datetime64",
   "numpy.nan",
   "numpy.timedelta64"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_all": {
  "lineno": 4119,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.normal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_argmax_unicode": {
  "lineno": 4156,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_combinations": {
  "lineno": 4128,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.max",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_np_vs_ndarray": {
  "lineno": 4161,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.random.normal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_object_argmax_with_NULLs": {
  "lineno": 4177,
  "symbols_in_volume": [
   "ctypes.memset",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "pytest.mark.leaks_references"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_output_shape": {
  "lineno": 4138,
  "symbols_in_volume": [
   "numpy.int_",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin": {
  "lineno": 4189,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.datetime64",
   "numpy.nan",
   "numpy.timedelta64"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_all": {
  "lineno": 4254,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.normal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_argmin_unicode": {
  "lineno": 4305,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_combinations": {
  "lineno": 4263,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.min",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_minimum_signed_integers": {
  "lineno": 4273,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.array",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_np_vs_ndarray": {
  "lineno": 4310,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.ones",
   "numpy.random.normal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_object_argmin_with_NULLs": {
  "lineno": 4326,
  "symbols_in_volume": [
   "ctypes.memset",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "pytest.mark.leaks_references"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_output_shape": {
  "lineno": 4287,
  "symbols_in_volume": [
   "numpy.int_",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayAttributeDeletion": {
  "lineno": 7297,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayAttributeDeletion.test_multiarray_flags_not_writable_attribute_deletion": {
  "lineno": 7322,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayAttributeDeletion.test_multiarray_flags_writable_attribute_deletion": {
  "lineno": 7316,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayAttributeDeletion.test_multiarray_not_writable_attributes_deletion": {
  "lineno": 7308,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayAttributeDeletion.test_multiarray_writable_attributes_deletion": {
  "lineno": 7299,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction.test_array": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction.test_array_cont": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.asfortranarray",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction.test_array_copy_false": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction.test_array_copy_true": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction.test_array_empty": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayFinalize": {
  "lineno": 8213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayFinalize.test_lifetime_on_error": {
  "lineno": 8225,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises",
   "numpy.testing.break_cycles",
   "weakref.ref"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayFinalize.test_lifetime_on_error.Dummy": {
  "lineno": 8233,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayFinalize.test_lifetime_on_error.RaisesInFinalize": {
  "lineno": 8227,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayFinalize.test_lifetime_on_error.RaisesInFinalize.__array_finalize__": {
  "lineno": 8228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayFinalize.test_receives_base": {
  "lineno": 8216,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayFinalize.test_receives_base.SavesBase": {
  "lineno": 8218,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayFinalize.test_receives_base.SavesBase.__array_finalize__": {
  "lineno": 8219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayInterface": {
  "lineno": 7331,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayInterface.Foo": {
  "lineno": 7332,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayInterface.Foo.__array_interface__": {
  "lineno": 7340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayInterface.Foo.__float__": {
  "lineno": 7337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayInterface.Foo.__init__": {
  "lineno": 7333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayInterface.test_scalar_interface": {
  "lineno": 7347,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.parametrize",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority": {
  "lineno": 7817,
  "symbols_in_volume": [
   "operator"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Bar": {
  "lineno": 7833,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Bar.__new__": {
  "lineno": 7836,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Foo": {
  "lineno": 7827,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Foo.__new__": {
  "lineno": 7830,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Other": {
  "lineno": 7839,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Other._all": {
  "lineno": 7842,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.test_ndarray_other": {
  "lineno": 7873,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.test_ndarray_subclass": {
  "lineno": 7865,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.test_subclass_other": {
  "lineno": 7889,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.test_subclass_subclass": {
  "lineno": 7881,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAsCArray": {
  "lineno": 7482,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAsCArray.test_1darray": {
  "lineno": 7483,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._multiarray_tests.test_as_c_array",
   "numpy.double",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAsCArray.test_2darray": {
  "lineno": 7488,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._multiarray_tests.test_as_c_array",
   "numpy.double",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAsCArray.test_3darray": {
  "lineno": 7493,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._multiarray_tests.test_as_c_array",
   "numpy.double",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_assignment_broadcasting": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_assignment_broadcasting.assign": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_assignment_errors": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_assignment_errors.C": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_assignment_errors.assign": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_cast_to_string": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_longdouble_assignment": {
  "lineno": 547,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.longcomplex",
   "numpy.longdouble",
   "numpy.nextafter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_stringlike_empty_list": {
  "lineno": 532,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises",
   "operator.setitem"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_stringlike_empty_list.bad_sequence": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_stringlike_empty_list.bad_sequence.__getitem__": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_stringlike_empty_list.bad_sequence.__len__": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_unicode_assignment": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_unicode_assignment.inject_str": {
  "lineno": 514,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "numpy.core.numeric.set_string_function"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.setup": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_attributes": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_dtypeattr": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float_",
   "numpy.int_",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_fill": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_fill_max_uint64": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_array_equal",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_fill_struct_array": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_int_subclassing": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.int_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_set_stridesattr": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int8",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_set_stridesattr.make_array": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_set_stridesattr.set_strides": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_stridesattr": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_stridesattr.make_array": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop": {
  "lineno": 3324,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_array_ufunc_index": {
  "lineno": 3562,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.arange",
   "numpy.modf",
   "numpy.sin",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_array_ufunc_index.CheckIndex": {
  "lineno": 3566,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_array_ufunc_index.CheckIndex.__array_ufunc__": {
  "lineno": 3567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_inplace": {
  "lineno": 3325,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_out_override": {
  "lineno": 3610,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.multiply",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_out_override.OutClass": {
  "lineno": 3612,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_out_override.OutClass.__array_ufunc__": {
  "lineno": 3613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pos_array_ufunc_override": {
  "lineno": 3685,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pos_array_ufunc_override.A": {
  "lineno": 3686,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pos_array_ufunc_override.A.__array_ufunc__": {
  "lineno": 3687,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_array_object_dtype": {
  "lineno": 3652,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_array_object_dtype.SomeClass": {
  "lineno": 3654,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_array_object_dtype.SomeClass.__div__": {
  "lineno": 3662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_array_object_dtype.SomeClass.__eq__": {
  "lineno": 3668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_array_object_dtype.SomeClass.__init__": {
  "lineno": 3655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_array_object_dtype.SomeClass.__mul__": {
  "lineno": 3659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_array_object_dtype.SomeClass.__pow__": {
  "lineno": 3665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_array_object_dtype.pow_for": {
  "lineno": 3674,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_override_with_errors": {
  "lineno": 3631,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_override_with_errors.PowerOnly": {
  "lineno": 3633,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_override_with_errors.PowerOnly.__array_ufunc__": {
  "lineno": 3634,
  "symbols_in_volume": [
   "numpy.power"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction": {
  "lineno": 3362,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.bitwise_and",
   "numpy.bitwise_or",
   "numpy.bitwise_xor",
   "numpy.divmod",
   "numpy.floor_divide",
   "numpy.left_shift",
   "numpy.matmul",
   "numpy.multiply",
   "numpy.ndarray",
   "numpy.power",
   "numpy.remainder",
   "numpy.right_shift",
   "numpy.subtract",
   "numpy.true_divide"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.Coerced": {
  "lineno": 3388,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.array_impl": {
  "lineno": 3391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.array_ufunc_impl": {
  "lineno": 3403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.check": {
  "lineno": 3433,
  "symbols_in_volume": [
   "builtins",
   "numpy.arange",
   "numpy.ndarray",
   "numpy.ndarray.__array_ufunc__",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "operator"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.check.first_out_arg": {
  "lineno": 3444,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.iop_impl": {
  "lineno": 3400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.make_obj": {
  "lineno": 3409,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.op_impl": {
  "lineno": 3394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.rop_impl": {
  "lineno": 3397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_override_normalize_signature": {
  "lineno": 3546,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_override_normalize_signature.SomeClass": {
  "lineno": 3548,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_override_normalize_signature.SomeClass.__array_ufunc__": {
  "lineno": 3549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool": {
  "lineno": 1392,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBool._test_cast_from_flexible": {
  "lineno": 1450,
  "symbols_in_volume": [
   "numpy.False_",
   "numpy.True_",
   "numpy.array",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.check_count_nonzero": {
  "lineno": 1414,
  "symbols_in_volume": [
   "builtins.sum",
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.testing.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_cast_from_bytes": {
  "lineno": 1477,
  "symbols_in_volume": [
   "numpy.bytes_",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_cast_from_unicode": {
  "lineno": 1473,
  "symbols_in_volume": [
   "numpy.unicode_",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_cast_from_void": {
  "lineno": 1470,
  "symbols_in_volume": [
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_count_nonzero": {
  "lineno": 1429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_count_nonzero_all": {
  "lineno": 1434,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_count_nonzero_unaligned": {
  "lineno": 1440,
  "symbols_in_volume": [
   "builtins.sum",
   "numpy.count_nonzero",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_sum": {
  "lineno": 1403,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_test_interning": {
  "lineno": 1393,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBytestringArrayNonzero": {
  "lineno": 7898,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBytestringArrayNonzero.test_all_null_bstring_array_is_falsey": {
  "lineno": 7908,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBytestringArrayNonzero.test_empty_bstring_array_is_falsey": {
  "lineno": 7900,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBytestringArrayNonzero.test_null_inside_bstring_array_is_truthy": {
  "lineno": 7913,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBytestringArrayNonzero.test_whitespace_bstring_array_is_falsey": {
  "lineno": 7903,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCAPI": {
  "lineno": 3797,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCAPI.test_IsPythonScalar": {
  "lineno": 3798,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.IsPythonScalar",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCTypes": {
  "lineno": 7986,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCTypes._make_readonly": {
  "lineno": 8006,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCTypes.test_ctypes_as_parameter_holds_reference": {
  "lineno": 8059,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.IS_PYPY",
   "numpy.testing.assert_",
   "numpy.testing.break_cycles",
   "weakref.ref"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCTypes.test_ctypes_data_as_holds_reference": {
  "lineno": 8010,
  "symbols_in_volume": [
   "ctypes.c_void_p",
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.testing.IS_PYPY",
   "numpy.testing.assert_",
   "numpy.testing.break_cycles",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "weakref.ref"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCTypes.test_ctypes_is_available": {
  "lineno": 7988,
  "symbols_in_volume": [
   "ctypes",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCTypes.test_ctypes_is_not_available": {
  "lineno": 7994,
  "symbols_in_volume": [
   "ctypes",
   "numpy.array",
   "numpy.core._internal._missing_ctypes",
   "numpy.core._internal.ctypes",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCequenceMethods": {
  "lineno": 3319,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCequenceMethods.test_array_contains": {
  "lineno": 3320,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose": {
  "lineno": 6450,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestChoose.setup": {
  "lineno": 6451,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose.test_basic": {
  "lineno": 6458,
  "symbols_in_volume": [
   "numpy.choose",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose.test_broadcast1": {
  "lineno": 6462,
  "symbols_in_volume": [
   "numpy.choose",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose.test_broadcast2": {
  "lineno": 6466,
  "symbols_in_volume": [
   "numpy.choose",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose.test_output_dtype": {
  "lineno": 6470,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.choose",
   "numpy.float32",
   "numpy.result_type",
   "numpy.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip": {
  "lineno": 4371,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestClip._check_range": {
  "lineno": 4372,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip._clip_type": {
  "lineno": 4376,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.random.random",
   "numpy.sctypes",
   "numpy.testing.assert_equal",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_basic": {
  "lineno": 4410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_max_or_min": {
  "lineno": 4433,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_nan": {
  "lineno": 4442,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_record_array": {
  "lineno": 4427,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCompress": {
  "lineno": 4449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCompress.test_axis": {
  "lineno": 4450,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.compress",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCompress.test_flatten": {
  "lineno": 4466,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.compress",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCompress.test_truncate": {
  "lineno": 4460,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.compress",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion": {
  "lineno": 7499,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_array_scalar_relational_operation": {
  "lineno": 7500,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_bool_scalar": {
  "lineno": 7541,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_bool_scalar.NotConvertible": {
  "lineno": 7547,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_bool_scalar.NotConvertible.__bool__": {
  "lineno": 7548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_int_scalar": {
  "lineno": 7563,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bytes_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_int_scalar.HasTrunc": {
  "lineno": 7577,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_int_scalar.HasTrunc.__trunc__": {
  "lineno": 7578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_int_scalar.NotConvertible": {
  "lineno": 7583,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_int_scalar.NotConvertible.__int__": {
  "lineno": 7584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation._ragged_creation": {
  "lineno": 1044,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_array_of_ragged_array": {
  "lineno": 1080,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_array_too_big": {
  "lineno": 1029,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.iinfo",
   "numpy.intp",
   "numpy.ndarray",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_deep_nonragged_object": {
  "lineno": 1093,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_empty_unicode": {
  "lineno": 933,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_failed_len_sequence": {
  "lineno": 1015,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_failed_len_sequence.A": {
  "lineno": 1017,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_failed_len_sequence.A.__getitem__": {
  "lineno": 1020,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_failed_len_sequence.A.__init__": {
  "lineno": 1018,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_failed_len_sequence.A.__len__": {
  "lineno": 1022,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_iterable": {
  "lineno": 1001,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_iterable.C": {
  "lineno": 1003,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_iterable.C.__getitem__": {
  "lineno": 1004,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_iterable.C.__iter__": {
  "lineno": 1006,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_iterable.C.__len__": {
  "lineno": 1008,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_sequence": {
  "lineno": 990,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_sequence.C": {
  "lineno": 992,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_sequence.C.__getitem__": {
  "lineno": 993,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_sequence.C.__len__": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_attribute": {
  "lineno": 814,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_attribute.x": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_attribute.x.__array__": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_string": {
  "lineno": 821,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_malloc_fails": {
  "lineno": 848,
  "symbols_in_volume": [
   "numpy.core._exceptions._ArrayMemoryError",
   "numpy.dtype",
   "numpy.empty",
   "numpy.iinfo",
   "numpy.intp",
   "numpy.testing.assert_raises",
   "numpy.uint8",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_no_len_object_type": {
  "lineno": 976,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_no_len_object_type.Point2": {
  "lineno": 978,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_no_len_object_type.Point2.__getitem__": {
  "lineno": 982,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_no_len_object_type.Point2.__init__": {
  "lineno": 979,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence": {
  "lineno": 948,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Fail": {
  "lineno": 957,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Fail.__getitem__": {
  "lineno": 961,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Fail.__len__": {
  "lineno": 958,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Map": {
  "lineno": 964,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Map.__getitem__": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Map.__len__": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_ragged_ndim_object": {
  "lineno": 1052,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_ragged_shape_object": {
  "lineno": 1066,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_sequence_non_homogenous": {
  "lineno": 939,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_too_big_error": {
  "lineno": 833,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.iinfo",
   "numpy.int8",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_void": {
  "lineno": 829,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_zeros": {
  "lineno": 855,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_zeros_big": {
  "lineno": 877,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.typecodes",
   "numpy.zeros",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_zeros_like_like_zeros": {
  "lineno": 899,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.zeros",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_zeros_obj": {
  "lineno": 889,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_zeros_obj_obj": {
  "lineno": 895,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot": {
  "lineno": 5658,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestDot.setup": {
  "lineno": 5659,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_accelerate_framework_sgemv_fix": {
  "lineno": 5864,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.dot",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_accelerate_framework_sgemv_fix.aligned_array": {
  "lineno": 5866,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_accelerate_framework_sgemv_fix.as_aligned": {
  "lineno": 5877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_accelerate_framework_sgemv_fix.assert_dot_close": {
  "lineno": 5882,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_all": {
  "lineno": 5748,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.dot",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dot_2args": {
  "lineno": 5792,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.multiarray.dot",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dot_3args": {
  "lineno": 5802,
  "symbols_in_volume": [
   "numpy.core.multiarray.dot",
   "numpy.empty",
   "numpy.random.random_sample",
   "numpy.random.seed",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dot_3args_errors": {
  "lineno": 5824,
  "symbols_in_volume": [
   "numpy.core.multiarray.dot",
   "numpy.empty",
   "numpy.float32",
   "numpy.random.random_sample",
   "numpy.random.seed",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dot_array_order": {
  "lineno": 5854,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotcolumnvect1": {
  "lineno": 5718,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.ones",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotcolumnvect2": {
  "lineno": 5725,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.ones",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotmatmat": {
  "lineno": 5668,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotmatvec": {
  "lineno": 5675,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotmatvec2": {
  "lineno": 5682,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecmat": {
  "lineno": 5688,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecmat2": {
  "lineno": 5694,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecmat3": {
  "lineno": 5700,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecscalar": {
  "lineno": 5732,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecscalar2": {
  "lineno": 5740,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecvecinner": {
  "lineno": 5712,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecvecouter": {
  "lineno": 5706,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject": {
  "lineno": 5759,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ascontiguousarray",
   "numpy.dot",
   "numpy.testing.assert_equal",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec": {
  "lineno": 5760,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec.__add__": {
  "lineno": 5766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec.__init__": {
  "lineno": 5761,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec.__mul__": {
  "lineno": 5776,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec.__rmul__": {
  "lineno": 5781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec.__sub__": {
  "lineno": 5771,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDtypedescr": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestDtypedescr.test_byteorders": {
  "lineno": 595,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDtypedescr.test_construction": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64",
   "numpy.int32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDtypedescr.test_structured_non_void": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing": {
  "lineno": 3968,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_assign_mask": {
  "lineno": 4000,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_assign_mask2": {
  "lineno": 4006,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_list": {
  "lineno": 3969,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_mask": {
  "lineno": 3986,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_mask2": {
  "lineno": 3991,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_tuple": {
  "lineno": 3978,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFlags.setup": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_otherflags": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_string_align": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_void_align": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_warnonwrite": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.testing.runstring"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable_any_base": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable_any_base.frominterface": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable_any_base.frominterface.__init__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable_any_base.subclass": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable_from_buffer": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.core.records.fromstring",
   "numpy.dtype",
   "numpy.frombuffer",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable_from_c_data": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.get_c_wrapping_array",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable_from_readonly": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.core.records.fromstring",
   "numpy.dtype",
   "numpy.frombuffer",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable_pickle": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.IS_PYPY",
   "numpy.testing.assert_",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlat": {
  "lineno": 5026,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFlat.setup": {
  "lineno": 5027,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlat.test___array__": {
  "lineno": 5055,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlat.test_contiguous": {
  "lineno": 5037,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlat.test_discontiguous": {
  "lineno": 5046,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlat.test_refcount": {
  "lineno": 5081,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.intp",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFormat": {
  "lineno": 7968,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFormat.test_0d": {
  "lineno": 7970,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pi",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFormat.test_1d_format": {
  "lineno": 7979,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pi",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFormat.test_1d_no_format": {
  "lineno": 7975,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pi",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFromBuffer": {
  "lineno": 5013,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFromBuffer.test_basic": {
  "lineno": 5014,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.frombuffer",
   "numpy.random.random",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFromBuffer.test_empty": {
  "lineno": 5022,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.frombuffer",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestHash": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestHash.test_int": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestHashing": {
  "lineno": 7806,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestHashing.test_arrays_not_hashable": {
  "lineno": 7808,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestHashing.test_collections_hashable": {
  "lineno": 7812,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO": {
  "lineno": 4637,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestIO._check_from": {
  "lineno": 4872,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.fromfile",
   "numpy.fromstring",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.setup": {
  "lineno": 4640,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "numpy.random.random",
   "tempfile.mkdtemp",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.teardown": {
  "lineno": 4649,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_ascii": {
  "lineno": 4945,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_big_binary": {
  "lineno": 4905,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.fromfile",
   "numpy.int8",
   "numpy.testing.assert_",
   "numpy.tile",
   "pytest.mark.slow",
   "sys.platform",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_binary": {
  "lineno": 4900,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_bool_fromstring": {
  "lineno": 4660,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.fromstring",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_counted_string": {
  "lineno": 4933,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_counted_string_with_ws": {
  "lineno": 4941,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_dtype": {
  "lineno": 4956,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_dtype_bool": {
  "lineno": 4960,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.fromfile",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_empty_files_binary": {
  "lineno": 4677,
  "symbols_in_volume": [
   "numpy.fromfile",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_empty_files_text": {
  "lineno": 4683,
  "symbols_in_volume": [
   "numpy.fromfile",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_file_position_after_fromfile": {
  "lineno": 4784,
  "symbols_in_volume": [
   "io.DEFAULT_BUFFER_SIZE",
   "numpy.float64",
   "numpy.fromfile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_file_position_after_tofile": {
  "lineno": 4804,
  "symbols_in_volume": [
   "io.DEFAULT_BUFFER_SIZE",
   "numpy.array",
   "numpy.float64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_fromfile_offset": {
  "lineno": 4842,
  "symbols_in_volume": [
   "numpy.fromfile",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_fromfile_subarray_binary": {
  "lineno": 4999,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.fromfile",
   "numpy.fromstring",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_inf": {
  "lineno": 4890,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_int64_fromstring": {
  "lineno": 4671,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromstring",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_io_open_buffered_fromfile": {
  "lineno": 4777,
  "symbols_in_volume": [
   "io.open",
   "numpy.fromfile",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_io_open_unbuffered_fromfile": {
  "lineno": 4750,
  "symbols_in_volume": [
   "io.open",
   "numpy.fromfile",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_largish_file": {
  "lineno": 4757,
  "symbols_in_volume": [
   "numpy.fromfile",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.getsize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_load_object_array_fromfile": {
  "lineno": 4829,
  "symbols_in_volume": [
   "numpy.fromfile",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_locale": {
  "lineno": 4988,
  "symbols_in_volume": [
   "numpy.core.tests._locales.CommaDecimalPointLocale"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_long_sep": {
  "lineno": 4953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_malformed": {
  "lineno": 4949,
  "symbols_in_volume": [
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_nan": {
  "lineno": 4884,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_nofile": {
  "lineno": 4652,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.fromfile",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_numbers": {
  "lineno": 4896,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_binary_str": {
  "lineno": 4714,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_dump_pathlib": {
  "lineno": 4708,
  "symbols_in_volume": [
   "numpy.load",
   "numpy.testing.assert_array_equal",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_file": {
  "lineno": 4689,
  "symbols_in_volume": [
   "numpy.fromfile",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_filename": {
  "lineno": 4697,
  "symbols_in_volume": [
   "numpy.fromfile",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_pathlib": {
  "lineno": 4702,
  "symbols_in_volume": [
   "numpy.fromfile",
   "numpy.testing.assert_array_equal",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_repr": {
  "lineno": 4732,
  "symbols_in_volume": [
   "numpy.fromstring",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_str": {
  "lineno": 4723,
  "symbols_in_volume": [
   "numpy.fromstring",
   "numpy.isfinite",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_string": {
  "lineno": 4930,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_string_with_ws": {
  "lineno": 4938,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_tofile_format": {
  "lineno": 4980,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_tofile_sep": {
  "lineno": 4970,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_uint64_fromstring": {
  "lineno": 4665,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromstring",
   "numpy.testing.assert_array_equal",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_unseekable_fromfile": {
  "lineno": 4738,
  "symbols_in_volume": [
   "io.open",
   "numpy.fromfile",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_unseekable_fromfile.fail": {
  "lineno": 4742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner": {
  "lineno": 6352,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_3d_tensor": {
  "lineno": 6402,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.inner",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_inner_product_with_various_contiguities": {
  "lineno": 6377,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.inner",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_inner_scalar_and_vector": {
  "lineno": 6361,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inner",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_inner_type_mismatch": {
  "lineno": 6354,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inner",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_vecself": {
  "lineno": 6369,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.inner",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestLexsort": {
  "lineno": 4582,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestLexsort.test_basic": {
  "lineno": 4583,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.lexsort",
   "numpy.sort",
   "numpy.testing.assert_array_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestLexsort.test_datetime": {
  "lineno": 4604,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lexsort",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestLexsort.test_invalid_axis": {
  "lineno": 4633,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.lexsort",
   "numpy.linspace",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestLexsort.test_mixed": {
  "lineno": 4596,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lexsort",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestLexsort.test_object": {
  "lineno": 4617,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.lexsort",
   "numpy.random.choice",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMapIter": {
  "lineno": 7460,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMapIter.test_mapiter": {
  "lineno": 7461,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.core._multiarray_tests.test_inplace_increment",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul": {
  "lineno": 6146,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.matmul",
   "numpy.zeros"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_dot_equivalent": {
  "lineno": 6213,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.matmul",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_bool": {
  "lineno": 6285,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.dot",
   "numpy.int8",
   "numpy.matmul",
   "numpy.max",
   "numpy.random.PCG64",
   "numpy.random.default_rng",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_empty": {
  "lineno": 6261,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.matmul",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_exception_add": {
  "lineno": 6276,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.matmul",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_exception_add.multiply_not_add": {
  "lineno": 6278,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_exception_add.multiply_not_add.__mul__": {
  "lineno": 6279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_exception_multiply": {
  "lineno": 6267,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.matmul",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_exception_multiply.add_not_multiply": {
  "lineno": 6269,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_exception_multiply.add_not_multiply.__add__": {
  "lineno": 6270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_object": {
  "lineno": 6240,
  "symbols_in_volume": [
   "fractions.Fraction",
   "numpy.testing.assert_allclose",
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_object.random_ints": {
  "lineno": 6244,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_matmul_object_type_scalar": {
  "lineno": 6255,
  "symbols_in_volume": [
   "fractions.Fraction",
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_out_arg": {
  "lineno": 6149,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.array",
   "numpy.complex128",
   "numpy.dot",
   "numpy.int32",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises_regex",
   "numpy.testing.suppress_warnings",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_out_contiguous": {
  "lineno": 6180,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator": {
  "lineno": 6304,
  "symbols_in_volume": [
   "operator.matmul"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator.test_array_priority_override": {
  "lineno": 6308,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator.test_array_priority_override.A": {
  "lineno": 6310,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator.test_array_priority_override.A.__matmul__": {
  "lineno": 6313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator.test_array_priority_override.A.__rmatmul__": {
  "lineno": 6316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator.test_matmul_raises": {
  "lineno": 6324,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int8",
   "numpy.testing.assert_raises",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMemEventHook": {
  "lineno": 7448,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMemEventHook.test_mem_seteventhook": {
  "lineno": 7449,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.test_pydatamem_seteventhook_end",
   "numpy.core._multiarray_tests.test_pydatamem_seteventhook_start",
   "numpy.testing.break_cycles",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods": {
  "lineno": 1569,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.assert_partitioned": {
  "lineno": 2648,
  "symbols_in_volume": [
   "numpy.sort",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_less"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test__complex__": {
  "lineno": 3279,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test__complex__should_not_work": {
  "lineno": 3297,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argpartition_empty_array": {
  "lineno": 2428,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "numpy.partition",
   "numpy.testing.assert_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argpartition_gh5524": {
  "lineno": 2768,
  "symbols_in_volume": [
   "numpy.argpartition",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argpartition_integer": {
  "lineno": 2400,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argpartition_out_of_range": {
  "lineno": 2378,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argsort": {
  "lineno": 2003,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.float32",
   "numpy.int32",
   "numpy.intp",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.uint32",
   "numpy.unicode_",
   "numpy.zeros",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_arr_mult": {
  "lineno": 2789,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.dot",
   "numpy.float32",
   "numpy.float64",
   "numpy.matmul",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_choose": {
  "lineno": 1592,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.choose",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_compress": {
  "lineno": 1573,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_conjugate": {
  "lineno": 3242,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.conjugate",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_copy": {
  "lineno": 1941,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_copy.assert_c": {
  "lineno": 1947,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_copy.assert_fortran": {
  "lineno": 1942,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_diagonal": {
  "lineno": 2979,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_diagonal_memleak": {
  "lineno": 3015,
  "symbols_in_volume": [
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.zeros",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_diagonal_view_notwriteable": {
  "lineno": 3002,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.diagonal",
   "numpy.eye",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot": {
  "lineno": 2897,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_matmul_inner_array_casting_fails": {
  "lineno": 2956,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.inner",
   "numpy.matmul",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_matmul_inner_array_casting_fails.A": {
  "lineno": 2958,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_matmul_inner_array_casting_fails.A.__array__": {
  "lineno": 2959,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_matmul_out": {
  "lineno": 2944,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.matmul",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_matmul_out.Sub": {
  "lineno": 2946,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_out_mem_overlap": {
  "lineno": 2922,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.dtype",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_type_mismatch": {
  "lineno": 2915,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_flatten": {
  "lineno": 2774,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_matmul_out": {
  "lineno": 2967,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.matmul",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_no_dgemv": {
  "lineno": 2867,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.broadcast_to",
   "numpy.dot",
   "numpy.dtype",
   "numpy.matmul",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition": {
  "lineno": 2440,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.argpartition",
   "numpy.array",
   "numpy.complex64",
   "numpy.float32",
   "numpy.int32",
   "numpy.isnan",
   "numpy.nan",
   "numpy.ones",
   "numpy.partition",
   "numpy.random.shuffle",
   "numpy.roll",
   "numpy.sort",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_array_less",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.tile",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_cdtype": {
  "lineno": 2724,
  "symbols_in_volume": [
   "numpy.argpartition",
   "numpy.array",
   "numpy.partition",
   "numpy.sort",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_empty_array": {
  "lineno": 2418,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.partition",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_fuzz": {
  "lineno": 2755,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.partition",
   "numpy.random.randint",
   "numpy.random.shuffle",
   "numpy.sort",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_integer": {
  "lineno": 2409,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_iterative": {
  "lineno": 2656,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argpartition",
   "numpy.array",
   "numpy.partition",
   "numpy.random.shuffle",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.tile",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_out_of_range": {
  "lineno": 2389,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_unicode_kind": {
  "lineno": 2749,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_prod": {
  "lineno": 1617,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint16",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_put": {
  "lineno": 3063,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.put",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.typecodes",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_ravel": {
  "lineno": 3103,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.may_share_memory",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_ravel_subclass": {
  "lineno": 3194,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_ravel_subclass.ArraySubclass": {
  "lineno": 3195,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_repeat": {
  "lineno": 1635,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_reshape": {
  "lineno": 1666,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_round": {
  "lineno": 1681,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_round.check_round": {
  "lineno": 1682,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted": {
  "lineno": 2146,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.complex128",
   "numpy.empty",
   "numpy.intp",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted_return_type": {
  "lineno": 2366,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted_return_type.A": {
  "lineno": 2368,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted_unicode": {
  "lineno": 2248,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted_with_invalid_sorter": {
  "lineno": 2275,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.searchsorted",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted_with_sorter": {
  "lineno": 2289,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.int16",
   "numpy.intp",
   "numpy.linspace",
   "numpy.ndarray",
   "numpy.random.rand",
   "numpy.random.shuffle",
   "numpy.sort",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_size_zero_memleak": {
  "lineno": 3025,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.float64",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort": {
  "lineno": 1712,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.nan",
   "numpy.sort",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_axis": {
  "lineno": 1858,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_bad_ordering": {
  "lineno": 1884,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_bad_ordering.Boom": {
  "lineno": 1887,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_bad_ordering.Boom.__lt__": {
  "lineno": 1888,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_complex": {
  "lineno": 1767,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.float32",
   "numpy.float64",
   "numpy.longdouble",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_complex_byte_swapping": {
  "lineno": 1792,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_degraded": {
  "lineno": 1926,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.sort",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_object": {
  "lineno": 1816,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_order": {
  "lineno": 1966,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.strchar",
   "numpy.rec.fromarrays",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises_regex",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_raises": {
  "lineno": 1911,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.array",
   "numpy.random.shuffle",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_raises.Raiser": {
  "lineno": 1917,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_raises.Raiser.raises_anything": {
  "lineno": 1918,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_signed": {
  "lineno": 1752,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_size_0": {
  "lineno": 1874,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sort",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_string": {
  "lineno": 1802,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bytes_",
   "numpy.testing.assert_equal",
   "numpy.unicode_",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_structured": {
  "lineno": 1830,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_time": {
  "lineno": 1844,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_unicode_kind": {
  "lineno": 2140,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_unsigned": {
  "lineno": 1737,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_squeeze": {
  "lineno": 1698,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_swapaxes": {
  "lineno": 3210,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.indices",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_trace": {
  "lineno": 3036,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_trace_subclass": {
  "lineno": 3053,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_trace_subclass.MyArray": {
  "lineno": 3056,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_transpose": {
  "lineno": 1705,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_void_sort": {
  "lineno": 1898,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.random.randint",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinMax": {
  "lineno": 4338,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMinMax.test_axis": {
  "lineno": 4349,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.amax",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinMax.test_datetime": {
  "lineno": 4353,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.amin",
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinMax.test_scalar": {
  "lineno": 4340,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.amax",
   "numpy.amin",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType": {
  "lineno": 6763,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType.test_object": {
  "lineno": 6785,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.min_scalar_type",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType.test_usigned_int": {
  "lineno": 6775,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.min_scalar_type",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType.test_usigned_longlong": {
  "lineno": 6780,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.min_scalar_type",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType.test_usigned_short": {
  "lineno": 6770,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.min_scalar_type",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType.test_usigned_shortshort": {
  "lineno": 6765,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.min_scalar_type",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter": {
  "lineno": 6521,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pytest.mark.parametrize"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_circular": {
  "lineno": 6591,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._multiarray_tests.test_neighborhood_iterator",
   "numpy.linspace",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_mirror": {
  "lineno": 6581,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._multiarray_tests.test_neighborhood_iterator",
   "numpy.linspace",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_mirror2d": {
  "lineno": 6551,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._multiarray_tests.test_neighborhood_iterator",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_simple": {
  "lineno": 6562,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.test_neighborhood_iterator",
   "numpy.linspace",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_simple2d": {
  "lineno": 6524,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._multiarray_tests.test_neighborhood_iterator",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol": {
  "lineno": 6901,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol._check_roundtrip": {
  "lineno": 6904,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_ctypes_integer_via_memoryview": {
  "lineno": 7273,
  "symbols_in_volume": [
   "ctypes.c_int",
   "ctypes.c_long",
   "ctypes.c_longlong",
   "numpy.asarray",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_ctypes_struct_via_memoryview": {
  "lineno": 7281,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_ctypes_struct_via_memoryview.foo": {
  "lineno": 7283,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.c_uint32",
   "ctypes.c_uint8"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_error_message_unsupported": {
  "lineno": 7259,
  "symbols_in_volume": [
   "ctypes.c_wchar",
   "numpy.array",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_error_pointer_type": {
  "lineno": 7250,
  "symbols_in_volume": [
   "ctypes.c_uint8",
   "ctypes.pointer",
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_error_too_many_dims": {
  "lineno": 7226,
  "symbols_in_volume": [
   "ctypes.c_uint8",
   "gc.collect",
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises_regex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_error_too_many_dims.make_ctype": {
  "lineno": 7228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_discontiguous": {
  "lineno": 7064,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_endian": {
  "lineno": 7126,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_flags": {
  "lineno": 7141,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._multiarray_tests.get_buffer_info",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_record": {
  "lineno": 7074,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.dtype",
   "numpy.half",
   "numpy.iinfo",
   "numpy.intp",
   "numpy.longdouble",
   "numpy.ones",
   "numpy.single",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_simple_1d": {
  "lineno": 7044,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_simple_nd": {
  "lineno": 7054,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_subarray": {
  "lineno": 7116,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_invalid_buffer_format": {
  "lineno": 7036,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_max_dims": {
  "lineno": 7222,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_out_of_order_fields": {
  "lineno": 7209,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_padded_struct_array": {
  "lineno": 7163,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.int8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_padding": {
  "lineno": 7147,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_reference_leak": {
  "lineno": 7152,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core._internal",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_relaxed_strides": {
  "lineno": 7182,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.core._multiarray_tests.get_buffer_info",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_roundtrip": {
  "lineno": 6920,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.float32",
   "numpy.float64",
   "numpy.half",
   "numpy.longdouble",
   "numpy.single",
   "numpy.testing.assert_raises",
   "numpy.zeros",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_roundtrip_half": {
  "lineno": 6990,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_roundtrip_scalar": {
  "lineno": 7032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_roundtrip_single_types": {
  "lineno": 7009,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.typeDict.values",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewaxis": {
  "lineno": 4364,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestNewaxis.test_basic": {
  "lineno": 4365,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.newaxis",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype": {
  "lineno": 6794,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype._check": {
  "lineno": 6795,
  "symbols_in_volume": [
   "numpy.core._internal._dtype_from_pep3118",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_byteorder_inside_struct": {
  "lineno": 6860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_char_vs_string": {
  "lineno": 6881,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_field_order": {
  "lineno": 6888,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_intra_padding": {
  "lineno": 6866,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_intra_padding.aligned": {
  "lineno": 6871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_native_padding": {
  "lineno": 6801,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_native_padding_2": {
  "lineno": 6813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_native_padding_3": {
  "lineno": 6841,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_padding_with_array_inside_struct": {
  "lineno": 6853,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_trailing_padding": {
  "lineno": 6818,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_trailing_padding.aligned": {
  "lineno": 6824,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_unnamed_fields": {
  "lineno": 6893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling": {
  "lineno": 3814,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestPickling._loads": {
  "lineno": 3908,
  "symbols_in_volume": [
   "numpy.compat.pickle.loads"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_correct_protocol5_error_message": {
  "lineno": 3815,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "pytest.mark.skipif",
   "pytest.raises",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_datetime64_byteorder": {
  "lineno": 3956,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_f_contiguous_array": {
  "lineno": 3856,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_non_contiguous_array": {
  "lineno": 3874,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_record_array_with_object_dtype": {
  "lineno": 3835,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_roundtrip": {
  "lineno": 3887,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal",
   "numpy.testing.break_cycles",
   "numpy.transpose",
   "weakref.ref"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_subarray_int_shape": {
  "lineno": 3950,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version0_float32": {
  "lineno": 3919,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version0_int8": {
  "lineno": 3913,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int8",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version0_object": {
  "lineno": 3925,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version1_float32": {
  "lineno": 3938,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version1_int8": {
  "lineno": 3932,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int8",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version1_object": {
  "lineno": 3944,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask": {
  "lineno": 4472,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_byteorder": {
  "lineno": 4496,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.putmask",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_ip_types": {
  "lineno": 4477,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.random.random",
   "numpy.sctypes.values",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_mask_size": {
  "lineno": 4493,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.putmask",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_overlaps": {
  "lineno": 4515,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.putmask",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_record_array": {
  "lineno": 4502,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.putmask",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.tst_basic": {
  "lineno": 4473,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.putmask",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord": {
  "lineno": 5197,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_bytes_fields": {
  "lineno": 5210,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_empty_structure_creation": {
  "lineno": 5304,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_field_names": {
  "lineno": 5247,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_field_rename": {
  "lineno": 5198,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_fromarrays_unicode": {
  "lineno": 5232,
  "symbols_in_volume": [
   "numpy.core.records.fromarrays",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_multifield_indexing_view": {
  "lineno": 5311,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_multiple_field_name_occurrence": {
  "lineno": 5203,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_multiple_field_name_occurrence.test_dtype_init": {
  "lineno": 5204,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_multiple_field_name_unicode": {
  "lineno": 5225,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_multiple_field_name_unicode.test_dtype_unicode": {
  "lineno": 5226,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_record_hash": {
  "lineno": 5288,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_record_no_hash": {
  "lineno": 5300,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_unicode_order": {
  "lineno": 5239,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRepeat": {
  "lineno": 6480,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestRepeat.setup": {
  "lineno": 6481,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRepeat.test_axis_spec": {
  "lineno": 6495,
  "symbols_in_volume": [
   "numpy.repeat",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRepeat.test_basic": {
  "lineno": 6485,
  "symbols_in_volume": [
   "numpy.repeat",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRepeat.test_broadcast1": {
  "lineno": 6490,
  "symbols_in_volume": [
   "numpy.repeat",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRepeat.test_broadcast2": {
  "lineno": 6505,
  "symbols_in_volume": [
   "numpy.repeat",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize": {
  "lineno": 5098,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_0d_shape": {
  "lineno": 5133,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_basic": {
  "lineno": 5100,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.IS_PYPY",
   "numpy.testing._private.utils._no_tracing",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_check_reference": {
  "lineno": 5111,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_check_weakref": {
  "lineno": 5190,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises",
   "weakref.ref"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_empty_view": {
  "lineno": 5182,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_freeform_shape": {
  "lineno": 5151,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.IS_PYPY",
   "numpy.testing._private.utils._no_tracing",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_int_shape": {
  "lineno": 5117,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.IS_PYPY",
   "numpy.testing._private.utils._no_tracing",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_invalid_arguments": {
  "lineno": 5145,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_none_shape": {
  "lineno": 5126,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_obj_obj": {
  "lineno": 5170,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.IS_PYPY",
   "numpy.testing._private.utils._no_tracing",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_zeros_appended": {
  "lineno": 5160,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.IS_PYPY",
   "numpy.testing._private.utils._no_tracing",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.setup": {
  "lineno": 715,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_ellipsis_subscript": {
  "lineno": 718,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_empty_subscript": {
  "lineno": 723,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_newaxis": {
  "lineno": 752,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_newaxis.subscript": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_subscript": {
  "lineno": 728,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_subscript_assignment": {
  "lineno": 733,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_subscript_assignment.assign": {
  "lineno": 736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_newaxis": {
  "lineno": 741,
  "symbols_in_volume": [
   "numpy.newaxis.shape",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_overlapping_assignment": {
  "lineno": 761,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf": {
  "lineno": 7759,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.check_array": {
  "lineno": 7765,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_array_float32": {
  "lineno": 7778,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_array_float64": {
  "lineno": 7781,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_array_int32": {
  "lineno": 7772,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_array_int64": {
  "lineno": 7775,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_empty_array": {
  "lineno": 7761,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_error": {
  "lineno": 7801,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_reshape": {
  "lineno": 7788,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_resize": {
  "lineno": 7792,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing._private.utils._no_tracing",
   "numpy.testing.assert_",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_view": {
  "lineno": 7784,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter": {
  "lineno": 6601,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_circular": {
  "lineno": 6677,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._multiarray_tests.test_neighborhood_iterator_oob",
   "numpy.float64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_const": {
  "lineno": 6603,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._multiarray_tests.test_neighborhood_iterator_oob",
   "numpy.float64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_mirror": {
  "lineno": 6629,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._multiarray_tests.test_neighborhood_iterator_oob",
   "numpy.float64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_strict_within": {
  "lineno": 6725,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._multiarray_tests.test_neighborhood_iterator_oob",
   "numpy.float64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats": {
  "lineno": 5346,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStats.setup": {
  "lineno": 5350,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "numpy.random.random",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_ddof": {
  "lineno": 5463,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_ddof_too_big": {
  "lineno": 5477,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_dtype_from_dtype": {
  "lineno": 5436,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.eye",
   "numpy.testing.assert_",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_dtype_from_input": {
  "lineno": 5387,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "numpy.eye",
   "numpy.float64",
   "numpy.testing.assert_",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_empty": {
  "lineno": 5488,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_keepdims": {
  "lineno": 5363,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_mean_axis_error": {
  "lineno": 5518,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._exceptions.AxisError",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_mean_float16": {
  "lineno": 5513,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_mean_values": {
  "lineno": 5502,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_out": {
  "lineno": 5374,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.eye",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_python_type": {
  "lineno": 5357,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.mean",
   "numpy.std",
   "numpy.testing.assert_equal",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_std_values": {
  "lineno": 5572,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass": {
  "lineno": 5579,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass.TestArray": {
  "lineno": 5580,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass.TestArray.__array_finalize__": {
  "lineno": 5587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass.TestArray.__new__": {
  "lineno": 5581,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_var_axis_error": {
  "lineno": 5566,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._exceptions.AxisError",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_var_complex_byteorder": {
  "lineno": 5559,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_var_complex_values": {
  "lineno": 5533,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_var_dimensions": {
  "lineno": 5548,
  "symbols_in_volume": [
   "numpy.stack",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_var_values": {
  "lineno": 5524,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare": {
  "lineno": 4022,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare.test_mixed": {
  "lineno": 4033,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare.test_string": {
  "lineno": 4023,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare.test_unicode": {
  "lineno": 4043,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_assignment": {
  "lineno": 1336,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_assignment.testassign": {
  "lineno": 1337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_base_attr": {
  "lineno": 1331,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_casting": {
  "lineno": 1183,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.can_cast",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_multiindex_titles": {
  "lineno": 1384,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_objview": {
  "lineno": 1241,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_scalar_assignment": {
  "lineno": 1373,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_setfield": {
  "lineno": 1250,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_setfield_object": {
  "lineno": 1259,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_setfield_object.testassign": {
  "lineno": 1270,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_structuredscalar_indexing": {
  "lineno": 1378,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_subarray_comparison": {
  "lineno": 1114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.rec.fromrecords",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_subarray_field_access": {
  "lineno": 1100,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_zero_width_string": {
  "lineno": 1275,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.load",
   "numpy.ndarray",
   "numpy.save",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.temppath",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSubscripting": {
  "lineno": 3807,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestSubscripting.test_test_zero_rank": {
  "lineno": 3808,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int_",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake": {
  "lineno": 4526,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_byteorder": {
  "lineno": 4564,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_clip": {
  "lineno": 4551,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_ip_types": {
  "lineno": 4531,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.sctypes.values",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_out_overlap": {
  "lineno": 4576,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.take",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_raise": {
  "lineno": 4544,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_record_array": {
  "lineno": 4569,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_wrap": {
  "lineno": 4557,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.tst_basic": {
  "lineno": 4527,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide": {
  "lineno": 3695,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_elide_broadcast": {
  "lineno": 3761,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_elide_readonly": {
  "lineno": 3785,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.broadcast_to",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_elide_scalar": {
  "lineno": 3771,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_elide_scalar_readonly": {
  "lineno": 3776,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_elide_updateifcopy": {
  "lineno": 3790,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_extension_incref_elide": {
  "lineno": 3698,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.incref_elide",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_extension_incref_elide_stack": {
  "lineno": 3713,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.incref_elide_l",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_temporary_with_cast": {
  "lineno": 3728,
  "symbols_in_volume": [
   "numpy.clongdouble",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.int64",
   "numpy.longdouble",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.true_divide"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeArrayNonzero": {
  "lineno": 7947,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeArrayNonzero.test_all_null_ustring_array_is_falsey": {
  "lineno": 7957,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeArrayNonzero.test_empty_ustring_array_is_falsey": {
  "lineno": 7949,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeArrayNonzero.test_null_inside_ustring_array_is_truthy": {
  "lineno": 7962,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeArrayNonzero.test_whitespace_ustring_array_is_falsey": {
  "lineno": 7952,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeEncoding": {
  "lineno": 7919,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeEncoding.test_assign_scalar": {
  "lineno": 7934,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeEncoding.test_fill_scalar": {
  "lineno": 7940,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeEncoding.test_round_trip": {
  "lineno": 7924,
  "symbols_in_volume": [
   "numpy.zeros",
   "sys.maxunicode"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestVdot": {
  "lineno": 5598,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestVdot.test_basic": {
  "lineno": 5599,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.isscalar",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.vdot"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestVdot.test_vdot_array_order": {
  "lineno": 5625,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.vdot"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestVdot.test_vdot_uncontiguous": {
  "lineno": 5635,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal",
   "numpy.vdot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestView": {
  "lineno": 5321,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestView.test_basic": {
  "lineno": 5322,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int8",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWarnings": {
  "lineno": 6751,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestWarnings.test_complex_warning": {
  "lineno": 6753,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere": {
  "lineno": 7592,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_basic": {
  "lineno": 7593,
  "symbols_in_volume": [
   "numpy.clongdouble",
   "numpy.complex128",
   "numpy.double",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.longdouble",
   "numpy.ones",
   "numpy.ones_like",
   "numpy.testing.assert_equal",
   "numpy.where",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_dtype_mix": {
  "lineno": 7674,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.uint32",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_empty_result": {
  "lineno": 7737,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.intp",
   "numpy.testing.assert_array_equal",
   "numpy.vstack",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_error": {
  "lineno": 7717,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_exotic": {
  "lineno": 7619,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_foreign": {
  "lineno": 7698,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_largedim": {
  "lineno": 7745,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_ndim": {
  "lineno": 7660,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_string": {
  "lineno": 7724,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy": {
  "lineno": 8078,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_argmax_with_out": {
  "lineno": 8080,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.empty",
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_argmin_with_out": {
  "lineno": 8086,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.empty",
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_choose_mod_raise": {
  "lineno": 8117,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.choose",
   "numpy.empty",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_dealloc_warning": {
  "lineno": 8157,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._multiarray_tests.npy_abuse_writebackifcopy",
   "numpy.testing.suppress_warnings",
   "pytest.mark.leaks_references"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_dot_out": {
  "lineno": 8133,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_flatiter__array__": {
  "lineno": 8126,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_insert_noncontiguous": {
  "lineno": 8092,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.place",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_put_noncontiguous": {
  "lineno": 8100,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.put",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_putmask_noncontiguous": {
  "lineno": 8105,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.putmask",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_take_mode_raise": {
  "lineno": 8111,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.take",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_view_assign": {
  "lineno": 8139,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._multiarray_tests.npy_create_writebackifcopy",
   "numpy.core._multiarray_tests.npy_resolve",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_view_discard_refcount": {
  "lineno": 8167,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._multiarray_tests.npy_create_writebackifcopy",
   "numpy.core._multiarray_tests.npy_discard",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank": {
  "lineno": 610,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.setup": {
  "lineno": 611,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_constructor": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_ellipsis_subscript": {
  "lineno": 614,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_ellipsis_subscript_assignment": {
  "lineno": 635,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_empty_subscript": {
  "lineno": 621,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_empty_subscript_assignment": {
  "lineno": 642,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_newaxis": {
  "lineno": 670,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_newaxis.subscript": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_subscript": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_subscript_assignment": {
  "lineno": 649,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_subscript_assignment.assign": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_newaxis": {
  "lineno": 659,
  "symbols_in_volume": [
   "numpy.newaxis.shape",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_output": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_real_imag": {
  "lineno": 697,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible": {
  "lineno": 1482,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible._test_sort_partition": {
  "lineno": 1501,
  "symbols_in_volume": [
   "numpy",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible._zeros": {
  "lineno": 1483,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.void",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_argpartition": {
  "lineno": 1520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_argsort": {
  "lineno": 1514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_create": {
  "lineno": 1493,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_dumps": {
  "lineno": 1540,
  "symbols_in_volume": [
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_partition": {
  "lineno": 1517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_pickle": {
  "lineno": 1544,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_pickle_with_buffercallback": {
  "lineno": 1553,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_resize": {
  "lineno": 1523,
  "symbols_in_volume": [
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_sort": {
  "lineno": 1511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_view": {
  "lineno": 1530,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray._aligned_zeros": {
  "lineno": 39,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.dtype",
   "numpy.empty",
   "numpy.ndarray",
   "numpy.uint8",
   "numpy.zeros",
   "operator.mul"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray._mean": {
  "lineno": 5334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray._std": {
  "lineno": 5342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray._var": {
  "lineno": 5338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_array_interface_empty_shape": {
  "lineno": 7393,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_array_interface_empty_shape.DummyArray1": {
  "lineno": 7399,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_array_interface_empty_shape.DummyArray2": {
  "lineno": 7409,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_array_interface_itemsize": {
  "lineno": 7383,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_array_interface_offset": {
  "lineno": 7418,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_array_interface_offset.DummyArray": {
  "lineno": 7426,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_equal_override": {
  "lineno": 8266,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_equal_override.MyAlwaysEqual": {
  "lineno": 8270,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_equal_override.MyAlwaysEqual.__eq__": {
  "lineno": 8271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_equal_override.MyAlwaysEqual.__ne__": {
  "lineno": 8274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_equal_override.MyAlwaysEqualNew": {
  "lineno": 8280,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_equal_override.MyAlwaysEqualOld": {
  "lineno": 8277,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_flat_element_deletion": {
  "lineno": 7432,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_getfield": {
  "lineno": 8439,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal",
   "pytest.raises",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_interface_no_shape": {
  "lineno": 7376,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_interface_no_shape.ArrayLike": {
  "lineno": 7377,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_matmul_axes": {
  "lineno": 6340,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.matmul",
   "numpy.swapaxes",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_matmul_inplace": {
  "lineno": 6329,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_raises",
   "operator.imatmul"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_npymath_complex": {
  "lineno": 8292,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.absolute",
   "numpy.angle",
   "numpy.clongdouble",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.core._multiarray_tests.npy_cabs",
   "numpy.core._multiarray_tests.npy_carg",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_npymath_real": {
  "lineno": 8311,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.core._multiarray_tests.npy_cosh",
   "numpy.core._multiarray_tests.npy_log10",
   "numpy.core._multiarray_tests.npy_sinh",
   "numpy.core._multiarray_tests.npy_tan",
   "numpy.core._multiarray_tests.npy_tanh",
   "numpy.cosh",
   "numpy.errstate",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.log10",
   "numpy.longdouble",
   "numpy.nan",
   "numpy.sinh",
   "numpy.tan",
   "numpy.tanh",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_orderconverter_with_nonASCII_unicode_ordering": {
  "lineno": 8260,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_scalar_element_deletion": {
  "lineno": 7443,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_uintalignment_and_alignment": {
  "lineno": 8332,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.get_struct_alignments",
   "numpy.dtype",
   "numpy.exp",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_nditer.TestIterNested": {
  "lineno": 2189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_0d": {
  "lineno": 2337,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nested_iters",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_basic": {
  "lineno": 2191,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nested_iters",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_broadcast": {
  "lineno": 2267,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nested_iters",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_dtype_buffered": {
  "lineno": 2322,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nested_iters",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_dtype_copy": {
  "lineno": 2280,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nested_iters",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_flip_axes": {
  "lineno": 2237,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nested_iters",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_iter_nested_iters_dtype_buffered": {
  "lineno": 2354,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nested_iters",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_reorder": {
  "lineno": 2207,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nested_iters",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.iter_indices": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.iter_iterindices": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.iter_multi_index": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_0d_iter": {
  "lineno": 2674,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.nditer",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_close_equivalent": {
  "lineno": 2825,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_close_equivalent.add_close": {
  "lineno": 2828,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.nditer"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_close_equivalent.add_context": {
  "lineno": 2838,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.nditer"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_close_raises": {
  "lineno": 2851,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_buffered_readwrite": {
  "lineno": 1375,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_errors": {
  "lineno": 1489,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.newaxis",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_itorder": {
  "lineno": 1388,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_opaxes": {
  "lineno": 1415,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_simple": {
  "lineno": 1365,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_subtype": {
  "lineno": 1467,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.nditer",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_subtype.MyNDArray": {
  "lineno": 1469,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_types_byte_order": {
  "lineno": 1445,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nditer",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_types_promotion": {
  "lineno": 1426,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_types_scalar": {
  "lineno": 1459,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.dtype",
   "numpy.float32",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocated_array_dtypes": {
  "lineno": 2655,
  "symbols_in_volume": [
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_array_cast": {
  "lineno": 856,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_array_cast_errors": {
  "lineno": 918,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_assign_mapping": {
  "lineno": 775,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.prod",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_c_index_1d": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_c_index_2d": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_c_index_3d": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_f_index_1d": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_f_index_2d": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_f_index_3d": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_multi_index_1d": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_multi_index_2d": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_multi_index_3d": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_broadcasting": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_broadcasting_errors": {
  "lineno": 612,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.newaxis",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_byteswapped": {
  "lineno": 1729,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_byteswapped_complex": {
  "lineno": 1759,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.clongdouble",
   "numpy.dtype",
   "numpy.longdouble",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_simple": {
  "lineno": 1714,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_structured_type": {
  "lineno": 1809,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_subarray": {
  "lineno": 1894,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_reduce_reuse": {
  "lineno": 2122,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int_",
   "numpy.nditer",
   "numpy.testing.assert_array_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_reduce_reuse.get_params": {
  "lineno": 2132,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks.as_strided"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering": {
  "lineno": 1640,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.nditer",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_badwriteback": {
  "lineno": 2061,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_delayed_alloc": {
  "lineno": 1687,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_delayed_alloc.assign_iter": {
  "lineno": 1701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_growinner": {
  "lineno": 2113,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_reduction": {
  "lineno": 2441,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.int8",
   "numpy.nditer",
   "numpy.ones",
   "numpy.sum",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_reduction_reuse_reduce_loops": {
  "lineno": 2505,
  "symbols_in_volume": [
   "numpy.nditer",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_string": {
  "lineno": 2095,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bytes_",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_c_or_f_order": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.prod",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_c_order": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.prod",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_common_dtype": {
  "lineno": 1103,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_copy": {
  "lineno": 1321,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_copy_if_overlap": {
  "lineno": 1167,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.int8",
   "numpy.nditer",
   "numpy.ones",
   "numpy.shares_memory",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_dim_coalescing": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_element_deletion": {
  "lineno": 2645,
  "symbols_in_volume": [
   "numpy.nditer",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_f_order": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.prod",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors": {
  "lineno": 687,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int32",
   "numpy.nditer",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_index": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_iterindex": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_iterrange": {
  "lineno": 750,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_multi_index": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_iterindex": {
  "lineno": 1565,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_iterrange": {
  "lineno": 1599,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_iterrange.get_array": {
  "lineno": 1624,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_itershape": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_nbo_align_contig": {
  "lineno": 794,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_no_broadcast": {
  "lineno": 2174,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_no_inner_dim_coalescing": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_no_inner_full_coalesce": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.prod",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_non_writable_attribute_deletion": {
  "lineno": 2628,
  "symbols_in_volume": [
   "numpy.nditer",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_object_arrays_basic": {
  "lineno": 1019,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nditer",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_object_arrays_conversions": {
  "lineno": 1058,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_op_axes": {
  "lineno": 1257,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.nditer",
   "numpy.newaxis",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_op_axes_errors": {
  "lineno": 1295,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_reduction": {
  "lineno": 2382,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.ones",
   "numpy.sum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_reduction_error": {
  "lineno": 2370,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_refcount": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_remove_axis": {
  "lineno": 1524,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_remove_multi_index_inner_loop": {
  "lineno": 1536,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_scalar_cast": {
  "lineno": 962,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_scalar_cast_errors": {
  "lineno": 1000,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.nditer",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_slice": {
  "lineno": 764,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_too_large": {
  "lineno": 2713,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.intp",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.nditer",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_too_large_with_multiindex": {
  "lineno": 2726,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.test_nditer_too_large",
   "numpy.empty",
   "numpy.iinfo",
   "numpy.intp",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_writable_attribute_deletion": {
  "lineno": 2638,
  "symbols_in_volume": [
   "numpy.nditer",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_write_buffering": {
  "lineno": 1669,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nditer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_writemasked": {
  "lineno": 2587,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nditer",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_writemasked_badinput": {
  "lineno": 2521,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nditer",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_warn_noclose": {
  "lineno": 2858,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.suppress_warnings",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_writebacks": {
  "lineno": 2760,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nditer",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_numeric.NIterError": {
  "lineno": 1000,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestAllclose": {
  "lineno": 2175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestAllclose.setup": {
  "lineno": 2179,
  "symbols_in_volume": [
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.teardown": {
  "lineno": 2182,
  "symbols_in_volume": [
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_equalnan": {
  "lineno": 2245,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_ip_allclose": {
  "lineno": 2191,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.inf"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_ip_not_allclose": {
  "lineno": 2211,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_min_int": {
  "lineno": 2239,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.iinfo",
   "numpy.int_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_no_parameter_modification": {
  "lineno": 2232,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.inf",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_return_class_is_ndarray": {
  "lineno": 2249,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_return_class_is_ndarray.Foo": {
  "lineno": 2252,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_return_class_is_ndarray.Foo.__new__": {
  "lineno": 2253,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.tst_allclose": {
  "lineno": 2185,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.tst_not_allclose": {
  "lineno": 2188,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArgwhere": {
  "lineno": 2740,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestArgwhere.test_2D": {
  "lineno": 2765,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argwhere",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArgwhere.test_list": {
  "lineno": 2773,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArgwhere.test_nd": {
  "lineno": 2742,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons": {
  "lineno": 1427,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_array_equal": {
  "lineno": 1428,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_array_equal_equal_nan": {
  "lineno": 1449,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_array_equiv": {
  "lineno": 1488,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equiv",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_none_compares_elementwise": {
  "lineno": 1479,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr": {
  "lineno": 1405,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_base3": {
  "lineno": 1406,
  "symbols_in_volume": [
   "numpy.base_repr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_base_range": {
  "lineno": 1420,
  "symbols_in_volume": [
   "numpy.base_repr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_negative": {
  "lineno": 1415,
  "symbols_in_volume": [
   "numpy.base_repr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_positive": {
  "lineno": 1409,
  "symbols_in_volume": [
   "numpy.base_repr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr": {
  "lineno": 1363,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_large_neg_int64": {
  "lineno": 1399,
  "symbols_in_volume": [
   "numpy.binary_repr",
   "numpy.int64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_neg_width_boundaries": {
  "lineno": 1387,
  "symbols_in_volume": [
   "numpy.binary_repr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_negative": {
  "lineno": 1374,
  "symbols_in_volume": [
   "numpy.binary_repr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_positive": {
  "lineno": 1367,
  "symbols_in_volume": [
   "numpy.binary_repr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_sufficient_width": {
  "lineno": 1382,
  "symbols_in_volume": [
   "numpy.binary_repr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_zero": {
  "lineno": 1364,
  "symbols_in_volume": [
   "numpy.binary_repr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.setup": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.test_all_any": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.test_logical_and_or_xor": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.logical_and",
   "numpy.logical_or",
   "numpy.logical_xor",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.test_logical_not_abs": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.logical_not",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp.setup": {
  "lineno": 407,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.nan",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp.test_double": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.isfinite",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.signbit",
   "numpy.testing.assert_array_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp.test_float": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.isfinite",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.signbit",
   "numpy.testing.assert_array_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_and": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.False_",
   "numpy.True_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_or": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.False_",
   "numpy.True_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_xor": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.False_",
   "numpy.True_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_logical": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.False_",
   "numpy.True_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBroadcast": {
  "lineno": 3190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBroadcast.test_broadcast_error_kwargs": {
  "lineno": 3228,
  "symbols_in_volume": [
   "numpy.broadcast",
   "numpy.empty",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBroadcast.test_broadcast_in_args": {
  "lineno": 3191,
  "symbols_in_volume": [
   "numpy.broadcast",
   "numpy.empty",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBroadcast.test_broadcast_single_arg": {
  "lineno": 3208,
  "symbols_in_volume": [
   "numpy.broadcast",
   "numpy.empty",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBroadcast.test_number_of_arguments": {
  "lineno": 3218,
  "symbols_in_volume": [
   "numpy.broadcast",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip": {
  "lineno": 1536,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_data": {
  "lineno": 1559,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_data_complex": {
  "lineno": 1562,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_flt_data": {
  "lineno": 1565,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_int32_data": {
  "lineno": 1585,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_int_data": {
  "lineno": 1582,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_non_native_data": {
  "lineno": 1576,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._neg_byteorder": {
  "lineno": 1568,
  "symbols_in_volume": [
   "numpy.asarray",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.clip": {
  "lineno": 1553,
  "symbols_in_volume": [
   "numpy.greater",
   "numpy.less"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.fastclip": {
  "lineno": 1541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.setup": {
  "lineno": 1537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_NaT_propagation": {
  "lineno": 2098,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clip",
   "numpy.int32",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.testing.assert_equal",
   "numpy.timedelta64",
   "numpy.zeros",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_array_double": {
  "lineno": 1622,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_all_none": {
  "lineno": 2037,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.clip",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_complex": {
  "lineno": 1668,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_func_takes_out": {
  "lineno": 2007,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_inplace_array": {
  "lineno": 1987,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_inplace_simple": {
  "lineno": 1997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_invalid_casting": {
  "lineno": 2042,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_nan": {
  "lineno": 2018,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_non_contig": {
  "lineno": 1680,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_problem_cases": {
  "lineno": 2063,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.full",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_property": {
  "lineno": 2112,
  "symbols_in_volume": [
   "hypothesis.assume",
   "hypothesis.extra.numpy.array_shapes",
   "hypothesis.extra.numpy.arrays",
   "hypothesis.extra.numpy.floating_dtypes",
   "hypothesis.extra.numpy.from_dtype",
   "hypothesis.extra.numpy.integer_dtypes",
   "hypothesis.extra.numpy.mutually_broadcastable_shapes",
   "hypothesis.given",
   "hypothesis.strategies.data",
   "hypothesis.strategies.just",
   "numpy.clip",
   "numpy.isnan",
   "numpy.isscalar",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_scalar_nan_propagation": {
  "lineno": 2081,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clip",
   "numpy.int32",
   "numpy.int64",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_value_min_max_flip": {
  "lineno": 2048,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.clip",
   "numpy.int64",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_array_int32": {
  "lineno": 1945,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int32",
   "numpy.testing.assert_warns",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_array_outint32": {
  "lineno": 1958,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.testing.assert_warns",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_memory_overlap": {
  "lineno": 1979,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple": {
  "lineno": 1910,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple2": {
  "lineno": 1921,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int32",
   "numpy.testing.assert_warns",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple_int32": {
  "lineno": 1934,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.int64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_transposed": {
  "lineno": 1971,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty_like",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_noncontig_inplace": {
  "lineno": 1776,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_object_clip": {
  "lineno": 2031,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.clip"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_ones_pathological": {
  "lineno": 1590,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_complex": {
  "lineno": 1650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_double": {
  "lineno": 1603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_inplace_01": {
  "lineno": 1756,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_inplace_02": {
  "lineno": 1766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int": {
  "lineno": 1612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int32_inout": {
  "lineno": 1701,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int32",
   "numpy.testing.assert_warns",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int32_out": {
  "lineno": 1743,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.testing.assert_warns",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int64_inout": {
  "lineno": 1730,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int32",
   "numpy.testing.assert_warns",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int64_out": {
  "lineno": 1719,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.int64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_nonnative": {
  "lineno": 1631,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_out": {
  "lineno": 1690,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_01": {
  "lineno": 1789,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_02": {
  "lineno": 1798,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_03": {
  "lineno": 1808,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_04": {
  "lineno": 1817,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_05": {
  "lineno": 1826,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_06": {
  "lineno": 1835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_07": {
  "lineno": 1845,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_08": {
  "lineno": 1856,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_09": {
  "lineno": 1867,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_10": {
  "lineno": 1878,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_11": {
  "lineno": 1888,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_12": {
  "lineno": 1900,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestConvolve": {
  "lineno": 2726,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestConvolve.test_no_overwrite": {
  "lineno": 2732,
  "symbols_in_volume": [
   "numpy.convolve",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestConvolve.test_object": {
  "lineno": 2727,
  "symbols_in_volume": [
   "numpy.convolve",
   "numpy.full",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate": {
  "lineno": 2670,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCorrelate._setup": {
  "lineno": 2671,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_complex": {
  "lineno": 2712,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.correlate",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_float": {
  "lineno": 2683,
  "symbols_in_volume": [
   "numpy.correlate",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_no_overwrite": {
  "lineno": 2705,
  "symbols_in_volume": [
   "numpy.correlate",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_object": {
  "lineno": 2698,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.correlate",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_zero_size": {
  "lineno": 2720,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.correlate",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs": {
  "lineno": 2449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.check_function": {
  "lineno": 2463,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.setup": {
  "lineno": 2452,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.dtype",
   "numpy.sctypes.values"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_empty": {
  "lineno": 2498,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_for_reference_leak": {
  "lineno": 2505,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.full",
   "numpy.ones",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.zeros",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_full": {
  "lineno": 2501,
  "symbols_in_volume": [
   "numpy.full"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_ones": {
  "lineno": 2495,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_zeros": {
  "lineno": 2492,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCross": {
  "lineno": 2986,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCross.test_2x2": {
  "lineno": 2987,
  "symbols_in_volume": [
   "numpy.cross",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCross.test_2x3": {
  "lineno": 2996,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cross",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCross.test_3x3": {
  "lineno": 3005,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cross",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCross.test_broadcasting": {
  "lineno": 3014,
  "symbols_in_volume": [
   "numpy.cross",
   "numpy.testing.assert_equal",
   "numpy.tile"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCross.test_broadcasting_shapes": {
  "lineno": 3044,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.cross",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.assert_op_raises_fpe": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.assert_raises_fpe": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.test_floating_exceptions": {
  "lineno": 610,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.errstate",
   "numpy.finfo",
   "numpy.inf",
   "numpy.obj2sctype",
   "numpy.power",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.test_warnings": {
  "lineno": 664,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.divide",
   "numpy.errstate",
   "numpy.inf",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter": {
  "lineno": 1004,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestFromiter.load_data": {
  "lineno": 1032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.makegen": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_2592": {
  "lineno": 1040,
  "symbols_in_volume": [
   "numpy.fromiter",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_2592_edge": {
  "lineno": 1046,
  "symbols_in_volume": [
   "numpy.fromiter",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_lengths": {
  "lineno": 1016,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromiter",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_types": {
  "lineno": 1008,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.fromiter",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_values": {
  "lineno": 1025,
  "symbols_in_volume": [
   "numpy.alltrue",
   "numpy.array",
   "numpy.fromiter",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndex": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestIndex.test_boolean": {
  "lineno": 1347,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndex.test_boolean_edgecase": {
  "lineno": 1355,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndices": {
  "lineno": 3075,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestIndices.test_return_type": {
  "lineno": 3106,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.indices",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndices.test_scalar_input": {
  "lineno": 3095,
  "symbols_in_volume": [
   "numpy.indices",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndices.test_simple": {
  "lineno": 3077,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.indices",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndices.test_single_input": {
  "lineno": 3088,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.indices",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndices.test_sparse": {
  "lineno": 3101,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.indices",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose": {
  "lineno": 2260,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestIsclose.setup": {
  "lineno": 2264,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_equal_nan": {
  "lineno": 2348,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isclose",
   "numpy.nan",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_all_isclose": {
  "lineno": 2331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_isclose": {
  "lineno": 2309,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_isclose_allclose": {
  "lineno": 2341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_none_isclose": {
  "lineno": 2336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_masked_arrays": {
  "lineno": 2353,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.isclose",
   "numpy.ma.masked_where",
   "numpy.nan",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_no_parameter_modification": {
  "lineno": 2383,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.isclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_non_finite_scalar": {
  "lineno": 2390,
  "symbols_in_volume": [
   "numpy.False_",
   "numpy.bool_",
   "numpy.inf",
   "numpy.isclose",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_scalar_return": {
  "lineno": 2380,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.isscalar",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.tst_all_isclose": {
  "lineno": 2316,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isclose",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.tst_isclose_allclose": {
  "lineno": 2323,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.isclose",
   "numpy.isscalar",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.tst_none_isclose": {
  "lineno": 2319,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isclose",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsscalar": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestIsscalar.test_isscalar": {
  "lineno": 271,
  "symbols_in_volume": [
   "fractions.Fraction",
   "numbers.Number",
   "numpy.int16",
   "numpy.isscalar",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestKeepdims": {
  "lineno": 3241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestKeepdims.sub_array": {
  "lineno": 3243,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestKeepdims.sub_array.sum": {
  "lineno": 3244,
  "symbols_in_volume": [
   "numpy.ndarray.sum"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestKeepdims.test_raise": {
  "lineno": 3247,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.sum",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs": {
  "lineno": 2520,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.check_like_function": {
  "lineno": 2561,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.check_like_function.MyNDArray": {
  "lineno": 2642,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.compare_array_value": {
  "lineno": 2549,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.setup": {
  "lineno": 2523,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_empty_like": {
  "lineno": 2659,
  "symbols_in_volume": [
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_filled_like": {
  "lineno": 2662,
  "symbols_in_volume": [
   "numpy.full_like",
   "numpy.inf"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_ones_like": {
  "lineno": 2653,
  "symbols_in_volume": [
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_zeros_like": {
  "lineno": 2656,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis": {
  "lineno": 2912,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_array_likes": {
  "lineno": 2974,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.ma.zeros",
   "numpy.moveaxis",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_errors": {
  "lineno": 2957,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.moveaxis",
   "numpy.random.randn",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_move_multiples": {
  "lineno": 2945,
  "symbols_in_volume": [
   "numpy.moveaxis",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_move_new_position": {
  "lineno": 2922,
  "symbols_in_volume": [
   "numpy.moveaxis",
   "numpy.random.randn",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_move_to_end": {
  "lineno": 2913,
  "symbols_in_volume": [
   "numpy.moveaxis",
   "numpy.random.randn",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_preserve_order": {
  "lineno": 2932,
  "symbols_in_volume": [
   "numpy.moveaxis",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_choose": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.choose",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_clip": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_compress": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.compress",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_count_nonzero": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_cumproduct": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.cumproduct",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_diagonal": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.diagonal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_dunder_round": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_dunder_round_accuracy": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_max_ulp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_dunder_round_edgecases": {
  "lineno": 161,
  "symbols_in_volume": [
   "math.ceil",
   "math.log10",
   "numpy.int32",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_mean": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.isnan",
   "numpy.mean",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_prod": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_ptp": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.ptp",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_ravel": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.ravel",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_repeat": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.repeat",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_reshape": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.reshape",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_round": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.around",
   "numpy.float64",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_round_py_consistency": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.testing.assert_equal",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_searchsorted": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.searchsorted",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_size": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.size",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_squeeze": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.squeeze",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_std": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.std",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_sum": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_swapaxes": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.swapaxes",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_take": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.take",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_trace": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.trace"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_transpose": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_var": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.var",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero": {
  "lineno": 1054,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_array_method": {
  "lineno": 1261,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_count_nonzero_axis": {
  "lineno": 1141,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_count_nonzero_axis_all_dtypes": {
  "lineno": 1157,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.dtype",
   "numpy.intp",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.void",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_count_nonzero_axis_all_dtypes.assert_equal_w_dt": {
  "lineno": 1163,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_count_nonzero_axis_consistent": {
  "lineno": 1223,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.permutations",
   "numpy.count_nonzero",
   "numpy.random.RandomState",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_countnonzero_axis_empty": {
  "lineno": 1246,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_countnonzero_keepdims": {
  "lineno": 1250,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_exception_safe": {
  "lineno": 1312,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nonzero",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_exception_safe.ThrowsAfter": {
  "lineno": 1315,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_exception_safe.ThrowsAfter.__bool__": {
  "lineno": 1319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_exception_safe.ThrowsAfter.__init__": {
  "lineno": 1316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_invalid_object": {
  "lineno": 1269,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nonzero",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_invalid_object.BoolErrors": {
  "lineno": 1274,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_invalid_object.BoolErrors.__bool__": {
  "lineno": 1275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_onedim": {
  "lineno": 1079,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.nonzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_sideeffect_safety": {
  "lineno": 1280,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nonzero",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_sideeffect_safety.FalseThenTrue": {
  "lineno": 1282,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_sideeffect_safety.FalseThenTrue.__bool__": {
  "lineno": 1284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_sideeffect_safety.TrueThenFalse": {
  "lineno": 1290,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_sideeffect_safety.TrueThenFalse.__bool__": {
  "lineno": 1292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_trivial": {
  "lineno": 1055,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.nonzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_twodim": {
  "lineno": 1092,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.eye",
   "numpy.nonzero",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_zerod": {
  "lineno": 1068,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.nonzero",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_return_type": {
  "lineno": 1128,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ndarray",
   "numpy.nonzero",
   "numpy.prod",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_return_type.C": {
  "lineno": 1129,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_sparse": {
  "lineno": 1115,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.nonzero",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire": {
  "lineno": 3116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRequire.generate_all_false": {
  "lineno": 3123,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.set_and_check_flag": {
  "lineno": 3134,
  "symbols_in_volume": [
   "numpy.require",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_C_and_F_simul": {
  "lineno": 3169,
  "symbols_in_volume": [
   "numpy.require",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_ensure_array": {
  "lineno": 3173,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.require",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_ensure_array.ArraySubclass": {
  "lineno": 3174,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_non_array_input": {
  "lineno": 3161,
  "symbols_in_volume": [
   "numpy.require",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_preserve_subtype": {
  "lineno": 3181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_preserve_subtype.ArraySubclass": {
  "lineno": 3182,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_require_each": {
  "lineno": 3149,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_unknown_requirement": {
  "lineno": 3157,
  "symbols_in_volume": [
   "numpy.require",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestResize": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestResize.test_copies": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.resize",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestResize.test_reshape_from_zero": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.resize",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestResize.test_zeroresize": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.resize",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRoll": {
  "lineno": 2792,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRoll.test_roll1d": {
  "lineno": 2793,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.roll",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRoll.test_roll2d": {
  "lineno": 2798,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.reshape",
   "numpy.roll",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRoll.test_roll_empty": {
  "lineno": 2845,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.roll",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRollaxis": {
  "lineno": 2850,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRollaxis.test_exceptions": {
  "lineno": 2867,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.rollaxis",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRollaxis.test_results": {
  "lineno": 2874,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.array",
   "numpy.indices",
   "numpy.rollaxis",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_default": {
  "lineno": 507,
  "symbols_in_volume": [
   "numpy.geterr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_divide_err": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.seterr",
   "numpy.testing.assert_raises",
   "platform.machine",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_errobj": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.divide",
   "numpy.errstate",
   "numpy.geterrobj",
   "numpy.seterrobj",
   "numpy.testing.assert_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_errobj.log_err": {
  "lineno": 549,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_errobj_noerrmask": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.umath.ERR_DEFAULT",
   "numpy.core.umath.UFUNC_BUFSIZE_DEFAULT",
   "numpy.geterrobj",
   "numpy.isnan",
   "numpy.seterrobj"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_set": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.geterr",
   "numpy.seterr",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar": {
  "lineno": 2398,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStdVar.setup": {
  "lineno": 2399,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_basic": {
  "lineno": 2403,
  "symbols_in_volume": [
   "numpy.std",
   "numpy.testing.assert_almost_equal",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_ddof1": {
  "lineno": 2411,
  "symbols_in_volume": [
   "numpy.std",
   "numpy.testing.assert_almost_equal",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_ddof2": {
  "lineno": 2417,
  "symbols_in_volume": [
   "numpy.std",
   "numpy.testing.assert_almost_equal",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_out_scalar": {
  "lineno": 2423,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.mean",
   "numpy.std",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_scalars": {
  "lineno": 2407,
  "symbols_in_volume": [
   "numpy.std",
   "numpy.testing.assert_equal",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex": {
  "lineno": 2437,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex.test_basic": {
  "lineno": 2438,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.std",
   "numpy.testing.assert_almost_equal",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex.test_scalars": {
  "lineno": 2444,
  "symbols_in_volume": [
   "numpy.std",
   "numpy.testing.assert_equal",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStringFunction": {
  "lineno": 2777,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStringFunction.test_set_string_function": {
  "lineno": 2779,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.set_string_function",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTensordot": {
  "lineno": 3253,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestTensordot.test_zero_dimension": {
  "lineno": 3255,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.einsum",
   "numpy.ndarray",
   "numpy.tensordot",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTensordot.test_zero_dimensional": {
  "lineno": 3263,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.tensordot",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes": {
  "lineno": 683,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestTypes.check_promotion_cases": {
  "lineno": 684,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.clongdouble",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_can_cast": {
  "lineno": 872,
  "symbols_in_volume": [
   "numpy.can_cast",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_can_cast_simple_to_structured": {
  "lineno": 949,
  "symbols_in_volume": [
   "numpy.can_cast",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_can_cast_structured_to_simple": {
  "lineno": 965,
  "symbols_in_volume": [
   "numpy.can_cast",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_can_cast_values": {
  "lineno": 984,
  "symbols_in_volume": [
   "numpy.can_cast",
   "numpy.finfo",
   "numpy.iinfo",
   "numpy.sctypes",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_coercion": {
  "lineno": 758,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clongdouble",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int8",
   "numpy.longdouble",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_coercion.res_type": {
  "lineno": 759,
  "symbols_in_volume": [
   "numpy.add"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_promote_types_endian": {
  "lineno": 816,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.promote_types",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_promote_types_strings": {
  "lineno": 838,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.promote_types",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_result_type": {
  "lineno": 812,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.result_type",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.assert_array_strict_equal": {
  "lineno": 1519,
  "symbols_in_volume": [
   "numpy.intp",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numeric.test_outer_out_param": {
  "lineno": 3064,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.outer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.byteorder"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_numerictypes.CreateValues": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.CreateValues.test_list_of_list_of_tuple": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.CreateValues.test_list_of_tuple": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.CreateValues.test_tuple": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.CreateZeros": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.CreateZeros.test_zeros0D": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.void",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.CreateZeros.test_zerosMD": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.CreateZeros.test_zerosSD": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.void",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested.test_access_top_fields": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested.test_nested1_acessors": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested.test_nested1_descriptor": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested.test_nested2_acessors": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested.test_nested2_descriptor": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesPlain": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesPlain.test_access_fields": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestBitName": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestBitName.test_abstract": {
  "lineno": 441,
  "symbols_in_volume": [
   "numpy.core.numerictypes.bitname",
   "numpy.floating",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_loses1": {
  "lineno": 339,
  "symbols_in_volume": [
   "numpy.find_common_type",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_loses2": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy.find_common_type",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.find_common_type",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins2": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.find_common_type",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins3": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.find_common_type",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCreateValuesNestedMultiple": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCreateValuesNestedSingle": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCreateValuesPlainMultiple": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCreateValuesPlainSingle": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCreateZerosNested": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCreateZerosPlain": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestDocStrings": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.testing.IS_PYPY",
   "pytest.mark.skipif",
   "pytest.mark.xfail",
   "sys.flags.optimize"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestDocStrings.test_platform_dependent_aliases": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.int_",
   "numpy.int_.__doc__",
   "numpy.longlong",
   "numpy.longlong.__doc__",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestEmptyField": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestEmptyField.test_assign": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_both_abstract": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.inexact",
   "numpy.issubdtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_nondtype_nonscalartype": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.complex64",
   "numpy.complexfloating",
   "numpy.float32",
   "numpy.float64",
   "numpy.floating",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.str_",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_same": {
  "lineno": 382,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.float32",
   "numpy.int32",
   "numpy.issubdtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_sibling_class": {
  "lineno": 399,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.float32",
   "numpy.float64",
   "numpy.issubdtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_subclass": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.floating",
   "numpy.issubdtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_subclass_backwards": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.floating",
   "numpy.issubdtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMaximumSctype": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestMaximumSctype.test_complex": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.maximum_sctype",
   "numpy.sctypes",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMaximumSctype.test_float": {
  "lineno": 458,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.half",
   "numpy.longdouble",
   "numpy.maximum_sctype",
   "numpy.sctypes",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMaximumSctype.test_int": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.byte",
   "numpy.int_",
   "numpy.intc",
   "numpy.longlong",
   "numpy.maximum_sctype",
   "numpy.sctypes",
   "numpy.short",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMaximumSctype.test_other": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.bytes_",
   "numpy.maximum_sctype",
   "numpy.object_",
   "numpy.testing.assert_equal",
   "numpy.unicode_",
   "numpy.void",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMaximumSctype.test_uint": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.maximum_sctype",
   "numpy.sctypes",
   "numpy.testing.assert_equal",
   "numpy.ubyte",
   "numpy.uint",
   "numpy.uintc",
   "numpy.ulonglong",
   "numpy.ushort",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields._bad_call": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.setup": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.test_no_tuple": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.test_return": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestReadValuesNestedMultiple": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestReadValuesNestedSingle": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestReadValuesPlainMultiple": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestReadValuesPlainSingle": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestScalarTypeNames": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.byte",
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.half",
   "numpy.int_",
   "numpy.intc",
   "numpy.longdouble",
   "numpy.longlong",
   "numpy.short",
   "numpy.single",
   "numpy.ubyte",
   "numpy.uint",
   "numpy.uintc",
   "numpy.ulonglong",
   "numpy.ushort"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestScalarTypeNames.test_names_are_undersood_by_dtype": {
  "lineno": 551,
  "symbols_in_volume": [
   "numpy.dtype",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestScalarTypeNames.test_names_are_unique": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestScalarTypeNames.test_names_reflect_attributes": {
  "lineno": 546,
  "symbols_in_volume": [
   "numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestSctypeDict": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestSctypeDict.test_longdouble": {
  "lineno": 435,
  "symbols_in_volume": [
   "numpy.clongdouble",
   "numpy.longdouble",
   "numpy.sctypeDict",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.Test_sctype2char": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.Test_sctype2char.test_abstract_type": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.sctype2char",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.Test_sctype2char.test_array_instance": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sctype2char",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.Test_sctype2char.test_non_type": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.sctype2char",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.Test_sctype2char.test_other_type": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.sctype2char",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.Test_sctype2char.test_scalar_type": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.bytes_",
   "numpy.double",
   "numpy.int_",
   "numpy.sctype2char",
   "numpy.testing.assert_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.Test_sctype2char.test_third_party_scalar_type": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.core._rational_tests.rational",
   "numpy.sctype2char",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.normalize_descr": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.test_issctype": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.issctype",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.core.overrides.ARRAY_FUNCTION_ENABLED",
   "pytest.mark.skipif"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionDispatch": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionDispatch.test_interface": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionDispatch.test_interface.MyArray": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionDispatch.test_interface.MyArray.__array_function__": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionDispatch.test_name_and_docstring": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "sys.flags.optimize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionDispatch.test_not_implemented": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionDispatch.test_not_implemented.MyArray": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionDispatch.test_not_implemented.MyArray.__array_function__": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionDispatch.test_pickle": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionImplementation": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionImplementation.test_not_implemented": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionImplementation.test_not_implemented.func": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionImplementation.test_one_arg": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionImplementation.test_one_arg._": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionImplementation.test_optional_args": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionImplementation.test_optional_args.func_with_option": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestArrayFunctionImplementation.test_optional_args.my_array_func_with_option": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_many_duck_arrays": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.core.overrides._get_implementing_args",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_many_duck_arrays.A": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_many_duck_arrays.B": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_many_duck_arrays.C": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_many_duck_arrays.D": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_ndarray": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.overrides._get_implementing_args",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_ndarray_and_duck_array": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.overrides._get_implementing_args",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_ndarray_and_duck_array.Other": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_ndarray_subclass_and_duck_array": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.overrides._get_implementing_args",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_ndarray_subclass_and_duck_array.Other": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_ndarray_subclass_and_duck_array.OverrideSub": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_ndarray_subclasses": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.overrides._get_implementing_args",
   "numpy.ndarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_ndarray_subclasses.NoOverrideSub": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_ndarray_subclasses.OverrideSub": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestGetImplementingArgs.test_too_many_duck_arrays": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.core.overrides._get_implementing_args",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNDArrayArrayFunction": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestNDArrayArrayFunction.test_method": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNDArrayArrayFunction.test_method.NoOverrideSub": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestNDArrayArrayFunction.test_method.Other": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestNDArrayArrayFunction.test_method.OverrideSub": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestNDArrayArrayFunction.test_no_wrapper": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNDArrayMethods": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestNDArrayMethods.test_repr": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNDArrayMethods.test_repr.MyArray": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestNDArrayMethods.test_repr.MyArray.__array_function__": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_inspect_sum": {
  "lineno": 379,
  "symbols_in_volume": [
   "inspect.signature",
   "numpy.sum",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_override_sum": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_override_sum._": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_set_module": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.char.equal.__module__",
   "numpy.fft.fft.__module__",
   "numpy.linalg.solve.__module__",
   "numpy.sum.__module__",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_sum_forwarding_implementation": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_sum_forwarding_implementation.MyArray": {
  "lineno": 417,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_sum_forwarding_implementation.MyArray.__array_function__": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_sum_forwarding_implementation.MyArray.sum": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_sum_on_mock_array": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.testing.assert_equal",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_sum_on_mock_array.ArrayProxy": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_sum_on_mock_array.ArrayProxy.__array__": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_sum_on_mock_array.ArrayProxy.__array_function__": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestNumPyFunctions.test_sum_on_mock_array.ArrayProxy.__init__": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestVerifyMatchingSignatures": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides.TestVerifyMatchingSignatures.test_array_function_dispatch": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestVerifyMatchingSignatures.test_array_function_dispatch.f": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.TestVerifyMatchingSignatures.test_verify_matching_signatures": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.core.overrides.verify_matching_signatures",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides._new_duck_type_and_implements": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides._new_duck_type_and_implements.MyArray": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_overrides._new_duck_type_and_implements.MyArray.__array_function__": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides._new_duck_type_and_implements.implements": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides._new_duck_type_and_implements.implements.decorator": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides._return_not_implemented": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.dispatched_one_arg": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_overrides.dispatched_two_arg": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_print.TestCommaDecimalPointLocale": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.core.tests._locales.CommaDecimalPointLocale"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_print.TestCommaDecimalPointLocale.test_locale_double": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print.TestCommaDecimalPointLocale.test_locale_longdouble": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.longdouble",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print.TestCommaDecimalPointLocale.test_locale_single": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print._test_redirected_print": {
  "lineno": 103,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.testing.assert_equal",
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print.test_complex_inf_nan": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.complex64",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print.test_complex_type_print": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.complex64",
   "numpy.inf",
   "numpy.nan",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print.test_complex_types": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.complex64",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print.test_float_type_print": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.float32",
   "numpy.inf",
   "numpy.longdouble",
   "numpy.nan",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print.test_float_types": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.float32",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print.test_nan_inf_float": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.float32",
   "numpy.inf",
   "numpy.longdouble",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_print.test_scalar_format": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.clongdouble",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.longdouble",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_protocols": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_protocols.test_array_called": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_protocols.test_array_called.Wrapper": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_protocols.test_array_called.Wrapper.__array__": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_protocols.test_getattr_warning": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "pytest.mark.filterwarnings",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_protocols.test_getattr_warning.Wrapper": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_protocols.test_getattr_warning.Wrapper.__getattr__": {
  "lineno": 20,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_protocols.test_getattr_warning.Wrapper.__getitem__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_protocols.test_getattr_warning.Wrapper.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_protocols.test_getattr_warning.Wrapper.__len__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_protocols.test_getattr_warning.Wrapper.__repr__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_records": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_records.TestFromrecords": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_0d_recarray_repr": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.rec.array",
   "numpy.set_printoptions",
   "numpy.testing.assert_equal",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.rec.fromrecords",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords_0len": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.rec.fromrecords",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords_2d": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.rec.fromrecords",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords_with_explicit_dtype": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.rec.fromrecords",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_method_array": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.rec.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_method_array2": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.rec.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_conflict_fields": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.rec.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_names": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.rec.array",
   "numpy.rec.fromrecords",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_obj": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.rec.fromarrays",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_repr": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy",
   "numpy.array",
   "numpy.dtype",
   "numpy.ndarray",
   "numpy.rec.array",
   "numpy.recarray",
   "numpy.record",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_fromarrays": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.rec.fromarrays",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_fromfile": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.rec.array",
   "numpy.rec.fromfile",
   "numpy.testing.assert_equal",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_repr": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.rec.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_returntypes": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ndarray",
   "numpy.rec.array",
   "numpy.recarray",
   "numpy.record",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_slices": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.rec.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_stringtypes": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.recarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_views": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.rec.array",
   "numpy.recarray",
   "numpy.record",
   "numpy.testing.assert_equal",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_views.C": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.recarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_zero_width_strings": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.rec.fromarrays",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestPathUsage": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_records.TestPathUsage.test_tofile_fromfile": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.core.records.fromfile",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "os.path",
   "os.path.open",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_records.TestRecord.setup": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.rec.fromrecords"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_assign_dtype_attribute": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.recarray",
   "numpy.record",
   "numpy.uint8",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_assignment1": {
  "lineno": 339,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_assignment2": {
  "lineno": 345,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_fromarrays_nested_structured_arrays": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "numpy.rec.fromarrays"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_invalid_assignment": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_invalid_assignment.assign_invalid_column": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_missing_field": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_nested_dtype_padding": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.recarray",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_nested_fields_are_records": {
  "lineno": 463,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.recarray",
   "numpy.record",
   "numpy.uint8",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_nonwriteable_setfield": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.rec.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_objview_record": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.recarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_out_of_order_fields": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_pickle_1": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.int32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_pickle_2": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_pickle_3": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_pickle_void": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.core.multiarray.scalar",
   "numpy.dtype",
   "numpy.empty",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_record_scalar_setitem": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.recarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_records.test_find_duplicate": {
  "lineno": 493,
  "symbols_in_volume": [
   "numpy.rec.find_duplicate",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_regression.TestRegression": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_0d_string_scalar": {
  "lineno": 1521,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_2d__array__shape": {
  "lineno": 2463,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_2d__array__shape.T": {
  "lineno": 2464,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_2d__array__shape.T.__array__": {
  "lineno": 2465,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_2d__array__shape.T.__getitem__": {
  "lineno": 2472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_2d__array__shape.T.__iter__": {
  "lineno": 2469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_2d__array__shape.T.__len__": {
  "lineno": 2475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_add_identity": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.add.identity",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_alignment_update": {
  "lineno": 1900,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_any_float": {
  "lineno": 1705,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_arange_endian": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_arange_inf_step": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_arange_non_native_dtype": {
  "lineno": 851,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_arange_underflow_stop_and_step": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.finfo",
   "numpy.float64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_argmax": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_argmax_byteorder": {
  "lineno": 804,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_arr_transpose": {
  "lineno": 794,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_from_sequence_scalar_array": {
  "lineno": 1356,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_from_sequence_scalar_array2": {
  "lineno": 1371,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_index": {
  "lineno": 684,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_ndmin_overflow": {
  "lineno": 1271,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_resize_method_system_error": {
  "lineno": 1261,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_scalar_contiguous": {
  "lineno": 1722,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_side_effect": {
  "lineno": 1695,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.string_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_str_64bit": {
  "lineno": 773,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_str",
   "numpy.errstate",
   "numpy.float64",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_array_too_big": {
  "lineno": 1377,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_asarray_with_order": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_assign_from_sequence_error": {
  "lineno": 2151,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_assign_obj_listoflists": {
  "lineno": 2022,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_astype_copy": {
  "lineno": 1103,
  "symbols_in_volume": [
   "numpy.compat.pickle.load",
   "numpy.float64",
   "numpy.testing.assert_",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_attributes": {
  "lineno": 1129,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_attributes.TestArray": {
  "lineno": 1131,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_attributes.TestArray.__array_finalize__": {
  "lineno": 1138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_attributes.TestArray.__new__": {
  "lineno": 1132,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_bad_array_interface": {
  "lineno": 2457,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_bad_array_interface.T": {
  "lineno": 2458,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_binary_repr_0": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.binary_repr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_binary_repr_0_width": {
  "lineno": 879,
  "symbols_in_volume": [
   "numpy.binary_repr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_blasdot_uninitialized_memory": {
  "lineno": 1309,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.dot",
   "numpy.float64",
   "numpy.testing.IS_PYPY",
   "numpy.testing._private.utils._no_tracing",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_bool": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.bool_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_bool_flat_indexing_invalid_nr_elements": {
  "lineno": 859,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_bool_flat_indexing_invalid_nr_elements.ia": {
  "lineno": 863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_bool_subscript_crash": {
  "lineno": 2199,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.rec.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_broadcast_flat_assignment": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_broadcast_flat_assignment.bfa": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_broadcast_flat_assignment.bfb": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_buffer_hashlib": {
  "lineno": 1515,
  "symbols_in_volume": [
   "hashlib.md5",
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_byteswap_complex_scalar": {
  "lineno": 1464,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_char_array_creation": {
  "lineno": 1216,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_char_dump": {
  "lineno": 92,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "numpy.char.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dump",
   "numpy.load"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_character_array_strip": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.char.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_chararray_rstrip": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.chararray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_complex64_alignment": {
  "lineno": 2115,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.complex64",
   "numpy.ndarray",
   "numpy.reshape",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_complex_boolean_cast": {
  "lineno": 1654,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.array",
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_complex_nan_maximum": {
  "lineno": 1577,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_complex_scalar_complex_cast": {
  "lineno": 1649,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_complex_scalar_warning": {
  "lineno": 1641,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_compress_small_type": {
  "lineno": 1115,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.single",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_convolve_empty": {
  "lineno": 731,
  "symbols_in_volume": [
   "numpy.convolve",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_copy_detection_corner_case": {
  "lineno": 922,
  "symbols_in_volume": [
   "numpy.indices"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_copy_detection_corner_case2": {
  "lineno": 929,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.indices",
   "numpy.intp",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_copy_detection_zero_dim": {
  "lineno": 903,
  "symbols_in_volume": [
   "numpy.indices"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_copymodule_preserves_f_contiguity": {
  "lineno": 2134,
  "symbols_in_volume": [
   "copy.copy",
   "copy.deepcopy",
   "numpy.empty",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_correct_hash_dict": {
  "lineno": 2336,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.typeDict.values",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_deepcopy_F_order_object_array": {
  "lineno": 2176,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_deepcopy_empty_object_array": {
  "lineno": 2192,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_deepcopy_on_0d_array": {
  "lineno": 2165,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dot_alignment_sse2": {
  "lineno": 1093,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.dot",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dot_negative_stride": {
  "lineno": 824,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_keyerrors_": {
  "lineno": 1382,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises",
   "numpy.uint"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_names": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.int32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_posttuple": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_repr": {
  "lineno": 641,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_scalar_squeeze": {
  "lineno": 2386,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_dtype_tuple": {
  "lineno": 624,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_duplicate_field_names_assign": {
  "lineno": 1666,
  "symbols_in_volume": [
   "numpy.fromiter",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_duplicate_title_and_name": {
  "lineno": 1500,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_eff1d_casting": {
  "lineno": 2438,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ediff1d",
   "numpy.int16",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_empty_array_type": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_empty_mul": {
  "lineno": 1690,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_empty_percentile": {
  "lineno": 2291,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.percentile",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_endian_bool_indexing": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_almost_equal",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_endian_recarray": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.recarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_endian_where": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_eq_string_and_object_array": {
  "lineno": 1672,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fancy_index": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_field_access_by_title": {
  "lineno": 2402,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.zeros",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fields_strides": {
  "lineno": 1892,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_find_common_type_boolean": {
  "lineno": 1686,
  "symbols_in_volume": [
   "numpy.find_common_type",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_flat_assignment": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_flat_byteorder": {
  "lineno": 907,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_flat_index_byteswap": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_for_equal_names": {
  "lineno": 1237,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_for_object_scalar_creation": {
  "lineno": 1247,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.object_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_for_zero_length_in_choose": {
  "lineno": 1266,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_format_on_flex_array_element": {
  "lineno": 2158,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fortran_order_buffer": {
  "lineno": 2143,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fromfile_tofile_seeks": {
  "lineno": 1614,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.fromfile",
   "numpy.testing.assert_equal",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fromiter_bytes": {
  "lineno": 1349,
  "symbols_in_volume": [
   "numpy.alltrue",
   "numpy.array",
   "numpy.fromiter",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fromiter_comparison": {
  "lineno": 1529,
  "symbols_in_volume": [
   "numpy.alltrue",
   "numpy.array",
   "numpy.fromiter",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_frompyfunc_endian": {
  "lineno": 779,
  "symbols_in_volume": [
   "math.radians",
   "numpy.array",
   "numpy.frompyfunc",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_frompyfunc_many_args": {
  "lineno": 2243,
  "symbols_in_volume": [
   "numpy.frompyfunc",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_frompyfunc_many_args.passer": {
  "lineno": 2246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_frompyfunc_nout_0": {
  "lineno": 2257,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.frompyfunc",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_frompyfunc_nout_0.f": {
  "lineno": 2260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fromstring": {
  "lineno": 882,
  "symbols_in_volume": [
   "numpy.fromstring",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_fromstring_crash": {
  "lineno": 1535,
  "symbols_in_volume": [
   "numpy.fromstring",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_hstack_invalid_dims": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.hstack",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_huge_arange": {
  "lineno": 1340,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.size",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_indexing1": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_indexing2": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_invalid_round": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_invalid_structured_dtypes": {
  "lineno": 2315,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_junk_in_string_fields_of_recarray": {
  "lineno": 747,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.asbytes",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_large_float_sum": {
  "lineno": 1711,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_leak_in_structured_dtype_comparison": {
  "lineno": 2269,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.dtype",
   "numpy.float64",
   "numpy.int32",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lexsort",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_buffer_length": {
  "lineno": 1389,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.int8",
   "numpy.lexsort",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_invalid_axis": {
  "lineno": 455,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.array",
   "numpy.lexsort",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_invalid_sequence": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.lexsort",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_invalid_sequence.BuggySequence": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_invalid_sequence.BuggySequence.__getitem__": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_invalid_sequence.BuggySequence.__len__": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_zerolen_custom_strides": {
  "lineno": 435,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lexsort"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_zerolen_custom_strides_2d": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lexsort"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_lexsort_zerolen_element": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "numpy.lexsort"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_log1p_compiler_shenanigans": {
  "lineno": 1525,
  "symbols_in_volume": [
   "numpy.exp2",
   "numpy.isfinite",
   "numpy.log1p",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_0d_array_index": {
  "lineno": 1078,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_around": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.around",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_array_creation_invalid_specification": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.object_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_axis_minimization": {
  "lineno": 615,
  "symbols_in_volume": [
   "numpy.add.outer",
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_custom_float_to_array": {
  "lineno": 1040,
  "symbols_in_volume": [
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_custom_float_to_array.MyFloat": {
  "lineno": 1042,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_custom_float_to_array.MyFloat.__float__": {
  "lineno": 1043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_deallocation_leak": {
  "lineno": 814,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_divmod": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_dot": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.core.multiarray.dot",
   "numpy.dot",
   "numpy.empty",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.ones",
   "numpy.random.randn",
   "numpy.testing.assert_equal",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_dtype_align": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_empty": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.int64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_float_imag": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_fromiter_invalid_dtype_string": {
  "lineno": 1066,
  "symbols_in_volume": [
   "numpy.fromiter",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_lexsort_strings": {
  "lineno": 572,
  "symbols_in_volume": [
   "numpy.lexsort"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_on_invalid_dtype": {
  "lineno": 820,
  "symbols_in_volume": [
   "numpy.fromiter",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_scalar_indexing": {
  "lineno": 873,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mem_string_arr": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_memoryleak": {
  "lineno": 2038,
  "symbols_in_volume": [
   "numpy.empty",
   "pytest.mark.slow_pypy"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_method_args": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy",
   "numpy.random.rand",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_misaligned_dot_product_objects": {
  "lineno": 1456,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_misaligned_objects_segfault": {
  "lineno": 1435,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.argmax",
   "numpy.array",
   "numpy.nonzero",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_misaligned_scalars_segfault": {
  "lineno": 1449,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_mixed_string_unicode_array_creation": {
  "lineno": 1423,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_multidim_byteswap": {
  "lineno": 736,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_multiple_assign": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ndmin_float64": {
  "lineno": 602,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ndmin_order": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_negative_nd_indexing": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_nonarray_assignment": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_nonarray_assignment.assign": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_noncommutative_reduce_accumulate": {
  "lineno": 720,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.divide.accumulate",
   "numpy.divide.reduce",
   "numpy.subtract.accumulate",
   "numpy.subtract.reduce",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_noncontiguous_fill": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_noncontiguous_fill.rs": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_nonnative_endian_fill": {
  "lineno": 1082,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_nonscalar_item_method": {
  "lineno": 1211,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_nonzero_byteswap": {
  "lineno": 1679,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.testing.assert_equal",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_numeric_carray_compare": {
  "lineno": 632,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_numpy_float_python_long_addition": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.float_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_argmax": {
  "lineno": 690,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_assign": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_circular_reference": {
  "lineno": 1814,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_fill": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_from_list": {
  "lineno": 512,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_nested": {
  "lineno": 1830,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_refcount_self_assign": {
  "lineno": 1049,
  "symbols_in_volume": [
   "numpy.object_",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_refcount_self_assign.VictimObject": {
  "lineno": 1051,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_refcount_self_assign.VictimObject.__del__": {
  "lineno": 1054,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_refcounting": {
  "lineno": 937,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.object_",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "sys",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_self_copy": {
  "lineno": 1838,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.copyto",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_self_reference": {
  "lineno": 1806,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_shape": {
  "lineno": 397,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_array_to_fixed_string": {
  "lineno": 1396,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.object_",
   "numpy.str_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_casting": {
  "lineno": 832,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_casting.rs": {
  "lineno": 836,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_object_casting_errors": {
  "lineno": 2432,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_objectarray_setfield": {
  "lineno": 1852,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_bytes_overwrite": {
  "lineno": 1939,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_datetime64_array": {
  "lineno": 2449,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.datetime64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_dtype": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_empty_string": {
  "lineno": 2236,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.string_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_module": {
  "lineno": 2414,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.ones",
   "numpy.uint64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_py2_array_latin1_hack": {
  "lineno": 1947,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_py2_bytes_encoding": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.loads",
   "numpy.float64",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_py2_scalar_latin1_hack": {
  "lineno": 1962,
  "symbols_in_volume": [
   "numpy.bytes_",
   "numpy.compat.pickle.loads",
   "numpy.float64",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_string_overwrite": {
  "lineno": 1925,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal",
   "re.sub"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_pickle_transposed": {
  "lineno": 35,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dump",
   "numpy.compat.pickle.load",
   "numpy.testing.assert_array_equal",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_rand_seed": {
  "lineno": 809,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_random_shuffle": {
  "lineno": 705,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.shuffle",
   "numpy.sort",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ravel_with_order": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_rec_fromarray": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.rec.fromarrays"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_rec_iterate": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.rec.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_recarray_copy": {
  "lineno": 582,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.int16",
   "numpy.rec.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_recarray_fields": {
  "lineno": 694,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.rec.array",
   "numpy.rec.fromarrays",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_recarray_single_element": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.rec.array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_recarray_tolist": {
  "lineno": 1201,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.recarray",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reduce": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reduce_big_object_array": {
  "lineno": 1071,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.setbufsize",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reduce_contiguous": {
  "lineno": 1798,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_refcount_error_in_clip": {
  "lineno": 2096,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_refcount_vdot": {
  "lineno": 712,
  "symbols_in_volume": [
   "numpy.testing._assert_valid_refcount",
   "numpy.vdot"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_repeat_broadcasting": {
  "lineno": 2251,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_repeat_discont": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reshape_order": {
  "lineno": 647,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reshape_size_overflow": {
  "lineno": 2300,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.intp",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reshape_trailing_ones_strides": {
  "lineno": 668,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.int32",
   "numpy.intp",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reshape_zero_size": {
  "lineno": 661,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_reshape_zero_strides": {
  "lineno": 655,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks.as_strided",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_richcompare_crash": {
  "lineno": 2207,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises",
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_richcompare_crash.Foo": {
  "lineno": 2212,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_richcompare_crash.Foo.__array__": {
  "lineno": 2215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_richcompare_scalar_and_subclass": {
  "lineno": 2225,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_richcompare_scalar_and_subclass.Foo": {
  "lineno": 2227,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_richcompare_scalar_and_subclass.Foo.__eq__": {
  "lineno": 2228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_round": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_scalar_compare": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_scalar_copy": {
  "lineno": 2349,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.bytes_",
   "numpy.datetime64",
   "numpy.sctypeDict.values",
   "numpy.testing.assert_equal",
   "numpy.unicode_",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_search_sorted_invalid_arguments": {
  "lineno": 2053,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_searchsorted_variable_length": {
  "lineno": 886,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_searchsorted_wrong_dtype": {
  "lineno": 2105,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.format_parser",
   "numpy.recarray",
   "numpy.searchsorted",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_setting_rank0_string": {
  "lineno": 1857,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_sign_bit": {
  "lineno": 913,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_sign_for_complex_nan": {
  "lineno": 1229,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan",
   "numpy.sign",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_signed_integer_division_overflow": {
  "lineno": 1505,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_signed_integer_division_overflow.test_type": {
  "lineno": 1507,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_sort_bigendian": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.linspace",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_squeeze_axis_handling": {
  "lineno": 1737,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.squeeze",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_squeeze_axis_handling.OldSqueeze": {
  "lineno": 1743,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_squeeze_axis_handling.OldSqueeze.__new__": {
  "lineno": 1745,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_squeeze_axis_handling.OldSqueeze.squeeze": {
  "lineno": 1757,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_squeeze_contiguous": {
  "lineno": 1729,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_squeeze_type": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_startswith": {
  "lineno": 716,
  "symbols_in_volume": [
   "numpy.char.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_NULL": {
  "lineno": 742,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_argsort_with_zeros": {
  "lineno": 891,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.frombuffer",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_array_size": {
  "lineno": 636,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_astype": {
  "lineno": 1873,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_mergesort": {
  "lineno": 799,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_sort_with_zeros": {
  "lineno": 897,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.sort",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_truncation": {
  "lineno": 2058,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.asbytes",
   "numpy.compat.asunicode",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_string_truncation_ucs2": {
  "lineno": 2074,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_structarray_title": {
  "lineno": 2376,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.array",
   "numpy.object_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_structured_arrays_with_objects1": {
  "lineno": 1480,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_structured_arrays_with_objects2": {
  "lineno": 1488,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_structured_count_nonzero": {
  "lineno": 2129,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_structured_type_to_object": {
  "lineno": 2006,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.empty_like",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_subclass_int_tuple_assignment": {
  "lineno": 1581,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_subclass_int_tuple_assignment.Subclass": {
  "lineno": 1583,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_subclass_int_tuple_assignment.Subclass.__new__": {
  "lineno": 1584,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_swap_real": {
  "lineno": 505,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_take_object_fail": {
  "lineno": 760,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_take_output": {
  "lineno": 752,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.take",
   "numpy.testing.assert_array_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_take_refcount": {
  "lineno": 1599,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.ones",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1434": {
  "lineno": 1564,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1538": {
  "lineno": 1558,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1539": {
  "lineno": 1540,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.dot",
   "numpy.number",
   "numpy.timedelta64",
   "numpy.typeDict.values"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1608": {
  "lineno": 1919,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1756": {
  "lineno": 1883,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ticket_1770": {
  "lineno": 1907,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_to_ctypes": {
  "lineno": 2484,
  "symbols_in_volume": [
   "numpy.ctypeslib.as_ctypes",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.skipif",
   "sys.maxsize",
   "sys.platform",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_tobytes_FORTRANORDER_discontiguous": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.frombuffer",
   "numpy.random.rand",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_typeNA": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "numpy.typeNA",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ufunc_casting_out": {
  "lineno": 1715,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ufunc_no_unnecessary_views": {
  "lineno": 1591,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ufunc_no_unnecessary_views.Subclass": {
  "lineno": 1593,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_regression.TestRegression.test_ufunc_reduce_memoryleak": {
  "lineno": 2046,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.arange",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_uint_int_conversion": {
  "lineno": 1662,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unaligned_unicode_access": {
  "lineno": 1221,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_alloc_dealloc_match": {
  "lineno": 2089,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_scalar": {
  "lineno": 843,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_string_comparison": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_swapping": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_to_string_cast": {
  "lineno": 1409,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unicode_to_string_cast_error": {
  "lineno": 1416,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unique_stable": {
  "lineno": 2081,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_unpickle_dtype_with_object": {
  "lineno": 355,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dump",
   "numpy.compat.pickle.load",
   "numpy.dtype",
   "numpy.object_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_void_compare_segfault": {
  "lineno": 2295,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_void_copyswap": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_void_getitem": {
  "lineno": 2369,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_void_item_memview": {
  "lineno": 2362,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_void_scalar_constructor": {
  "lineno": 1283,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.core.multiarray.scalar",
   "numpy.dtype",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_void_scalar_with_titles": {
  "lineno": 1275,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_zero_sized_array_indexing": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_zero_sized_array_indexing.index_tmp": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_zeros": {
  "lineno": 1332,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_zeros_order": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_regression.TestRegression.test_zerosize_accumulate": {
  "lineno": 1847,
  "symbols_in_volume": [
   "numpy.add.accumulate",
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_scalar_ctors.TestExtraArgs": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalar_ctors.TestExtraArgs.test_bool": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.bool",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestExtraArgs.test_datetime": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.datetime_data",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestExtraArgs.test_superclass": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.bytes_",
   "numpy.str_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestExtraArgs.test_void": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.void",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromInt": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromInt.test_intp": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.intp",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromInt.test_uint64_from_negative": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromString": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromString.test_floating": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.longdouble",
   "numpy.single",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromString.test_floating_overflow": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.half",
   "numpy.inf",
   "numpy.longdouble",
   "numpy.single",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_methods": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_scalar_methods.TestAsIntegerRatio": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalar_methods.TestAsIntegerRatio.test_against_known_values": {
  "lineno": 47,
  "symbols_in_volume": [
   "fractions.Fraction",
   "numpy.double",
   "numpy.half",
   "numpy.single",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_methods.TestAsIntegerRatio.test_errors": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.half",
   "numpy.longdouble",
   "numpy.single",
   "numpy.testing.assert_raises",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_methods.TestAsIntegerRatio.test_roundtrip": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.finfo",
   "numpy.half",
   "numpy.ldexp",
   "numpy.longdouble",
   "numpy.single",
   "numpy.testing.assert_equal",
   "platform.machine",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "pytest.param",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_methods.TestAsIntegerRatio.test_simple_fractions": {
  "lineno": 27,
  "symbols_in_volume": [
   "fractions.Fraction",
   "numpy.double",
   "numpy.half",
   "numpy.longdouble",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalar_methods.TestAsIntegerRatio.test_small": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.half",
   "numpy.longdouble",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarbuffer": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.byte",
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.half",
   "numpy.int_",
   "numpy.intc",
   "numpy.longdouble",
   "numpy.longlong",
   "numpy.short",
   "numpy.single",
   "numpy.ubyte",
   "numpy.uint",
   "numpy.uintc",
   "numpy.ulonglong",
   "numpy.ushort"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_scalarbuffer.TestScalarPEP3118": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarbuffer.TestScalarPEP3118._as_dict": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_scalarbuffer.TestScalarPEP3118.test_datetime_memoryview": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.empty",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarbuffer.TestScalarPEP3118.test_scalar_dim": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarbuffer.TestScalarPEP3118.test_scalar_known_code": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarbuffer.TestScalarPEP3118.test_scalar_match_array": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarbuffer.TestScalarPEP3118.test_str_ucs4": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.str_",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "pytest.param"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarbuffer.TestScalarPEP3118.test_void_scalar_structured_data": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.float64",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.unicode_",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarinherit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_scalarinherit.A": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.B": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.B0": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.B1": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.C": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.C0": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.D": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.HasNew": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.HasNew.__new__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_scalarinherit.TestCharacter": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.TestCharacter.test_char_radd": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarinherit.TestCharacter.test_char_radd.Mystr": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.generic"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.TestCharacter.test_char_repeat": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.string_",
   "numpy.testing.assert_",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarinherit.TestInherit": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.TestInherit.test_gh_15395": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarinherit.TestInherit.test_init": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarinherit.TestInherit.test_init2": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.byte",
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.complexfloating.__subclasses__",
   "numpy.csingle",
   "numpy.double",
   "numpy.floating.__subclasses__",
   "numpy.int_",
   "numpy.intc",
   "numpy.longdouble",
   "numpy.longlong",
   "numpy.short",
   "numpy.single",
   "numpy.testing.IS_PYPY",
   "numpy.ubyte",
   "numpy.uint",
   "numpy.uintc",
   "numpy.ulonglong",
   "numpy.ushort"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_scalarmath.TestAbs": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestAbs._test_abs_func": {
  "lineno": 649,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestAbs.test_builtin_abs": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestAbs.test_numpy_abs": {
  "lineno": 673,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestBaseMath": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestBaseMath.test_blocked": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.arange",
   "numpy.divide",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.multiply",
   "numpy.ones_like",
   "numpy.reciprocal",
   "numpy.square",
   "numpy.testing._gen_alignment_data",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestBaseMath.test_lower_align": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.float64",
   "numpy.int8",
   "numpy.ones_like",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestBitShifts": {
  "lineno": 677,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestBitShifts.test_shift_all_bits": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "operator.lshift",
   "operator.rshift",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestComplexDivision": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestComplexDivision.test_branches": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.complex64",
   "numpy.errstate",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestComplexDivision.test_signed_zeros": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.complex64",
   "numpy.errstate",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestComplexDivision.test_zero_division": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.complex64",
   "numpy.errstate",
   "numpy.inf",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_iinfo_long_values": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.testing.assert_",
   "numpy.typeDict",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_huge_longdouble": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.finfo",
   "numpy.inf",
   "numpy.longdouble",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "platform.machine",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_infinite_longdouble": {
  "lineno": 411,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.clongdouble",
   "numpy.inf",
   "numpy.longdouble",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_infinite_longdouble___int__": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.clongdouble",
   "numpy.inf",
   "numpy.longdouble",
   "numpy.testing.IS_PYPY",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_long": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_longdouble": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.longdouble",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_raise_behaviour": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_raise_behaviour.overflow_error_func": {
  "lineno": 405,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.typeDict"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_numpy_scalar_relational_operators": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_scalar_comparison_to_none": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.equal",
   "numpy.float32",
   "numpy.str_",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestModulus": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestModulus.test_float_modulus_corner_cases": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nextafter",
   "numpy.testing.assert_",
   "numpy.testing.suppress_warnings",
   "numpy.typecodes",
   "operator.mod"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestModulus.test_float_modulus_exact": {
  "lineno": 221,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestModulus.test_float_modulus_roundoff": {
  "lineno": 248,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestModulus.test_inplace_floordiv_handling": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.testing.assert_raises_regex",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestModulus.test_modulus_basic": {
  "lineno": 205,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply.test_no_seq_repeat_basic_array_like": {
  "lineno": 602,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.full",
   "numpy.int_",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply.test_no_seq_repeat_basic_array_like.ArrayLike": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply.test_no_seq_repeat_basic_array_like.ArrayLike.__array__": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply.test_no_seq_repeat_basic_array_like.ArrayLike.__init__": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply.test_seq_repeat": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "numpy.typecodes",
   "operator.mul"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestNegative": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestNegative.test_exceptions": {
  "lineno": 621,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "operator.neg"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestNegative.test_result": {
  "lineno": 625,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "numpy.typecodes",
   "operator.neg"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_integers_to_negative_integer_power": {
  "lineno": 128,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.float64",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises",
   "numpy.uint64",
   "operator.pow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_large_types": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.longdouble",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_mixed_types": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_modular_power": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex64",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_raises",
   "operator.pow"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_small_types": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.int16",
   "numpy.int8",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestRepr": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestRepr._test_type_repr": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.finfo",
   "numpy.testing.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestRepr.test_float_repr": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestSizeOf": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestSizeOf.test_equal_nbytes": {
  "lineno": 559,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestSizeOf.test_error": {
  "lineno": 564,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestSubtract": {
  "lineno": 634,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestSubtract.test_exceptions": {
  "lineno": 635,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "operator.sub"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestSubtract.test_result": {
  "lineno": 639,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "numpy.typecodes",
   "operator.sub"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_leak": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.add"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_type_add": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_type_create": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_types": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath._signs": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.floordiv_and_mod": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.float32_roundtrip": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.float64_vs_python": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_dragon4": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.format_float_positional",
   "numpy.format_float_scientific",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_dragon4_interface": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy",
   "numpy.float128",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.format_float_positional",
   "numpy.format_float_scientific",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_ppc64_ibm_double_double128": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.float128",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "platform.machine",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_py2_float_print": {
  "lineno": 51,
  "symbols_in_volume": [
   "code.interact",
   "numpy",
   "numpy.double",
   "numpy.sqrt",
   "numpy.testing.assert_equal",
   "sys.stderr",
   "sys.stdout",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_py2_float_print.userinput": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_scalar_cutoffs": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_scalar_cutoffs.check": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_str": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.longdouble",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_0D_array": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_1D_array": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_2D_array": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_3D_array": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_r1array": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.core.atleast_1d",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_0D_array": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_2d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_1D_array": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_2d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_2D_array": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_2d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_3D_array": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_2d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_r2array": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.core.atleast_2d",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_0D_array": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_3d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_1D_array": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_3d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_2D_array": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_3d",
   "numpy.core.newaxis",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_3D_array": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_3d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestBlock.block": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.core.block",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.block._block_force_concatenate": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.core.shape_base._block_concatenate",
   "numpy.core.shape_base._block_setup"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.block._block_force_slicing": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.core.shape_base._block_setup",
   "numpy.core.shape_base._block_slicing"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_3d": {
  "lineno": 560,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.block",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_complicated": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_memory_order": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.core.block",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_mixed_1d_and_2d": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_simple_column_wise": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_simple_row_wise": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_total_size_estimate": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.core.shape_base._block_setup"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_with_1d_arrays_column_wise": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_with_1d_arrays_multiple_rows": {
  "lineno": 480,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_with_1d_arrays_row_wise": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_with_mismatched_shape": {
  "lineno": 615,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.eye",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_different_ndims": {
  "lineno": 649,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_different_ndims_depths": {
  "lineno": 659,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_empty_lists": {
  "lineno": 640,
  "symbols_in_volume": [
   "numpy.core.block",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_invalid_nesting": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.core.block",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_nested": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_no_lists": {
  "lineno": 624,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.block",
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_returns_copy": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.core.block",
   "numpy.eye"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_tuple": {
  "lineno": 645,
  "symbols_in_volume": [
   "numpy.core.block",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_bad_out_shape": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.concatenate",
   "numpy.empty",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_concatenate": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.core.arange",
   "numpy.core.array",
   "numpy.core.concatenate",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_concatenate_axis_None": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.core.array",
   "numpy.float64",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_exceptions": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.array",
   "numpy.concatenate",
   "numpy.core.concatenate",
   "numpy.moveaxis",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_raises_regex",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_large_concatenate_axis_None": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_out_dtype": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.complex64",
   "numpy.core.array",
   "numpy.core.concatenate",
   "numpy.empty",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_returns_copy": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.eye"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_0D_array": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.hstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_1D_array": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.hstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_2D_array": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.hstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_empty_input": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.core.hstack",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_generator": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core.hstack",
   "numpy.ones",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_non_iterable": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.core.hstack",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_0D_array": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.vstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_1D_array": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.vstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_2D_array": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.vstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_2D_array2": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.vstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_empty_input": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.core.vstack",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_generator": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core.vstack",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_non_iterable": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.core.vstack",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.test_block_dispatcher": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.core.shape_base._block_dispatcher",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.test_block_dispatcher.ArrayLike": {
  "lineno": 703,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.test_stack": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.array",
   "numpy.core.array",
   "numpy.core.stack",
   "numpy.int32",
   "numpy.random.randn",
   "numpy.stack",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_raises_regex",
   "numpy.testing.assert_warns",
   "numpy.zeros",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.core.umath.__dict__.values",
   "numpy.ufunc"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_ufunc.TestUfunc": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.check_identityless_reduction": {
  "lineno": 1294,
  "symbols_in_volume": [
   "numpy.minimum.reduce",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results": {
  "lineno": 1028,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._umath_tests.matrix_multiply",
   "numpy.newaxis",
   "numpy.newaxis.swapaxes",
   "numpy.random.rand",
   "numpy.sum",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.broadcastable": {
  "lineno": 1056,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.permute_n": {
  "lineno": 1033,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.slice_n": {
  "lineno": 1046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_NotImplemented_not_returned": {
  "lineno": 1852,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.bitwise_and",
   "numpy.bitwise_or",
   "numpy.bitwise_xor",
   "numpy.divide",
   "numpy.equal",
   "numpy.floor_divide",
   "numpy.fmax",
   "numpy.fmin",
   "numpy.fmod",
   "numpy.greater",
   "numpy.greater_equal",
   "numpy.hypot",
   "numpy.left_shift",
   "numpy.less",
   "numpy.less_equal",
   "numpy.logaddexp",
   "numpy.logaddexp2",
   "numpy.logical_and",
   "numpy.logical_or",
   "numpy.logical_xor",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.mod",
   "numpy.multiply",
   "numpy.not_equal",
   "numpy.power",
   "numpy.right_shift",
   "numpy.subtract",
   "numpy.testing.assert_raises",
   "numpy.true_divide"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_all_ufunc": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_axes_argument": {
  "lineno": 692,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.arange",
   "numpy.array",
   "numpy.core._umath_tests.inner1d",
   "numpy.core._umath_tests.matrix_multiply",
   "numpy.empty",
   "numpy.int32",
   "numpy.int8",
   "numpy.matmul",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_axis_argument": {
  "lineno": 795,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.arange",
   "numpy.core._umath_tests.cumsum",
   "numpy.core._umath_tests.inner1d",
   "numpy.core._umath_tests.innerwt",
   "numpy.core._umath_tests.matrix_multiply",
   "numpy.cumsum",
   "numpy.empty",
   "numpy.empty_like",
   "numpy.sum",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_axis_out_of_bounds": {
  "lineno": 1205,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_broadcast": {
  "lineno": 582,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.broadcast_arrays",
   "numpy.core._umath_tests.inner1d",
   "numpy.sum",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_can_ignore_signature": {
  "lineno": 947,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._umath_tests.matmul",
   "numpy.core._umath_tests.matrix_multiply",
   "numpy.newaxis",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_casting_out_param": {
  "lineno": 1244,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.float32",
   "numpy.float64",
   "numpy.int64",
   "numpy.ones",
   "numpy.subtract",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_cross1d": {
  "lineno": 935,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._umath_tests.cross1d",
   "numpy.eye",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_cumsum": {
  "lineno": 1092,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._umath_tests.cumsum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like": {
  "lineno": 1595,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing": {
  "lineno": 1597,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__getitem__": {
  "lineno": 1609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__init__": {
  "lineno": 1603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__len__": {
  "lineno": 1606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__rmul__": {
  "lineno": 1618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_ufunc": {
  "lineno": 1569,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._rational_tests.rational",
   "numpy.core._rational_tests.test_add_rationals",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_ufunc_forced_sig": {
  "lineno": 1589,
  "symbols_in_volume": [
   "numpy.core._rational_tests.rational",
   "numpy.multiply",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_endian": {
  "lineno": 626,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.arange",
   "numpy.core._umath_tests.inner1d",
   "numpy.dtype",
   "numpy.negative",
   "numpy.sum",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_euclidean_pdist": {
  "lineno": 1082,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._umath_tests.euclidean_pdist",
   "numpy.empty",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises",
   "numpy.tri"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_forced_sig": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.arange",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_get_signature": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.core._umath_tests.inner1d.signature",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_corder": {
  "lineno": 1340,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_forder": {
  "lineno": 1344,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_noncontig": {
  "lineno": 1352,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_noncontig_unaligned": {
  "lineno": 1357,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_nonreorderable": {
  "lineno": 1431,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.divide.reduce",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_otherorder": {
  "lineno": 1348,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_incontiguous_array": {
  "lineno": 649,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._umath_tests.inner1d",
   "numpy.sum",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_initial_reduction": {
  "lineno": 1364,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.add.reduce",
   "numpy.array",
   "numpy.inf",
   "numpy.maximum.reduce",
   "numpy.minimum.reduce",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_inner1d": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._umath_tests.inner1d",
   "numpy.sum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_innerwt": {
  "lineno": 918,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._umath_tests.innerwt",
   "numpy.sum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_innerwt_empty": {
  "lineno": 928,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._umath_tests.innerwt",
   "numpy.sum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_inplace_fancy_indexing": {
  "lineno": 1626,
  "symbols_in_volume": [
   "numpy.add.at",
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.equal.at",
   "numpy.invert.at",
   "numpy.modf.at",
   "numpy.negative.at",
   "numpy.power.at",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_invalid_args": {
  "lineno": 1914,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_keepdims_argument": {
  "lineno": 839,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.arange",
   "numpy.core._umath_tests.inner1d",
   "numpy.core._umath_tests.innerwt",
   "numpy.core._umath_tests.matrix_multiply",
   "numpy.eye",
   "numpy.linalg._umath_linalg.det",
   "numpy.linalg._umath_linalg.slogdet",
   "numpy.newaxis",
   "numpy.sum",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_matrix_multiply": {
  "lineno": 1018,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.int64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_matrix_multiply_umath_empty": {
  "lineno": 1022,
  "symbols_in_volume": [
   "numpy.core._umath_tests.matrix_multiply",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_nat_is_nan": {
  "lineno": 1927,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.isnan",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_nat_is_not_finite": {
  "lineno": 1920,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.isfinite",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_nat_is_not_inf": {
  "lineno": 1934,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.isinf",
   "numpy.timedelta64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_no_doc_string": {
  "lineno": 1910,
  "symbols_in_volume": [
   "numpy.core._umath_tests.inner1d_no_doc.__doc__",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_array_accumulate_inplace": {
  "lineno": 1156,
  "symbols_in_volume": [
   "numpy.add.accumulate",
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_array_reduceat_inplace": {
  "lineno": 1176,
  "symbols_in_volume": [
   "numpy.add.reduceat",
   "numpy.arange",
   "numpy.empty",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_array_reduction": {
  "lineno": 1137,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.array",
   "numpy.max",
   "numpy.min",
   "numpy.prod",
   "numpy.sum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_comparison": {
  "lineno": 1123,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_comparison.HasComparisons": {
  "lineno": 1124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_comparison.HasComparisons.__eq__": {
  "lineno": 1125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_logical": {
  "lineno": 1097,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logical_and",
   "numpy.logical_and.reduce",
   "numpy.logical_not",
   "numpy.logical_or",
   "numpy.logical_or.reduce",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_operand_flags": {
  "lineno": 1546,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.core._operand_flag_tests.inplace_add",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_output_argument": {
  "lineno": 665,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._umath_tests.inner1d",
   "numpy.sum",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_pickle": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.core._rational_tests.test_add",
   "numpy.sin",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_pickle_withstring": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.compat.pickle.loads",
   "numpy.cos",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_arguments": {
  "lineno": 1764,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_noncontig_output": {
  "lineno": 1872,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.arange",
   "numpy.int16",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_wrong_dimension_output": {
  "lineno": 1893,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.arange",
   "numpy.empty",
   "numpy.minimum.reduce",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis": {
  "lineno": 1445,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.add.reduce",
   "numpy.maximum",
   "numpy.maximum.identity",
   "numpy.maximum.reduce",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis.err": {
  "lineno": 1462,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis.ok": {
  "lineno": 1459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis.t": {
  "lineno": 1465,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduceat_shifting_sum": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.add.reduceat",
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduction_where_initial_needed": {
  "lineno": 1426,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.maximum.reduce",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduction_with_where": {
  "lineno": 1393,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.arange",
   "numpy.array",
   "numpy.positive",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros_like",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduction_with_where_and_initial": {
  "lineno": 1411,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.full",
   "numpy.inf",
   "numpy.maximum.reduce",
   "numpy.positive",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_safe_casting": {
  "lineno": 1510,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_no_warnings",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_safe_casting.add_inplace": {
  "lineno": 1521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_scalar_equal": {
  "lineno": 1842,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_scalar_reduction": {
  "lineno": 1216,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.array",
   "numpy.bool_",
   "numpy.float32",
   "numpy.max",
   "numpy.min",
   "numpy.power.reduce",
   "numpy.prod",
   "numpy.sum",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_scalar_reduction.MyArray": {
  "lineno": 1239,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature0": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature1": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature2": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature3": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature4": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature5": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature6": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature7": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature8": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature_failure_extra_parenthesis": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature_failure_mismatching_parenthesis": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature_failure_signature_missing_input_arg": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature_failure_signature_missing_output_arg": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.core._umath_tests.test_signature",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_struct_ufunc": {
  "lineno": 1559,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._struct_ufunc_tests.add_triplet",
   "numpy.core._struct_ufunc_tests.register_fail",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_structured_equal": {
  "lineno": 1828,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_structured_equal.MyA": {
  "lineno": 1831,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_structured_equal.MyA.__array_ufunc__": {
  "lineno": 1832,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_sum": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.isfinite",
   "numpy.longdouble",
   "numpy.ones",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_sum_complex": {
  "lineno": 534,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.clongdouble",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.empty",
   "numpy.ones",
   "numpy.sum",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_sum_initial": {
  "lineno": 559,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.ones",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_sum_stability": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.ones",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_sum_where": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_true_divide": {
  "lineno": 421,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.bool_",
   "numpy.dtype",
   "numpy.errstate",
   "numpy.finfo",
   "numpy.isfinite",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_raises",
   "numpy.true_divide"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_type_cast": {
  "lineno": 615,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.core._umath_tests.inner1d",
   "numpy.sum",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_ufunc_custom_out": {
  "lineno": 1529,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core._rational_tests.rational",
   "numpy.core._rational_tests.test_add",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_where_param": {
  "lineno": 1257,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.arange",
   "numpy.ones",
   "numpy.power",
   "numpy.subtract",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_where_param_alloc": {
  "lineno": 1283,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.int64",
   "numpy.sqrt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_where_param_buffer_output": {
  "lineno": 1272,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.float64",
   "numpy.int64",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_zerosize_reduction": {
  "lineno": 1195,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.array",
   "numpy.max",
   "numpy.min",
   "numpy.prod",
   "numpy.sum",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.longdouble",
   "numpy.single"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.f2": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.foo": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.foo.conjugate": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.bool_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.foo.logical_xor": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.bool_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_binary_PyUFunc": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_binary_PyUFunc_OO_O": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.all",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_binary_PyUFunc_OO_O_method": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.full",
   "numpy.logical_xor",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_binary_PyUFunc_On_Om_method": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.full",
   "numpy.logical_xor",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_python_complex_conjugate": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.conjugate",
   "numpy.dtype",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_unary_PyUFunc": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.full",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_unary_PyUFunc_O_O": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_unary_PyUFunc_O_O_method_full": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.float64",
   "numpy.pi",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_unary_PyUFunc_O_O_method_full.MyFloat": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_unary_PyUFunc_O_O_method_full.MyFloat.__getattr__": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.core.umath"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncGenericLoops.test_unary_PyUFunc_O_O_method_simple": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.conjugate",
   "numpy.full",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncKwargs": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfuncKwargs.test_extobj_refcount": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncKwargs.test_kwarg_exact": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncKwargs.test_sig_dtype": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncKwargs.test_sig_signature": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.test_ufunc_noncontiguous": {
  "lineno": 1969,
  "symbols_in_volume": [
   "numpy",
   "numpy.empty",
   "numpy.finfo",
   "numpy.floating",
   "numpy.issubdtype",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.ufunc",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.test_ufunc_types": {
  "lineno": 1942,
  "symbols_in_volume": [
   "numpy",
   "numpy.dtype",
   "numpy.ones",
   "numpy.ufunc",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.test_ufunc_warn_with_nan": {
  "lineno": 2008,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.equal",
   "numpy.isnan",
   "numpy.sign",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath": {
  "lineno": null,
  "symbols_in_volume": [
   "platform.machine"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_umath.TestAVXFloat32Transcendental": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAVXFloat32Transcendental.test_exp_float32": {
  "lineno": 817,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_array_max_ulp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAVXFloat32Transcendental.test_log_float32": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.log",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_array_max_ulp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAVXFloat32Transcendental.test_sincos_float32": {
  "lineno": 829,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.float32",
   "numpy.float64",
   "numpy.int_",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sin",
   "numpy.testing.assert_array_max_ulp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAVXFloat32Transcendental.test_strided_float32": {
  "lineno": 841,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.cos",
   "numpy.exp",
   "numpy.float32",
   "numpy.log",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sin",
   "numpy.testing.assert_array_almost_equal_nulp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAVXUfuncs": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAVXUfuncs.test_avx_based_ufunc": {
  "lineno": 785,
  "symbols_in_volume": [
   "numpy",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.longdouble",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_array_max_ulp",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAbsoluteNegative": {
  "lineno": 1591,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAbsoluteNegative.test_abs_neg_blocked": {
  "lineno": 1592,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.absolute",
   "numpy.arange",
   "numpy.core.umath.absolute",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.nan",
   "numpy.negative",
   "numpy.testing._gen_alignment_data",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAbsoluteNegative.test_lower_align": {
  "lineno": 1621,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.float64",
   "numpy.int8",
   "numpy.negative",
   "numpy.ones_like",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAdd": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAdd.test_reduce_alignment": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int32",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues": {
  "lineno": 998,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_any_ninf": {
  "lineno": 1035,
  "symbols_in_volume": [
   "numpy.NINF",
   "numpy.core.umath.arctan2",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_any_pinf": {
  "lineno": 1040,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_any": {
  "lineno": 1045,
  "symbols_in_volume": [
   "numpy.core.umath.arctan2",
   "numpy.inf",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_ninf": {
  "lineno": 1050,
  "symbols_in_volume": [
   "numpy.core.umath.arctan2",
   "numpy.inf",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_pinf": {
  "lineno": 1055,
  "symbols_in_volume": [
   "numpy.core.umath.arctan2",
   "numpy.inf",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_nan_any": {
  "lineno": 1060,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_negative_zero": {
  "lineno": 1030,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO",
   "numpy.core.umath.arctan2",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_one_one": {
  "lineno": 999,
  "symbols_in_volume": [
   "numpy.core.umath.arctan2",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_positive_zero": {
  "lineno": 1025,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO",
   "numpy.core.umath.arctan2",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_negative": {
  "lineno": 1015,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO",
   "numpy.core.umath.arctan2",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_nzero": {
  "lineno": 1005,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO",
   "numpy.core.umath.arctan2",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_positive": {
  "lineno": 1020,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_pzero": {
  "lineno": 1010,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAttributes": {
  "lineno": 2901,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAttributes.test_attributes": {
  "lineno": 2902,
  "symbols_in_volume": [
   "numpy.core.umath.add",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAttributes.test_doc": {
  "lineno": 2911,
  "symbols_in_volume": [
   "numpy.core.umath.add.__doc__.startswith",
   "numpy.core.umath.frexp.__doc__.startswith",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBitwiseUFuncs": {
  "lineno": 1383,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestBitwiseUFuncs.test_identity": {
  "lineno": 1422,
  "symbols_in_volume": [
   "numpy.bitwise_and.identity",
   "numpy.bitwise_or.identity",
   "numpy.bitwise_xor.identity",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBitwiseUFuncs.test_reduction": {
  "lineno": 1427,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bitwise_and",
   "numpy.bitwise_or",
   "numpy.bitwise_xor",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBitwiseUFuncs.test_types": {
  "lineno": 1411,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bitwise_and",
   "numpy.bitwise_not",
   "numpy.bitwise_or",
   "numpy.bitwise_xor",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBitwiseUFuncs.test_values": {
  "lineno": 1387,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bitwise_and",
   "numpy.bitwise_not",
   "numpy.bitwise_or",
   "numpy.bitwise_xor",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBool": {
  "lineno": 1320,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestBool.test_exceptions": {
  "lineno": 1321,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.negative",
   "numpy.ones",
   "numpy.positive",
   "numpy.subtract",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBool.test_reduce": {
  "lineno": 1365,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logical_and.reduce",
   "numpy.logical_or.reduce",
   "numpy.logical_xor.reduce",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBool.test_truth_table_bitwise": {
  "lineno": 1352,
  "symbols_in_volume": [
   "numpy.bitwise_and",
   "numpy.bitwise_or",
   "numpy.bitwise_xor",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBool.test_truth_table_logical": {
  "lineno": 1327,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dtype",
   "numpy.logical_and",
   "numpy.logical_or",
   "numpy.logical_xor",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.not_equal",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestCbrt": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestCbrt.test_cbrt": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cbrt",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestCbrt.test_cbrt_scalar": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.cbrt",
   "numpy.float32",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestChoose": {
  "lineno": 2574,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestChoose.test_mixed": {
  "lineno": 2575,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.choose",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComparisons": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_equal": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.equal",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_equal.FunkyType": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_equal.FunkyType.__eq__": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_not_equal": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.not_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_not_equal.FunkyType": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_not_equal.FunkyType.__ne__": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions": {
  "lineno": 2716,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.arccosh",
   "numpy.arcsin",
   "numpy.arcsinh",
   "numpy.arctan",
   "numpy.arctanh",
   "numpy.cos",
   "numpy.exp",
   "numpy.exp2",
   "numpy.log",
   "numpy.log10",
   "numpy.log1p",
   "numpy.log2",
   "numpy.sin",
   "numpy.sqrt",
   "numpy.tan"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_against_cmath": {
  "lineno": 2792,
  "symbols_in_volume": [
   "cmath",
   "numpy.complex_",
   "numpy.finfo",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_branch_cuts": {
  "lineno": 2742,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.arccosh",
   "numpy.arcsin",
   "numpy.arcsinh",
   "numpy.arctan",
   "numpy.arctanh",
   "numpy.log",
   "numpy.log10",
   "numpy.log1p",
   "numpy.log2",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_branch_cuts_complex64": {
  "lineno": 2767,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.arccosh",
   "numpy.arcsin",
   "numpy.arcsinh",
   "numpy.arctan",
   "numpy.arctanh",
   "numpy.complex64",
   "numpy.log",
   "numpy.log10",
   "numpy.log1p",
   "numpy.log2",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_it": {
  "lineno": 2722,
  "symbols_in_volume": [
   "numpy.arccosh",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_loss_of_precision": {
  "lineno": 2811,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.all",
   "numpy.arcsin",
   "numpy.arcsinh",
   "numpy.arctan",
   "numpy.arctanh",
   "numpy.array",
   "numpy.complex64",
   "numpy.complex_",
   "numpy.finfo",
   "numpy.logspace",
   "numpy.longcomplex",
   "numpy.testing.assert_",
   "pytest.mark.parametrize",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_loss_of_precision.check": {
  "lineno": 2883,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_precisions_consistent": {
  "lineno": 2733,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.clongdouble",
   "numpy.csingle",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestConstants": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestConstants.test_e": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.core.umath.e",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestConstants.test_euler_gamma": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.core.umath.euler_gamma",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestConstants.test_pi": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.core.umath.pi",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDegrees": {
  "lineno": 1483,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestDegrees.test_degrees": {
  "lineno": 1484,
  "symbols_in_volume": [
   "numpy.core.umath.degrees",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestDivision.test_division_complex": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_division_int": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_floor_division_complex": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.floor_divide",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_floor_division_signed_zero": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.signbit",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_zero_division_complex": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.errstate",
   "numpy.inf",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExp": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExp.test_exp_strides": {
  "lineno": 670,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.exp",
   "numpy.float64",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_array_almost_equal_nulp"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExp.test_exp_values": {
  "lineno": 661,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExp2": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExp2.test_exp2_values": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp2",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExpm1": {
  "lineno": 918,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExpm1.test_complex": {
  "lineno": 930,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.complex128",
   "numpy.core.umath.expm1",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExpm1.test_expm1": {
  "lineno": 919,
  "symbols_in_volume": [
   "numpy.core.umath.exp",
   "numpy.core.umath.expm1",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExpm1.test_special": {
  "lineno": 923,
  "symbols_in_volume": [
   "numpy.core.umath.expm1",
   "numpy.inf",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFloat_power": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFloat_power.test_type_conversion": {
  "lineno": 550,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float_power",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFloatingPoint": {
  "lineno": 1478,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFloatingPoint.test_floating_point": {
  "lineno": 1479,
  "symbols_in_volume": [
   "numpy.core.umath.FLOATING_POINT_SUPPORT",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax": {
  "lineno": 1236,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFmax.test_complex_nans": {
  "lineno": 1269,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fmax",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_float_nans": {
  "lineno": 1262,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fmax",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_reduce": {
  "lineno": 1237,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.fmax.reduce",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_reduce_complex": {
  "lineno": 1258,
  "symbols_in_volume": [
   "numpy.fmax.reduce",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin": {
  "lineno": 1278,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFmin.test_complex_nans": {
  "lineno": 1311,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fmin",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_float_nans": {
  "lineno": 1304,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fmin",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_reduce": {
  "lineno": 1279,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.fmin.reduce",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_reduce_complex": {
  "lineno": 1300,
  "symbols_in_volume": [
   "numpy.fmin.reduce",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFrompyfunc": {
  "lineno": 2934,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFrompyfunc.test_identity": {
  "lineno": 2936,
  "symbols_in_volume": [
   "numpy.frompyfunc",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFrompyfunc.test_identity.mul": {
  "lineno": 2937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHeavside": {
  "lineno": 1495,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestHeavside.test_heaviside": {
  "lineno": 1496,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.umath.heaviside",
   "numpy.float32",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypot": {
  "lineno": 937,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestHypot.test_reduce": {
  "lineno": 942,
  "symbols_in_volume": [
   "numpy.core.umath.hypot.reduce",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypot.test_simple": {
  "lineno": 938,
  "symbols_in_volume": [
   "numpy.core.umath.hypot",
   "numpy.core.umath.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues": {
  "lineno": 961,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues.test_nan_outputs": {
  "lineno": 962,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues.test_nan_outputs2": {
  "lineno": 966,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues.test_no_fpe": {
  "lineno": 974,
  "symbols_in_volume": [
   "numpy.core.umath.hypot",
   "numpy.inf",
   "numpy.testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestInt": {
  "lineno": 1467,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestInt.test_logical_not": {
  "lineno": 1468,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.logical_not",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLdexp": {
  "lineno": 1067,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLdexp._check_ldexp": {
  "lineno": 1068,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.umath.ldexp",
   "numpy.float32",
   "numpy.float64",
   "numpy.longdouble",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLdexp.test_ldexp": {
  "lineno": 1076,
  "symbols_in_volume": [
   "numpy.core.umath.ldexp",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLdexp.test_ldexp_overflow": {
  "lineno": 1086,
  "symbols_in_volume": [
   "numpy.core.umath.ldexp",
   "numpy.dtype",
   "numpy.errstate",
   "numpy.iinfo",
   "numpy.inf",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog.test_log_values": {
  "lineno": 650,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog1p": {
  "lineno": 904,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog1p.test_log1p": {
  "lineno": 905,
  "symbols_in_volume": [
   "numpy.core.umath.log",
   "numpy.core.umath.log1p",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog1p.test_special": {
  "lineno": 909,
  "symbols_in_volume": [
   "numpy.core.umath.log1p",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog2": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog2.test_log2_ints": {
  "lineno": 569,
  "symbols_in_volume": [
   "numpy.log2",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog2.test_log2_special": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isnan",
   "numpy.log2",
   "numpy.nan",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog2.test_log2_values": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log2",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_inf": {
  "lineno": 880,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.logaddexp",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_logaddexp_range": {
  "lineno": 870,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logaddexp",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_logaddexp_values": {
  "lineno": 860,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "numpy.logaddexp",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_nan": {
  "lineno": 892,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isnan",
   "numpy.logaddexp",
   "numpy.nan",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_reduce": {
  "lineno": 899,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.logaddexp.identity",
   "numpy.logaddexp.reduce",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_inf": {
  "lineno": 623,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.logaddexp2",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_logaddexp2_range": {
  "lineno": 613,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logaddexp2",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_logaddexp2_values": {
  "lineno": 603,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log2",
   "numpy.logaddexp2",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_nan": {
  "lineno": 635,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isnan",
   "numpy.logaddexp2",
   "numpy.nan",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_reduce": {
  "lineno": 642,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.logaddexp2.identity",
   "numpy.logaddexp2.reduce",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum": {
  "lineno": 1095,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_complex_nans": {
  "lineno": 1139,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.maximum",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_float_nans": {
  "lineno": 1121,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.maximum",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_object_array": {
  "lineno": 1147,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.maximum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_object_nans": {
  "lineno": 1128,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.maximum",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_reduce": {
  "lineno": 1096,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.maximum.reduce",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_reduce_complex": {
  "lineno": 1117,
  "symbols_in_volume": [
   "numpy.maximum.reduce",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_strided_array": {
  "lineno": 1152,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.maximum",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinMax": {
  "lineno": 1548,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMinMax.test_lower_align": {
  "lineno": 1570,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int8",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinMax.test_minimize_no_warns": {
  "lineno": 1586,
  "symbols_in_volume": [
   "numpy.minimum",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinMax.test_minmax_blocked": {
  "lineno": 1549,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.isnan",
   "numpy.nan",
   "numpy.testing._gen_alignment_data",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinMax.test_reduce_reorder": {
  "lineno": 1577,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex64",
   "numpy.diagflat",
   "numpy.float16",
   "numpy.float32",
   "numpy.min",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum": {
  "lineno": 1166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_complex_nans": {
  "lineno": 1210,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.minimum",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_float_nans": {
  "lineno": 1192,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.minimum",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_object_array": {
  "lineno": 1218,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.minimum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_object_nans": {
  "lineno": 1199,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.minimum",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_reduce": {
  "lineno": 1167,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.minimum.reduce",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_reduce_complex": {
  "lineno": 1188,
  "symbols_in_volume": [
   "numpy.minimum.reduce",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_strided_array": {
  "lineno": 1223,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.minimum",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestOut": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestOut.test_out_subok": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.empty",
   "numpy.frexp",
   "numpy.int32",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestOut.test_out_wrap_subok": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.empty",
   "numpy.frexp",
   "numpy.int32",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestOut.test_out_wrap_subok.ArrayWrap": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestOut.test_out_wrap_subok.ArrayWrap.__array_wrap__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestOut.test_out_wrap_subok.ArrayWrap.__new__": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPositive": {
  "lineno": 1633,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestPositive.test_invalid": {
  "lineno": 1641,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.positive",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPositive.test_valid": {
  "lineno": 1634,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.positive",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestPower.test_fast_power": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int16",
   "numpy.may_share_memory",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_integer_power": {
  "lineno": 508,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.power",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_integer_power_of_1": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones_like",
   "numpy.power",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_integer_power_of_zero": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.power",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_integer_power_with_integer_zero_exponent": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones_like",
   "numpy.power",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_integer_to_negative_power": {
  "lineno": 536,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.power",
   "numpy.testing.assert_raises",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_complex": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex_",
   "numpy.core.umath.sqrt",
   "numpy.errstate",
   "numpy.inf",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_complex.assert_complex_equal": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_float": {
  "lineno": 411,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.umath.sqrt",
   "numpy.float32",
   "numpy.float64",
   "numpy.sqrt",
   "numpy.testing._gen_alignment_data",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_zero": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.nan",
   "numpy.power"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_zero.assert_complex_equal": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRadians": {
  "lineno": 1489,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestRadians.test_radians": {
  "lineno": 1490,
  "symbols_in_volume": [
   "numpy.core.umath.radians",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions": {
  "lineno": 2581,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions._test_gcd_inner": {
  "lineno": 2617,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.gcd",
   "numpy.gcd.reduce",
   "numpy.testing.assert_equal",
   "numpy.unsignedinteger"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions._test_lcm_inner": {
  "lineno": 2596,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lcm",
   "numpy.lcm.reduce",
   "numpy.testing.assert_equal",
   "numpy.unsignedinteger"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions.test_builtin_long": {
  "lineno": 2667,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.gcd",
   "numpy.lcm",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions.test_decimal": {
  "lineno": 2654,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "numpy.gcd",
   "numpy.lcm",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions.test_float": {
  "lineno": 2662,
  "symbols_in_volume": [
   "numpy.gcd",
   "numpy.lcm",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions.test_gcd": {
  "lineno": 2589,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.uint16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions.test_gcd_object": {
  "lineno": 2593,
  "symbols_in_volume": [
   "numpy.object_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions.test_gcd_overflow": {
  "lineno": 2645,
  "symbols_in_volume": [
   "numpy.gcd",
   "numpy.iinfo",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions.test_lcm": {
  "lineno": 2582,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.uint16"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions.test_lcm_object": {
  "lineno": 2586,
  "symbols_in_volume": [
   "numpy.object_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRationalFunctions.test_lcm_overflow": {
  "lineno": 2638,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int32",
   "numpy.lcm",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRemainder": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestRemainder.test_float_remainder_corner_cases": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nextafter",
   "numpy.remainder",
   "numpy.testing.assert_",
   "numpy.testing.suppress_warnings",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRemainder.test_float_remainder_exact": {
  "lineno": 324,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.divmod",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRemainder.test_float_remainder_roundoff": {
  "lineno": 350,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.divmod",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRemainder.test_remainder_basic": {
  "lineno": 308,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.divmod",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRoundingFunctions": {
  "lineno": 2680,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestRoundingFunctions.test_fraction": {
  "lineno": 2709,
  "symbols_in_volume": [
   "fractions.Fraction",
   "numpy.ceil",
   "numpy.floor",
   "numpy.testing.assert_equal",
   "numpy.trunc"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRoundingFunctions.test_object_direct": {
  "lineno": 2682,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ceil",
   "numpy.floor",
   "numpy.testing.assert_equal",
   "numpy.trunc"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRoundingFunctions.test_object_direct.C": {
  "lineno": 2684,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestRoundingFunctions.test_object_direct.C.__ceil__": {
  "lineno": 2687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRoundingFunctions.test_object_direct.C.__floor__": {
  "lineno": 2685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRoundingFunctions.test_object_direct.C.__trunc__": {
  "lineno": 2689,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRoundingFunctions.test_object_indirect": {
  "lineno": 2697,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ceil",
   "numpy.floor",
   "numpy.testing.assert_equal",
   "numpy.trunc",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRoundingFunctions.test_object_indirect.C": {
  "lineno": 2699,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestRoundingFunctions.test_object_indirect.C.__float__": {
  "lineno": 2700,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSign": {
  "lineno": 1517,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSign.test_sign": {
  "lineno": 1518,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.umath.sign",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSign.test_sign_dtype_nan_object": {
  "lineno": 1539,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSign.test_sign_dtype_nan_object.test_nan": {
  "lineno": 1541,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.sign"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSign.test_sign_dtype_object": {
  "lineno": 1530,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sign",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialFloats": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialFloats.test_abs_values": {
  "lineno": 740,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialFloats.test_exp_values": {
  "lineno": 681,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.exp",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialFloats.test_log_values": {
  "lineno": 695,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.float32",
   "numpy.inf",
   "numpy.log",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialFloats.test_reciprocal_values": {
  "lineno": 761,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan",
   "numpy.reciprocal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialFloats.test_sincos_values": {
  "lineno": 711,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cos",
   "numpy.errstate",
   "numpy.float32",
   "numpy.inf",
   "numpy.nan",
   "numpy.sin",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialFloats.test_sqrt_values": {
  "lineno": 727,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan",
   "numpy.sqrt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialFloats.test_square_values": {
  "lineno": 748,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan",
   "numpy.square",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods": {
  "lineno": 1652,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_too_many_args": {
  "lineno": 1917,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_too_many_args.A": {
  "lineno": 1919,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_too_many_args.A.__array__": {
  "lineno": 1920,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare": {
  "lineno": 1859,
  "symbols_in_volume": [
   "numpy.core.umath.minimum",
   "numpy.ndarray",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap": {
  "lineno": 1861,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap.__array__": {
  "lineno": 1864,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap.__array_wrap__": {
  "lineno": 1867,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_out_wrap": {
  "lineno": 1828,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.umath.frexp",
   "numpy.empty",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_out_wrap.Bad": {
  "lineno": 1836,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_out_wrap.Bad.__array_wrap__": {
  "lineno": 1837,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_out_wrap.Ok": {
  "lineno": 1832,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_out_wrap.Ok.__array_wrap__": {
  "lineno": 1833,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare": {
  "lineno": 1905,
  "symbols_in_volume": [
   "numpy.core.umath.maximum",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A": {
  "lineno": 1907,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A.__array__": {
  "lineno": 1908,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A.__array_prepare__": {
  "lineno": 1911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap": {
  "lineno": 1815,
  "symbols_in_volume": [
   "numpy.core.umath.maximum",
   "numpy.core.umath.maximum.reduce",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A": {
  "lineno": 1817,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A.__array__": {
  "lineno": 1818,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A.__array_wrap__": {
  "lineno": 1821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_gufunc_override": {
  "lineno": 2370,
  "symbols_in_volume": [
   "numpy.core._umath_tests.inner1d",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_gufunc_override.A": {
  "lineno": 2373,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_gufunc_override.A.__array_ufunc__": {
  "lineno": 2374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_none_wrap": {
  "lineno": 1846,
  "symbols_in_volume": [
   "numpy.core.umath.maximum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_none_wrap.A": {
  "lineno": 1849,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_none_wrap.A.__array__": {
  "lineno": 1850,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_none_wrap.A.__array_wrap__": {
  "lineno": 1853,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap": {
  "lineno": 1757,
  "symbols_in_volume": [
   "numpy.core.umath.minimum",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap": {
  "lineno": 1759,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap.__array__": {
  "lineno": 1760,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap.__array_wrap__": {
  "lineno": 1763,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare": {
  "lineno": 1875,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare.with_prepare": {
  "lineno": 1877,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare.with_prepare.__array_prepare__": {
  "lineno": 1880,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare_out": {
  "lineno": 1889,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.shares_memory",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare_out.with_prepare": {
  "lineno": 1891,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare_out.with_prepare.__array_prepare__": {
  "lineno": 1894,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority": {
  "lineno": 1772,
  "symbols_in_volume": [
   "numpy.core.umath.exp",
   "numpy.core.umath.minimum",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A": {
  "lineno": 1774,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A.__array__": {
  "lineno": 1775,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A.__array_wrap__": {
  "lineno": 1778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.B": {
  "lineno": 1784,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.C": {
  "lineno": 1787,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar": {
  "lineno": 1743,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar.A": {
  "lineno": 1746,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar.A.__new__": {
  "lineno": 1749,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override": {
  "lineno": 1926,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.multiply",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override.A": {
  "lineno": 1928,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override.A.__array_ufunc__": {
  "lineno": 1929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override.MyNDArray": {
  "lineno": 1932,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_disabled": {
  "lineno": 2340,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.negative",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_disabled.GreedyArray": {
  "lineno": 2359,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_disabled.GreedyArray.__array_ufunc__": {
  "lineno": 2360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_disabled.OptOut": {
  "lineno": 2342,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_exception": {
  "lineno": 2312,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.negative",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_exception.A": {
  "lineno": 2314,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_exception.A.__array_ufunc__": {
  "lineno": 2315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_methods": {
  "lineno": 2087,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.core._umath_tests.inner1d",
   "numpy.multiply",
   "numpy.multiply.__call__",
   "numpy.multiply.accumulate",
   "numpy.multiply.at",
   "numpy.multiply.outer",
   "numpy.multiply.reduce",
   "numpy.multiply.reduceat",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_methods.A": {
  "lineno": 2089,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_methods.A.__array_ufunc__": {
  "lineno": 2090,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro": {
  "lineno": 1952,
  "symbols_in_volume": [
   "numpy.frompyfunc",
   "numpy.multiply",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.A": {
  "lineno": 1965,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.A.__array_ufunc__": {
  "lineno": 1966,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.ASub": {
  "lineno": 1969,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.ASub.__array_ufunc__": {
  "lineno": 1970,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.B": {
  "lineno": 1973,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.B.__array_ufunc__": {
  "lineno": 1974,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.C": {
  "lineno": 1977,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.C.__array_ufunc__": {
  "lineno": 1981,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.C.__init__": {
  "lineno": 1978,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.CSub": {
  "lineno": 1985,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.CSub.__array_ufunc__": {
  "lineno": 1986,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.quatro_mul": {
  "lineno": 1958,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.tres_mul": {
  "lineno": 1955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_not_implemented": {
  "lineno": 2323,
  "symbols_in_volume": [
   "fnmatch.translate",
   "numpy.add",
   "numpy.negative",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_not_implemented.A": {
  "lineno": 2325,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_not_implemented.A.__array_ufunc__": {
  "lineno": 2326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_out": {
  "lineno": 2256,
  "symbols_in_volume": [
   "numpy.frexp",
   "numpy.modf",
   "numpy.multiply",
   "numpy.sin",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_out.A": {
  "lineno": 2258,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_out.A.__array_ufunc__": {
  "lineno": 2259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_out.B": {
  "lineno": 2262,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_out.B.__array_ufunc__": {
  "lineno": 2263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_with_super": {
  "lineno": 2400,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.add.accumulate",
   "numpy.add.at",
   "numpy.add.reduce",
   "numpy.add.reduceat",
   "numpy.all",
   "numpy.arange",
   "numpy.array",
   "numpy.modf",
   "numpy.sin",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_with_super.A": {
  "lineno": 2403,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_with_super.A.__array_ufunc__": {
  "lineno": 2404,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_with_super.B": {
  "lineno": 2455,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_with_super.B.__array_ufunc__": {
  "lineno": 2456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap": {
  "lineno": 1653,
  "symbols_in_volume": [
   "numpy.core.umath.minimum",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap": {
  "lineno": 1655,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap.__array__": {
  "lineno": 1656,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap.__array_wrap__": {
  "lineno": 1659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_and_prepare_out": {
  "lineno": 1675,
  "symbols_in_volume": [
   "numpy.add"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_and_prepare_out.StoreArrayPrepareWrap": {
  "lineno": 1679,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_and_prepare_out.StoreArrayPrepareWrap.__array_prepare__": {
  "lineno": 1687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_and_prepare_out.StoreArrayPrepareWrap.__array_wrap__": {
  "lineno": 1684,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_and_prepare_out.StoreArrayPrepareWrap.__new__": {
  "lineno": 1682,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_and_prepare_out.StoreArrayPrepareWrap.__repr__": {
  "lineno": 1695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_and_prepare_out.StoreArrayPrepareWrap.args": {
  "lineno": 1690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_and_prepare_out.do_test": {
  "lineno": 1698,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable": {
  "lineno": 1726,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.umath.multiply",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap": {
  "lineno": 1729,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap.__array_wrap__": {
  "lineno": 1735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap.__new__": {
  "lineno": 1732,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSubclass": {
  "lineno": 2920,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op": {
  "lineno": 2922,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op.simple": {
  "lineno": 2924,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op.simple.__new__": {
  "lineno": 2925,
  "symbols_in_volume": [
   "numpy.ndarray.__new__"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath._FilterInvalids": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath._FilterInvalids.setup": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath._FilterInvalids.teardown": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath._check_branch_cut": {
  "lineno": 2959,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.absolute",
   "numpy.all",
   "numpy.any",
   "numpy.atleast_1d",
   "numpy.dtype",
   "numpy.finfo",
   "numpy.float32",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath._signs": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath._test_nextafter": {
  "lineno": 3028,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nextafter",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath._test_spacing": {
  "lineno": 3061,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.finfo",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.spacing",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isnan": {
  "lineno": 978,
  "symbols_in_volume": [
   "numpy.core.umath.arctan2",
   "numpy.isnan",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isninf": {
  "lineno": 986,
  "symbols_in_volume": [
   "numpy.core.umath.arctan2",
   "numpy.isinf",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isnzero": {
  "lineno": 994,
  "symbols_in_volume": [
   "numpy.core.umath.arctan2",
   "numpy.signbit",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_ispinf": {
  "lineno": 982,
  "symbols_in_volume": [
   "numpy.core.umath.arctan2",
   "numpy.isinf",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_ispzero": {
  "lineno": 990,
  "symbols_in_volume": [
   "numpy.core.umath.arctan2",
   "numpy.signbit",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_hypot_isinf": {
  "lineno": 955,
  "symbols_in_volume": [
   "numpy.core.umath.hypot",
   "numpy.errstate",
   "numpy.isinf",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_hypot_isnan": {
  "lineno": 949,
  "symbols_in_volume": [
   "numpy.core.umath.hypot",
   "numpy.errstate",
   "numpy.isnan",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.bad_arcsinh": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.arcsinh",
   "numpy.complex256",
   "numpy.float128"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.floor_divide_and_remainder": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.floor_divide",
   "numpy.remainder"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.on_powerpc": {
  "lineno": 18,
  "symbols_in_volume": [
   "platform.machine",
   "platform.processor"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_complex_nan_comparisons": {
  "lineno": 3173,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isfinite",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_copysign": {
  "lineno": 3020,
  "symbols_in_volume": [
   "numpy.copysign",
   "numpy.errstate",
   "numpy.nan",
   "numpy.signbit",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_memoverlap_accumulate": {
  "lineno": 3203,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.maximum.accumulate",
   "numpy.minimum.accumulate",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafter": {
  "lineno": 3039,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafter_0": {
  "lineno": 3055,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.finfo",
   "numpy.nextafter",
   "numpy.sctypes",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafter_vs_spacing": {
  "lineno": 3117,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.nextafter",
   "numpy.spacing",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafterf": {
  "lineno": 3043,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafterl": {
  "lineno": 3047,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.finfo",
   "numpy.longdouble",
   "platform.machine",
   "pytest.mark.skipif",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_outer_subclass_preserve": {
  "lineno": 3217,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.matrix",
   "numpy.multiply.outer",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_outer_subclass_preserve.foo": {
  "lineno": 3224,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.core.tests.test_umath.test_pos_nan": {
  "lineno": 3125,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.signbit",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_reduceat": {
  "lineno": 3129,
  "symbols_in_volume": [
   "numpy.UFUNC_BUFSIZE_DEFAULT",
   "numpy.add.reduce",
   "numpy.add.reduceat",
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.float32",
   "numpy.int64",
   "numpy.setbufsize",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_reduceat_empty": {
  "lineno": 3157,
  "symbols_in_volume": [
   "numpy.add.reduceat",
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_rint_big_int": {
  "lineno": 3194,
  "symbols_in_volume": [
   "numpy.rint",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_signaling_nan_exceptions": {
  "lineno": 3212,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.ndarray",
   "numpy.testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacing": {
  "lineno": 3073,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacing_gfortran": {
  "lineno": 3087,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.spacing",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacingf": {
  "lineno": 3076,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacingl": {
  "lineno": 3080,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.finfo",
   "numpy.longdouble",
   "platform.machine",
   "pytest.mark.skipif",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_accuracy": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.core._multiarray_umath.__cpu_features__.get",
   "numpy.vectorize",
   "pytest.mark.skipif",
   "sys.platform.startswith"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_umath_accuracy.TestAccuracy": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath_accuracy.TestAccuracy.test_validate_transcendentals": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy",
   "numpy.array",
   "numpy.errstate",
   "numpy.genfromtxt",
   "numpy.random.permutation",
   "numpy.testing.assert_array_max_ulp",
   "numpy.unique",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_accuracy.convert": {
  "lineno": 19,
  "symbols_in_volume": [
   "ctypes.POINTER",
   "ctypes.c_double",
   "ctypes.c_float",
   "ctypes.c_int",
   "ctypes.c_longlong",
   "ctypes.cast",
   "ctypes.pointer"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.errstate",
   "numpy.exp",
   "numpy.inf",
   "numpy.log",
   "numpy.pi",
   "pytest.mark.skipif",
   "sys.platform.startswith"
  ],
  "type": "module"
 },
 "numpy.core.tests.test_umath_complex.TestCabs": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.setup": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.teardown": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.test_cabs_inf_nan": {
  "lineno": 425,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.test_cabs_inf_nan.f": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.conj"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.test_cabs_inf_nan.g": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.test_fabs": {
  "lineno": 411,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.abs",
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.real",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.test_simple": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCarg": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestCarg.test_simple": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.PZERO",
   "numpy.core._multiarray_umath._arg",
   "numpy.pi"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCarg.test_special_values": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO",
   "numpy.core._multiarray_umath._arg",
   "numpy.inf",
   "numpy.nan",
   "numpy.pi"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCarg.test_zero": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO",
   "numpy.core._multiarray_umath._arg",
   "numpy.pi",
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_simple": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.exp",
   "numpy.sin"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO",
   "numpy.exp",
   "numpy.inf",
   "numpy.nan",
   "numpy.pi"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values._check_inf_inf": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.isinf",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values._check_inf_nan": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values._check_ninf_inf": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values._check_ninf_nan": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values2": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.nan",
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestClog": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestClog.test_simple": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.angle",
   "numpy.array",
   "numpy.log",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestClog.test_special_values": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.log",
   "numpy.nan",
   "numpy.pi",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises",
   "platform.machine",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestComplexAbsoluteAVX": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestComplexAbsoluteAVX.test_array": {
  "lineno": 572,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestComplexAbsoluteMixedDTypes": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestComplexAbsoluteMixedDTypes.test_array": {
  "lineno": 583,
  "symbols_in_volume": [
   "numpy",
   "numpy.array",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.testing.assert_array_max_ulp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCpow": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestCpow.setup": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCpow.teardown": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCpow.test_array": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCpow.test_scalar": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCpow.test_simple": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.power",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt.test_simple": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt.test_simple_conjugate": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt.test_simple_conjugate.f": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt.test_special_values": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO",
   "numpy.inf",
   "numpy.nan",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt.test_special_values._check_ninf_nan": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestSpecialComplexAVX": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestSpecialComplexAVX.test_array": {
  "lineno": 545,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.complex",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan",
   "numpy.square",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.check_complex_value": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.check_real_value": {
  "lineno": 527,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.tests.test_unicode.AssignValues": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.AssignValues.content_check": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.AssignValues.test_values0D": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.AssignValues.test_valuesMD": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.AssignValues.test_valuesSD": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ByteorderValues": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.ByteorderValues.test_values0D": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ByteorderValues.test_valuesMD": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ByteorderValues.test_valuesSD": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ByteorderValues.test_values_cast": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ByteorderValues.test_values_updowncast": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.repeat",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateValues": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.CreateValues.content_check": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateValues.test_values0D": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateValues.test_valuesMD": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateValues.test_valuesSD": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateZeros": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.CreateZeros.content_check": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateZeros.test_zeros0D": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateZeros.test_zerosMD": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateZeros.test_zerosSD": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_1009_UCS2": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_1009_UCS4": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_1_UCS2": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_1_UCS4": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_2_UCS2": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_2_UCS4": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_1009_UCS2": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_1009_UCS4": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_1_UCS2": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_1_UCS4": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_2_UCS2": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_2_UCS4": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_1009_UCS2": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_1009_UCS4": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_1_UCS2": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_1_UCS4": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_2_UCS2": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_2_UCS4": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateZeros_1": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateZeros_1009": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateZeros_2": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.core.tests.test_unicode.buffer_length": {
  "lineno": 4,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "numpy.core.tests.test_unicode.test_string_cast": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.core.umath": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.core.umath_tests": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "numpy.ctypeslib": {
  "lineno": null,
  "symbols_in_volume": [
   "ctypes",
   "ctypes.c_void_p",
   "numpy.core._internal",
   "numpy.core._internal._getintp_ctype",
   "numpy.deprecate",
   "numpy.intp"
  ],
  "type": "module"
 },
 "numpy.ctypeslib._concrete_ndptr": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ctypeslib._concrete_ndptr._check_retval_": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ctypeslib._concrete_ndptr.contents": {
  "lineno": 213,
  "symbols_in_volume": [
   "ctypes.POINTER",
   "ctypes.c_char",
   "ctypes.cast",
   "numpy.dtype",
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "numpy.ctypeslib._ctype_from_dtype": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.dtype.fields",
   "numpy.dtype.subdtype"
  ],
  "type": "function"
 },
 "numpy.ctypeslib._ctype_from_dtype_scalar": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.dtype.newbyteorder"
  ],
  "type": "function"
 },
 "numpy.ctypeslib._ctype_from_dtype_structured": {
  "lineno": 399,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.Union",
   "ctypes.c_char",
   "ctypes.sizeof",
   "numpy.dtype.fields",
   "numpy.dtype.itemsize",
   "numpy.dtype.names"
  ],
  "type": "function"
 },
 "numpy.ctypeslib._ctype_from_dtype_subarray": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.dtype.subdtype"
  ],
  "type": "function"
 },
 "numpy.ctypeslib._ctype_ndarray": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ctypeslib._dummy": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ctypeslib._flags_fromnum": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.core.multiarray._flagdict"
  ],
  "type": "function"
 },
 "numpy.ctypeslib._get_scalar_type_map": {
  "lineno": 357,
  "symbols_in_volume": [
   "ctypes",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.ctypeslib._ndptr": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ctypeslib._ndptr.from_param": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ctypeslib._num_fromflags": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.core.multiarray._flagdict"
  ],
  "type": "function"
 },
 "numpy.ctypeslib.as_array": {
  "lineno": 503,
  "symbols_in_volume": [
   "ctypes.POINTER",
   "ctypes._Pointer",
   "ctypes.cast",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ctypeslib.as_ctypes": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ctypeslib.as_ctypes_type": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.ctypeslib.load_library": {
  "lineno": 91,
  "symbols_in_volume": [
   "ctypes.__version__",
   "ctypes.cdll",
   "numpy.distutils.misc_util.get_shared_lib_extension",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join",
   "os.path.splitext",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ctypeslib.ndpointer": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.core.multiarray.flagsobj",
   "numpy.dtype",
   "numpy.dtype.names",
   "numpy.dtype.str",
   "numpy.integer"
  ],
  "type": "function"
 },
 "numpy.distutils": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy._pytesttester.PytestTester"
  ],
  "type": "module"
 },
 "numpy.distutils.__config__": {
  "lineno": null,
  "symbols_in_volume": [
   "os.add_dll_directory",
   "os.environ",
   "os.environ.setdefault",
   "os.path.dirname",
   "os.path.isdir",
   "os.path.join",
   "os.pathsep",
   "sys.platform",
   "sys.version_info"
  ],
  "type": "module"
 },
 "numpy.distutils.__config__.get_info": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.__config__.show": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils._shell_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "os.name"
  ],
  "type": "module"
 },
 "numpy.distutils._shell_utils.CommandLineParser": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils._shell_utils.CommandLineParser.join": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils._shell_utils.CommandLineParser.split": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils._shell_utils.PosixParser": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils._shell_utils.PosixParser.join": {
  "lineno": 79,
  "symbols_in_volume": [
   "pipes.quote"
  ],
  "type": "function"
 },
 "numpy.distutils._shell_utils.PosixParser.split": {
  "lineno": 83,
  "symbols_in_volume": [
   "shlex.split"
  ],
  "type": "function"
 },
 "numpy.distutils._shell_utils.WindowsParser": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils._shell_utils.WindowsParser.join": {
  "lineno": 42,
  "symbols_in_volume": [
   "subprocess.list2cmdline"
  ],
  "type": "function"
 },
 "numpy.distutils._shell_utils.WindowsParser.split": {
  "lineno": 47,
  "symbols_in_volume": [
   "ctypes.POINTER",
   "ctypes.byref",
   "ctypes.c_int",
   "ctypes.c_wchar_p",
   "ctypes.windll",
   "ctypes.windll.kernel32.LocalFree",
   "ctypes.windll.shell32.CommandLineToArgvW"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.ccompiler.CCompiler",
   "distutils.ccompiler._default_compilers",
   "distutils.ccompiler.compiler_class",
   "distutils.ccompiler.gen_lib_options",
   "distutils.ccompiler.new_compiler",
   "dummy_threading.Lock",
   "numpy.distutils.log.info",
   "numpy.distutils.misc_util.mingw32",
   "sys.modules.get",
   "sys.platform"
  ],
  "type": "module"
 },
 "numpy.distutils.ccompiler.CCompiler_compile": {
  "lineno": 225,
  "symbols_in_volume": [
   "dummy_threading.Semaphore",
   "numpy.distutils.fcompiler.FCompiler",
   "numpy.distutils.fcompiler.has_f90_header",
   "numpy.distutils.fcompiler.is_f_file",
   "numpy.distutils.log.info",
   "numpy.distutils.misc_util.cyg2win32",
   "numpy.distutils.misc_util.get_num_build_jobs"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_compile.single_compile": {
  "lineno": 301,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_customize": {
  "lineno": 466,
  "symbols_in_volume": [
   "distutils.errors.CompileError",
   "distutils.sysconfig.customize_compiler",
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn",
   "os.name",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_customize_cmd": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.distutils.log.info"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_customize_cmd.allow": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_cxx_compiler": {
  "lineno": 665,
  "symbols_in_volume": [
   "copy.copy",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_find_executables": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_get_version": {
  "lineno": 596,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.distutils.exec_command.filepath_from_subprocess_output",
   "subprocess.CalledProcessError",
   "subprocess.STDOUT",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_get_version.matcher": {
  "lineno": 632,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_object_filenames": {
  "lineno": 178,
  "symbols_in_volume": [
   "distutils.errors.UnknownFileError",
   "os.path.abspath",
   "os.path.basename",
   "os.path.isabs",
   "os.path.join",
   "os.path.normpath",
   "os.path.splitdrive",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_show_customization": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.distutils.log._global_log.threshold",
   "numpy.distutils.log.info"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_spawn": {
  "lineno": 113,
  "symbols_in_volume": [
   "distutils.errors.DistutilsExecError",
   "numpy.distutils.exec_command.forward_bytes_to_stdout",
   "numpy.distutils.log.info",
   "numpy.distutils.misc_util.is_sequence",
   "re.search",
   "subprocess.CalledProcessError",
   "subprocess.STDOUT",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler._compiler_to_string": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.ccompiler._needs_build": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.distutils.misc_util._commandline_dep_string",
   "os.path.exists",
   "os.stat",
   "shlex.split"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.gen_lib_options": {
  "lineno": 773,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.is_sequence"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.new_compiler": {
  "lineno": 726,
  "symbols_in_volume": [
   "distutils.ccompiler.compiler_class",
   "distutils.ccompiler.get_default_compiler",
   "distutils.errors.DistutilsModuleError",
   "distutils.errors.DistutilsPlatformError",
   "numpy.distutils.log.INFO",
   "numpy.distutils.log.debug",
   "numpy.distutils.log.get_threshold",
   "numpy.distutils.log.info",
   "os.name",
   "sys.modules"
  ],
  "type": "function"
 },
 "numpy.distutils.ccompiler.replace_method": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.ccompiler.simple_version_match": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.ccompiler.simple_version_match.matcher": {
  "lineno": 575,
  "symbols_in_volume": [
   "re.match",
   "re.search"
  ],
  "type": "function"
 },
 "numpy.distutils.command": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.autodist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.autodist.check_compiler_gcc4": {
  "lineno": 49,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_gcc_function_attribute": {
  "lineno": 65,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_gcc_function_attribute_with_intrinsics": {
  "lineno": 86,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_gcc_variable_attribute": {
  "lineno": 108,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_inline": {
  "lineno": 8,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_restrict": {
  "lineno": 31,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.bdist_rpm": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "numpy.distutils.command.bdist_rpm.bdist_rpm": {
  "lineno": 8,
  "symbols_in_volume": [
   "distutils.command.bdist_rpm.bdist_rpm"
  ],
  "type": "class"
 },
 "numpy.distutils.command.bdist_rpm.bdist_rpm._make_spec_file": {
  "lineno": 10,
  "symbols_in_volume": [
   "distutils.command.bdist_rpm.bdist_rpm._make_spec_file",
   "os.path.basename",
   "sys.argv"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.build.build": {
  "lineno": 7,
  "symbols_in_volume": [
   "distutils.command.build.build",
   "distutils.command.build.build.has_ext_modules",
   "distutils.command.build.build.help_options",
   "distutils.command.build.build.sub_commands",
   "distutils.command.build.build.user_options",
   "numpy.distutils.command.config_compiler.show_fortran_compilers"
  ],
  "type": "class"
 },
 "numpy.distutils.command.build.build.finalize_options": {
  "lineno": 31,
  "symbols_in_volume": [
   "distutils.command.build.build.finalize_options",
   "distutils.util.get_platform",
   "os.path.join",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build.build.initialize_options": {
  "lineno": 26,
  "symbols_in_volume": [
   "distutils.command.build.build.initialize_options"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build.build.run": {
  "lineno": 39,
  "symbols_in_volume": [
   "distutils.command.build.build.run"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_clib": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.command.build_clib.build_clib.user_options"
  ],
  "type": "module"
 },
 "numpy.distutils.command.build_clib.build_clib": {
  "lineno": 25,
  "symbols_in_volume": [
   "distutils.command.build_clib.build_clib",
   "distutils.command.build_clib.build_clib.boolean_options",
   "distutils.command.build_clib.build_clib.user_options"
  ],
  "type": "class"
 },
 "numpy.distutils.command.build_clib.build_clib.build_a_library": {
  "lineno": 146,
  "symbols_in_volume": [
   "distutils.dep_util.newer_group",
   "distutils.errors.DistutilsError",
   "distutils.errors.DistutilsFileError",
   "distutils.errors.DistutilsSetupError",
   "glob.glob",
   "numpy.distutils.fcompiler.new_fcompiler",
   "numpy.distutils.log.debug",
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn",
   "numpy.distutils.misc_util.filter_sources",
   "numpy.distutils.misc_util.get_numpy_include_dirs",
   "numpy.distutils.misc_util.is_sequence",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.build_libraries": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.finalize_options": {
  "lineno": 48,
  "symbols_in_volume": [
   "distutils.command.build_clib.build_clib.finalize_options"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.get_source_files": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.get_lib_source_files"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.have_cxx_sources": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.has_cxx_sources"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.have_f_sources": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.has_f_sources"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.initialize_options": {
  "lineno": 41,
  "symbols_in_volume": [
   "distutils.command.build_clib.build_clib.initialize_options"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.run": {
  "lineno": 72,
  "symbols_in_volume": [
   "distutils.ccompiler.new_compiler",
   "numpy.distutils.fcompiler.new_fcompiler",
   "os.path.join",
   "shutil.copy"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_ext": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.build_ext.build_ext": {
  "lineno": 25,
  "symbols_in_volume": [
   "distutils.command.build_ext.build_ext",
   "distutils.command.build_ext.build_ext.boolean_options",
   "distutils.command.build_ext.build_ext.help_options",
   "distutils.command.build_ext.build_ext.user_options",
   "numpy.distutils.command.config_compiler.show_fortran_compilers"
  ],
  "type": "class"
 },
 "numpy.distutils.command.build_ext.build_ext._add_dummy_mingwex_sym": {
  "lineno": 490,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext._libs_with_msvc_and_fortran": {
  "lineno": 531,
  "symbols_in_volume": [
   "distutils.file_util.copy_file",
   "numpy.distutils.exec_command.filepath_from_subprocess_output",
   "numpy.distutils.log.warn",
   "numpy.distutils.system_info.combine_paths",
   "os.path.isfile",
   "os.path.join",
   "subprocess.CalledProcessError",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext._process_unlinkable_fobjects": {
  "lineno": 499,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.build_extension": {
  "lineno": 299,
  "symbols_in_volume": [
   "distutils.dep_util.newer_group",
   "distutils.errors.DistutilsError",
   "distutils.errors.DistutilsFileError",
   "distutils.errors.DistutilsSetupError",
   "glob.glob",
   "numpy.distutils.log.debug",
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn",
   "numpy.distutils.misc_util.filter_sources",
   "numpy.distutils.misc_util.get_numpy_include_dirs",
   "numpy.distutils.misc_util.is_sequence",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.finalize_options": {
  "lineno": 51,
  "symbols_in_volume": [
   "distutils.command.build_ext.build_ext.finalize_options",
   "os.pathsep"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.get_outputs": {
  "lineno": 599,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.get_source_files": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.get_ext_source_files"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.initialize_options": {
  "lineno": 45,
  "symbols_in_volume": [
   "distutils.command.build_ext.build_ext.initialize_options"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.run": {
  "lineno": 80,
  "symbols_in_volume": [
   "distutils.ccompiler.new_compiler",
   "distutils.file_util.copy_file",
   "numpy.distutils.fcompiler.new_fcompiler",
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn",
   "numpy.distutils.misc_util.has_cxx_sources",
   "numpy.distutils.misc_util.has_f_sources",
   "os.listdir",
   "os.makedirs",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.swig_sources": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.build_py": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.build_py.build_py": {
  "lineno": 4,
  "symbols_in_volume": [
   "distutils.command.build_py.build_py"
  ],
  "type": "class"
 },
 "numpy.distutils.command.build_py.build_py.find_modules": {
  "lineno": 21,
  "symbols_in_volume": [
   "distutils.command.build_py.build_py.find_modules",
   "numpy.distutils.misc_util.is_string"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_py.build_py.find_package_modules": {
  "lineno": 12,
  "symbols_in_volume": [
   "distutils.command.build_py.build_py.find_package_modules"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_py.build_py.run": {
  "lineno": 6,
  "symbols_in_volume": [
   "distutils.command.build_py.build_py.run"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_scripts": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.build_scripts.build_scripts": {
  "lineno": 8,
  "symbols_in_volume": [
   "distutils.command.build_scripts.build_scripts"
  ],
  "type": "class"
 },
 "numpy.distutils.command.build_scripts.build_scripts.generate_scripts": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.distutils.log.info",
   "numpy.distutils.misc_util.is_string"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.build_scripts.get_source_files": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.get_script_files"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.build_scripts.run": {
  "lineno": 35,
  "symbols_in_volume": [
   "distutils.command.build_scripts.build_scripts.run"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src": {
  "lineno": null,
  "symbols_in_volume": [
   "re.I",
   "re.compile"
  ],
  "type": "module"
 },
 "numpy.distutils.command.build_src._find_swig_target": {
  "lineno": 747,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src": {
  "lineno": 38,
  "symbols_in_volume": [
   "distutils.command.build_ext.build_ext"
  ],
  "type": "class"
 },
 "numpy.distutils.command.build_src.build_src._build_npy_pkg_config": {
  "lineno": 202,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.basename",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_data_files_sources": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.distutils.log.info",
   "numpy.distutils.misc_util.get_data_files",
   "os.path.join",
   "os.sep"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_extension_sources": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.distutils.log.info",
   "os.path.basename",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_library_sources": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.distutils.log.info"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_npy_pkg_config": {
  "lineno": 224,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.distutils.log.info",
   "numpy.distutils.misc_util.get_cmd",
   "os.path.abspath",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_py_modules_sources": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.distutils.log.info",
   "numpy.distutils.misc_util.is_sequence",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_sources": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.f2py_sources": {
  "lineno": 466,
  "symbols_in_volume": [
   "distutils.dep_util.newer",
   "distutils.dep_util.newer_group",
   "distutils.errors.DistutilsError",
   "distutils.errors.DistutilsSetupError",
   "numpy.distutils.log.debug",
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn",
   "numpy.distutils.misc_util.appendpath",
   "numpy.distutils.misc_util.fortran_ext_match",
   "numpy.distutils.misc_util.is_sequence",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.filter_files": {
  "lineno": 396,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.filter_h_files": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.filter_py_files": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.finalize_options": {
  "lineno": 82,
  "symbols_in_volume": [
   "distutils.command.build_ext",
   "distutils.command.build_ext.inplace",
   "distutils.command.build_ext.swig_cpp",
   "distutils.util.get_platform",
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn",
   "os.path.join",
   "shlex.split",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.generate_a_pyrex_source": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.generate_sources": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.distutils.log.INFO",
   "numpy.distutils.log.WARN",
   "numpy.distutils.log.info",
   "numpy.distutils.log.set_threshold",
   "numpy.distutils.misc_util.is_sequence",
   "numpy.distutils.misc_util.is_string",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.initialize_options": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.pyrex_sources": {
  "lineno": 443,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.run": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.distutils.log.info"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.swig_sources": {
  "lineno": 604,
  "symbols_in_volume": [
   "distutils.dep_util.newer_group",
   "distutils.errors.DistutilsSetupError",
   "numpy.distutils.log.debug",
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn",
   "numpy.distutils.misc_util.appendpath",
   "os.path.basename",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.template_sources": {
  "lineno": 407,
  "symbols_in_volume": [
   "distutils.dep_util.newer_group",
   "numpy.distutils.conv_template.process_file",
   "numpy.distutils.from_template.process_file",
   "numpy.distutils.log.info",
   "numpy.distutils.misc_util.appendpath",
   "numpy.distutils.misc_util.is_sequence",
   "os.path.basename",
   "os.path.dirname",
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.command.build_src.get_f2py_modulename": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.build_src.get_swig_modulename": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.build_src.get_swig_target": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.build_src.subst_vars": {
  "lineno": 25,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.command.config.LANG_EXT"
  ],
  "type": "module"
 },
 "numpy.distutils.command.config.GrabStdout": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.command.config.GrabStdout.__init__": {
  "lineno": 497,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.GrabStdout.flush": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.config.GrabStdout.restore": {
  "lineno": 509,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.GrabStdout.write": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.config.config": {
  "lineno": 30,
  "symbols_in_volume": [
   "distutils.command.config.config",
   "distutils.command.config.config.user_options"
  ],
  "type": "class"
 },
 "numpy.distutils.command.config.config._check_compiler": {
  "lineno": 39,
  "symbols_in_volume": [
   "distutils.command.config.config._check_compiler",
   "distutils.errors.DistutilsPlatformError",
   "distutils.msvc9compiler.get_build_version",
   "numpy.distutils.fcompiler.FCompiler",
   "numpy.distutils.fcompiler.new_fcompiler",
   "sys.platform",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config._compile": {
  "lineno": 103,
  "symbols_in_volume": [
   "distutils.command.config.config._compile"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config._link": {
  "lineno": 111,
  "symbols_in_volume": [
   "distutils.command.config.config._link",
   "distutils.file_util.copy_file",
   "distutils.log.warn",
   "numpy.distutils.exec_command.filepath_from_subprocess_output",
   "numpy.distutils.mingw32ccompiler.generate_manifest",
   "os.path.isfile",
   "os.path.join",
   "subprocess.CalledProcessError",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config._wrap_method": {
  "lineno": 88,
  "symbols_in_volume": [
   "distutils.ccompiler.CompileError",
   "distutils.errors.DistutilsExecError"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_compiler_gcc4": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.distutils.command.autodist.check_compiler_gcc4"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_decl": {
  "lineno": 171,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_func": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_funcs_once": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_gcc_function_attribute": {
  "lineno": 423,
  "symbols_in_volume": [
   "numpy.distutils.command.autodist.check_gcc_function_attribute"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_gcc_function_attribute_with_intrinsics": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.distutils.command.autodist.check_gcc_function_attribute_with_intrinsics"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_gcc_variable_attribute": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.distutils.command.autodist.check_gcc_variable_attribute"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_header": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_inline": {
  "lineno": 409,
  "symbols_in_volume": [
   "numpy.distutils.command.autodist.check_inline"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_macro_true": {
  "lineno": 186,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_restrict": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.distutils.command.autodist.check_restrict"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_type": {
  "lineno": 202,
  "symbols_in_volume": [
   "distutils.errors.CompileError",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_type_size": {
  "lineno": 231,
  "symbols_in_volume": [
   "distutils.ccompiler.CompileError",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.get_output": {
  "lineno": 434,
  "symbols_in_volume": [
   "distutils.ccompiler.CompileError",
   "distutils.ccompiler.LinkError",
   "distutils.log.error",
   "distutils.log.info",
   "numpy.distutils.exec_command.filepath_from_subprocess_output",
   "os",
   "os.WEXITSTATUS",
   "os.WIFSIGNALED",
   "os.WTERMSIG",
   "os.path.join",
   "signal.SIGINT",
   "subprocess.CalledProcessError",
   "subprocess.check_output",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config.config.initialize_options": {
  "lineno": 35,
  "symbols_in_volume": [
   "distutils.command.config.config.initialize_options"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config_compiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.config_compiler.config_cc": {
  "lineno": 86,
  "symbols_in_volume": [
   "distutils.core.Command"
  ],
  "type": "class"
 },
 "numpy.distutils.command.config_compiler.config_cc.finalize_options": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_cc.initialize_options": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_cc.run": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc": {
  "lineno": 18,
  "symbols_in_volume": [
   "distutils.core.Command"
  ],
  "type": "class"
 },
 "numpy.distutils.command.config_compiler.config_fc.finalize_options": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc.initialize_options": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc.run": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.show_fortran_compilers": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.show_fcompilers"
  ],
  "type": "function"
 },
 "numpy.distutils.command.develop": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.develop.develop": {
  "lineno": 8,
  "symbols_in_volume": [
   "setuptools.command.develop.develop",
   "setuptools.command.develop.develop.__doc__"
  ],
  "type": "class"
 },
 "numpy.distutils.command.develop.develop.install_for_development": {
  "lineno": 10,
  "symbols_in_volume": [
   "setuptools.command.develop.develop.install_for_development"
  ],
  "type": "function"
 },
 "numpy.distutils.command.egg_info": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.egg_info.egg_info": {
  "lineno": 5,
  "symbols_in_volume": [
   "setuptools.command.egg_info.egg_info"
  ],
  "type": "class"
 },
 "numpy.distutils.command.egg_info.egg_info.run": {
  "lineno": 6,
  "symbols_in_volume": [
   "setuptools.command.egg_info.egg_info.run",
   "sys.argv",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.command.install": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.command.install.install",
   "sys.modules"
  ],
  "type": "module"
 },
 "numpy.distutils.command.install.install": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.command.install.install.finalize_options": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.install.install.run": {
  "lineno": 56,
  "symbols_in_volume": [
   "distutils.file_util.write_file"
  ],
  "type": "function"
 },
 "numpy.distutils.command.install.install.setuptools_run": {
  "lineno": 24,
  "symbols_in_volume": [
   "distutils.command.install.install.run",
   "sys._getframe"
  ],
  "type": "function"
 },
 "numpy.distutils.command.install_clib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.install_clib.install_clib": {
  "lineno": 6,
  "symbols_in_volume": [
   "distutils.core.Command"
  ],
  "type": "class"
 },
 "numpy.distutils.command.install_clib.install_clib.finalize_options": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.get_outputs": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.initialize_options": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.run": {
  "lineno": 18,
  "symbols_in_volume": [
   "distutils.ccompiler.new_compiler",
   "numpy.distutils.misc_util.get_cmd",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.command.install_data": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "numpy.distutils.command.install_data.install_data": {
  "lineno": 9,
  "symbols_in_volume": [
   "distutils.command.install_data.install_data"
  ],
  "type": "class"
 },
 "numpy.distutils.command.install_data.install_data.finalize_options": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.command.install_data.install_data.run": {
  "lineno": 11,
  "symbols_in_volume": [
   "distutils.command.install_data.install_data.run"
  ],
  "type": "function"
 },
 "numpy.distutils.command.install_headers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.command.install_headers.install_headers": {
  "lineno": 4,
  "symbols_in_volume": [
   "distutils.command.install_headers.install_headers"
  ],
  "type": "class"
 },
 "numpy.distutils.command.install_headers.install_headers.run": {
  "lineno": 6,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.command.sdist": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "numpy.distutils.command.sdist.sdist": {
  "lineno": 9,
  "symbols_in_volume": [
   "distutils.command.sdist.sdist"
  ],
  "type": "class"
 },
 "numpy.distutils.command.sdist.sdist.add_defaults": {
  "lineno": 11,
  "symbols_in_volume": [
   "distutils.command.sdist.sdist.add_defaults",
   "numpy.distutils.misc_util.get_data_files"
  ],
  "type": "function"
 },
 "numpy.distutils.command.test_na_writable_attributes_deletion": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.conv_template": {
  "lineno": null,
  "symbols_in_volume": [
   "re.I",
   "re.compile"
  ],
  "type": "module"
 },
 "numpy.distutils.conv_template.main": {
  "lineno": 309,
  "symbols_in_volume": [
   "os.path.splitext",
   "sys.argv",
   "sys.stdin",
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.distutils.conv_template.paren_repl": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_loop_header": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_string": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_string.replace": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_structure": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_values": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.conv_template.process_file": {
  "lineno": 282,
  "symbols_in_volume": [
   "os.path.normcase"
  ],
  "type": "function"
 },
 "numpy.distutils.conv_template.process_str": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.conv_template.resolve_includes": {
  "lineno": 263,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.isabs",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.conv_template.unique_key": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.core": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.command.bdist_rpm.bdist_rpm",
   "numpy.distutils.command.build.build",
   "numpy.distutils.command.build_clib.build_clib",
   "numpy.distutils.command.build_ext.build_ext",
   "numpy.distutils.command.build_py.build_py",
   "numpy.distutils.command.build_scripts.build_scripts",
   "numpy.distutils.command.build_src.build_src",
   "numpy.distutils.command.config.config",
   "numpy.distutils.command.config_compiler.config_cc",
   "numpy.distutils.command.config_compiler.config_fc",
   "numpy.distutils.command.develop.develop",
   "numpy.distutils.command.egg_info.egg_info",
   "numpy.distutils.command.install.install",
   "numpy.distutils.command.install_clib.install_clib",
   "numpy.distutils.command.install_data.install_data",
   "numpy.distutils.command.install_headers.install_headers",
   "numpy.distutils.command.sdist.sdist",
   "setuptools.command.bdist_egg.bdist_egg",
   "setuptools.command.easy_install.easy_install",
   "sys.modules"
  ],
  "type": "module"
 },
 "numpy.distutils.core._check_append_ext_library": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.is_sequence",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.core._check_append_library": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.is_sequence",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.core._command_line_ok": {
  "lineno": 72,
  "symbols_in_volume": [
   "distutils.core.Distribution.display_option_names",
   "distutils.core.Distribution.display_options",
   "sys.argv"
  ],
  "type": "function"
 },
 "numpy.distutils.core._dict_append": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.is_string"
  ],
  "type": "function"
 },
 "numpy.distutils.core.get_distribution": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.distutils.numpy_distribution.NumpyDistribution"
  ],
  "type": "function"
 },
 "numpy.distutils.core.setup": {
  "lineno": 107,
  "symbols_in_volume": [
   "distutils.core.setup",
   "numpy.distutils.command.config",
   "numpy.distutils.command.config.todict",
   "numpy.distutils.misc_util.is_sequence",
   "numpy.distutils.misc_util.is_string",
   "numpy.distutils.numpy_distribution.NumpyDistribution"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.platform",
   "sys.platform.startswith"
  ],
  "type": "module"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase.__get_nbits": {
  "lineno": 88,
  "symbols_in_volume": [
   "platform.architecture",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase.__getattr__": {
  "lineno": 75,
  "symbols_in_volume": [
   "types.MethodType"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._getNCPUs": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._is_32bit": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._is_64bit": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._try_call": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo.__init__": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo.__machine": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._getNCPUs": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_Power_Macintosh": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_i386": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc403": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc505": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc601": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc602": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc603": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc603e": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc604": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc604e": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc620": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc630": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc740": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc7400": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc7450": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc750": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc801": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc821": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc823": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc860": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._not_impl": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.__cputype": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.__init__": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.__machine": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._getNCPUs": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP19": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP20": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP21": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP22": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP22_4k": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP22_5k": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP24": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP25": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP26": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP27": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP28": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP30": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP32": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP32_10k": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP32_5k": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r10000": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r12000": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r2000": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r3000": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r3900": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4000": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4100": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4300": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4400": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4600": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4650": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r5000": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r6000": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r8000": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_rorion": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_singleCPU": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._not_impl": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.get_ip": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo.__init__": {
  "lineno": 103,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._getNCPUs": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_3dnow": {
  "lineno": 288,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_3dnowext": {
  "lineno": 291,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_f00f_bug": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_fdiv_bug": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_mmx": {
  "lineno": 273,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_sse": {
  "lineno": 276,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_sse2": {
  "lineno": 279,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_sse3": {
  "lineno": 282,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_ssse3": {
  "lineno": 285,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AMD": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AMD64": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Alpha": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Athlon64": {
  "lineno": 152,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonHX": {
  "lineno": 156,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK6": {
  "lineno": 139,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK6_2": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK6_3": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK7": {
  "lineno": 142,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonMP": {
  "lineno": 145,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Celeron": {
  "lineno": 202,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Core2": {
  "lineno": 244,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_EV4": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_EV5": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_EV56": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Hammer": {
  "lineno": 164,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Intel": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Itanium": {
  "lineno": 249,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Nocona": {
  "lineno": 237,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Opteron": {
  "lineno": 160,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PCA56": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Pentium": {
  "lineno": 206,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumII": {
  "lineno": 210,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumIII": {
  "lineno": 222,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumIV": {
  "lineno": 226,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumM": {
  "lineno": 230,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumMMX": {
  "lineno": 218,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumPro": {
  "lineno": 214,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Prescott": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_XEON": {
  "lineno": 253,
  "symbols_in_volume": [
   "re.IGNORECASE",
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_i486": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_i586": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_i686": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_singleCPU": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._not_impl": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo.__init__": {
  "lineno": 402,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._getNCPUs": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_SUNW": {
  "lineno": 434,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_cpusparcv7": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_cpusparcv8": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_cpusparcv9": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_i386": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sparc": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sparcstation5": {
  "lineno": 436,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sparcv9": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sun4": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sunfire": {
  "lineno": 460,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra": {
  "lineno": 462,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra1": {
  "lineno": 438,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra2": {
  "lineno": 442,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra250": {
  "lineno": 440,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra30": {
  "lineno": 444,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra4": {
  "lineno": 446,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra5": {
  "lineno": 450,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra5_10": {
  "lineno": 448,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra60": {
  "lineno": 452,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra80": {
  "lineno": 454,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultraenterprice": {
  "lineno": 456,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultraenterprice10k": {
  "lineno": 458,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._not_impl": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo.__init__": {
  "lineno": 480,
  "symbols_in_volume": [
   "re.IGNORECASE",
   "re.compile",
   "winreg.EnumKey",
   "winreg.EnumValue",
   "winreg.HKEY_LOCAL_MACHINE",
   "winreg.OpenKey",
   "winreg.error"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._getNCPUs": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_3dnow": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_3dnowext": {
  "lineno": 647,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_mmx": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_sse": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_sse2": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMD": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMD64": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK5": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK6": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK6_2": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK6_3": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK7": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Am486": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Am5x86": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Core2": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Intel": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Pentium": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumII": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumIII": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumIV": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumM": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumMMX": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumPro": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i386": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i486": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i586": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i686": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_singleCPU": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._not_impl": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.command_by_line": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.command_info": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.getoutput": {
  "lineno": 27,
  "symbols_in_volume": [
   "os.WEXITSTATUS",
   "os.WIFEXITED",
   "subprocess.getstatusoutput",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.cpuinfo.key_value_from_command": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.customized_ccompiler": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.customized_fcompiler": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.new_fcompiler"
  ],
  "type": "function"
 },
 "numpy.distutils.exec_command": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.exec_command._exec_command": {
  "lineno": 253,
  "symbols_in_volume": [
   "locale.getpreferredencoding",
   "numpy.distutils.misc_util.is_sequence",
   "os.environ.get",
   "os.name",
   "subprocess.PIPE",
   "subprocess.Popen",
   "subprocess.STDOUT"
  ],
  "type": "function"
 },
 "numpy.distutils.exec_command._preserve_environment": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.distutils.log.debug",
   "os.environ.get"
  ],
  "type": "function"
 },
 "numpy.distutils.exec_command._quote_arg": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.exec_command._update_environment": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.distutils.log.debug",
   "os.environ"
  ],
  "type": "function"
 },
 "numpy.distutils.exec_command.exec_command": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.distutils.log.debug",
   "os.chdir",
   "os.getcwd",
   "os.name",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isfile",
   "sys.argv",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.exec_command.filepath_from_subprocess_output": {
  "lineno": 63,
  "symbols_in_volume": [
   "locale.getpreferredencoding"
  ],
  "type": "function"
 },
 "numpy.distutils.exec_command.find_executable": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.distutils.log.debug",
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn",
   "os.X_OK",
   "os.access",
   "os.defpath",
   "os.environ.get",
   "os.name",
   "os.path.abspath",
   "os.path.isabs",
   "os.path.isfile",
   "os.path.islink",
   "os.path.join",
   "os.path.realpath",
   "os.path.splitext",
   "os.pathsep"
  ],
  "type": "function"
 },
 "numpy.distutils.exec_command.forward_bytes_to_stdout": {
  "lineno": 80,
  "symbols_in_volume": [
   "sys.stdout",
   "sys.stdout.buffer.write",
   "sys.stdout.encoding",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "numpy.distutils.exec_command.get_pythonexe": {
  "lineno": 107,
  "symbols_in_volume": [
   "os.name",
   "os.path.isfile",
   "os.path.join",
   "os.path.split",
   "sys.executable"
  ],
  "type": "function"
 },
 "numpy.distutils.exec_command.temp_file_name": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.make_temp_file",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.extension": {
  "lineno": null,
  "symbols_in_volume": [
   "re.I",
   "re.compile"
  ],
  "type": "module"
 },
 "numpy.distutils.extension.Extension": {
  "lineno": 17,
  "symbols_in_volume": [
   "distutils.extension.Extension"
  ],
  "type": "class"
 },
 "numpy.distutils.extension.Extension.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "distutils.extension.Extension.__init__",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.extension.Extension.has_cxx_sources": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.extension.Extension.has_f2py_sources": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler": {
  "lineno": null,
  "symbols_in_volume": [
   "re.I",
   "re.compile"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.CompilerNotFound": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.fcompiler.FCompiler": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.distutils.ccompiler.CCompiler",
   "numpy.distutils.misc_util.get_shared_lib_extension"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.FCompiler.__copy__": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.__init__": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.distutils.ccompiler.CCompiler.__init__"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler._command_property": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler._command_property.fget": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler._compile": {
  "lineno": 567,
  "symbols_in_volume": [
   "distutils.errors.CompileError",
   "distutils.errors.DistutilsExecError",
   "numpy.distutils.log.info",
   "os.path.basename"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler._environment_hook": {
  "lineno": 687,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.is_string"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler._get_command_flags": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.can_ccompiler_link": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.copy": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.customize": {
  "lineno": 436,
  "symbols_in_volume": [
   "distutils.sysconfig.get_python_lib",
   "numpy.distutils._shell_utils.NativeParser.split",
   "numpy.distutils.log.info",
   "os.path.join",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.customize.get_flags": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.dump_properties": {
  "lineno": 547,
  "symbols_in_volume": [
   "distutils.fancy_getopt.FancyGetopt"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.find_executables": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.distutils.log.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.find_executables.cached_find_executable": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.find_executable"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.find_executables.set_exe": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.find_executables.verify_command_form": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_ar": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_arch": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_debug": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_f77": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_f90": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_fix": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_free": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_linker_exe": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_linker_so": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_opt": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_libraries": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_library_dirs": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_version": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.distutils.ccompiler.CCompiler.get_version"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.library_dir_option": {
  "lineno": 637,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.library_option": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.link": {
  "lineno": 640,
  "symbols_in_volume": [
   "distutils.errors.DistutilsExecError",
   "distutils.errors.LinkError",
   "numpy.distutils.ccompiler.CCompiler.EXECUTABLE",
   "numpy.distutils.ccompiler.gen_lib_options",
   "numpy.distutils.log.debug",
   "numpy.distutils.misc_util.is_string",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.module_options": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.set_command": {
  "lineno": 267,
  "symbols_in_volume": [
   "distutils.util.split_quoted",
   "numpy.distutils.misc_util.is_string"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.set_commands": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.set_executable": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.update_executables": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.wrap_unlinkable_objects": {
  "lineno": 716,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler._find_existing_fcompiler": {
  "lineno": 791,
  "symbols_in_volume": [
   "distutils.errors.DistutilsModuleError",
   "numpy.distutils.core.get_distribution",
   "numpy.distutils.log.debug",
   "numpy.distutils.log.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler",
   "os.name"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler.get_flags",
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_f77": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler.get_flags_f77",
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_f90": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler.get_flags_f90"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_fix": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler.get_flags_fix"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_linker_so": {
  "lineno": 52,
  "symbols_in_volume": [
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_opt": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_libraries": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler.get_libraries",
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_library_dirs": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.distutils.cpuinfo.cpu.is_64bit",
   "numpy.distutils.fcompiler.FCompiler.get_library_dirs",
   "os.environ.get",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.library_dir_option": {
  "lineno": 65,
  "symbols_in_volume": [
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.library_option": {
  "lineno": 70,
  "symbols_in_volume": [
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.update_executables": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.dummy_fortran_file",
   "numpy.distutils.misc_util.cyg2win32"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.available_fcompilers_for_platform": {
  "lineno": 828,
  "symbols_in_volume": [
   "os.name",
   "re.match",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler",
   "os.name",
   "sys.platform"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler",
   "sys.platform"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_arch": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_debug": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_linker_so": {
  "lineno": 49,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_opt": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler": {
  "lineno": 54,
  "symbols_in_volume": [
   "distutils.errors.DistutilsPlatformError",
   "numpy.distutils.fcompiler.FCompiler",
   "numpy.distutils.msvccompiler.MSVCCompiler",
   "sys.platform"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags_arch": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags_debug": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags_opt": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.dummy_fortran_file": {
  "lineno": 960,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.make_temp_file"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.environment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.fcompiler.environment.EnvironmentConfig": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.fcompiler.environment.EnvironmentConfig.__getattr__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.environment.EnvironmentConfig.__init__": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.environment.EnvironmentConfig._get_var": {
  "lineno": 49,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.environment.EnvironmentConfig.clone": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.environment.EnvironmentConfig.dump_variable": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.environment.EnvironmentConfig.dump_variables": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.environment.EnvironmentConfig.get": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.environment.EnvironmentConfig.use_distribution": {
  "lineno": 81,
  "symbols_in_volume": [
   "distutils.dist.Distribution"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.flaglist": {
  "lineno": 45,
  "symbols_in_volume": [
   "distutils.util.split_quoted",
   "numpy.distutils.misc_util.is_string"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.g95": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler.get_flags": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler.get_flags_debug": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler.get_flags_opt": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.get_default_fcompiler": {
  "lineno": 843,
  "symbols_in_volume": [
   "numpy.distutils.log.info"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.get_f77flags": {
  "lineno": 1004,
  "symbols_in_volume": [
   "distutils.util.split_quoted",
   "numpy.compat.open_latin1"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler",
   "re.compile"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler": {
  "lineno": 272,
  "symbols_in_volume": [
   "platform.architecture",
   "sys.platform"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler._hash_files": {
  "lineno": 401,
  "symbols_in_volume": [
   "base64.b32encode",
   "hashlib.sha1"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler._link_wrapper_lib": {
  "lineno": 414,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.isfile",
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler._universal_flags": {
  "lineno": 322,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.can_ccompiler_link": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_flags": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_flags_linker_so": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_libraries": {
  "lineno": 371,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_library_dirs": {
  "lineno": 352,
  "symbols_in_volume": [
   "os.pardir",
   "os.path.exists",
   "os.path.join",
   "os.path.normpath",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_target": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.filepath_from_subprocess_output",
   "subprocess.CalledProcessError",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.version_match": {
  "lineno": 277,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.wrap_unlinkable_objects": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler",
   "os.name",
   "sys.platform"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler._c_arch_flags": {
  "lineno": 239,
  "symbols_in_volume": [
   "distutils.sysconfig.get_config_vars",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_arch": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_debug": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_linker_so": {
  "lineno": 115,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "sys.platform",
   "sys.platform.startswith",
   "sysconfig.get_config_var",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_opt": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_libgcc_dir": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.filepath_from_subprocess_output",
   "os.path.dirname",
   "subprocess.CalledProcessError",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_libgfortran_dir": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.filepath_from_subprocess_output",
   "os.path.dirname",
   "subprocess.CalledProcessError",
   "subprocess.check_output",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_libraries": {
  "lineno": 204,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_library_dirs": {
  "lineno": 182,
  "symbols_in_volume": [
   "os.pardir",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "os.path.normpath",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.gnu_version_match": {
  "lineno": 38,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.runtime_library_dir_option": {
  "lineno": 255,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.version_match": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu._can_target": {
  "lineno": 526,
  "symbols_in_volume": [
   "os.close",
   "os.path.dirname",
   "os.path.exists",
   "os.path.splitext",
   "os.remove",
   "subprocess.PIPE",
   "subprocess.Popen",
   "subprocess.STDOUT",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.is_win64": {
  "lineno": 22,
  "symbols_in_volume": [
   "platform.architecture",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.has_f90_header": {
  "lineno": 997,
  "symbols_in_volume": [
   "numpy.compat.open_latin1"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_flags": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_flags_opt": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_libraries": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_library_dirs": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_version": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler.get_version"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags_debug": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags_linker_so": {
  "lineno": 65,
  "symbols_in_volume": [
   "distutils.log.info",
   "numpy.distutils.misc_util.make_temp_file",
   "re.compile",
   "sys.platform",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags_opt": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_version": {
  "lineno": 29,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.distutils.exec_command.find_executable",
   "numpy.distutils.fcompiler.FCompiler.get_version",
   "os.listdir",
   "os.path.exists",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join",
   "re.search",
   "subprocess.CalledProcessError",
   "subprocess.check_output",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.intel.BaseIntelFCompiler": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.BaseIntelFCompiler.runtime_library_dir_option": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.BaseIntelFCompiler.update_executables": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.dummy_fortran_file"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler.get_flags": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler.get_flags_arch": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler.get_flags_opt": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64VisualFCompiler": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.distutils.ccompiler.simple_version_match"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64VisualFCompiler.get_flags_arch": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_arch": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_free": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_linker_so": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler.get_flags_linker_so",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_opt": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelItaniumFCompiler": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelItaniumVisualFCompiler": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_arch": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_debug": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_free": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_opt": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.runtime_library_dir_option": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.update_executables": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.dummy_fortran_file"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.intel_version_match": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.distutils.ccompiler.simple_version_match"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.is_free_format": {
  "lineno": 973,
  "symbols_in_volume": [
   "numpy.compat.open_latin1"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.is_sequence_of_strings": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.all_strings",
   "numpy.distutils.misc_util.is_sequence"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_flags_debug": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_flags_opt": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_libraries": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_library_dirs": {
  "lineno": 30,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.load_all_fcompiler_classes": {
  "lineno": 763,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.basename",
   "os.path.dirname",
   "os.path.join",
   "os.path.splitext",
   "sys.modules"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_arch": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.distutils.cpuinfo.cpu"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_arch_f77": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.distutils.cpuinfo.cpu.is_r10000",
   "numpy.distutils.cpuinfo.cpu.is_r12000",
   "numpy.distutils.cpuinfo.cpu.is_r4000",
   "numpy.distutils.cpuinfo.cpu.is_r5000",
   "numpy.distutils.cpuinfo.cpu.is_r8000"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_arch_f90": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_opt": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.nag.BaseNAGFCompiler": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.nag.BaseNAGFCompiler.get_flags_arch": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.BaseNAGFCompiler.get_flags_linker_so": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.BaseNAGFCompiler.get_flags_opt": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.BaseNAGFCompiler.version_match": {
  "lineno": 10,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler.get_flags_arch": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler.get_flags_debug": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler.get_flags_linker_so": {
  "lineno": 39,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.NAGFORCompiler": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.fcompiler.nag.NAGFORCompiler.get_flags_debug": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.new_fcompiler": {
  "lineno": 861,
  "symbols_in_volume": [
   "numpy.distutils.log.warn",
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.none": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.none.NoneFCompiler": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.none.NoneFCompiler.find_executables": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pathf95": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.pathf95.PathScaleFCompiler": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.pathf95.PathScaleFCompiler.get_flags_debug": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pathf95.PathScaleFCompiler.get_flags_opt": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler",
   "sys.argv"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler",
   "sys.platform"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags_debug": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags_linker_so": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags_opt": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.runtime_library_dir_option": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_flags": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_flags_arch": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_flags_debug": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_flags_free": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_flags_opt": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_libraries": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.FCompiler.get_libraries"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_library_dirs": {
  "lineno": 93,
  "symbols_in_volume": [
   "functools.lru_cache",
   "numpy.distutils.fcompiler.FCompiler.get_library_dirs",
   "os.path.dirname",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.runtime_library_dir_option": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.show_fcompilers": {
  "lineno": 900,
  "symbols_in_volume": [
   "distutils.dist.Distribution",
   "distutils.errors.DistutilsModuleError",
   "distutils.fancy_getopt.FancyGetopt",
   "numpy.distutils.command.config_compiler.config_fc",
   "numpy.distutils.log.debug",
   "numpy.distutils.log.set_verbosity",
   "os.path.basename",
   "sys.argv"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.str2bool": {
  "lineno": 51,
  "symbols_in_volume": [
   "distutils.util.strtobool",
   "numpy.distutils.misc_util.is_string"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.distutils.ccompiler.simple_version_match",
   "numpy.distutils.fcompiler.FCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_arch": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_flags_f77": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_libraries": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_opt": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.runtime_library_dir_option": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.vast": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.set_verbosity",
   "numpy.distutils.customized_fcompiler"
  ],
  "type": "module"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.gnu.GnuFCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler.find_executables": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler.get_flags_arch": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.distutils.fcompiler.gnu.GnuFCompiler",
   "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_arch"
  ],
  "type": "function"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler.get_version_cmd": {
  "lineno": 33,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.split"
  ],
  "type": "function"
 },
 "numpy.distutils.from_template": {
  "lineno": null,
  "symbols_in_volume": [
   "re.I",
   "re.compile"
  ],
  "type": "module"
 },
 "numpy.distutils.from_template.conv": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.from_template.expand_sub": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.from_template.expand_sub.listrepl": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.from_template.expand_sub.namerepl": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.from_template.find_and_remove_repl_patterns": {
  "lineno": 99,
  "symbols_in_volume": [
   "re.subn"
  ],
  "type": "function"
 },
 "numpy.distutils.from_template.find_repl_patterns": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.from_template.main": {
  "lineno": 244,
  "symbols_in_volume": [
   "os.path.splitext",
   "sys.argv",
   "sys.stdin",
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.distutils.from_template.parse_structure": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.from_template.process_file": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.from_template.process_str": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.from_template.resolve_includes": {
  "lineno": 211,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.isabs",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.from_template.unique_key": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.intelccompiler": {
  "lineno": null,
  "symbols_in_volume": [
   "platform.system"
  ],
  "type": "module"
 },
 "numpy.distutils.intelccompiler.IntelCCompiler": {
  "lineno": 10,
  "symbols_in_volume": [
   "distutils.unixccompiler.UnixCCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelCCompiler.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "distutils.unixccompiler.UnixCCompiler.__init__",
   "platform.system"
  ],
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelCCompilerW": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.distutils.msvc9compiler.MSVCCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelCCompilerW.__init__": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.distutils.ccompiler.simple_version_match",
   "numpy.distutils.msvc9compiler.MSVCCompiler.__init__"
  ],
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelCCompilerW.initialize": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.distutils.msvc9compiler.MSVCCompiler.initialize"
  ],
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelEM64TCCompiler": {
  "lineno": 48,
  "symbols_in_volume": [
   "distutils.unixccompiler.UnixCCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelEM64TCCompiler.__init__": {
  "lineno": 56,
  "symbols_in_volume": [
   "distutils.unixccompiler.UnixCCompiler.__init__",
   "platform.system"
  ],
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelEM64TCCompilerW": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelEM64TCCompilerW.__init__": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.distutils.ccompiler.simple_version_match",
   "numpy.distutils.msvc9compiler.MSVCCompiler.__init__"
  ],
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelItaniumCCompiler": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.find_executable"
  ],
  "type": "class"
 },
 "numpy.distutils.lib2def": {
  "lineno": null,
  "symbols_in_volume": [
   "re.MULTILINE",
   "re.compile",
   "sys.stdout",
   "sys.version_info"
  ],
  "type": "module"
 },
 "numpy.distutils.lib2def.getnm": {
  "lineno": 62,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "numpy.distutils.lib2def.output_def": {
  "lineno": 96,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.distutils.lib2def.parse_cmd": {
  "lineno": 38,
  "symbols_in_volume": [
   "sys.argv"
  ],
  "type": "function"
 },
 "numpy.distutils.lib2def.parse_nm": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.line_endings": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.argv"
  ],
  "type": "module"
 },
 "numpy.distutils.line_endings.dos2unix": {
  "lineno": 9,
  "symbols_in_volume": [
   "os.path.isdir",
   "re.sub"
  ],
  "type": "function"
 },
 "numpy.distutils.line_endings.dos2unix_dir": {
  "lineno": 37,
  "symbols_in_volume": [
   "os.path.walk"
  ],
  "type": "function"
 },
 "numpy.distutils.line_endings.dos2unix_one_dir": {
  "lineno": 30,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.line_endings.unix2dos": {
  "lineno": 43,
  "symbols_in_volume": [
   "os.path.isdir",
   "re.sub"
  ],
  "type": "function"
 },
 "numpy.distutils.line_endings.unix2dos_dir": {
  "lineno": 71,
  "symbols_in_volume": [
   "os.path.walk"
  ],
  "type": "function"
 },
 "numpy.distutils.line_endings.unix2dos_one_dir": {
  "lineno": 64,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.log": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.log.Log",
   "distutils.log._global_log.__class__",
   "distutils.log._global_log.good",
   "numpy.distutils.misc_util.cyan_text",
   "numpy.distutils.misc_util.default_text",
   "numpy.distutils.misc_util.red_text"
  ],
  "type": "module"
 },
 "numpy.distutils.log.Log": {
  "lineno": 19,
  "symbols_in_volume": [
   "distutils.log.Log"
  ],
  "type": "class"
 },
 "numpy.distutils.log.Log._log": {
  "lineno": 20,
  "symbols_in_volume": [
   "sys.stdout.flush"
  ],
  "type": "function"
 },
 "numpy.distutils.log.Log.good": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.green_text",
   "sys.stdout.flush"
  ],
  "type": "function"
 },
 "numpy.distutils.log._fix_args": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.is_sequence",
   "numpy.distutils.misc_util.is_string"
  ],
  "type": "function"
 },
 "numpy.distutils.log.get_threshold": {
  "lineno": 64,
  "symbols_in_volume": [
   "distutils.log._global_log.threshold"
  ],
  "type": "function"
 },
 "numpy.distutils.log.set_threshold": {
  "lineno": 50,
  "symbols_in_volume": [
   "distutils.log._global_log.threshold"
  ],
  "type": "function"
 },
 "numpy.distutils.log.set_verbosity": {
  "lineno": 67,
  "symbols_in_volume": [
   "distutils.log._global_log.threshold"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler": {
  "lineno": null,
  "symbols_in_volume": [
   "msvcrt",
   "msvcrt.CRT_ASSEMBLY_VERSION",
   "msvcrt.CRT_ASSEMBLY_VERSION.split",
   "numpy.distutils.log.warn",
   "re.compile",
   "sys.platform"
  ],
  "type": "module"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler.__init__": {
  "lineno": 56,
  "symbols_in_volume": [
   "distutils.version.StrictVersion",
   "numpy.distutils.misc_util.get_build_architecture",
   "numpy.distutils.misc_util.msvc_runtime_version",
   "re.search",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler.link": {
  "lineno": 165,
  "symbols_in_volume": [
   "distutils.unixccompiler.UnixCCompiler.link",
   "numpy.distutils.misc_util.msvc_runtime_library"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler.object_filenames": {
  "lineno": 207,
  "symbols_in_volume": [
   "distutils.errors.UnknownFileError",
   "os.path.basename",
   "os.path.join",
   "os.path.normcase",
   "os.path.splitdrive",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler._build_import_library_amd64": {
  "lineno": 449,
  "symbols_in_volume": [
   "numpy.distutils.log.debug",
   "numpy.distutils.log.info",
   "os.path.join",
   "subprocess.check_call",
   "sys.prefix",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler._build_import_library_x86": {
  "lineno": 469,
  "symbols_in_volume": [
   "numpy.distutils.lib2def.DEFAULT_NM",
   "numpy.distutils.lib2def.DEF_HEADER",
   "numpy.distutils.lib2def.getnm",
   "numpy.distutils.lib2def.output_def",
   "numpy.distutils.lib2def.parse_nm",
   "numpy.distutils.log.debug",
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn",
   "os.path.isfile",
   "os.path.join",
   "subprocess.check_output",
   "sys",
   "sys.base_prefix",
   "sys.prefix",
   "sys.real_prefix",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler._check_for_import_lib": {
  "lineno": 413,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join",
   "sys",
   "sys.base_prefix",
   "sys.prefix",
   "sys.real_prefix",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.build_import_library": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.get_build_architecture",
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.build_msvcr_library": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.distutils.log.debug",
   "numpy.distutils.log.info",
   "numpy.distutils.log.warn",
   "numpy.distutils.misc_util.msvc_runtime_library",
   "numpy.distutils.misc_util.msvc_runtime_major",
   "os.name",
   "os.path.isfile",
   "os.path.join",
   "os.remove",
   "subprocess.call",
   "sys.prefix"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.check_embedded_msvcr_match_linked": {
  "lineno": 614,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.msvc_runtime_major"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.configtest_name": {
  "lineno": 626,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.dump_table": {
  "lineno": 280,
  "symbols_in_volume": [
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_dll": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.get_build_architecture"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_dll._find_dll_in_path": {
  "lineno": 332,
  "symbols_in_volume": [
   "os.environ.split",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "sys.prefix"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_dll._find_dll_in_winsxs": {
  "lineno": 321,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.exists",
   "os.path.join",
   "os.walk"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_python_dll": {
  "lineno": 242,
  "symbols_in_volume": [
   "os.environ",
   "os.path.exists",
   "os.path.join",
   "sys",
   "sys.base_prefix",
   "sys.prefix",
   "sys.real_prefix",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.generate_def": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.distutils.log.warn",
   "os.path.basename"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.generate_manifest": {
  "lineno": 641,
  "symbols_in_volume": [
   "distutils.msvccompiler.get_build_version"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.get_msvcr_replacement": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.msvc_runtime_library"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.manifest_name": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.manifest_rc": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.msvc_manifest_xml": {
  "lineno": 558,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.rc_name": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "dummy_threading.local",
   "re.I",
   "re.compile"
  ],
  "type": "module"
 },
 "numpy.distutils.misc_util.Configuration": {
  "lineno": 726,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.misc_util.Configuration.__init__": {
  "lineno": 736,
  "symbols_in_volume": [
   "copy.copy",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.__str__": {
  "lineno": 1764,
  "symbols_in_volume": [
   "pprint.pformat"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration._add_library": {
  "lineno": 1549,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration._fix_paths_dict": {
  "lineno": 1402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration._get_configuration_from_setup_py": {
  "lineno": 900,
  "symbols_in_volume": [
   "numpy.compat.npy_load_module",
   "os.path.basename",
   "os.path.dirname",
   "os.path.splitext",
   "sys.path",
   "sys.path.insert"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration._get_hg_revision": {
  "lineno": 1881,
  "symbols_in_volume": [
   "os.path.isfile",
   "re.match",
   "subprocess.CalledProcessError",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration._get_svn_revision": {
  "lineno": 1852,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.isfile",
   "re.match",
   "re.search",
   "subprocess.CalledProcessError",
   "subprocess.check_output",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration._optimize_data_files": {
  "lineno": 1159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration._wildcard_get_subpackage": {
  "lineno": 881,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.isfile",
   "os.sep"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_data_dir": {
  "lineno": 1038,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.isabs",
   "os.path.isdir",
   "os.path.join",
   "os.sep",
   "os.sep.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_data_files": {
  "lineno": 1168,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.isabs",
   "os.path.join",
   "os.sep",
   "os.sep.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_define_macros": {
  "lineno": 1321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_extension": {
  "lineno": 1410,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.distutils.core.Extension",
   "os.path.abspath",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_headers": {
  "lineno": 1353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_include_dirs": {
  "lineno": 1337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_installed_library": {
  "lineno": 1565,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_library": {
  "lineno": 1513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_npy_pkg_config": {
  "lineno": 1616,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_scripts": {
  "lineno": 1723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.add_subpackage": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.append_to": {
  "lineno": 1838,
  "symbols_in_volume": [
   "numpy.distutils.core.Extension"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.dict_append": {
  "lineno": 1739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.get_build_temp_dir": {
  "lineno": 1791,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.get_config_cmd": {
  "lineno": 1777,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "os.pathsep.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.get_distribution": {
  "lineno": 876,
  "symbols_in_volume": [
   "numpy.distutils.core.get_distribution"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.get_info": {
  "lineno": 2078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.get_subpackage": {
  "lineno": 934,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.dirname",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.get_version": {
  "lineno": 1918,
  "symbols_in_volume": [
   "numpy.compat.npy_load_module",
   "os.path.basename",
   "os.path.isfile",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.have_f77c": {
  "lineno": 1800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.have_f90c": {
  "lineno": 1819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.info": {
  "lineno": 852,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.make_config_py": {
  "lineno": 2068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.make_hg_version_py": {
  "lineno": 2028,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.make_hg_version_py.generate_hg_version_py": {
  "lineno": 2048,
  "symbols_in_volume": [
   "atexit.register",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.make_hg_version_py.generate_hg_version_py.rm_file": {
  "lineno": 2055,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.make_svn_version_py": {
  "lineno": 1987,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.make_svn_version_py.generate_svn_version_py": {
  "lineno": 2008,
  "symbols_in_volume": [
   "atexit.register",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.make_svn_version_py.generate_svn_version_py.rm_file": {
  "lineno": 2015,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.paths": {
  "lineno": 1387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.set_options": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.todict": {
  "lineno": 833,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.Configuration.warn": {
  "lineno": 856,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.InstallableLib": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.misc_util.InstallableLib.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util._commandline_dep_string": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util._fix_paths": {
  "lineno": 261,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util._get_directories": {
  "lineno": 536,
  "symbols_in_volume": [
   "os.path.split"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util._get_f90_modules": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util._get_headers": {
  "lineno": 528,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.all_strings": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.allpath": {
  "lineno": 124,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.appendpath": {
  "lineno": 2268,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.commonprefix",
   "os.path.dirname",
   "os.path.isabs",
   "os.path.join",
   "os.path.normpath",
   "os.path.sep",
   "os.path.splitdrive"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.as_list": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.blue_text": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.clean_up_temporary_directory": {
  "lineno": 25,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.colour_text": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.cyan_text": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.cyg2win32": {
  "lineno": 381,
  "symbols_in_volume": [
   "os.path.normcase",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.default_config_dict": {
  "lineno": 2243,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.default_text": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.dict_append": {
  "lineno": 2257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.dot_join": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.filter_sources": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.general_source_directories_files": {
  "lineno": 586,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.isfile",
   "os.path.join",
   "os.walk",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.general_source_files": {
  "lineno": 576,
  "symbols_in_volume": [
   "os.path.join",
   "os.walk",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.generate_config_py": {
  "lineno": 2289,
  "symbols_in_volume": [
   "distutils.dir_util.mkpath",
   "numpy.distutils.system_info.system_info.saved_results.items",
   "os.path.basename",
   "os.path.dirname",
   "sys.argv",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_build_architecture": {
  "lineno": 2387,
  "symbols_in_volume": [
   "distutils.msvccompiler.get_build_architecture"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_cmd": {
  "lineno": 2091,
  "symbols_in_volume": [
   "distutils.core._setup_distribution",
   "distutils.errors.DistutilsInternalError"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_data_files": {
  "lineno": 690,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_dependencies": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_ext_source_files": {
  "lineno": 612,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_frame": {
  "lineno": 712,
  "symbols_in_volume": [
   "sys._getframe",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_info": {
  "lineno": 2171,
  "symbols_in_volume": [
   "numpy.distutils.npy_pkg_config.parse_flags"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_language": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_lib_source_files": {
  "lineno": 629,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_mathlibs": {
  "lineno": 200,
  "symbols_in_volume": [
   "distutils.errors.DistutilsError",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_npy_pkg_dir": {
  "lineno": 2112,
  "symbols_in_volume": [
   "numpy.__file__",
   "os.environ.get",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_num_build_jobs": {
  "lineno": 78,
  "symbols_in_volume": [
   "multiprocessing.cpu_count",
   "numpy.distutils.core.get_distribution",
   "os.environ.get",
   "os.sched_getaffinity"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_numpy_include_dirs": {
  "lineno": 2103,
  "symbols_in_volume": [
   "numpy.get_include"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_path_from_frame": {
  "lineno": 143,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "sys.modules"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_pkg_info": {
  "lineno": 2133,
  "symbols_in_volume": [
   "numpy.distutils.npy_pkg_config.read_config"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_script_files": {
  "lineno": 625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.get_shared_lib_extension": {
  "lineno": 643,
  "symbols_in_volume": [
   "distutils.sysconfig.get_config_vars",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.gpaths": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.green_text": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.has_cxx_sources": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.has_f_sources": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.is_bootstrapping": {
  "lineno": 2231,
  "symbols_in_volume": [
   "builtins.__NUMPY_SETUP__"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.is_glob_pattern": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.is_local_src_dir": {
  "lineno": 561,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.abspath",
   "os.path.commonprefix",
   "os.path.isdir",
   "os.sep",
   "os.sep.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.is_sequence": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.is_string": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.make_temp_file": {
  "lineno": 305,
  "symbols_in_volume": [
   "os.fdopen",
   "tempfile.mkdtemp",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.mingw32": {
  "lineno": 386,
  "symbols_in_volume": [
   "os.environ.get",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.minrelpath": {
  "lineno": 227,
  "symbols_in_volume": [
   "os.sep",
   "os.sep.join"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.msvc_runtime_library": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.msvc_runtime_major": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.msvc_runtime_version": {
  "lineno": 396,
  "symbols_in_volume": [
   "sys.version",
   "sys.version.find"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.msvc_version": {
  "lineno": 2379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.njoin": {
  "lineno": 173,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.sep"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.quote_args": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.red_text": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.misc_util.rel_path": {
  "lineno": 129,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.realpath",
   "os.sep"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.sorted_glob": {
  "lineno": 256,
  "symbols_in_volume": [
   "glob.glob"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.terminal_has_colors": {
  "lineno": 318,
  "symbols_in_volume": [
   "curses.setupterm",
   "curses.tigetnum",
   "curses.tigetstr",
   "os.environ",
   "sys.platform",
   "sys.stdout",
   "sys.stdout.isatty"
  ],
  "type": "function"
 },
 "numpy.distutils.misc_util.yellow_text": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.msvc9compiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.msvc9compiler.MSVCCompiler": {
  "lineno": 39,
  "symbols_in_volume": [
   "distutils.msvc9compiler.MSVCCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.msvc9compiler.MSVCCompiler.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "distutils.msvc9compiler.MSVCCompiler.__init__"
  ],
  "type": "function"
 },
 "numpy.distutils.msvc9compiler.MSVCCompiler.initialize": {
  "lineno": 43,
  "symbols_in_volume": [
   "distutils.msvc9compiler.MSVCCompiler.initialize",
   "os.environ",
   "os.getenv"
  ],
  "type": "function"
 },
 "numpy.distutils.msvc9compiler.MSVCCompiler.manifest_setup_ldargs": {
  "lineno": 60,
  "symbols_in_volume": [
   "distutils.msvc9compiler.MSVCCompiler.manifest_setup_ldargs"
  ],
  "type": "function"
 },
 "numpy.distutils.msvc9compiler._merge": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.msvccompiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.msvccompiler.MSVCCompiler": {
  "lineno": 39,
  "symbols_in_volume": [
   "distutils.msvccompiler.MSVCCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.msvccompiler.MSVCCompiler.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "distutils.msvccompiler.MSVCCompiler.__init__"
  ],
  "type": "function"
 },
 "numpy.distutils.msvccompiler.MSVCCompiler.initialize": {
  "lineno": 43,
  "symbols_in_volume": [
   "distutils.msvccompiler.MSVCCompiler.initialize",
   "os.environ",
   "os.getenv"
  ],
  "type": "function"
 },
 "numpy.distutils.msvccompiler._merge": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config": {
  "lineno": null,
  "symbols_in_volume": [
   "glob.glob",
   "optparse.OptionParser",
   "os.environ.get",
   "re.compile",
   "re.search",
   "sys.argv"
  ],
  "type": "module"
 },
 "numpy.distutils.npy_pkg_config.FormatError": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.FormatError.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.FormatError.__str__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.__init__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.__str__": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.cflags": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.libs": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.sections": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.PkgNotFound": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.PkgNotFound.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.PkgNotFound.__str__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.__getitem__": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.__init__": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.__setitem__": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet._init_parse": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet._init_parse_var": {
  "lineno": 173,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.interpolate": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.interpolate._interpolate": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.variables": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config._escape_backslash": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config._read_config_imp": {
  "lineno": 285,
  "symbols_in_volume": [
   "os.path.dirname",
   "sys.modules"
  ],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config._read_config_imp._read_config": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_config": {
  "lineno": 249,
  "symbols_in_volume": [
   "configparser.RawConfigParser",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_flags": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_meta": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_sections": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_variables": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.pkg_to_filename": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.read_config": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.numpy_distribution": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution": {
  "lineno": 6,
  "symbols_in_volume": [
   "distutils.core.Distribution"
  ],
  "type": "class"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution.__init__": {
  "lineno": 7,
  "symbols_in_volume": [
   "distutils.core.Distribution.__init__"
  ],
  "type": "function"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution.has_scons_scripts": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.pathccompiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.pathccompiler.PathScaleCCompiler": {
  "lineno": 3,
  "symbols_in_volume": [
   "distutils.unixccompiler.UnixCCompiler"
  ],
  "type": "class"
 },
 "numpy.distutils.pathccompiler.PathScaleCCompiler.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "distutils.unixccompiler.UnixCCompiler.__init__"
  ],
  "type": "function"
 },
 "numpy.distutils.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "numpy.distutils.setup.configuration": {
  "lineno": 2,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.errors.DistutilsError",
   "glob.glob",
   "numpy.distutils.misc_util.get_shared_lib_extension",
   "os.devnull",
   "os.path.dirname",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join",
   "os.path.split",
   "os.sep",
   "platform.architecture",
   "shutil.which",
   "subprocess.PIPE",
   "subprocess.Popen",
   "sys.platform",
   "sys.prefix"
  ],
  "type": "module"
 },
 "numpy.distutils.system_info.AliasedOptionError": {
  "lineno": 492,
  "symbols_in_volume": [
   "distutils.errors.DistutilsError"
  ],
  "type": "class"
 },
 "numpy.distutils.system_info.AtlasNotFoundError": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.BlasILP64NotFoundError": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.BlasNotFoundError": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.BlasOptNotFoundError": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.BlasSrcNotFoundError": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.DJBFFTNotFoundError": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.FFTWNotFoundError": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.FlameNotFoundError": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.LapackILP64NotFoundError": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.LapackNotFoundError": {
  "lineno": 513,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.LapackSrcNotFoundError": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.NotFoundError": {
  "lineno": 488,
  "symbols_in_volume": [
   "distutils.errors.DistutilsError"
  ],
  "type": "class"
 },
 "numpy.distutils.system_info.NumericNotFoundError": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.Numeric_info": {
  "lineno": 2537,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.UmfpackNotFoundError": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.X11NotFoundError": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info._c_string_literal": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info._ilp64_opt_info_mixin": {
  "lineno": 1781,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info._ilp64_opt_info_mixin._check_info": {
  "lineno": 1785,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info._numpy_info": {
  "lineno": 2462,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info._numpy_info.__init__": {
  "lineno": 2467,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.join",
   "os.sep",
   "os.sep.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info._numpy_info.calc_info": {
  "lineno": 2501,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info._pkg_config_info": {
  "lineno": 2677,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info._pkg_config_info.calc_info": {
  "lineno": 2702,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.find_executable",
   "numpy.distutils.log.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info._pkg_config_info.get_config_exe": {
  "lineno": 2687,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info._pkg_config_info.get_config_output": {
  "lineno": 2692,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.filepath_from_subprocess_output",
   "subprocess.CalledProcessError",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.accelerate_info": {
  "lineno": 2326,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.accelerate_info.calc_info": {
  "lineno": 2331,
  "symbols_in_volume": [
   "distutils.util.get_platform",
   "os.environ.get",
   "os.getenv",
   "os.path.exists",
   "platform.platform",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.add_system_root": {
  "lineno": 275,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.agg2_info": {
  "lineno": 2635,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.agg2_info.calc_info": {
  "lineno": 2646,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.isfile",
   "os.path.join",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.agg2_info.get_paths": {
  "lineno": 2639,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.amd_info": {
  "lineno": 2831,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.amd_info.calc_info": {
  "lineno": 2836,
  "symbols_in_volume": [
   "os.path.dirname"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.atlas_3_10_blas_info": {
  "lineno": 1383,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.atlas_3_10_blas_info.calc_info": {
  "lineno": 1386,
  "symbols_in_volume": [
   "os.path.dirname"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.atlas_3_10_blas_threads_info": {
  "lineno": 1419,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.atlas_3_10_info": {
  "lineno": 1377,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.atlas_3_10_threads_info": {
  "lineno": 1412,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.atlas_blas_info": {
  "lineno": 1330,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.atlas_blas_info.calc_info": {
  "lineno": 1333,
  "symbols_in_volume": [
   "os.path.dirname"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.atlas_blas_threads_info": {
  "lineno": 1364,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.atlas_info": {
  "lineno": 1219,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "class"
 },
 "numpy.distutils.system_info.atlas_info.calc_info": {
  "lineno": 1240,
  "symbols_in_volume": [
   "numpy.distutils.log.info",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "os.stat",
   "sys.platform",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.atlas_info.get_paths": {
  "lineno": 1232,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.atlas_threads_info": {
  "lineno": 1359,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.blas64__opt_info": {
  "lineno": 1942,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.blas_ilp64_opt_info": {
  "lineno": 1924,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.blas_ilp64_opt_info._calc_info": {
  "lineno": 1929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_ilp64_plain_opt_info": {
  "lineno": 1937,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.blas_info": {
  "lineno": 1947,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.blas_info.calc_info": {
  "lineno": 1953,
  "symbols_in_volume": [
   "platform.system"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_info.get_cblas_libs": {
  "lineno": 1976,
  "symbols_in_volume": [
   "numpy.distutils.customized_ccompiler",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_mkl_info": {
  "lineno": 1215,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.blas_opt_info": {
  "lineno": 1823,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.blas_opt_info._calc_info": {
  "lineno": 1892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_opt_info._calc_info_accelerate": {
  "lineno": 1863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_opt_info._calc_info_atlas": {
  "lineno": 1850,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_opt_info._calc_info_blas": {
  "lineno": 1870,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_opt_info._calc_info_blis": {
  "lineno": 1836,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_opt_info._calc_info_mkl": {
  "lineno": 1829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_opt_info._calc_info_openblas": {
  "lineno": 1843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_opt_info.calc_info": {
  "lineno": 1895,
  "symbols_in_volume": [
   "os.environ.get",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_src_info": {
  "lineno": 2380,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.blas_src_info.calc_info": {
  "lineno": 2392,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.blas_src_info.get_paths": {
  "lineno": 2385,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.blis_info": {
  "lineno": 2227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.blis_info.calc_info": {
  "lineno": 2233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.boost_python_info": {
  "lineno": 2596,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.boost_python_info.calc_info": {
  "lineno": 2607,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.boost_python_info.get_paths": {
  "lineno": 2600,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.combine_paths": {
  "lineno": 2896,
  "symbols_in_volume": [
   "functools.reduce",
   "glob.glob",
   "numpy.distutils.log.debug",
   "numpy.distutils.misc_util.is_string",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.customized_ccompiler": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.distutils.customized_ccompiler"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.dfftw_info": {
  "lineno": 1061,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.dfftw_threads_info": {
  "lineno": 1088,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.dict_append": {
  "lineno": 2926,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.djbfft_info": {
  "lineno": 1106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.djbfft_info.calc_info": {
  "lineno": 1118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.djbfft_info.get_paths": {
  "lineno": 1111,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.f2py_info": {
  "lineno": 2584,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.f2py_info.calc_info": {
  "lineno": 2585,
  "symbols_in_volume": [
   "numpy.f2py.__file__",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.fft_opt_info": {
  "lineno": 976,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.fft_opt_info.calc_info": {
  "lineno": 978,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.fftw2_info": {
  "lineno": 1037,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.fftw3_info": {
  "lineno": 1049,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.fftw_info": {
  "lineno": 990,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.fftw_info.calc_info": {
  "lineno": 1031,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.fftw_info.calc_ver_info": {
  "lineno": 1004,
  "symbols_in_volume": [
   "numpy.distutils.log.info"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.fftw_threads_info": {
  "lineno": 1079,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.flame_info": {
  "lineno": 2250,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.flame_info.calc_info": {
  "lineno": 2294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.flame_info.check_embedded_lapack": {
  "lineno": 2264,
  "symbols_in_volume": [
   "numpy.distutils.customized_ccompiler",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.freetype2_info": {
  "lineno": 2825,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.gdk_2_info": {
  "lineno": 2795,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.gdk_info": {
  "lineno": 2801,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.gdk_pixbuf_2_info": {
  "lineno": 2783,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.gdk_pixbuf_xlib_2_info": {
  "lineno": 2777,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.gdk_x11_2_info": {
  "lineno": 2789,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.get_atlas_version": {
  "lineno": 1578,
  "symbols_in_volume": [
   "distutils.dist.Distribution",
   "numpy.distutils.command.config.config",
   "numpy.distutils.command.config.config.get",
   "numpy.distutils.log.info",
   "os.environ.get",
   "re.M",
   "re.search",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.get_info": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.get_standard_file": {
  "lineno": 365,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.expanduser",
   "os.path.isfile",
   "os.path.join",
   "os.path.split",
   "sys.argv"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.gtkp_2_info": {
  "lineno": 2813,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.gtkp_x11_2_info": {
  "lineno": 2807,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack64__opt_info": {
  "lineno": 1818,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_atlas_3_10_info": {
  "lineno": 1424,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_atlas_3_10_threads_info": {
  "lineno": 1428,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_atlas_info": {
  "lineno": 1369,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_atlas_threads_info": {
  "lineno": 1373,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_ilp64_opt_info": {
  "lineno": 1799,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_ilp64_opt_info._calc_info": {
  "lineno": 1804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_ilp64_plain_opt_info": {
  "lineno": 1812,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_info": {
  "lineno": 1432,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_info.calc_info": {
  "lineno": 1438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_mkl_info": {
  "lineno": 1211,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_opt_info": {
  "lineno": 1651,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_opt_info._calc_info": {
  "lineno": 1747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_opt_info._calc_info_accelerate": {
  "lineno": 1707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_opt_info._calc_info_atlas": {
  "lineno": 1682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_opt_info._calc_info_flame": {
  "lineno": 1675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_opt_info._calc_info_lapack": {
  "lineno": 1737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_opt_info._calc_info_mkl": {
  "lineno": 1657,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_opt_info._calc_info_openblas": {
  "lineno": 1664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_opt_info._get_info_blas": {
  "lineno": 1714,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_opt_info._get_info_lapack": {
  "lineno": 1726,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_opt_info.calc_info": {
  "lineno": 1750,
  "symbols_in_volume": [
   "os.environ.get",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_src_info": {
  "lineno": 1450,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.lapack_src_info.calc_info": {
  "lineno": 1462,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.lapack_src_info.get_paths": {
  "lineno": 1455,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.libpaths": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.mkl_info": {
  "lineno": 1142,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.mkl_info.__init__": {
  "lineno": 1175,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.mkl_info.calc_info": {
  "lineno": 1192,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.mkl_info.get_mkl_rootdir": {
  "lineno": 1147,
  "symbols_in_volume": [
   "glob.glob",
   "os.environ.get",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join",
   "os.pathsep",
   "os.sep",
   "os.sep.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.numarray_info": {
  "lineno": 2532,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.numerix_info": {
  "lineno": 2547,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.numerix_info.calc_info": {
  "lineno": 2550,
  "symbols_in_volume": [
   "numpy.distutils.log.info",
   "os.environ",
   "os.getenv"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.numpy_info": {
  "lineno": 2542,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.openblas64__info": {
  "lineno": 2216,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.openblas64__lapack_info": {
  "lineno": 2224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.openblas_clapack_info": {
  "lineno": 2191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.openblas_ilp64_info": {
  "lineno": 2194,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.openblas_ilp64_info._calc_info": {
  "lineno": 2201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.openblas_ilp64_lapack_info": {
  "lineno": 2207,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.openblas_ilp64_lapack_info._calc_info": {
  "lineno": 2210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.openblas_info": {
  "lineno": 2042,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.openblas_info._calc_info": {
  "lineno": 2063,
  "symbols_in_volume": [
   "numpy.distutils.customized_ccompiler",
   "numpy.distutils.fcompiler.new_fcompiler"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.openblas_info.calc_info": {
  "lineno": 2104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.openblas_info.check_msvc_gfortran_libs": {
  "lineno": 2109,
  "symbols_in_volume": [
   "os.getcwd",
   "os.makedirs",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.openblas_info.check_symbols": {
  "lineno": 2141,
  "symbols_in_volume": [
   "numpy.distutils.customized_ccompiler",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.openblas_info.symbol_prefix": {
  "lineno": 2049,
  "symbols_in_volume": [
   "configparser.NoOptionError"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.openblas_info.symbol_suffix": {
  "lineno": 2056,
  "symbols_in_volume": [
   "configparser.NoOptionError"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.openblas_lapack_info": {
  "lineno": 2184,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.parseCmdLine": {
  "lineno": 2947,
  "symbols_in_volume": [
   "optparse.OptionParser"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.sfftw_info": {
  "lineno": 1070,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.sfftw_threads_info": {
  "lineno": 1097,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.show_all": {
  "lineno": 2958,
  "symbols_in_volume": [
   "inspect.isclass",
   "numpy.distutils.log.DEBUG",
   "numpy.distutils.log.INFO",
   "numpy.distutils.log.info",
   "numpy.distutils.log.set_threshold",
   "sys.argv"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.system_info.__init__": {
  "lineno": 615,
  "symbols_in_volume": [
   "configparser.RawConfigParser",
   "os.pathsep.join"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info._check_libs": {
  "lineno": 948,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.is_sequence"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info._find_lib": {
  "lineno": 910,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.is_string",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info._find_libs": {
  "lineno": 935,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.calc_extra_info": {
  "lineno": 721,
  "symbols_in_volume": [
   "numpy.distutils._shell_utils.NativeParser.split"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.calc_libraries_info": {
  "lineno": 645,
  "symbols_in_volume": [
   "numpy.distutils.log.info"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.check_libs": {
  "lineno": 878,
  "symbols_in_volume": [
   "numpy.distutils.log.info"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.check_libs2": {
  "lineno": 896,
  "symbols_in_volume": [
   "numpy.distutils.log.info"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.combine_paths": {
  "lineno": 969,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.get_include_dirs": {
  "lineno": 837,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.get_info": {
  "lineno": 737,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.distutils.log.INFO",
   "numpy.distutils.log.get_threshold",
   "numpy.distutils.log.info",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.get_lib_dirs": {
  "lineno": 828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.get_libraries": {
  "lineno": 854,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.get_libs": {
  "lineno": 843,
  "symbols_in_volume": [
   "configparser.NoOptionError",
   "numpy.distutils.misc_util.is_string"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.get_option_single": {
  "lineno": 685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.get_paths": {
  "lineno": 773,
  "symbols_in_volume": [
   "numpy.distutils.log.debug",
   "numpy.distutils.log.info",
   "numpy.distutils.misc_util.is_sequence",
   "os.environ",
   "os.path.basename",
   "os.path.dirname",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join",
   "os.path.splitext",
   "os.pathsep",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.get_runtime_lib_dirs": {
  "lineno": 831,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.get_src_dirs": {
  "lineno": 840,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.has_info": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.library_extensions": {
  "lineno": 860,
  "symbols_in_volume": [
   "numpy.distutils.customized_ccompiler",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.parse_config_files": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.system_info.set_info": {
  "lineno": 676,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.umfpack_info": {
  "lineno": 2862,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.umfpack_info.calc_info": {
  "lineno": 2868,
  "symbols_in_volume": [
   "os.path.dirname"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.wx_info": {
  "lineno": 2766,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.x11_info": {
  "lineno": 2432,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.system_info.x11_info.__init__": {
  "lineno": 2437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.system_info.x11_info.calc_info": {
  "lineno": 2442,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.system_info.xft_info": {
  "lineno": 2819,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_exec_command": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.check_basic": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.exec_command",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.check_execute_in": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.exec_command",
   "numpy.testing.assert_",
   "numpy.testing.tempdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.check_nt": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.exec_command",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.check_posix": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.exec_command",
   "numpy.testing.assert_",
   "os.environ"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.setup": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.distutils.exec_command.get_pythonexe"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.test_basic": {
  "lineno": 203,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.testing.assert_warns",
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix.__enter__": {
  "lineno": 48,
  "symbols_in_volume": [
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix.__exit__": {
  "lineno": 52,
  "symbols_in_volume": [
   "os.name"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr.__enter__": {
  "lineno": 33,
  "symbols_in_volume": [
   "sys.stderr"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr.__exit__": {
  "lineno": 37,
  "symbols_in_volume": [
   "sys.stderr"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "sys.stderr"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout.__enter__": {
  "lineno": 18,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout.__exit__": {
  "lineno": 22,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout.__init__": {
  "lineno": 15,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.test_exec_command_stderr": {
  "lineno": 80,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.distutils.exec_command.exec_command",
   "numpy.testing.assert_warns",
   "os.name",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.test_exec_command_stdout": {
  "lineno": 56,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.distutils.exec_command.exec_command",
   "numpy.testing.assert_warns",
   "os.name",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_fcompiler.test_fcompiler_flags": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions.test_g77_version": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions.test_not_g77": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGFortranVersions": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGFortranVersions.test_gfortran_version": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGFortranVersions.test_not_gfortran": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_intel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelEM64TFCompilerVersions": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelEM64TFCompilerVersions.test_64bit_version": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelFCompilerVersions": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelFCompilerVersions.test_32bit_version": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.TestNagFCompilerVersions": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.TestNagFCompilerVersions.test_version_match": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_from_template": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_from_template.normalize_whitespace": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.tests.test_from_template.test_from_template": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.distutils.from_template.process_str",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_mingw32ccompiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_mingw32ccompiler.test_build_import": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.distutils.mingw32ccompiler._check_for_import_lib",
   "numpy.distutils.mingw32ccompiler.build_import_library",
   "pytest.mark.skipif",
   "pytest.skip",
   "shutil.move",
   "subprocess.check_output",
   "sys.maxsize",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.sep"
  ],
  "type": "module"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath.test_1": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.appendpath",
   "numpy.testing.assert_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath.test_2": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.appendpath",
   "numpy.testing.assert_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath.test_3": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.appendpath",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestGpaths": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestGpaths.test_gpaths": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.gpaths",
   "numpy.distutils.misc_util.minrelpath",
   "numpy.testing.assert_",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestMinrelpath": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestMinrelpath.test_1": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.minrelpath",
   "numpy.testing.assert_equal",
   "os.path.sep"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestSharedExtension": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestSharedExtension.test_get_shared_lib_extension": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.get_shared_lib_extension",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.test_installed_npymath_ini": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.get_info"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo.test_simple": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.distutils.npy_pkg_config.read_config",
   "numpy.testing.assert_",
   "numpy.testing.temppath",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo.test_simple_variable": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.distutils.npy_pkg_config.read_config",
   "numpy.testing.assert_",
   "numpy.testing.temppath",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags.test_simple_cflags": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.distutils.npy_pkg_config.parse_flags",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags.test_simple_lflags": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.distutils.npy_pkg_config.parse_flags",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_shell_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_shell_utils.Parser": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.distutils._shell_utils.PosixParser",
   "numpy.distutils._shell_utils.WindowsParser",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_shell_utils.runner": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.distutils._shell_utils.NativeParser",
   "numpy.distutils._shell_utils.PosixParser",
   "numpy.distutils._shell_utils.WindowsParser",
   "pytest.fixture",
   "pytest.skip",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_shell_utils.test_join_matches_subprocess": {
  "lineno": 52,
  "symbols_in_volume": [
   "json.loads",
   "pytest.mark.parametrize",
   "sys.executable"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_shell_utils.test_roundtrip": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.distutils.tests.test_system_info.DuplicateOptionInfo": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_system_info.Temp1Info": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_system_info.Temp2Info": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.setup": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.distutils._shell_utils.NativeParser.join",
   "os.close",
   "os.path.join",
   "os.pathsep",
   "tempfile.mkdtemp",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.setup.site_and_parse": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.teardown": {
  "lineno": 175,
  "symbols_in_volume": [
   "os.remove",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_all": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_compile1": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.distutils.customized_ccompiler",
   "numpy.testing.assert_",
   "os.chdir",
   "os.getcwd",
   "os.path.basename",
   "os.path.isfile",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_compile2": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.distutils.ccompiler.new_compiler",
   "numpy.distutils.customized_ccompiler",
   "numpy.testing.assert_",
   "os.chdir",
   "os.getcwd",
   "os.path.basename",
   "os.path.isfile",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_duplicate_options": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.distutils.system_info.AliasedOptionError",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_overrides": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.distutils.system_info.mkl_info",
   "os.chdir",
   "os.getcwd",
   "os.path.join",
   "os.pathsep",
   "shutil.copy"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_temp1": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_temp2": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info._system_info": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.distutils.system_info.system_info"
  ],
  "type": "class"
 },
 "numpy.distutils.tests.test_system_info._system_info.__init__": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.distutils.system_info.ConfigParser",
   "numpy.distutils.system_info.default_include_dirs",
   "numpy.distutils.system_info.default_lib_dirs"
  ],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info._system_info._check_libs": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.get_class": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.have_compiler": {
  "lineno": 64,
  "symbols_in_volume": [
   "distutils.errors.DistutilsError",
   "numpy.distutils.customized_ccompiler",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "numpy.distutils.unixccompiler": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.unixccompiler.UnixCCompiler",
   "numpy.distutils.ccompiler.replace_method"
  ],
  "type": "module"
 },
 "numpy.distutils.unixccompiler.UnixCCompiler__compile": {
  "lineno": 14,
  "symbols_in_volume": [
   "distutils.errors.CompileError",
   "distutils.errors.DistutilsExecError",
   "distutils.sysconfig.get_config_vars",
   "numpy.distutils.misc_util._commandline_dep_string",
   "os.environ",
   "os.environ.split",
   "os.path.basename"
  ],
  "type": "function"
 },
 "numpy.distutils.unixccompiler.UnixCCompiler_create_static_lib": {
  "lineno": 64,
  "symbols_in_volume": [
   "distutils.errors.DistutilsExecError",
   "distutils.errors.LibError",
   "numpy.distutils.log.debug",
   "os.path.basename",
   "os.path.dirname",
   "os.unlink"
  ],
  "type": "function"
 },
 "numpy.doc": {
  "lineno": null,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "numpy.doc.basics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.broadcasting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.byteswapping": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.constants": {
  "lineno": null,
  "symbols_in_volume": [
   "re.match",
   "textwrap.dedent"
  ],
  "type": "module"
 },
 "numpy.doc.constants.add_newdoc": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.doc.creation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.dispatch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.glossary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.internals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.structured_arrays": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.subclassing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.doc.ufuncs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.dual": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.fft.fft",
   "numpy.fft.fft2",
   "numpy.fft.fftn",
   "numpy.fft.ifft",
   "numpy.fft.ifft2",
   "numpy.fft.ifftn",
   "numpy.linalg.cholesky",
   "numpy.linalg.det",
   "numpy.linalg.eig",
   "numpy.linalg.eigh",
   "numpy.linalg.eigvals",
   "numpy.linalg.eigvalsh",
   "numpy.linalg.inv",
   "numpy.linalg.lstsq",
   "numpy.linalg.norm",
   "numpy.linalg.pinv",
   "numpy.linalg.solve",
   "numpy.linalg.svd"
  ],
  "type": "module"
 },
 "numpy.dual.register_func": {
  "lineno": 50,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "numpy.dual.restore_all": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.dual.restore_func": {
  "lineno": 57,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "numpy.f2py": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy._pytesttester.PytestTester"
  ],
  "type": "module"
 },
 "numpy.f2py.__main__": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.f2py.f2py2e.main"
  ],
  "type": "module"
 },
 "numpy.f2py.__version__": {
  "lineno": null,
  "symbols_in_volume": [
   "__svn_version__.version"
  ],
  "type": "module"
 },
 "numpy.f2py.auxfuncs": {
  "lineno": null,
  "symbols_in_volume": [
   "pprint.pprint",
   "sys.stderr.write"
  ],
  "type": "module"
 },
 "numpy.f2py.auxfuncs.F2PYError": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.auxfuncs._isstring": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.applyrules": {
  "lineno": 793,
  "symbols_in_volume": [
   "types.FunctionType"
  ],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.containscommon": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.containsmodule": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.debugcapi": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.dictappend": {
  "lineno": 764,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.flatlist": {
  "lineno": 733,
  "symbols_in_volume": [
   "functools.reduce"
  ],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.gentitle": {
  "lineno": 728,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.get_kind": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.getargs": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.getargs2": {
  "lineno": 702,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.getcallprotoargument": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.getcallstatement": {
  "lineno": 634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.getfortranname": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.getmultilineblock": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.getpymethoddef": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.getrestdoc": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.getusercode": {
  "lineno": 674,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.getusercode1": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.hasassumedshape": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.hasbody": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.hascallstatement": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.hascommon": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.hasexternals": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.hasinitvalue": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.hasinitvalueasstring": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.hasnote": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.hasresultnote": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.hasvariables": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isallocatable": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isarray": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isarrayofstrings": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.ischaracter": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.iscomplex": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.iscomplexarray": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.iscomplexfunction": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.iscomplexfunction_warn": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isdouble": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isdummyroutine": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isexternal": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isfalse": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isfunction": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isfunction_wrap": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isint1array": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isinteger": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_aligned16": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_aligned4": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_aligned8": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_aux": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_c": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_cache": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_callback": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_copy": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_hide": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_in": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_inout": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_inplace": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_nothide": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_out": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isintent_overwrite": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.islogical": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.islogicalfunction": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.islong_complex": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.islong_double": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.islong_doublefunction": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.islong_long": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.islong_longfunction": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.ismodule": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.ismoduleroutine": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.ismutable": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isoptional": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isprivate": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isreal": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isrequired": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isroutine": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isscalar": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.issigned_array": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.issigned_chararray": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.issigned_long_longarray": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.issigned_shortarray": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isstring": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isstringarray": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isstringfunction": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.issubroutine": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.issubroutine_wrap": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isthreadsafe": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.istrue": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isunsigned": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isunsigned_char": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isunsigned_chararray": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isunsigned_long_long": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isunsigned_long_longarray": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isunsigned_short": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isunsigned_shortarray": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.isunsignedarray": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.l_and": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.l_not": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.l_or": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.outmess": {
  "lineno": 62,
  "symbols_in_volume": [
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.replace": {
  "lineno": 745,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.stripcomma": {
  "lineno": 739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.throw_error": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.auxfuncs.throw_error.__call__": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.auxfuncs.throw_error.__init__": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.capi_maps": {
  "lineno": null,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "module"
 },
 "numpy.f2py.capi_maps.cb_routsign2map": {
  "lineno": 739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.capi_maps.cb_sign2map": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.capi_maps.common_sign2map": {
  "lineno": 821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.capi_maps.getarrdims": {
  "lineno": 320,
  "symbols_in_volume": [
   "copy.copy",
   "re.match"
  ],
  "type": "function"
 },
 "numpy.f2py.capi_maps.getarrdocsign": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.capi_maps.getctype": {
  "lineno": 243,
  "symbols_in_volume": [
   "os.getcwd"
  ],
  "type": "function"
 },
 "numpy.f2py.capi_maps.getinit": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.capi_maps.getpydocsign": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.capi_maps.getstrlength": {
  "lineno": 292,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "numpy.f2py.capi_maps.load_f2cmap_file": {
  "lineno": 178,
  "symbols_in_volume": [
   "copy.deepcopy",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "numpy.f2py.capi_maps.modsign2map": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.capi_maps.routsign2map": {
  "lineno": 612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.capi_maps.sign2map": {
  "lineno": 508,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "numpy.f2py.cb_rules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.cb_rules.buildcallback": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.cb_rules.buildcallbacks": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.cfuncs": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "module"
 },
 "numpy.f2py.cfuncs.append_needs": {
  "lineno": 1164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.cfuncs.buildcfuncs": {
  "lineno": 1149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.cfuncs.get_needs": {
  "lineno": 1231,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "numpy.f2py.common_rules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.common_rules.buildhooks": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.cadd": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.dadd": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.fadd": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.iadd": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.common_rules.findcommonblocks": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.compile": {
  "lineno": 19,
  "symbols_in_volume": [
   "os.close",
   "os.name",
   "os.remove",
   "shlex.split",
   "subprocess.CalledProcessError",
   "subprocess.check_output",
   "sys.executable",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran": {
  "lineno": null,
  "symbols_in_volume": [
   "re.I",
   "re.S",
   "re._MAXCACHE",
   "re.compile",
   "sys.argv"
  ],
  "type": "module"
 },
 "numpy.f2py.crackfortran._calc_depend_dict": {
  "lineno": 2340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran._ensure_exprdict": {
  "lineno": 2947,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran._eval_length": {
  "lineno": 2503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran._eval_scalar": {
  "lineno": 2511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran._get_depend_dict": {
  "lineno": 2320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran._is_intent_callback": {
  "lineno": 884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran._kind_func": {
  "lineno": 2368,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran._resolvenameargspattern": {
  "lineno": 891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran._selected_int_kind_func": {
  "lineno": 2379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran._selected_real_kind_func": {
  "lineno": 2395,
  "symbols_in_volume": [
   "platform.machine"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran._simplifyargs": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.analyzeargs": {
  "lineno": 2913,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.analyzebody": {
  "lineno": 2052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.analyzecommon": {
  "lineno": 2009,
  "symbols_in_volume": [
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.analyzeline": {
  "lineno": 902,
  "symbols_in_volume": [
   "copy.deepcopy",
   "os.path.basename",
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.analyzevars": {
  "lineno": 2525,
  "symbols_in_volume": [
   "copy.copy",
   "re.I",
   "re.compile",
   "re.match"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.appenddecl": {
  "lineno": 840,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.appendmultiline": {
  "lineno": 1449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.buildimplicitrules": {
  "lineno": 2086,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.common2fortran": {
  "lineno": 3079,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.crack2fortran": {
  "lineno": 3262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.crack2fortrangen": {
  "lineno": 3004,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.crackfortran": {
  "lineno": 3249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.crackline": {
  "lineno": 642,
  "symbols_in_volume": [
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.cracktypespec": {
  "lineno": 1679,
  "symbols_in_volume": [
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.cracktypespec0": {
  "lineno": 1459,
  "symbols_in_volume": [
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.determineexprtype": {
  "lineno": 2959,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.expr2name": {
  "lineno": 2876,
  "symbols_in_volume": [
   "string.ascii_lowercase",
   "string.digits"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.get_parameters": {
  "lineno": 2414,
  "symbols_in_volume": [
   "copy.copy",
   "re.I",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.get_sorted_names": {
  "lineno": 2348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.get_usedict": {
  "lineno": 1808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.get_useparameters": {
  "lineno": 1817,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.getarrlen": {
  "lineno": 2168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.getblockname": {
  "lineno": 1791,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.getextension": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.getlincoef": {
  "lineno": 2114,
  "symbols_in_volume": [
   "re.I",
   "re.compile",
   "re.search"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.is_free_format": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.markinnerspaces": {
  "lineno": 1511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.markoutercomma": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.markouterparen": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.myeval": {
  "lineno": 2105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.outmess": {
  "lineno": 231,
  "symbols_in_volume": [
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.postcrack": {
  "lineno": 1879,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.postcrack2": {
  "lineno": 1847,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.readfortrancode": {
  "lineno": 328,
  "symbols_in_volume": [
   "fileinput.FileInput",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.join",
   "os.path.splitext",
   "os.pathsep.join",
   "re.I",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.removespaces": {
  "lineno": 1496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.reset_global_f2py_vars": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.rmbadname": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.rmbadname1": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.setattrspec": {
  "lineno": 1736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.setcharselector": {
  "lineno": 1777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.setkindselector": {
  "lineno": 1763,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.setmesstext": {
  "lineno": 1799,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.sortvarnames": {
  "lineno": 1975,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.split_by_unquoted": {
  "lineno": 611,
  "symbols_in_volume": [
   "re.compile",
   "re.escape"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.true_intent_list": {
  "lineno": 3113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.undo_rmbadname": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.undo_rmbadname1": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.unmarkouterparen": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.updatevars": {
  "lineno": 1535,
  "symbols_in_volume": [
   "copy.copy",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.f2py.crackfortran.use2fortran": {
  "lineno": 3089,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.crackfortran.vars2fortran": {
  "lineno": 3127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.diagnose": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.diagnose.run": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.__file__",
   "numpy.__version__",
   "numpy.distutils.__file__",
   "numpy.distutils.__version__",
   "numpy.f2py.f2py2e.__file__",
   "numpy.f2py.f2py2e.__version__.version",
   "numpy_distutils.__file__",
   "numpy_distutils.command.build_flib.all_compilers",
   "numpy_distutils.cpuinfo.cpuinfo",
   "numpy_distutils.fcompiler.show_fcompilers",
   "numpy_distutils.numpy_distutils_version.numpy_distutils_version",
   "os.chdir",
   "os.getcwd",
   "os.name",
   "sys.exc_info",
   "sys.path",
   "sys.platform",
   "sys.prefix",
   "sys.version",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "numpy.f2py.diagnose.run_command": {
  "lineno": 7,
  "symbols_in_volume": [
   "os.system"
  ],
  "type": "function"
 },
 "numpy.f2py.f2py2e": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.__version__",
   "pprint.pprint",
   "sys.stderr.write"
  ],
  "type": "module"
 },
 "numpy.f2py.f2py2e.buildmodules": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.f2py2e.callcrackfortran": {
  "lineno": 326,
  "symbols_in_volume": [
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "numpy.f2py.f2py2e.dict_append": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.f2py2e.filter_files": {
  "lineno": 473,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.f2py.f2py2e.get_prefix": {
  "lineno": 491,
  "symbols_in_volume": [
   "os.path.dirname"
  ],
  "type": "function"
 },
 "numpy.f2py.f2py2e.main": {
  "lineno": 667,
  "symbols_in_volume": [
   "numpy.distutils.system_info.show_all",
   "sys.argv",
   "sys.argv.append",
   "sys.argv.remove",
   "sys.exit",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "numpy.f2py.f2py2e.run_compile": {
  "lineno": 496,
  "symbols_in_volume": [
   "numpy.distutils.command.build_src.get_f2py_modulename",
   "numpy.distutils.core.Extension",
   "numpy.distutils.core.setup",
   "numpy.distutils.fcompiler.fcompiler_class.keys",
   "numpy.distutils.fcompiler.load_all_fcompiler_classes",
   "numpy.distutils.misc_util.dict_append",
   "numpy.distutils.system_info.get_info",
   "os.path.exists",
   "re.compile",
   "shutil.rmtree",
   "sys.argv",
   "sys.argv.extend",
   "sys.argv.index",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.f2py.f2py2e.run_main": {
  "lineno": 406,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.basename",
   "os.path.dirname",
   "os.path.join",
   "sys.argv"
  ],
  "type": "function"
 },
 "numpy.f2py.f2py2e.scaninputline": {
  "lineno": 178,
  "symbols_in_volume": [
   "os.mkdir",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join",
   "os.pathsep",
   "sys.exit"
  ],
  "type": "function"
 },
 "numpy.f2py.f2py_testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.f2py_testing.cmdline": {
  "lineno": 7,
  "symbols_in_volume": [
   "re.compile",
   "sys.argv"
  ],
  "type": "function"
 },
 "numpy.f2py.f2py_testing.run": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.testing.jiffies",
   "numpy.testing.memusage"
  ],
  "type": "function"
 },
 "numpy.f2py.f90mod_rules": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.intp"
  ],
  "type": "module"
 },
 "numpy.f2py.f90mod_rules.buildhooks": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.cadd": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.dadd": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.fadd": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.iadd": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.findf90modules": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.func2subr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.func2subr.assubr": {
  "lineno": 264,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "numpy.f2py.func2subr.createfuncwrapper": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.func2subr.createfuncwrapper.add": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.func2subr.createsubrwrapper": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.func2subr.createsubrwrapper.add": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.func2subr.var2fixfortran": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.rules": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get",
   "time.asctime",
   "time.gmtime",
   "time.time"
  ],
  "type": "module"
 },
 "numpy.f2py.rules.buildapi": {
  "lineno": 1337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.rules.buildmodule": {
  "lineno": 1156,
  "symbols_in_volume": [
   "copy.deepcopy",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.f2py.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "__version__.version",
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "numpy.f2py.setup.configuration": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration"
  ],
  "type": "function"
 },
 "numpy.f2py.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_array_from_pyobj": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.clongdouble",
   "numpy.intp",
   "sys.platform"
  ],
  "type": "module"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.__init__": {
  "lineno": 195,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.array",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.__str__": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.arr_equal": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.alltrue"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.has_shared_memory": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__getattr__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__init__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__repr__": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__str__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.is_intent": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.is_intent_exact": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestIntent": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestIntent.test_in_out": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.setup_type": {
  "lineno": 309,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_c_copy_in_from_23casttype": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_c_in_from_23casttype": {
  "lineno": 395,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_c_in_from_23seq": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_c_inout_23seq": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_cache_hidden": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_f_copy_in_from_23casttype": {
  "lineno": 405,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_f_in_from_23casttype": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_f_inout_23seq": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_hidden": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_in_cache_from_2casttype": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_in_cache_from_2casttype_failure": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_in_copy_from_2casttype": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_in_from_23casttype": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_in_from_2casttype": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_in_from_2seq": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_inout_2seq": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_inplace": {
  "lineno": 549,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_inplace_from_casttype": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_optional_from_23seq": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_optional_from_2seq": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestSharedMemory.test_optional_none": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.__new__": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.core.multiarray.typeinfo.items",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type._init": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.core.multiarray.typeinfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.all_types": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.cast_types": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.equal_types": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.core.multiarray.typeinfo.alignment"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.larger_types": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.core.multiarray.typeinfo.alignment"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.smaller_types": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.core.multiarray.typeinfo.alignment"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.flags2names": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.flags_info": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.setup_module": {
  "lineno": 16,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_assumed_shape": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_assumed_shape.TestAssumedShapeSumExample": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_assumed_shape.TestAssumedShapeSumExample.test_all": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_assumed_shape.TestF2cmapOption": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_assumed_shape.TestF2cmapOption.setup": {
  "lineno": 37,
  "symbols_in_volume": [
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_assumed_shape.TestF2cmapOption.teardown": {
  "lineno": 52,
  "symbols_in_volume": [
   "os.unlink"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_assumed_shape._path": {
  "lineno": 9,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_block_docstring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_block_docstring.TestBlockDocString": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_block_docstring.TestBlockDocString.test_block_docstring": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.testing.IS_PYPY",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif",
   "pytest.mark.xfail",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_callback": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function": {
  "lineno": 97,
  "symbols_in_volume": [
   "math.degrees",
   "math.pi",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function.A": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function.A.__call__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function.A.mth": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_all": {
  "lineno": 62,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_docstring": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.testing.IS_PYPY",
   "numpy.testing.assert_equal",
   "pytest.mark.xfail",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_string_callback": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "pytest.mark.skipif",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_string_callback.callback": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_string_callback_array": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.zeros",
   "pytest.mark.skipif",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_string_callback_array.callback": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_common.TestCommonBlock": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_common.TestCommonBlock.test_common_block": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "pytest.mark.skipif",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_common._path": {
  "lineno": 10,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_compile_function": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_compile_function.setup_module": {
  "lineno": 16,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_compile_function.test_compile_from_strings": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "os.chdir",
   "os.getcwd",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_compile_function.test_f2py_init_compile": {
  "lineno": 25,
  "symbols_in_volume": [
   "importlib.import_module",
   "numpy.testing.assert_equal",
   "os.chdir",
   "os.getcwd",
   "os.path.join",
   "pytest.mark.leaks_references",
   "pytest.mark.parametrize",
   "sys.modules",
   "sys.platform",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_compile_function.test_f2py_init_compile_bad_cmd": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "sys.executable"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_compile_function.test_f2py_init_compile_failure": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_crackfortran": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_crackfortran.TestNoSpace": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_crackfortran.TestNoSpace.test_module": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_crackfortran.TestPublicPrivate": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_crackfortran.TestPublicPrivate.test_defaultPrivate": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.f2py.crackfortran.crackfortran",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_crackfortran.TestPublicPrivate.test_defaultPublic": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.f2py.crackfortran.crackfortran",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_kind": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_kind.TestKind": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_kind.TestKind.test_all": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.f2py.crackfortran._selected_int_kind_func",
   "numpy.f2py.crackfortran._selected_real_kind_func",
   "numpy.testing.assert_",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_kind._path": {
  "lineno": 12,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_mixed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_mixed.TestMixed": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_mixed.TestMixed.test_all": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_mixed.TestMixed.test_docstring": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.testing.IS_PYPY",
   "numpy.testing.assert_equal",
   "pytest.mark.xfail",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_mixed._path": {
  "lineno": 9,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_parameter.TestParameters": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_both": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_compound_int": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_integer_int": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_integer_long": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_no": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_non_compound_int": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.testing.assert_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_real_double": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_real_single": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_sum": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter._path": {
  "lineno": 10,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_quoted_character": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_quoted_character.TestQuotedCharacter": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_quoted_character.TestQuotedCharacter.test_quoted_character": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.skipif",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_regression.TestIntentInOut": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_regression.TestIntentInOut.test_inout": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_regression._path": {
  "lineno": 10,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_character": {
  "lineno": null,
  "symbols_in_volume": [
   "platform.machine"
  ],
  "type": "module"
 },
 "numpy.f2py.tests.test_return_character.TestF77ReturnCharacter": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_character.TestF77ReturnCharacter.test_all": {
  "lineno": 83,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_character.TestF90ReturnCharacter": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_character.TestF90ReturnCharacter.test_all": {
  "lineno": 142,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_character.TestReturnCharacter": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_character.TestReturnCharacter.check_function": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_complex": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_return_complex.TestF77ReturnComplex": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_complex.TestF77ReturnComplex.test_all": {
  "lineno": 103,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_complex.TestF90ReturnComplex": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_complex.TestF90ReturnComplex.test_all": {
  "lineno": 161,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_complex.TestReturnComplex": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_complex.TestReturnComplex.check_function": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_integer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_return_integer.TestF77ReturnInteger": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_integer.TestF77ReturnInteger.test_all": {
  "lineno": 102,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_integer.TestF90ReturnInteger": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_integer.TestF90ReturnInteger.test_all": {
  "lineno": 172,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_integer.TestReturnInteger": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_integer.TestReturnInteger.check_function": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_logical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_return_logical.TestF77ReturnLogical": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_logical.TestF77ReturnLogical.test_all": {
  "lineno": 111,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_logical.TestF90ReturnLogical": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_logical.TestF90ReturnLogical.test_all": {
  "lineno": 181,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_logical.TestReturnLogical": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_logical.TestReturnLogical.check_function": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_return_real.TestCReturnReal": {
  "lineno": 53,
  "symbols_in_volume": [
   "platform.system",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestCReturnReal.test_all": {
  "lineno": 89,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.TestF77ReturnReal": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestF77ReturnReal.test_all": {
  "lineno": 143,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.TestF90ReturnReal": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestF90ReturnReal.test_all": {
  "lineno": 201,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.TestReturnReal": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestReturnReal.check_function": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_semicolon_split": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_semicolon_split.TestCallstatement": {
  "lineno": 35,
  "symbols_in_volume": [
   "platform.system",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.f2py.tests.test_semicolon_split.TestCallstatement.test_callstatement": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_semicolon_split.TestMultiline": {
  "lineno": 7,
  "symbols_in_volume": [
   "platform.system",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.f2py.tests.test_semicolon_split.TestMultiline.test_multiline": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_size": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample.test_all": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample.test_flatten": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample.test_transpose": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_size._path": {
  "lineno": 8,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_string": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.test_string.TestString": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.test_string.TestString.test_char": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.test_string._path": {
  "lineno": 9,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.tests.util.F2PyTest": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.f2py.tests.util.F2PyTest.setup": {
  "lineno": 322,
  "symbols_in_volume": [
   "pytest.skip",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.util._cleanup": {
  "lineno": 32,
  "symbols_in_volume": [
   "shutil.rmtree",
   "sys.path.remove"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.util._get_compiler_status": {
  "lineno": 170,
  "symbols_in_volume": [
   "os.path.join",
   "re.search",
   "shutil.rmtree",
   "subprocess.PIPE",
   "subprocess.Popen",
   "subprocess.STDOUT",
   "sys.executable",
   "sys.path",
   "tempfile.mkdtemp",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.util._memoize": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.util._memoize.wrapper": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.util.build_code": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.util.build_module": {
  "lineno": 91,
  "symbols_in_volume": [
   "importlib.import_module",
   "numpy.compat.asstr",
   "os.chdir",
   "os.getcwd",
   "os.path.basename",
   "os.path.isfile",
   "os.path.join",
   "os.path.splitext",
   "os.unlink",
   "shutil.copyfile",
   "subprocess.PIPE",
   "subprocess.Popen",
   "subprocess.STDOUT",
   "sys.executable",
   "sys.path"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.util.build_module_distutils": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.compat.asbytes",
   "numpy.compat.asstr",
   "os.chdir",
   "os.getcwd",
   "os.path.basename",
   "os.path.isfile",
   "os.path.join",
   "os.unlink",
   "shutil.copyfile",
   "subprocess.PIPE",
   "subprocess.Popen",
   "subprocess.STDOUT",
   "sys.executable",
   "sys.modules",
   "sys.path",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.util.get_module_dir": {
  "lineno": 46,
  "symbols_in_volume": [
   "atexit.register",
   "sys.path",
   "sys.path.insert",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.util.get_temp_module_name": {
  "lineno": 56,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "numpy.f2py.tests.util.has_c_compiler": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.util.has_f77_compiler": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.tests.util.has_f90_compiler": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.use_rules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.f2py.use_rules.buildusevar": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.f2py.use_rules.buildusevars": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy._pytesttester.PytestTester"
  ],
  "type": "module"
 },
 "numpy.fft._pocketfft": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.fft._pocketfft._cook_nd_args": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.core.take"
  ],
  "type": "function"
 },
 "numpy.fft._pocketfft._fft_dispatcher": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft._pocketfft._fftn_dispatcher": {
  "lineno": 656,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft._pocketfft._raw_fft": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.core.swapaxes",
   "numpy.core.zeros"
  ],
  "type": "function"
 },
 "numpy.fft._pocketfft._raw_fftnd": {
  "lineno": 646,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.fft._pocketfft._unitary": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft._pocketfft.fft": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.sqrt"
  ],
  "type": "function"
 },
 "numpy.fft._pocketfft.fft2": {
  "lineno": 856,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft._pocketfft.fftn": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft._pocketfft.hfft": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.conjugate",
   "numpy.core.sqrt"
  ],
  "type": "function"
 },
 "numpy.fft._pocketfft.ifft": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.sqrt"
  ],
  "type": "function"
 },
 "numpy.fft._pocketfft.ifft2": {
  "lineno": 947,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft._pocketfft.ifftn": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft._pocketfft.ihfft": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.conjugate",
   "numpy.core.sqrt"
  ],
  "type": "function"
 },
 "numpy.fft._pocketfft.irfft": {
  "lineno": 375,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.sqrt"
  ],
  "type": "function"
 },
 "numpy.fft._pocketfft.irfft2": {
  "lineno": 1269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft._pocketfft.irfftn": {
  "lineno": 1165,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.fft._pocketfft.rfft": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.sqrt"
  ],
  "type": "function"
 },
 "numpy.fft._pocketfft.rfft2": {
  "lineno": 1127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft._pocketfft.rfftn": {
  "lineno": 1035,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.fft.helper": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.compat.integer_types",
   "numpy.core.integer"
  ],
  "type": "module"
 },
 "numpy.fft.helper._fftshift_dispatcher": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft.helper.fftfreq": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.compat.integer_types",
   "numpy.core.arange",
   "numpy.core.empty",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.fft.helper.fftshift": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.compat.integer_types",
   "numpy.core.asarray",
   "numpy.core.overrides.array_function_dispatch",
   "numpy.core.roll"
  ],
  "type": "function"
 },
 "numpy.fft.helper.ifftshift": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.compat.integer_types",
   "numpy.core.asarray",
   "numpy.core.overrides.array_function_dispatch",
   "numpy.core.roll"
  ],
  "type": "function"
 },
 "numpy.fft.helper.rfftfreq": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.compat.integer_types",
   "numpy.core.arange",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.fft.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "numpy.fft.setup.configuration": {
  "lineno": 3,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.fft.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.fft.tests.test_helper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.fft.tests.test_helper.TestFFTFreq": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestFFTFreq.test_definition": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.fft.fftfreq",
   "numpy.pi",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_axes_keyword": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.fft.fftshift",
   "numpy.fft.ifftshift",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_definition": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.fft.fftshift",
   "numpy.fft.ifftshift",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_equal_to_original": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.fft.fftshift",
   "numpy.fft.ifftshift",
   "numpy.random.rand",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_equal_to_original.original_fftshift": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.compat.integer_types",
   "numpy.core.arange",
   "numpy.core.asarray",
   "numpy.core.concatenate",
   "numpy.core.take"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_equal_to_original.original_ifftshift": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.compat.integer_types",
   "numpy.core.arange",
   "numpy.core.asarray",
   "numpy.core.concatenate",
   "numpy.core.take"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_inverse": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.fft.fftshift",
   "numpy.fft.ifftshift",
   "numpy.random.random",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_uneven_dims": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.fft.fftshift",
   "numpy.fft.ifftshift",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestIRFFTN": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestIRFFTN.test_not_last_axis_success": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.fft.irfftn",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestRFFTFreq": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestRFFTFreq.test_definition": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.fft.rfftfreq",
   "numpy.pi",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_all_1d_norm_preserving": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.fft.fft",
   "numpy.fft.hfft",
   "numpy.fft.ifft",
   "numpy.fft.ihfft",
   "numpy.fft.irfft",
   "numpy.fft.rfft",
   "numpy.linalg.norm",
   "numpy.random.random",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_axes": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.fft.fftn",
   "numpy.fft.ifftn",
   "numpy.fft.irfftn",
   "numpy.fft.rfftn",
   "numpy.random.random",
   "numpy.testing.assert_allclose",
   "numpy.transpose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_dtypes": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.fft.fft",
   "numpy.fft.ifft",
   "numpy.fft.irfft",
   "numpy.fft.rfft",
   "numpy.half",
   "numpy.longdouble",
   "numpy.random.random",
   "numpy.single",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_fft": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.fft.fft",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_fft2": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.fft.fft",
   "numpy.fft.fft2",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_fftn": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.fft.fft",
   "numpy.fft.fftn",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_hfft": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.fft.fft",
   "numpy.fft.hfft",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_identity": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.fft.fft",
   "numpy.fft.ifft",
   "numpy.fft.irfft",
   "numpy.fft.rfft",
   "numpy.random.random",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_ifft": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.fft.fft",
   "numpy.fft.ifft",
   "numpy.random.random",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_ifft2": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.fft.ifft",
   "numpy.fft.ifft2",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_ifftn": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.fft.ifft",
   "numpy.fft.ifftn",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_ihttf": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.fft.hfft",
   "numpy.fft.ihfft",
   "numpy.random.random",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_irfft": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.fft.irfft",
   "numpy.fft.rfft",
   "numpy.random.random",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_irfft2": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.fft.irfft2",
   "numpy.fft.rfft2",
   "numpy.random.random",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_irfftn": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.fft.irfftn",
   "numpy.fft.rfftn",
   "numpy.random.random",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_rfft": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.fft.fft",
   "numpy.fft.rfft",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_rfft2": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.fft.fft2",
   "numpy.fft.rfft2",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFT1D.test_rfftn": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.fft.fftn",
   "numpy.fft.rfftn",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFTShift": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.fft.tests.test_pocketfft.TestFFTShift.test_fft_n": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.fft.fft",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFTThreadSafe": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.fft.tests.test_pocketfft.TestFFTThreadSafe._test_mtsame": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "queue.Queue",
   "threading.Thread"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFTThreadSafe._test_mtsame.worker": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFTThreadSafe.test_fft": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.fft.fft",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFTThreadSafe.test_ifft": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.fft.ifft",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFTThreadSafe.test_irfft": {
  "lineno": 253,
  "symbols_in_volume": [
   "numpy.fft.irfft",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.TestFFTThreadSafe.test_rfft": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.fft.rfft",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.fft1": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.exp",
   "numpy.pi",
   "numpy.sum"
  ],
  "type": "function"
 },
 "numpy.fft.tests.test_pocketfft.test_fft_with_order": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.asfortranarray",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.fft.fft",
   "numpy.fft.fft2",
   "numpy.fft.fftn",
   "numpy.fft.ifft",
   "numpy.fft.ifft2",
   "numpy.fft.ifftn",
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.log2",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy._pytesttester.PytestTester"
  ],
  "type": "module"
 },
 "numpy.lib._datasource": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib._datasource.DataSource": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.lib._datasource.DataSource.__del__": {
  "lineno": 258,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource.__init__": {
  "lineno": 248,
  "symbols_in_volume": [
   "os.curdir",
   "os.path.abspath",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource._cache": {
  "lineno": 317,
  "symbols_in_volume": [
   "contextlib.closing",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "shutil.copyfile",
   "shutil.copyfileobj",
   "urllib.error.URLError",
   "urllib.request.urlopen"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource._findfile": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource._isurl": {
  "lineno": 302,
  "symbols_in_volume": [
   "urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource._iswritemode": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource._iszip": {
  "lineno": 263,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource._possible_names": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource._sanitize_relative_path": {
  "lineno": 419,
  "symbols_in_volume": [
   "os.pardir",
   "os.path.normpath",
   "os.path.splitdrive",
   "os.sep"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource._splitzipext": {
  "lineno": 280,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource.abspath": {
  "lineno": 377,
  "symbols_in_volume": [
   "os.path.join",
   "urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource.exists": {
  "lineno": 433,
  "symbols_in_volume": [
   "os.path.exists",
   "urllib.error.URLError",
   "urllib.request.urlopen"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.DataSource.open": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource.Repository": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib._datasource.Repository.__del__": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource.Repository.__init__": {
  "lineno": 578,
  "symbols_in_volume": [
   "os.curdir"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.Repository._findfile": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource.Repository._fullpath": {
  "lineno": 586,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.Repository.abspath": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource.Repository.exists": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource.Repository.listdir": {
  "lineno": 688,
  "symbols_in_volume": [
   "os.listdir"
  ],
  "type": "function"
 },
 "numpy.lib._datasource.Repository.open": {
  "lineno": 656,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource._FileOpeners": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib._datasource._FileOpeners.__getitem__": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource._FileOpeners.__init__": {
  "lineno": 101,
  "symbols_in_volume": [
   "io.open"
  ],
  "type": "function"
 },
 "numpy.lib._datasource._FileOpeners._load": {
  "lineno": 105,
  "symbols_in_volume": [
   "bz2.open",
   "gzip.open",
   "lzma.open"
  ],
  "type": "function"
 },
 "numpy.lib._datasource._FileOpeners.keys": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource._check_mode": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._datasource.open": {
  "lineno": 157,
  "symbols_in_volume": [
   "os.curdir"
  ],
  "type": "function"
 },
 "numpy.lib._iotools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib._iotools.ConversionWarning": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib._iotools.ConverterError": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib._iotools.ConverterLockError": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib._iotools.LineSplitter": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib._iotools.LineSplitter.__call__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter.__init__": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._delimited_splitter": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._fixedwidth_splitter": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._variablewidth_splitter": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter.autostrip": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib._iotools.NameValidator.__call__": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator.__init__": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator.validate": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.compat.asbytes",
   "numpy.compat.asunicode",
   "numpy.core.numeric.bool_",
   "numpy.core.numeric.complex128",
   "numpy.core.numeric.complexfloating",
   "numpy.core.numeric.dtype",
   "numpy.core.numeric.float64",
   "numpy.core.numeric.floating",
   "numpy.core.numeric.int64",
   "numpy.core.numeric.int_",
   "numpy.core.numeric.integer",
   "numpy.core.numeric.longdouble",
   "numpy.core.numeric.nan",
   "numpy.core.numeric.string_",
   "numpy.core.numeric.unicode_"
  ],
  "type": "class"
 },
 "numpy.lib._iotools.StringConverter.__call__": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.__init__": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.int64",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._do_upgrade": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._dtypeortype": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._find_map_entry": {
  "lineno": 583,
  "symbols_in_volume": [
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._getdtype": {
  "lineno": 520,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._getsubdtype": {
  "lineno": 525,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._loose_call": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._strict_call": {
  "lineno": 676,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.iterupgrade": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.update": {
  "lineno": 764,
  "symbols_in_volume": [
   "numpy.iterable"
  ],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.upgrade": {
  "lineno": 724,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.upgrade_mapper": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools._decode_line": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.compat.bytes"
  ],
  "type": "function"
 },
 "numpy.lib._iotools._is_bytes_like": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools._is_string_like": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.easy_dtype": {
  "lineno": 822,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.lib._iotools.flatten_dtype": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "numpy.lib._iotools.has_nested_fields": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._iotools.str2bool": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib._version.NumpyVersion": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib._version.NumpyVersion.__eq__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__ge__": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__gt__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__init__": {
  "lineno": 55,
  "symbols_in_volume": [
   "re.match",
   "re.search"
  ],
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__le__": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__lt__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__ne__": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__repr": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion._compare": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion._compare_pre_release": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion._compare_version": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraypad": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.arraypad._as_pairs": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.broadcast_to",
   "numpy.intp",
   "numpy.round"
  ],
  "type": "function"
 },
 "numpy.lib.arraypad._get_edges": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraypad._get_linear_ramps": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "numpy.lib.arraypad._get_stats": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.amin"
  ],
  "type": "function"
 },
 "numpy.lib.arraypad._pad_dispatcher": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraypad._pad_simple": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.lib.arraypad._round_if_needed": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "numpy.lib.arraypad._set_pad_area": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraypad._set_reflect_both": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraypad._set_wrap_both": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraypad._slice_at_axis": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraypad._view_roi": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraypad.pad": {
  "lineno": 532,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.amin",
   "numpy.asarray",
   "numpy.core.overrides.array_function_dispatch",
   "numpy.lib.index_tricks.ndindex",
   "numpy.mean",
   "numpy.median",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.lib.arraysetops": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.lib.arraysetops._ediff1d_dispatcher": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraysetops._in1d_dispatcher": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraysetops._intersect1d_dispatcher": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraysetops._isin_dispatcher": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraysetops._setdiff1d_dispatcher": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraysetops._setxor1d_dispatcher": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraysetops._union1d_dispatcher": {
  "lineno": 711,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraysetops._unique1d": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.bool_",
   "numpy.concatenate",
   "numpy.cumsum",
   "numpy.diff",
   "numpy.empty",
   "numpy.intp",
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "numpy.lib.arraysetops._unique_dispatcher": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraysetops._unpack_tuple": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arraysetops.ediff1d": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.can_cast",
   "numpy.empty",
   "numpy.subtract"
  ],
  "type": "function"
 },
 "numpy.lib.arraysetops.in1d": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.empty",
   "numpy.ones",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.arraysetops.intersect1d": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.asanyarray",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "numpy.lib.arraysetops.isin": {
  "lineno": 612,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.arraysetops.setdiff1d": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.arraysetops.setxor1d": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "numpy.lib.arraysetops.union1d": {
  "lineno": 715,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "numpy.lib.arraysetops.unique": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.asanyarray",
   "numpy.ascontiguousarray",
   "numpy.empty",
   "numpy.intp",
   "numpy.moveaxis",
   "numpy.prod"
  ],
  "type": "function"
 },
 "numpy.lib.arraysetops.unique.reshape_uniq": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.lib.arrayterator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.arrayterator.Arrayterator": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.arrayterator.Arrayterator.__array__": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__getattr__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__getitem__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__iter__": {
  "lineno": 175,
  "symbols_in_volume": [
   "functools.reduce",
   "operator.mul"
  ],
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.flat": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.shape": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.financial": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.lib.financial._convert_when": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.lib.financial._fv_dispatcher": {
  "lineno": 50,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.financial._g_div_gp": {
  "lineno": 633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.financial._ipmt_dispatcher": {
  "lineno": 350,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.financial._irr_dispatcher": {
  "lineno": 737,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.financial._mirr_dispatcher": {
  "lineno": 914,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.financial._nper_dispatcher": {
  "lineno": 263,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.financial._npv_dispatcher": {
  "lineno": 830,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.financial._pmt_dispatcher": {
  "lineno": 155,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.financial._ppmt_dispatcher": {
  "lineno": 474,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.financial._pv_dispatcher": {
  "lineno": 521,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.financial._rate_dispatcher": {
  "lineno": 641,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.financial._rbl": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.financial.fv": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.lib.financial.ipmt": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.broadcast_arrays",
   "numpy.logical_and",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.lib.financial.irr": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argmin",
   "numpy.nan",
   "numpy.roots"
  ],
  "type": "function"
 },
 "numpy.lib.financial.mirr": {
  "lineno": 920,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.abs",
   "numpy.asarray",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.lib.financial.nper": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.errstate",
   "numpy.log",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.lib.financial.npv": {
  "lineno": 836,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.financial.pmt": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.lib.financial.ppmt": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.financial.pv": {
  "lineno": 527,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.lib.financial.rate": {
  "lineno": 655,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.all",
   "numpy.asarray",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.lib.format": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.format._check_version": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.format._filter_header": {
  "lineno": 523,
  "symbols_in_volume": [
   "io.StringIO",
   "tokenize.NAME",
   "tokenize.NUMBER",
   "tokenize.generate_tokens",
   "tokenize.untokenize"
  ],
  "type": "function"
 },
 "numpy.lib.format._has_metadata": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.format._read_array_header": {
  "lineno": 558,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.lib.utils.safe_eval",
   "struct.calcsize",
   "struct.unpack"
  ],
  "type": "function"
 },
 "numpy.lib.format._read_bytes": {
  "lineno": 877,
  "symbols_in_volume": [
   "io.BlockingIOError"
  ],
  "type": "function"
 },
 "numpy.lib.format._wrap_header": {
  "lineno": 354,
  "symbols_in_volume": [
   "struct.calcsize",
   "struct.error",
   "struct.pack"
  ],
  "type": "function"
 },
 "numpy.lib.format._wrap_header_guess_version": {
  "lineno": 379,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.format._write_array_header": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.format.descr_to_dtype": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.lib.format.dtype_to_descr": {
  "lineno": 246,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.format.header_data_from_array_1_0": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.format.magic": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.format.open_memmap": {
  "lineno": 776,
  "symbols_in_volume": [
   "numpy.compat.isfileobj",
   "numpy.compat.os_fspath",
   "numpy.dtype",
   "numpy.memmap"
  ],
  "type": "function"
 },
 "numpy.lib.format.read_array": {
  "lineno": 683,
  "symbols_in_volume": [
   "numpy.compat.isfileobj",
   "numpy.compat.pickle.load",
   "numpy.frombuffer",
   "numpy.fromfile",
   "numpy.int64",
   "numpy.multiply.reduce",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.lib.format.read_array_header_1_0": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.format.read_array_header_2_0": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.format.read_magic": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.format.write_array": {
  "lineno": 611,
  "symbols_in_volume": [
   "numpy.compat.isfileobj",
   "numpy.compat.pickle.dump",
   "numpy.nditer"
  ],
  "type": "function"
 },
 "numpy.lib.format.write_array_header_1_0": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.format.write_array_header_2_0": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.lib.function_base._angle_dispatcher": {
  "lineno": 1426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._append_dispatcher": {
  "lineno": 4612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._average_dispatcher": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._calculate_shapes": {
  "lineno": 1881,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._chbevl": {
  "lineno": 3049,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._copy_dispatcher": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._corrcoef_dispatcher": {
  "lineno": 2484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._cov_dispatcher": {
  "lineno": 2265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._create_arrays": {
  "lineno": 1887,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.lib.function_base._delete_dispatcher": {
  "lineno": 4232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._diff_dispatcher": {
  "lineno": 1148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._digitize_dispatcher": {
  "lineno": 4674,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._extract_dispatcher": {
  "lineno": 1641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._flip_dispatcher": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._gradient_dispatcher": {
  "lineno": 797,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._i0_1": {
  "lineno": 3061,
  "symbols_in_volume": [
   "numpy.core.umath.exp"
  ],
  "type": "function"
 },
 "numpy.lib.function_base._i0_2": {
  "lineno": 3065,
  "symbols_in_volume": [
   "numpy.core.umath.exp",
   "numpy.core.umath.sqrt"
  ],
  "type": "function"
 },
 "numpy.lib.function_base._i0_dispatcher": {
  "lineno": 3069,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._insert_dispatcher": {
  "lineno": 4417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._interp_dispatcher": {
  "lineno": 1285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._median": {
  "lineno": 3528,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.core.fromnumeric.mean",
   "numpy.core.fromnumeric.partition",
   "numpy.inexact",
   "numpy.issubdtype",
   "numpy.lib.utils._median_nancheck"
  ],
  "type": "function"
 },
 "numpy.lib.function_base._median_dispatcher": {
  "lineno": 3433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._meshgrid_dispatcher": {
  "lineno": 4097,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._msort_dispatcher": {
  "lineno": 3345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._parse_gufunc_signature": {
  "lineno": 1795,
  "symbols_in_volume": [
   "re.findall",
   "re.match"
  ],
  "type": "function"
 },
 "numpy.lib.function_base._parse_input_dimensions": {
  "lineno": 1852,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks._broadcast_shape",
   "numpy.lib.stride_tricks.as_strided"
  ],
  "type": "function"
 },
 "numpy.lib.function_base._percentile_dispatcher": {
  "lineno": 3584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._piecewise_dispatcher": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.iterable"
  ],
  "type": "function"
 },
 "numpy.lib.function_base._place_dispatcher": {
  "lineno": 1697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._quantile_dispatcher": {
  "lineno": 3736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._quantile_is_valid": {
  "lineno": 3860,
  "symbols_in_volume": [
   "numpy.count_nonzero"
  ],
  "type": "function"
 },
 "numpy.lib.function_base._quantile_unchecked": {
  "lineno": 3848,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._quantile_ureduce_func": {
  "lineno": 3873,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.core.numeric.around",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.ceil",
   "numpy.core.numeric.concatenate",
   "numpy.core.numeric.floor",
   "numpy.core.numeric.intp",
   "numpy.core.numeric.take",
   "numpy.core.umath.add",
   "numpy.inexact",
   "numpy.integer",
   "numpy.isnan",
   "numpy.issubdtype",
   "numpy.moveaxis",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.lib.function_base._rot90_dispatcher": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._select_dispatcher": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._sinc_dispatcher": {
  "lineno": 3267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._sort_complex": {
  "lineno": 1544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._trapz_dispatcher": {
  "lineno": 4002,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._trim_zeros": {
  "lineno": 1585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._unwrap_dispatcher": {
  "lineno": 1483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._update_dim_sizes": {
  "lineno": 1818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base._ureduce": {
  "lineno": 3378,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.core.numeric.normalize_axis_tuple"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.angle": {
  "lineno": 1430,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.complexfloating",
   "numpy.core.umath.arctan2",
   "numpy.core.umath.pi"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.append": {
  "lineno": 4616,
  "symbols_in_volume": [
   "numpy.core.fromnumeric.ravel",
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.concatenate"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.asarray_chkfinite": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.core.numeric.asarray",
   "numpy.core.numerictypes.typecodes",
   "numpy.core.overrides.set_module",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.average": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asanyarray",
   "numpy.bool_",
   "numpy.broadcast_to",
   "numpy.integer",
   "numpy.multiply",
   "numpy.result_type"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.bartlett": {
  "lineno": 2672,
  "symbols_in_volume": [
   "numpy.core.numeric.arange",
   "numpy.core.numeric.array",
   "numpy.core.numeric.ones",
   "numpy.core.numeric.where",
   "numpy.core.overrides.set_module",
   "numpy.core.umath.less_equal"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.blackman": {
  "lineno": 2572,
  "symbols_in_volume": [
   "numpy.core.numeric.arange",
   "numpy.core.numeric.array",
   "numpy.core.numeric.ones",
   "numpy.core.overrides.set_module",
   "numpy.core.umath.cos",
   "numpy.core.umath.pi"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.copy": {
  "lineno": 714,
  "symbols_in_volume": [
   "numpy.core.numeric.array"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.corrcoef": {
  "lineno": 2488,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.clip",
   "numpy.core.umath.sqrt",
   "numpy.iscomplexobj",
   "numpy.lib.twodim_base.diag",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.cov": {
  "lineno": 2270,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.around",
   "numpy.array",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.core.fromnumeric.any",
   "numpy.core.fromnumeric.sum",
   "numpy.core.numeric.array",
   "numpy.core.numeric.dot",
   "numpy.float64",
   "numpy.result_type",
   "numpy.true_divide",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.delete": {
  "lineno": 4236,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.empty",
   "numpy.core.numeric.integer",
   "numpy.core.numeric.intp",
   "numpy.core.numeric.ndarray",
   "numpy.core.numeric.ones",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.diff": {
  "lineno": 1152,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.asanyarray",
   "numpy.bool_",
   "numpy.broadcast_to",
   "numpy.concatenate",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.core.numeric.asanyarray",
   "numpy.core.umath.not_equal",
   "numpy.core.umath.subtract"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.digitize": {
  "lineno": 4678,
  "symbols_in_volume": [
   "numpy.core.multiarray._monotonicity",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.complexfloating",
   "numpy.core.numeric.searchsorted",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.disp": {
  "lineno": 1745,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.extract": {
  "lineno": 1645,
  "symbols_in_volume": [
   "numpy.core.fromnumeric.nonzero",
   "numpy.core.fromnumeric.ravel",
   "numpy.core.numeric.take"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.flip": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.normalize_axis_tuple",
   "numpy.s_"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.gradient": {
  "lineno": 802,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.core.numeric.normalize_axis_tuple",
   "numpy.datetime64",
   "numpy.diff",
   "numpy.dtype",
   "numpy.empty_like",
   "numpy.float64",
   "numpy.inexact",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.ndim",
   "numpy.ones",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.hamming": {
  "lineno": 2885,
  "symbols_in_volume": [
   "numpy.core.numeric.arange",
   "numpy.core.numeric.array",
   "numpy.core.numeric.ones",
   "numpy.core.overrides.set_module",
   "numpy.core.umath.cos",
   "numpy.core.umath.pi"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.hanning": {
  "lineno": 2781,
  "symbols_in_volume": [
   "numpy.core.numeric.arange",
   "numpy.core.numeric.array",
   "numpy.core.numeric.ones",
   "numpy.core.overrides.set_module",
   "numpy.core.umath.cos",
   "numpy.core.umath.pi"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.i0": {
  "lineno": 3073,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.insert": {
  "lineno": 4421,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.core.numeric.arange",
   "numpy.core.numeric.array",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.empty",
   "numpy.core.numeric.intp",
   "numpy.core.numeric.ndarray",
   "numpy.core.numeric.ones",
   "numpy.moveaxis",
   "numpy.ndarray",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.interp": {
  "lineno": 1289,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.asarray",
   "numpy.complex128",
   "numpy.concatenate",
   "numpy.core.multiarray.interp",
   "numpy.core.multiarray.interp_complex",
   "numpy.float64",
   "numpy.iscomplexobj"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.iterable": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.kaiser": {
  "lineno": 3138,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.numeric.arange",
   "numpy.core.overrides.set_module",
   "numpy.core.umath.sqrt",
   "numpy.dual.i0"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.median": {
  "lineno": 3438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base.meshgrid": {
  "lineno": 4102,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.broadcast_arrays"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.msort": {
  "lineno": 3349,
  "symbols_in_volume": [
   "numpy.core.numeric.array"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.percentile": {
  "lineno": 3589,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray",
   "numpy.true_divide"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.piecewise": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.concatenate",
   "numpy.core.numeric.array",
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.isscalar",
   "numpy.core.numeric.ndarray",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.place": {
  "lineno": 1701,
  "symbols_in_volume": [
   "numpy.core.multiarray._insert",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.quantile": {
  "lineno": 3741,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.rot90": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.core.numeric.absolute",
   "numpy.core.numeric.arange",
   "numpy.core.numeric.asanyarray",
   "numpy.core.transpose"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.select": {
  "lineno": 624,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.bool_",
   "numpy.broadcast_arrays",
   "numpy.copyto",
   "numpy.full",
   "numpy.result_type"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.sinc": {
  "lineno": 3271,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.core.numeric.where",
   "numpy.core.umath.pi",
   "numpy.core.umath.sin"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.sort_complex": {
  "lineno": 1548,
  "symbols_in_volume": [
   "numpy.core.numeric.array",
   "numpy.core.numeric.complexfloating"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.trapz": {
  "lineno": 4006,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.numeric.asanyarray",
   "numpy.core.umath.add.reduce"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.trim_zeros": {
  "lineno": 1589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base.unwrap": {
  "lineno": 1487,
  "symbols_in_volume": [
   "numpy.core.numeric.array",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.copyto",
   "numpy.core.umath.mod",
   "numpy.core.umath.pi"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.vectorize": {
  "lineno": 1895,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.lib.function_base.vectorize.__call__": {
  "lineno": 2080,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base.vectorize.__call__.func": {
  "lineno": 2099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base.vectorize.__init__": {
  "lineno": 2048,
  "symbols_in_volume": [
   "numpy.core.numeric.dtype",
   "numpy.core.numerictypes.typecodes"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._get_ufunc_and_otypes": {
  "lineno": 2110,
  "symbols_in_volume": [
   "builtins.any",
   "numpy.core.numeric.asarray",
   "numpy.core.umath.frompyfunc"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._get_ufunc_and_otypes._func": {
  "lineno": 2155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._vectorize_call": {
  "lineno": 2179,
  "symbols_in_volume": [
   "numpy.core.numeric.array"
  ],
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._vectorize_call_with_signature": {
  "lineno": 2201,
  "symbols_in_volume": [
   "builtins.any",
   "numpy.broadcast_to",
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.asarray",
   "numpy.ndindex"
  ],
  "type": "function"
 },
 "numpy.lib.histograms": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.lib.histograms._get_bin_edges": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.ceil",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.linspace",
   "numpy.logical_and.reduce",
   "numpy.ndim",
   "numpy.result_type",
   "operator.index"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._get_outer_edges": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._hist_bin_auto": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.histograms._hist_bin_doane": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.log2",
   "numpy.mean",
   "numpy.power",
   "numpy.sqrt",
   "numpy.std",
   "numpy.true_divide"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._hist_bin_fd": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.percentile",
   "numpy.subtract"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._hist_bin_rice": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.histograms._hist_bin_scott": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.std"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._hist_bin_sqrt": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._hist_bin_stone": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.sqrt",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._hist_bin_stone.jhat": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.histogram"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._hist_bin_sturges": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.log2"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._histogram_bin_edges_dispatcher": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.histograms._histogram_dispatcher": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.histograms._histogramdd_dispatcher": {
  "lineno": 931,
  "symbols_in_volume": [
   "contextlib.suppress"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._ptp": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.histograms._ravel_and_check_weights": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.bool_",
   "numpy.uint8",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._search_sorted_inclusive": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "numpy.lib.histograms._unsigned_subtract": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.byte",
   "numpy.int_",
   "numpy.intc",
   "numpy.longlong",
   "numpy.result_type",
   "numpy.short",
   "numpy.subtract",
   "numpy.ubyte",
   "numpy.uint",
   "numpy.uintc",
   "numpy.ulonglong",
   "numpy.ushort"
  ],
  "type": "function"
 },
 "numpy.lib.histograms.histogram": {
  "lineno": 677,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.argsort",
   "numpy.array",
   "numpy.bincount",
   "numpy.can_cast",
   "numpy.concatenate",
   "numpy.diff",
   "numpy.double",
   "numpy.dtype",
   "numpy.intp",
   "numpy.logical_and.reduce",
   "numpy.sort",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.histograms.histogram_bin_edges": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.histograms.histogramdd": {
  "lineno": 942,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.atleast_2d",
   "numpy.bincount",
   "numpy.diff",
   "numpy.empty",
   "numpy.linspace",
   "numpy.ndim",
   "numpy.ones",
   "numpy.ravel_multi_index",
   "numpy.searchsorted",
   "operator.index"
  ],
  "type": "function"
 },
 "numpy.lib.index_tricks": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.lib.index_tricks.AxisConcatenator": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.core.numeric.concatenate",
   "numpy.matrixlib.matrix"
  ],
  "type": "class"
 },
 "numpy.lib.index_tricks.AxisConcatenator.__getitem__": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.core.linspace",
   "numpy.core.numeric.ScalarType",
   "numpy.core.numeric.arange",
   "numpy.core.numeric.array",
   "numpy.core.numeric.ndarray",
   "numpy.core.numeric.ndim",
   "numpy.core.numerictypes.find_common_type",
   "numpy.matrixlib.bmat",
   "sys._getframe"
  ],
  "type": "function"
 },
 "numpy.lib.index_tricks.AxisConcatenator.__init__": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.AxisConcatenator.__len__": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.CClass": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.index_tricks.CClass.__init__": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.IndexExpression": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.index_tricks.IndexExpression.__getitem__": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.IndexExpression.__init__": {
  "lineno": 724,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.MGridClass": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.index_tricks.MGridClass.__init__": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.OGridClass": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.index_tricks.OGridClass.__init__": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.RClass": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.index_tricks.RClass.__init__": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks._diag_indices_from": {
  "lineno": 948,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks._fill_diagonal_dispatcher": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks._ix__dispatcher": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.diag_indices": {
  "lineno": 879,
  "symbols_in_volume": [
   "numpy.core.numeric.arange",
   "numpy.core.numeric.ndim",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.lib.index_tricks.diag_indices_from": {
  "lineno": 952,
  "symbols_in_volume": [
   "numpy.core.numeric.alltrue"
  ],
  "type": "function"
 },
 "numpy.lib.index_tricks.fill_diagonal": {
  "lineno": 747,
  "symbols_in_volume": [
   "numpy.core.numeric.alltrue",
   "numpy.core.numeric.cumprod"
  ],
  "type": "function"
 },
 "numpy.lib.index_tricks.ix_": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.bool_",
   "numpy.core.numeric.intp",
   "numpy.core.numeric.ndarray",
   "numpy.core.numerictypes.issubdtype"
  ],
  "type": "function"
 },
 "numpy.lib.index_tricks.nd_grid": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.index_tricks.nd_grid.__getitem__": {
  "lineno": 146,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.core.numeric.arange",
   "numpy.core.numeric.indices",
   "numpy.core.numeric.newaxis"
  ],
  "type": "function"
 },
 "numpy.lib.index_tricks.nd_grid.__init__": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.ndenumerate": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.lib.index_tricks.ndenumerate.__init__": {
  "lineno": 582,
  "symbols_in_volume": [
   "numpy.core.numeric.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.index_tricks.ndenumerate.__iter__": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.ndenumerate.__next__": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex": {
  "lineno": 603,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.lib.index_tricks.ndindex.__init__": {
  "lineno": 634,
  "symbols_in_volume": [
   "numpy.core.numeric.nditer",
   "numpy.core.numeric.zeros",
   "numpy.core.numeric.zeros_like",
   "numpy.lib.stride_tricks.as_strided"
  ],
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex.__iter__": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex.__next__": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex.ndincr": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.mixins": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.mixins.NDArrayOperatorsMixin": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.core.umath.absolute",
   "numpy.core.umath.add",
   "numpy.core.umath.bitwise_and",
   "numpy.core.umath.bitwise_or",
   "numpy.core.umath.bitwise_xor",
   "numpy.core.umath.divmod",
   "numpy.core.umath.equal",
   "numpy.core.umath.floor_divide",
   "numpy.core.umath.greater",
   "numpy.core.umath.greater_equal",
   "numpy.core.umath.invert",
   "numpy.core.umath.left_shift",
   "numpy.core.umath.less",
   "numpy.core.umath.less_equal",
   "numpy.core.umath.matmul",
   "numpy.core.umath.multiply",
   "numpy.core.umath.negative",
   "numpy.core.umath.not_equal",
   "numpy.core.umath.positive",
   "numpy.core.umath.power",
   "numpy.core.umath.remainder",
   "numpy.core.umath.right_shift",
   "numpy.core.umath.subtract",
   "numpy.core.umath.true_divide"
  ],
  "type": "class"
 },
 "numpy.lib.mixins._binary_method": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.mixins._binary_method.func": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.mixins._disables_array_ufunc": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.mixins._inplace_binary_method": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.mixins._inplace_binary_method.func": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.mixins._numeric_methods": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.mixins._reflected_binary_method": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.mixins._reflected_binary_method.func": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.mixins._unary_method": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.mixins._unary_method.func": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.lib.nanfunctions._copyto": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.copyto",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions._divide_by_count": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.errstate",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nan_mask": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.invert",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanargmax_dispatcher": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanargmin_dispatcher": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nancumprod_dispatcher": {
  "lineno": 791,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nancumsum_dispatcher": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanmax_dispatcher": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanmean_dispatcher": {
  "lineno": 858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanmedian": {
  "lineno": 973,
  "symbols_in_volume": [
   "numpy.apply_along_axis"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanmedian1d": {
  "lineno": 960,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanmedian_dispatcher": {
  "lineno": 1017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanmedian_small": {
  "lineno": 999,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.isnan",
   "numpy.ma.masked_array",
   "numpy.ma.median",
   "numpy.nan",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanmin_dispatcher": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanpercentile_dispatcher": {
  "lineno": 1121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanprod_dispatcher": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanquantile_1d": {
  "lineno": 1402,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.lib.function_base._quantile_unchecked",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanquantile_dispatcher": {
  "lineno": 1247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanquantile_unchecked": {
  "lineno": 1360,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.lib.function_base._ureduce",
   "numpy.nanmean"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanquantile_ureduce_func": {
  "lineno": 1378,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanstd_dispatcher": {
  "lineno": 1564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nansum_dispatcher": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanvar_dispatcher": {
  "lineno": 1416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.nanfunctions._remove_nan_1d": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nonzero",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions._replace_nan": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asanyarray",
   "numpy.copyto",
   "numpy.inexact",
   "numpy.isnan",
   "numpy.not_equal",
   "numpy.object_"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanargmax": {
  "lineno": 507,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.argmax",
   "numpy.inf"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanargmin": {
  "lineno": 458,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.argmin",
   "numpy.inf"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nancumprod": {
  "lineno": 795,
  "symbols_in_volume": [
   "numpy.cumprod"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nancumsum": {
  "lineno": 725,
  "symbols_in_volume": [
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmax": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.all",
   "numpy.amax",
   "numpy.any",
   "numpy.fmax.reduce",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.object_",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmean": {
  "lineno": 862,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.dtype",
   "numpy.inexact",
   "numpy.intp",
   "numpy.mean",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmedian": {
  "lineno": 1022,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.asanyarray",
   "numpy.lib.function_base._ureduce",
   "numpy.nanmean"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmin": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.all",
   "numpy.amin",
   "numpy.any",
   "numpy.fmin.reduce",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.object_",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanpercentile": {
  "lineno": 1126,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.asanyarray",
   "numpy.lib.function_base._quantile_is_valid",
   "numpy.true_divide"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanprod": {
  "lineno": 655,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.prod"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanquantile": {
  "lineno": 1252,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.asanyarray",
   "numpy.lib.function_base._quantile_is_valid"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanstd": {
  "lineno": 1569,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.ndarray",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nansum": {
  "lineno": 557,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.sum"
  ],
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanvar": {
  "lineno": 1421,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.any",
   "numpy.complexfloating",
   "numpy.dtype",
   "numpy.inexact",
   "numpy.intp",
   "numpy.matrix",
   "numpy.multiply",
   "numpy.nan",
   "numpy.subtract",
   "numpy.sum",
   "numpy.var",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.npyio": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.lib.npyio.BagObj": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.npyio.BagObj.__dir__": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.BagObj.__getattribute__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.BagObj.__init__": {
  "lineno": 81,
  "symbols_in_volume": [
   "weakref.proxy"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.NpzFile": {
  "lineno": 115,
  "symbols_in_volume": [
   "collections.abc.Mapping"
  ],
  "type": "class"
 },
 "numpy.lib.npyio.NpzFile.__del__": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.NpzFile.__enter__": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.NpzFile.__exit__": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.NpzFile.__getitem__": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.compat.bytes",
   "numpy.compat.bytes.close",
   "numpy.compat.bytes.read"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.NpzFile.__init__": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.NpzFile.__iter__": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.NpzFile.__len__": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.NpzFile.close": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.NpzFile.iteritems": {
  "lineno": 266,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.NpzFile.iterkeys": {
  "lineno": 274,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.npyio._getconv": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.bytes_",
   "numpy.compat.asbytes",
   "numpy.compat.asstr",
   "numpy.compat.asunicode",
   "numpy.floating",
   "numpy.int64",
   "numpy.integer",
   "numpy.longdouble",
   "numpy.uint64",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.lib.npyio._getconv.floatconv": {
  "lineno": 759,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio._save_dispatcher": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio._savetxt_dispatcher": {
  "lineno": 1185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio._savez": {
  "lineno": 689,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.compat.os_fspath",
   "os.close",
   "os.path.split",
   "os.remove",
   "sys.version_info",
   "tempfile.mkstemp",
   "zipfile.ZIP_DEFLATED",
   "zipfile.ZIP_STORED"
  ],
  "type": "function"
 },
 "numpy.lib.npyio._savez_compressed_dispatcher": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio._savez_dispatcher": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.fromregex": {
  "lineno": 1439,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.asbytes",
   "numpy.compat.asstr",
   "numpy.compat.bytes",
   "numpy.compat.unicode",
   "numpy.core.overrides.set_module",
   "numpy.dtype",
   "numpy.lib._datasource.open",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.genfromtxt": {
  "lineno": 1538,
  "symbols_in_volume": [
   "contextlib.closing",
   "functools.partial",
   "itertools.chain",
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.bytes_",
   "numpy.character",
   "numpy.compat.asbytes",
   "numpy.compat.bytes",
   "numpy.compat.contextlib_nullcontext",
   "numpy.compat.os_PathLike",
   "numpy.compat.os_fspath",
   "numpy.core.overrides.set_module",
   "numpy.dtype",
   "numpy.issubdtype",
   "numpy.lib._datasource.open",
   "numpy.ma.MaskedArray",
   "numpy.ma.make_mask_descr",
   "numpy.unicode_",
   "operator.itemgetter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.genfromtxt.encode_unicode_cols": {
  "lineno": 2118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.genfromtxt.tobytes_first": {
  "lineno": 1984,
  "symbols_in_volume": [
   "numpy.compat.bytes"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.load": {
  "lineno": 283,
  "symbols_in_volume": [
   "contextlib.ExitStack",
   "numpy.compat.os_fspath",
   "numpy.compat.pickle.load",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.loads": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.compat.pickle.loads",
   "numpy.core.overrides.set_module",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.loadtxt": {
  "lineno": 791,
  "symbols_in_volume": [
   "functools.partial",
   "locale.getpreferredencoding",
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.atleast_2d",
   "numpy.compat.bytes",
   "numpy.compat.os_PathLike",
   "numpy.compat.os_fspath",
   "numpy.core.overrides.set_module",
   "numpy.dtype",
   "numpy.lib._datasource.open",
   "numpy.squeeze",
   "operator.index",
   "re.compile",
   "re.escape",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.loadtxt.flatten_dtype_internal": {
  "lineno": 981,
  "symbols_in_volume": [
   "numpy.compat.bytes",
   "numpy.core._internal.recursive",
   "numpy.prod"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.loadtxt.pack_items": {
  "lineno": 1011,
  "symbols_in_volume": [
   "numpy.core._internal.recursive"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.loadtxt.read_data": {
  "lineno": 1040,
  "symbols_in_volume": [
   "itertools.chain",
   "itertools.islice"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.loadtxt.split_line": {
  "lineno": 1028,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.loadtxt.tobytes_first": {
  "lineno": 1123,
  "symbols_in_volume": [
   "numpy.compat.bytes"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.mafromtxt": {
  "lineno": 2262,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.ndfromtxt": {
  "lineno": 2234,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.recfromcsv": {
  "lineno": 2322,
  "symbols_in_volume": [
   "numpy.ma.mrecords.MaskedRecords",
   "numpy.recarray"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.recfromtxt": {
  "lineno": 2290,
  "symbols_in_volume": [
   "numpy.ma.mrecords.MaskedRecords",
   "numpy.recarray"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.save": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.compat.contextlib_nullcontext",
   "numpy.compat.os_fspath"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.savetxt": {
  "lineno": 1191,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.atleast_2d",
   "numpy.compat.asstr",
   "numpy.compat.bytes",
   "numpy.compat.os_PathLike",
   "numpy.compat.os_fspath",
   "numpy.iscomplexobj",
   "numpy.lib._datasource.open"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.savetxt.WriteWrap": {
  "lineno": 1319,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.npyio.savetxt.WriteWrap.__init__": {
  "lineno": 1323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.savetxt.WriteWrap.close": {
  "lineno": 1328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.savetxt.WriteWrap.first_write": {
  "lineno": 1343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.savetxt.WriteWrap.write": {
  "lineno": 1331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.savetxt.WriteWrap.write_bytes": {
  "lineno": 1334,
  "symbols_in_volume": [
   "numpy.compat.bytes"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.savetxt.WriteWrap.write_normal": {
  "lineno": 1340,
  "symbols_in_volume": [
   "numpy.compat.asunicode"
  ],
  "type": "function"
 },
 "numpy.lib.npyio.savez": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.savez_compressed": {
  "lineno": 624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.npyio.zipfile_factory": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.compat.os_fspath",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch",
   "re.compile",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "numpy.lib.polynomial.RankWarning": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.lib.polynomial._binary_op_dispatcher": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial._poly_dispatcher": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial._polyder_dispatcher": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial._polydiv_dispatcher": {
  "lineno": 909,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial._polyfit_dispatcher": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial._polyint_dispatcher": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial._polyval_dispatcher": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial._raise_power": {
  "lineno": 980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial._roots_dispatcher": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.atleast_1d",
   "numpy.core.numeric.all",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.complexfloating",
   "numpy.core.numeric.convolve",
   "numpy.core.numeric.sort",
   "numpy.core.ones",
   "numpy.lib.type_check.mintypecode",
   "numpy.linalg.eigvals"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d": {
  "lineno": 1007,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.lib.polynomial.poly1d.__add__": {
  "lineno": 1272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__array__": {
  "lineno": 1178,
  "symbols_in_volume": [
   "numpy.core.numeric.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__call__": {
  "lineno": 1249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__div__": {
  "lineno": 1296,
  "symbols_in_volume": [
   "numpy.core.isscalar"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__eq__": {
  "lineno": 1314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__getitem__": {
  "lineno": 1327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__init__": {
  "lineno": 1151,
  "symbols_in_volume": [
   "numpy.core.atleast_1d",
   "numpy.core.numeric.array",
   "numpy.lib.function_base.trim_zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__iter__": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__len__": {
  "lineno": 1189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__mul__": {
  "lineno": 1258,
  "symbols_in_volume": [
   "numpy.core.isscalar"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__ne__": {
  "lineno": 1321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__neg__": {
  "lineno": 1252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__pos__": {
  "lineno": 1255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__pow__": {
  "lineno": 1280,
  "symbols_in_volume": [
   "numpy.core.isscalar"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__radd__": {
  "lineno": 1276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__rdiv__": {
  "lineno": 1305,
  "symbols_in_volume": [
   "numpy.core.isscalar"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__repr__": {
  "lineno": 1184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__rmul__": {
  "lineno": 1265,
  "symbols_in_volume": [
   "numpy.core.isscalar"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__rsub__": {
  "lineno": 1292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__setitem__": {
  "lineno": 1335,
  "symbols_in_volume": [
   "numpy.core.numeric.concatenate",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__str__": {
  "lineno": 1192,
  "symbols_in_volume": [
   "numpy.core.numeric.logical_or.accumulate",
   "numpy.lib.type_check.imag",
   "numpy.lib.type_check.iscomplex",
   "numpy.lib.type_check.real"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__str__.fmt_float": {
  "lineno": 1200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.__sub__": {
  "lineno": 1288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d._coeffs": {
  "lineno": 1142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.coeffs": {
  "lineno": 1115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.deriv": {
  "lineno": 1362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.integ": {
  "lineno": 1349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.order": {
  "lineno": 1127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.roots": {
  "lineno": 1132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.poly1d.variable": {
  "lineno": 1121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.polynomial.polyadd": {
  "lineno": 742,
  "symbols_in_volume": [
   "numpy.core.abs",
   "numpy.core.atleast_1d",
   "numpy.core.numeric.concatenate",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.polyder": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.core.numeric.arange",
   "numpy.core.numeric.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.polydiv": {
  "lineno": 913,
  "symbols_in_volume": [
   "numpy.core.atleast_1d",
   "numpy.core.numeric.allclose",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.polyfit": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.core.dot",
   "numpy.core.finfo",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.newaxis",
   "numpy.core.numeric.outer",
   "numpy.core.numeric.sqrt",
   "numpy.lib.twodim_base.vander",
   "numpy.linalg.inv",
   "numpy.linalg.lstsq",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.polyint": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.core.atleast_1d",
   "numpy.core.numeric.arange",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.concatenate",
   "numpy.core.numeric.ones",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.polymul": {
  "lineno": 852,
  "symbols_in_volume": [
   "numpy.core.numeric.convolve"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.polysub": {
  "lineno": 804,
  "symbols_in_volume": [
   "numpy.core.abs",
   "numpy.core.atleast_1d",
   "numpy.core.numeric.concatenate",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.polyval": {
  "lineno": 665,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.zeros_like"
  ],
  "type": "function"
 },
 "numpy.lib.polynomial.roots": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.core.atleast_1d",
   "numpy.core.hstack",
   "numpy.core.numeric.array",
   "numpy.core.numeric.complexfloating",
   "numpy.core.numeric.floating",
   "numpy.core.numeric.nonzero",
   "numpy.core.numeric.ones",
   "numpy.core.numeric.ravel",
   "numpy.core.numeric.zeros",
   "numpy.lib.twodim_base.diag",
   "numpy.linalg.eigvals"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.ma.core._check_fill_value"
  ],
  "type": "module"
 },
 "numpy.lib.recfunctions._append_fields_dispatcher": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._apply_along_fields_dispatcher": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._assign_fields_by_name_dispatcher": {
  "lineno": 1145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._drop_fields_dispatcher": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._find_duplicates_dispatcher": {
  "lineno": 1326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._fix_defaults": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._fix_output": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.ma.filled",
   "numpy.ma.mrecords.MaskedRecords",
   "numpy.recarray"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions._get_fields_and_offsets": {
  "lineno": 857,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions._get_fields_and_offsets.count_elem": {
  "lineno": 866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._get_fieldspec": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._izip_fields": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions._izip_fields_flat": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions._izip_records": {
  "lineno": 309,
  "symbols_in_volume": [
   "itertools.zip_longest"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions._join_by_dispatcher": {
  "lineno": 1389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._keep_fields": {
  "lineno": 574,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions._merge_arrays_dispatcher": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._rec_append_fields_dispatcher": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._rec_drop_fields_dispatcher": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._rec_join_dispatcher": {
  "lineno": 1575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._recursive_fill_fields_dispatcher": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._rename_fields_dispatcher": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._repack_fields_dispatcher": {
  "lineno": 772,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._require_fields_dispatcher": {
  "lineno": 1186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._stack_arrays_dispatcher": {
  "lineno": 1233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._structured_to_unstructured_dispatcher": {
  "lineno": 895,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._unstructured_to_structured_dispatcher": {
  "lineno": 991,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._zip_descr": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions._zip_dtype": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.append_fields": {
  "lineno": 661,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.overrides.array_function_dispatch",
   "numpy.ma.masked_all"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.apply_along_fields": {
  "lineno": 1102,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.assign_fields_by_name": {
  "lineno": 1148,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.drop_fields": {
  "lineno": 509,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch",
   "numpy.empty",
   "numpy.lib._iotools._is_string_like"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.drop_fields._drop_descr": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions.find_duplicates": {
  "lineno": 1331,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.concatenate",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.flatten_descr": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions.get_fieldstructure": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions.get_names": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions.get_names_flat": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions.join_by": {
  "lineno": 1395,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.core.overrides.array_function_dispatch",
   "numpy.dtype",
   "numpy.ma.concatenate",
   "numpy.ma.masked_all"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.merge_arrays": {
  "lineno": 369,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.array",
   "numpy.asanyarray",
   "numpy.core.overrides.array_function_dispatch",
   "numpy.dtype",
   "numpy.fromiter",
   "numpy.ma.MaskedArray",
   "numpy.ma.array",
   "numpy.ma.getmaskarray",
   "numpy.ma.mrecords.MaskedRecords",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.recarray",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.rec_append_fields": {
  "lineno": 737,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.rec_drop_fields": {
  "lineno": 603,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.rec_join": {
  "lineno": 1581,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.recursive_fill_fields": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.rename_fields": {
  "lineno": 615,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.rename_fields._recursive_rename_fields": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.recfunctions.repack_fields": {
  "lineno": 776,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.require_fields": {
  "lineno": 1189,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch",
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.stack_arrays": {
  "lineno": 1238,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.core.overrides.array_function_dispatch",
   "numpy.cumsum",
   "numpy.ma.concatenate",
   "numpy.ma.masked_all",
   "numpy.ndarray",
   "numpy.r_",
   "numpy.sum"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.structured_to_unstructured": {
  "lineno": 899,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch",
   "numpy.dtype",
   "numpy.result_type",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.recfunctions.unstructured_to_structured": {
  "lineno": 995,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.core.overrides.array_function_dispatch",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.lib.scimath": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.core.numeric.log"
  ],
  "type": "module"
 },
 "numpy.lib.scimath._fix_int_lt_zero": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.core.numeric.any",
   "numpy.core.numeric.asarray",
   "numpy.lib.type_check.isreal"
  ],
  "type": "function"
 },
 "numpy.lib.scimath._fix_real_abs_gt_1": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.core.numeric.any",
   "numpy.core.numeric.asarray",
   "numpy.lib.type_check.isreal"
  ],
  "type": "function"
 },
 "numpy.lib.scimath._fix_real_lt_zero": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.core.numeric.any",
   "numpy.core.numeric.asarray",
   "numpy.lib.type_check.isreal"
  ],
  "type": "function"
 },
 "numpy.lib.scimath._logn_dispatcher": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.scimath._power_dispatcher": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.scimath._tocomplex": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.core.numerictypes.byte",
   "numpy.core.numerictypes.cdouble",
   "numpy.core.numerictypes.csingle",
   "numpy.core.numerictypes.short",
   "numpy.core.numerictypes.single",
   "numpy.core.numerictypes.ubyte",
   "numpy.core.numerictypes.ushort"
  ],
  "type": "function"
 },
 "numpy.lib.scimath._unary_dispatcher": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.scimath.arccos": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.core.numeric.arccos",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.scimath.arcsin": {
  "lineno": 507,
  "symbols_in_volume": [
   "numpy.core.numeric.arcsin",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.scimath.arctanh": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.core.numeric.arctanh",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.scimath.log": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.core.numeric.log",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.scimath.log10": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.core.numeric.log10",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.scimath.log2": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.core.numeric.log2",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.scimath.logn": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.core.numeric.log",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.scimath.power": {
  "lineno": 417,
  "symbols_in_volume": [
   "numpy.core.numeric.power",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.scimath.sqrt": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.core.numeric.sqrt",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "numpy.lib.setup.configuration": {
  "lineno": 1,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.overrides.array_function_dispatch",
   "numpy.core.vstack"
  ],
  "type": "module"
 },
 "numpy.lib.shape_base._apply_along_axis_dispatcher": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base._apply_over_axes_dispatcher": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base._array_split_dispatcher": {
  "lineno": 735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base._column_stack_dispatcher": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.core.shape_base._arrays_for_stack_dispatcher"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base._dstack_dispatcher": {
  "lineno": 659,
  "symbols_in_volume": [
   "numpy.core.shape_base._arrays_for_stack_dispatcher"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base._expand_dims_dispatcher": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base._hvdsplit_dispatcher": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base._kron_dispatcher": {
  "lineno": 1063,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base._make_along_axis_idx": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.core.numeric.arange",
   "numpy.core.numeric.integer",
   "numpy.core.numeric.issubdtype"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base._put_along_axis_dispatcher": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base._replace_zero_by_x_arrays": {
  "lineno": 726,
  "symbols_in_volume": [
   "numpy.core.numeric.empty",
   "numpy.core.numeric.equal",
   "numpy.core.numeric.ndim",
   "numpy.core.numeric.shape",
   "numpy.core.numeric.sometrue"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base._split_dispatcher": {
  "lineno": 795,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base._take_along_axis_dispatcher": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base._tile_dispatcher": {
  "lineno": 1167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base.apply_along_axis": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.core.fromnumeric.transpose",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.zeros",
   "numpy.lib.index_tricks.ndindex",
   "numpy.matrixlib.defmatrix.matrix"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.apply_over_axes": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.core.numeric.array",
   "numpy.core.numeric.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.array_split": {
  "lineno": 739,
  "symbols_in_volume": [
   "numpy.core.numeric.array",
   "numpy.core.numeric.intp",
   "numpy.core.numeric.swapaxes"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.column_stack": {
  "lineno": 612,
  "symbols_in_volume": [
   "numpy.core.numeric.array",
   "numpy.core.numeric.concatenate",
   "numpy.core.overrides.ARRAY_FUNCTION_ENABLED",
   "numpy.core.shape_base._arrays_for_stack_dispatcher"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.dsplit": {
  "lineno": 994,
  "symbols_in_volume": [
   "numpy.core.numeric.ndim"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.dstack": {
  "lineno": 663,
  "symbols_in_volume": [
   "numpy.core.atleast_3d",
   "numpy.core.numeric.concatenate",
   "numpy.core.overrides.ARRAY_FUNCTION_ENABLED",
   "numpy.core.shape_base._arrays_for_stack_dispatcher"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.expand_dims": {
  "lineno": 512,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.normalize_axis_tuple",
   "numpy.matrixlib.defmatrix.matrix"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.get_array_prepare": {
  "lineno": 1038,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base.get_array_wrap": {
  "lineno": 1050,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base.hsplit": {
  "lineno": 881,
  "symbols_in_volume": [
   "numpy.core.numeric.ndim"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.kron": {
  "lineno": 1067,
  "symbols_in_volume": [
   "numpy.core.fromnumeric.reshape",
   "numpy.core.numeric.array",
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.concatenate",
   "numpy.core.numeric.multiply",
   "numpy.core.numeric.outer"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.put_along_axis": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.core.multiarray.normalize_axis_index"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.split": {
  "lineno": 799,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.shape_base.take_along_axis": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.core.multiarray.normalize_axis_index"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.tile": {
  "lineno": 1171,
  "symbols_in_volume": [
   "numpy.core.numeric.array",
   "numpy.core.numeric.ndarray"
  ],
  "type": "function"
 },
 "numpy.lib.shape_base.vsplit": {
  "lineno": 945,
  "symbols_in_volume": [
   "numpy.core.numeric.ndim"
  ],
  "type": "function"
 },
 "numpy.lib.stride_tricks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.stride_tricks.DummyArray": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.stride_tricks.DummyArray.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.stride_tricks._broadcast_arrays_dispatcher": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.stride_tricks._broadcast_shape": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.broadcast"
  ],
  "type": "function"
 },
 "numpy.lib.stride_tricks._broadcast_to": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iterable",
   "numpy.nditer"
  ],
  "type": "function"
 },
 "numpy.lib.stride_tricks._broadcast_to_dispatcher": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.stride_tricks._maybe_view_as_subclass": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.stride_tricks.as_strided": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.stride_tricks.broadcast_arrays": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.stride_tricks.broadcast_to": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test__datasource": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.setup": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.lib._datasource.DataSource",
   "os.path.abspath",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.teardown": {
  "lineno": 193,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_InvalidFile": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "os.path.split"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_InvalidHTTP": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "os.path.join",
   "os.sep",
   "urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_ValidFile": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "os.path.split"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_ValidHTTP": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "os.path.join",
   "os.sep",
   "urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_sandboxing": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "os.path.abspath",
   "os.path.split"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_windows_os_sep": {
  "lineno": 240,
  "symbols_in_volume": [
   "os.sep"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.setup": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.lib._datasource.DataSource",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.teardown": {
  "lineno": 163,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_InvalidFile": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_InvalidHTTP": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_ValidFile": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_ValidHTTP": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.setup": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.lib._datasource.DataSource",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.teardown": {
  "lineno": 94,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_InvalidFile": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_InvalidHTTP": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_InvalidHTTPCacheURLError": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "urllib.error.URLError"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidBz2File": {
  "lineno": 141,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "numpy.testing.assert_equal",
   "os.path.join",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidFile": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidGzipFile": {
  "lineno": 125,
  "symbols_in_volume": [
   "gzip.open",
   "numpy.testing.assert_equal",
   "os.path.join",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidHTTP": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc.setup": {
  "lineno": 320,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc.teardown": {
  "lineno": 323,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc.test_DataSourceOpen": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.lib._datasource.open",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.setup": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.lib._datasource.Repository",
   "os.path.abspath",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.teardown": {
  "lineno": 258,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.test_ValidHTTP": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "os.path.join",
   "os.sep",
   "urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.test_sandboxing": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "os.path.abspath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.test_windows_os_sep": {
  "lineno": 276,
  "symbols_in_volume": [
   "os.sep"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.setup": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.lib._datasource.Repository",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.teardown": {
  "lineno": 291,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_CachedHTTPFile": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "os.mkdir",
   "os.path.join",
   "urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_InvalidFile": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_RemoveHTTPFile": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_ValidFile": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.invalid_baseurl": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.invalid_httpfile": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.invalid_httpurl": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.invalid_textfile": {
  "lineno": 57,
  "symbols_in_volume": [
   "os.close",
   "os.remove",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.setup_module": {
  "lineno": 26,
  "symbols_in_volume": [
   "urllib.request.urlopen"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.teardown_module": {
  "lineno": 33,
  "symbols_in_volume": [
   "urllib.request.urlopen"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.test_del_attr_handling": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.lib._datasource.DataSource"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.urlopen_stub": {
  "lineno": 14,
  "symbols_in_volume": [
   "tempfile.NamedTemporaryFile",
   "urllib.error.URLError"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.valid_baseurl": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.valid_httpfile": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.valid_httpurl": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.valid_textfile": {
  "lineno": 50,
  "symbols_in_volume": [
   "os.close",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_constant_fixed_width": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.lib._iotools.LineSplitter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_no_delimiter": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.lib._iotools.LineSplitter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_other_delimiter": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.lib._iotools.LineSplitter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_space_delimiter": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.lib._iotools.LineSplitter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_tab_delimiter": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.lib._iotools.LineSplitter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_variable_fixed_width": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.lib._iotools.LineSplitter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions.test_easy_dtype": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.lib._iotools.easy_dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions.test_flatten_dtype": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.lib._iotools.flatten_dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions.test_has_nested_dtype": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.lib._iotools.has_nested_fields",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_case_sensitivity": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.lib._iotools.NameValidator",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_excludelist": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.lib._iotools.NameValidator",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_missing_names": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.lib._iotools.NameValidator",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_validate_nb_names": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.lib._iotools.NameValidator",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_validate_wo_names": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.lib._iotools.NameValidator",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_creation": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.lib._iotools.StringConverter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_int64_dtype": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.lib._iotools.StringConverter",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_keep_default": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.lib._iotools.StringConverter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_keep_default_zero": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.lib._iotools.StringConverter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_keep_missing_values": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.lib._iotools.StringConverter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_missing": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.lib._iotools.StringConverter",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_string_to_object": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.lib._iotools.StringConverter",
   "numpy.lib._iotools.StringConverter._mapper",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_uint64_dtype": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.lib._iotools.StringConverter",
   "numpy.testing.assert_",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_upgrade": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.core.numeric.dtype",
   "numpy.core.numeric.int64",
   "numpy.core.numeric.int_",
   "numpy.lib._iotools.StringConverter",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_upgrademapper": {
  "lineno": 201,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.lib._iotools.StringConverter",
   "numpy.lib._iotools.StringConverter._mapper",
   "numpy.lib._iotools.StringConverter.upgrade_mapper",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__iotools._bytes_to_date": {
  "lineno": 137,
  "symbols_in_volume": [
   "datetime.date",
   "time.strptime"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test__version.test_alpha_beta_rc": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.lib.NumpyVersion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_dev0_a_b_rc_mixed": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.lib.NumpyVersion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_dev0_version": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.lib.NumpyVersion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_dev_a_b_rc_mixed": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.lib.NumpyVersion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_dev_version": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.lib.NumpyVersion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_main_versions": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.lib.NumpyVersion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_raises": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.lib.NumpyVersion",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_version_1_point_10": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.lib.NumpyVersion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.sctypes"
  ],
  "type": "module"
 },
 "numpy.lib.tests.test_arraypad.TestAsPairs": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestAsPairs.test_as_index": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "numpy.lib.arraypad._as_pairs",
   "numpy.testing.assert_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestAsPairs.test_exceptions": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.lib.arraypad._as_pairs",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestAsPairs.test_pass_through": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.arraypad._as_pairs",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestAsPairs.test_single_value": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraypad._as_pairs",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestAsPairs.test_two_values": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraypad._as_pairs",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestAsPairs.test_with_none": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.lib.arraypad._as_pairs",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConditionalShortcuts": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestConditionalShortcuts.test_clip_statistic_range": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConditionalShortcuts.test_shallow_statistic_range": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConditionalShortcuts.test_zero_padding_shortcuts": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_float": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_float2": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float64",
   "numpy.pad",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_float3": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_odd_pad_amount": {
  "lineno": 613,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_pad_2d": {
  "lineno": 630,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.pad",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_zeros": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_large_integers": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.int64",
   "numpy.pad",
   "numpy.testing.assert_array_equal",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_object_array": {
  "lineno": 656,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_pad_empty_dimension": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.pad",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestEdge": {
  "lineno": 1145,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestEdge.test_check_simple": {
  "lineno": 1146,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.reshape",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestEdge.test_check_width_shape_1_2": {
  "lineno": 1165,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestEmpty": {
  "lineno": 1184,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestEmpty.test_pad_empty_dimension": {
  "lineno": 1191,
  "symbols_in_volume": [
   "numpy.pad",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestEmpty.test_simple": {
  "lineno": 1185,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestEmptyArray": {
  "lineno": 873,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestEmptyArray.test_pad_empty_dimension": {
  "lineno": 876,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.pad",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestEmptyArray.test_pad_non_empty_dimension": {
  "lineno": 891,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.pad",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp.test_check_2d": {
  "lineno": 703,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float64",
   "numpy.pad",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp.test_check_simple": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp.test_end_values": {
  "lineno": 736,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.pad",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp.test_negative_difference": {
  "lineno": 744,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp.test_object_array": {
  "lineno": 717,
  "symbols_in_volume": [
   "fractions.Fraction",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_equal",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestPadWidth": {
  "lineno": 1232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestPadWidth.test_bad_type": {
  "lineno": 1263,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestPadWidth.test_misshaped_pad_width": {
  "lineno": 1233,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestPadWidth.test_misshaped_pad_width_2": {
  "lineno": 1246,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestPadWidth.test_negative_pad_width": {
  "lineno": 1254,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestPadWidth.test_pad_width_as_ndarray": {
  "lineno": 1287,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.reshape",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestPadWidth.test_zero_pad_width": {
  "lineno": 1306,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect": {
  "lineno": 763,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_01": {
  "lineno": 857,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_02": {
  "lineno": 862,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_03": {
  "lineno": 867,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_large_pad": {
  "lineno": 812,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_odd_method": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_shape": {
  "lineno": 835,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_simple": {
  "lineno": 764,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_maximum_1": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_maximum_2": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_maximum_stat_length": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_mean_2": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_mean_shape_one": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_mean_stat_length": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median_01": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median_02": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median_stat_length": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_minimum_1": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_minimum_2": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_minimum_stat_length": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_negative_stat_length": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_same_prepend_append": {
  "lineno": 430,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.pad",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_simple_stat_length": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.reshape",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_zero_stat_length_invalid": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.pad",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_zero_stat_length_valid": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.pad",
   "numpy.testing.assert_equal",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric": {
  "lineno": 897,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_01": {
  "lineno": 1015,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_02": {
  "lineno": 1020,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_03": {
  "lineno": 1025,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_large_pad": {
  "lineno": 946,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_large_pad_odd": {
  "lineno": 970,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_odd_method": {
  "lineno": 922,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_shape": {
  "lineno": 993,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_simple": {
  "lineno": 898,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap": {
  "lineno": 1031,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_01": {
  "lineno": 1116,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_02": {
  "lineno": 1121,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_large_pad": {
  "lineno": 1056,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.reshape",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_simple": {
  "lineno": 1032,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_pad_with_zero": {
  "lineno": 1126,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_repeated_wrapping": {
  "lineno": 1131,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "numpy.r_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.test_constant_zero_default": {
  "lineno": 1330,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.test_dtype_persistence": {
  "lineno": 1359,
  "symbols_in_volume": [
   "numpy.pad",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.test_kwargs": {
  "lineno": 1313,
  "symbols_in_volume": [
   "numpy.pad",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.test_legacy_vector_functionality": {
  "lineno": 1197,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.test_legacy_vector_functionality._padwithtens": {
  "lineno": 1198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.test_memory_layout_persistence": {
  "lineno": 1350,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.pad",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.test_non_contiguous_array": {
  "lineno": 1342,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pad",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.test_object_input": {
  "lineno": 1223,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.pad",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.test_unicode_mode": {
  "lineno": 1217,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pad",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.test_unsupported_mode": {
  "lineno": 1335,
  "symbols_in_volume": [
   "numpy.pad",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_ediff1d": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.ediff1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_ediff1d_forbidden_type_casts": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int64",
   "numpy.int8",
   "numpy.lib.arraysetops.ediff1d",
   "numpy.nan",
   "numpy.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_ediff1d_scalar_handling": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ediff1d",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.in1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_both_arrays_are_object": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.in1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_both_arrays_have_structured_dtype": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.in1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_char_array": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.in1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_first_array_is_object": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.in1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_invert": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.invert",
   "numpy.lib.arraysetops.in1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_ravel": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.arraysetops.in1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_second_array_is_object": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.in1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_intersect1d": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.intersect1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_intersect1d_array_like": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.lib.arraysetops.intersect1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_intersect1d_array_like.Test": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_intersect1d_array_like.Test.__array__": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_intersect1d_indices": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.intersect1d",
   "numpy.testing.assert_array_equal",
   "numpy.unravel_index"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_isin": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_isin._isin_slow": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_isin.assert_isin_equal": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.lib.arraysetops.isin",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_manyways": {
  "lineno": 405,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.intersect1d",
   "numpy.lib.arraysetops.setdiff1d",
   "numpy.lib.arraysetops.setxor1d",
   "numpy.lib.arraysetops.union1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_setdiff1d": {
  "lineno": 375,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.arraysetops.setdiff1d",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_setdiff1d_char_array": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.setdiff1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_setdiff1d_unique": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.setdiff1d",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_setxor1d": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.setxor1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_union1d": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.union1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique._run_axis_tests": {
  "lineno": 631,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.unique",
   "numpy.take",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_1d": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.chararray",
   "numpy.empty",
   "numpy.intp",
   "numpy.lib.arraysetops.unique",
   "numpy.multiply",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.typecodes",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_1d.check_all": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.lib.arraysetops.unique",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_1d_with_axis": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.arraysetops.unique",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_axis": {
  "lineno": 545,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.arraysetops.unique",
   "numpy.testing.assert_array_equal",
   "numpy.typecodes",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_axis_errors": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.lib.arraysetops.unique",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_axis_list": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.lib.arraysetops.unique",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_axis_zeros": {
  "lineno": 573,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.int8",
   "numpy.lib.arraysetops.unique",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_masked": {
  "lineno": 609,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.masked_equal",
   "numpy.testing.assert_array_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_sort_order_with_axis": {
  "lineno": 622,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_arrayterator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_arrayterator.test": {
  "lineno": 10,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.all",
   "numpy.arange",
   "numpy.lib.Arrayterator",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.testing.assert_",
   "operator.mul"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_financial.TestFinancial": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_broadcast": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.ipmt",
   "numpy.nper",
   "numpy.ppmt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_broadcast_decimal": {
  "lineno": 365,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.ipmt",
   "numpy.ppmt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_decimal_with_when": {
  "lineno": 272,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.fv",
   "numpy.ipmt",
   "numpy.pmt",
   "numpy.ppmt",
   "numpy.pv",
   "numpy.rate",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_fv": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.fv",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_fv_decimal": {
  "lineno": 71,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.fv",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ipmt": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.ipmt",
   "numpy.round",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ipmt_decimal": {
  "lineno": 147,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.ipmt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_irr": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.irr",
   "numpy.nan",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_mirr": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.mirr",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_mirr_decimal": {
  "lineno": 188,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.isnan",
   "numpy.mirr",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_nper": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.nper",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_nper2": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.nper",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_npv": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.npv",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_npv_decimal": {
  "lineno": 168,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.npv",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_npv_irr_congruence": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.irr",
   "numpy.npv",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pmt": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pmt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pmt_decimal": {
  "lineno": 91,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "numpy.pmt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.ppmt",
   "numpy.round",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt_decimal": {
  "lineno": 119,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.ppmt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt_special_rate": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.ppmt",
   "numpy.round",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt_special_rate_decimal": {
  "lineno": 130,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.ppmt",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt_special_rate_decimal.raise_error_because_not_equal": {
  "lineno": 134,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.ppmt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pv": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.pv",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pv_decimal": {
  "lineno": 62,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.pv",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_rate": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.rate",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_rate_decimal": {
  "lineno": 33,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.rate",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_when": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.fv",
   "numpy.ipmt",
   "numpy.nper",
   "numpy.pmt",
   "numpy.ppmt",
   "numpy.pv",
   "numpy.rate",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.filter_deprecation": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_financial.filter_deprecation.newfunc": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "module"
 },
 "numpy.lib.tests.test_format.BytesIOSRandomSize": {
  "lineno": 418,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_format.BytesIOSRandomSize.read": {
  "lineno": 419,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.assert_equal_": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.roundtrip": {
  "lineno": 425,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.read_array",
   "numpy.lib.format.write_array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.roundtrip_randsize": {
  "lineno": 433,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.read_array",
   "numpy.lib.format.write_array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.roundtrip_truncated": {
  "lineno": 441,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.read_array",
   "numpy.lib.format.write_array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.setup_module": {
  "lineno": 298,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.teardown_module": {
  "lineno": 303,
  "symbols_in_volume": [
   "os.path.isdir",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_bad_header": {
  "lineno": 850,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.read_array_header_1_0",
   "numpy.lib.format.write_array_header_1_0",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_bad_magic_args": {
  "lineno": 807,
  "symbols_in_volume": [
   "numpy.lib.format.magic",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_compressed_roundtrip": {
  "lineno": 518,
  "symbols_in_volume": [
   "numpy.load",
   "numpy.random.rand",
   "numpy.savez_compressed",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_descr_to_dtype": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.lib.format.descr_to_dtype",
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_empty_npz": {
  "lineno": 924,
  "symbols_in_volume": [
   "numpy.load",
   "numpy.savez",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_large_archive": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "numpy.intp",
   "numpy.load",
   "numpy.savez",
   "numpy.testing.assert_",
   "numpy.uint8",
   "os.path.join",
   "pytest.mark.skipif",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_large_file_support": {
  "lineno": 877,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.load",
   "numpy.save",
   "numpy.testing.assert_array_equal",
   "os.path.join",
   "pytest.skip",
   "subprocess.check_call",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_large_header": {
  "lineno": 814,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.write_array_header_1_0",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_load_padded_dtype": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.load",
   "numpy.savez",
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "os.path.join",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_long_str": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.lib.format.BUFFER_SIZE",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_memmap_roundtrip": {
  "lineno": 480,
  "symbols_in_volume": [
   "numpy.lib.format.open_memmap",
   "numpy.lib.format.write_array",
   "os.path.join",
   "pytest.mark.slow",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_metadata_dtype": {
  "lineno": 955,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.dtype",
   "numpy.lib.format._has_metadata",
   "numpy.load",
   "numpy.ones",
   "numpy.save",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_pickle_disallow": {
  "lineno": 605,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.load",
   "numpy.save",
   "numpy.testing.assert_raises",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_pickle_python2_python3": {
  "lineno": 558,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.load",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_python2_python3_interoperability": {
  "lineno": 552,
  "symbols_in_volume": [
   "numpy.load",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_array_header_1_0": {
  "lineno": 824,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.ARRAY_ALIGN",
   "numpy.lib.format.MAGIC_LEN",
   "numpy.lib.format.read_array_header_1_0",
   "numpy.lib.format.write_array",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_array_header_2_0": {
  "lineno": 837,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.ARRAY_ALIGN",
   "numpy.lib.format.MAGIC_LEN",
   "numpy.lib.format.read_array_header_2_0",
   "numpy.lib.format.write_array",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_magic": {
  "lineno": 774,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.MAGIC_LEN",
   "numpy.lib.format.read_magic",
   "numpy.lib.format.write_array",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_magic_bad_magic": {
  "lineno": 795,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.read_array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_version_1_0_bad_magic": {
  "lineno": 801,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.read_array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_roundtrip": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_roundtrip_randsize": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_roundtrip_truncated": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_unicode_field_names": {
  "lineno": 931,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.format.read_array",
   "numpy.lib.format.write_array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_warns",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_version_2_0": {
  "lineno": 676,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.format.ARRAY_ALIGN",
   "numpy.lib.format.read_array",
   "numpy.lib.format.write_array",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_version_2_0_memmap": {
  "lineno": 701,
  "symbols_in_volume": [
   "numpy.lib.format.open_memmap",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "pytest.mark.slow",
   "tempfile.mktemp",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_write_version": {
  "lineno": 729,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "numpy.lib.format.write_array",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc": {
  "lineno": 3357,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc.test_add_doc": {
  "lineno": 3359,
  "symbols_in_volume": [
   "numpy.core.flatiter.index.__doc__",
   "numpy.core.ufunc.identity.__doc__",
   "numpy.lib.index_tricks.mgrid.__doc__",
   "numpy.testing.IS_PYPY",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif",
   "pytest.mark.xfail",
   "sys.flags.optimize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc_ufunc": {
  "lineno": 3347,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc_ufunc.test_string_arg": {
  "lineno": 3353,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.lib.add_newdoc_ufunc",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc_ufunc.test_ufunc_arg": {
  "lineno": 3349,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.lib.add_newdoc_ufunc",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAll": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAll.test_basic": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAll.test_nd": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.alltrue",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAmax": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAmax.test_basic": {
  "lineno": 555,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAmin": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAmin.test_basic": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.amin",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAngle": {
  "lineno": 1137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAngle.test_basic": {
  "lineno": 1139,
  "symbols_in_volume": [
   "numpy.arctan",
   "numpy.array",
   "numpy.lib.angle",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAngle.test_subclass": {
  "lineno": 1152,
  "symbols_in_volume": [
   "numpy.arctan",
   "numpy.lib.angle",
   "numpy.ma.array",
   "numpy.ma.masked",
   "numpy.sqrt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAny": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAny.test_basic": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAny.test_nd": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.sometrue",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_basic": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.average",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_object_dtype": {
  "lineno": 379,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "numpy.lib.average",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_returned": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.average",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_subclasses": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_subclasses.subclass": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_upcasting": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_weights": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.average",
   "numpy.float32",
   "numpy.float64",
   "numpy.lib.average",
   "numpy.random.rand",
   "numpy.result_type",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount": {
  "lineno": 2340,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_dtype_reference_leaks": {
  "lineno": 2410,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.double",
   "numpy.dtype",
   "numpy.intp",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_empty": {
  "lineno": 2383,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_empty_with_minlength": {
  "lineno": 2388,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_error_not_1d": {
  "lineno": 2426,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.bincount",
   "numpy.testing.assert_raises",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple": {
  "lineno": 2342,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bincount",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple2": {
  "lineno": 2346,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple_weight": {
  "lineno": 2350,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple_weight2": {
  "lineno": 2356,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_incorrect_minlength": {
  "lineno": 2393,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_minlength": {
  "lineno": 2362,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_minlength_and_weights": {
  "lineno": 2377,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_minlength_smaller_than_maxvalue": {
  "lineno": 2370,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite": {
  "lineno": 1879,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite.test_dtype_order": {
  "lineno": 1889,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.lib.asarray_chkfinite",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite.test_simple": {
  "lineno": 1881,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.lib.asarray_chkfinite",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCopy": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCopy.test_basic": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.copy",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCopy.test_order": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.copy",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCopy.test_subok": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.ma.isMaskedArray",
   "numpy.ma.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef": {
  "lineno": 1896,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_bias": {
  "lineno": 1942,
  "symbols_in_volume": [
   "numpy.lib.corrcoef",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_warns",
   "numpy.testing.suppress_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_complex": {
  "lineno": 1952,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.array",
   "numpy.lib.corrcoef",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_ddof": {
  "lineno": 1930,
  "symbols_in_volume": [
   "numpy.lib.corrcoef",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_warns",
   "numpy.testing.suppress_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_empty": {
  "lineno": 1964,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.corrcoef",
   "numpy.nan",
   "numpy.testing.assert_array_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_extreme": {
  "lineno": 1973,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.array",
   "numpy.errstate",
   "numpy.lib.corrcoef",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_non_array": {
  "lineno": 1917,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_simple": {
  "lineno": 1921,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.lib.corrcoef",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_xy": {
  "lineno": 1959,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.corrcoef",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov": {
  "lineno": 1981,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int_",
   "numpy.ones"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_1D_rowvar": {
  "lineno": 2024,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.cov",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_1D_variance": {
  "lineno": 2029,
  "symbols_in_volume": [
   "numpy.lib.cov",
   "numpy.testing.assert_allclose",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_aweights": {
  "lineno": 2048,
  "symbols_in_volume": [
   "numpy.lib.cov",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_basic": {
  "lineno": 1994,
  "symbols_in_volume": [
   "numpy.lib.cov",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_complex": {
  "lineno": 1997,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.cov",
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_empty": {
  "lineno": 2008,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.cov",
   "numpy.nan",
   "numpy.testing.assert_array_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_fweights": {
  "lineno": 2032,
  "symbols_in_volume": [
   "numpy.int_",
   "numpy.lib.cov",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_unit_fweights_and_aweights": {
  "lineno": 2060,
  "symbols_in_volume": [
   "numpy.lib.cov",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_wrong_ddof": {
  "lineno": 2017,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.lib.cov",
   "numpy.testing.assert_array_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_xy": {
  "lineno": 2003,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.cov",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCumprod": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCumprod.test_basic": {
  "lineno": 637,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.cumprod",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.uint16",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCumsum": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCumsum.test_basic": {
  "lineno": 594,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.cumsum",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.testing.assert_array_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete": {
  "lineno": 802,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDelete._check_inverse_of_slicing": {
  "lineno": 808,
  "symbols_in_volume": [
   "numpy.lib.delete",
   "numpy.lib.setxor1d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.setup": {
  "lineno": 804,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_0d": {
  "lineno": 851,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.array",
   "numpy.lib.delete",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_array_order_preserve": {
  "lineno": 868,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.delete",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_fancy": {
  "lineno": 826,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.delete",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_index_floats": {
  "lineno": 878,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.delete",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_single": {
  "lineno": 847,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_slices": {
  "lineno": 817,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_subclass": {
  "lineno": 858,
  "symbols_in_volume": [
   "numpy.lib.delete",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_subclass.SubClass": {
  "lineno": 859,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDiff": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_append": {
  "lineno": 773,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.diff",
   "numpy.lib.diff",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_axis": {
  "lineno": 683,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.array",
   "numpy.float64",
   "numpy.lib.diff",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_basic": {
  "lineno": 664,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.diff",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_n": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.int_",
   "numpy.lib.diff",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_nd": {
  "lineno": 699,
  "symbols_in_volume": [
   "numpy.lib.diff",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_prepend": {
  "lineno": 749,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.cumsum",
   "numpy.diff",
   "numpy.lib.diff",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_subclass": {
  "lineno": 734,
  "symbols_in_volume": [
   "numpy.lib.diff",
   "numpy.ma.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_times": {
  "lineno": 722,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.datetime64",
   "numpy.lib.diff",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize": {
  "lineno": 1663,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_casting_error": {
  "lineno": 1719,
  "symbols_in_volume": [
   "numpy.lib.digitize",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_forward": {
  "lineno": 1665,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.digitize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_large_integers_decreasing": {
  "lineno": 1740,
  "symbols_in_volume": [
   "numpy.digitize",
   "numpy.testing.assert_equal",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_large_integers_increasing": {
  "lineno": 1735,
  "symbols_in_volume": [
   "numpy.digitize",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_monotonic": {
  "lineno": 1703,
  "symbols_in_volume": [
   "numpy.lib.digitize",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_random": {
  "lineno": 1675,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.lib.digitize",
   "numpy.linspace",
   "numpy.random.rand",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_return_type": {
  "lineno": 1726,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.digitize",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_return_type.A": {
  "lineno": 1728,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_reverse": {
  "lineno": 1670,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.digitize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_basic": {
  "lineno": 1680,
  "symbols_in_volume": [
   "numpy.lib.digitize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_open": {
  "lineno": 1688,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.digitize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_open_random": {
  "lineno": 1698,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.lib.digitize",
   "numpy.linspace",
   "numpy.random.rand",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_open_reverse": {
  "lineno": 1693,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.digitize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins": {
  "lineno": 1186,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_basic": {
  "lineno": 1188,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.extract",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_both": {
  "lineno": 1215,
  "symbols_in_volume": [
   "numpy.lib.extract",
   "numpy.lib.place",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_place": {
  "lineno": 1193,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.place",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_raises_regex",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows": {
  "lineno": 1757,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_bartlett": {
  "lineno": 1773,
  "symbols_in_volume": [
   "numpy.lib.bartlett",
   "numpy.lib.flipud",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_blackman": {
  "lineno": 1780,
  "symbols_in_volume": [
   "numpy.lib.blackman",
   "numpy.lib.flipud",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_hamming": {
  "lineno": 1766,
  "symbols_in_volume": [
   "numpy.lib.flipud",
   "numpy.lib.hamming",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_hanning": {
  "lineno": 1759,
  "symbols_in_volume": [
   "numpy.lib.flipud",
   "numpy.lib.hanning",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_3d_swap_axis0": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.flip",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_3d_swap_axis1": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.flip",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_3d_swap_axis2": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.flip",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_4d": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.flip",
   "numpy.flipud",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_axes": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.flip",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_basic_lr": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.flip",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_basic_ud": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.flip",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_default_axis": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.flip",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_multiple_axes": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.flip",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient": {
  "lineno": 885,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_args": {
  "lineno": 895,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.cumsum",
   "numpy.lib.gradient",
   "numpy.ones",
   "numpy.stack",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_badargs": {
  "lineno": 920,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cumsum",
   "numpy.lib.gradient",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_basic": {
  "lineno": 887,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.gradient",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_datetime64": {
  "lineno": 936,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.lib.gradient",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_f_decreasing_unsigned_int": {
  "lineno": 1102,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.gradient",
   "numpy.testing.assert_array_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_f_signed_int_big_jump": {
  "lineno": 1109,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.lib.gradient",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_inexact_dtypes": {
  "lineno": 1084,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diff",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.lib.gradient",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_masked": {
  "lineno": 948,
  "symbols_in_volume": [
   "numpy.gradient",
   "numpy.lib.gradient",
   "numpy.ma.arange",
   "numpy.ma.array",
   "numpy.ma.masked",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_second_order_accurate": {
  "lineno": 963,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.gradient",
   "numpy.linspace",
   "numpy.random.random",
   "numpy.random.seed",
   "numpy.sort",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_spacing": {
  "lineno": 983,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.gradient",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.tile"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_specific_axes": {
  "lineno": 1047,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.array",
   "numpy.lib.gradient",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_timedelta64": {
  "lineno": 1073,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.lib.gradient",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_values": {
  "lineno": 1090,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.gradient",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_x_decreasing_unsigned": {
  "lineno": 1118,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.gradient",
   "numpy.testing.assert_array_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_x_signed_int_big_jump": {
  "lineno": 1126,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.lib.gradient",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_0d": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.array",
   "numpy.lib.insert",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_basic": {
  "lineno": 449,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.lib.insert",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_index_array_copied": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.insert",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_index_floats": {
  "lineno": 546,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.insert",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_multidim": {
  "lineno": 469,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.lib.insert",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_structured_array": {
  "lineno": 536,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.insert",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_subclass": {
  "lineno": 518,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.insert",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_subclass.SubClass": {
  "lineno": 519,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestInterp": {
  "lineno": 2436,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestInterp.sc": {
  "lineno": 2511,
  "symbols_in_volume": [
   "numpy.float_",
   "numpy.multiply",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_basic": {
  "lineno": 2445,
  "symbols_in_volume": [
   "numpy.interp",
   "numpy.linspace",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_complex_interp": {
  "lineno": 2569,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.interp",
   "numpy.linspace",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_exceptions": {
  "lineno": 2438,
  "symbols_in_volume": [
   "numpy.lib.interp",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_if_len_x_is_small": {
  "lineno": 2614,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.interp",
   "numpy.pi",
   "numpy.sin",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_non_finite_any_nan": {
  "lineno": 2526,
  "symbols_in_volume": [
   "numpy.interp",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_non_finite_behavior_exact_x": {
  "lineno": 2503,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.interp",
   "numpy.nan",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_non_finite_half_inf_f": {
  "lineno": 2560,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.interp",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_non_finite_half_inf_x": {
  "lineno": 2553,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.interp",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_non_finite_half_inf_xf": {
  "lineno": 2542,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.interp",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_non_finite_inf": {
  "lineno": 2533,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.interp",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_period": {
  "lineno": 2619,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.interp",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_right_left_behavior": {
  "lineno": 2451,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.double",
   "numpy.lib.interp",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_scalar_interpolation_point": {
  "lineno": 2489,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.interp",
   "numpy.linspace",
   "numpy.nan",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_zero_dimensional_interpolation_point": {
  "lineno": 2597,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.interp",
   "numpy.linspace",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestKaiser": {
  "lineno": 2127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestKaiser.test_int_beta": {
  "lineno": 2142,
  "symbols_in_volume": [
   "numpy.lib.kaiser"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestKaiser.test_simple": {
  "lineno": 2129,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isfinite",
   "numpy.lib.kaiser",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestLeaks": {
  "lineno": 1623,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestLeaks.A": {
  "lineno": 1624,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestLeaks.A.bound": {
  "lineno": 1627,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestLeaks.A.unbound": {
  "lineno": 1630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestLeaks.test_frompyfunc_leaks": {
  "lineno": 1634,
  "symbols_in_volume": [
   "gc.collect",
   "gc.disable",
   "gc.enable",
   "numpy.arange",
   "numpy.frompyfunc",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian": {
  "lineno": 3108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_array_like": {
  "lineno": 3183,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_axis_keyword": {
  "lineno": 3132,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.median",
   "numpy.random.randint",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_basic": {
  "lineno": 3110,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.median",
   "numpy.nan",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_empty": {
  "lineno": 3258,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.median",
   "numpy.nan",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_extended_axis": {
  "lineno": 3293,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dstack",
   "numpy.median",
   "numpy.moveaxis",
   "numpy.random.normal",
   "numpy.random.shuffle",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_extended_axis_invalid": {
  "lineno": 3323,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.median",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_keepdims": {
  "lineno": 3331,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_nan_behavior": {
  "lineno": 3226,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.median",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_object": {
  "lineno": 3287,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.median",
   "numpy.nan",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_out": {
  "lineno": 3205,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_out_nan": {
  "lineno": 3214,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_overwrite_keyword": {
  "lineno": 3150,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.median",
   "numpy.random.shuffle",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass": {
  "lineno": 3190,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass.MySubClass": {
  "lineno": 3192,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass.MySubClass.__new__": {
  "lineno": 3194,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass.MySubClass.mean": {
  "lineno": 3199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid": {
  "lineno": 2159,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_indexing": {
  "lineno": 2181,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.meshgrid",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_invalid_arguments": {
  "lineno": 2206,
  "symbols_in_volume": [
   "numpy.lib.meshgrid",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_no_input": {
  "lineno": 2176,
  "symbols_in_volume": [
   "numpy.lib.meshgrid",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_return_type": {
  "lineno": 2213,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.meshgrid",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_simple": {
  "lineno": 2161,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.meshgrid",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_single_input": {
  "lineno": 2172,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.meshgrid",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_sparse": {
  "lineno": 2201,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.meshgrid",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_writeback": {
  "lineno": 2237,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.meshgrid",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMsort": {
  "lineno": 2146,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMsort.test_simple": {
  "lineno": 2148,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.msort",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile": {
  "lineno": 2635,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_2D": {
  "lineno": 2668,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.percentile",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_api": {
  "lineno": 2661,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.percentile"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_axis": {
  "lineno": 2711,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_basic": {
  "lineno": 2637,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_exception": {
  "lineno": 2795,
  "symbols_in_volume": [
   "numpy.percentile",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_extended_axis": {
  "lineno": 2900,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dstack",
   "numpy.moveaxis",
   "numpy.percentile",
   "numpy.random.normal",
   "numpy.random.shuffle",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_extended_axis_invalid": {
  "lineno": 2932,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.ones",
   "numpy.percentile",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_fraction": {
  "lineno": 2646,
  "symbols_in_volume": [
   "fractions.Fraction",
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_keepdims": {
  "lineno": 2943,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_linear": {
  "lineno": 2676,
  "symbols_in_volume": [
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_lower_higher": {
  "lineno": 2685,
  "symbols_in_volume": [
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_midpoint": {
  "lineno": 2693,
  "symbols_in_volume": [
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_nan_behavior": {
  "lineno": 2994,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.nan",
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_nearest": {
  "lineno": 2701,
  "symbols_in_volume": [
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_no_p_overwrite": {
  "lineno": 2884,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "numpy.percentile",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_out": {
  "lineno": 2963,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.percentile",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_out_nan": {
  "lineno": 2976,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.ones",
   "numpy.percentile",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_percentile_empty_dim": {
  "lineno": 2847,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.percentile",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_percentile_list": {
  "lineno": 2803,
  "symbols_in_volume": [
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_percentile_no_overwrite": {
  "lineno": 2875,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_percentile_out": {
  "lineno": 2806,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.percentile",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_percentile_overwrite": {
  "lineno": 2892,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_scalar_q": {
  "lineno": 2747,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.isscalar",
   "numpy.percentile",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_sequence": {
  "lineno": 2707,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.percentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise": {
  "lineno": 2248,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_0d": {
  "lineno": 2296,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.piecewise",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_0d_0d_condition": {
  "lineno": 2326,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.piecewise",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_0d_comparison": {
  "lineno": 2311,
  "symbols_in_volume": [
   "numpy.lib.piecewise",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_default": {
  "lineno": 2287,
  "symbols_in_volume": [
   "numpy.lib.piecewise",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_multidimensional_extrafunc": {
  "lineno": 2332,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.piecewise",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_scalar_domains_three_conditions": {
  "lineno": 2283,
  "symbols_in_volume": [
   "numpy.lib.piecewise",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_simple": {
  "lineno": 2250,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.piecewise",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_two_conditions": {
  "lineno": 2279,
  "symbols_in_volume": [
   "numpy.lib.piecewise",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestProd": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestProd.test_basic": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.prod",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint16",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPtp": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestPtp.test_basic": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestQuantile": {
  "lineno": 3056,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestQuantile.test_basic": {
  "lineno": 3059,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.quantile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestQuantile.test_correct_quantile_value": {
  "lineno": 3065,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.quantile",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestQuantile.test_fraction": {
  "lineno": 3075,
  "symbols_in_volume": [
   "fractions.Fraction",
   "numpy.arange",
   "numpy.quantile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestQuantile.test_no_p_overwrite": {
  "lineno": 3095,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.quantile",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestRot90": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestRot90.test_axes": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.lib.rot90",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestRot90.test_basic": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.lib.rot90",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestRot90.test_rotation_axes": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.rot90",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestSelect._select": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_basic": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.lib.select",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_broadcasting": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.select",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_deprecated_empty": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.lib.select",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_many_arguments": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.select"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_non_bool_deprecation": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.int_",
   "numpy.lib.select",
   "numpy.testing.assert_raises",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_return_dtype": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex_",
   "numpy.int8",
   "numpy.isnan",
   "numpy.lib.select",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSinc": {
  "lineno": 1850,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestSinc.test_array_like": {
  "lineno": 1858,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.sinc",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSinc.test_simple": {
  "lineno": 1852,
  "symbols_in_volume": [
   "numpy.lib.flipud",
   "numpy.lib.sinc",
   "numpy.linspace",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSortComplex": {
  "lineno": 3368,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestSortComplex.test_sort_complex": {
  "lineno": 3386,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sort_complex",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSortComplex.test_sort_real": {
  "lineno": 3370,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sort",
   "numpy.sort_complex",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz": {
  "lineno": 1788,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_masked": {
  "lineno": 1833,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.trapz",
   "numpy.ma.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_ndim": {
  "lineno": 1796,
  "symbols_in_volume": [
   "numpy.lib.trapz",
   "numpy.linspace",
   "numpy.ones_like",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_simple": {
  "lineno": 1790,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.exp",
   "numpy.lib.trapz",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros": {
  "lineno": 1163,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_basic": {
  "lineno": 1170,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.trim_zeros",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_leading_skip": {
  "lineno": 1175,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.trim_zeros",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_trailing_skip": {
  "lineno": 1180,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.trim_zeros",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestUnique": {
  "lineno": 1867,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestUnique.test_simple": {
  "lineno": 1869,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.lib.unique",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestUnwrap": {
  "lineno": 1748,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestUnwrap.test_simple": {
  "lineno": 1750,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.lib.diff",
   "numpy.lib.unwrap",
   "numpy.pi",
   "numpy.random.rand",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize": {
  "lineno": 1235,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_UnboundMethod_ticket_1156": {
  "lineno": 1423,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_UnboundMethod_ticket_1156.Foo": {
  "lineno": 1425,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_UnboundMethod_ticket_1156.Foo.bar": {
  "lineno": 1428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_assigning_docstring": {
  "lineno": 1411,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_assigning_docstring.foo": {
  "lineno": 1412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_cache": {
  "lineno": 1453,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_cache.f": {
  "lineno": 1457,
  "symbols_in_volume": [
   "numpy.lib.vectorize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_coverage1_ticket_2100": {
  "lineno": 1404,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_coverage1_ticket_2100.foo": {
  "lineno": 1405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_execution_order_ticket_1487": {
  "lineno": 1436,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.vectorize",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords": {
  "lineno": 1272,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords.foo": {
  "lineno": 1274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords2_ticket_2100": {
  "lineno": 1353,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords2_ticket_2100.foo": {
  "lineno": 1356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords3_ticket_2100": {
  "lineno": 1370,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords3_ticket_2100.mypolyval": {
  "lineno": 1372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords4_ticket_2100": {
  "lineno": 1385,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords4_ticket_2100.f": {
  "lineno": 1387,
  "symbols_in_volume": [
   "numpy.lib.vectorize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords5_ticket_2100": {
  "lineno": 1396,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords5_ticket_2100.f": {
  "lineno": 1398,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.prod"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords_no_func_code": {
  "lineno": 1343,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "random.randrange"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords_with_otypes_order1": {
  "lineno": 1286,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords_with_otypes_order2": {
  "lineno": 1296,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords_with_otypes_order3": {
  "lineno": 1307,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords_with_otypes_several_kwd_args1": {
  "lineno": 1319,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords_with_otypes_several_kwd_args2": {
  "lineno": 1332,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_large": {
  "lineno": 1259,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.linspace",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_otypes": {
  "lineno": 1467,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_parse_gufunc_signature": {
  "lineno": 1473,
  "symbols_in_volume": [
   "numpy.lib.function_base._parse_gufunc_signature",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_scalar": {
  "lineno": 1248,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_scalar.addsubtract": {
  "lineno": 1249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_center": {
  "lineno": 1511,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_center.center": {
  "lineno": 1512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_computed_size": {
  "lineno": 1542,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_excluded": {
  "lineno": 1550,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_excluded.foo": {
  "lineno": 1552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_invalid_inputs": {
  "lineno": 1565,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_raises_regex",
   "operator.add"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_invalid_outputs": {
  "lineno": 1580,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_mean_last": {
  "lineno": 1503,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_mean_last.mean": {
  "lineno": 1504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_otypes": {
  "lineno": 1559,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_outer": {
  "lineno": 1526,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.outer",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_simple": {
  "lineno": 1492,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_simple.addsubtract": {
  "lineno": 1493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_two_outputs": {
  "lineno": 1519,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_simple": {
  "lineno": 1237,
  "symbols_in_volume": [
   "numpy.lib.vectorize",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_simple.addsubtract": {
  "lineno": 1238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_size_zero_output": {
  "lineno": 1595,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises_regex",
   "numpy.vectorize",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_string_ticket_1892": {
  "lineno": 1447,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_ufunc": {
  "lineno": 1265,
  "symbols_in_volume": [
   "math.cos",
   "numpy.array",
   "numpy.cos",
   "numpy.lib.vectorize",
   "numpy.pi",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.Test_I0": {
  "lineno": 2081,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.Test_I0.test_non_array": {
  "lineno": 2110,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.i0",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.Test_I0.test_non_array.array_like": {
  "lineno": 2113,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.Test_I0.test_non_array.array_like.__array_wrap__": {
  "lineno": 2116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.Test_I0.test_simple": {
  "lineno": 2083,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.i0",
   "numpy.lib.i0",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base._foo1": {
  "lineno": 1227,
  "symbols_in_volume": [
   "math.floor"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base._foo2": {
  "lineno": 1231,
  "symbols_in_volume": [
   "math.floor"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base._make_complex": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.broadcast",
   "numpy.complex_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.compare_results": {
  "lineno": 2630,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.get_mat": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.add.outer",
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_histograms.TestHistogram": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.do_precision": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.do_precision_lower_bound": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.finfo",
   "numpy.histogram",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.do_precision_upper_bound": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.finfo",
   "numpy.histogram",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.do_signed_overflow_bounds": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.setup": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.teardown": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_arr_weights_mismatch": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_bin_array_dims": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram",
   "numpy.linspace",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_bin_edge_cases": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_bool_conversion": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_datetime": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_density": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diff",
   "numpy.histogram",
   "numpy.inf",
   "numpy.lib.histograms.histogram",
   "numpy.random.rand",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_empty": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_error_binnum_type": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.lib.histograms.histogram",
   "numpy.linspace",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_exotic_weights": {
  "lineno": 196,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_f32_rounding": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.histogram2d",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_finite_range": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.lib.histograms.histogram",
   "numpy.linspace",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_histogram_bin_edges": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.histograms.histogram",
   "numpy.lib.histograms.histogram_bin_edges",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_invalid_range": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.histogram",
   "numpy.linspace",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_last_bin_inclusive_range": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_no_side_effects": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_normed": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.arange",
   "numpy.diff",
   "numpy.lib.histograms.histogram",
   "numpy.random.rand",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_object_array_of_0d": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram",
   "numpy.inf",
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_one_bin": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_outliers": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diff",
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_precision": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.half",
   "numpy.longdouble",
   "numpy.single"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_signed_overflow_bounds": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.byte",
   "numpy.int_",
   "numpy.intc",
   "numpy.longlong",
   "numpy.short"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_simple": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.lib.histograms.histogram",
   "numpy.linspace",
   "numpy.random.rand",
   "numpy.sum",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_some_nan_values": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.histograms.histogram",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_type": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.floating",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.lib.histograms.histogram",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_unsigned_monotonicity_check": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogram.test_weights": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.lib.histograms.histogram",
   "numpy.linspace",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_empty": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_incorrect_methods": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_limited_variance": {
  "lineno": 508,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.histograms.histogram_bin_edges",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_novariance": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.histogram",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_outlier": {
  "lineno": 526,
  "symbols_in_volume": [
   "numpy.histogram",
   "numpy.hstack",
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_scott_vs_stone": {
  "lineno": 546,
  "symbols_in_volume": [
   "numpy.geomspace",
   "numpy.mean",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_scott_vs_stone.nbins_ratio": {
  "lineno": 549,
  "symbols_in_volume": [
   "numpy.histogram",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_signed_integer_data": {
  "lineno": 593,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram",
   "numpy.int32",
   "numpy.int8",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_simple": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.histogram",
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_simple_range": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.histogram",
   "numpy.hstack",
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_simple_weighted": {
  "lineno": 603,
  "symbols_in_volume": [
   "numpy.lib.histograms.histogram",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramOptimBinNums.test_small": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.histogram",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_bins_errors": {
  "lineno": 697,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.histogramdd",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_density_non_uniform_1d": {
  "lineno": 814,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.histograms.histogram",
   "numpy.lib.histograms.histogramdd",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_density_non_uniform_2d": {
  "lineno": 787,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.histograms.histogramdd",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_density_normed_redundancy": {
  "lineno": 832,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.histograms.histogramdd",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_density_via_normed": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.histograms.histogram",
   "numpy.lib.histograms.histogramdd",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_edge_dtype": {
  "lineno": 764,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.histograms.histogramdd",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_empty": {
  "lineno": 691,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogramdd",
   "numpy.lib.histograms.histogramdd",
   "numpy.testing.assert_array_max_ulp",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_equal_edges": {
  "lineno": 750,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.histograms.histogramdd",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_finite_range": {
  "lineno": 742,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.lib.histograms.histogramdd",
   "numpy.nan",
   "numpy.random.random",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_identical_samples": {
  "lineno": 686,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.histograms.histogramdd",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_inf_edges": {
  "lineno": 707,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.errstate",
   "numpy.histogramdd",
   "numpy.inf",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_large_integers": {
  "lineno": 775,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.lib.histograms.histogramdd",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_rightmost_binedge": {
  "lineno": 719,
  "symbols_in_volume": [
   "numpy.lib.histograms.histogramdd",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_shape_3d": {
  "lineno": 652,
  "symbols_in_volume": [
   "numpy.lib.histograms.histogramdd",
   "numpy.random.rand",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_shape_4d": {
  "lineno": 661,
  "symbols_in_volume": [
   "numpy.lib.histograms.histogramdd",
   "numpy.random.rand",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_simple": {
  "lineno": 615,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.array",
   "numpy.lib.histograms.histogramdd",
   "numpy.split",
   "numpy.squeeze",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_histograms.TestHistogramdd.test_weights": {
  "lineno": 675,
  "symbols_in_volume": [
   "numpy.lib.histograms.histogramdd",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_0d": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.index_tricks.r_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_1d": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.index_tricks.r_",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_2d": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.r_",
   "numpy.random.rand",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_complex_step": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.r_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_mixed_type": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.r_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_more_mixed_type": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.index_tricks.r_",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestDiagIndicesFrom": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestDiagIndicesFrom.test_diag_indices_from": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.index_tricks.diag_indices_from",
   "numpy.random.random",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestDiagIndicesFrom.test_error_shape_mismatch": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.diag_indices_from",
   "numpy.testing.assert_raises_regex",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestDiagIndicesFrom.test_error_small_input": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.diag_indices_from",
   "numpy.ones",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestFillDiagonal": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestFillDiagonal.test_basic": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.index_tricks.fill_diagonal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestFillDiagonal.test_hetero_shape_handling": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.fill_diagonal",
   "numpy.testing.assert_raises_regex",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestFillDiagonal.test_low_dim_handling": {
  "lineno": 416,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.fill_diagonal",
   "numpy.testing.assert_raises_regex",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestFillDiagonal.test_operate_4d_array": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.index_tricks.fill_diagonal",
   "numpy.testing.assert_equal",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestFillDiagonal.test_tall_matrix": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.index_tricks.fill_diagonal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestFillDiagonal.test_tall_matrix_wrap": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.index_tricks.fill_diagonal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestFillDiagonal.test_wide_matrix": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.index_tricks.fill_diagonal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_basic": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.mgrid",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_linspace_equivalence": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.mgrid",
   "numpy.linspace",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_mgrid_size_none_handling": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.mgrid",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_nd": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.mgrid",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_sparse": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.broadcast_arrays",
   "numpy.lib.index_tricks.mgrid",
   "numpy.lib.index_tricks.ogrid",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIndexExpression": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestIndexExpression.test_regression_1": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.index_tricks.index_exp",
   "numpy.lib.index_tricks.s_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIndexExpression.test_simple_1": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.index_exp",
   "numpy.lib.index_tricks.s_",
   "numpy.random.rand",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_.test_1d_only": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.ix_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_.test_bool": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.ix_",
   "numpy.nonzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_.test_regression_1": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.intp",
   "numpy.ix_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_.test_repeated_input": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.index_tricks.ix_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_.test_shape_and_dtype": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.ix_",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestNdenumerate": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestNdenumerate.test_basic": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.index_tricks.ndenumerate",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_0d": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises_regex",
   "numpy.unravel_index"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_basic": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ravel_multi_index",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "numpy.unravel_index"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_big_indices": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "numpy.intp",
   "numpy.ravel_multi_index",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.unravel_index"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_clipmodes": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.ravel_multi_index",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_dtypes": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.ravel_multi_index",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.unravel_index"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_empty_array_ravel": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.intp",
   "numpy.ravel_multi_index",
   "numpy.testing.assert_raises",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_empty_array_unravel": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.intp",
   "numpy.testing.assert_raises",
   "numpy.unravel_index",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_empty_indices": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ravel_multi_index",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises_regex",
   "numpy.unravel_index"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_writeability": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.unravel_index"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_c_": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.c_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_diag_indices": {
  "lineno": 430,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.index_tricks.diag_indices",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_ndindex": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.ndenumerate",
   "numpy.lib.index_tricks.ndindex",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.maxsize"
  ],
  "type": "module"
 },
 "numpy.lib.tests.test_io.JustReader": {
  "lineno": 2513,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.JustReader.__init__": {
  "lineno": 2514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_io.JustReader.read": {
  "lineno": 2517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_io.JustReader.seek": {
  "lineno": 2520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_io.JustWriter": {
  "lineno": 2503,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.JustWriter.__init__": {
  "lineno": 2504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_io.JustWriter.flush": {
  "lineno": 2510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_io.JustWriter.write": {
  "lineno": 2507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase": {
  "lineno": 603,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.check_compressed": {
  "lineno": 604,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_binary_decode": {
  "lineno": 647,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_compressed_bz2": {
  "lineno": 623,
  "symbols_in_volume": [
   "bz2.open",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_compressed_gzip": {
  "lineno": 620,
  "symbols_in_volume": [
   "gzip.open"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_compressed_lzma": {
  "lineno": 627,
  "symbols_in_volume": [
   "lzma.open",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_converters_decode": {
  "lineno": 652,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_converters_nodecode": {
  "lineno": 662,
  "symbols_in_volume": [
   "io.open",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_encoding": {
  "lineno": 631,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_stringload": {
  "lineno": 638,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.RoundtripTest.check_roundtrips": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.asfortranarray"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.roundtrip": {
  "lineno": 76,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.lib.npyio.NpzFile",
   "numpy.load",
   "os.remove",
   "sys.platform",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_1D": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_array": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_array_object": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_format_2_0": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.slow",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_mmap": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asfortranarray",
   "pytest.mark.skipif",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_record": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt": {
  "lineno": 1233,
  "symbols_in_volume": [
   "numpy.genfromtxt"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_1D": {
  "lineno": 1263,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_array": {
  "lineno": 1251,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_auto_dtype": {
  "lineno": 1349,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_auto_dtype_largeint": {
  "lineno": 2344,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.int64",
   "numpy.int_",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_auto_dtype_uniform": {
  "lineno": 1365,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_autonames_and_usecols": {
  "lineno": 1441,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_autostrip": {
  "lineno": 1939,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_binary_decode_autodtype": {
  "lineno": 2114,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_commented_header": {
  "lineno": 1392,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_comments": {
  "lineno": 1275,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_comments_is_none": {
  "lineno": 2071,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_cornercases": {
  "lineno": 1475,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.object_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_cornercases2": {
  "lineno": 1486,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.datetime64",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_with_usecols": {
  "lineno": 1453,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_with_usecols_and_names": {
  "lineno": 1462,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_default_field_format": {
  "lineno": 1895,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_dtype_with_converters": {
  "lineno": 1530,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.bytes",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_dtype_with_converters_and_usecols": {
  "lineno": 1542,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal",
   "numpy.rec.array",
   "numpy.recfromcsv"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_dtype_with_object": {
  "lineno": 1557,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_dtype_with_object_no_converter": {
  "lineno": 1584,
  "symbols_in_volume": [
   "numpy.genfromtxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_easy_structured_dtype": {
  "lineno": 1930,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_empty_file": {
  "lineno": 1699,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_fancy_dtype": {
  "lineno": 1372,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_fancy_dtype_alt": {
  "lineno": 1711,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.genfromtxt",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_file_is_closed_on_error": {
  "lineno": 1428,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.testing.assert_no_warnings",
   "numpy.testing.tempdir",
   "os.path.join",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_filling_values": {
  "lineno": 2063,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_fixed_width_names": {
  "lineno": 2048,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_from_gzip": {
  "lineno": 2319,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "io.BytesIO",
   "numpy.arange",
   "numpy.compat.asbytes",
   "numpy.genfromtxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_using_filename": {
  "lineno": 2305,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.genfromtxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_using_generator": {
  "lineno": 2335,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.genfromtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_using_generator.count": {
  "lineno": 2337,
  "symbols_in_volume": [
   "numpy.compat.asbytes"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_header": {
  "lineno": 1335,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_incomplete_names": {
  "lineno": 2006,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_inconsistent_dtype": {
  "lineno": 1885,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_integer_delimiter": {
  "lineno": 1620,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_converter": {
  "lineno": 1509,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.lib._iotools.ConverterError",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise": {
  "lineno": 1834,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.lib._iotools.ConversionWarning",
   "numpy.ma.testutils.assert_equal",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise.f": {
  "lineno": 1847,
  "symbols_in_volume": [
   "numpy.genfromtxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise_with_usecols": {
  "lineno": 1858,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.lib._iotools.ConversionWarning",
   "numpy.ma.testutils.assert_equal",
   "numpy.ones",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise_with_usecols.f": {
  "lineno": 1871,
  "symbols_in_volume": [
   "numpy.genfromtxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_latin1": {
  "lineno": 2086,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_max_rows": {
  "lineno": 2251,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.lib._iotools.ConversionWarning",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_missing": {
  "lineno": 1627,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_missing_with_tabs": {
  "lineno": 1634,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_names_and_comments_none": {
  "lineno": 1421,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_names_auto_completion": {
  "lineno": 2020,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_names_overwrite": {
  "lineno": 1380,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_names_with_usecols_bug1636": {
  "lineno": 2029,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_recfromcsv": {
  "lineno": 2210,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.bytes",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.recarray",
   "numpy.recfromcsv",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_recfromtxt": {
  "lineno": 2191,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.recarray",
   "numpy.recfromtxt",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_record": {
  "lineno": 1236,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.int32",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_replace_space": {
  "lineno": 1958,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_replace_space_known_dtype": {
  "lineno": 1982,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_shaped_dtype": {
  "lineno": 1719,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.genfromtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_single_dtype_w_explicit_names": {
  "lineno": 1912,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_single_dtype_w_implicit_names": {
  "lineno": 1921,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_single_dtype_wo_names": {
  "lineno": 1904,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_skip_footer": {
  "lineno": 1300,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_skip_footer_with_invalid": {
  "lineno": 1311,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.lib._iotools.ConversionWarning",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_skiprows": {
  "lineno": 1287,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.loadtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_spacedelimiter": {
  "lineno": 1612,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_tricky_converter_bug1666": {
  "lineno": 1522,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_unused_converter": {
  "lineno": 1497,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols": {
  "lineno": 1644,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_as_css": {
  "lineno": 1665,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_with_integer": {
  "lineno": 1683,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_with_named_columns": {
  "lineno": 1688,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_with_structured_dtype": {
  "lineno": 1673,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_user_filling_values": {
  "lineno": 1778,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_user_missing_values": {
  "lineno": 1746,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_userconverters_with_explicit_dtype": {
  "lineno": 1591,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.bytes",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_utf8_byte_encoding": {
  "lineno": 2119,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_utf8_file": {
  "lineno": 2135,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_utf8_file_nodtype_unicode": {
  "lineno": 2156,
  "symbols_in_volume": [
   "io.open",
   "locale.getpreferredencoding",
   "numpy.VisibleDeprecationWarning",
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "numpy.unicode_",
   "pytest.skip",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_utf8_userconverters_with_explicit_dtype": {
  "lineno": 1600,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.unicode",
   "numpy.genfromtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_with_masked_column_uniform": {
  "lineno": 1816,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_with_masked_column_various": {
  "lineno": 1824,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_withmissing": {
  "lineno": 1728,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_withmissing_float": {
  "lineno": 1806,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt": {
  "lineno": 675,
  "symbols_in_volume": [
   "numpy.loadtxt"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.setup": {
  "lineno": 678,
  "symbols_in_volume": [
   "numpy.lib.npyio._loadtxt_chunksize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.teardown": {
  "lineno": 682,
  "symbols_in_volume": [
   "numpy.lib.npyio._loadtxt_chunksize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_1D": {
  "lineno": 717,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_3d_shaped_dtype": {
  "lineno": 898,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_array": {
  "lineno": 703,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_bad_line": {
  "lineno": 1090,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_binary_load": {
  "lineno": 1106,
  "symbols_in_volume": [
   "locale.getpreferredencoding",
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "numpy.unicode_",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_comments_byte": {
  "lineno": 760,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_comments_multi_chars": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_comments_multiple": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_comments_unicode": {
  "lineno": 751,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_complex_misformatted": {
  "lineno": 991,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.complex128",
   "numpy.e",
   "numpy.loadtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.pi",
   "numpy.savetxt",
   "numpy.testing.assert_",
   "numpy.zeros",
   "re"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_converters_with_usecols": {
  "lineno": 741,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_dtype_with_object": {
  "lineno": 940,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.loadtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_empty_field_after_tab": {
  "lineno": 1018,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_empty_file": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.loadtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_fancy_dtype": {
  "lineno": 880,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_from_complex": {
  "lineno": 983,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_from_float_hex": {
  "lineno": 970,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.hstack",
   "numpy.loadtxt",
   "numpy.logspace",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_generator_source": {
  "lineno": 1082,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_generator_source.count": {
  "lineno": 1083,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_int64_type": {
  "lineno": 962,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.loadtxt",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_max_rows": {
  "lineno": 1124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_max_rows_larger": {
  "lineno": 1163,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_max_rows_with_read_continuation": {
  "lineno": 1150,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_max_rows_with_skiprows": {
  "lineno": 1133,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_missing": {
  "lineno": 732,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_ndmin_keyword": {
  "lineno": 1039,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_none_as_string": {
  "lineno": 1098,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.loadtxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_record": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_shaped_dtype": {
  "lineno": 889,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_skiprows": {
  "lineno": 794,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_str_dtype": {
  "lineno": 908,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bytes_",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_structure_unpack": {
  "lineno": 1028,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_uint64_type": {
  "lineno": 954,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_universal_newline": {
  "lineno": 1011,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_unused_converter": {
  "lineno": 927,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_usecols": {
  "lineno": 811,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.loadtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises_regex",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_usecols.CrazyInt": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_usecols.CrazyInt.__index__": {
  "lineno": 842,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage": {
  "lineno": 2370,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_genfromtxt": {
  "lineno": 2430,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.savetxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_loadtxt": {
  "lineno": 2372,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.savetxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_mafromtxt": {
  "lineno": 2449,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_ndfromtxt": {
  "lineno": 2438,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.genfromtxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_recfromcsv": {
  "lineno": 2473,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.recarray",
   "numpy.recfromcsv",
   "numpy.testing.assert_",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_recfromtxt": {
  "lineno": 2460,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.recarray",
   "numpy.recfromtxt",
   "numpy.testing.assert_",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_save_load": {
  "lineno": 2380,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.load",
   "numpy.save",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_save_load_memmap": {
  "lineno": 2389,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.load",
   "numpy.save",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_save_load_memmap_readwrite": {
  "lineno": 2400,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.load",
   "numpy.save",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_savez_compressed_load": {
  "lineno": 2421,
  "symbols_in_volume": [
   "numpy.load",
   "numpy.savez_compressed",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_savez_load": {
  "lineno": 2413,
  "symbols_in_volume": [
   "numpy.load",
   "numpy.savez",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveLoad": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSaveLoad.roundtrip": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal",
   "numpy.save"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_0D_3D": {
  "lineno": 347,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.savetxt",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_1D": {
  "lineno": 339,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_array": {
  "lineno": 323,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.compat.asbytes",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_complex_arrays": {
  "lineno": 452,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.complex128",
   "numpy.e",
   "numpy.ma.testutils.assert_equal",
   "numpy.pi",
   "numpy.savetxt",
   "numpy.zeros",
   "re"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_complex_negative_exponent": {
  "lineno": 490,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.complex128",
   "numpy.e",
   "numpy.ma.testutils.assert_equal",
   "numpy.pi",
   "numpy.savetxt",
   "numpy.zeros",
   "re"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_custom_writer": {
  "lineno": 508,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.savetxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_custom_writer.CustomWriter": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_custom_writer.CustomWriter.write": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_delimiter": {
  "lineno": 378,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_file_roundtrip": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.savetxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_format": {
  "lineno": 385,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_header_footer": {
  "lineno": 411,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.compat.asbytes",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_large_zip": {
  "lineno": 574,
  "symbols_in_volume": [
   "ctypes.c_bool",
   "multiprocessing.Process",
   "multiprocessing.Value",
   "numpy.testing._private.utils.requires_memory",
   "pytest.mark.skipif",
   "pytest.mark.slow",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_large_zip.check_large_zip": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.savez",
   "numpy.testing.tempdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_multifield_view": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.load",
   "numpy.ones",
   "numpy.save",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_structured": {
  "lineno": 352,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_structured_padded": {
  "lineno": 359,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_unicode": {
  "lineno": 520,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.savetxt",
   "numpy.testing.tempdir",
   "numpy.unicode_",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_unicode_and_bytes_fmt": {
  "lineno": 561,
  "symbols_in_volume": [
   "io.BytesIO",
   "io.StringIO",
   "numpy.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_unicode_bytestream": {
  "lineno": 545,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_unicode_roundtrip": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.loadtxt",
   "numpy.savetxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.tempdir",
   "numpy.unicode_",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_unicode_stringstream": {
  "lineno": 553,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.savetxt",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.roundtrip": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal",
   "numpy.savez",
   "os.remove"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_BagObj": {
  "lineno": 233,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.load",
   "numpy.ma.testutils.assert_equal",
   "numpy.savez"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_big_arrays": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.load",
   "numpy.savez",
   "numpy.testing.temppath",
   "numpy.uint8",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_closing_fid": {
  "lineno": 282,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.load",
   "numpy.savez",
   "numpy.testing.IS_PYPY",
   "numpy.testing.suppress_warnings",
   "numpy.testing.temppath",
   "pytest.mark.slow_pypy"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_closing_zipfile_after_load": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.load",
   "numpy.savez",
   "numpy.testing.assert_",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_multiple_arrays": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_named_arrays": {
  "lineno": 223,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.load",
   "numpy.ma.testutils.assert_equal",
   "numpy.savez"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_not_closing_opened_fid": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.load",
   "numpy.savez",
   "numpy.testing.assert_",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_savez_filename_clashes": {
  "lineno": 244,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_savez_filename_clashes.writer": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.savez",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex": {
  "lineno": 1173,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_compiled_bytes": {
  "lineno": 1222,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.float64",
   "numpy.fromregex",
   "numpy.testing.assert_array_equal",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record": {
  "lineno": 1174,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.fromregex",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record_2": {
  "lineno": 1185,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.fromregex",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record_3": {
  "lineno": 1196,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.fromregex",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record_unicode": {
  "lineno": 1206,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.fromregex",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath",
   "re.UNICODE",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TextIO": {
  "lineno": 32,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_io.TextIO.__init__": {
  "lineno": 41,
  "symbols_in_volume": [
   "io.BytesIO.__init__",
   "numpy.compat.asbytes"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TextIO.write": {
  "lineno": 44,
  "symbols_in_volume": [
   "io.BytesIO.write",
   "numpy.compat.asbytes"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.TextIO.writelines": {
  "lineno": 47,
  "symbols_in_volume": [
   "io.BytesIO.writelines",
   "numpy.compat.asbytes"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.strptime": {
  "lineno": 64,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.compat.bytes",
   "time.strptime"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_ducktyping": {
  "lineno": 2524,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.load",
   "numpy.random.random",
   "numpy.save",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_gzip_load": {
  "lineno": 2487,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "io.BytesIO",
   "numpy.load",
   "numpy.random.random",
   "numpy.save",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_gzip_loadtxt": {
  "lineno": 2539,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "io.BytesIO",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_gzip_loadtxt_from_string": {
  "lineno": 2560,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "io.BytesIO",
   "numpy.loadtxt",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_load_refcount": {
  "lineno": 2598,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.load",
   "numpy.loadtxt",
   "numpy.ma.testutils.assert_equal",
   "numpy.savez",
   "numpy.testing.HAS_REFCOUNT",
   "numpy.testing.assert_no_gc_cycles",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_npzfile_dict": {
  "lineno": 2571,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.load",
   "numpy.ma.testutils.assert_equal",
   "numpy.savez",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins": {
  "lineno": null,
  "symbols_in_volume": [
   "operator.add",
   "operator.and_",
   "operator.eq",
   "operator.floordiv",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lshift",
   "operator.lt",
   "operator.mod",
   "operator.mul",
   "operator.ne",
   "operator.or_",
   "operator.rshift",
   "operator.sub",
   "operator.truediv",
   "operator.xor"
  ],
  "type": "module"
 },
 "numpy.lib.tests.test_mixins.ArrayLike": {
  "lineno": 11,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.lib.mixins.NDArrayOperatorsMixin",
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_mixins.ArrayLike.__array_ufunc__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.ArrayLike.__init__": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.ArrayLike.__repr__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_array_like_add": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_array_like_add.check": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_forward_binary_methods": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_inplace": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_matmul": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.matmul",
   "operator.matmul"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_object": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_opt_out": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_opt_out.OptOut": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_opt_out.OptOut.__add__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_opt_out.OptOut.__radd__": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_reflected_binary_methods": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_subclass": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_subclass.SubArrayLike": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_ufunc_at": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.negative.at",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_ufunc_two_outputs": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.frexp"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_unary_methods": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.array",
   "operator.invert",
   "operator.neg",
   "operator.pos"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins._assert_equal_type_and_value": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.wrap_array_like": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan"
  ],
  "type": "module"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_dtype_from_char": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.eye",
   "numpy.nanstd",
   "numpy.nanvar",
   "numpy.testing.assert_",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_dtype_from_dtype": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.dtype",
   "numpy.eye",
   "numpy.nanstd",
   "numpy.nanvar",
   "numpy.testing.assert_",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_dtype_from_input": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_keepdims": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_mutation": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_out": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_result_values": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_scalar": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_subclass": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_subclass.MyNDArray": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.nanargmax",
   "numpy.nanargmin"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_allnans": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_empty": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_mutation": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_result_values": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.equal",
   "numpy.greater",
   "numpy.isnan",
   "numpy.less",
   "numpy.testing.assert_",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_scalar": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_subclass": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_subclass.MyNDArray": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.cumprod",
   "numpy.cumsum",
   "numpy.nancumprod",
   "numpy.nancumsum"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_allnans": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_empty": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_keepdims": {
  "lineno": 480,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.eye",
   "numpy.nan",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_out": {
  "lineno": 508,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_result_values": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.cumprod",
   "numpy.cumsum",
   "numpy.nancumprod",
   "numpy.nancumsum",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.integer_arrays": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanargmax": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.nanargmax",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanargmin": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.nanargmin",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nancumprod": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.cumprod",
   "numpy.nancumprod",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nancumsum": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.nancumsum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanmax": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.nanmax",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanmean": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.nanmean",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanmin": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.min",
   "numpy.nanmin",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanprod": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.nanprod",
   "numpy.prod",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanstd": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.nanstd",
   "numpy.std",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nansum": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.nansum",
   "numpy.sum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanvar": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.nanvar",
   "numpy.testing.assert_equal",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd": {
  "lineno": 519,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.nanmean",
   "numpy.nanstd",
   "numpy.nanvar",
   "numpy.std",
   "numpy.var"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_allnans": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_ddof": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.nanstd",
   "numpy.nanvar",
   "numpy.std",
   "numpy.testing.assert_almost_equal",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_ddof_too_big": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.ComplexWarning",
   "numpy.isnan",
   "numpy.nanstd",
   "numpy.nanvar",
   "numpy.std",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "numpy.var"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_dtype_error": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.int_",
   "numpy.object_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_empty": {
  "lineno": 575,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_out_dtype_error": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.empty",
   "numpy.int_",
   "numpy.object_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_allnans": {
  "lineno": 665,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nanmedian",
   "numpy.testing.assert_",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_empty": {
  "lineno": 683,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nanmedian",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_extended_axis_invalid": {
  "lineno": 700,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.nanmedian",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_float_special": {
  "lineno": 708,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.inf",
   "numpy.nan",
   "numpy.nanmedian",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_keepdims": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.intp",
   "numpy.median",
   "numpy.nan",
   "numpy.nanmedian",
   "numpy.ones",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_mutation": {
  "lineno": 593,
  "symbols_in_volume": [
   "numpy.nanmedian",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_out": {
  "lineno": 626,
  "symbols_in_volume": [
   "numpy.insert",
   "numpy.median",
   "numpy.nan",
   "numpy.nanmedian",
   "numpy.random.rand",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_result_values": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.nanmedian",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_scalar": {
  "lineno": 697,
  "symbols_in_volume": [
   "numpy.nanmedian",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_small_large": {
  "lineno": 644,
  "symbols_in_volume": [
   "numpy.compress",
   "numpy.isnan",
   "numpy.median",
   "numpy.nan",
   "numpy.nanmedian",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.nanmax",
   "numpy.nanmin"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_allnans": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_dtype_from_input": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_keepdims": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_masked": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.isinf",
   "numpy.ma.fix_invalid",
   "numpy.nanmin",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_mutation": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_object_array": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.nanmin",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_out": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_result_values": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_scalar": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_subclass": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.eye",
   "numpy.isnan",
   "numpy.nan",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_subclass.MyNDArray": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_allnans": {
  "lineno": 819,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nanpercentile",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_empty": {
  "lineno": 838,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nanpercentile",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_extended_axis_invalid": {
  "lineno": 859,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.nanpercentile",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_keepdims": {
  "lineno": 763,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.intp",
   "numpy.nan",
   "numpy.nanpercentile",
   "numpy.ones",
   "numpy.percentile",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_multiple_percentiles": {
  "lineno": 867,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.nanpercentile",
   "numpy.ones",
   "numpy.percentile",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_mutation": {
  "lineno": 757,
  "symbols_in_volume": [
   "numpy.nanpercentile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_out": {
  "lineno": 792,
  "symbols_in_volume": [
   "numpy.insert",
   "numpy.nan",
   "numpy.nanpercentile",
   "numpy.percentile",
   "numpy.random.rand",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_result_values": {
  "lineno": 810,
  "symbols_in_volume": [
   "numpy.nanpercentile",
   "numpy.percentile",
   "numpy.testing.assert_almost_equal",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_scalar": {
  "lineno": 852,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.isscalar",
   "numpy.nanpercentile",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Quantile": {
  "lineno": 894,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Quantile.test_basic": {
  "lineno": 911,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nanquantile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Quantile.test_no_p_overwrite": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.nanquantile",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Quantile.test_regression": {
  "lineno": 897,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.nanpercentile",
   "numpy.nanquantile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_SumProd": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.nanprod",
   "numpy.nansum",
   "numpy.prod",
   "numpy.sum"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_SumProd.test_allnans": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.nansum",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_SumProd.test_empty": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.nanprod",
   "numpy.nansum",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.test__nan_mask": {
  "lineno": 929,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.complex64",
   "numpy.empty",
   "numpy.inf",
   "numpy.int64",
   "numpy.lib.nanfunctions._nan_mask",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.test__replace_nan": {
  "lineno": 956,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.isnan",
   "numpy.lib.nanfunctions._replace_nan",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_packbits.TestCount": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_packbits.TestCount.test_axis_count": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.packbits",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.unpackbits",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.TestCount.test_bad_count": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.packbits",
   "numpy.testing.assert_raises",
   "numpy.unpackbits"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.TestCount.test_count": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.packbits",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.unpackbits",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.TestCount.test_roundtrip": {
  "lineno": 302,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.packbits",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.unpackbits",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.TestCount.test_roundtrip_axis": {
  "lineno": 325,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.packbits",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.unpackbits",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_pack_unpack_order": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.packbits",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint8",
   "numpy.unpackbits"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_packbits": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.packbits",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_packbits_empty": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.packbits",
   "numpy.testing.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_packbits_empty_with_axis": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.packbits",
   "numpy.testing.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_packbits_large": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.packbits",
   "numpy.random.randint",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint8",
   "numpy.unpackbits",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_packbits_very_large": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.packbits"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_unpackbits": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.unpackbits"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_unpackbits_empty": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.unpackbits"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_unpackbits_empty_with_axis": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.unpackbits"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_unpackbits_large": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.packbits",
   "numpy.testing.assert_array_equal",
   "numpy.tile",
   "numpy.uint8",
   "numpy.unpackbits"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_complex": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_integ_coeffs": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_objects": {
  "lineno": 189,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.issubdtype",
   "numpy.object_",
   "numpy.poly",
   "numpy.poly1d",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_poly": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.conjugate",
   "numpy.iscomplexobj",
   "numpy.isrealobj",
   "numpy.poly",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.sqrt",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_poly1d_math": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.polydiv",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_poly1d_misc": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.poly1d",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_poly1d_resolution": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_poly1d_str_and_repr": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_poly1d_variable_arg": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_poly_coeffs_mutable": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.poly1d",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_poly_eq": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_poly_int_overflow": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diag",
   "numpy.poly",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_polydiv": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.poly1d",
   "numpy.polydiv",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_polyfit": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.full",
   "numpy.linspace",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.polyfit",
   "numpy.polyval",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_roots": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.roots",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_str_leading_zeros": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestPolynomial.test_zero_dims": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.poly",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.lib.recfunctions._get_fieldspec",
   "numpy.lib.recfunctions._zip_descr",
   "numpy.lib.recfunctions._zip_dtype",
   "numpy.lib.recfunctions.get_names",
   "numpy.lib.recfunctions.get_names_flat"
  ],
  "type": "module"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.setup": {
  "lineno": 508,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_double": {
  "lineno": 526,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.append_fields",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_on_flex": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.append_fields",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_on_nested": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.append_fields",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_single": {
  "lineno": 517,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.append_fields",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFieldsObj": {
  "lineno": 960,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFieldsObj.setup": {
  "lineno": 966,
  "symbols_in_volume": [
   "datetime.date"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFieldsObj.test_append_to_objects": {
  "lineno": 970,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.append_fields",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.setup": {
  "lineno": 731,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_different_field_order": {
  "lineno": 825,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.testutils.assert_equal",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_duplicate_keys": {
  "lineno": 833,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.join_by",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_inner_join": {
  "lineno": 739,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_join": {
  "lineno": 751,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.join_by"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_join_subdtype": {
  "lineno": 771,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.MaskedArray",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_leftouter_join": {
  "lineno": 808,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_outer_join": {
  "lineno": 780,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_padded_dtype": {
  "lineno": 878,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_same_name_different_dtypes": {
  "lineno": 851,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_same_name_different_dtypes_key": {
  "lineno": 838,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.testutils.assert_equal",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_subarray_key": {
  "lineno": 864,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.testutils.assert_equal",
   "numpy.pi"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2": {
  "lineno": 895,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.setup": {
  "lineno": 896,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_no_postfix": {
  "lineno": 920,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.join_by",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_no_r1postfix": {
  "lineno": 905,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_no_r2postfix": {
  "lineno": 924,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_two_keys_two_vars": {
  "lineno": 939,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.recfunctions.join_by",
   "numpy.ma.testutils.assert_equal",
   "numpy.repeat",
   "numpy.tile"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.setup": {
  "lineno": 375,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_flatten": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.merge_arrays",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_flatten_wflexible": {
  "lineno": 441,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.merge_arrays",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_singlerecord": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.merge_arrays",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_solo": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.merge_arrays",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_solo_w_flatten": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.merge_arrays",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_standard": {
  "lineno": 411,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.merge_arrays",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_w_shorter_flex": {
  "lineno": 480,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.merge_arrays"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_w_singlefield": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.merge_arrays",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_wmasked_arrays": {
  "lineno": 458,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.merge_arrays",
   "numpy.ma.array",
   "numpy.ma.mrecords.MaskedRecords",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.setup": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_drop_fields": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.drop_fields",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_field_assignment_by_name": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.assign_fields_by_name",
   "numpy.lib.recfunctions.require_fields",
   "numpy.ma.testutils.assert_equal",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_find_duplicates": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.find_duplicates",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_find_duplicates_ignoremask": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.find_duplicates",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_fieldstructure": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.lib.recfunctions.get_fieldstructure",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_names": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_names_flat": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_rename_fields": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.rename_fields",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_repack_fields": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.lib.recfunctions.repack_fields",
   "numpy.ma.testutils.assert_equal",
   "numpy.record",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_structured_to_unstructured": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.int32",
   "numpy.lib.recfunctions.apply_along_fields",
   "numpy.lib.recfunctions.structured_to_unstructured",
   "numpy.lib.recfunctions.unstructured_to_structured",
   "numpy.ma.testutils.assert_equal",
   "numpy.mean",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_structured_to_unstructured.inspect": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.structured_to_unstructured",
   "numpy.lib.recfunctions.unstructured_to_structured",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_structured_to_unstructured.structured": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_structured_to_unstructured.subarray": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_zip_descr": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields.test_masked_flexible": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.recursive_fill_fields",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields.test_simple_flexible": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.recursive_fill_fields",
   "numpy.ma.testutils.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.setup": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_autoconversion": {
  "lineno": 674,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.stack_arrays",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_checktitles": {
  "lineno": 688,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.stack_arrays",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_defaults": {
  "lineno": 657,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.stack_arrays",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_matching_named_fields": {
  "lineno": 629,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.stack_arrays",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_solo": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.stack_arrays",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_subdtype": {
  "lineno": 700,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.stack_arrays",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_unnamed_and_named_fields": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.lib.recfunctions.stack_arrays",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_unnamed_fields": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.recfunctions.stack_arrays",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_regression.TestRegression": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_append_fields_dtype_list": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.float64",
   "numpy.int32",
   "numpy.lib.recfunctions.append_fields"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_asfarray_none": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asfarray",
   "numpy.nan",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_cov_parameters": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.random.random",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_histogramdd_too_many_bins": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.histogramdd",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_include_dirs": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.get_include",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.intp",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing.dp": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.ix_",
   "numpy.ones",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing.dp2": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.ix_",
   "numpy.ones",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_loadtxt_fields_subarrays": {
  "lineno": 205,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.array",
   "numpy.loadtxt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_digitize": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.digitize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_polymul": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.polymul"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_string_concat": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_vectorise": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.vectorize",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mgrid_single_element": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.mgrid",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_nansum_with_boolean": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.nansum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_ndenumerate_crash": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndenumerate"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly1d": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly1d_nan_roots": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.linalg.LinAlgError",
   "numpy.nan",
   "numpy.poly1d",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly_div": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.polydiv",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly_eq": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.poly1d",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyder_return_type": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.poly1d",
   "numpy.polyder",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polydiv_type": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polydiv",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyfit_build": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.polyfit",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyint_type": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polyint",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_py3_compat": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.info",
   "os.devnull"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_py3_compat.C": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_refcount_vectorize": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.testing._assert_valid_refcount",
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_refcount_vectorize.p": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_unique_zero_sized": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_void_coercion": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.r_.dtype",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_who_with_0dim_array": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.who",
   "os.devnull",
   "sys.stdout",
   "sys.stdout.close"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.maxsize"
  ],
  "type": "module"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_0d_array": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.apply_along_axis",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_0d_array.sum_to_0d": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.squeeze",
   "numpy.sum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_3d": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.shape_base.apply_along_axis",
   "numpy.sum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_axis_insertion": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.shape_base.apply_along_axis",
   "numpy.ndarray",
   "numpy.stack",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_axis_insertion.f1to2": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_axis_insertion_ma": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.shape_base.apply_along_axis",
   "numpy.ma.masked_array",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_axis_insertion_ma.f1to2": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.ma.masked_where",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_empty": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.empty",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_empty.empty_to_1": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_empty.never_call": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_preserve_subclass": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.apply_along_axis",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_preserve_subclass.MyNDArray": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_preserve_subclass.double": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_scalar_array": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.apply_along_axis",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.sum",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_simple": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.lib.shape_base.apply_along_axis",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_simple101": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.lib.shape_base.apply_along_axis",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_subclass": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.apply_along_axis",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_subclass.MinimalSubclass": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_subclass.minimal_function": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_subclass_preservation": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_subclass_preservation.MinimalSubclass": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_tuple_func1d": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_tuple_func1d.sample_1d": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_with_iterable_object": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.array",
   "numpy.ndindex",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyOverAxes": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestApplyOverAxes.test_simple": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.shape_base.apply_over_axes",
   "numpy.sum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_index_split_high_bound": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.shape_base.array_split"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_index_split_low_bound": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.shape_base.array_split"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_index_split_simple": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.shape_base.array_split"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_0_split": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.shape_base.array_split",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_split": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.shape_base.array_split"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_split_2D_cols": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.shape_base.array_split"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_split_2D_default": {
  "lineno": 409,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.shape_base.array_split",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_split_2D_rows": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.shape_base.array_split",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_split_2D_rows_greater_max_int32": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.broadcast_to",
   "numpy.lib.shape_base.array_split",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestColumnStack": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestColumnStack.test_1D_arrays": {
  "lineno": 474,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.column_stack",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestColumnStack.test_2D_arrays": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.column_stack",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestColumnStack.test_generator": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.shape_base.column_stack",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestColumnStack.test_non_iterable": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.lib.shape_base.column_stack",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDsplit": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestDsplit.test_0D_array": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.dsplit",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDsplit.test_1D_array": {
  "lineno": 603,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.dsplit",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDsplit.test_2D_array": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.dsplit",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDsplit.test_3D_array": {
  "lineno": 616,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.dsplit"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDsplit.test_non_iterable": {
  "lineno": 596,
  "symbols_in_volume": [
   "numpy.lib.shape_base.dsplit",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDstack": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestDstack.test_0D_array": {
  "lineno": 503,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.dstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDstack.test_1D_array": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.dstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDstack.test_2D_array": {
  "lineno": 517,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.dstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDstack.test_2D_array2": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.dstack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDstack.test_generator": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.shape_base.dstack",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDstack.test_non_iterable": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.lib.shape_base.dstack",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestExpandDims": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestExpandDims.test_axis_out_of_range": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.empty",
   "numpy.lib.shape_base.expand_dims",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestExpandDims.test_axis_tuple": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestExpandDims.test_functionality": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.lib.shape_base.expand_dims",
   "numpy.squeeze",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestExpandDims.test_repeated_axis": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.lib.shape_base.expand_dims",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestExpandDims.test_subclasses": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.expand_dims",
   "numpy.ma.MaskedArray",
   "numpy.ma.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestHsplit": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestHsplit.test_0D_array": {
  "lineno": 545,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.hsplit",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestHsplit.test_1D_array": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.hsplit"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestHsplit.test_2D_array": {
  "lineno": 559,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.hsplit"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestHsplit.test_non_iterable": {
  "lineno": 542,
  "symbols_in_volume": [
   "numpy.lib.shape_base.hsplit",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestKron": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestKron.test_return_type": {
  "lineno": 647,
  "symbols_in_volume": [
   "numpy.lib.shape_base.kron",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestKron.test_return_type.myarray": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestMayShareMemory": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestMayShareMemory.test_basic": {
  "lineno": 700,
  "symbols_in_volume": [
   "numpy.may_share_memory",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestPutAlongAxis": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestPutAlongAxis.test_broadcast": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "numpy.lib.shape_base.put_along_axis",
   "numpy.lib.shape_base.take_along_axis",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestPutAlongAxis.test_replace_max": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.argmin",
   "numpy.array",
   "numpy.lib.shape_base.put_along_axis",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestSplit": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestSplit.test_equal_split": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.shape_base.split"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestSplit.test_unequal_split": {
  "lineno": 465,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.shape_base.split",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestSqueeze": {
  "lineno": 627,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestSqueeze.test_basic": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.random.rand",
   "numpy.reshape",
   "numpy.squeeze",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTakeAlongAxis": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestTakeAlongAxis.test_argequivalent": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.argmin",
   "numpy.argpartition",
   "numpy.argsort",
   "numpy.lib.shape_base.take_along_axis",
   "numpy.max",
   "numpy.min",
   "numpy.partition",
   "numpy.random.rand",
   "numpy.sort",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTakeAlongAxis.test_broadcast": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.intp",
   "numpy.lib.shape_base.take_along_axis",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTakeAlongAxis.test_empty": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.intp",
   "numpy.lib.shape_base.take_along_axis",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTakeAlongAxis.test_invalid": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.array",
   "numpy.intp",
   "numpy.lib.shape_base.take_along_axis",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTile": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestTile.test_basic": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.tile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTile.test_empty": {
  "lineno": 677,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.tile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTile.test_kroncompare": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.lib.shape_base.kron",
   "numpy.lib.shape_base.tile",
   "numpy.ones",
   "numpy.random.randint",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTile.test_tile_one_repetition_on_array_gh4679": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.shape_base.tile",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestVsplit": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestVsplit.test_0D_array": {
  "lineno": 574,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.vsplit",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestVsplit.test_1D_array": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.vsplit",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestVsplit.test_2D_array": {
  "lineno": 586,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.shape_base.vsplit"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestVsplit.test_non_iterable": {
  "lineno": 571,
  "symbols_in_volume": [
   "numpy.lib.shape_base.vsplit",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base._add_keepdims": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base._add_keepdims.wrapped": {
  "lineno": 21,
  "symbols_in_volume": [
   "functools.wraps",
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.compare_results": {
  "lineno": 715,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_stride_tricks.SimpleSubClass": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_stride_tricks.SimpleSubClass.__array_finalize__": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.SimpleSubClass.__new__": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.VerySimpleSubClass": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_stride_tricks.VerySimpleSubClass.__new__": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.as_strided_writeable": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.full_like",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.assert_incompatible_shapes_raise": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks.broadcast_arrays",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.assert_same_as_ufunc": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.stride_tricks.broadcast_arrays",
   "numpy.multiply.reduce",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.assert_shapes_correct": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks.broadcast_arrays",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_as_strided": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.core._rational_tests.rational",
   "numpy.dtype",
   "numpy.empty",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_broadcast_kwargs": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.stride_tricks.broadcast_arrays",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_broadcast_shape": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks._broadcast_shape",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_broadcast_to_raises": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks.broadcast_to",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_broadcast_to_succeeds": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.lib.stride_tricks.broadcast_to",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_incompatible_shapes_raise_valueerror": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_one_off": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.stride_tricks.broadcast_arrays",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_reference_types": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.stride_tricks.broadcast_arrays",
   "numpy.lib.stride_tricks.broadcast_to",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.stride_tricks.broadcast_arrays",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same_as_ufunc": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same_input_shapes": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_subclasses": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.lib.stride_tricks.broadcast_arrays",
   "numpy.lib.stride_tricks.broadcast_to",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_two_compatible_by_ones_input_shapes": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_two_compatible_by_prepending_ones_input_shapes": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_writeable": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.lib.stride_tricks.broadcast_arrays",
   "numpy.lib.stride_tricks.broadcast_to",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_writeable_memoryview": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.stride_tricks.broadcast_arrays"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_diag_bounds": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_failure": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_fortran_order": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_matrix": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_vector": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diag",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_2d": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_basic": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_bool": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_diag": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_diag2d": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_eye_bounds": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_order": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_strings": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestFliplr": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestFliplr.test_basic": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.fliplr",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestFlipud": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestFlipud.test_basic": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.flipud",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_all_outliers": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.histogram2d",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_asym": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram2d",
   "numpy.linspace",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_binparameter_combination": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram2d",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_density": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram2d",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_dispatch": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.core.tests.test_overrides.requires_array_function",
   "numpy.histogram2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_dispatch.ShouldDispatch": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_dispatch.ShouldDispatch.__array_function__": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_empty": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram2d",
   "numpy.testing.assert_array_max_ulp",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_simple": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.histogram2d",
   "numpy.linspace",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTri": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTri.test_dtype": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.tri"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTrilIndicesFrom": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTrilIndicesFrom.test_exceptions": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.tril_indices_from"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndices": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndices.test_triu_indices": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.triu_indices"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndicesFrom": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndicesFrom.test_exceptions": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.triu_indices_from"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestVander": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestVander.test_basic": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.vander"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestVander.test_dtypes": {
  "lineno": 517,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int8",
   "numpy.testing.assert_array_equal",
   "numpy.vander"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.get_mat": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.add.outer",
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_mask_indices": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.mask_indices",
   "numpy.testing.assert_array_equal",
   "numpy.triu"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_indices": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.tril_indices"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_triu_dtype": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.tril",
   "numpy.triu",
   "numpy.typecodes",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_triu_ndim2": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.tril",
   "numpy.triu",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_triu_ndim3": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.tril",
   "numpy.triu",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_triu_with_inf": {
  "lineno": 345,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.testing.assert_array_equal",
   "numpy.tril",
   "numpy.triu"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_type_check.TestArrayConversion": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestArrayConversion.test_asfarray": {
  "lineno": 470,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.floating",
   "numpy.issubdtype",
   "numpy.lib.type_check.asfarray",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestCommonType": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestCommonType.test_basic": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.lib.type_check.common_type",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestImag": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestImag.test_cmplx": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.imag",
   "numpy.ndarray",
   "numpy.random.rand",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestImag.test_real": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.imag",
   "numpy.ndarray",
   "numpy.random.rand",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplex": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplex.test_fail": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.type_check.iscomplex",
   "numpy.sometrue",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplex.test_pass": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.type_check.iscomplex",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_basic": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.type_check.iscomplexobj",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_custom_dtype_duck": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.lib.type_check.iscomplexobj",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_custom_dtype_duck.MyArray": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_custom_dtype_duck.MyArray.dtype": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_duck": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.lib.type_check.iscomplexobj",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_duck.DummyComplexArray": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_duck.DummyComplexArray.dtype": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_list": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.lib.type_check.iscomplexobj",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_pandas_duck": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.lib.type_check.iscomplexobj",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_pandas_duck.DummyPd": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_pandas_duck.DummyPd.dtype": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_pandas_duck.PdComplex": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.complex128"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_pandas_duck.PdDtype": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_scalar": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.lib.type_check.iscomplexobj",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_complex": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_complex1": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_goodvalues": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_ind": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_integer": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_neginf": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_posinf": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_goodvalues": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.isinf"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_ind": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isinf"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_neginf": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isinf"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_neginf_scalar": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isinf"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_posinf": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isinf"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_posinf_scalar": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isinf"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_complex": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_complex1": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_goodvalues": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_ind": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_integer": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_neginf": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_posinf": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsneginf": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsneginf.test_generic": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.lib.type_check.isneginf",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsposinf": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsposinf.test_generic": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.lib.type_check.isposinf",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsreal": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsreal.test_fail": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.type_check.isreal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsreal.test_pass": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.type_check.isreal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsrealobj": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsrealobj.test_basic": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.type_check.isrealobj",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsscalar": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsscalar.test_basic": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.isscalar",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode.test_default_1": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.lib.type_check.mintypecode",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode.test_default_2": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.lib.type_check.mintypecode",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode.test_default_3": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.lib.type_check.mintypecode",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_array": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.lib.type_check.nan_to_num",
   "numpy.ndarray",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_complex_bad": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex_",
   "numpy.errstate",
   "numpy.isfinite",
   "numpy.lib.type_check.nan_to_num",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_complex_bad2": {
  "lineno": 430,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex_",
   "numpy.errstate",
   "numpy.isfinite",
   "numpy.lib.type_check.nan_to_num",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_complex_good": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.complex_",
   "numpy.lib.type_check.nan_to_num",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_do_not_rewrite_previous_keyword": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.inf",
   "numpy.isfinite",
   "numpy.lib.type_check.nan_to_num",
   "numpy.ndarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_float": {
  "lineno": 405,
  "symbols_in_volume": [
   "numpy.float_",
   "numpy.lib.type_check.nan_to_num",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_generic": {
  "lineno": 352,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.isfinite",
   "numpy.lib.type_check.nan_to_num",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_integer": {
  "lineno": 397,
  "symbols_in_volume": [
   "numpy.int_",
   "numpy.lib.type_check.nan_to_num",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestReal": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestReal.test_cmplx": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.random.rand",
   "numpy.real",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestReal.test_real": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.random.rand",
   "numpy.real",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestRealIfClose": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestRealIfClose.test_basic": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.lib.type_check.iscomplexobj",
   "numpy.lib.type_check.isrealobj",
   "numpy.lib.type_check.real_if_close",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.assert_all": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_deprecated": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.core.empty",
   "numpy.lib.ufunclike.fix",
   "numpy.lib.ufunclike.isneginf",
   "numpy.lib.ufunclike.isposinf",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.zeros",
   "numpy.lib.ufunclike.fix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.lib.ufunclike.fix",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass.MyArray": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.core.ndarray"
  ],
  "type": "class"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass.MyArray.__array_finalize__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass.MyArray.__array_wrap__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass.MyArray.__new__": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.core.array"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_isneginf": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.complex_",
   "numpy.core.array",
   "numpy.core.inf",
   "numpy.core.nan",
   "numpy.core.zeros",
   "numpy.lib.ufunclike.isneginf",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_isposinf": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.complex_",
   "numpy.core.array",
   "numpy.core.inf",
   "numpy.core.nan",
   "numpy.core.zeros",
   "numpy.lib.ufunclike.isposinf",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_scalar": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.True_",
   "numpy.array",
   "numpy.fix",
   "numpy.float64",
   "numpy.inf",
   "numpy.isposinf",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.lib.deprecate"
  ],
  "type": "module"
 },
 "numpy.lib.tests.test_utils.TestByteBounds": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.tests.test_utils.TestByteBounds.test_byte_bounds": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.core.arange",
   "numpy.lib.utils.byte_bounds",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.TestByteBounds.test_strided": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.core.arange",
   "numpy.lib.utils.byte_bounds",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.TestByteBounds.test_unusual_order_negative_stride": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.core.arange",
   "numpy.lib.utils.byte_bounds",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.TestByteBounds.test_unusual_order_positive_stride": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.core.arange",
   "numpy.lib.utils.byte_bounds",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils._compare_docs": {
  "lineno": 93,
  "symbols_in_volume": [
   "inspect.getdoc",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.lib.deprecate"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func2": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.lib.deprecate"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func3": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func4": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func5": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func6": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_assert_raises_regex_context_manager": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_decorator": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_decorator_message": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_fn": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_help_indentation": {
  "lineno": 76,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "sys.flags.optimize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_preserve_whitespace": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "pytest.mark.skipif",
   "sys.flags.optimize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_lookfor": {
  "lineno": 13,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.lib.utils.lookfor",
   "numpy.testing.assert_",
   "pytest.mark.skipif",
   "sys.flags.optimize"
  ],
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_safe_eval_nameconstant": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.lib.utils.safe_eval"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.iinfo",
   "numpy.core.numeric.int16",
   "numpy.core.numeric.int32",
   "numpy.core.numeric.int8",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.lib.twodim_base._diag_dispatcher": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.twodim_base._flip_dispatcher": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.twodim_base._histogram2d_dispatcher": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.twodim_base._min_int": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.core.numeric.int16",
   "numpy.core.numeric.int32",
   "numpy.core.numeric.int64",
   "numpy.core.numeric.int8"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base._trilu_dispatcher": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.twodim_base._trilu_indices_form_dispatcher": {
  "lineno": 869,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.twodim_base._vander_dispatcher": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.twodim_base.diag": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.diagonal",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.diagflat": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.core.numeric.arange",
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.eye": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.core.numeric.zeros",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.fliplr": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.flipud": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.histogram2d": {
  "lineno": 582,
  "symbols_in_volume": [
   "numpy.core.numeric.asarray",
   "numpy.histogramdd"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.mask_indices": {
  "lineno": 717,
  "symbols_in_volume": [
   "numpy.core.numeric.nonzero",
   "numpy.core.numeric.ones",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.tri": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.core.numeric.arange",
   "numpy.core.numeric.greater_equal.outer",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.tril": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.where",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.tril_indices": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.core.numeric.nonzero",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.tril_indices_from": {
  "lineno": 873,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.twodim_base.triu": {
  "lineno": 439,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.where",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.triu_indices": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.core.numeric.nonzero",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.lib.twodim_base.triu_indices_from": {
  "lineno": 985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.twodim_base.vander": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.empty",
   "numpy.core.numeric.multiply.accumulate",
   "numpy.core.numeric.promote_types"
  ],
  "type": "function"
 },
 "numpy.lib.type_check": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.numeric.cdouble",
   "numpy.core.numeric.clongdouble",
   "numpy.core.numeric.csingle",
   "numpy.core.numeric.double",
   "numpy.core.numeric.half",
   "numpy.core.numeric.longdouble",
   "numpy.core.numeric.single",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "module"
 },
 "numpy.lib.type_check._asfarray_dispatcher": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.type_check._asscalar_dispatcher": {
  "lineno": 549,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.type_check._common_type_dispatcher": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.type_check._getmaxmin": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.core.getlimits.finfo"
  ],
  "type": "function"
 },
 "numpy.lib.type_check._imag_dispatcher": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.type_check._is_type_dispatcher": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.type_check._nan_to_num_dispatcher": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.type_check._real_dispatcher": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.type_check._real_if_close_dispatcher": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.type_check.asfarray": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.float_",
   "numpy.core.numeric.inexact",
   "numpy.core.numeric.issubdtype"
  ],
  "type": "function"
 },
 "numpy.lib.type_check.asscalar": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.type_check.common_type": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.core.numeric.integer"
  ],
  "type": "function"
 },
 "numpy.lib.type_check.imag": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray"
  ],
  "type": "function"
 },
 "numpy.lib.type_check.iscomplex": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.complexfloating",
   "numpy.core.numeric.zeros"
  ],
  "type": "function"
 },
 "numpy.lib.type_check.iscomplexobj": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.core.numeric.asarray",
   "numpy.core.numeric.complexfloating"
  ],
  "type": "function"
 },
 "numpy.lib.type_check.isreal": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.type_check.isrealobj": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.type_check.mintypecode": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.core.numeric.asarray",
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.lib.type_check.nan_to_num": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.core.numeric.array",
   "numpy.core.numeric.complexfloating",
   "numpy.core.numeric.copyto",
   "numpy.core.numeric.inexact",
   "numpy.core.numeric.isnan"
  ],
  "type": "function"
 },
 "numpy.lib.type_check.real": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray"
  ],
  "type": "function"
 },
 "numpy.lib.type_check.real_if_close": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.core.getlimits.finfo",
   "numpy.core.numeric.absolute",
   "numpy.core.numeric.all",
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.complexfloating"
  ],
  "type": "function"
 },
 "numpy.lib.type_check.typename": {
  "lineno": 609,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.lib.ufunclike": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.lib.ufunclike._deprecate_out_named_y": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.ufunclike._deprecate_out_named_y.func": {
  "lineno": 22,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.ufunclike._dispatcher": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.core.overrides.ARRAY_FUNCTION_ENABLED"
  ],
  "type": "function"
 },
 "numpy.lib.ufunclike._fix_out_named_y": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.ufunclike._fix_out_named_y.func": {
  "lineno": 48,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "numpy.lib.ufunclike.fix": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.core.numeric.asanyarray",
   "numpy.core.numeric.ceil",
   "numpy.core.numeric.floor",
   "numpy.core.numeric.greater_equal",
   "numpy.core.numeric.ndarray",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.ufunclike.isneginf": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.core.numeric.isinf",
   "numpy.core.numeric.logical_and",
   "numpy.core.numeric.signbit",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.ufunclike.isposinf": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.core.numeric.isinf",
   "numpy.core.numeric.logical_and",
   "numpy.core.numeric.signbit",
   "numpy.core.overrides.array_function_dispatch"
  ],
  "type": "function"
 },
 "numpy.lib.user_array": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.core.arange",
   "numpy.core.less",
   "numpy.core.reshape",
   "numpy.core.shape",
   "numpy.core.sin",
   "numpy.core.sqrt",
   "numpy.core.transpose"
  ],
  "type": "module"
 },
 "numpy.lib.user_array.container": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.user_array.container.__abs__": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.core.absolute"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__add__": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__and__": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.core.bitwise_and"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__array__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__array_wrap__": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__complex__": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__div__": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.divide"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__divmod__": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.core.divide",
   "numpy.core.remainder"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__eq__": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.core.equal"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__float__": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__ge__": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.core.greater_equal"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__getattr__": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__getitem__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__gt__": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.core.greater"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__hex__": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__iadd__": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.core.add"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__iand__": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.core.bitwise_and"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__idiv__": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.core.divide"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__ilshift__": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.core.left_shift"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__imod__": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.core.remainder"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__imul__": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.core.multiply"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.core.array"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__int__": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__invert__": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.core.invert"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__ior__": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.core.bitwise_or"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__ipow__": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.core.power"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__irshift__": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.core.right_shift"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__isub__": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.core.subtract"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__ixor__": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.core.bitwise_xor"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__le__": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.core.less_equal"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__len__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__lshift__": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.core.left_shift"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__lt__": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.core.less"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__mod__": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.core.remainder"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__mul__": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.multiply"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__ne__": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.core.not_equal"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__neg__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__oct__": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__or__": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.core.bitwise_or"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__pos__": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__pow__": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.power"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__rand__": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.core.bitwise_and"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__rdiv__": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.divide"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__rdivmod__": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.core.divide",
   "numpy.core.remainder"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__repr__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__rlshift__": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.core.left_shift"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__rmod__": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.core.remainder"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__ror__": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.core.bitwise_or"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__rpow__": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.power"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__rrshift__": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.core.right_shift"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__rshift__": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.core.right_shift"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__rsub__": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__rxor__": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.core.bitwise_xor"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__setattr__": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.__setitem__": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__sub__": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container.__xor__": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.core.bitwise_xor"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container._rc": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.core.shape"
  ],
  "type": "function"
 },
 "numpy.lib.user_array.container._scalarfunc": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.astype": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.byteswap": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.copy": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.tobytes": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.user_array.container.tostring": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "re.I",
   "re.compile"
  ],
  "type": "module"
 },
 "numpy.lib.utils._Deprecate": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.lib.utils._Deprecate.__call__": {
  "lineno": 74,
  "symbols_in_volume": [
   "textwrap.indent"
  ],
  "type": "function"
 },
 "numpy.lib.utils._Deprecate.__call__.newfunc": {
  "lineno": 97,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.lib.utils._Deprecate.__init__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.utils._get_indent": {
  "lineno": 133,
  "symbols_in_volume": [
   "sys.maxsize"
  ],
  "type": "function"
 },
 "numpy.lib.utils._getmembers": {
  "lineno": 952,
  "symbols_in_volume": [
   "inspect.getmembers"
  ],
  "type": "function"
 },
 "numpy.lib.utils._info": {
  "lineno": 412,
  "symbols_in_volume": [
   "sys.byteorder",
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.lib.utils._lookfor_generate_cache": {
  "lineno": 817,
  "symbols_in_volume": [
   "inspect.getdoc",
   "inspect.isclass",
   "inspect.ismodule",
   "io.StringIO",
   "numpy.core.ufunc",
   "os.listdir",
   "os.path.isfile",
   "os.path.join",
   "sys.modules",
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.lib.utils._makenamedict": {
  "lineno": 392,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "function"
 },
 "numpy.lib.utils._median_nancheck": {
  "lineno": 1010,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.isnan",
   "numpy.ma.isMaskedArray",
   "numpy.moveaxis",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.lib.utils._set_function_name": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.utils._split_line": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.utils.byte_bounds": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.lib.utils.deprecate": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.utils.get_include": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.__file__",
   "numpy.core.__file__",
   "numpy.show_config",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.lib.utils.info": {
  "lineno": 463,
  "symbols_in_volume": [
   "inspect.getdoc",
   "inspect.isclass",
   "inspect.isfunction",
   "inspect.ismethod",
   "numpy.compat.formatargspec",
   "numpy.compat.getargspec",
   "numpy.core.ndarray",
   "numpy.core.overrides.set_module",
   "pydoc.allmethods",
   "pydoc.splitdoc",
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.lib.utils.lookfor": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module",
   "pydoc.getpager"
  ],
  "type": "function"
 },
 "numpy.lib.utils.lookfor.relevance": {
  "lineno": 767,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.utils.lookfor.relevance_value": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.lib.utils.safe_eval": {
  "lineno": 962,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "numpy.lib.utils.source": {
  "lineno": 634,
  "symbols_in_volume": [
   "inspect.getsource",
   "inspect.getsourcefile",
   "numpy.core.overrides.set_module",
   "sys.stdout"
  ],
  "type": "function"
 },
 "numpy.lib.utils.who": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.core.ndarray",
   "sys._getframe"
  ],
  "type": "function"
 },
 "numpy.linalg": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy._pytesttester.PytestTester"
  ],
  "type": "module"
 },
 "numpy.linalg.linalg": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.cdouble",
   "numpy.core.csingle",
   "numpy.core.double",
   "numpy.core.fastCopyAndTranspose",
   "numpy.core.intc",
   "numpy.core.overrides.array_function_dispatch",
   "numpy.core.single"
  ],
  "type": "module"
 },
 "numpy.linalg.linalg.LinAlgError": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.linalg.linalg._assert_2d": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._assert_finite": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.core.isfinite"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._assert_stacked_2d": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._assert_stacked_square": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._commonType": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.core.cdouble",
   "numpy.core.double",
   "numpy.core.inexact",
   "numpy.core.single"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._complexType": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.core.cdouble"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._cond_dispatcher": {
  "lineno": 1678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._convertarray": {
  "lineno": 1179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._determine_error_states": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.core.errstate",
   "numpy.core.geterrobj"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._eigvalsh_dispatcher": {
  "lineno": 1081,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._fastCopyAndTranspose": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._is_empty_2d": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.core.product"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._linalgRealType": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.core.double"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._lstsq_dispatcher": {
  "lineno": 2166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._makearray": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._matrix_power_dispatcher": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._matrix_rank_dispatcher": {
  "lineno": 1801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._multi_dot": {
  "lineno": 2804,
  "symbols_in_volume": [
   "numpy.core.dot"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._multi_dot_matrix_chain_order": {
  "lineno": 2763,
  "symbols_in_volume": [
   "numpy.core.Inf",
   "numpy.core.double",
   "numpy.core.empty",
   "numpy.core.intp",
   "numpy.core.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._multi_dot_three": {
  "lineno": 2742,
  "symbols_in_volume": [
   "numpy.core.dot"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._multi_svd_norm": {
  "lineno": 2331,
  "symbols_in_volume": [
   "numpy.core.moveaxis"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._multidot_dispatcher": {
  "lineno": 2616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._norm_dispatcher": {
  "lineno": 2359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._pinv_dispatcher": {
  "lineno": 1912,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._qr_dispatcher": {
  "lineno": 770,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_lstsq": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_nonposdef": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_singular": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_svd_nonconvergence": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._realType": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.core.double"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._solve_dispatcher": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._svd_dispatcher": {
  "lineno": 1479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._tensorinv_dispatcher": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._tensorsolve_dispatcher": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg._to_native_byte_order": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg._unary_dispatcher": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg.cholesky": {
  "lineno": 673,
  "symbols_in_volume": [
   "numpy.linalg._umath_linalg.cholesky_lo"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.cond": {
  "lineno": 1682,
  "symbols_in_volume": [
   "numpy.core.Inf",
   "numpy.core.asarray",
   "numpy.core.errstate",
   "numpy.core.isnan",
   "numpy.linalg._umath_linalg.inv"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.det": {
  "lineno": 2105,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.linalg._umath_linalg.det"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.eig": {
  "lineno": 1188,
  "symbols_in_volume": [
   "numpy.core.all",
   "numpy.linalg._umath_linalg.eig"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.eigh": {
  "lineno": 1337,
  "symbols_in_volume": [
   "numpy.linalg._umath_linalg.eigh_lo",
   "numpy.linalg._umath_linalg.eigh_up"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.eigvals": {
  "lineno": 989,
  "symbols_in_volume": [
   "numpy.core.all",
   "numpy.linalg._umath_linalg.eigvals"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.eigvalsh": {
  "lineno": 1085,
  "symbols_in_volume": [
   "numpy.linalg._umath_linalg.eigvalsh_lo",
   "numpy.linalg._umath_linalg.eigvalsh_up"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.get_linalg_error_extobj": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.linalg.inv": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.linalg._umath_linalg.inv"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.isComplexType": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.core.complexfloating"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.lstsq": {
  "lineno": 2170,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.finfo",
   "numpy.core.newaxis",
   "numpy.core.zeros",
   "numpy.linalg._umath_linalg.lstsq_m",
   "numpy.linalg._umath_linalg.lstsq_n",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.matrix_power": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.core.abs",
   "numpy.core.asanyarray",
   "numpy.core.dot",
   "numpy.core.empty_like",
   "numpy.core.matmul",
   "numpy.lib.twodim_base.eye",
   "operator.index"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.matrix_rank": {
  "lineno": 1805,
  "symbols_in_volume": [
   "numpy.core.all",
   "numpy.core.asarray",
   "numpy.core.count_nonzero",
   "numpy.core.finfo",
   "numpy.core.newaxis"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.multi_dot": {
  "lineno": 2621,
  "symbols_in_volume": [
   "numpy.core.asanyarray",
   "numpy.core.atleast_2d",
   "numpy.core.dot"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.norm": {
  "lineno": 2363,
  "symbols_in_volume": [
   "numpy.core.Inf",
   "numpy.core.abs",
   "numpy.core.add.reduce",
   "numpy.core.amax",
   "numpy.core.amin",
   "numpy.core.asarray",
   "numpy.core.dot",
   "numpy.core.inexact",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.core.object_",
   "numpy.core.sqrt",
   "numpy.core.sum"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.pinv": {
  "lineno": 1916,
  "symbols_in_volume": [
   "numpy.core.amax",
   "numpy.core.asarray",
   "numpy.core.divide",
   "numpy.core.empty",
   "numpy.core.matmul",
   "numpy.core.multiply",
   "numpy.core.newaxis"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.qr": {
  "lineno": 774,
  "symbols_in_volume": [
   "numpy.core.abs",
   "numpy.core.empty",
   "numpy.core.zeros",
   "numpy.lib.twodim_base.triu",
   "numpy.linalg.lapack_lite.dgeqrf",
   "numpy.linalg.lapack_lite.dorgqr",
   "numpy.linalg.lapack_lite.zgeqrf",
   "numpy.linalg.lapack_lite.zungqr",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.slogdet": {
  "lineno": 2018,
  "symbols_in_volume": [
   "numpy.core.asarray",
   "numpy.core.sign",
   "numpy.core.sign.astype",
   "numpy.linalg._umath_linalg.slogdet"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.solve": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.linalg._umath_linalg.solve",
   "numpy.linalg._umath_linalg.solve1"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.svd": {
  "lineno": 1483,
  "symbols_in_volume": [
   "numpy.core.abs",
   "numpy.core.argsort",
   "numpy.core.sign",
   "numpy.core.sort",
   "numpy.linalg._umath_linalg.svd_m",
   "numpy.linalg._umath_linalg.svd_m_f",
   "numpy.linalg._umath_linalg.svd_m_s",
   "numpy.linalg._umath_linalg.svd_n",
   "numpy.linalg._umath_linalg.svd_n_f",
   "numpy.linalg._umath_linalg.svd_n_s",
   "numpy.take_along_axis"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.tensorinv": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.tensorsolve": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.core.asarray"
  ],
  "type": "function"
 },
 "numpy.linalg.linalg.transpose": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.core.swapaxes"
  ],
  "type": "function"
 },
 "numpy.linalg.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "numpy.linalg.setup.configuration": {
  "lineno": 4,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.distutils.system_info.get_info",
   "os.environ.get",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.linalg.setup.configuration.get_lapack_lite_sources": {
  "lineno": 52,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.linalg.setup.configuration.numpy_linalg_lapack_lite": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.distutils.system_info.system_info"
  ],
  "type": "class"
 },
 "numpy.linalg.setup.configuration.numpy_linalg_lapack_lite.calc_info": {
  "lineno": 38,
  "symbols_in_volume": [
   "sys.maxsize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.linalg.tests.test_build": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.__init__": {
  "lineno": 12,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.get_dependencies": {
  "lineno": 21,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.grep_dependencies": {
  "lineno": 29,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_build.TestF77Mismatch": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_build.TestF77Mismatch.test_lapack": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.linalg.lapack_lite.__file__",
   "numpy.testing.assert_",
   "pytest.mark.skipif",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_deprecations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.linalg.tests.test_deprecations.test_qr_mode_full_future_warning": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.linalg.qr",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.empty",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.single",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "module"
 },
 "numpy.linalg.tests.test_linalg.CondCases": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.CondCases.do": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.inf",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.cond",
   "numpy.linalg.inv",
   "numpy.linalg.svd",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.DetCases": {
  "lineno": 840,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.DetCases.do": {
  "lineno": 842,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.cdouble",
   "numpy.double",
   "numpy.exp",
   "numpy.inf",
   "numpy.linalg.det",
   "numpy.linalg.eigvals",
   "numpy.linalg.slogdet",
   "numpy.multiply.reduce",
   "numpy.single",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.EigCases": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.EigCases.do": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.linalg.eig",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.EigvalsCases": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.EigvalsCases.do": {
  "lineno": 556,
  "symbols_in_volume": [
   "numpy.linalg.eig",
   "numpy.linalg.eigvals",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase.test_generalized_empty_herm_cases": {
  "lineno": 421,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase.test_generalized_herm_cases": {
  "lineno": 416,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.HermitianTestCase": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.HermitianTestCase.test_empty_herm_cases": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.HermitianTestCase.test_herm_cases": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.InvCases": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.InvCases.do": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.linalg.inv",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase.__repr__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase.check": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedNonsquareTestCase": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedNonsquareTestCase.test_generalized_empty_nonsq_cases": {
  "lineno": 409,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedNonsquareTestCase.test_generalized_nonsq_cases": {
  "lineno": 404,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase.test_generalized_empty_sq_cases": {
  "lineno": 397,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase.test_generalized_sq_cases": {
  "lineno": 392,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase.test_empty_nonsq_cases": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase.test_nonsq_cases": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgSquareTestCase": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgSquareTestCase.test_empty_sq_cases": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgSquareTestCase.test_sq_cases": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgTestCase": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgTestCase.check_cases": {
  "lineno": 337,
  "symbols_in_volume": [
   "traceback.format_exc"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LstsqCases": {
  "lineno": 902,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LstsqCases.do": {
  "lineno": 904,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.dot",
   "numpy.floating",
   "numpy.issubdtype",
   "numpy.linalg.lstsq",
   "numpy.linalg.svd",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.PinvCases": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.PinvCases.do": {
  "lineno": 814,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.pinv",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.PinvHermitianCases": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.PinvHermitianCases.do": {
  "lineno": 828,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.pinv",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.SVDBaseTests": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.SVDBaseTests.test_types": {
  "lineno": 638,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.linalg.svd",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.SVDCases": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.SVDCases.do": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.linalg.svd",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.SVDHermitianCases": {
  "lineno": 676,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.SVDHermitianCases.do": {
  "lineno": 678,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.broadcast_to",
   "numpy.eye",
   "numpy.linalg.svd",
   "numpy.matmul",
   "numpy.sort",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.SVDHermitianCases.do.hermitian": {
  "lineno": 683,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.SolveCases": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.SolveCases.do": {
  "lineno": 458,
  "symbols_in_volume": [
   "numpy.linalg.solve",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCholesky": {
  "lineno": 1711,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCholesky.test_0_size": {
  "lineno": 1738,
  "symbols_in_volume": [
   "numpy.complex64",
   "numpy.float64",
   "numpy.int_",
   "numpy.linalg.cholesky",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCholesky.test_0_size.ArraySubclass": {
  "lineno": 1739,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCholesky.test_basic_property": {
  "lineno": 1714,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.asarray",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.complexfloating",
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.issubdtype",
   "numpy.linalg.cholesky",
   "numpy.matmul",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCond": {
  "lineno": 745,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCond.test_basic_nonsvd": {
  "lineno": 746,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.linalg.cond",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCond.test_nan": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.float_",
   "numpy.isnan",
   "numpy.linalg.cond",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCond.test_singular": {
  "lineno": 755,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.linalg.cond",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCond.test_stacked_singular": {
  "lineno": 793,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isfinite",
   "numpy.linalg.cond",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet": {
  "lineno": 860,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestDet.test_0_size": {
  "lineno": 882,
  "symbols_in_volume": [
   "numpy.complex64",
   "numpy.float32",
   "numpy.float64",
   "numpy.linalg.det",
   "numpy.linalg.slogdet",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet.test_types": {
  "lineno": 874,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.linalg.det",
   "numpy.linalg.slogdet",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet.test_zero": {
  "lineno": 861,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.double",
   "numpy.inf",
   "numpy.linalg.det",
   "numpy.linalg.slogdet",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEig": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEig.test_0_size": {
  "lineno": 612,
  "symbols_in_volume": [
   "numpy.complex64",
   "numpy.float64",
   "numpy.int_",
   "numpy.linalg.eig",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEig.test_0_size.ArraySubclass": {
  "lineno": 614,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEig.test_types": {
  "lineno": 600,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.linalg.eig",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh": {
  "lineno": 1161,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_0_size": {
  "lineno": 1197,
  "symbols_in_volume": [
   "numpy.complex64",
   "numpy.float32",
   "numpy.float64",
   "numpy.int_",
   "numpy.linalg.eigh",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_0_size.ArraySubclass": {
  "lineno": 1199,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_UPLO": {
  "lineno": 1175,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.double",
   "numpy.linalg.eigh",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_invalid": {
  "lineno": 1169,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.linalg.eigh",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_types": {
  "lineno": 1162,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.linalg.eigh",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEighCases": {
  "lineno": 1139,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEighCases.do": {
  "lineno": 1141,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.linalg.eig",
   "numpy.linalg.eigh",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.test_0_size": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.complex64",
   "numpy.float64",
   "numpy.int_",
   "numpy.linalg.eigvals",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.test_0_size.ArraySubclass": {
  "lineno": 572,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.test_types": {
  "lineno": 563,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.linalg.eigvals",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh": {
  "lineno": 1085,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_0_size": {
  "lineno": 1120,
  "symbols_in_volume": [
   "numpy.complex64",
   "numpy.float32",
   "numpy.float64",
   "numpy.int_",
   "numpy.linalg.eigvalsh",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_0_size.ArraySubclass": {
  "lineno": 1122,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_UPLO": {
  "lineno": 1098,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.double",
   "numpy.linalg.eigvalsh",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_invalid": {
  "lineno": 1092,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.linalg.eigvalsh",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_types": {
  "lineno": 1086,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.linalg.eigvalsh",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalshCases": {
  "lineno": 1071,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalshCases.do": {
  "lineno": 1073,
  "symbols_in_volume": [
   "numpy.linalg.eig",
   "numpy.linalg.eigvalsh",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestInv": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_0_size": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.complex64",
   "numpy.float64",
   "numpy.int_",
   "numpy.linalg.inv",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_0_size.ArraySubclass": {
  "lineno": 539,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_types": {
  "lineno": 532,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.linalg.inv",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestLstsq": {
  "lineno": 932,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestLstsq.test_empty_a_b": {
  "lineno": 951,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.linalg.lstsq",
   "numpy.ones",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestLstsq.test_future_rcond": {
  "lineno": 933,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.lstsq",
   "numpy.testing.assert_",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestLstsq.test_incompatible_dims": {
  "lineno": 975,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.lstsq",
   "numpy.ones",
   "numpy.testing.assert_raises_regex",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower": {
  "lineno": 984,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.block",
   "numpy.dtype",
   "numpy.eye",
   "pytest.mark.parametrize"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_exceptions_bad_power": {
  "lineno": 1053,
  "symbols_in_volume": [
   "numpy.linalg.matrix_power",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_exceptions_non_square": {
  "lineno": 1058,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.matrix_power",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_exceptions_not_invertible": {
  "lineno": 1063,
  "symbols_in_volume": [
   "numpy.linalg.LinAlgError",
   "numpy.linalg.matrix_power",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_large_power": {
  "lineno": 997,
  "symbols_in_volume": [
   "numpy.linalg.matrix_power",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_power_is_minus_one": {
  "lineno": 1042,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_power_is_minus_one.tz": {
  "lineno": 1043,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.matrix_power",
   "numpy.matmul",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_power_is_one": {
  "lineno": 1019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_power_is_one.tz": {
  "lineno": 1020,
  "symbols_in_volume": [
   "numpy.linalg.matrix_power",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_power_is_two": {
  "lineno": 1030,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_power_is_two.tz": {
  "lineno": 1031,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.matrix_power",
   "numpy.matmul",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_power_is_zero": {
  "lineno": 1008,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_power_is_zero.tz": {
  "lineno": 1009,
  "symbols_in_volume": [
   "numpy.linalg.matrix_power",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixRank": {
  "lineno": 1562,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixRank.test_matrix_rank": {
  "lineno": 1564,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.linalg.matrix_rank",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixRank.test_symmetric_rank": {
  "lineno": 1584,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.linalg.matrix_rank",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot": {
  "lineno": 1874,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_basic_function_with_dynamic_programing_optimization": {
  "lineno": 1894,
  "symbols_in_volume": [
   "numpy.linalg.multi_dot",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_basic_function_with_three_arguments": {
  "lineno": 1876,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.multi_dot",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_basic_function_with_two_arguments": {
  "lineno": 1886,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.multi_dot",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_dynamic_programing_optimization_and_out": {
  "lineno": 1956,
  "symbols_in_volume": [
   "numpy.linalg.multi_dot",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_dynamic_programming_logic": {
  "lineno": 1968,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.linalg._multi_dot_matrix_chain_order",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.triu"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_three_arguments_and_out": {
  "lineno": 1933,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.multi_dot",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_too_few_input_arrays": {
  "lineno": 1998,
  "symbols_in_volume": [
   "numpy.linalg.multi_dot",
   "numpy.random.random",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_two_arguments_and_out": {
  "lineno": 1946,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.multi_dot",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_vector_as_first_and_last_argument": {
  "lineno": 1923,
  "symbols_in_volume": [
   "numpy.linalg.multi_dot",
   "numpy.random.random",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_vector_as_first_argument": {
  "lineno": 1903,
  "symbols_in_volume": [
   "numpy.linalg.multi_dot",
   "numpy.random.random",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_vector_as_last_argument": {
  "lineno": 1913,
  "symbols_in_volume": [
   "numpy.linalg.multi_dot",
   "numpy.random.random",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestNormDouble": {
  "lineno": 1550,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestNormInt64": {
  "lineno": 1558,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestNormSingle": {
  "lineno": 1554,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestNorm_NonSystematic": {
  "lineno": 1507,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestNorm_NonSystematic.test_complex_high_ord": {
  "lineno": 1521,
  "symbols_in_volume": [
   "numpy.clongdouble",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.empty",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestNorm_NonSystematic.test_intmin": {
  "lineno": 1515,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestNorm_NonSystematic.test_longdouble_norm": {
  "lineno": 1509,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linalg.norm",
   "numpy.longdouble"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestPinv": {
  "lineno": 822,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestPinvHermitian": {
  "lineno": 836,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestQR": {
  "lineno": 1611,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestQR.check_qr": {
  "lineno": 1615,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.linalg.qr",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.triu"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR.test_mode_all_but_economic": {
  "lineno": 1693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR.test_mode_raw": {
  "lineno": 1671,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.linalg.qr",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR.test_qr_empty": {
  "lineno": 1654,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.empty",
   "numpy.linalg.qr",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSVD": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSVD.test_empty_identity": {
  "lineno": 661,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.eye",
   "numpy.linalg.svd",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSVDHermitian": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSolve": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size": {
  "lineno": 470,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.solve",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size.ArraySubclass": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size_k": {
  "lineno": 503,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linalg.solve",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size_k.ArraySubclass": {
  "lineno": 505,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_types": {
  "lineno": 465,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.linalg.solve",
   "numpy.single",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestTensorinv": {
  "lineno": 2003,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestTensorinv.test_non_square_handling": {
  "lineno": 2005,
  "symbols_in_volume": [
   "numpy.linalg.LinAlgError",
   "numpy.linalg.tensorinv",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestTensorinv.test_tensorinv_ind_limit": {
  "lineno": 2026,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.linalg.tensorinv",
   "numpy.testing.assert_raises",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestTensorinv.test_tensorinv_result": {
  "lineno": 2035,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.linalg.tensorinv",
   "numpy.linalg.tensorsolve",
   "numpy.ones",
   "numpy.tensordot",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestTensorinv.test_tensorinv_shape": {
  "lineno": 2013,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.linalg.tensorinv",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm": {
  "lineno": 1503,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg._TestNorm2D": {
  "lineno": 1383,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg._TestNorm2D.test_bad_args": {
  "lineno": 1475,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.linalg.norm",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm2D.test_matrix_2x2": {
  "lineno": 1442,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.linalg.norm",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm2D.test_matrix_3x3": {
  "lineno": 1458,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.linalg.norm",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm2D.test_matrix_empty": {
  "lineno": 1388,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm2D.test_matrix_return_type": {
  "lineno": 1391,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.inf",
   "numpy.linalg.norm",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.suppress_warnings",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNormBase": {
  "lineno": 1220,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg._TestNormDoubleBase": {
  "lineno": 1535,
  "symbols_in_volume": [
   "numpy.double"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg._TestNormGeneral": {
  "lineno": 1225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg._TestNormGeneral.test_axis": {
  "lineno": 1303,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.Inf",
   "numpy.arange",
   "numpy.array",
   "numpy.linalg.norm",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNormGeneral.test_empty": {
  "lineno": 1227,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.linalg.norm",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNormGeneral.test_keepdims": {
  "lineno": 1340,
  "symbols_in_volume": [
   "itertools.permutations",
   "numpy.Inf",
   "numpy.arange",
   "numpy.linalg.norm",
   "numpy.squeeze",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNormGeneral.test_vector": {
  "lineno": 1273,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNormGeneral.test_vector._test": {
  "lineno": 1278,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.linalg.norm",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNormGeneral.test_vector_return_type": {
  "lineno": 1232,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.floating",
   "numpy.inf",
   "numpy.linalg.norm",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.suppress_warnings",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNormInt64Base": {
  "lineno": 1545,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg._TestNormSingleBase": {
  "lineno": 1540,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg._make_generalized_cases": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._make_strided_cases": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._stride_comb_iter": {
  "lineno": 269,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.all",
   "numpy.empty",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.apply_tag": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.assert_almost_equal": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.csingle",
   "numpy.single"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.consistent_subclass": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.dot_generalized": {
  "lineno": 427,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.asarray",
   "numpy.common_type",
   "numpy.dot",
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.get_complex_dtype": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.single"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.get_real_dtype": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.cdouble",
   "numpy.csingle",
   "numpy.double",
   "numpy.single"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.get_rtol": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.csingle",
   "numpy.single"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.identity_like_generalized": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "numpy.identity"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_blas64_dot": {
  "lineno": 2051,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.float32",
   "numpy.ones",
   "numpy.testing.HAS_LAPACK64",
   "numpy.testing._private.utils.requires_memory",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.slow",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_blas64_geqrf_lwork_smoketest": {
  "lineno": 2064,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.linalg.lapack_lite.dgeqrf",
   "numpy.testing.HAS_LAPACK64",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_byteorder_check": {
  "lineno": 1755,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.float32",
   "numpy.float64",
   "numpy.linalg.det",
   "numpy.linalg.inv",
   "numpy.linalg.pinv",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_generalized_raise_multiloop": {
  "lineno": 1776,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.inv",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_reduced_rank": {
  "lineno": 1598,
  "symbols_in_volume": [
   "numpy.linalg.matrix_rank",
   "numpy.random.RandomState",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_sdot_bug_8577": {
  "lineno": 1839,
  "symbols_in_volume": [
   "pytest.mark.slow",
   "subprocess.check_call",
   "sys.executable",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_unsupported_commontype": {
  "lineno": 2044,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.cholesky",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_xerbla_override": {
  "lineno": 1790,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.lapack_lite.dorgqr",
   "numpy.linalg.lapack_lite.xerbla",
   "os.EX_CONFIG",
   "os.WEXITSTATUS",
   "os._exit",
   "os.close",
   "os.fork",
   "os.wait",
   "pytest.skip",
   "resource.RLIMIT_CORE",
   "resource.setrlimit"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.linalg.tests.test_regression.TestRegression": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_eig_build": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float64",
   "numpy.linalg.eig",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_eigh_build": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.eigh",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_lapack_endian": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.cholesky",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_large_svd_32bit": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.linalg.svd"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_lstsq_complex_larger_rhs": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.linalg.lstsq",
   "numpy.random.randn",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_norm_object_array": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.inf",
   "numpy.linalg.norm",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_norm_vector_badarg": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.norm",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_svd_build": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.linalg.svd",
   "numpy.testing.assert_array_almost_equal",
   "numpy.transpose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_svd_no_uv": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.count_nonzero",
   "numpy.linalg.matrix_rank",
   "numpy.linalg.norm",
   "numpy.linalg.svd",
   "numpy.ones",
   "numpy.testing.assert_array_less",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy._pytesttester.PytestTester"
  ],
  "type": "module"
 },
 "numpy.ma.bench": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.log",
   "numpy.ma.array",
   "numpy.multiply",
   "numpy.power",
   "numpy.random.uniform",
   "numpy.sin",
   "numpy.sqrt"
  ],
  "type": "module"
 },
 "numpy.ma.bench.compare_functions_1v": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.bench.compare_functions_2v": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.bench.compare_methods": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.bench.timer": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.floor",
   "numpy.log10",
   "timeit.Timer"
  ],
  "type": "function"
 },
 "numpy.ma.core": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array.__doc__",
   "numpy.bool_",
   "numpy.cdouble",
   "numpy.clip",
   "numpy.clongdouble",
   "numpy.core.numerictypes._maxvals",
   "numpy.core.numerictypes._minvals",
   "numpy.core.umath.absolute",
   "numpy.core.umath.add",
   "numpy.core.umath.arccos",
   "numpy.core.umath.arccosh",
   "numpy.core.umath.arcsin",
   "numpy.core.umath.arcsinh",
   "numpy.core.umath.arctan",
   "numpy.core.umath.arctan2",
   "numpy.core.umath.arctanh",
   "numpy.core.umath.bitwise_and",
   "numpy.core.umath.bitwise_or",
   "numpy.core.umath.bitwise_xor",
   "numpy.core.umath.ceil",
   "numpy.core.umath.conjugate",
   "numpy.core.umath.cos",
   "numpy.core.umath.cosh",
   "numpy.core.umath.divide",
   "numpy.core.umath.equal",
   "numpy.core.umath.exp",
   "numpy.core.umath.fabs",
   "numpy.core.umath.floor",
   "numpy.core.umath.floor_divide",
   "numpy.core.umath.fmod",
   "numpy.core.umath.greater",
   "numpy.core.umath.greater_equal",
   "numpy.core.umath.hypot",
   "numpy.core.umath.less",
   "numpy.core.umath.less_equal",
   "numpy.core.umath.log",
   "numpy.core.umath.log10",
   "numpy.core.umath.log2",
   "numpy.core.umath.logical_and",
   "numpy.core.umath.logical_not",
   "numpy.core.umath.logical_or",
   "numpy.core.umath.logical_xor",
   "numpy.core.umath.maximum",
   "numpy.core.umath.minimum",
   "numpy.core.umath.mod",
   "numpy.core.umath.multiply",
   "numpy.core.umath.negative",
   "numpy.core.umath.not_equal",
   "numpy.core.umath.remainder",
   "numpy.core.umath.sin",
   "numpy.core.umath.sinh",
   "numpy.core.umath.sqrt",
   "numpy.core.umath.subtract",
   "numpy.core.umath.tan",
   "numpy.core.umath.tanh",
   "numpy.core.umath.true_divide",
   "numpy.csingle",
   "numpy.datetime64",
   "numpy.diff",
   "numpy.double",
   "numpy.half",
   "numpy.indices",
   "numpy.inf",
   "numpy.inner.__doc__",
   "numpy.lib.function_base.angle",
   "numpy.longdouble",
   "numpy.ndim.__doc__",
   "numpy.ones_like",
   "numpy.outer.__doc__",
   "numpy.round_",
   "numpy.shape.__doc__",
   "numpy.single",
   "numpy.size.__doc__",
   "numpy.squeeze",
   "numpy.timedelta64",
   "numpy.zeros_like",
   "textwrap.dedent"
  ],
  "type": "module"
 },
 "numpy.ma.core.MAError": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core.MaskError": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core.MaskedArray": {
  "lineno": 2708,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.ndarray.trace.__doc__",
   "numpy.var.__doc__"
  ],
  "type": "class"
 },
 "numpy.ma.core.MaskedArray.__add__": {
  "lineno": 4131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__array_finalize__": {
  "lineno": 2975,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__array_wrap__": {
  "lineno": 3068,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.copyto",
   "numpy.errstate"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__deepcopy__": {
  "lineno": 6213,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__div__": {
  "lineno": 4180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__eq__": {
  "lineno": 4105,
  "symbols_in_volume": [
   "operator.eq"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__float__": {
  "lineno": 4361,
  "symbols_in_volume": [
   "numpy.nan",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__floordiv__": {
  "lineno": 4205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__getitem__": {
  "lineno": 3214,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.object_",
   "numpy.void",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__getitem__._is_scalar": {
  "lineno": 3228,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__getitem__._scalar_heuristic": {
  "lineno": 3231,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.ndarray.__getitem__",
   "numpy.object_"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__getstate__": {
  "lineno": 6179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__iadd__": {
  "lineno": 4237,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__idiv__": {
  "lineno": 4286,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__ifloordiv__": {
  "lineno": 4304,
  "symbols_in_volume": [
   "numpy.floor_divide",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__imul__": {
  "lineno": 4270,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__int__": {
  "lineno": 4374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__ipow__": {
  "lineno": 4340,
  "symbols_in_volume": [
   "numpy.copyto",
   "numpy.errstate",
   "numpy.isfinite",
   "numpy.logical_not",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__isub__": {
  "lineno": 4254,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__itruediv__": {
  "lineno": 4322,
  "symbols_in_volume": [
   "numpy.true_divide",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__mul__": {
  "lineno": 4165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__ne__": {
  "lineno": 4118,
  "symbols_in_volume": [
   "operator.ne"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__new__": {
  "lineno": 2819,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asanyarray",
   "numpy.logical_or",
   "numpy.ndarray",
   "numpy.ndarray.view",
   "numpy.ones",
   "numpy.reshape",
   "numpy.resize",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__new__._recursive_or": {
  "lineno": 2921,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__pow__": {
  "lineno": 4221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__radd__": {
  "lineno": 4140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__reduce__": {
  "lineno": 6205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__repr__": {
  "lineno": 3943,
  "symbols_in_volume": [
   "builtins.all",
   "builtins.max",
   "numpy.all",
   "numpy.array2string",
   "numpy.core.arrayprint.dtype_is_implied",
   "numpy.core.arrayprint.dtype_short_repr",
   "numpy.get_printoptions",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__rfloordiv__": {
  "lineno": 4214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__rmul__": {
  "lineno": 4171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__rpow__": {
  "lineno": 4230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__rsub__": {
  "lineno": 4158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__rtruediv__": {
  "lineno": 4198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__setitem__": {
  "lineno": 3340,
  "symbols_in_volume": [
   "numpy.copyto",
   "numpy.core.umath.logical_not"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__setmask__": {
  "lineno": 3434,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.number"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__setstate__": {
  "lineno": 6188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__str__": {
  "lineno": 3940,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__sub__": {
  "lineno": 4149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.__truediv__": {
  "lineno": 4189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray._comparison": {
  "lineno": 4041,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.broadcast",
   "numpy.broadcast_to",
   "numpy.ones",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray._delegate_binop": {
  "lineno": 4027,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray._get_data": {
  "lineno": 3636,
  "symbols_in_volume": [
   "numpy.ndarray.view"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray._insert_masked_print": {
  "lineno": 3909,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.split"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray._update_from": {
  "lineno": 2949,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.all": {
  "lineno": 4816,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.anom": {
  "lineno": 5262,
  "symbols_in_volume": [
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.any": {
  "lineno": 4856,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.argmax": {
  "lineno": 5540,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.argmin": {
  "lineno": 5495,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.argpartition": {
  "lineno": 5955,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.argsort": {
  "lineno": 5415,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.floating",
   "numpy.issubdtype",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.baseclass": {
  "lineno": 3631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.compress": {
  "lineno": 3837,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.compressed": {
  "lineno": 3810,
  "symbols_in_volume": [
   "numpy.logical_not",
   "numpy.ndarray.ravel"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.count": {
  "lineno": 4440,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy._NoValue",
   "numpy.array",
   "numpy.bool_",
   "numpy.core.numeric.normalize_axis_tuple",
   "numpy.full",
   "numpy.intp",
   "numpy.matrix",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.cumprod": {
  "lineno": 5183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.cumsum": {
  "lineno": 5100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.dot": {
  "lineno": 4999,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.dtype": {
  "lineno": 3410,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.fill_value": {
  "lineno": 3707,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.filled": {
  "lineno": 3730,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asanyarray",
   "numpy.choose",
   "numpy.copyto"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.flat": {
  "lineno": 3661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.harden_mask": {
  "lineno": 3542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.hardmask": {
  "lineno": 3572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.ids": {
  "lineno": 4762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.imag": {
  "lineno": 4386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.iscontiguous": {
  "lineno": 4788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.mask": {
  "lineno": 3515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.max": {
  "lineno": 5794,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.copyto",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.mean": {
  "lineno": 5214,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.min": {
  "lineno": 5660,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.copyto",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.mini": {
  "lineno": 5727,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.nonzero": {
  "lineno": 4886,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.partition": {
  "lineno": 5949,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.prod": {
  "lineno": 5141,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.ptp": {
  "lineno": 5861,
  "symbols_in_volume": [
   "numpy.subtract"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.put": {
  "lineno": 4677,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.ravel": {
  "lineno": 4539,
  "symbols_in_volume": [
   "numpy.ndarray.ravel"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.real": {
  "lineno": 4413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.recordmask": {
  "lineno": 3538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.reshape": {
  "lineno": 4593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.resize": {
  "lineno": 4659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.round": {
  "lineno": 5390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.shape": {
  "lineno": 3426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.sharedmask": {
  "lineno": 3595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.shrink_mask": {
  "lineno": 3600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.soften_mask": {
  "lineno": 3557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.sort": {
  "lineno": 5577,
  "symbols_in_volume": [
   "numpy.ndarray.sort",
   "numpy.take_along_axis"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.std": {
  "lineno": 5366,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.power"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.sum": {
  "lineno": 5038,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.take": {
  "lineno": 5961,
  "symbols_in_volume": [
   "numpy.take"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.tobytes": {
  "lineno": 6063,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.tofile": {
  "lineno": 6103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.toflex": {
  "lineno": 6118,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.tolist": {
  "lineno": 5997,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.tostring": {
  "lineno": 6048,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.trace": {
  "lineno": 4984,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.unshare_mask": {
  "lineno": 3577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.var": {
  "lineno": 5302,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.core.umath.absolute",
   "numpy.iscomplexobj",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArray.view": {
  "lineno": 3124,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.ndarray.view"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedArrayFutureWarning": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core.MaskedConstant": {
  "lineno": 6429,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core.MaskedConstant.__array_finalize__": {
  "lineno": 6457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__array_prepare__": {
  "lineno": 6471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__array_wrap__": {
  "lineno": 6474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__copy__": {
  "lineno": 6526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__deepcopy__": {
  "lineno": 6529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__format__": {
  "lineno": 6487,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__has_singleton": {
  "lineno": 6433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__iop__": {
  "lineno": 6509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__new__": {
  "lineno": 6439,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__reduce__": {
  "lineno": 6502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__repr__": {
  "lineno": 6480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__setattr__": {
  "lineno": 6532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.__str__": {
  "lineno": 6477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedConstant.copy": {
  "lineno": 6520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedIterator": {
  "lineno": 2600,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core.MaskedIterator.__getitem__": {
  "lineno": 2660,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedIterator.__init__": {
  "lineno": 2648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedIterator.__iter__": {
  "lineno": 2657,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.MaskedIterator.__next__": {
  "lineno": 2680,
  "symbols_in_volume": [
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.ma.core.MaskedIterator.__setitem__": {
  "lineno": 2675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._DomainCheckInterval": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._DomainCheckInterval.__call__": {
  "lineno": 814,
  "symbols_in_volume": [
   "numpy.core.umath.greater",
   "numpy.core.umath.less",
   "numpy.core.umath.logical_or",
   "numpy.errstate"
  ],
  "type": "function"
 },
 "numpy.ma.core._DomainCheckInterval.__init__": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._DomainGreater": {
  "lineno": 862,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._DomainGreater.__call__": {
  "lineno": 872,
  "symbols_in_volume": [
   "numpy.core.umath.less_equal",
   "numpy.errstate"
  ],
  "type": "function"
 },
 "numpy.ma.core._DomainGreater.__init__": {
  "lineno": 868,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._DomainGreaterEqual": {
  "lineno": 878,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._DomainGreaterEqual.__call__": {
  "lineno": 888,
  "symbols_in_volume": [
   "numpy.core.umath.less",
   "numpy.errstate"
  ],
  "type": "function"
 },
 "numpy.ma.core._DomainGreaterEqual.__init__": {
  "lineno": 884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._DomainSafeDivide": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._DomainSafeDivide.__call__": {
  "lineno": 850,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.umath.absolute",
   "numpy.errstate",
   "numpy.finfo"
  ],
  "type": "function"
 },
 "numpy.ma.core._DomainSafeDivide.__init__": {
  "lineno": 847,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._DomainTan": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._DomainTan.__call__": {
  "lineno": 835,
  "symbols_in_volume": [
   "numpy.core.umath.absolute",
   "numpy.core.umath.cos",
   "numpy.core.umath.less",
   "numpy.errstate"
  ],
  "type": "function"
 },
 "numpy.ma.core._DomainTan.__init__": {
  "lineno": 831,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._DomainedBinaryOperation": {
  "lineno": 1126,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._DomainedBinaryOperation.__call__": {
  "lineno": 1158,
  "symbols_in_volume": [
   "numpy.can_cast",
   "numpy.copyto",
   "numpy.core.umath.isfinite",
   "numpy.core.umath.multiply",
   "numpy.errstate"
  ],
  "type": "function"
 },
 "numpy.ma.core._DomainedBinaryOperation.__init__": {
  "lineno": 1147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedBinaryOperation": {
  "lineno": 978,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._MaskedBinaryOperation.__call__": {
  "lineno": 1011,
  "symbols_in_volume": [
   "numpy.copyto",
   "numpy.core.umath.logical_or",
   "numpy.errstate",
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.ma.core._MaskedBinaryOperation.__init__": {
  "lineno": 998,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedBinaryOperation.accumulate": {
  "lineno": 1113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedBinaryOperation.outer": {
  "lineno": 1088,
  "symbols_in_volume": [
   "numpy.copyto",
   "numpy.core.umath.logical_or.outer"
  ],
  "type": "function"
 },
 "numpy.ma.core._MaskedBinaryOperation.reduce": {
  "lineno": 1058,
  "symbols_in_volume": [
   "numpy.core.umath.logical_and.reduce"
  ],
  "type": "function"
 },
 "numpy.ma.core._MaskedPrintOption": {
  "lineno": 2383,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._MaskedPrintOption.__init__": {
  "lineno": 2389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedPrintOption.__str__": {
  "lineno": 2425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedPrintOption.display": {
  "lineno": 2397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedPrintOption.enable": {
  "lineno": 2418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedPrintOption.enabled": {
  "lineno": 2411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedPrintOption.set_display": {
  "lineno": 2404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedUFunc": {
  "lineno": 894,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._MaskedUFunc.__init__": {
  "lineno": 895,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedUFunc.__str__": {
  "lineno": 900,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._MaskedUnaryOperation": {
  "lineno": 904,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._MaskedUnaryOperation.__call__": {
  "lineno": 929,
  "symbols_in_volume": [
   "numpy.copyto",
   "numpy.core.umath.isfinite",
   "numpy.errstate"
  ],
  "type": "function"
 },
 "numpy.ma.core._MaskedUnaryOperation.__init__": {
  "lineno": 922,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._arraymethod": {
  "lineno": 2555,
  "symbols_in_volume": [
   "numpy",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core._arraymethod.wrapped_method": {
  "lineno": 2582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._check_fill_value": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.dtype",
   "numpy.ndarray",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.ma.core._check_mask_axis": {
  "lineno": 1818,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.ma.core._convert2ma": {
  "lineno": 8081,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._convert2ma.__call__": {
  "lineno": 8110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._convert2ma.__init__": {
  "lineno": 8094,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "numpy.ma.core._convert2ma.getdoc": {
  "lineno": 8099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._convolve_or_correlate": {
  "lineno": 7667,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.shape"
  ],
  "type": "function"
 },
 "numpy.ma.core._deprecate_argsort_axis": {
  "lineno": 87,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core._extrema_operation": {
  "lineno": 6624,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._extrema_operation.__call__": {
  "lineno": 6638,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core._extrema_operation.__init__": {
  "lineno": 6633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._extrema_operation.outer": {
  "lineno": 6681,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._extrema_operation.reduce": {
  "lineno": 6649,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.array",
   "numpy.core.umath.logical_and.reduce",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core._extremum_fill_value": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._extremum_fill_value._scalar_fill_value": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._frommethod": {
  "lineno": 6739,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core._frommethod.__call__": {
  "lineno": 6765,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "numpy.ma.core._frommethod.__init__": {
  "lineno": 6750,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core._frommethod.getdoc": {
  "lineno": 6755,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "numpy.ma.core._get_dtype_of": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.ma.core._mareconstruct": {
  "lineno": 6224,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.ndarray.__new__"
  ],
  "type": "function"
 },
 "numpy.ma.core._pickle_warn": {
  "lineno": 8005,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.core._recursive_fill_value": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full"
  ],
  "type": "function"
 },
 "numpy.ma.core._recursive_filled": {
  "lineno": 2486,
  "symbols_in_volume": [
   "numpy.copyto"
  ],
  "type": "function"
 },
 "numpy.ma.core._recursive_printoption": {
  "lineno": 2434,
  "symbols_in_volume": [
   "numpy.copyto"
  ],
  "type": "function"
 },
 "numpy.ma.core._recursive_set_fill_value": {
  "lineno": 402,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.resize"
  ],
  "type": "function"
 },
 "numpy.ma.core._replace_dtype_fields": {
  "lineno": 1316,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.ma.core._replace_dtype_fields_recursive": {
  "lineno": 1284,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.ma.core._shrink_mask": {
  "lineno": 1546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.allclose": {
  "lineno": 7800,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.isinf",
   "numpy.result_type"
  ],
  "type": "function"
 },
 "numpy.ma.core.allequal": {
  "lineno": 7742,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.umath.equal"
  ],
  "type": "function"
 },
 "numpy.ma.core.append": {
  "lineno": 8142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.argsort": {
  "lineno": 6870,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.array": {
  "lineno": 6549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.asanyarray": {
  "lineno": 7952,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.asarray": {
  "lineno": 7903,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.choose": {
  "lineno": 7344,
  "symbols_in_volume": [
   "numpy.choose"
  ],
  "type": "function"
 },
 "numpy.ma.core.choose.fmask": {
  "lineno": 7389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.choose.nmask": {
  "lineno": 7395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.common_fill_value": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.compressed": {
  "lineno": 6911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.concatenate": {
  "lineno": 6927,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "numpy.ma.core.convolve": {
  "lineno": 7714,
  "symbols_in_volume": [
   "numpy.convolve"
  ],
  "type": "function"
 },
 "numpy.ma.core.correlate": {
  "lineno": 7686,
  "symbols_in_volume": [
   "numpy.correlate"
  ],
  "type": "function"
 },
 "numpy.ma.core.default_fill_value": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.default_fill_value._scalar_fill_value": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.diag": {
  "lineno": 6987,
  "symbols_in_volume": [
   "numpy.diag"
  ],
  "type": "function"
 },
 "numpy.ma.core.doc_note": {
  "lineno": 115,
  "symbols_in_volume": [
   "re.split"
  ],
  "type": "function"
 },
 "numpy.ma.core.dot": {
  "lineno": 7547,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.empty",
   "numpy.logical_not"
  ],
  "type": "function"
 },
 "numpy.ma.core.filled": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.fix_invalid": {
  "lineno": 726,
  "symbols_in_volume": [
   "numpy.isfinite",
   "numpy.logical_not"
  ],
  "type": "function"
 },
 "numpy.ma.core.flatten_mask": {
  "lineno": 1762,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.flatten_mask._flatmask": {
  "lineno": 1794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.flatten_mask._flatsequence": {
  "lineno": 1802,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.flatten_structured_array": {
  "lineno": 2500,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.flatten_structured_array.flatten_sequence": {
  "lineno": 2527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.fromfile": {
  "lineno": 8012,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.fromflex": {
  "lineno": 8017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.get_fill_value": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.get_masked_subclass": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.get_object_signature": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.compat.formatargspec",
   "numpy.compat.getargspec"
  ],
  "type": "function"
 },
 "numpy.ma.core.getdata": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.getmask": {
  "lineno": 1363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.getmaskarray": {
  "lineno": 1425,
  "symbols_in_volume": [
   "numpy.shape"
  ],
  "type": "function"
 },
 "numpy.ma.core.inner": {
  "lineno": 7629,
  "symbols_in_volume": [
   "numpy.inner"
  ],
  "type": "function"
 },
 "numpy.ma.core.isMaskedArray": {
  "lineno": 6374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.is_mask": {
  "lineno": 1478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.is_masked": {
  "lineno": 6566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.is_string_or_list_of_strings": {
  "lineno": 784,
  "symbols_in_volume": [
   "builtins.all"
  ],
  "type": "function"
 },
 "numpy.ma.core.left_shift": {
  "lineno": 7005,
  "symbols_in_volume": [
   "numpy.core.umath.left_shift"
  ],
  "type": "function"
 },
 "numpy.ma.core.make_mask": {
  "lineno": 1556,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.ndarray",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.ma.core.make_mask_descr": {
  "lineno": 1330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.make_mask_none": {
  "lineno": 1645,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.core.mask_or": {
  "lineno": 1695,
  "symbols_in_volume": [
   "numpy.broadcast",
   "numpy.core.umath.logical_or",
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.ma.core.mask_or._recursive_mask_or": {
  "lineno": 1732,
  "symbols_in_volume": [
   "numpy.core._internal.recursive",
   "numpy.core.umath.logical_or"
  ],
  "type": "function"
 },
 "numpy.ma.core.mask_rowcols": {
  "lineno": 7455,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.unique"
  ],
  "type": "function"
 },
 "numpy.ma.core.masked_equal": {
  "lineno": 2078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.masked_greater": {
  "lineno": 1948,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.masked_greater_equal": {
  "lineno": 1974,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.masked_inside": {
  "lineno": 2108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.masked_invalid": {
  "lineno": 2336,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "numpy.ma.core.masked_less": {
  "lineno": 2000,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.masked_less_equal": {
  "lineno": 2026,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.masked_not_equal": {
  "lineno": 2052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.masked_object": {
  "lineno": 2188,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.core.umath.equal"
  ],
  "type": "function"
 },
 "numpy.ma.core.masked_outside": {
  "lineno": 2148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.masked_values": {
  "lineno": 2256,
  "symbols_in_volume": [
   "numpy.core.umath.equal",
   "numpy.floating",
   "numpy.isclose",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "numpy.ma.core.masked_where": {
  "lineno": 1830,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.core.max": {
  "lineno": 6709,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.ma.core.maximum_fill_value": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.min": {
  "lineno": 6697,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.ma.core.minimum_fill_value": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.mvoid": {
  "lineno": 6234,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.core.mvoid.__getitem__": {
  "lineno": 6264,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.core.mvoid.__iter__": {
  "lineno": 6306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.mvoid.__len__": {
  "lineno": 6318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.mvoid.__new__": {
  "lineno": 6239,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.ma.core.mvoid.__setitem__": {
  "lineno": 6286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.mvoid.__str__": {
  "lineno": 6293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.mvoid._data": {
  "lineno": 6259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.mvoid.filled": {
  "lineno": 6321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.mvoid.tolist": {
  "lineno": 6345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.ndim": {
  "lineno": 7226,
  "symbols_in_volume": [
   "numpy.ndim"
  ],
  "type": "function"
 },
 "numpy.ma.core.outer": {
  "lineno": 7649,
  "symbols_in_volume": [
   "numpy.outer"
  ],
  "type": "function"
 },
 "numpy.ma.core.power": {
  "lineno": 6816,
  "symbols_in_volume": [
   "numpy.core.umath.power",
   "numpy.errstate",
   "numpy.isfinite",
   "numpy.logical_not",
   "numpy.logical_or",
   "numpy.ndarray",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.core.ptp": {
  "lineno": 6722,
  "symbols_in_volume": [
   "numpy._NoValue"
  ],
  "type": "function"
 },
 "numpy.ma.core.put": {
  "lineno": 7047,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.core.putmask": {
  "lineno": 7066,
  "symbols_in_volume": [
   "numpy.copyto"
  ],
  "type": "function"
 },
 "numpy.ma.core.reshape": {
  "lineno": 7143,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.core.resize": {
  "lineno": 7162,
  "symbols_in_volume": [
   "numpy.resize"
  ],
  "type": "function"
 },
 "numpy.ma.core.right_shift": {
  "lineno": 7026,
  "symbols_in_volume": [
   "numpy.core.umath.right_shift"
  ],
  "type": "function"
 },
 "numpy.ma.core.round_": {
  "lineno": 7419,
  "symbols_in_volume": [
   "numpy.round_"
  ],
  "type": "function"
 },
 "numpy.ma.core.set_fill_value": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.shape": {
  "lineno": 7236,
  "symbols_in_volume": [
   "numpy.shape"
  ],
  "type": "function"
 },
 "numpy.ma.core.size": {
  "lineno": 7242,
  "symbols_in_volume": [
   "numpy.size"
  ],
  "type": "function"
 },
 "numpy.ma.core.sort": {
  "lineno": 6885,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.core.take": {
  "lineno": 6809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.core.transpose": {
  "lineno": 7105,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.core.where": {
  "lineno": 7253,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy._NoValue.count",
   "numpy.ones",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.extras": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.apply_along_axis.__doc__",
   "numpy.apply_over_axes.__doc__.find",
   "numpy.apply_over_axes.__doc__.rstrip",
   "numpy.polyfit.__doc__",
   "numpy.vander.__doc__"
  ],
  "type": "module"
 },
 "numpy.ma.extras.MAxisConcatenator": {
  "lineno": 1472,
  "symbols_in_volume": [
   "numpy.lib.index_tricks.AxisConcatenator"
  ],
  "type": "class"
 },
 "numpy.ma.extras.MAxisConcatenator.__getitem__": {
  "lineno": 1494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.MAxisConcatenator.makemat": {
  "lineno": 1485,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.extras._covhelper": {
  "lineno": 1266,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.logical_not",
   "numpy.logical_or"
  ],
  "type": "function"
 },
 "numpy.ma.extras._ezclump": {
  "lineno": 1768,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction.__call__": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction.__init__": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction.getdoc": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction_allargs": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction_allargs.__call__": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction_args": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction_args.__call__": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction_seq": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction_seq.__call__": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction_single": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction_single.__call__": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy",
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.extras._median": {
  "lineno": 721,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.concatenate",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.inexact",
   "numpy.inf",
   "numpy.issubdtype",
   "numpy.lib.utils._median_nancheck",
   "numpy.ma.is_masked",
   "numpy.ma.mean",
   "numpy.ma.minimum_fill_value",
   "numpy.ma.sum",
   "numpy.take_along_axis",
   "numpy.true_divide",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.extras._median.replace_masked": {
  "lineno": 783,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.ma.is_masked",
   "numpy.ma.minimum_fill_value"
  ],
  "type": "function"
 },
 "numpy.ma.extras.apply_along_axis": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.dtype",
   "numpy.isscalar",
   "numpy.product",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.extras.apply_over_axes": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.extras.average": {
  "lineno": 533,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.bool_",
   "numpy.broadcast_to",
   "numpy.integer",
   "numpy.multiply",
   "numpy.result_type"
  ],
  "type": "function"
 },
 "numpy.ma.extras.clump_masked": {
  "lineno": 1836,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.clump_unmasked": {
  "lineno": 1797,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.compress_cols": {
  "lineno": 921,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.compress_nd": {
  "lineno": 807,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.numeric.normalize_axis_tuple"
  ],
  "type": "function"
 },
 "numpy.ma.extras.compress_rowcols": {
  "lineno": 849,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.compress_rows": {
  "lineno": 904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.corrcoef": {
  "lineno": 1382,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.dot",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.extras.count_masked": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.cov": {
  "lineno": 1309,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "numpy.ma.extras.ediff1d": {
  "lineno": 1042,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.flatnotmasked_contiguous": {
  "lineno": 1635,
  "symbols_in_volume": [
   "itertools.groupby"
  ],
  "type": "function"
 },
 "numpy.ma.extras.flatnotmasked_edges": {
  "lineno": 1529,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.flatnonzero"
  ],
  "type": "function"
 },
 "numpy.ma.extras.flatten_inplace": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.in1d": {
  "lineno": 1154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.intersect1d": {
  "lineno": 1095,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.isin": {
  "lineno": 1196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.issequence": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.extras.mask_cols": {
  "lineno": 988,
  "symbols_in_volume": [
   "numpy._NoValue",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.extras.mask_rows": {
  "lineno": 938,
  "symbols_in_volume": [
   "numpy._NoValue",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.extras.masked_all": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.ma.extras.masked_all_like": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.empty_like",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.ma.extras.median": {
  "lineno": 639,
  "symbols_in_volume": [
   "numpy.lib.function_base._ureduce",
   "numpy.median",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.extras.mr_class": {
  "lineno": 1502,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.extras.mr_class.__init__": {
  "lineno": 1520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.notmasked_contiguous": {
  "lineno": 1691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.notmasked_edges": {
  "lineno": 1584,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.indices"
  ],
  "type": "function"
 },
 "numpy.ma.extras.polyfit": {
  "lineno": 1894,
  "symbols_in_volume": [
   "numpy.polyfit"
  ],
  "type": "function"
 },
 "numpy.ma.extras.setdiff1d": {
  "lineno": 1233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.setxor1d": {
  "lineno": 1127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.union1d": {
  "lineno": 1219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.extras.unique": {
  "lineno": 1071,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "numpy.ma.extras.vander": {
  "lineno": 1880,
  "symbols_in_volume": [
   "numpy.vander"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.core.records._byteorderconv",
   "numpy.ma.core._check_fill_value"
  ],
  "type": "module"
 },
 "numpy.ma.mrecords.MaskedRecords": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray"
  ],
  "type": "class"
 },
 "numpy.ma.mrecords.MaskedRecords.__array_finalize__": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.make_mask_descr",
   "numpy.ma.make_mask_none",
   "numpy.ma.nomask",
   "numpy.ndarray",
   "numpy.ndarray.__getattribute__",
   "numpy.recarray"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__getattribute__": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.ndarray",
   "numpy.ndarray.__getattribute__",
   "numpy.ndarray.view"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__getitem__": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.MaskedArray",
   "numpy.ma.masked",
   "numpy.ndarray.__getattribute__",
   "numpy.ndarray.view",
   "numpy.recarray"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__getstate__": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__len__": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__new__": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ma.MAError",
   "numpy.ma.make_mask_descr",
   "numpy.ma.nomask",
   "numpy.recarray.__new__",
   "numpy.reshape",
   "numpy.resize",
   "numpy.size"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__reduce__": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__repr__": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__setattr__": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.ma.filled",
   "numpy.ma.getmaskarray",
   "numpy.ma.masked",
   "numpy.ndarray.__getattribute__"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__setitem__": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray.__setitem__",
   "numpy.ma.getmaskarray"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__setstate__": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.dtype",
   "numpy.ndarray.__setstate__"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__str__": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords._data": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.ndarray.view",
   "numpy.recarray"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords._fieldmask": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.copy": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.harden_mask": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.soften_mask": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.tolist": {
  "lineno": 425,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.view": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.dtype.fields",
   "numpy.ma.make_mask_descr",
   "numpy.ma.nomask",
   "numpy.ndarray",
   "numpy.ndarray.view"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords._checknames": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords._get_fieldmask": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords._guessvartypes": {
  "lineno": 611,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords._mrreconstruct": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.ndarray.__new__"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.addfield": {
  "lineno": 736,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.dtype",
   "numpy.ma.array",
   "numpy.ma.getmaskarray",
   "numpy.recarray"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.fromarrays": {
  "lineno": 503,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.core.records.fromarrays",
   "numpy.dtype",
   "numpy.ma.getdata",
   "numpy.ma.getmaskarray"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.fromrecords": {
  "lineno": 546,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.records.fromrecords",
   "numpy.dtype",
   "numpy.ma.MaskedArray",
   "numpy.ma.nomask",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.fromtextfile": {
  "lineno": 668,
  "symbols_in_volume": [
   "numpy.core.records.fromarrays",
   "numpy.dtype",
   "numpy.ma.default_fill_value",
   "numpy.ma.masked_array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.mrecords.openfile": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "numpy.ma.setup.configuration": {
  "lineno": 2,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration"
  ],
  "type": "function"
 },
 "numpy.ma.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.ma.tests.test_core": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.core.MaskedArrayFutureWarning",
   "numpy.pi",
   "numpy.testing.suppress_warnings"
  ],
  "type": "module"
 },
 "numpy.ma.tests.test_core.TestFillingValues": {
  "lineno": 1965,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_check_on_fields": {
  "lineno": 1983,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.asbytes",
   "numpy.ma.core._check_fill_value",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_check_on_scalar": {
  "lineno": 1967,
  "symbols_in_volume": [
   "numpy.ma.core._check_fill_value",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_default_fill_value": {
  "lineno": 2054,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_default_fill_value_structured": {
  "lineno": 2062,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_default_fill_value_void": {
  "lineno": 2074,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_extremum_fill_value": {
  "lineno": 2160,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.core.maximum_fill_value",
   "numpy.ma.core.minimum_fill_value",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_extremum_fill_value_subdtype": {
  "lineno": 2184,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.int8",
   "numpy.ma.core.array",
   "numpy.ma.core.maximum_fill_value",
   "numpy.ma.core.minimum_fill_value",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue": {
  "lineno": 2079,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.ma.core.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue_as_arguments": {
  "lineno": 2227,
  "symbols_in_volume": [
   "numpy.ma.core.empty",
   "numpy.ma.core.identity",
   "numpy.ma.core.ones",
   "numpy.ma.core.zeros",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue_bytes_or_str": {
  "lineno": 2295,
  "symbols_in_volume": [
   "numpy.ma.core.default_fill_value",
   "numpy.ma.core.empty",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue_conversion": {
  "lineno": 2030,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue_datetime_timedelta": {
  "lineno": 2145,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.ma.core.default_fill_value",
   "numpy.testing.assert_equal",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue_exotic_dtype": {
  "lineno": 2114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ma.core._check_fill_value",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue_implicit_structured_array": {
  "lineno": 2214,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.isnan",
   "numpy.ma.core.array",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.core.empty",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue_in_view": {
  "lineno": 2253,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.int64",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue_individual_fields": {
  "lineno": 2195,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_shape_argument": {
  "lineno": 2241,
  "symbols_in_volume": [
   "numpy.ma.core.empty",
   "numpy.ma.core.ones",
   "numpy.ma.core.zeros",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_subarray_fillvalue": {
  "lineno": 2103,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.setup": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.masked_array",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_0d_unicode": {
  "lineno": 556,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_asarray": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.ma.core.asarray",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_asarray_default_order": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.ma.core.asarray",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_asarray_enforce_order": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.ma.core.asarray",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_basic0d": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.masked_print_option",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_basic1d": {
  "lineno": 106,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.ma.core.count",
   "numpy.ma.core.filled",
   "numpy.ma.core.isMaskedArray",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.fail_if_equal",
   "numpy.shape"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_basic2d": {
  "lineno": 124,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.ma.core.count",
   "numpy.ma.core.filled",
   "numpy.ma.core.isMaskedArray",
   "numpy.ma.core.shape",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_basicattributes": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_concatenate_alongaxis": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ma.core.array",
   "numpy.ma.core.concatenate",
   "numpy.ma.core.ones",
   "numpy.ma.core.zeros",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_concatenate_basic": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ma.core.concatenate",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_concatenate_flexible": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.concatenate",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal_records",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_copy": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.allequal",
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.concatenate",
   "numpy.ma.core.filled",
   "numpy.ma.core.getmask",
   "numpy.ma.core.make_mask",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.repeat",
   "numpy.ma.core.resize",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_not_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_copy_0d": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_copy_immutable": {
  "lineno": 425,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_copy_on_python_builtins": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.ma.copy",
   "numpy.ma.core.isMaskedArray",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_creation_from_ndarray_with_padding": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_creation_maskcreation": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.fail_if_equal",
   "numpy.may_share_memory"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_creation_ndmin": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_creation_ndmin_from_maskedarray": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_creation_with_list_of_maskedarrays": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_deepcopy": {
  "lineno": 433,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_not_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_fancy_printoptions": {
  "lineno": 792,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.core.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_filled_with_f_order": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_filled_with_flexible_dtype": {
  "lineno": 709,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.core.default_fill_value",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_filled_with_mvoid": {
  "lineno": 722,
  "symbols_in_volume": [
   "numpy.ma.core.default_fill_value",
   "numpy.ma.core.mvoid",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_filled_with_nested_dtype": {
  "lineno": 736,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_filled_with_object_dtype": {
  "lineno": 705,
  "symbols_in_volume": [
   "numpy.ma.masked_all",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_fix_invalid": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.ma.core.fix_invalid",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_flatten_structured_array": {
  "lineno": 812,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.core.flatten_structured_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_format": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_indexing": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.core.MaskType",
   "numpy.ma.core.allequal",
   "numpy.ma.core.array",
   "numpy.ma.core.getmask",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.masked_values",
   "numpy.ma.core.sort",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.sort"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_maskedelement": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.filled",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_mvoid_getitem": {
  "lineno": 861,
  "symbols_in_volume": [
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.mvoid",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_mvoid_iter": {
  "lineno": 886,
  "symbols_in_volume": [
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_mvoid_multidim_print": {
  "lineno": 913,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_mvoid_print": {
  "lineno": 896,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_print_option._display",
   "numpy.ma.core.masked_print_option.set_display",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_object_with_array": {
  "lineno": 949,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_oddfeatures_1": {
  "lineno": 654,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.conjugate",
   "numpy.ma.core.count",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_where",
   "numpy.ma.core.shape",
   "numpy.ma.core.where",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_oddfeatures_2": {
  "lineno": 682,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.where",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_oddfeatures_3": {
  "lineno": 696,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_optinfo_forward_propagation": {
  "lineno": 773,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.exp",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_optinfo_propagation": {
  "lineno": 764,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_pickling": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.ma.core.arange",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_pickling_keepalignment": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.ma.core.arange",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_pickling_maskedconstant": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_pickling_subbaseclass": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.recarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_pickling_wstructured": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_set_element_as_object": {
  "lineno": 278,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.ma.core.empty",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_single_element_subscript": {
  "lineno": 626,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_str_repr": {
  "lineno": 465,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.ma.arange",
   "numpy.ma.core.array",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_str_repr_legacy": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.get_printoptions",
   "numpy.ma.arange",
   "numpy.ma.core.array",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.set_printoptions"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_topython": {
  "lineno": 634,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.ma.core.MAError",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_void0d": {
  "lineno": 847,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.mvoid",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic": {
  "lineno": 962,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.setup": {
  "lineno": 965,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.geterr",
   "numpy.ma.core.masked_array",
   "numpy.seterr",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.teardown": {
  "lineno": 982,
  "symbols_in_volume": [
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_TakeTransposeInnerOuter": {
  "lineno": 1422,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inner",
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.filled",
   "numpy.ma.core.inner",
   "numpy.ma.core.masked",
   "numpy.ma.core.outer",
   "numpy.ma.core.take",
   "numpy.ma.core.transpose",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.outer",
   "numpy.take",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_addsumprod": {
  "lineno": 1290,
  "symbols_in_volume": [
   "numpy.add.accumulate",
   "numpy.add.reduce",
   "numpy.concatenate",
   "numpy.ma.core.add.accumulate",
   "numpy.ma.core.add.reduce",
   "numpy.ma.core.array",
   "numpy.ma.core.concatenate",
   "numpy.ma.core.filled",
   "numpy.ma.core.product",
   "numpy.ma.core.sum",
   "numpy.ma.testutils.assert_equal",
   "numpy.product",
   "numpy.sum"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_arithmetic_with_masked_singleton": {
  "lineno": 1069,
  "symbols_in_volume": [
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_arithmetic_with_masked_singleton_on_1d_singleton": {
  "lineno": 1081,
  "symbols_in_volume": [
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_basic_arithmetic": {
  "lineno": 985,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.divide",
   "numpy.ma.core.abs",
   "numpy.ma.core.add",
   "numpy.ma.core.array",
   "numpy.ma.core.divide",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.multiply",
   "numpy.ma.core.subtract",
   "numpy.ma.testutils.assert_equal",
   "numpy.multiply",
   "numpy.subtract"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_basic_ufuncs": {
  "lineno": 1096,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.angle",
   "numpy.arccos",
   "numpy.arcsin",
   "numpy.arctan",
   "numpy.arctan2",
   "numpy.conjugate",
   "numpy.cos",
   "numpy.cosh",
   "numpy.equal",
   "numpy.exp",
   "numpy.greater",
   "numpy.greater_equal",
   "numpy.less",
   "numpy.less_equal",
   "numpy.log",
   "numpy.log10",
   "numpy.ma.core.abs",
   "numpy.ma.core.absolute",
   "numpy.ma.core.angle",
   "numpy.ma.core.arccos",
   "numpy.ma.core.arcsin",
   "numpy.ma.core.arctan",
   "numpy.ma.core.arctan2",
   "numpy.ma.core.conjugate",
   "numpy.ma.core.cos",
   "numpy.ma.core.cosh",
   "numpy.ma.core.equal",
   "numpy.ma.core.exp",
   "numpy.ma.core.greater",
   "numpy.ma.core.greater_equal",
   "numpy.ma.core.less",
   "numpy.ma.core.less_equal",
   "numpy.ma.core.log",
   "numpy.ma.core.log10",
   "numpy.ma.core.not_equal",
   "numpy.ma.core.sin",
   "numpy.ma.core.sinh",
   "numpy.ma.core.sqrt",
   "numpy.ma.core.tan",
   "numpy.ma.core.tanh",
   "numpy.ma.testutils.assert_equal",
   "numpy.not_equal",
   "numpy.sin",
   "numpy.sinh",
   "numpy.sqrt",
   "numpy.tan",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_binops_d2D": {
  "lineno": 1311,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_count_func": {
  "lineno": 1124,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.intp",
   "numpy.ma.core.array",
   "numpy.ma.core.count",
   "numpy.ma.core.getmask",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ndarray",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_count_on_python_builtins": {
  "lineno": 1149,
  "symbols_in_volume": [
   "numpy.ma.core.count",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_divide_on_different_shapes": {
  "lineno": 1020,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_domained_binops_d2D": {
  "lineno": 1347,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_eq_different_dimensions": {
  "lineno": 1761,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_eq_for_numeric": {
  "lineno": 1658,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_eq_for_strings": {
  "lineno": 1594,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_eq_ne_structured_extra": {
  "lineno": 1560,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.core.mvoid",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_eq_on_structured": {
  "lineno": 1474,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_eq_with_None": {
  "lineno": 1724,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_eq_with_scalar": {
  "lineno": 1749,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_imag_real": {
  "lineno": 1442,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_limits_arithmetic": {
  "lineno": 1045,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.ma.core.array",
   "numpy.ma.core.getmaskarray",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_masked_singleton_arithmetic": {
  "lineno": 1051,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.maximum",
   "numpy.ma.core.minimum",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_masked_singleton_equality": {
  "lineno": 1061,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_methods_with_output": {
  "lineno": 1452,
  "symbols_in_volume": [
   "numpy",
   "numpy.empty",
   "numpy.ma.core.array",
   "numpy.ma.core.empty",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minimummaximum_func": {
  "lineno": 1179,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.maximum",
   "numpy.ma.core.maximum.outer",
   "numpy.ma.core.minimum",
   "numpy.ma.core.minimum.outer",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.maximum",
   "numpy.maximum.outer",
   "numpy.minimum",
   "numpy.minimum.outer",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minmax_dtypes": {
  "lineno": 1248,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cdouble",
   "numpy.cfloat",
   "numpy.clongdouble",
   "numpy.double",
   "numpy.finfo",
   "numpy.float64",
   "numpy.half",
   "numpy.inf",
   "numpy.longdouble",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal",
   "numpy.single"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minmax_func": {
  "lineno": 1154,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.greater",
   "numpy.ma.core.less",
   "numpy.ma.core.masked",
   "numpy.ma.core.max",
   "numpy.ma.core.maximum",
   "numpy.ma.core.maximum.reduce",
   "numpy.ma.core.min",
   "numpy.ma.core.minimum",
   "numpy.ma.core.minimum.reduce",
   "numpy.ma.core.ravel",
   "numpy.ma.core.where",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ravel"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minmax_funcs_with_output": {
  "lineno": 1203,
  "symbols_in_volume": [
   "numpy",
   "numpy.empty",
   "numpy.ma.core",
   "numpy.ma.core.MaskError",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_",
   "numpy.random.rand",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minmax_methods": {
  "lineno": 1226,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minmax_reduce": {
  "lineno": 1197,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.maximum.reduce"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_mixed_arithmetic": {
  "lineno": 1038,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_mod": {
  "lineno": 1411,
  "symbols_in_volume": [
   "numpy.ma.core.mask_or",
   "numpy.ma.core.mod",
   "numpy.ma.testutils.assert_equal",
   "numpy.mod"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_ne_for_numeric": {
  "lineno": 1691,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_ne_for_strings": {
  "lineno": 1626,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_ne_on_structured": {
  "lineno": 1517,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_noshink_on_creation": {
  "lineno": 1406,
  "symbols_in_volume": [
   "numpy.ma.masked_values",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_noshrinking": {
  "lineno": 1383,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_numpyarithmetics": {
  "lineno": 1772,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.ma.core.log",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_scalar_arithmetic": {
  "lineno": 1088,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_ufunc_nomask": {
  "lineno": 1400,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.true_divide"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes": {
  "lineno": 1789,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_assign_dtype": {
  "lineno": 1938,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.MaskedArray",
   "numpy.ma.array",
   "numpy.ma.nomask",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_assign_dtype.assign": {
  "lineno": 1949,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_flat": {
  "lineno": 1908,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_hardmask": {
  "lineno": 1804,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.filled",
   "numpy.ma.core.make_mask",
   "numpy.ma.core.masked",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_hardmask_again": {
  "lineno": 1859,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.make_mask",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_hardmask_oncemore_yay": {
  "lineno": 1869,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_keepmask": {
  "lineno": 1791,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_shrink_mask": {
  "lineno": 1895,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.core.array",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_smallmask": {
  "lineno": 1883,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.masked",
   "numpy.ma.core.nomask",
   "numpy.ma.core.zeros",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions": {
  "lineno": 3987,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.setup": {
  "lineno": 3990,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.masked_array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_choose": {
  "lineno": 4334,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.choose",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_choose_with_out": {
  "lineno": 4357,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.choose",
   "numpy.ma.core.empty",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_compress": {
  "lineno": 4557,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.array",
   "numpy.ma.compress",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_compressed": {
  "lineno": 4570,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.compressed",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_compressed.A": {
  "lineno": 4578,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_compressed.M": {
  "lineno": 4599,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray"
  ],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_compressed.M.compressed": {
  "lineno": 4600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_convolve": {
  "lineno": 4606,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.convolve",
   "numpy.ma.core.masked_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_flatten_mask": {
  "lineno": 4530,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.flatten_mask",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_identity": {
  "lineno": 4148,
  "symbols_in_volume": [
   "numpy.identity",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.identity",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_make_mask": {
  "lineno": 4451,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.ma.core.MaskType",
   "numpy.ma.core.make_mask",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.void"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_make_mask_descr": {
  "lineno": 4405,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.core.make_mask_descr",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_mask_or": {
  "lineno": 4499,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.mask_or",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_equal_fill_value": {
  "lineno": 4015,
  "symbols_in_volume": [
   "numpy.ma.core.masked_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_equal_wlist": {
  "lineno": 4006,
  "symbols_in_volume": [
   "numpy.ma.core.masked_equal",
   "numpy.ma.core.masked_not_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_otherfunctions": {
  "lineno": 4066,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked_equal",
   "numpy.ma.core.masked_inside",
   "numpy.ma.core.masked_not_equal",
   "numpy.ma.core.masked_outside",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_where_bool": {
  "lineno": 4000,
  "symbols_in_volume": [
   "numpy.ma.core.masked_where",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_where_condition": {
  "lineno": 4021,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.equal",
   "numpy.ma.core.greater",
   "numpy.ma.core.greater_equal",
   "numpy.ma.core.less",
   "numpy.ma.core.less_equal",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_equal",
   "numpy.ma.core.masked_greater",
   "numpy.ma.core.masked_greater_equal",
   "numpy.ma.core.masked_less",
   "numpy.ma.core.masked_less_equal",
   "numpy.ma.core.masked_not_equal",
   "numpy.ma.core.masked_where",
   "numpy.ma.core.not_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_where_mismatch": {
  "lineno": 4060,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.masked_where",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_where_oddities": {
  "lineno": 4037,
  "symbols_in_volume": [
   "numpy.ma.core.MaskType",
   "numpy.ma.core.masked_where",
   "numpy.ma.core.ones",
   "numpy.ma.core.zeros",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_where_shape_constraint": {
  "lineno": 4044,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.masked_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_where_structured": {
  "lineno": 4051,
  "symbols_in_volume": [
   "numpy.ma.masked_array",
   "numpy.ma.masked_where",
   "numpy.ma.testutils.assert_equal",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_on_ndarray": {
  "lineno": 4548,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.anom",
   "numpy.ma.core.array",
   "numpy.ma.core.reshape",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_power": {
  "lineno": 4153,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.nomask",
   "numpy.ma.core.power",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_power_with_broadcasting": {
  "lineno": 4174,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_reshape": {
  "lineno": 4379,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.arange",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_round": {
  "lineno": 4083,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.empty_like",
   "numpy.ma.core.masked",
   "numpy.ma.core.where",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_round_with_output": {
  "lineno": 4105,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ma.core.array",
   "numpy.ma.core.empty",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.random.uniform",
   "numpy.round"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_round_with_scalar": {
  "lineno": 4123,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where": {
  "lineno": 4206,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.where",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where_broadcast": {
  "lineno": 4302,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.where",
   "numpy.ma.testutils.assert_equal",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where_object": {
  "lineno": 4236,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.where"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where_structured": {
  "lineno": 4312,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ma.testutils.assert_equal",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where_structured_masked": {
  "lineno": 4323,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_where",
   "numpy.ma.core.where",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where_type": {
  "lineno": 4294,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.find_common_type",
   "numpy.float32",
   "numpy.int32",
   "numpy.ma.core.where",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where_with_masked_choice": {
  "lineno": 4243,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.masked",
   "numpy.ma.core.where",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where_with_masked_condition": {
  "lineno": 4265,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.getmask",
   "numpy.ma.core.masked",
   "numpy.ma.core.nomask",
   "numpy.ma.core.where",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics": {
  "lineno": 2447,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.setup": {
  "lineno": 2450,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.core.arange",
   "numpy.ma.core.masked",
   "numpy.typecodes",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_add": {
  "lineno": 2583,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_add_arrays": {
  "lineno": 2686,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_div": {
  "lineno": 2651,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_mul": {
  "lineno": 2628,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_mul_arrays": {
  "lineno": 2714,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_pow": {
  "lineno": 2674,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_sub": {
  "lineno": 2605,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_sub_arrays": {
  "lineno": 2700,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_addition_array": {
  "lineno": 2480,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.ma.core.arange",
   "numpy.ma.core.mask_or",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_addition_array_type": {
  "lineno": 2742,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.mask_or",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_addition_scalar": {
  "lineno": 2465,
  "symbols_in_volume": [
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_addition_scalar_type": {
  "lineno": 2728,
  "symbols_in_volume": [
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_division_array_float": {
  "lineno": 2551,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.mask_or",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_division_array_type": {
  "lineno": 2891,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.ma.core.arange",
   "numpy.ma.core.mask_or",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.suppress_warnings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_division_misc": {
  "lineno": 2563,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_division_scalar_float": {
  "lineno": 2543,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.ones",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_division_scalar_int": {
  "lineno": 2532,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_division_scalar_type": {
  "lineno": 2855,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.ma.core.arange",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.suppress_warnings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_floor_division_array_type": {
  "lineno": 2835,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.mask_or",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_floor_division_scalar_type": {
  "lineno": 2819,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_multiplication_array": {
  "lineno": 2520,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.mask_or",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_multiplication_array_type": {
  "lineno": 2802,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.mask_or",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_multiplication_scalar": {
  "lineno": 2512,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_multiplication_scalar_type": {
  "lineno": 2789,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_pow_type": {
  "lineno": 2930,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_subtraction_array": {
  "lineno": 2500,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.mask_or",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_subtraction_array_type": {
  "lineno": 2772,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.mask_or",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_subtraction_scalar": {
  "lineno": 2492,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_subtraction_scalar_type": {
  "lineno": 2759,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods": {
  "lineno": 3656,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.setup": {
  "lineno": 3658,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_add_object": {
  "lineno": 3738,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_axis_methods_nomask": {
  "lineno": 3913,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_cumsumprod": {
  "lineno": 3690,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_cumsumprod_with_output": {
  "lineno": 3703,
  "symbols_in_volume": [
   "numpy",
   "numpy.empty",
   "numpy.ma.core.array",
   "numpy.ma.core.empty",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_diag": {
  "lineno": 3899,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.diag",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_dot": {
  "lineno": 3779,
  "symbols_in_volume": [
   "numpy.ma.core.empty_like",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_dot_shape_mismatch": {
  "lineno": 3803,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_meananom_object": {
  "lineno": 3758,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_prod_object": {
  "lineno": 3751,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_ptp": {
  "lineno": 3724,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_sum_object": {
  "lineno": 3744,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_trace": {
  "lineno": 3764,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.sum",
   "numpy.ma.masked_array",
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.trace"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_varmean_nomask": {
  "lineno": 3812,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool_",
   "numpy.float64",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.core.empty",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_varstd": {
  "lineno": 3828,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_varstd_ddof": {
  "lineno": 3887,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_varstd_specialcases": {
  "lineno": 3850,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "pytest.mark.skipif",
   "sys.platform",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethodsComplex": {
  "lineno": 3934,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethodsComplex.setup": {
  "lineno": 3936,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethodsComplex.test_varstd": {
  "lineno": 3968,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods": {
  "lineno": 2949,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.setup": {
  "lineno": 2951,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_allany": {
  "lineno": 3025,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_allany_oddities": {
  "lineno": 3051,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.empty",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_allclose": {
  "lineno": 3001,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.inf",
   "numpy.int_",
   "numpy.ma.core.allclose",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_argmax_argmin": {
  "lineno": 3069,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_argsort": {
  "lineno": 3419,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.ma.core.argsort",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_argsort_matches_sort": {
  "lineno": 3333,
  "symbols_in_volume": [
   "numpy.ma.core.argsort",
   "numpy.ma.core.array",
   "numpy.ma.core.sort",
   "numpy.ma.testutils.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_arraymethod": {
  "lineno": 3618,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray.cumsum",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_arraymethod_0d": {
  "lineno": 3628,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_clip": {
  "lineno": 3092,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_clip_out": {
  "lineno": 3109,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.MaskedArray",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_compress": {
  "lineno": 3116,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_compressed": {
  "lineno": 3147,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_diagonal_view": {
  "lineno": 3645,
  "symbols_in_volume": [
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_empty": {
  "lineno": 3156,
  "symbols_in_volume": [
   "numpy.ma.core.empty",
   "numpy.ma.core.empty_like",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.may_share_memory"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_fromflex": {
  "lineno": 3600,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.fromflex",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_generic_methods": {
  "lineno": 2983,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_put": {
  "lineno": 3178,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.asarray",
   "numpy.ma.core.make_mask",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.put",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_put_hardmask": {
  "lineno": 3223,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.make_mask",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_put_nomask": {
  "lineno": 3209,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.zeros",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_putmask": {
  "lineno": 3232,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.putmask",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_ravel": {
  "lineno": 3262,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_reshape": {
  "lineno": 3284,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_sort": {
  "lineno": 3294,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.core.nomask",
   "numpy.ma.core.sort",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_sort_2d": {
  "lineno": 3347,
  "symbols_in_volume": [
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_sort_flexible": {
  "lineno": 3387,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.core.array",
   "numpy.ma.core.sort",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_squeeze": {
  "lineno": 3424,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_stable_sort": {
  "lineno": 3327,
  "symbols_in_volume": [
   "numpy.ma.core.argsort",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_swapaxes": {
  "lineno": 3447,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_take": {
  "lineno": 3470,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.take",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_take_masked_indices": {
  "lineno": 3488,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.take",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_toflex": {
  "lineno": 3568,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_tolist": {
  "lineno": 3518,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_tolist_specialcase": {
  "lineno": 3554,
  "symbols_in_volume": [
   "numpy.generic",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_transpose_view": {
  "lineno": 3634,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant": {
  "lineno": 5001,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant._do_add_test": {
  "lineno": 5002,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.MaskedConstant",
   "numpy.ma.core.add",
   "numpy.ma.getmask",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test__copy": {
  "lineno": 5056,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_attributes_readonly": {
  "lineno": 5108,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.ma.masked",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_coercion_bytes": {
  "lineno": 5093,
  "symbols_in_volume": [
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.zeros",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_coercion_float": {
  "lineno": 5082,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_",
   "numpy.testing.assert_warns",
   "numpy.zeros",
   "operator.setitem"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_coercion_int": {
  "lineno": 5077,
  "symbols_in_volume": [
   "numpy.ma.core.MaskError",
   "numpy.ma.masked",
   "numpy.testing.assert_raises",
   "numpy.zeros",
   "operator.setitem"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_coercion_unicode": {
  "lineno": 5087,
  "symbols_in_volume": [
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.zeros",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_copy": {
  "lineno": 5049,
  "symbols_in_volume": [
   "numpy.True_",
   "numpy.True_.copy",
   "numpy.ma.masked",
   "numpy.ma.masked.copy",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_ctor": {
  "lineno": 5022,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.core.MaskedConstant",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_deepcopy": {
  "lineno": 5061,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_immutable": {
  "lineno": 5066,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.ma.core.MaskError",
   "numpy.ma.masked",
   "numpy.ma.masked.view",
   "numpy.testing.assert_raises",
   "operator.setitem"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_operator": {
  "lineno": 5019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_pickle": {
  "lineno": 5039,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dump",
   "numpy.compat.pickle.load",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_repr": {
  "lineno": 5030,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray.__new__",
   "numpy.ma.core.MaskedConstant",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_not_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_subclass": {
  "lineno": 5099,
  "symbols_in_volume": [
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_not_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_subclass.Sub": {
  "lineno": 5101,
  "symbols_in_volume": [
   "numpy.ma.masked"
  ],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedConstant.test_ufunc": {
  "lineno": 5016,
  "symbols_in_volume": [
   "numpy.add"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields": {
  "lineno": 4626,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.setup": {
  "lineno": 4628,
  "symbols_in_volume": [
   "numpy.ma.core.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_element_len": {
  "lineno": 4782,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_getitem": {
  "lineno": 4725,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_getitem._test_index": {
  "lineno": 4732,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.mvoid",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_getmaskarray": {
  "lineno": 4697,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.empty",
   "numpy.ma.core.getmaskarray",
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_mask_element": {
  "lineno": 4688,
  "symbols_in_volume": [
   "numpy.ma.core.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_set_record_element": {
  "lineno": 4657,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_set_record_slice": {
  "lineno": 4673,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_set_records_masks": {
  "lineno": 4638,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.nomask",
   "numpy.ma.testutils.assert_equal_records",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_setitem": {
  "lineno": 4745,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ma.MaskedArray",
   "numpy.ma.masked_all",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_setitem_scalar": {
  "lineno": 4775,
  "symbols_in_volume": [
   "numpy.ma.arange",
   "numpy.ma.masked_array",
   "numpy.ma.testutils.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_view": {
  "lineno": 4709,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedObjectArray": {
  "lineno": 4788,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedObjectArray.test_getitem": {
  "lineno": 4790,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.ma.array",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedObjectArray.test_nested_ma": {
  "lineno": 4819,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.array",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView": {
  "lineno": 4836,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedView.setup": {
  "lineno": 4838,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_dtype_and_type": {
  "lineno": 4905,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.recarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_flexible_dtype": {
  "lineno": 4868,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_nothing": {
  "lineno": 4846,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_simple_dtype": {
  "lineno": 4860,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_subdtype": {
  "lineno": 4888,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_type": {
  "lineno": 4853,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedWhereAliases": {
  "lineno": 5113,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedWhereAliases.test_masked_values": {
  "lineno": 5117,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.int16",
   "numpy.ma.core.masked_values",
   "numpy.ma.masked_values",
   "numpy.ma.nomask",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestOptionalArgs": {
  "lineno": 4914,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestOptionalArgs.test_count": {
  "lineno": 4962,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.ma.array",
   "numpy.ma.core.count",
   "numpy.ma.core.nomask",
   "numpy.ma.core.ones",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal",
   "numpy.ndim",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestOptionalArgs.test_ndarrayfuncs": {
  "lineno": 4915,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestOptionalArgs.test_ndarrayfuncs.testaxis": {
  "lineno": 4924,
  "symbols_in_volume": [
   "numpy.__getattribute__",
   "numpy.ma.__getattribute__",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestOptionalArgs.test_ndarrayfuncs.testkeepdims": {
  "lineno": 4933,
  "symbols_in_volume": [
   "numpy.__getattribute__",
   "numpy.ma.__getattribute__",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs": {
  "lineno": 2303,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestUfuncs.setup": {
  "lineno": 2306,
  "symbols_in_volume": [
   "numpy.geterr",
   "numpy.ma.core.array",
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.teardown": {
  "lineno": 2313,
  "symbols_in_volume": [
   "numpy.seterr"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_minmax": {
  "lineno": 2355,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.masked_where",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_ndarray_mask": {
  "lineno": 2366,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_no_masked_nan_warnings": {
  "lineno": 2419,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.core.add",
   "numpy.ma.core.allclose",
   "numpy.ma.core.arccos",
   "numpy.ma.core.arccosh",
   "numpy.ma.core.arcsin",
   "numpy.ma.core.divide",
   "numpy.ma.core.exp",
   "numpy.ma.core.log",
   "numpy.ma.core.sqrt",
   "numpy.ma.core.tan",
   "numpy.nan",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_reduce": {
  "lineno": 2346,
  "symbols_in_volume": [
   "numpy.ma.core.add.reduce",
   "numpy.ma.core.alltrue",
   "numpy.ma.core.product",
   "numpy.ma.core.sometrue",
   "numpy.ma.core.sum",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_testUfuncRegression": {
  "lineno": 2316,
  "symbols_in_volume": [
   "numpy.core.fromnumeric",
   "numpy.core.umath",
   "numpy.ma.core",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_mask_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_treatment_of_NotImplemented": {
  "lineno": 2376,
  "symbols_in_volume": [
   "numpy.ma.core.all",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.multiply.outer",
   "numpy.ma.testutils.assert_",
   "numpy.testing.assert_raises",
   "operator.mul",
   "operator.truediv"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_treatment_of_NotImplemented.MyClass": {
  "lineno": 2383,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_treatment_of_NotImplemented.MyClass.__mul__": {
  "lineno": 2386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_treatment_of_NotImplemented.MyClass.__rmul__": {
  "lineno": 2389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_treatment_of_NotImplemented.MyClass2": {
  "lineno": 2397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_treatment_of_NotImplemented.MyClass2.__mul__": {
  "lineno": 2400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_treatment_of_NotImplemented.MyClass2.__rdiv__": {
  "lineno": 2406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_treatment_of_NotImplemented.MyClass2.__rmul__": {
  "lineno": 2403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_core.test_append_masked_array": {
  "lineno": 5138,
  "symbols_in_volume": [
   "numpy.ma.append",
   "numpy.ma.masked_all",
   "numpy.ma.masked_equal",
   "numpy.ma.ones",
   "numpy.ma.testutils.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.test_append_masked_array_along_axis": {
  "lineno": 5162,
  "symbols_in_volume": [
   "numpy.ma.append",
   "numpy.ma.arange",
   "numpy.ma.masked",
   "numpy.ma.masked_equal",
   "numpy.ma.masked_values",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.newaxis",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.test_astype_basic": {
  "lineno": 5247,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.core.ones",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.test_astype_mask_ordering": {
  "lineno": 5215,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ma.core.array",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.test_default_fill_value_complex": {
  "lineno": 5177,
  "symbols_in_volume": [
   "numpy.ma.core.default_fill_value",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.test_fieldless_void": {
  "lineno": 5266,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.test_mask_shape_assignment_does_not_break_masked": {
  "lineno": 5281,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.test_masked_array": {
  "lineno": 5134,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.ma.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.test_ufunc_with_out_varied": {
  "lineno": 5190,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_core.test_ufunc_with_output": {
  "lineno": 5182,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.ma.core.array",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.ma.tests.test_deprecations.TestArgsort": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_deprecations.TestArgsort._test_base": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.MaskedArrayFutureWarning",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestArgsort.test_function_maskedarray": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.ma.argsort"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestArgsort.test_function_ndarray": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.ma.argsort",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestArgsort.test_method": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.ma.MaskedArray.argsort"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestMinimumMaximum": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_deprecations.TestMinimumMaximum.test_axis_default": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.ma.arange",
   "numpy.ma.core.MaskedArrayFutureWarning",
   "numpy.ma.maximum.reduce",
   "numpy.ma.minimum.reduce",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestMinimumMaximum.test_maximum": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.maximum",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestMinimumMaximum.test_minimum": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.minimum",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d": {
  "lineno": 677,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.extras.apply_along_axis",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d.myfunc": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d_kwargs": {
  "lineno": 687,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.extras.apply_along_axis",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d_kwargs.myfunc": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyOverAxes": {
  "lineno": 697,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestApplyOverAxes.test_basic": {
  "lineno": 699,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.arange",
   "numpy.ma.core.masked",
   "numpy.ma.extras.apply_over_axes",
   "numpy.ma.testutils.assert_equal",
   "numpy.sum"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps": {
  "lineno": 1321,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d": {
  "lineno": 1363,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.ediff1d",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_ndarray": {
  "lineno": 1418,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.extras.ediff1d",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_tobegin": {
  "lineno": 1372,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.ediff1d",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_tobegin_toend": {
  "lineno": 1402,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.ediff1d",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_toend": {
  "lineno": 1387,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.ediff1d",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_in1d": {
  "lineno": 1489,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.extras.in1d",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_in1d_invert": {
  "lineno": 1503,
  "symbols_in_volume": [
   "numpy.invert",
   "numpy.ma.core.array",
   "numpy.ma.extras.in1d",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_intersect1d": {
  "lineno": 1434,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.extras.intersect1d",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_isin": {
  "lineno": 1468,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.isin",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.core.zeros",
   "numpy.ma.extras.isin",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setdiff1d": {
  "lineno": 1533,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.extras.setdiff1d",
   "numpy.ma.testutils.assert_equal",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setdiff1d_char_array": {
  "lineno": 1546,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.extras.setdiff1d",
   "numpy.ma.testutils.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setxor1d": {
  "lineno": 1442,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.extras.setxor1d",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_union1d": {
  "lineno": 1515,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.extras.union1d",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_allmasked": {
  "lineno": 1348,
  "symbols_in_volume": [
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.unique",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_onlist": {
  "lineno": 1323,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.unique",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_onmaskedarray": {
  "lineno": 1332,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.unique",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_complex": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.average",
   "numpy.ma.testutils.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_onintegers_with_mask": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.extras.average",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage1": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.extras.average",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage2": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.arange",
   "numpy.float_",
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.count",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.ones",
   "numpy.ma.core.zeros",
   "numpy.ma.extras.average",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage3": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.ones",
   "numpy.ma.core.shape",
   "numpy.ma.extras.average",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_compress_nd": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.core.array",
   "numpy.ma.extras.compress_nd",
   "numpy.ma.testutils.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_compress_rowcols": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.array",
   "numpy.ma.extras.compress_rowcols",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_dot": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.nomask",
   "numpy.ma.extras.dot",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_dot_out": {
  "lineno": 667,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.ma.core.array",
   "numpy.ma.extras.dot",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_dot_returns_maskedarray": {
  "lineno": 658,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.extras.dot",
   "numpy.ma.testutils.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_mask_row_cols_axis_deprecation": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.array",
   "numpy.ma.extras.mask_rowcols",
   "numpy.ma.mask_cols",
   "numpy.ma.mask_rows",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_warns",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_mask_rowcols": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked",
   "numpy.ma.extras.mask_rowcols",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestConcatenator": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_1d": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.ones",
   "numpy.ma.extras.mr_",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_2d": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.mr_",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.r_",
   "numpy.random.rand",
   "numpy.round_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_masked_constant": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.ma.extras.mr_",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef": {
  "lineno": 1156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.setup": {
  "lineno": 1158,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_1d_with_missing": {
  "lineno": 1213,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "numpy.ma.core.masked",
   "numpy.ma.extras.corrcoef",
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_1d_without_missing": {
  "lineno": 1191,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "numpy.ma.extras.corrcoef",
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_2d_with_missing": {
  "lineno": 1243,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "numpy.ma.core.masked",
   "numpy.ma.extras.corrcoef",
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_2d_without_missing": {
  "lineno": 1202,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "numpy.ma.extras.corrcoef",
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_bias": {
  "lineno": 1178,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "numpy.ma.extras.corrcoef",
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.testing.assert_warns",
   "numpy.testing.suppress_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_ddof": {
  "lineno": 1162,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "numpy.ma.extras.corrcoef",
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.testing.assert_warns",
   "numpy.testing.suppress_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov": {
  "lineno": 1089,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestCov.setup": {
  "lineno": 1091,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_1d_with_missing": {
  "lineno": 1110,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.ma.core.masked",
   "numpy.ma.extras.cov",
   "numpy.ma.testutils.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_1d_without_missing": {
  "lineno": 1094,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.ma.extras.cov",
   "numpy.ma.testutils.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_2d_with_missing": {
  "lineno": 1134,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.dot",
   "numpy.logical_not",
   "numpy.ma.core.getmaskarray",
   "numpy.ma.core.masked",
   "numpy.ma.extras.cov",
   "numpy.ma.testutils.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_2d_without_missing": {
  "lineno": 1102,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.ma.extras.cov",
   "numpy.ma.testutils.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestGeneric.check_clump": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.full",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.clump_unmasked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_clump_masked": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.clump_masked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_clump_unmasked": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.clump_unmasked",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_flatnotmasked_contiguous": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.ma.core.arange",
   "numpy.ma.core.masked",
   "numpy.ma.extras.flatnotmasked_contiguous",
   "numpy.ma.testutils.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_masked_all": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.core.array",
   "numpy.ma.extras.masked_all",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_masked_all_like": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.core.array",
   "numpy.ma.extras.masked_all_like",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_masked_all_with_object": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.masked_all",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_masked_all_with_object_nested": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.masked_all",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_1d_shape_consistency": {
  "lineno": 838,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_2d": {
  "lineno": 842,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.linspace",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.median",
   "numpy.ma.testutils.assert_equal",
   "numpy.random.shuffle",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_2d_waxis": {
  "lineno": 858,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.median",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_3d": {
  "lineno": 870,
  "symbols_in_volume": [
   "numpy.ma.arange",
   "numpy.ma.core.masked",
   "numpy.ma.extras.median",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_ambigous_fill": {
  "lineno": 1001,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.masked_array",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_axis_argument_errors": {
  "lineno": 769,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.AxisError",
   "numpy.ma.core.array",
   "numpy.ma.median"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_docstring_examples": {
  "lineno": 754,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.array",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_empty": {
  "lineno": 1053,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.masked_array",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.nan",
   "numpy.testing.suppress_warnings",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_inf": {
  "lineno": 715,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.ma.masked_array",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_masked_0d": {
  "lineno": 793,
  "symbols_in_volume": [
   "numpy.ma.core.array",
   "numpy.ma.masked",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_masked_1d": {
  "lineno": 800,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.MaskedConstant",
   "numpy.ma.core.array",
   "numpy.ma.masked",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_nan": {
  "lineno": 926,
  "symbols_in_volume": [
   "numpy.isscalar",
   "numpy.ma.array",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.masked",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.nan",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_nan_behavior": {
  "lineno": 966,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.isscalar",
   "numpy.ma.masked",
   "numpy.ma.masked_array",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_neg_axis": {
  "lineno": 881,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.median",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_non_masked": {
  "lineno": 733,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.median"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_object": {
  "lineno": 1082,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.masked_array",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_out": {
  "lineno": 900,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.median",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_out_1d": {
  "lineno": 886,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.median",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_out_nan": {
  "lineno": 955,
  "symbols_in_volume": [
   "numpy.ma.masked",
   "numpy.ma.masked_array",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_equal",
   "numpy.nan",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_pytype": {
  "lineno": 711,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_single_non_masked_value_on_axis": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.ma.masked_equal",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_special": {
  "lineno": 1010,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.inf",
   "numpy.isnan",
   "numpy.ma.masked_array",
   "numpy.ma.median",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestNotMasked": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestNotMasked.test_contiguous": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.notmasked_contiguous",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestNotMasked.test_edges": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.notmasked_edges",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestPolynomial": {
  "lineno": 1263,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestPolynomial.test_polyfit": {
  "lineno": 1265,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.masked",
   "numpy.ma.extras.polyfit",
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.polyfit",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestPolynomial.test_polyfit_with_masked_NaNs": {
  "lineno": 1304,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.masked",
   "numpy.ma.extras.polyfit",
   "numpy.ma.testutils.assert_almost_equal",
   "numpy.nan",
   "numpy.polyfit",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestShapeBase": {
  "lineno": 1553,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestShapeBase.test_atleast_2d": {
  "lineno": 1555,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.atleast_2d",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestShapeBase.test_shape_scalar": {
  "lineno": 1565,
  "symbols_in_volume": [
   "numpy.ma.extras.atleast_1d",
   "numpy.ma.extras.atleast_2d",
   "numpy.ma.extras.atleast_3d",
   "numpy.ma.extras.diagflat",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestStack": {
  "lineno": 1609,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestStack.test_stack_1d": {
  "lineno": 1611,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.stack",
   "numpy.ma.extras.vstack",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestStack.test_stack_masks": {
  "lineno": 1629,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.stack",
   "numpy.ma.extras.vstack",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestStack.test_stack_nd": {
  "lineno": 1647,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.extras.stack",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.ma.array"
  ],
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_byview": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records",
   "numpy.recarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_exotic_formats": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.masked",
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_filled": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.array",
   "numpy.ma.mrecords.fromarrays",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_get": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.masked",
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.nomask",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_hardmask": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.ma.make_mask",
   "numpy.ma.make_mask_none",
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.nomask",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_pickling": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_elements": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.masked",
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_fields": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.array",
   "numpy.ma.getdata",
   "numpy.ma.getmaskarray",
   "numpy.ma.masked",
   "numpy.ma.mrecords.MaskedRecords",
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_fields_mask": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.masked",
   "numpy.ma.mrecords.fromarrays",
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.testutils.assert_equal",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.getmaskarray",
   "numpy.ma.masked",
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.nomask",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask_fromarray": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask_fromfields": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_setslices_hardmask": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_tolist": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.mrecords.fromarrays",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_withnames": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.ma.mrecords.mrecarray",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.core.records.fromarrays",
   "numpy.ma.array",
   "numpy.ma.mrecords.fromarrays"
  ],
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_addfield": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.mrecords.addfield",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromarrays": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.mrecords.fromarrays",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromrecords": {
  "lineno": 411,
  "symbols_in_volume": [
   "numpy.core.records.fromrecords",
   "numpy.ma.mrecords.fromrecords",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromrecords_wmask": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.ma.mrecords.fromrecords",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromtextfile": {
  "lineno": 458,
  "symbols_in_volume": [
   "numpy.ma.mrecords.MaskedRecords",
   "numpy.ma.mrecords.fromtextfile",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.temppath"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestView.setup": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.mrecords.fromarrays",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_by_itself": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.ma.mrecords.MaskedRecords",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal_records"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_flexible_type": {
  "lineno": 375,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ma.masked",
   "numpy.ma.mrecords.MaskedRecords",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.ma.testutils.assert_equal_records"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_simple_dtype": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.MaskedArray",
   "numpy.ma.masked",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.test_record_array_with_object_field": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.ma.masked_array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "module"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.setup": {
  "lineno": 768,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_clip": {
  "lineno": 798,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_cumprod": {
  "lineno": 825,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_cumsum": {
  "lineno": 832,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_ptp": {
  "lineno": 805,
  "symbols_in_volume": [
   "numpy.float_",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_swapaxes": {
  "lineno": 818,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_trace": {
  "lineno": 790,
  "symbols_in_volume": [
   "numpy.ma.sum",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_varstd": {
  "lineno": 839,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_old_ma.TestMa.setup": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.array",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAPI": {
  "lineno": 688,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAddSumProd": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.add.accumulate",
   "numpy.add.reduce",
   "numpy.concatenate",
   "numpy.ma.add.accumulate",
   "numpy.ma.add.reduce",
   "numpy.ma.array",
   "numpy.ma.concatenate",
   "numpy.ma.filled",
   "numpy.ma.product",
   "numpy.ma.sum",
   "numpy.product",
   "numpy.sum",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testArithmetic": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.divide",
   "numpy.errstate",
   "numpy.ma.add",
   "numpy.ma.array",
   "numpy.ma.divide",
   "numpy.ma.masked_array",
   "numpy.ma.multiply",
   "numpy.ma.subtract",
   "numpy.multiply",
   "numpy.subtract",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testArrayAttributes": {
  "lineno": 684,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testArrayMethods": {
  "lineno": 667,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAverage1": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.average",
   "numpy.ma.masked",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAverage2": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.arange",
   "numpy.ma.allclose",
   "numpy.ma.arange",
   "numpy.ma.array",
   "numpy.ma.average",
   "numpy.ma.count",
   "numpy.ma.masked",
   "numpy.ma.masked_array",
   "numpy.ma.ones",
   "numpy.ma.shape",
   "numpy.ma.zeros",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testBasic1d": {
  "lineno": 51,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.ma.count",
   "numpy.ma.filled",
   "numpy.ma.isMaskedArray",
   "numpy.ma.shape",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testBasic2d": {
  "lineno": 65,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.ma.count",
   "numpy.ma.filled",
   "numpy.ma.isMaskedArray",
   "numpy.ma.shape",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testCI": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.MaskType",
   "numpy.ma.allequal",
   "numpy.ma.array",
   "numpy.ma.getmask",
   "numpy.ma.masked",
   "numpy.ma.masked_array",
   "numpy.ma.masked_values",
   "numpy.ma.sort",
   "numpy.sort",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testCopySize": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.allequal",
   "numpy.ma.arange",
   "numpy.ma.array",
   "numpy.ma.concatenate",
   "numpy.ma.filled",
   "numpy.ma.getmask",
   "numpy.ma.make_mask",
   "numpy.ma.masked",
   "numpy.ma.repeat",
   "numpy.ma.resize",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testInplace": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ma.arange",
   "numpy.ma.masked",
   "numpy.ma.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMaPut": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.ma.all",
   "numpy.ma.put",
   "numpy.ma.take",
   "numpy.nonzero",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMasked": {
  "lineno": 558,
  "symbols_in_volume": [
   "numpy.ma.arange",
   "numpy.ma.filled",
   "numpy.ma.masked",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMinMax": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.ma.maximum.reduce",
   "numpy.ma.minimum.reduce",
   "numpy.ma.ravel",
   "numpy.ravel",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMinMax2": {
  "lineno": 465,
  "symbols_in_volume": [
   "numpy.ma.arange",
   "numpy.ma.greater",
   "numpy.ma.less",
   "numpy.ma.masked",
   "numpy.ma.maximum",
   "numpy.ma.maximum.reduce",
   "numpy.ma.minimum",
   "numpy.ma.minimum.reduce",
   "numpy.ma.where",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMixedArithmetic": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.MaskedArray",
   "numpy.ma.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testOddFeatures": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ma.MaskType",
   "numpy.ma.arange",
   "numpy.ma.array",
   "numpy.ma.choose",
   "numpy.ma.conjugate",
   "numpy.ma.count",
   "numpy.ma.equal",
   "numpy.ma.getmask",
   "numpy.ma.greater",
   "numpy.ma.greater_equal",
   "numpy.ma.less",
   "numpy.ma.less_equal",
   "numpy.ma.masked",
   "numpy.ma.masked_equal",
   "numpy.ma.masked_greater",
   "numpy.ma.masked_greater_equal",
   "numpy.ma.masked_inside",
   "numpy.ma.masked_less",
   "numpy.ma.masked_less_equal",
   "numpy.ma.masked_not_equal",
   "numpy.ma.masked_outside",
   "numpy.ma.masked_where",
   "numpy.ma.nomask",
   "numpy.ma.not_equal",
   "numpy.ma.ones",
   "numpy.ma.shape",
   "numpy.ma.where",
   "numpy.ma.zeros",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testPickle": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.ma.arange",
   "numpy.ma.masked",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testPut": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.ma.arange",
   "numpy.ma.array",
   "numpy.ma.make_mask",
   "numpy.ma.masked",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testPut2": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.ma.arange",
   "numpy.ma.array",
   "numpy.ma.masked",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testScalarArithmetic": {
  "lineno": 652,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.ma.array",
   "numpy.ma.masked_print_option",
   "numpy.ma.maximum",
   "numpy.ma.minimum",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testSingleElementSubscript": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testTakeTransposeInnerOuter": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inner",
   "numpy.ma.arange",
   "numpy.ma.array",
   "numpy.ma.filled",
   "numpy.ma.inner",
   "numpy.ma.masked",
   "numpy.ma.outer",
   "numpy.ma.take",
   "numpy.ma.transpose",
   "numpy.outer",
   "numpy.take",
   "numpy.testing.assert_",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testToPython": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testUfuncs1": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.arccos",
   "numpy.arcsin",
   "numpy.arctan",
   "numpy.arctan2",
   "numpy.concatenate",
   "numpy.conjugate",
   "numpy.cos",
   "numpy.cosh",
   "numpy.equal",
   "numpy.errstate",
   "numpy.exp",
   "numpy.greater",
   "numpy.greater_equal",
   "numpy.less",
   "numpy.less_equal",
   "numpy.log",
   "numpy.log10",
   "numpy.ma.absolute",
   "numpy.ma.arccos",
   "numpy.ma.arcsin",
   "numpy.ma.arctan",
   "numpy.ma.arctan2",
   "numpy.ma.concatenate",
   "numpy.ma.conjugate",
   "numpy.ma.cos",
   "numpy.ma.cosh",
   "numpy.ma.equal",
   "numpy.ma.exp",
   "numpy.ma.greater",
   "numpy.ma.greater_equal",
   "numpy.ma.less",
   "numpy.ma.less_equal",
   "numpy.ma.log",
   "numpy.ma.log10",
   "numpy.ma.not_equal",
   "numpy.ma.sin",
   "numpy.ma.sinh",
   "numpy.ma.sqrt",
   "numpy.ma.tan",
   "numpy.ma.tanh",
   "numpy.not_equal",
   "numpy.sin",
   "numpy.sinh",
   "numpy.sqrt",
   "numpy.tan",
   "numpy.tanh",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_xtestCount": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.intp",
   "numpy.ma.array",
   "numpy.ma.count",
   "numpy.ma.getmask",
   "numpy.ma.nomask",
   "numpy.ndarray",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.setup": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.ma.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_minmax": {
  "lineno": 750,
  "symbols_in_volume": [
   "numpy.ma.arange",
   "numpy.ma.masked_where",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_nonzero": {
  "lineno": 760,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.nonzero",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_reduce": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.ma.alltrue",
   "numpy.ma.product",
   "numpy.ma.sometrue",
   "numpy.ma.sum",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_testUfuncRegression": {
  "lineno": 706,
  "symbols_in_volume": [
   "numpy.core.fromnumeric",
   "numpy.core.umath",
   "numpy.errstate",
   "numpy.ma",
   "numpy.seterr",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.eq": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.ma.allclose"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.eqmask": {
  "lineno": 853,
  "symbols_in_volume": [
   "numpy.ma.nomask"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.ma.tests.test_regression.TestRegression": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_atleast_2d": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.ma.masked_array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_ddof_corrcoef": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.corrcoef",
   "numpy.ma.masked_equal",
   "numpy.testing.assert_allclose",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_empty_list_on_structured": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_mask_not_backmangled": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.testing.assert_",
   "numpy.tile"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.ma.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_create": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.ma.masked_array",
   "numpy.ma.nonzero",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_multiply": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.ma.masked",
   "numpy.ma.zeros",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_repeat": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.ma.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_repr_unicode": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.ma.array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_tobytes_fortran": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.ma.arange",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_mem_masked_where": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.ma.MaskType",
   "numpy.ma.masked_where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_set_fill_value_unicode_py3": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.ma.masked_array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_var_sets_maskedarray_scalar": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator.__getitem__": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator.__init__": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator.__iter__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator.__next__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator.__setitem__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.__array_wrap__": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.multiply"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.__getitem__": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.__repr__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.__setitem__": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.__str__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray._validate_input": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.flat": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MSubArray": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray"
  ],
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.MSubArray.__new__": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray.__new__",
   "numpy.ma.core.nomask"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MSubArray._series": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__add__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__array_finalize__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__iadd__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__new__": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubMaskedArray": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray"
  ],
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.SubMaskedArray.__new__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.setup": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_attributepropagation": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.arange",
   "numpy.ma.core.array",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_data_subclassing": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_binary_operations": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.ma.core.add",
   "numpy.ma.core.add.outer",
   "numpy.ma.core.hypot",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_binary_operations2": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.ma.core.divide",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_unary_operations": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.log",
   "numpy.ma.core.log",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_maskedarray_subclassing": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_pure_subclass_info_preservation": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.subtract",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclass_items": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclass_nomask_items": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.masked_array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclass_repr": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.masked_array"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclass_str": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.masked_print_option",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclasspreservation": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.asanyarray",
   "numpy.ma.core.asarray",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.assert_startswith": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.ma.testutils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.ma.testutils._assert_equal_on_sequences": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.testutils.almost": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.around",
   "numpy.equal",
   "numpy.float_"
  ],
  "type": "function"
 },
 "numpy.ma.testutils.approx": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.core.umath.absolute",
   "numpy.equal",
   "numpy.float_",
   "numpy.less_equal"
  ],
  "type": "function"
 },
 "numpy.ma.testutils.assert_almost_equal": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.build_err_msg"
  ],
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_almost_equal": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_almost_equal.compare": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_approx_equal": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_approx_equal.compare": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_compare": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.testing.assert_array_compare",
   "numpy.testing.build_err_msg"
  ],
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_equal": {
  "lineno": 220,
  "symbols_in_volume": [
   "operator.__eq__"
  ],
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_less": {
  "lineno": 269,
  "symbols_in_volume": [
   "operator.__lt__"
  ],
  "type": "function"
 },
 "numpy.ma.testutils.assert_equal": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.testing.build_err_msg"
  ],
  "type": "function"
 },
 "numpy.ma.testutils.assert_equal_records": {
  "lineno": 93,
  "symbols_in_volume": [
   "operator.getitem"
  ],
  "type": "function"
 },
 "numpy.ma.testutils.assert_mask_equal": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.ma.testutils.fail_if_array_equal": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.testutils.fail_if_array_equal.compare": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.alltrue"
  ],
  "type": "function"
 },
 "numpy.ma.testutils.fail_if_equal": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.build_err_msg"
  ],
  "type": "function"
 },
 "numpy.ma.timer_comparison": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.seterr",
   "numpy.sort",
   "timeit.Timer"
  ],
  "type": "module"
 },
 "numpy.ma.timer_comparison.ModuleTester": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.ma.timer_comparison.ModuleTester.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.assert_array_compare": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.float_",
   "numpy.isnan",
   "numpy.ndarray",
   "numpy.testing.build_err_msg"
  ],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.assert_array_equal": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_0": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_1": {
  "lineno": 125,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.array",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_2": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_3": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_4": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inner",
   "numpy.outer",
   "numpy.take",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_5": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.float_"
  ],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_6": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.float_"
  ],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_7": {
  "lineno": 339,
  "symbols_in_volume": [
   "numpy.core.fromnumeric"
  ],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_99": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.add.reduce",
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_A": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matlib": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.__all__",
   "numpy.__version__",
   "warnings.warn"
  ],
  "type": "module"
 },
 "numpy.matlib.empty": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.matrixlib.defmatrix.matrix"
  ],
  "type": "function"
 },
 "numpy.matlib.eye": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.matrixlib.defmatrix.asmatrix"
  ],
  "type": "function"
 },
 "numpy.matlib.identity": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matlib.ones": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.matrixlib.defmatrix.matrix"
  ],
  "type": "function"
 },
 "numpy.matlib.rand": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.matrixlib.defmatrix.asmatrix",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.matlib.randn": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.matrixlib.defmatrix.asmatrix",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "numpy.matlib.repmat": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matlib.zeros": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.matrixlib.defmatrix.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy._pytesttester.PytestTester"
  ],
  "type": "module"
 },
 "numpy.matrixlib.defmatrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.matrixlib.defmatrix._convert_from_string": {
  "lineno": 14,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix._from_string": {
  "lineno": 1010,
  "symbols_in_volume": [
   "numpy.core.numeric.concatenate"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.asmatrix": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.core.overrides.set_module"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.bmat": {
  "lineno": 1035,
  "symbols_in_volume": [
   "numpy.core.numeric.concatenate",
   "numpy.core.numeric.ndarray",
   "numpy.core.overrides.set_module",
   "sys._getframe"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray",
   "numpy.core.overrides.set_module"
  ],
  "type": "class"
 },
 "numpy.matrixlib.defmatrix.matrix.A": {
  "lineno": 837,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.A1": {
  "lineno": 867,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.H": {
  "lineno": 968,
  "symbols_in_volume": [
   "numpy.core.numeric.complexfloating"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.I": {
  "lineno": 792,
  "symbols_in_volume": [
   "numpy.core.numeric",
   "numpy.dual.pinv"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.T": {
  "lineno": 935,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__array_finalize__": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__getitem__": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.core.numeric.isscalar",
   "numpy.core.numeric.ndarray",
   "numpy.core.numeric.ndarray.__getitem__"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__imul__": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__ipow__": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__mul__": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.core.numeric.dot",
   "numpy.core.numeric.isscalar",
   "numpy.core.numeric.ndarray"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__new__": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.core.numeric.array",
   "numpy.core.numeric.dtype",
   "numpy.core.numeric.ndarray",
   "numpy.core.numeric.ndarray.__new__",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__pow__": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.linalg.matrix_power"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__rmul__": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.core.numeric.dot"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__rpow__": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix._align": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix._collapse": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.all": {
  "lineno": 571,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.all"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.any": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.any"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.argmax": {
  "lineno": 646,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.argmax"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.argmin": {
  "lineno": 720,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.argmin"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.flatten": {
  "lineno": 376,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.flatten"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.max": {
  "lineno": 611,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.max"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.mean": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.mean"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.min": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.min"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.prod": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.prod"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.ptp": {
  "lineno": 759,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.ptp"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.ravel": {
  "lineno": 897,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.ravel"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.squeeze": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.squeeze"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.std": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.std"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.sum": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.sum"
  ],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.tolist": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.var": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.core.numeric.ndarray.var"
  ],
  "type": "function"
 },
 "numpy.matrixlib.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "numpy.matrixlib.setup.configuration": {
  "lineno": 2,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.matrixlib.tests.test_defmatrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_basic": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.dot",
   "numpy.identity",
   "numpy.linalg.inv",
   "numpy.matrix",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_notimplemented": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_pow": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.matrix",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_scalar_type_pow": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.matrix",
   "numpy.testing.assert_array_almost_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCasting": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCasting.test_basic": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.complex128",
   "numpy.float64",
   "numpy.matrix",
   "numpy.ones",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_basic": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.array",
   "numpy.bmat",
   "numpy.matrix",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_bmat_nondefault_str": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.bmat",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_exceptions": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestIndexing": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestIndexing.test_basic": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.asmatrix",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestMatrixReturn": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestMatrixReturn.test_instance_methods": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.matrix",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.matrix"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_array_from_matrix_list": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_array_to_list": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_boolean_indexing": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.asmatrix",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_dimesions": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_fancy_indexing": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_list_indexing": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asmatrix",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_matrix_element": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_row_column_indexing": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.asmatrix",
   "numpy.eye",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_scalar_indexing": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.asmatrix",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower.test_list": {
  "lineno": 395,
  "symbols_in_volume": [
   "numpy.linalg.matrix_power",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower.test_returntype": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.matrix_power",
   "numpy.matrix",
   "numpy.matrixlib.mat",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_asmatrix": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asmatrix",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_basic": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.array",
   "numpy.linalg.inv",
   "numpy.matrix",
   "numpy.testing.assert_",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_comparisons": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.arange",
   "numpy.matrix",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_make_bool_matrix_from_str": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_max": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.max",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_min": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.min",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_noaxis": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_pinv": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.matrix",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_prod": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.prod",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_ptp": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_repr": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_sum": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.sum",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_var": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.matrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.matrix"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_array_memory_sharing": {
  "lineno": 439,
  "symbols_in_volume": [
   "numpy.may_share_memory",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_expand_dims_matrix": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.expand_dims",
   "numpy.matrix",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_matrix_memory_sharing": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.may_share_memory",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_matrix_ravel_order": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_member_flatten": {
  "lineno": 416,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_member_ravel": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_numpy_ravel": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.ravel",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_numpy_ravel_order": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.matrix",
   "numpy.ravel",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_shape": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.matrixlib.tests.test_interaction.TestConcatenatorMatrix": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_interaction.TestConcatenatorMatrix.test_matrix": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.matrix",
   "numpy.r_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.TestConcatenatorMatrix.test_matrix_builder": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bmat",
   "numpy.r_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.TestConcatenatorMatrix.test_matrix_scalar": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.matrix",
   "numpy.r_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.like_function": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.empty_like",
   "numpy.matrix",
   "numpy.ones_like",
   "numpy.testing.assert_",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_apply_along_axis_matrix": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.matrix",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_apply_along_axis_matrix.double": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_array_almost_equal_matrix": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.matrix",
   "numpy.nan",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_array_astype": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_array_equal_error_message_matrix": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.matrix",
   "numpy.testing.assert_equal",
   "pytest.raises",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_average_matrix": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.matrix",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_dot_scalar_and_matrix_of_objects": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.matrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_ediff1d_matrix": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.ediff1d",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_fancy_indexing": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.asmatrix",
   "numpy.matrix",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_inner_scalar_and_matrix": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inner",
   "numpy.matrix",
   "numpy.testing.assert_equal",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_inner_scalar_and_matrix_of_objects": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.inner",
   "numpy.matrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_iter_allocate_output_subtype": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.matrix",
   "numpy.ndarray",
   "numpy.nditer",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_kron_matrix": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.asmatrix",
   "numpy.kron",
   "numpy.matrix",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_nanfunctions_matrices": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.eye",
   "numpy.isnan",
   "numpy.isscalar",
   "numpy.matrix",
   "numpy.nan",
   "numpy.nanmax",
   "numpy.nanmin",
   "numpy.testing.assert_",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_nanfunctions_matrices_general": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.isscalar",
   "numpy.matrix",
   "numpy.nanargmax",
   "numpy.nanargmin",
   "numpy.nancumprod",
   "numpy.nancumsum",
   "numpy.nanmean",
   "numpy.nanprod",
   "numpy.nanstd",
   "numpy.nansum",
   "numpy.nanvar",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_object_scalar_multiply": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.multiply",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_partition_matrix_none": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.partition",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_polynomial_mapdomain": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.polynomial.polyutils.mapdomain",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_sort_matrix_none": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.sort",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_stack": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.stack",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_interaction.test_trapz_matrix": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.matrix",
   "numpy.testing.assert_almost_equal",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.matrixlib.tests.test_masked_matrix.MMatrix": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.matrix"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_masked_matrix.MMatrix.__array_finalize__": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray.__array_finalize__",
   "numpy.matrix.__array_finalize__"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.MMatrix.__new__": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray.__new__",
   "numpy.ma.core.nomask",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.MMatrix._series": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestConcatenator": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestConcatenator.test_matrix": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.ma.extras.mr_",
   "numpy.ma.testutils.assert_array_equal",
   "numpy.ma.testutils.assert_equal",
   "numpy.r_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestConcatenator.test_matrix_builder": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.ma.MAError",
   "numpy.ma.extras.mr_",
   "numpy.ma.testutils.assert_raises"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestMaskedMatrix": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestMaskedMatrix.test_allany_onmatrices": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestMaskedMatrix.test_compressed": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestMaskedMatrix.test_count_mean_with_matrix": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal",
   "numpy.matrix",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestMaskedMatrix.test_flat": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.eye",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestMaskedMatrix.test_matrix_indexing": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.core.MaskType",
   "numpy.ma.core.allequal",
   "numpy.ma.core.getmask",
   "numpy.ma.core.masked",
   "numpy.ma.core.masked_array",
   "numpy.ma.core.masked_values",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestMaskedMatrix.test_pickling_subbaseclass": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestMaskedMatrix.test_ravel": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_equal",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestMaskedMatrix.test_view": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.matrix",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestSubclassing": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestSubclassing.setup": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestSubclassing.test_masked_binary_operations": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.ma.core.add",
   "numpy.ma.core.add.outer",
   "numpy.ma.core.hypot",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestSubclassing.test_masked_binary_operations2": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.ma.core.divide",
   "numpy.ma.core.masked_array",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestSubclassing.test_masked_unary_operations": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.log",
   "numpy.ma.core.log",
   "numpy.ma.testutils.assert_",
   "numpy.ma.testutils.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_masked_matrix.TestSubclassing.test_maskedarray_subclassing": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.ma.testutils.assert_",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_matrix_linalg": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.double",
   "numpy.empty",
   "numpy.linalg.tests.test_linalg.LinalgCase",
   "numpy.linalg.tests.test_linalg.apply_tag",
   "numpy.matrix"
  ],
  "type": "module"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.MatrixTestCase": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.LinalgTestCase"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestCondMatrix": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.CondCases"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestDetMatrix": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.DetCases"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestEigMatrix": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.EigCases"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestEigvalsMatrix": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.EigvalsCases"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestInvMatrix": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.InvCases"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestLstsqMatrix": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.LstsqCases"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestNormDoubleMatrix": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg._TestNormDoubleBase"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestNormInt64Matrix": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg._TestNormInt64Base"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestNormSingleMatrix": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg._TestNormSingleBase"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestPinvMatrix": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.PinvCases"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestQRMatrix": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.TestQR",
   "numpy.matrix"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestSVDMatrix": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.SVDCases"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg.TestSolveMatrix": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg.SolveCases"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_matrix_linalg._TestNorm2DMatrix": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.linalg.tests.test_linalg._TestNorm2D",
   "numpy.matrix"
  ],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_multiarray": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView.test_keywords": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.int8",
   "numpy.matrix",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView.test_type": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.matrix",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_numeric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.matrixlib.tests.test_numeric.TestDot": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_numeric.TestDot.test_matscalar": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_numeric.test_diagonal": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diag",
   "numpy.diagonal",
   "numpy.matrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_kron_matrix": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.kron",
   "numpy.matrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_multiply_by_1d_vector": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_multiply_by_1d_vector.mul": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.mat",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_properties": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.matrix",
   "numpy.ndarray",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_std_argmax": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.asmatrix",
   "numpy.random.uniform",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy._pytesttester.PytestTester"
  ],
  "type": "module"
 },
 "numpy.polynomial._polybase": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.polynomial._polybase.ABCPolyBase": {
  "lineno": 17,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__add__": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__call__": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__divmod__": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__eq__": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__floordiv__": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__getstate__": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__init__": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__iter__": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__len__": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__mod__": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__mul__": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__ne__": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__neg__": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__pos__": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__pow__": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__radd__": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rdiv__": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rdivmod__": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__repr__": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rfloordiv__": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rmod__": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rmul__": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rsub__": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rtruediv__": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__setstate__": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__str__": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__sub__": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__truediv__": {
  "lineno": 418,
  "symbols_in_volume": [
   "numbers.Number"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._add": {
  "lineno": 90,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._der": {
  "lineno": 125,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._div": {
  "lineno": 105,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._fit": {
  "lineno": 130,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._fromroots": {
  "lineno": 145,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._get_coefficients": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._int": {
  "lineno": 120,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._line": {
  "lineno": 135,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._mul": {
  "lineno": 100,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._pow": {
  "lineno": 110,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._repr_latex_": {
  "lineno": 306,
  "symbols_in_volume": [
   "numbers.Real",
   "numpy.signbit"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._repr_latex_scalar": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._repr_latex_term": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._roots": {
  "lineno": 140,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._sub": {
  "lineno": 95,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._val": {
  "lineno": 115,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.basis": {
  "lineno": 962,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.basis_name": {
  "lineno": 85,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.cast": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.convert": {
  "lineno": 627,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.copy": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.cutdeg": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.degree": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.deriv": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.domain": {
  "lineno": 70,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.fit": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.fromroots": {
  "lineno": 888,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.has_samecoef": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.has_samedomain": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.has_sametype": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.has_samewindow": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.identity": {
  "lineno": 929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.integ": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.linspace": {
  "lineno": 766,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.mapparms": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.nickname": {
  "lineno": 80,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.roots": {
  "lineno": 751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.trim": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.truncate": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.window": {
  "lineno": 75,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.polynomial.chebyshev.Chebyshev": {
  "lineno": 1982,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.polynomial.chebyshev.Chebyshev.interpolate": {
  "lineno": 2018,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev._cseries_to_zseries": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_der": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_div": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_int": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_mul": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.convolve"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_to_cseries": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.cheb2poly": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebadd": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebcompanion": {
  "lineno": 1666,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebder": {
  "lineno": 869,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.double",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebdiv": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebfit": {
  "lineno": 1544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebfromroots": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebgauss": {
  "lineno": 1835,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cos",
   "numpy.ones",
   "numpy.pi"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebgrid2d": {
  "lineno": 1224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebgrid3d": {
  "lineno": 1328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebint": {
  "lineno": 961,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.double",
   "numpy.empty",
   "numpy.iterable",
   "numpy.moveaxis",
   "numpy.ndim"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebinterpolate": {
  "lineno": 1768,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebline": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebmul": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebmulx": {
  "lineno": 649,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebpow": {
  "lineno": 811,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.convolve"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebpts1": {
  "lineno": 1908,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebpts2": {
  "lineno": 1945,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebroots": {
  "lineno": 1711,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.eigvals"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebsub": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebval": {
  "lineno": 1088,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.double",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebval2d": {
  "lineno": 1175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebval3d": {
  "lineno": 1277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebvander": {
  "lineno": 1384,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebvander2d": {
  "lineno": 1437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebvander3d": {
  "lineno": 1490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebweight": {
  "lineno": 1880,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.polynomial.chebyshev.poly2cheb": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.polynomial.hermite.Hermite": {
  "lineno": 1641,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.polynomial.hermite._normed_hermite_n": {
  "lineno": 1499,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.herm2poly": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermadd": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermcompanion": {
  "lineno": 1394,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.hstack",
   "numpy.multiply.accumulate",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermder": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.double",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermdiv": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermfit": {
  "lineno": 1267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermfromroots": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermgauss": {
  "lineno": 1542,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.float64",
   "numpy.linalg.eigvalsh",
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermgrid2d": {
  "lineno": 939,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermgrid3d": {
  "lineno": 1043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermint": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.double",
   "numpy.empty",
   "numpy.iterable",
   "numpy.moveaxis",
   "numpy.ndim"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermline": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermmul": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermmulx": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermpow": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermroots": {
  "lineno": 1439,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.eigvals"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermsub": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermval": {
  "lineno": 794,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.double",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermval2d": {
  "lineno": 890,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermval3d": {
  "lineno": 992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermvander": {
  "lineno": 1099,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermvander2d": {
  "lineno": 1160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermvander3d": {
  "lineno": 1213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite.hermweight": {
  "lineno": 1609,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite.poly2herm": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.polynomial.hermite_e.HermiteE": {
  "lineno": 1635,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.polynomial.hermite_e._normed_hermite_e_n": {
  "lineno": 1494,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.herme2poly": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeadd": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermecompanion": {
  "lineno": 1388,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.hstack",
   "numpy.multiply.accumulate",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeder": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.double",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermediv": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermefit": {
  "lineno": 1260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermefromroots": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermegauss": {
  "lineno": 1537,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.linalg.eigvalsh",
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermegrid2d": {
  "lineno": 933,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermegrid3d": {
  "lineno": 1037,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeint": {
  "lineno": 667,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.double",
   "numpy.empty",
   "numpy.iterable",
   "numpy.moveaxis",
   "numpy.ndim"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeline": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermemul": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermemulx": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermepow": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeroots": {
  "lineno": 1434,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.eigvals"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermesub": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeval": {
  "lineno": 789,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.double",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeval2d": {
  "lineno": 884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeval3d": {
  "lineno": 986,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermevander": {
  "lineno": 1093,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermevander2d": {
  "lineno": 1153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermevander3d": {
  "lineno": 1206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeweight": {
  "lineno": 1604,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "numpy.polynomial.hermite_e.poly2herme": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.polynomial.laguerre.Laguerre": {
  "lineno": 1592,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.polynomial.laguerre.lag2poly": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagadd": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagcompanion": {
  "lineno": 1394,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagder": {
  "lineno": 586,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.double",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagdiv": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagfit": {
  "lineno": 1267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagfromroots": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.laggauss": {
  "lineno": 1498,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.linalg.eigvalsh"
  ],
  "type": "function"
 },
 "numpy.polynomial.laguerre.laggrid2d": {
  "lineno": 940,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.laggrid3d": {
  "lineno": 1044,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagint": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.double",
   "numpy.empty",
   "numpy.iterable",
   "numpy.moveaxis",
   "numpy.ndim"
  ],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagline": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagmul": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagmulx": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagpow": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagroots": {
  "lineno": 1438,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.eigvals"
  ],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagsub": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagval": {
  "lineno": 796,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.double",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagval2d": {
  "lineno": 891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagval3d": {
  "lineno": 993,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagvander": {
  "lineno": 1100,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagvander2d": {
  "lineno": 1160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagvander3d": {
  "lineno": 1213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagweight": {
  "lineno": 1562,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "numpy.polynomial.laguerre.poly2lag": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.polynomial.legendre.Legendre": {
  "lineno": 1608,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.polynomial.legendre.leg2poly": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legadd": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legcompanion": {
  "lineno": 1408,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.legendre.legder": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.double",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.legendre.legdiv": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legfit": {
  "lineno": 1284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legfromroots": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.leggauss": {
  "lineno": 1509,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.linalg.eigvalsh"
  ],
  "type": "function"
 },
 "numpy.polynomial.legendre.leggrid2d": {
  "lineno": 964,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.leggrid3d": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legint": {
  "lineno": 699,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.double",
   "numpy.empty",
   "numpy.iterable",
   "numpy.moveaxis",
   "numpy.ndim"
  ],
  "type": "function"
 },
 "numpy.polynomial.legendre.legline": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.polynomial.legendre.legmul": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legmulx": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.polynomial.legendre.legpow": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legroots": {
  "lineno": 1452,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.eigvals"
  ],
  "type": "function"
 },
 "numpy.polynomial.legendre.legsub": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legval": {
  "lineno": 827,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.double",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.polynomial.legendre.legval2d": {
  "lineno": 915,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legval3d": {
  "lineno": 1017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legvander": {
  "lineno": 1124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.legendre.legvander2d": {
  "lineno": 1177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legvander3d": {
  "lineno": 1230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.legweight": {
  "lineno": 1577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.legendre.poly2leg": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.polynomial.polynomial.Polynomial": {
  "lineno": 1456,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "class"
 },
 "numpy.polynomial.polynomial.Polynomial._repr_latex_term": {
  "lineno": 1498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyadd": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polycompanion": {
  "lineno": 1353,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyder": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polydiv": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyfit": {
  "lineno": 1207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyfromroots": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polygrid2d": {
  "lineno": 891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polygrid3d": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyint": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.core.multiarray.normalize_axis_index",
   "numpy.empty",
   "numpy.iterable",
   "numpy.moveaxis",
   "numpy.ndim"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyline": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polymul": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.convolve"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polymulx": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polypow": {
  "lineno": 417,
  "symbols_in_volume": [
   "numpy.convolve"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyroots": {
  "lineno": 1393,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.eigvals"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polysub": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyval": {
  "lineno": 657,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyval2d": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyval3d": {
  "lineno": 944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvalfromroots": {
  "lineno": 753,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.double",
   "numpy.ndarray",
   "numpy.prod"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvander": {
  "lineno": 1051,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.moveaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvander2d": {
  "lineno": 1105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvander3d": {
  "lineno": 1153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polyutils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.polynomial.polyutils.PolyBase": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.polyutils.PolyDomainError": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.polyutils.PolyError": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.polyutils.RankWarning": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.polyutils._add": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polyutils._deprecate_as_int": {
  "lineno": 762,
  "symbols_in_volume": [
   "operator.index",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils._div": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils._fit": {
  "lineno": 641,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.complexfloating",
   "numpy.finfo",
   "numpy.linalg.lstsq",
   "numpy.sort",
   "numpy.sqrt",
   "numpy.square",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils._fromroots": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils._gridnd": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polyutils._nth_slice": {
  "lineno": 417,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils._pow": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils._sub": {
  "lineno": 627,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polyutils._valnd": {
  "lineno": 532,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils._vander_nd": {
  "lineno": 423,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.array",
   "operator.mul"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils._vander_nd_flat": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polyutils.as_series": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.common_type",
   "numpy.dtype",
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils.getdomain": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.typecodes"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils.mapdomain": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils.mapparms": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.polyutils.trimcoef": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "numpy.polynomial.polyutils.trimseq": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "numpy.polynomial.setup.configuration": {
  "lineno": 1,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.polynomial.tests.test_chebyshev": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebadd": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebadd",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebdiv": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebadd",
   "numpy.polynomial.chebyshev.chebdiv",
   "numpy.polynomial.chebyshev.chebmul",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebmul": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebmul",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebmulx": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebmulx",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebpow": {
  "lineno": 114,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.chebyshev.chebmul",
   "numpy.polynomial.chebyshev.chebpow",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebsub": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebsub",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion.test_dimensions": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebcompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion.test_linear_root": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebcompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion.test_raises": {
  "lineno": 512,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebcompanion",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebdomain": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebdomain",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebone": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebone",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebx": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebx",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebzero": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestDerivative": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestDerivative.test_chebder": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebder",
   "numpy.polynomial.chebyshev.chebint",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestDerivative.test_chebder_axis": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebder",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.einsum",
   "numpy.polynomial.polynomial.polyval",
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebgrid2d": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.chebyshev.chebgrid2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebgrid3d": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.chebyshev.chebgrid3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebval": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.chebyshev.chebval",
   "numpy.polynomial.polynomial.polyval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebval2d": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.chebyshev.chebval2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebval3d": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.chebyshev.chebval3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting.test_chebfit": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.polynomial.chebyshev.chebfit",
   "numpy.polynomial.chebyshev.chebval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting.test_chebfit.f": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting.test_chebfit.f2": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestGauss": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestGauss.test_100": {
  "lineno": 527,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.pi",
   "numpy.polynomial.chebyshev.chebgauss",
   "numpy.polynomial.chebyshev.chebvander",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestIntegral": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestIntegral.test_chebint": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.cheb2poly",
   "numpy.polynomial.chebyshev.chebint",
   "numpy.polynomial.chebyshev.chebval",
   "numpy.polynomial.chebyshev.poly2cheb",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestIntegral.test_chebint_axis": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebint",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate.f": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate.test_approximation": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.chebyshev.chebinterpolate",
   "numpy.polynomial.chebyshev.chebval",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate.test_approximation.powx": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate.test_dimensions": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebinterpolate",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate.test_raises": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebinterpolate",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_cheb2poly": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.cheb2poly",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebfromroots": {
  "lineno": 546,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi",
   "numpy.polynomial.chebyshev.chebfromroots",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebline": {
  "lineno": 574,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebline",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebpts1": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebpts1",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebpts2": {
  "lineno": 606,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebpts2",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebroots": {
  "lineno": 555,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.chebyshev.chebfromroots",
   "numpy.polynomial.chebyshev.chebroots",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebtrim": {
  "lineno": 563,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebtrim",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_poly2cheb": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.poly2cheb",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_weight": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.chebyshev.chebweight",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate.test__cseries_to_zseries": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.double",
   "numpy.polynomial.chebyshev._cseries_to_zseries",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate.test__zseries_to_cseries": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.double",
   "numpy.polynomial.chebyshev._zseries_to_cseries",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander.test_chebvander": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.chebyshev.chebval",
   "numpy.polynomial.chebyshev.chebvander",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander.test_chebvander2d": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.chebyshev.chebval2d",
   "numpy.polynomial.chebyshev.chebvander2d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander.test_chebvander3d": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.chebyshev.chebval3d",
   "numpy.polynomial.chebyshev.chebvander3d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.trim": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.polynomial.chebyshev.chebtrim"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.polynomial.Chebyshev",
   "numpy.polynomial.Hermite",
   "numpy.polynomial.HermiteE",
   "numpy.polynomial.Laguerre",
   "numpy.polynomial.Legendre",
   "numpy.polynomial.Polynomial",
   "numpy.random.random"
  ],
  "type": "module"
 },
 "numpy.polynomial.tests.test_classes.Poly": {
  "lineno": 28,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate.f": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate.test_approximation": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.Chebyshev.interpolate",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate.test_approximation.powx": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate.test_dimensions": {
  "lineno": 587,
  "symbols_in_volume": [
   "numpy.polynomial.Chebyshev.interpolate",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate.test_raises": {
  "lineno": 583,
  "symbols_in_volume": [
   "numpy.polynomial.Chebyshev.interpolate",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_add": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.polynomial.Chebyshev",
   "numpy.polynomial.Polynomial",
   "numpy.testing.assert_raises",
   "operator.add"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_bad_conditioned_fit": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.polynomial.polyutils.RankWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_basis": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_call": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.Polynomial",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_cast": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_conversion": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_copy": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_cutdeg": {
  "lineno": 526,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_degree": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_deriv": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_divmod": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.polynomial.Chebyshev",
   "numpy.polynomial.Polynomial",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_equal": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_fit": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_fit.f": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_floordiv": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.polynomial.Chebyshev",
   "numpy.polynomial.Polynomial",
   "numpy.testing.assert_raises",
   "operator.floordiv"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_fromroots": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.polynomial.Polynomial.cast",
   "numpy.polynomial.Polynomial.domain",
   "numpy.polynomial.Polynomial.window",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_identity": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_integ": {
  "lineno": 430,
  "symbols_in_volume": [
   "numpy.polynomial.Polynomial"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_linspace": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_mapparms": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_mod": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.polynomial.Chebyshev",
   "numpy.polynomial.Polynomial",
   "numpy.testing.assert_raises",
   "operator.mod"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_mul": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.polynomial.Chebyshev",
   "numpy.polynomial.Polynomial",
   "numpy.testing.assert_raises",
   "operator.mul"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_not_equal": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_pow": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "operator.pow"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_roots": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.sort",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_sub": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.polynomial.Chebyshev",
   "numpy.polynomial.Polynomial",
   "numpy.testing.assert_raises",
   "operator.sub"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_trim": {
  "lineno": 546,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_truediv": {
  "lineno": 305,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.ScalarType",
   "numpy.array",
   "numpy.testing.assert_raises",
   "operator.truediv"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_truncate": {
  "lineno": 536,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.test_ufunc_override": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermadd": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermadd",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermdiv": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermadd",
   "numpy.polynomial.hermite.hermdiv",
   "numpy.polynomial.hermite.hermmul",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermmul": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermmul",
   "numpy.polynomial.hermite.hermval",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermmulx": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermmulx",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermpow": {
  "lineno": 102,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.hermite.hermmul",
   "numpy.polynomial.hermite.hermpow",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermsub": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermsub",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion.test_dimensions": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermcompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion.test_linear_root": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermcompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion.test_raises": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermcompanion",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermdomain": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermdomain",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermone": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermone",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermx": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermx",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermzero": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestDerivative": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestDerivative.test_hermder": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermder",
   "numpy.polynomial.hermite.hermint",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestDerivative.test_hermder_axis": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermder",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.einsum",
   "numpy.polynomial.polynomial.polyval",
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermgrid2d": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.hermite.hermgrid2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermgrid3d": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.hermite.hermgrid3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermval": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.hermite.hermval",
   "numpy.polynomial.polynomial.polyval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermval2d": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.hermite.hermval2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermval3d": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.hermite.hermval3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting.test_hermfit": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.polynomial.hermite.hermfit",
   "numpy.polynomial.hermite.hermval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting.test_hermfit.f": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting.test_hermfit.f2": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestGauss": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestGauss.test_100": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.pi",
   "numpy.polynomial.hermite.hermgauss",
   "numpy.polynomial.hermite.hermvander",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestIntegral": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestIntegral.test_hermint": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.herm2poly",
   "numpy.polynomial.hermite.hermint",
   "numpy.polynomial.hermite.hermval",
   "numpy.polynomial.hermite.poly2herm",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestIntegral.test_hermint_axis": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermint",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_herm2poly": {
  "lineno": 543,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.herm2poly",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermfromroots": {
  "lineno": 509,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi",
   "numpy.polynomial.hermite.herm2poly",
   "numpy.polynomial.hermite.hermfromroots",
   "numpy.polynomial.hermite.hermval",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermline": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermline",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermroots": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.hermite.hermfromroots",
   "numpy.polynomial.hermite.hermroots",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermtrim": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermtrim",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_poly2herm": {
  "lineno": 547,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.poly2herm",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_weight": {
  "lineno": 551,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.linspace",
   "numpy.polynomial.hermite.hermweight",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestVander": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestVander.test_hermvander": {
  "lineno": 352,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.hermite.hermval",
   "numpy.polynomial.hermite.hermvander",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestVander.test_hermvander2d": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.hermite.hermval2d",
   "numpy.polynomial.hermite.hermvander2d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestVander.test_hermvander3d": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.hermite.hermval3d",
   "numpy.polynomial.hermite.hermvander3d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.trim": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermtrim"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermeadd": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermeadd",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermediv": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermeadd",
   "numpy.polynomial.hermite_e.hermediv",
   "numpy.polynomial.hermite_e.hermemul",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermemul": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermemul",
   "numpy.polynomial.hermite_e.hermeval",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermemulx": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermemulx",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermepow": {
  "lineno": 102,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.hermite_e.hermemul",
   "numpy.polynomial.hermite_e.hermepow",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermesub": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermesub",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion.test_dimensions": {
  "lineno": 480,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermecompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion.test_linear_root": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermecompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion.test_raises": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermecompanion",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermedomain": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermedomain",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermeone": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermeone",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermex": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermex",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermezero": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermezero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestDerivative": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestDerivative.test_hermeder": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermeder",
   "numpy.polynomial.hermite_e.hermeint",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestDerivative.test_hermeder_axis": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermeder",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.einsum",
   "numpy.polynomial.polynomial.polyval",
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermegrid2d": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.hermite_e.hermegrid2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermegrid3d": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.hermite_e.hermegrid3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermeval": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.hermite_e.hermeval",
   "numpy.polynomial.polynomial.polyval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermeval2d": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.hermite_e.hermeval2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermeval3d": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.hermite_e.hermeval3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting.test_hermefit": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.polynomial.hermite_e.hermefit",
   "numpy.polynomial.hermite_e.hermeval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting.test_hermefit.f": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting.test_hermefit.f2": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestGauss": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestGauss.test_100": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.pi",
   "numpy.polynomial.hermite_e.hermegauss",
   "numpy.polynomial.hermite_e.hermevander",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestIntegral": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestIntegral.test_hermeint": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.herme2poly",
   "numpy.polynomial.hermite_e.hermeint",
   "numpy.polynomial.hermite_e.hermeval",
   "numpy.polynomial.hermite_e.poly2herme",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestIntegral.test_hermeint_axis": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermeint",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_herme2poly": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.herme2poly",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermefromroots": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi",
   "numpy.polynomial.hermite_e.herme2poly",
   "numpy.polynomial.hermite_e.hermefromroots",
   "numpy.polynomial.hermite_e.hermeval",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermeline": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermeline",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermeroots": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.hermite_e.hermefromroots",
   "numpy.polynomial.hermite_e.hermeroots",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermetrim": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermetrim",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_poly2herme": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.poly2herme",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_weight": {
  "lineno": 552,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.linspace",
   "numpy.polynomial.hermite_e.hermeweight",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander.test_hermevander": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.hermite_e.hermeval",
   "numpy.polynomial.hermite_e.hermevander",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander.test_hermevander2d": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.hermite_e.hermeval2d",
   "numpy.polynomial.hermite_e.hermevander2d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander.test_hermevander3d": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.hermite_e.hermeval3d",
   "numpy.polynomial.hermite_e.hermevander3d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.trim": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.polynomial.hermite_e.hermetrim"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagadd": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagadd",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagdiv": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagadd",
   "numpy.polynomial.laguerre.lagdiv",
   "numpy.polynomial.laguerre.lagmul",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagmul": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagmul",
   "numpy.polynomial.laguerre.lagval",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagmulx": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagmulx",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagpow": {
  "lineno": 99,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.laguerre.lagmul",
   "numpy.polynomial.laguerre.lagpow",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagsub": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagsub",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion.test_dimensions": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagcompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion.test_linear_root": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagcompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion.test_raises": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagcompanion",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagdomain": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagdomain",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagone": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagone",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagx": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagx",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagzero": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestDerivative": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestDerivative.test_lagder": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagder",
   "numpy.polynomial.laguerre.lagint",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestDerivative.test_lagder_axis": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagder",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.einsum",
   "numpy.polynomial.polynomial.polyval",
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_laggrid2d": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.laguerre.laggrid2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_laggrid3d": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.laguerre.laggrid3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_lagval": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.laguerre.lagval",
   "numpy.polynomial.polynomial.polyval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_lagval2d": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.laguerre.lagval2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_lagval3d": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.laguerre.lagval3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestFitting": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestFitting.test_lagfit": {
  "lineno": 395,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.polynomial.laguerre.lagfit",
   "numpy.polynomial.laguerre.lagval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestFitting.test_lagfit.f": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestGauss": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestGauss.test_100": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.polynomial.laguerre.laggauss",
   "numpy.polynomial.laguerre.lagvander",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestIntegral": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestIntegral.test_lagint": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lag2poly",
   "numpy.polynomial.laguerre.lagint",
   "numpy.polynomial.laguerre.lagval",
   "numpy.polynomial.laguerre.poly2lag",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestIntegral.test_lagint_axis": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagint",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lag2poly": {
  "lineno": 525,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lag2poly",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagfromroots": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi",
   "numpy.polynomial.laguerre.lag2poly",
   "numpy.polynomial.laguerre.lagfromroots",
   "numpy.polynomial.laguerre.lagval",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagline": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagline",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagroots": {
  "lineno": 503,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.laguerre.lagfromroots",
   "numpy.polynomial.laguerre.lagroots",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagtrim": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagtrim",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_poly2lag": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.poly2lag",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_weight": {
  "lineno": 533,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.linspace",
   "numpy.polynomial.laguerre.lagweight",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander": {
  "lineno": 345,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander.test_lagvander": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.laguerre.lagval",
   "numpy.polynomial.laguerre.lagvander",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander.test_lagvander2d": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.laguerre.lagval2d",
   "numpy.polynomial.laguerre.lagvander2d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander.test_lagvander3d": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.laguerre.lagval3d",
   "numpy.polynomial.laguerre.lagvander3d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.trim": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.polynomial.laguerre.lagtrim"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legadd": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legadd",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legdiv": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legadd",
   "numpy.polynomial.legendre.legdiv",
   "numpy.polynomial.legendre.legmul",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legmul": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legmul",
   "numpy.polynomial.legendre.legval",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legmulx": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legmulx",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legpow": {
  "lineno": 103,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.legendre.legmul",
   "numpy.polynomial.legendre.legpow",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legsub": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legsub",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion.test_dimensions": {
  "lineno": 480,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legcompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion.test_linear_root": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legcompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion.test_raises": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legcompanion",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legdomain": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legdomain",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legone": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legone",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legx": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legx",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legzero": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestDerivative": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestDerivative.test_legder": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legder",
   "numpy.polynomial.legendre.legint",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestDerivative.test_legder_axis": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legder",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.einsum",
   "numpy.polynomial.polynomial.polyval",
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_leggrid2d": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.legendre.leggrid2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_leggrid3d": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.legendre.leggrid3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_legval": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.legendre.legval",
   "numpy.polynomial.polynomial.polyval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_legval2d": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.legendre.legval2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_legval3d": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.legendre.legval3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting.test_legfit": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.polynomial.legendre.legfit",
   "numpy.polynomial.legendre.legval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting.test_legfit.f": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting.test_legfit.f2": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestGauss": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestGauss.test_100": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.polynomial.legendre.leggauss",
   "numpy.polynomial.legendre.legvander",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestIntegral": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestIntegral.test_legint": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.leg2poly",
   "numpy.polynomial.legendre.legint",
   "numpy.polynomial.legendre.legval",
   "numpy.polynomial.legendre.poly2leg",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestIntegral.test_legint_axis": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legint",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_leg2poly": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.leg2poly",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legfromroots": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi",
   "numpy.polynomial.legendre.leg2poly",
   "numpy.polynomial.legendre.legfromroots",
   "numpy.polynomial.legendre.legval",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legline": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legline",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legroots": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.legendre.legfromroots",
   "numpy.polynomial.legendre.legroots",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legtrim": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legtrim",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_poly2leg": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.poly2leg",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_weight": {
  "lineno": 552,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.legendre.legweight",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestVander": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestVander.test_legvander": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.legendre.legval",
   "numpy.polynomial.legendre.legvander",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestVander.test_legvander2d": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.legendre.legval2d",
   "numpy.polynomial.legendre.legvander2d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestVander.test_legvander3d": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.legendre.legval3d",
   "numpy.polynomial.legendre.legvander3d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.trim": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.polynomial.legendre.legtrim"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polyadd": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polyadd",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polydiv": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polyadd",
   "numpy.polynomial.polynomial.polydiv",
   "numpy.polynomial.polynomial.polymul",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polymul": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polymul",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polymulx": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polymulx",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polypow": {
  "lineno": 105,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.polynomial.polymul",
   "numpy.polynomial.polynomial.polypow",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polysub": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polysub",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion.test_dimensions": {
  "lineno": 483,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polycompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion.test_linear_root": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polycompanion",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion.test_raises": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polycompanion",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polydomain": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polydomain",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyone": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polyone",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyx": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polyx",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyzero": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polyzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestDerivative": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestDerivative.test_polyder": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polyder",
   "numpy.polynomial.polynomial.polyint",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestDerivative.test_polyder_axis": {
  "lineno": 416,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polyder",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.einsum",
   "numpy.polynomial.polynomial.polyval",
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polygrid2d": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.polynomial.polygrid2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polygrid3d": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.ones",
   "numpy.polynomial.polynomial.polygrid3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyval": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.ma.array",
   "numpy.polynomial.polynomial.polyval",
   "numpy.polyval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyval.C": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyval2d": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.polynomial.polyval2d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyval3d": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.polynomial.polyval3d",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyvalfromroots": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.polynomial.polynomial.polyroots",
   "numpy.polynomial.polynomial.polyval",
   "numpy.polynomial.polynomial.polyvalfromroots",
   "numpy.random.randint",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestIntegral": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestIntegral.test_polyint": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polyint",
   "numpy.polynomial.polynomial.polyval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestIntegral.test_polyint_axis": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polyint",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfit": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.polynomial.polynomial.polyfit",
   "numpy.polynomial.polynomial.polyval",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfit.f": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfit.f2": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfromroots": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi",
   "numpy.polynomial.polynomial.polyfromroots",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyline": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polyline",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyroots": {
  "lineno": 503,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.polynomial.polynomial.polyfromroots",
   "numpy.polynomial.polynomial.polyroots",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polytrim": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polytrim",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander.test_polyvander": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.polynomial.polynomial.polyval",
   "numpy.polynomial.polynomial.polyvander",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander.test_polyvander2d": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.polynomial.polyval2d",
   "numpy.polynomial.polynomial.polyvander2d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander.test_polyvander3d": {
  "lineno": 463,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.polynomial.polynomial.polyval3d",
   "numpy.polynomial.polynomial.polyvander3d",
   "numpy.random.random",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.trim": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.polynomial.polynomial.polytrim"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_getdomain": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.polynomial.polyutils.getdomain",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_mapdomain": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.polynomial.polyutils.mapdomain",
   "numpy.testing.assert_",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_mapdomain.MyNDArray": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_mapparms": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.polynomial.polyutils.mapparms",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_as_series": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.polynomial.polyutils.as_series",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_trimcoef": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.polynomial.polyutils.trimcoef",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_trimseq": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.polynomial.polyutils.trimseq",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.polynomial.tests.test_printing.TestLatexRepr": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_printing.TestLatexRepr.as_latex": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestLatexRepr.test_basis_func": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.polynomial.Chebyshev",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestLatexRepr.test_multichar_basis_func": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.polynomial.HermiteE",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestLatexRepr.test_simple_polynomial": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.polynomial.Polynomial",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_chebyshev_str": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.polynomial.Chebyshev",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_hermiteE_repr": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.polynomial.HermiteE",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_hermite_repr": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.polynomial.Hermite",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_laguerre_repr": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.polynomial.Laguerre",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_legendre_repr": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.polynomial.Legendre",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_polynomial_str": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.polynomial.Polynomial",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_chebyshev_str": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.polynomial.Chebyshev",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_hermiteE_str": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.polynomial.HermiteE",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_hermite_str": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.polynomial.Hermite",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_laguerre_str": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.polynomial.Laguerre",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_legendre_str": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.polynomial.Legendre",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_polynomial_str": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.polynomial.Polynomial",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy._pytesttester.PytestTester"
  ],
  "type": "module"
 },
 "numpy.random.__RandomState_ctor": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random._examples.cffi.extending": {
  "lineno": null,
  "symbols_in_volume": [
   "cffi.FFI",
   "numpy.get_include",
   "numpy.random.Generator",
   "numpy.random.PCG64",
   "numpy.random._generator.__file__",
   "os.path.join"
  ],
  "type": "module"
 },
 "numpy.random._examples.cffi.parse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.random._examples.cffi.parse.parse_distributions_h": {
  "lineno": 4,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.random._examples.cython.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "Cython.Build.cythonize",
   "distutils.core.setup",
   "numpy.get_include",
   "os.path.dirname",
   "os.path.join",
   "setuptools.extension.Extension"
  ],
  "type": "module"
 },
 "numpy.random._examples.numba.extending": {
  "lineno": null,
  "symbols_in_volume": [
   "numba.jit",
   "numpy.random.Generator",
   "numpy.random.PCG64",
   "timeit.timeit"
  ],
  "type": "module"
 },
 "numpy.random._examples.numba.extending.bounded_uint": {
  "lineno": 56,
  "symbols_in_volume": [
   "numba.jit"
  ],
  "type": "function"
 },
 "numpy.random._examples.numba.extending.bounded_uints": {
  "lineno": 75,
  "symbols_in_volume": [
   "numba.jit",
   "numpy.empty",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random._examples.numba.extending.normals": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.random._examples.numba.extending.numbacall": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random._examples.numba.extending.numpycall": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random._examples.numba.extending_distributions": {
  "lineno": null,
  "symbols_in_volume": [
   "cffi.FFI",
   "numba.jit",
   "numpy.random.PCG64",
   "os.path.exists"
  ],
  "type": "module"
 },
 "numpy.random._examples.numba.extending_distributions.normals": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.random._pickle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.random._pickle.__bit_generator_ctor": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random._pickle.__generator_ctor": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random._pickle.__randomstate_ctor": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup",
   "platform.platform",
   "platform.python_compiler"
  ],
  "type": "module"
 },
 "numpy.random.setup.configuration": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.distutils.system_info.platform_bits",
   "os.name",
   "os.path.join",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.random.setup.configuration.generate_libraries": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.get_mathlibs",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.random.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.random.tests.data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.random.tests.test_direct": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "sys.flags.optimize"
  ],
  "type": "module"
 },
 "numpy.random.tests.test_direct.Base": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.uint64"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_direct.Base._read_csv": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.setup_class": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.random.PCG64",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_benchmark": {
  "lineno": 282,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_cffi": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.random._common.interface",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_ctypes": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.random._common.interface",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_gauss_inv": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_getstate": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_invalid_init_type": {
  "lineno": 270,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_invalid_init_values": {
  "lineno": 276,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_invalid_state_type": {
  "lineno": 258,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_invalid_state_value": {
  "lineno": 263,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_pickle": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.SeedSequence",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_random_raw": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_raw": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_repr": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.random.Generator"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_str": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.random.Generator"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_uniform_double": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.random.Generator",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.Base.test_uniform_float": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.Generator",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.TestDefaultRNG": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_direct.TestDefaultRNG.test_passthrough": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.random.Philox",
   "numpy.random.default_rng"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.TestDefaultRNG.test_seed": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.random.PCG64",
   "numpy.random.default_rng"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.TestMT19937": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_direct.TestMT19937.setup_class": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.random.MT19937",
   "numpy.uint32",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.TestMT19937.test_seed_float_array": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pi",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.TestMT19937.test_state_tuple": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.TestPCG64": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_direct.TestPCG64.setup_class": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.random.PCG64",
   "numpy.uint64",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.TestPCG64.test_advance_symmetry": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.random.Generator"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.TestPhilox": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_direct.TestPhilox.setup_class": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.random.Philox",
   "numpy.uint64",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.TestPhilox.test_set_key": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_direct.TestSFC64": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_direct.TestSFC64.setup_class": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.random.SFC64",
   "numpy.uint64",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.assert_state_equal": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.gauss_from_uint": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.test_seedsequence": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.random.SeedSequence",
   "numpy.random.bit_generator.ISeedSequence",
   "numpy.random.bit_generator.ISpawnableSeedSequence",
   "numpy.random.bit_generator.SeedlessSeedSequence",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.uniform32_from_uint": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_direct.uniform32_from_uint32": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.uniform32_from_uint53": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.uint32",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.uniform32_from_uint64": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.column_stack",
   "numpy.float32",
   "numpy.uint32",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.uniform_from_dsfmt": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.double"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.uniform_from_uint": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_direct.uniform_from_uint32": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_direct.uniform_from_uint64": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_extending": {
  "lineno": null,
  "symbols_in_volume": [
   "Cython.Compiler.Version.version",
   "cffi",
   "cython",
   "distutils.version.LooseVersion",
   "numba",
   "sys.flags.optimize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "module"
 },
 "numpy.random.tests.test_extending.test_cffi": {
  "lineno": 93,
  "symbols_in_volume": [
   "cffi",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_extending.test_cython": {
  "lineno": 43,
  "symbols_in_volume": [
   "cython",
   "importlib.machinery.ExtensionFileLoader",
   "numpy.float64",
   "numpy.random.PCG64",
   "os.path.dirname",
   "os.path.join",
   "pytest.mark.skipif",
   "pytest.mark.slow",
   "shutil.copytree",
   "subprocess.check_call",
   "sys.executable"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_extending.test_numba": {
  "lineno": 88,
  "symbols_in_volume": [
   "cffi",
   "numba",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.MT19937"
  ],
  "type": "module"
 },
 "numpy.random.tests.test_generator_mt19937.TestBinomial": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestBinomial.test_n_zero": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBinomial.test_p_is_nan": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast": {
  "lineno": 1690,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.setup": {
  "lineno": 1693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_beta": {
  "lineno": 1730,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_binomial": {
  "lineno": 2077,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_chisquare": {
  "lineno": 1852,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_exponential": {
  "lineno": 1748,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_f": {
  "lineno": 1790,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_gamma": {
  "lineno": 1769,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_geometric": {
  "lineno": 2153,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_gumbel": {
  "lineno": 1957,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_hypergeometric": {
  "lineno": 2166,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_laplace": {
  "lineno": 1939,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_logistic": {
  "lineno": 1975,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_lognormal": {
  "lineno": 1992,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_logseries": {
  "lineno": 2211,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_multinomial": {
  "lineno": 2224,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_negative_binomial": {
  "lineno": 2100,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_noncentral_chisquare": {
  "lineno": 1862,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_noncentral_f": {
  "lineno": 1811,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_noncentral_f_small_df": {
  "lineno": 1846,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_normal": {
  "lineno": 1712,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_pareto": {
  "lineno": 1909,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_poisson": {
  "lineno": 2124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_power": {
  "lineno": 1929,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_rayleigh": {
  "lineno": 2008,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_standard_gamma": {
  "lineno": 1758,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_standard_t": {
  "lineno": 1883,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_triangular": {
  "lineno": 2037,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_uniform": {
  "lineno": 1697,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_vonmises": {
  "lineno": 1893,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_wald": {
  "lineno": 2018,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_weibull": {
  "lineno": 1919,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestBroadcast.test_zipf": {
  "lineno": 2139,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.nan",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_bounds_checking": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_bounds_checking_array": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_error_byteorder": {
  "lineno": 680,
  "symbols_in_volume": [
   "pytest.raises",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_full_range": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.iinfo"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_full_range_array": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.iinfo"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_in_bounds_fuzz": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_int64_uint64_broadcast_exceptions": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.testing.assert_raises",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_int64_uint64_corner_case": {
  "lineno": 609,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "numpy.testing.assert_equal",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_integers_small_dtype_chisquared": {
  "lineno": 686,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint8",
   "numpy.unique",
   "pytest.mark.parametrize",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_repeatability": {
  "lineno": 485,
  "symbols_in_volume": [
   "hashlib.md5",
   "numpy.dtype",
   "numpy.int8",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_repeatability_32bit_boundary": {
  "lineno": 543,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_repeatability_32bit_boundary_broadcasting": {
  "lineno": 558,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_repeatability_broadcasting": {
  "lineno": 520,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.iinfo",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_respect_dtype_array": {
  "lineno": 653,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.iinfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_respect_dtype_singleton": {
  "lineno": 632,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.compat.long",
   "numpy.iinfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_rng_zero_and_extremes": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_rng_zero_and_extremes_array": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_scalar_array_equiv": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_unsupported_type": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestIntegers.test_zero_size": {
  "lineno": 667,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultinomial": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultinomial.test_basic": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultinomial.test_int_negative_interval": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultinomial.test_invalid_n": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultinomial.test_invalid_prob": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultinomial.test_multidimensional_pvals": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultinomial.test_p_non_contiguous": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ascontiguousarray",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.sum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultinomial.test_size": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultinomial.test_zero_probability": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultivariateHypergeometric": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultivariateHypergeometric.setup": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultivariateHypergeometric.test_argument_validation": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultivariateHypergeometric.test_edge_cases": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.int64",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultivariateHypergeometric.test_repeatability1": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultivariateHypergeometric.test_repeatability2": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultivariateHypergeometric.test_repeatability3": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestMultivariateHypergeometric.test_typical_cases": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.setup": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_beta": {
  "lineno": 1042,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_binomial": {
  "lineno": 1051,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_bytes": {
  "lineno": 916,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_chisquare": {
  "lineno": 1064,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_exceptions": {
  "lineno": 817,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_large_sample": {
  "lineno": 907,
  "symbols_in_volume": [
   "hashlib.md5",
   "numpy.int8",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_multidimensional_custom_axis": {
  "lineno": 811,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_multidimensional_default_axis": {
  "lineno": 805,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_nan_probabilities": {
  "lineno": 881,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_noninteger": {
  "lineno": 799,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_nonuniform_noreplace": {
  "lineno": 793,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_nonuniform_replace": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_p_non_contiguous": {
  "lineno": 886,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.ones",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_return_shape": {
  "lineno": 835,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.isscalar",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_return_type": {
  "lineno": 895,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_uniform_noreplace": {
  "lineno": 784,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_choice_uniform_replace": {
  "lineno": 772,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_dirichlet": {
  "lineno": 1072,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_dirichlet_alpha_non_contiguous": {
  "lineno": 1114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ascontiguousarray",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_dirichlet_bad_alpha": {
  "lineno": 1103,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_dirichlet_moderately_small_alpha": {
  "lineno": 1139,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_allclose",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_dirichlet_size": {
  "lineno": 1091,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_dirichlet_small_alpha": {
  "lineno": 1124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_exponential": {
  "lineno": 1149,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_exponential_0": {
  "lineno": 1157,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_f": {
  "lineno": 1161,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_gamma": {
  "lineno": 1169,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_gamma_0": {
  "lineno": 1177,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_geometric": {
  "lineno": 1181,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_geometric_exceptions": {
  "lineno": 1189,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_gumbel": {
  "lineno": 1198,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_gumbel_0": {
  "lineno": 1206,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_hypergeometric": {
  "lineno": 1210,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_integers": {
  "lineno": 711,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_integers_closed": {
  "lineno": 725,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_integers_masked": {
  "lineno": 717,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_integers_max_int": {
  "lineno": 731,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_laplace": {
  "lineno": 1236,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_laplace_0": {
  "lineno": 1244,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_logistic": {
  "lineno": 1248,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_lognormal": {
  "lineno": 1256,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_lognormal_0": {
  "lineno": 1264,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_logseries": {
  "lineno": 1268,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_logseries_exceptions": {
  "lineno": 1276,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_multinomial": {
  "lineno": 1281,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_multivariate_normal": {
  "lineno": 1292,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.eye",
   "numpy.float32",
   "numpy.linalg.LinAlgError",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_no_warnings",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "numpy.testing.suppress_warnings",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_multivariate_normal_basic_stats": {
  "lineno": 1366,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_negative_binomial": {
  "lineno": 1379,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_negative_binomial_exceptions": {
  "lineno": 1387,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_negative_binomial_p0_exception": {
  "lineno": 1393,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_noncentral_chisquare": {
  "lineno": 1398,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_noncentral_f": {
  "lineno": 1419,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_noncentral_f_nan": {
  "lineno": 1428,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.Generator",
   "numpy.random.MT19937"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_normal": {
  "lineno": 1433,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_normal_0": {
  "lineno": 1441,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_out_size_mismatch": {
  "lineno": 1556,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_pareto": {
  "lineno": 1445,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal_nulp"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_permutation": {
  "lineno": 996,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.atleast_2d",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_permutation_custom_axis": {
  "lineno": 1021,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_permutation_exceptions": {
  "lineno": 1034,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_poisson": {
  "lineno": 1459,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_poisson_exceptions": {
  "lineno": 1467,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.iinfo",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_power": {
  "lineno": 1478,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_random": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_random_float": {
  "lineno": 755,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_random_float_scalar": {
  "lineno": 763,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_random_unsupported_type": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_rayleigh": {
  "lineno": 1486,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_rayleigh_0": {
  "lineno": 1494,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_scalar_exception_propagation": {
  "lineno": 1619,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat": {
  "lineno": 1626,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat.__float__": {
  "lineno": 1627,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger": {
  "lineno": 1634,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger.__int__": {
  "lineno": 1635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_shuffle": {
  "lineno": 922,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.complex64",
   "numpy.float32",
   "numpy.int32",
   "numpy.int8",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.recarray",
   "numpy.testing.assert_array_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_shuffle_axis_nonsquare": {
  "lineno": 963,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_shuffle_custom_axis": {
  "lineno": 949,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_shuffle_exceptions": {
  "lineno": 986,
  "symbols_in_volume": [
   "numpy.AxisError",
   "numpy.arange",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_shuffle_masked": {
  "lineno": 972,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.masked_values",
   "numpy.reshape",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_cauchy": {
  "lineno": 1498,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_expoential_type_error": {
  "lineno": 1514,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_exponential": {
  "lineno": 1506,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_gamma": {
  "lineno": 1517,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_gamma_0": {
  "lineno": 1563,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_gamma_float": {
  "lineno": 1531,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_gamma_unknown_type": {
  "lineno": 1552,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_gammma_float_out": {
  "lineno": 1539,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_gammma_scalar_float": {
  "lineno": 1525,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_normal": {
  "lineno": 1567,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_normal_unsupported_type": {
  "lineno": 1575,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_standard_t": {
  "lineno": 1578,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_triangular": {
  "lineno": 1586,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_uniform": {
  "lineno": 1595,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_uniform_range_bounds": {
  "lineno": 1603,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.inf",
   "numpy.nextafter",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_vonmises": {
  "lineno": 1641,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_vonmises_nan": {
  "lineno": 1655,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_vonmises_small": {
  "lineno": 1649,
  "symbols_in_volume": [
   "numpy.isfinite",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_wald": {
  "lineno": 1660,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_weibull": {
  "lineno": 1668,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_weibull_0": {
  "lineno": 1676,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestRandomDist.test_zipf": {
  "lineno": 1681,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSeed": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestSeed.test_array": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSeed.test_invalid_array": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.random.MT19937",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSeed.test_invalid_scalar": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.random.MT19937",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSeed.test_noninstantized_bitgen": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSeed.test_scalar": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSeed.test_seedsequence": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.random.MT19937",
   "numpy.random.SeedSequence",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSetState": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestSetState.setup": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.MT19937"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSetState.test_gaussian_reset": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSetState.test_gaussian_reset_in_media_res": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSetState.test_negative_binomial": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSingleEltArrayInput": {
  "lineno": 2289,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestSingleEltArrayInput.setup": {
  "lineno": 2290,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSingleEltArrayInput.test_integers": {
  "lineno": 2342,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSingleEltArrayInput.test_one_arg_funcs": {
  "lineno": 2296,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSingleEltArrayInput.test_three_arg_funcs": {
  "lineno": 2359,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestSingleEltArrayInput.test_two_arg_funcs": {
  "lineno": 2315,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestThread": {
  "lineno": 2242,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937.TestThread.check_function": {
  "lineno": 2247,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.intp",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "sys.platform",
   "threading.Thread"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestThread.setup": {
  "lineno": 2244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestThread.test_exp": {
  "lineno": 2275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestThread.test_exp.gen_random": {
  "lineno": 2276,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestThread.test_multinomial": {
  "lineno": 2281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestThread.test_multinomial.gen_random": {
  "lineno": 2282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestThread.test_normal": {
  "lineno": 2269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.TestThread.test_normal.gen_random": {
  "lineno": 2270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.endpoint": {
  "lineno": 38,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.test_broadcast_size_error": {
  "lineno": 2402,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.test_broadcast_size_scalar": {
  "lineno": 2445,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937.test_jumped": {
  "lineno": 2374,
  "symbols_in_volume": [
   "hashlib.md5",
   "numpy.random.MT19937",
   "pytest.mark.parametrize",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.MT19937"
  ],
  "type": "module"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_VonMises_range": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_beta_small_parameters": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_call_within_randomstate": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_choice_sum_of_probs_tolerance": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_gamma_0": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_hypergeometric_range": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_logseries_convergence": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.sum",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_multivariate_normal_size_types": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.int_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_permutation_subclass": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_permutation_subclass.M": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_permutation_subclass.M.__array__": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_permutation_subclass.N": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_shuffle_mixed_dimension": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_shuffle_of_array_of_different_length_strings": {
  "lineno": 93,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_generator_mt19937_regressions.TestRegression.test_shuffle_of_array_of_objects": {
  "lineno": 108,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.arange",
   "numpy.array",
   "numpy.random.Generator",
   "numpy.random.MT19937"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.random.tests.test_random.TestBinomial": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestBinomial.test_n_zero": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.random.binomial",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBinomial.test_p_is_nan": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.binomial",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast": {
  "lineno": 988,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestBroadcast.setSeed": {
  "lineno": 994,
  "symbols_in_volume": [
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.setup": {
  "lineno": 991,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_beta": {
  "lineno": 1035,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.beta",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_binomial": {
  "lineno": 1421,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.binomial",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_chisquare": {
  "lineno": 1166,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.chisquare",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_exponential": {
  "lineno": 1057,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.exponential",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_f": {
  "lineno": 1105,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.f",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_gamma": {
  "lineno": 1083,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.gamma",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_geometric": {
  "lineno": 1496,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.geometric",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_gumbel": {
  "lineno": 1291,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.gumbel",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_hypergeometric": {
  "lineno": 1509,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.hypergeometric",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_laplace": {
  "lineno": 1272,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.laplace",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_logistic": {
  "lineno": 1310,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.logistic",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_lognormal": {
  "lineno": 1329,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.lognormal",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_logseries": {
  "lineno": 1544,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.logseries",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_negative_binomial": {
  "lineno": 1444,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.negative_binomial",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_noncentral_chisquare": {
  "lineno": 1179,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.noncentral_chisquare",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_noncentral_f": {
  "lineno": 1127,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.noncentral_f",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_noncentral_f_small_df": {
  "lineno": 1160,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.noncentral_f",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_normal": {
  "lineno": 1016,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.normal",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_pareto": {
  "lineno": 1233,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.pareto",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_poisson": {
  "lineno": 1467,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.random.poisson",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_power": {
  "lineno": 1259,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.power",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_rayleigh": {
  "lineno": 1348,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rayleigh",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_standard_gamma": {
  "lineno": 1070,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.standard_gamma",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_standard_t": {
  "lineno": 1201,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.standard_t",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_triangular": {
  "lineno": 1385,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.triangular",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_uniform": {
  "lineno": 1000,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.uniform",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_vonmises": {
  "lineno": 1214,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.vonmises",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_wald": {
  "lineno": 1361,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.wald",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_weibull": {
  "lineno": 1246,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.weibull",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_zipf": {
  "lineno": 1482,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.nan",
   "numpy.random.zipf",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_basic": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.random.multinomial"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_int_negative_interval": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.randint",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_multidimensional_pvals": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.multinomial",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_size": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.multinomial",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_zero_probability": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.random.multinomial"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.randint",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestRandint.test_bounds_checking": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.iinfo",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_full_range": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.iinfo"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_in_bounds_fuzz": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.random.seed",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_int64_uint64_corner_case": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "numpy.random.randint",
   "numpy.testing.assert_equal",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_repeatability": {
  "lineno": 212,
  "symbols_in_volume": [
   "hashlib.md5",
   "numpy.dtype",
   "numpy.int8",
   "numpy.random.seed",
   "numpy.testing.assert_",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_respect_dtype_singleton": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.compat.long",
   "numpy.dtype",
   "numpy.iinfo",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_rng_zero_and_extremes": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.iinfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_unsupported_type": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestRandomDist.setup": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_beta": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.beta",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_binomial": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.binomial",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_bytes": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "numpy.random.seed",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_chisquare": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.chisquare",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_exceptions": {
  "lineno": 397,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_nan_probabilities": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_noninteger": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_nonuniform_noreplace": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_nonuniform_replace": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_return_shape": {
  "lineno": 416,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.isscalar",
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_uniform_noreplace": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_uniform_replace": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_dirichlet": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.mtrand.dirichlet",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_dirichlet_bad_alpha": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.dirichlet",
   "numpy.random.mtrand.dirichlet",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_dirichlet_size": {
  "lineno": 550,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.dirichlet",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_exponential": {
  "lineno": 573,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.exponential",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_exponential_0": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.random.exponential",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_f": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.f",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_gamma": {
  "lineno": 593,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.gamma",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_gamma_0": {
  "lineno": 601,
  "symbols_in_volume": [
   "numpy.random.gamma",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_geometric": {
  "lineno": 605,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.geometric",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_gumbel": {
  "lineno": 613,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.gumbel",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_gumbel_0": {
  "lineno": 621,
  "symbols_in_volume": [
   "numpy.random.gumbel",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_hypergeometric": {
  "lineno": 625,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.hypergeometric",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_laplace": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.laplace",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_laplace_0": {
  "lineno": 659,
  "symbols_in_volume": [
   "numpy.random.laplace",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_logistic": {
  "lineno": 663,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.logistic",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_lognormal": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.lognormal",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_lognormal_0": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.random.lognormal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_logseries": {
  "lineno": 683,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.logseries",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_multinomial": {
  "lineno": 691,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.multinomial",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_multivariate_normal": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.random.multivariate_normal",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_no_warnings",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_negative_binomial": {
  "lineno": 742,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.negative_binomial",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_noncentral_chisquare": {
  "lineno": 750,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.noncentral_chisquare",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_noncentral_f": {
  "lineno": 771,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.noncentral_f",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_normal": {
  "lineno": 780,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_normal_0": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_pareto": {
  "lineno": 792,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.pareto",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal_nulp"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_poisson": {
  "lineno": 807,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.poisson",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_poisson_exceptions": {
  "lineno": 815,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.random.poisson",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_power": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.power",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_rand": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_randint": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_randn": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_random": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.random",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_random_integers": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.random_integers",
   "numpy.random.seed",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_random_integers_deprecated": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.random.random_integers",
   "numpy.testing.assert_raises",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_random_integers_max_int": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.random.random_integers",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_rayleigh": {
  "lineno": 831,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rayleigh",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_rayleigh_0": {
  "lineno": 839,
  "symbols_in_volume": [
   "numpy.random.rayleigh",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_scalar_exception_propagation": {
  "lineno": 920,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.hypergeometric",
   "numpy.random.uniform",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat": {
  "lineno": 927,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat.__float__": {
  "lineno": 928,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger": {
  "lineno": 935,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger.__int__": {
  "lineno": 936,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_shuffle": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.complex64",
   "numpy.float32",
   "numpy.int32",
   "numpy.int8",
   "numpy.random.seed",
   "numpy.random.shuffle",
   "numpy.recarray",
   "numpy.testing.assert_array_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_shuffle_masked": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.masked_values",
   "numpy.random.shuffle",
   "numpy.reshape",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_cauchy": {
  "lineno": 843,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.standard_cauchy",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_exponential": {
  "lineno": 851,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.standard_exponential",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_gamma": {
  "lineno": 859,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.standard_gamma",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_gamma_0": {
  "lineno": 867,
  "symbols_in_volume": [
   "numpy.random.standard_gamma",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_normal": {
  "lineno": 871,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.standard_normal",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_t": {
  "lineno": 879,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.standard_t",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_triangular": {
  "lineno": 887,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.triangular",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_uniform": {
  "lineno": 896,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_uniform_range_bounds": {
  "lineno": 904,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.inf",
   "numpy.nextafter",
   "numpy.random.uniform",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_vonmises": {
  "lineno": 944,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.vonmises",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_vonmises_small": {
  "lineno": 952,
  "symbols_in_volume": [
   "numpy.isfinite",
   "numpy.random.seed",
   "numpy.random.vonmises",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_wald": {
  "lineno": 958,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.wald",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_weibull": {
  "lineno": 966,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.weibull",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_weibull_0": {
  "lineno": 974,
  "symbols_in_volume": [
   "numpy.random.seed",
   "numpy.random.weibull",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_zipf": {
  "lineno": 979,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.zipf",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSeed": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestSeed.test_array": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSeed.test_invalid_array": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSeed.test_invalid_array_shape": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.random.RandomState",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSeed.test_invalid_scalar": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSeed.test_scalar": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestSetState.setup": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_backwards_compatibility": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_basic": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_gaussian_reset": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_gaussian_reset_in_media_res": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_negative_binomial": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSingleEltArrayInput": {
  "lineno": 1602,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestSingleEltArrayInput.setup": {
  "lineno": 1603,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSingleEltArrayInput.test_one_arg_funcs": {
  "lineno": 1609,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.chisquare",
   "numpy.random.exponential",
   "numpy.random.geometric",
   "numpy.random.logseries",
   "numpy.random.pareto",
   "numpy.random.poisson",
   "numpy.random.power",
   "numpy.random.rayleigh",
   "numpy.random.standard_gamma",
   "numpy.random.standard_t",
   "numpy.random.weibull",
   "numpy.random.zipf",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSingleEltArrayInput.test_three_arg_funcs": {
  "lineno": 1673,
  "symbols_in_volume": [
   "numpy.random.hypergeometric",
   "numpy.random.noncentral_f",
   "numpy.random.triangular",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSingleEltArrayInput.test_two_arg_funcs": {
  "lineno": 1628,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.beta",
   "numpy.random.binomial",
   "numpy.random.f",
   "numpy.random.gamma",
   "numpy.random.gumbel",
   "numpy.random.laplace",
   "numpy.random.logistic",
   "numpy.random.lognormal",
   "numpy.random.negative_binomial",
   "numpy.random.noncentral_chisquare",
   "numpy.random.normal",
   "numpy.random.uniform",
   "numpy.random.vonmises",
   "numpy.random.wald",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread": {
  "lineno": 1558,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_random.TestThread.check_function": {
  "lineno": 1563,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.intp",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "sys.platform",
   "threading.Thread"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.setup": {
  "lineno": 1560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_exp": {
  "lineno": 1590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_exp.gen_random": {
  "lineno": 1591,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_multinomial": {
  "lineno": 1595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_multinomial.gen_random": {
  "lineno": 1596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_normal": {
  "lineno": 1585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_normal.gen_random": {
  "lineno": 1586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.ones"
  ],
  "type": "module"
 },
 "numpy.random.tests.test_randomstate.TestBinomial": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestBinomial.test_n_zero": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.random.binomial",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBinomial.test_p_is_nan": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.binomial",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast": {
  "lineno": 1272,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.set_seed": {
  "lineno": 1278,
  "symbols_in_volume": [
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.setup": {
  "lineno": 1275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_beta": {
  "lineno": 1316,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.beta",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_binomial": {
  "lineno": 1717,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.binomial",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_chisquare": {
  "lineno": 1449,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.chisquare",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_exponential": {
  "lineno": 1338,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.exponential",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_f": {
  "lineno": 1386,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.f",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_gamma": {
  "lineno": 1364,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.gamma",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_geometric": {
  "lineno": 1792,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.geometric",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_gumbel": {
  "lineno": 1578,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.gumbel",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_hypergeometric": {
  "lineno": 1805,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.hypergeometric",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_laplace": {
  "lineno": 1559,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.laplace",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_logistic": {
  "lineno": 1597,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.logistic",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_lognormal": {
  "lineno": 1617,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.lognormal",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_logseries": {
  "lineno": 1845,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.logseries",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_negative_binomial": {
  "lineno": 1740,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.negative_binomial",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_noncentral_chisquare": {
  "lineno": 1462,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.noncentral_chisquare",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_noncentral_f": {
  "lineno": 1408,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.noncentral_f",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_noncentral_f_small_df": {
  "lineno": 1443,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.noncentral_f",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_normal": {
  "lineno": 1297,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.normal",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_pareto": {
  "lineno": 1517,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.pareto",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_poisson": {
  "lineno": 1763,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.random.poisson",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_power": {
  "lineno": 1545,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.power",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_rayleigh": {
  "lineno": 1638,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rayleigh",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_standard_gamma": {
  "lineno": 1351,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.standard_gamma",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_standard_t": {
  "lineno": 1484,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.standard_t",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_triangular": {
  "lineno": 1677,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.triangular",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_uniform": {
  "lineno": 1281,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.uniform",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_vonmises": {
  "lineno": 1498,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.vonmises",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_wald": {
  "lineno": 1651,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.wald",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_weibull": {
  "lineno": 1531,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.weibull",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestBroadcast.test_zipf": {
  "lineno": 1778,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.nan",
   "numpy.random.zipf",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestMultinomial": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestMultinomial.test_basic": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.random.multinomial"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestMultinomial.test_int_negative_interval": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.randint",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestMultinomial.test_invalid_n": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.random.multinomial",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestMultinomial.test_invalid_prob": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.random.multinomial",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestMultinomial.test_p_non_contiguous": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ascontiguousarray",
   "numpy.random.multinomial",
   "numpy.random.seed",
   "numpy.sum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestMultinomial.test_size": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.multinomial",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestMultinomial.test_zero_probability": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.random.multinomial"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandint": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.randint",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestRandint.test_bounds_checking": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.iinfo",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandint.test_full_range": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.iinfo"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandint.test_in_bounds_fuzz": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.random.seed",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandint.test_int64_uint64_corner_case": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "numpy.random.randint",
   "numpy.testing.assert_equal",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandint.test_repeatability": {
  "lineno": 321,
  "symbols_in_volume": [
   "hashlib.md5",
   "numpy.dtype",
   "numpy.int8",
   "numpy.random.seed",
   "numpy.testing.assert_",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandint.test_repeatability_32bit_boundary_broadcasting": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandint.test_respect_dtype_singleton": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.compat.long",
   "numpy.dtype",
   "numpy.iinfo",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandint.test_rng_zero_and_extremes": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.iinfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandint.test_unsupported_type": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.setup": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_beta": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.beta",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_binomial": {
  "lineno": 738,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.binomial",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_bytes": {
  "lineno": 655,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "numpy.random.seed",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_chisquare": {
  "lineno": 751,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.chisquare",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_choice_exceptions": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_choice_nan_probabilities": {
  "lineno": 641,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_choice_noninteger": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_choice_nonuniform_noreplace": {
  "lineno": 564,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_choice_nonuniform_replace": {
  "lineno": 552,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_choice_p_non_contiguous": {
  "lineno": 646,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.ones",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_choice_return_shape": {
  "lineno": 595,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.isscalar",
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_choice_uniform_noreplace": {
  "lineno": 558,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_choice_uniform_replace": {
  "lineno": 546,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_dirichlet": {
  "lineno": 759,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.dirichlet",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_dirichlet_alpha_non_contiguous": {
  "lineno": 795,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ascontiguousarray",
   "numpy.random.dirichlet",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_dirichlet_bad_alpha": {
  "lineno": 790,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.dirichlet",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_dirichlet_size": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.dirichlet",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_exponential": {
  "lineno": 805,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.exponential",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_exponential_0": {
  "lineno": 813,
  "symbols_in_volume": [
   "numpy.random.exponential",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_f": {
  "lineno": 817,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.f",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_gamma": {
  "lineno": 825,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.gamma",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_gamma_0": {
  "lineno": 833,
  "symbols_in_volume": [
   "numpy.random.gamma",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_geometric": {
  "lineno": 837,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.geometric",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_geometric_exceptions": {
  "lineno": 845,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.geometric",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_gumbel": {
  "lineno": 855,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.gumbel",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_gumbel_0": {
  "lineno": 863,
  "symbols_in_volume": [
   "numpy.random.gumbel",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_hypergeometric": {
  "lineno": 867,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.hypergeometric",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_laplace": {
  "lineno": 893,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.laplace",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_laplace_0": {
  "lineno": 901,
  "symbols_in_volume": [
   "numpy.random.laplace",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_logistic": {
  "lineno": 905,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.logistic",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_lognormal": {
  "lineno": 913,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.lognormal",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_lognormal_0": {
  "lineno": 921,
  "symbols_in_volume": [
   "numpy.random.lognormal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_logseries": {
  "lineno": 925,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.logseries",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_logseries_exceptions": {
  "lineno": 933,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.logseries",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_multinomial": {
  "lineno": 939,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.multinomial",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_multivariate_normal": {
  "lineno": 950,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.eye",
   "numpy.float32",
   "numpy.random.multivariate_normal",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_no_warnings",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "numpy.testing.suppress_warnings",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_negative_binomial": {
  "lineno": 1001,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.negative_binomial",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_negative_binomial_exceptions": {
  "lineno": 1009,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.negative_binomial",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_noncentral_chisquare": {
  "lineno": 1016,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.noncentral_chisquare",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_noncentral_f": {
  "lineno": 1037,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.noncentral_f",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_noncentral_f_nan": {
  "lineno": 1046,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.noncentral_f",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_normal": {
  "lineno": 1051,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_normal_0": {
  "lineno": 1059,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_pareto": {
  "lineno": 1063,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.pareto",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal_nulp"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_permutation": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.random.permutation",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_poisson": {
  "lineno": 1078,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.poisson",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_poisson_exceptions": {
  "lineno": 1086,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.nan",
   "numpy.random.poisson",
   "numpy.testing.assert_raises",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_power": {
  "lineno": 1098,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.power",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_rand": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_rand_singleton": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_randint": {
  "lineno": 452,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_randn": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_randn_singleton": {
  "lineno": 1154,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_random_integers": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.random_integers",
   "numpy.random.seed",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_random_integers_deprecated": {
  "lineno": 520,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.random.random_integers",
   "numpy.testing.assert_raises",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_random_integers_max_int": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.iinfo",
   "numpy.random.random_integers",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_random_sample": {
  "lineno": 534,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.random_sample",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_rayleigh": {
  "lineno": 1106,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rayleigh",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_rayleigh_0": {
  "lineno": 1114,
  "symbols_in_volume": [
   "numpy.random.rayleigh",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_scalar_exception_propagation": {
  "lineno": 1201,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.hypergeometric",
   "numpy.random.uniform",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat": {
  "lineno": 1208,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat.__float__": {
  "lineno": 1209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger": {
  "lineno": 1216,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger.__int__": {
  "lineno": 1217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_shuffle": {
  "lineno": 661,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.complex64",
   "numpy.float32",
   "numpy.int32",
   "numpy.int8",
   "numpy.random.seed",
   "numpy.random.shuffle",
   "numpy.recarray",
   "numpy.testing.assert_array_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_shuffle_masked": {
  "lineno": 688,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.masked_values",
   "numpy.random.shuffle",
   "numpy.reshape",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_standard_cauchy": {
  "lineno": 1118,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.standard_cauchy",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_standard_exponential": {
  "lineno": 1126,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.standard_exponential",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_standard_gamma": {
  "lineno": 1134,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.standard_gamma",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_standard_gamma_0": {
  "lineno": 1142,
  "symbols_in_volume": [
   "numpy.random.standard_gamma",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_standard_normal": {
  "lineno": 1146,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.standard_normal",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_standard_t": {
  "lineno": 1160,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.standard_t",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_tomaxint": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.int64",
   "numpy.random.RandomState",
   "numpy.random.seed",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_triangular": {
  "lineno": 1168,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.triangular",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_uniform": {
  "lineno": 1177,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_uniform_range_bounds": {
  "lineno": 1185,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.inf",
   "numpy.nextafter",
   "numpy.random.uniform",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_vonmises": {
  "lineno": 1223,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.vonmises",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_vonmises_nan": {
  "lineno": 1237,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.seed",
   "numpy.random.vonmises",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_vonmises_small": {
  "lineno": 1231,
  "symbols_in_volume": [
   "numpy.isfinite",
   "numpy.random.seed",
   "numpy.random.vonmises",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_wald": {
  "lineno": 1242,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.wald",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_weibull": {
  "lineno": 1250,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.weibull",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_weibull_0": {
  "lineno": 1258,
  "symbols_in_volume": [
   "numpy.random.seed",
   "numpy.random.weibull",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestRandomDist.test_zipf": {
  "lineno": 1263,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.zipf",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSeed": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestSeed.test_array": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSeed.test_cannot_seed": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.random.PCG64",
   "numpy.random.RandomState",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSeed.test_invalid_array": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSeed.test_invalid_array_shape": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.random.RandomState",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSeed.test_invalid_initialization": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.random.MT19937",
   "numpy.random.RandomState",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSeed.test_invalid_scalar": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSeed.test_scalar": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestSetState.setup": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState.test_backwards_compatibility": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState.test_basic": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState.test_gaussian_reset": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState.test_gaussian_reset_in_media_res": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState.test_get_state_warning": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.random.PCG64",
   "numpy.random.RandomState",
   "numpy.testing.assert_",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState.test_invalid_legacy_state_setting": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState.test_negative_binomial": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState.test_pickle": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState.test_repr": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSetState.test_state_setting": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSingleEltArrayInput": {
  "lineno": 1906,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestSingleEltArrayInput.setup": {
  "lineno": 1907,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSingleEltArrayInput.test_one_arg_funcs": {
  "lineno": 1913,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.chisquare",
   "numpy.random.exponential",
   "numpy.random.geometric",
   "numpy.random.logseries",
   "numpy.random.pareto",
   "numpy.random.poisson",
   "numpy.random.power",
   "numpy.random.rayleigh",
   "numpy.random.standard_gamma",
   "numpy.random.standard_t",
   "numpy.random.weibull",
   "numpy.random.zipf",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSingleEltArrayInput.test_three_arg_funcs": {
  "lineno": 1959,
  "symbols_in_volume": [
   "numpy.random.hypergeometric",
   "numpy.random.noncentral_f",
   "numpy.random.triangular",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestSingleEltArrayInput.test_two_arg_funcs": {
  "lineno": 1932,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.beta",
   "numpy.random.binomial",
   "numpy.random.f",
   "numpy.random.gamma",
   "numpy.random.gumbel",
   "numpy.random.laplace",
   "numpy.random.logistic",
   "numpy.random.lognormal",
   "numpy.random.negative_binomial",
   "numpy.random.noncentral_chisquare",
   "numpy.random.normal",
   "numpy.random.uniform",
   "numpy.random.vonmises",
   "numpy.random.wald",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestThread": {
  "lineno": 1859,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate.TestThread.check_function": {
  "lineno": 1864,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.intp",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "sys.platform",
   "threading.Thread"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestThread.setup": {
  "lineno": 1861,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestThread.test_exp": {
  "lineno": 1892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestThread.test_exp.gen_random": {
  "lineno": 1893,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestThread.test_multinomial": {
  "lineno": 1898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestThread.test_multinomial.gen_random": {
  "lineno": 1899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestThread.test_normal": {
  "lineno": 1886,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.TestThread.test_normal.gen_random": {
  "lineno": 1887,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.assert_mt19937_state_equal": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.int_func": {
  "lineno": 50,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.test_broadcast_size_error": {
  "lineno": 1994,
  "symbols_in_volume": [
   "numpy.random.binomial",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.test_integer_dtype": {
  "lineno": 1975,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.random",
   "numpy.random.seed",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate.test_integer_repeat": {
  "lineno": 1983,
  "symbols_in_volume": [
   "hashlib.md5",
   "numpy.int8",
   "numpy.random",
   "numpy.random.seed",
   "numpy.testing.assert_",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_VonMises_range": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.linspace",
   "numpy.pi",
   "numpy.random.vonmises",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_beta_small_parameters": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "numpy.random.beta",
   "numpy.random.seed",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_call_within_randomstate": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_choice_retun_dtype": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_choice_sum_of_probs_tolerance": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_hypergeometric_range": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.hypergeometric",
   "numpy.testing.assert_",
   "sys.maxsize",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_logseries_convergence": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.random.logseries",
   "numpy.random.seed",
   "numpy.sum",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_multivariate_normal_size_types": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.int_",
   "numpy.random.multivariate_normal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_n_zero_stream": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.binomial",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_named_argument_initialization": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_p_zero_stream": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.random.binomial",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_permutation_subclass": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.permutation",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_permutation_subclass.M": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_permutation_subclass.M.__array__": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_permutation_subclass.N": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_randint_117": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_shuffle_mixed_dimension": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.shuffle",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_shuffle_of_array_of_different_length_strings": {
  "lineno": 104,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_shuffle_of_array_of_objects": {
  "lineno": 119,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.arange",
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_randomstate_regression.TestRegression.test_warns_byteorder": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pytest.deprecated_call",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.random.tests.test_regression.TestRegression": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_regression.TestRegression.test_VonMises_range": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.linspace",
   "numpy.pi",
   "numpy.random.mtrand.vonmises",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_beta_small_parameters": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "numpy.random.beta",
   "numpy.random.seed",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_call_within_randomstate": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_choice_sum_of_probs_tolerance": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_hypergeometric_range": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.hypergeometric",
   "numpy.testing.assert_",
   "sys.maxsize",
   "sys.platform"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_logseries_convergence": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.random.logseries",
   "numpy.random.seed",
   "numpy.sum",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_multivariate_normal_size_types": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.int_",
   "numpy.random.multivariate_normal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_permutation_subclass": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.permutation",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_permutation_subclass.M": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_regression.TestRegression.test_permutation_subclass.M.__array__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_permutation_subclass.N": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.random.tests.test_regression.TestRegression.test_shuffle_mixed_dimension": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.shuffle",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_shuffle_of_array_of_different_length_strings": {
  "lineno": 100,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_shuffle_of_array_of_objects": {
  "lineno": 115,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.arange",
   "numpy.array",
   "numpy.random.seed",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_seed_sequence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.random.tests.test_seed_sequence.test_reference_data": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.SeedSequence",
   "numpy.testing.assert_array_equal",
   "numpy.uint32",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_seed_sequence.test_zero_padding": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.not_equal",
   "numpy.random.SeedSequence",
   "numpy.testing.assert_array_compare",
   "numpy.testing.assert_array_equal",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.random.tests.test_smoke.RNG": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_smoke.RNG._extra_setup": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG._reset_state": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.setup_class": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.PCG64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_advance": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_beta": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_binomial": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_bytes": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_chisquare": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_dirichlet": {
  "lineno": 430,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_entropy_init": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_exponential": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_f": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_gamma": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_gamma_floats": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.Generator",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_geometric": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_gumbel": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_hypergeometric": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isscalar",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_init": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_integers": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_integers_broadcast": {
  "lineno": 656,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.iinfo",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_integers_broadcast_errors": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.iinfo",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_integers_numpy": {
  "lineno": 689,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_jump": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_laplace": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_logitic": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_logseries": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_multinomial": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_multivariate_normal": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_negative_binomial": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_noncentral_chisquare": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_noncentral_f": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_normal": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_normal_floats": {
  "lineno": 512,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.Generator",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_normal_zig_floats": {
  "lineno": 525,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.Generator",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_output_fill": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_output_fill_error": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.float64",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_output_filling_exponential": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_output_filling_gamma": {
  "lineno": 596,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_output_filling_gamma_broadcast": {
  "lineno": 614,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_output_filling_uniform": {
  "lineno": 560,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_pareto": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_permutation": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_pickle": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_poisson": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_power": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_random": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_rayleigh": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_reset_state": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_reset_state_float": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_reset_state_gauss": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_reset_state_uint32": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.testing.assert_array_equal",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_seed": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_seed_array": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.mod",
   "numpy.testing.assert_",
   "numpy.uint32",
   "numpy.uint64",
   "pytest.skip"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_shuffle": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_standard_cauchy": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_standard_exponential": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_standard_exponential_float": {
  "lineno": 192,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.float32",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_standard_exponential_float_log": {
  "lineno": 198,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.float32",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_standard_gamma": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_standard_normal": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_standard_normal_zig": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_standard_t": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_triangular": {
  "lineno": 407,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isscalar",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_uniform": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_uniform_array": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_uniform_float": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.Generator",
   "numpy.testing.assert_",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_vonmises": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_wald": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_weibull": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.RNG.test_zipf": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.TestDefaultRNG": {
  "lineno": 778,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_smoke.TestDefaultRNG.setup_class": {
  "lineno": 779,
  "symbols_in_volume": [
   "numpy.random.PCG64",
   "numpy.random.default_rng"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.TestDefaultRNG.test_default_is_pcg64": {
  "lineno": 791,
  "symbols_in_volume": [
   "numpy.random.PCG64",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.TestDefaultRNG.test_seed": {
  "lineno": 796,
  "symbols_in_volume": [
   "numpy.random.default_rng",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.TestMT19937": {
  "lineno": 720,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_smoke.TestMT19937.setup_class": {
  "lineno": 721,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.MT19937"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.TestMT19937.test_numpy_state": {
  "lineno": 732,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.TestPCG64": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_smoke.TestPCG64.setup_class": {
  "lineno": 767,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.PCG64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.TestPhilox": {
  "lineno": 742,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_smoke.TestPhilox.setup_class": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.Philox"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.TestSFC64": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.random.tests.test_smoke.TestSFC64.setup_class": {
  "lineno": 755,
  "symbols_in_volume": [
   "numpy.random.Generator",
   "numpy.random.SFC64"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.comp_state": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.dtype": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.params_0": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.isscalar",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.params_1": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.random.tests.test_smoke.warmup": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.random.randint",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.setup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.setup.configuration": {
  "lineno": 3,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration"
  ],
  "type": "function"
 },
 "numpy.testing": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy._pytesttester.PytestTester"
  ],
  "type": "module"
 },
 "numpy.testing._private": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.testing._private.decorators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.testing._private.decorators.deprecated": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.deprecated.deprecate_decorator": {
  "lineno": 247,
  "symbols_in_volume": [
   "nose.tools.make_decorator"
  ],
  "type": "function"
 },
 "numpy.testing._private.decorators.deprecated.deprecate_decorator._deprecated_imp": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.knownfailureif": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.knownfailureif.knownfail_decorator": {
  "lineno": 207,
  "symbols_in_volume": [
   "nose.tools.make_decorator"
  ],
  "type": "function"
 },
 "numpy.testing._private.decorators.knownfailureif.knownfail_decorator.knownfailer": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.parametrize": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.setastest": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.setastest.set_test": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.skipif": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.skipif.skip_decorator": {
  "lineno": 121,
  "symbols_in_volume": [
   "nose.tools.make_decorator",
   "nose.util.isgenerator"
  ],
  "type": "function"
 },
 "numpy.testing._private.decorators.skipif.skip_decorator.get_msg": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.skipif.skip_decorator.skipper_func": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.skipif.skip_decorator.skipper_gen": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.decorators.slow": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.noseclasses": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.get_printoptions"
  ],
  "type": "module"
 },
 "numpy.testing._private.noseclasses.FPUModeCheckPlugin": {
  "lineno": 319,
  "symbols_in_volume": [
   "nose.plugins.base.Plugin"
  ],
  "type": "class"
 },
 "numpy.testing._private.noseclasses.FPUModeCheckPlugin.prepareTestCase": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.FPUModeCheckPlugin.prepareTestCase.run": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.core._multiarray_tests.get_fpu_mode",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.KnownFailurePlugin": {
  "lineno": 290,
  "symbols_in_volume": [
   "nose.plugins.errorclass.ErrorClass",
   "nose.plugins.errorclass.ErrorClassPlugin"
  ],
  "type": "class"
 },
 "numpy.testing._private.noseclasses.KnownFailurePlugin.configure": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.KnownFailurePlugin.options": {
  "lineno": 301,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyDocTestCase": {
  "lineno": 136,
  "symbols_in_volume": [
   "nose.plugins.doctests.DocTestCase"
  ],
  "type": "class"
 },
 "numpy.testing._private.noseclasses.NumpyDocTestCase.__init__": {
  "lineno": 137,
  "symbols_in_volume": [
   "doctest.DocTestCase.__init__"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyDocTestFinder": {
  "lineno": 28,
  "symbols_in_volume": [
   "doctest.DocTestFinder"
  ],
  "type": "class"
 },
 "numpy.testing._private.noseclasses.NumpyDocTestFinder._find": {
  "lineno": 58,
  "symbols_in_volume": [
   "doctest.DocTestFinder._find",
   "inspect.isclass",
   "inspect.isfunction",
   "inspect.ismethod",
   "inspect.ismodule",
   "inspect.isroutine"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyDocTestFinder._from_module": {
  "lineno": 30,
  "symbols_in_volume": [
   "inspect.getmodule",
   "inspect.isbuiltin",
   "inspect.isclass",
   "inspect.isfunction",
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyDoctest": {
  "lineno": 149,
  "symbols_in_volume": [
   "doctest.ELLIPSIS",
   "doctest.NORMALIZE_WHITESPACE",
   "nose.plugins.doctests.Doctest"
  ],
  "type": "class"
 },
 "numpy.testing._private.noseclasses.NumpyDoctest.afterContext": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.set_printoptions"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyDoctest.configure": {
  "lineno": 175,
  "symbols_in_volume": [
   "doctest.DocTestParser",
   "nose.plugins.base.Plugin.configure"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyDoctest.loadTestsFromModule": {
  "lineno": 230,
  "symbols_in_volume": [
   "nose.plugins.doctests.log.debug",
   "nose.util.src"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyDoctest.options": {
  "lineno": 166,
  "symbols_in_volume": [
   "nose.plugins.base.Plugin.options",
   "os.environ"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyDoctest.set_test_context": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyDoctest.wantFile": {
  "lineno": 262,
  "symbols_in_volume": [
   "nose.plugins.doctests.Doctest.wantFile",
   "os.path.basename"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyOutputChecker": {
  "lineno": 107,
  "symbols_in_volume": [
   "doctest.OutputChecker"
  ],
  "type": "class"
 },
 "numpy.testing._private.noseclasses.NumpyOutputChecker.check_output": {
  "lineno": 108,
  "symbols_in_volume": [
   "doctest.OutputChecker.check_output"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.NumpyTestProgram": {
  "lineno": 346,
  "symbols_in_volume": [
   "nose.core.TestProgram"
  ],
  "type": "class"
 },
 "numpy.testing._private.noseclasses.NumpyTestProgram.runTests": {
  "lineno": 347,
  "symbols_in_volume": [
   "nose.core.TextTestRunner"
  ],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.Unplugger": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing._private.noseclasses.Unplugger.__init__": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.Unplugger.configure": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.noseclasses.Unplugger.options": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.nosetester": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.testing._private.nosetester.NoseTester": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing._private.nosetester.NoseTester.__init__": {
  "lineno": 154,
  "symbols_in_volume": [
   "os",
   "os.path.dirname",
   "sys._getframe"
  ],
  "type": "function"
 },
 "numpy.testing._private.nosetester.NoseTester._get_custom_doctester": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.nosetester.NoseTester._show_system_info": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.__file__",
   "numpy.__version__",
   "numpy.ones",
   "os.path.dirname",
   "scipy.__file__",
   "scipy.__version__",
   "sys.version.replace"
  ],
  "type": "function"
 },
 "numpy.testing._private.nosetester.NoseTester._test_argv": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.nosetester.NoseTester.bench": {
  "lineno": 465,
  "symbols_in_volume": [
   "os.sep"
  ],
  "type": "function"
 },
 "numpy.testing._private.nosetester.NoseTester.prepare_test_args": {
  "lineno": 262,
  "symbols_in_volume": [
   "nose.plugins.EntryPointPluginManager"
  ],
  "type": "function"
 },
 "numpy.testing._private.nosetester.NoseTester.test": {
  "lineno": 326,
  "symbols_in_volume": [
   "doctest.master",
   "numpy.ModuleDeprecationWarning",
   "warnings.catch_warnings",
   "warnings.filterwarnings",
   "warnings.resetwarnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.testing._private.nosetester._numpy_tester": {
  "lineno": 539,
  "symbols_in_volume": [
   "numpy",
   "numpy.__version__"
  ],
  "type": "function"
 },
 "numpy.testing._private.nosetester.get_package_name": {
  "lineno": 20,
  "symbols_in_volume": [
   "os.path.split"
  ],
  "type": "function"
 },
 "numpy.testing._private.nosetester.run_module_suite": {
  "lineno": 61,
  "symbols_in_volume": [
   "sys._getframe",
   "sys.argv"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "numpy.testing._private.parameterized.QuietOrderedDict": {
  "lineno": 116,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "class"
 },
 "numpy.testing._private.parameterized.default_doc_func": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.default_name_func": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.detect_runner": {
  "lineno": 246,
  "symbols_in_volume": [
   "inspect.stack"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized.param": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing._private.parameterized.param.__new__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.param.__repr__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.param.explicit": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.param.from_decorator": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing._private.parameterized.parameterized.__call__": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.__call__.wrapper": {
  "lineno": 296,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.__init__": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized._terrible_magic_get_defining_classes": {
  "lineno": 341,
  "symbols_in_volume": [
   "inspect.stack"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.assert_not_in_testcase_subclass": {
  "lineno": 334,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.check_input_values": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.expand": {
  "lineno": 376,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.expand.parameterized_expand_wrapper": {
  "lineno": 408,
  "symbols_in_volume": [
   "inspect.stack"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.input_as_callable": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.param_as_nose_tuple": {
  "lineno": 323,
  "symbols_in_volume": [
   "functools.wraps",
   "types.MethodType"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.param_as_standalone_func": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.param_as_standalone_func.standalone_func": {
  "lineno": 424,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized.to_safe_name": {
  "lineno": 442,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized.parameterized_argument_value_pairs": {
  "lineno": 123,
  "symbols_in_volume": [
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "numpy.testing._private.parameterized.set_test_runner": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.parameterized.short_repr": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "os.name",
   "platform.python_implementation",
   "sys",
   "sys.platform"
  ],
  "type": "module"
 },
 "numpy.testing._private.utils.GetPerformanceAttributes": {
  "lineno": 155,
  "symbols_in_volume": [
   "win32pdh.AddCounter",
   "win32pdh.CloseQuery",
   "win32pdh.CollectQueryData",
   "win32pdh.GetFormattedCounterValue",
   "win32pdh.MakeCounterPath",
   "win32pdh.OpenQuery",
   "win32pdh.PDH_FMT_LONG",
   "win32pdh.RemoveCounter"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.IgnoreException": {
  "lineno": 1908,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing._private.utils.KnownFailureException": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing._private.utils._Dummy": {
  "lineno": 1293,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "numpy.testing._private.utils._Dummy.nop": {
  "lineno": 1294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils._assert_no_gc_cycles_context": {
  "lineno": 2294,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "gc.DEBUG_SAVEALL",
   "gc.collect",
   "gc.disable",
   "gc.enable",
   "gc.garbage",
   "gc.get_debug",
   "gc.isenabled",
   "gc.set_debug",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils._assert_no_warnings_context": {
  "lineno": 1792,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils._assert_valid_refcount": {
  "lineno": 1447,
  "symbols_in_volume": [
   "gc.disable",
   "gc.enable",
   "numpy.arange",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils._assert_warns_context": {
  "lineno": 1738,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils._gen_alignment_data": {
  "lineno": 1839,
  "symbols_in_volume": [
   "numpy.core.arange",
   "numpy.core.empty",
   "numpy.core.float32",
   "numpy.core.max"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils._get_mem_available": {
  "lineno": 2467,
  "symbols_in_volume": [
   "psutil.virtual_memory",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils._integer_repr": {
  "lineno": 1709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils._no_tracing": {
  "lineno": 2491,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils._no_tracing.wrapper": {
  "lineno": 2500,
  "symbols_in_volume": [
   "functools.wraps",
   "sys.gettrace",
   "sys.settrace"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils._parse_size": {
  "lineno": 2451,
  "symbols_in_volume": [
   "re.I",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_allclose": {
  "lineno": 1473,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_allclose.compare": {
  "lineno": 1521,
  "symbols_in_volume": [
   "numpy.core.numeric.isclose"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_almost_equal": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.core.ndarray",
   "numpy.lib.imag",
   "numpy.lib.iscomplexobj",
   "numpy.lib.real"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_almost_equal._build_err_msg": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_approx_equal": {
  "lineno": 598,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.errstate",
   "numpy.floor",
   "numpy.log10",
   "numpy.power"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_array_almost_equal": {
  "lineno": 934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_array_almost_equal.compare": {
  "lineno": 1016,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.float_",
   "numpy.core.fromnumeric.any",
   "numpy.core.number",
   "numpy.core.numerictypes.issubdtype",
   "numpy.core.result_type"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_array_almost_equal_nulp": {
  "lineno": 1531,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.iscomplexobj",
   "numpy.max",
   "numpy.spacing",
   "numpy.where"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_array_compare": {
  "lineno": 697,
  "symbols_in_volume": [
   "contextlib.suppress",
   "numpy.core.all",
   "numpy.core.array",
   "numpy.core.array2string",
   "numpy.core.bool_",
   "numpy.core.errstate",
   "numpy.core.inf",
   "numpy.core.intp",
   "numpy.core.isnan",
   "numpy.core.isnat",
   "numpy.core.max",
   "numpy.core.object_",
   "traceback.format_exc"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_array_compare.func_assert_same_pos": {
  "lineno": 715,
  "symbols_in_volume": [
   "numpy.core.bool_",
   "numpy.core.isnan"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_array_compare.isnumber": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_array_compare.istime": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_array_equal": {
  "lineno": 851,
  "symbols_in_volume": [
   "operator.__eq__"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_array_less": {
  "lineno": 1047,
  "symbols_in_volume": [
   "operator.__lt__"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_array_max_ulp": {
  "lineno": 1594,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.max"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_equal": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.core.array",
   "numpy.core.isnat",
   "numpy.core.isscalar",
   "numpy.core.ndarray",
   "numpy.core.signbit",
   "numpy.lib.imag",
   "numpy.lib.iscomplexobj",
   "numpy.lib.real"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_no_gc_cycles": {
  "lineno": 2346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_no_warnings": {
  "lineno": 1803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_raises": {
  "lineno": 1299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_raises_regex": {
  "lineno": 1328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_string_equal": {
  "lineno": 1134,
  "symbols_in_volume": [
   "difflib.Differ"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.assert_warns": {
  "lineno": 1749,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.break_cycles": {
  "lineno": 2380,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.build_err_msg": {
  "lineno": 246,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.core.array_repr",
   "numpy.core.ndarray"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.check_free_memory": {
  "lineno": 2419,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.clear_and_catch_warnings": {
  "lineno": 1950,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "class"
 },
 "numpy.testing._private.utils.clear_and_catch_warnings.__enter__": {
  "lineno": 1999,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.clear_and_catch_warnings.__exit__": {
  "lineno": 2007,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.clear_and_catch_warnings.__init__": {
  "lineno": 1994,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.decorate_methods": {
  "lineno": 1352,
  "symbols_in_volume": [
   "inspect.isfunction",
   "os.sep",
   "re.compile"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.gisfinite": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.core.errstate",
   "numpy.core.isfinite"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.gisinf": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.core.errstate",
   "numpy.core.isinf"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.gisnan": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.core.isnan"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.import_nose": {
  "lineno": 55,
  "symbols_in_volume": [
   "nose",
   "nose.__versioninfo__"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.integer_repr": {
  "lineno": 1724,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.jiffies": {
  "lineno": 232,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.measure": {
  "lineno": 1399,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.memusage": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.nulp_diff": {
  "lineno": 1646,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.common_type",
   "numpy.iscomplexobj",
   "numpy.isnan",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.nulp_diff._diff": {
  "lineno": 1700,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.print_assert_equal": {
  "lineno": 431,
  "symbols_in_volume": [
   "io.StringIO",
   "pprint.pprint"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.raises": {
  "lineno": 1250,
  "symbols_in_volume": [
   "nose",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.requires_memory": {
  "lineno": 2397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.requires_memory.decorator": {
  "lineno": 2401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.requires_memory.decorator.wrapper": {
  "lineno": 2402,
  "symbols_in_volume": [
   "functools.wraps",
   "pytest.skip",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.rundocs": {
  "lineno": 1204,
  "symbols_in_volume": [
   "doctest.DocTestFinder",
   "doctest.DocTestRunner",
   "numpy.compat.npy_load_module",
   "os.path.basename",
   "os.path.splitext",
   "sys._getframe"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.runstring": {
  "lineno": 1130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.suppress_warnings": {
  "lineno": 2016,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing._private.utils.suppress_warnings.__call__": {
  "lineno": 2281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.suppress_warnings.__call__.new_func": {
  "lineno": 2286,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.suppress_warnings.__enter__": {
  "lineno": 2190,
  "symbols_in_volume": [
   "warnings.filters",
   "warnings.filterwarnings",
   "warnings.showwarning"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.suppress_warnings.__exit__": {
  "lineno": 2222,
  "symbols_in_volume": [
   "warnings.filters",
   "warnings.showwarning"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.suppress_warnings.__init__": {
  "lineno": 2090,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.suppress_warnings._clear_registries": {
  "lineno": 2100,
  "symbols_in_volume": [
   "warnings",
   "warnings._filters_mutated"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.suppress_warnings._filter": {
  "lineno": 2112,
  "symbols_in_volume": [
   "re.I",
   "re.compile",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.suppress_warnings._showwarning": {
  "lineno": 2230,
  "symbols_in_volume": [
   "warnings.WarningMessage"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.suppress_warnings.filter": {
  "lineno": 2137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.suppress_warnings.record": {
  "lineno": 2160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing._private.utils.tempdir": {
  "lineno": 1913,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "numpy.testing._private.utils.temppath": {
  "lineno": 1928,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.close",
   "os.remove",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "numpy.testing.print_coercion_tables": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.typecodes"
  ],
  "type": "module"
 },
 "numpy.testing.print_coercion_tables.GenericObject": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "class"
 },
 "numpy.testing.print_coercion_tables.GenericObject.__add__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.GenericObject.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.GenericObject.__radd__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.print_cancast_table": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.can_cast"
  ],
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.print_coercion_table": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.dtype",
   "numpy.ndarray",
   "numpy.obj2sctype",
   "numpy.promote_types"
  ],
  "type": "function"
 },
 "numpy.testing.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "numpy.testing.setup.configuration": {
  "lineno": 3,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration"
  ],
  "type": "function"
 },
 "numpy.testing.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.testing.tests.test_decorators": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.DidntSkipException": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_deprecated": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_deprecated.deprecated_func": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.testing.dec.deprecated",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_deprecated.deprecated_func2": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.testing.dec.deprecated",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_deprecated.deprecated_func3": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.testing.dec.deprecated",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_deprecated.non_deprecated_func": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.testing.dec.deprecated"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_parametrize": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_parametrize.check_parametrize": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.dec.parametrize"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_setastest": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_setastest.f_default": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.testing.dec.setastest"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_setastest.f_isnottest": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.testing.dec.setastest"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_setastest.f_istest": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.testing.dec.setastest"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_functions_callable": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.testing.SkipTest"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_functions_callable.f1": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.testing.dec.skipif"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_functions_callable.f2": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.testing.dec.skipif"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_functions_callable.skip_tester": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_functions_hardcoded": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.testing.SkipTest"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_functions_hardcoded.f1": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.testing.dec.skipif"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_functions_hardcoded.f2": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.testing.dec.skipif"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_generators_callable": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.testing.KnownFailureException"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_generators_callable.g1": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.testing.dec.knownfailureif"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_generators_callable.g2": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.testing.dec.knownfailureif"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_generators_callable.skip_tester": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_generators_hardcoded": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.testing.KnownFailureException"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_generators_hardcoded.g1": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.testing.dec.knownfailureif"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_skip_generators_hardcoded.g2": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.testing.dec.knownfailureif"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_slow": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.TestNoseDecorators.test_slow.slow_func": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.testing.dec.slow"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting": {
  "lineno": null,
  "symbols_in_volume": [
   "nose.core.TestProgram",
   "numpy.testing.noseclasses.NumpyDoctest"
  ],
  "type": "module"
 },
 "numpy.testing.tests.test_doctesting.check_empty_output": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_implicit_np": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_random_directive": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_skip": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_whitespace_enabled": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.setup": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_closeness": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_complex": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_complex_item": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_error_message": {
  "lineno": 507,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.testing.assert_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_error_message_2": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_inf_item": {
  "lineno": 480,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_nan_item": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_simple_item": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_subclass_that_cannot_be_bool": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_subclass_that_cannot_be_bool.MyArray": {
  "lineno": 586,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_subclass_that_cannot_be_bool.MyArray.__eq__": {
  "lineno": 587,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_subclass_that_cannot_be_bool.MyArray.__lt__": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_subclass_that_cannot_be_bool.MyArray.all": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.setup": {
  "lineno": 602,
  "symbols_in_volume": [
   "numpy.testing.assert_approx_equal"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_nan_array": {
  "lineno": 624,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_nan_items": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_simple_0d_arrays": {
  "lineno": 605,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_simple_items": {
  "lineno": 614,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.setup": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_closeness": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_inf": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_nan": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_simple": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.MaskedArray",
   "numpy.ma.masked",
   "numpy.ma.masked_array"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass_that_cannot_be_bool": {
  "lineno": 430,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass_that_cannot_be_bool.MyArray": {
  "lineno": 435,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass_that_cannot_be_bool.MyArray.__eq__": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass_that_cannot_be_bool.MyArray.__lt__": {
  "lineno": 439,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass_that_cannot_be_bool.MyArray.all": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp": {
  "lineno": 908,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex128_fail": {
  "lineno": 1060,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "numpy.linspace",
   "numpy.r_",
   "numpy.testing.assert_array_almost_equal_nulp",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex128_pass": {
  "lineno": 1037,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "numpy.linspace",
   "numpy.r_",
   "numpy.testing.assert_array_almost_equal_nulp"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex64_fail": {
  "lineno": 1110,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.linspace",
   "numpy.r_",
   "numpy.testing.assert_array_almost_equal_nulp",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex64_pass": {
  "lineno": 1089,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.linspace",
   "numpy.r_",
   "numpy.testing.assert_array_almost_equal_nulp"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float16_fail": {
  "lineno": 1010,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float16",
   "numpy.linspace",
   "numpy.r_",
   "numpy.testing.assert_array_almost_equal_nulp",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float16_ignore_nan": {
  "lineno": 1026,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.nan",
   "numpy.testing.assert_array_max_ulp",
   "numpy.uint16"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float16_pass": {
  "lineno": 996,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float16",
   "numpy.linspace",
   "numpy.r_",
   "numpy.testing.assert_array_almost_equal_nulp"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float32_fail": {
  "lineno": 969,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.linspace",
   "numpy.r_",
   "numpy.testing.assert_array_almost_equal_nulp",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float32_ignore_nan": {
  "lineno": 985,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.nan",
   "numpy.testing.assert_array_max_ulp",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float32_pass": {
  "lineno": 955,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.linspace",
   "numpy.r_",
   "numpy.testing.assert_array_almost_equal_nulp"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float64_fail": {
  "lineno": 928,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "numpy.linspace",
   "numpy.r_",
   "numpy.testing.assert_array_almost_equal_nulp",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float64_ignore_nan": {
  "lineno": 944,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.nan",
   "numpy.testing.assert_array_max_ulp",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float64_pass": {
  "lineno": 910,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "numpy.linspace",
   "numpy.r_",
   "numpy.testing.assert_array_almost_equal_nulp"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.setup": {
  "lineno": 645,
  "symbols_in_volume": [
   "numpy.testing.assert_array_less"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_inf_compare": {
  "lineno": 727,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_inf_compare_array": {
  "lineno": 740,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_nan_noncompare": {
  "lineno": 700,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_nan_noncompare_array": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_rank2": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_rank3": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_simple_arrays": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_simple_items": {
  "lineno": 684,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.setup": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_0_ndim_array": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank1": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank1.foo": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank3": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank3.foo": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_masked_nan_inf": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.ma.MaskedArray",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_nan_array": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_recarrays": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_string_arrays": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_subclass_that_does_not_implement_npall": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.core.overrides.ARRAY_FUNCTION_ENABLED",
   "numpy.testing.assert_raises",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_subclass_that_does_not_implement_npall.MyArray": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_subclass_that_does_not_implement_npall.MyArray.__array_function__": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_subclass_that_overrides_eq": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_subclass_that_overrides_eq.MyArray": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_subclass_that_overrides_eq.MyArray.__eq__": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.equal"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_subclass_that_overrides_eq.MyArray.__ne__": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_equal_nan": {
  "lineno": 876,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_equal_nan_default": {
  "lineno": 887,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_array_less"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_min_int": {
  "lineno": 860,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.int_",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_not_equal_nan": {
  "lineno": 882,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_report_fail_percentage": {
  "lineno": 865,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_report_max_relative_error": {
  "lineno": 898,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_",
   "numpy.testing.assert_allclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_simple": {
  "lineno": 840,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertNoGcCycles": {
  "lineno": 1540,
  "symbols_in_volume": [
   "numpy.testing.HAS_REFCOUNT",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAssertNoGcCycles.test_asserts": {
  "lineno": 1554,
  "symbols_in_volume": [
   "numpy.testing.assert_no_gc_cycles",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertNoGcCycles.test_asserts.make_cycle": {
  "lineno": 1555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertNoGcCycles.test_fails": {
  "lineno": 1568,
  "symbols_in_volume": [
   "numpy.testing.assert_no_gc_cycles",
   "numpy.testing.assert_raises",
   "pytest.mark.slow",
   "pytest.skip",
   "weakref.ref"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertNoGcCycles.test_fails.ReferenceCycleInDel": {
  "lineno": 1575,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAssertNoGcCycles.test_fails.ReferenceCycleInDel.__del__": {
  "lineno": 1585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertNoGcCycles.test_fails.ReferenceCycleInDel.__init__": {
  "lineno": 1582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertNoGcCycles.test_passes": {
  "lineno": 1543,
  "symbols_in_volume": [
   "numpy.testing.assert_no_gc_cycles"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertNoGcCycles.test_passes.no_cycle": {
  "lineno": 1544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestBuildErrorMessage": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestBuildErrorMessage.test_build_err_msg_custom_names": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.build_err_msg"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestBuildErrorMessage.test_build_err_msg_custom_precision": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.build_err_msg"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestBuildErrorMessage.test_build_err_msg_defaults": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.build_err_msg"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestBuildErrorMessage.test_build_err_msg_no_verbose": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal",
   "numpy.testing.build_err_msg"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestEqual.setup": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_complex": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_complex_item": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_datetime": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_inf_items": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_nan_items": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_nat_items": {
  "lineno": 292,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.datetime64",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_negative_zero": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_non_numeric": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_object": {
  "lineno": 343,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises": {
  "lineno": 752,
  "symbols_in_volume": [
   "pytest.mark.skip"
  ],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestRaises.does_not_raise_exception": {
  "lineno": 764,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.raises_exception": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.setup": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.setup.MyException": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_catch_no_raise": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.testing.raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_correct_catch": {
  "lineno": 767,
  "symbols_in_volume": [
   "numpy.testing.raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_wrong_exception": {
  "lineno": 770,
  "symbols_in_volume": [
   "numpy.testing.raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestStringEqual": {
  "lineno": 1194,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestStringEqual.test_regex": {
  "lineno": 1207,
  "symbols_in_volume": [
   "numpy.testing.assert_raises",
   "numpy.testing.assert_string_equal"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestStringEqual.test_simple": {
  "lineno": 1195,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_string_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP": {
  "lineno": 1138,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestULP.test_double": {
  "lineno": 1151,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "numpy.ones",
   "numpy.random.randn",
   "numpy.testing.assert_array_max_ulp"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_equal": {
  "lineno": 1140,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.testing.assert_array_max_ulp"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_inf": {
  "lineno": 1158,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.testing.assert_array_max_ulp"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_nan": {
  "lineno": 1164,
  "symbols_in_volume": [
   "numpy.NZERO",
   "numpy.PZERO",
   "numpy.array",
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_array_max_ulp",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_single": {
  "lineno": 1144,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.ones",
   "numpy.random.randn",
   "numpy.testing.assert_array_max_ulp"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_context_manager": {
  "lineno": 805,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "sys.modules.filters",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_context_manager.no_warnings": {
  "lineno": 812,
  "symbols_in_volume": [
   "numpy.testing.assert_no_warnings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn": {
  "lineno": 789,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.assert_no_warnings",
   "numpy.testing.assert_raises",
   "numpy.testing.assert_warns",
   "sys.modules.filters"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn.f": {
  "lineno": 790,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn_wrong_warning": {
  "lineno": 820,
  "symbols_in_volume": [
   "numpy.testing.assert_warns",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn_wrong_warning.f": {
  "lineno": 821,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils._GenericTest._test_equal": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest._test_not_equal": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_diffshape": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_likes": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank1_eq": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank1_noteq": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank2_eq": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_objarray": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils._get_fresh_mod": {
  "lineno": 1276,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.assert_warn_len_equal": {
  "lineno": 1214,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.my_cacw": {
  "lineno": 1526,
  "symbols_in_volume": [
   "numpy.testing.clear_and_catch_warnings",
   "sys.modules"
  ],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.test_clear_and_catch_warnings": {
  "lineno": 1288,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.clear_and_catch_warnings",
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_clear_and_catch_warnings_inherit": {
  "lineno": 1531,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_decorate_no_record": {
  "lineno": 1391,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_decorate_no_record.warn": {
  "lineno": 1395,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_forwarding": {
  "lineno": 1446,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_forwarding.warn_other_module": {
  "lineno": 1447,
  "symbols_in_volume": [
   "numpy.apply_along_axis"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_forwarding.warn_other_module.warn": {
  "lineno": 1450,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_module": {
  "lineno": 1316,
  "symbols_in_volume": [
   "numpy.lib.shape_base",
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_module.warn_other_module": {
  "lineno": 1321,
  "symbols_in_volume": [
   "numpy.apply_along_axis"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_module.warn_other_module.warn": {
  "lineno": 1324,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_record": {
  "lineno": 1406,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_type": {
  "lineno": 1362,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "numpy.testing.suppress_warnings",
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_tempdir": {
  "lineno": 1493,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.tempdir",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_temppath": {
  "lineno": 1510,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.temppath",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_warn_len_equal_call_scenarios": {
  "lineno": 1248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_warn_len_equal_call_scenarios.mod": {
  "lineno": 1266,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.testing.tests.test_utils.test_warn_len_equal_call_scenarios.mod.__init__": {
  "lineno": 1267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.testing.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "numpy.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.tests.test_ctypeslib": {
  "lineno": null,
  "symbols_in_volume": [
   "ctypes",
   "numpy.core._multiarray_tests.__file__",
   "numpy.core._multiarray_umath.__file__",
   "numpy.ctypeslib.load_library",
   "sys"
  ],
  "type": "module"
 },
 "numpy.tests.test_ctypeslib.TestAsArray": {
  "lineno": 185,
  "symbols_in_volume": [
   "ctypes",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.tests.test_ctypeslib.TestAsArray.test_array": {
  "lineno": 188,
  "symbols_in_volume": [
   "ctypes.c_int",
   "numpy.array",
   "numpy.ctypeslib.as_array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsArray.test_pointer": {
  "lineno": 199,
  "symbols_in_volume": [
   "ctypes.POINTER",
   "ctypes.c_int",
   "ctypes.cast",
   "numpy.arange",
   "numpy.ctypeslib.as_array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsArray.test_reference_cycles": {
  "lineno": 243,
  "symbols_in_volume": [
   "ctypes.POINTER",
   "ctypes.c_short",
   "ctypes.cast",
   "numpy.arange",
   "numpy.ctypeslib.as_array",
   "numpy.ctypeslib.as_ctypes",
   "numpy.short",
   "numpy.testing.assert_no_gc_cycles"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsArray.test_segmentation_fault": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.ctypeslib.as_ctypes",
   "numpy.testing.assert_",
   "numpy.zeros",
   "weakref.ref"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsArray.test_struct_array_pointer": {
  "lineno": 215,
  "symbols_in_volume": [
   "ctypes.pointer",
   "numpy.array",
   "numpy.ctypeslib.as_array",
   "numpy.int16"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsArray.test_struct_array_pointer.Struct": {
  "lineno": 218,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.c_int16"
  ],
  "type": "class"
 },
 "numpy.tests.test_ctypeslib.TestAsArray.test_struct_array_pointer.check": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsCtypesType": {
  "lineno": 276,
  "symbols_in_volume": [
   "ctypes",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.tests.test_ctypeslib.TestAsCtypesType.test_overlapping": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.ctypeslib.as_ctypes_type",
   "numpy.dtype",
   "numpy.testing.assert_raises",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsCtypesType.test_padded_union": {
  "lineno": 342,
  "symbols_in_volume": [
   "ctypes.Union",
   "ctypes.c_char",
   "ctypes.c_uint16",
   "ctypes.c_uint32",
   "ctypes.sizeof",
   "numpy.ctypeslib.as_ctypes_type",
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsCtypesType.test_scalar": {
  "lineno": 280,
  "symbols_in_volume": [
   "ctypes.c_uint16",
   "ctypes.c_uint16.__ctype_be__",
   "ctypes.c_uint16.__ctype_le__",
   "numpy.ctypeslib.as_ctypes_type",
   "numpy.dtype",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsCtypesType.test_structure": {
  "lineno": 298,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.c_uint16",
   "ctypes.c_uint32",
   "ctypes.sizeof",
   "numpy.ctypeslib.as_ctypes_type",
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsCtypesType.test_structure_aligned": {
  "lineno": 312,
  "symbols_in_volume": [
   "ctypes.Structure",
   "ctypes.c_char",
   "ctypes.c_uint16",
   "ctypes.c_uint32",
   "ctypes.sizeof",
   "numpy.ctypeslib.as_ctypes_type",
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsCtypesType.test_subarray": {
  "lineno": 293,
  "symbols_in_volume": [
   "ctypes.c_int32",
   "numpy.ctypeslib.as_ctypes_type",
   "numpy.dtype",
   "numpy.int32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestAsCtypesType.test_union": {
  "lineno": 327,
  "symbols_in_volume": [
   "ctypes.Union",
   "ctypes.c_uint16",
   "ctypes.c_uint32",
   "ctypes.sizeof",
   "numpy.ctypeslib.as_ctypes_type",
   "numpy.dtype",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.uint16",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestLoadLibrary": {
  "lineno": 34,
  "symbols_in_volume": [
   "ctypes",
   "pytest.mark.skipif",
   "sys.platform"
  ],
  "type": "class"
 },
 "numpy.tests.test_ctypeslib.TestLoadLibrary.test_basic": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.core._multiarray_umath.__file__",
   "numpy.ctypeslib.load_library"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestLoadLibrary.test_basic2": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.core._multiarray_umath.__file__",
   "numpy.ctypeslib.load_library",
   "numpy.distutils.misc_util.get_shared_lib_extension"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_cache": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.ctypeslib.ndpointer",
   "numpy.float64",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_dtype": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ctypeslib.ndpointer",
   "numpy.dtype",
   "numpy.float64",
   "numpy.intc",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_flags": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ctypeslib.ndpointer",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_ndim": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ctypeslib.ndpointer",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_shape": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ctypeslib.ndpointer",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointerCFunc": {
  "lineno": 129,
  "symbols_in_volume": [
   "ctypes",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "numpy.tests.test_ctypeslib.TestNdpointerCFunc.test_arguments": {
  "lineno": 132,
  "symbols_in_volume": [
   "ctypes.ArgumentError",
   "ctypes.c_void_p",
   "numpy.ctypeslib.ndpointer",
   "numpy.testing.assert_raises",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointerCFunc.test_return": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.ctypeslib.ndpointer",
   "numpy.dtype",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointerCFunc.test_vague_return_value": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.ctypeslib.ndpointer",
   "numpy.testing.assert_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "numpy.tests.test_matlib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.tests.test_matlib.test_empty": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.matlib.empty",
   "numpy.matrix",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.tests.test_matlib.test_eye": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.matlib.eye",
   "numpy.matrix",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.tests.test_matlib.test_identity": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.matlib.identity",
   "numpy.matrix",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.tests.test_matlib.test_ones": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.matlib.ones",
   "numpy.matrix",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.tests.test_matlib.test_rand": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.matlib.rand",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.tests.test_matlib.test_randn": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.matlib.randn",
   "numpy.testing.assert_"
  ],
  "type": "function"
 },
 "numpy.tests.test_matlib.test_repmat": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.matlib.repmat",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.tests.test_matlib.test_zeros": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.matlib.zeros",
   "numpy.matrix",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "numpy.tests.test_numpy_version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.tests.test_numpy_version.test_valid_numpy_version": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.__version__",
   "numpy.testing.assert_",
   "numpy.version.release",
   "re.match"
  ],
  "type": "function"
 },
 "numpy.tests.test_public_api": {
  "lineno": null,
  "symbols_in_volume": [
   "ctypes"
  ],
  "type": "module"
 },
 "numpy.tests.test_public_api.check_dir": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.tests.test_public_api.is_unexpected": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_NPY_NO_EXPORT": {
  "lineno": 113,
  "symbols_in_volume": [
   "ctypes",
   "ctypes.CDLL",
   "numpy.core._multiarray_tests.__file__",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_all_modules_are_expected": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.__name__",
   "numpy.__path__",
   "pkgutil.walk_packages"
  ],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_all_modules_are_expected_2": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_all_modules_are_expected_2.find_unexpected_members": {
  "lineno": 418,
  "symbols_in_volume": [
   "importlib.import_module",
   "types.ModuleType"
  ],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_api_importable": {
  "lineno": 445,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_api_importable.check_importable": {
  "lineno": 453,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_dir_testing": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_import_lazy_import": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy",
   "pytest.mark.parametrize",
   "subprocess.check_output",
   "sys.executable"
  ],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_numpy_fft": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.fft"
  ],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_numpy_linalg": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.linalg"
  ],
  "type": "function"
 },
 "numpy.tests.test_public_api.test_numpy_namespace": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "numpy.tests.test_reloading": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.tests.test_reloading.test_full_reimport": {
  "lineno": 38,
  "symbols_in_volume": [
   "subprocess.run",
   "sys.executable",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "numpy.tests.test_reloading.test_novalue": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy._NoValue",
   "numpy.compat.pickle.HIGHEST_PROTOCOL",
   "numpy.compat.pickle.dumps",
   "numpy.compat.pickle.loads",
   "numpy.testing.assert_",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "numpy.tests.test_reloading.test_numpy_reloading": {
  "lineno": 10,
  "symbols_in_volume": [
   "importlib.reload",
   "numpy",
   "numpy.ModuleDeprecationWarning",
   "numpy.VisibleDeprecationWarning",
   "numpy._NoValue",
   "numpy._globals",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "numpy.tests.test_scripts": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.__file__",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "module"
 },
 "numpy.tests.test_scripts.find_f2py_commands": {
  "lineno": 17,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "sys.executable",
   "sys.platform",
   "sys.version_info"
  ],
  "type": "function"
 },
 "numpy.tests.test_scripts.test_f2py": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "pytest.mark.xfail",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "numpy.tests.test_scripts.test_pep338": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "subprocess.check_output",
   "sys.executable"
  ],
  "type": "function"
 },
 "numpy.tests.test_warnings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "numpy.tests.test_warnings.FindFuncs": {
  "lineno": 24,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "numpy.tests.test_warnings.FindFuncs.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.tests.test_warnings.FindFuncs.visit_Call": {
  "lineno": 29,
  "symbols_in_volume": [
   "ast.NodeVisitor.generic_visit"
  ],
  "type": "function"
 },
 "numpy.tests.test_warnings.ParseCall": {
  "lineno": 12,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "numpy.tests.test_warnings.ParseCall.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.tests.test_warnings.ParseCall.visit_Attribute": {
  "lineno": 16,
  "symbols_in_volume": [
   "ast.NodeVisitor.generic_visit"
  ],
  "type": "function"
 },
 "numpy.tests.test_warnings.ParseCall.visit_Name": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "numpy.tests.test_warnings.test_warning_calls": {
  "lineno": 58,
  "symbols_in_volume": [
   "ast.parse",
   "numpy.__file__",
   "pathlib.Path",
   "pytest.mark.slow",
   "tokenize.open"
  ],
  "type": "function"
 },
 "numpy.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}