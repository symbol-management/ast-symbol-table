{
 "*": {
  "data": {
   "imports": [
    "distutils.log"
   ]
  },
  "type": "star-import"
 },
 "numpy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "PackageLoader.__call__.__doc__",
    "_numpy_tester",
    "builtins.str",
    "numpy.__NUMPY_SETUP__",
    "numpy.__all__",
    "numpy._sanity_check",
    "numpy.msg",
    "numpy.pkgload",
    "numpy.sys",
    "numpy.warnings"
   ]
  },
  "type": "module"
 },
 "numpy.__NUMPY_SETUP__": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "numpy.__all__": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "numpy.__config__": {
  "data": {
   "symbols_in_volume": [
    "numpy.__config__.extra_dll_dir",
    "numpy.__config__.os",
    "numpy.__config__.sys"
   ]
  },
  "type": "module"
 },
 "numpy.__config__.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.__config__.blas_mkl_info": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.__config__.blas_opt_info": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.__config__.blis_info": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.__config__.extra_dll_dir": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.__config__.get_info": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "globals"
   ]
  },
  "type": "function"
 },
 "numpy.__config__.lapack_mkl_info": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.__config__.lapack_opt_info": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.__config__.openblas_info": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.__config__.openblas_lapack_info": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.__config__.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.__config__.show": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "globals",
    "len",
    "print",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.__config__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.__git_revision__": {
  "data": {
   "shadows": "git_revision"
  },
  "type": "import"
 },
 "numpy.__version__": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "numpy._distributor_init": {
  "data": {},
  "type": "module"
 },
 "numpy._globals": {
  "data": {
   "symbols_in_volume": [
    "RuntimeError",
    "globals"
   ]
  },
  "type": "module"
 },
 "numpy._globals.ModuleDeprecationWarning": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "class"
 },
 "numpy._globals.VisibleDeprecationWarning": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "numpy._globals._NoValue": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy._globals.__ALL__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy._globals._is_loaded": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy._globals.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy._globals.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy._globals.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy._import_tools": {
  "data": {
   "symbols_in_volume": [
    "int",
    "numpy._import_tools.PackageLoaderDebug",
    "numpy._import_tools.os"
   ]
  },
  "type": "module"
 },
 "numpy._import_tools.PackageLoader": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "numpy._import_tools.PackageLoader.__call__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "DeprecationWarning",
    "eval",
    "getattr",
    "numpy._import_tools.warnings"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "eval",
    "exec",
    "isinstance",
    "numpy._import_tools.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._execcmd": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "Exception",
    "exec"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._format_titles": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._get_doc_title": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._get_info_files": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "glob.glob",
    "len",
    "numpy._import_tools.os"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._get_sorted_names": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "getattr",
    "list"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._init_info_modules": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "exec",
    "getattr",
    "numpy._import_tools.os",
    "numpy.compat.npy_load_module"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader._obj2repr": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "getattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader.error": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy._import_tools.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader.get_pkgdocs": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "getattr",
    "numpy._import_tools.sys"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader.log": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy._import_tools.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoader.warn": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy._import_tools.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.PackageLoaderDebug": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "numpy._import_tools.PackageLoader"
   ]
  },
  "type": "class"
 },
 "numpy._import_tools.PackageLoaderDebug._execcmd": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "exec",
    "numpy._import_tools.sys",
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy._import_tools.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy._import_tools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy._import_tools.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy._import_tools.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "numpy._import_tools.npy_load_module": {
  "data": {
   "shadows": "numpy.compat.npy_load_module"
  },
  "type": "import"
 },
 "numpy._import_tools.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy._import_tools.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy._import_tools.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy._import_tools.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy._mat": {
  "data": {
   "shadows": "matrixlib"
  },
  "type": "import"
 },
 "numpy._sanity_check": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "abs",
    "numpy.msg",
    "ones"
   ]
  },
  "type": "function"
 },
 "numpy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.add_newdocs": {
  "data": {
   "symbols_in_volume": [
    "numpy.add_newdocs.tobytesdoc",
    "numpy.lib.add_newdoc"
   ]
  },
  "type": "module"
 },
 "numpy.add_newdocs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.add_newdocs.add_newdoc": {
  "data": {
   "shadows": "numpy.lib.add_newdoc"
  },
  "type": "import"
 },
 "numpy.add_newdocs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.add_newdocs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.add_newdocs.tobytesdoc": {
  "data": {
   "lineno": 4661
  },
  "type": "constant"
 },
 "numpy.bench": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "numpy.bool": {
  "data": {
   "shadows": "__builtin__.bool"
  },
  "type": "import"
 },
 "numpy.compat": {
  "data": {
   "symbols_in_volume": [
    "numpy.compat.__all__"
   ]
  },
  "type": "module"
 },
 "numpy.compat.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.compat._inspect": {
  "data": {},
  "type": "module"
 },
 "numpy.compat._inspect.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.compat._inspect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.compat._inspect.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.compat._inspect.formatargspec": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "formatvalue",
    "formatvarargs",
    "formatvarkw",
    "join",
    "len",
    "numpy.compat._inspect.joinseq",
    "numpy.compat._inspect.strseq",
    "range",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.formatargvalues": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "convert",
    "formatvalue",
    "formatvarargs",
    "formatvarkw",
    "join",
    "len",
    "locals",
    "numpy.compat._inspect.joinseq",
    "numpy.compat._inspect.strseq",
    "range",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.formatargvalues.convert": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "formatarg",
    "formatvalue",
    "locals"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.getargs": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.compat._inspect.iscode",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.getargspec": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "TypeError",
    "numpy.compat._inspect.getargs",
    "numpy.compat._inspect.isfunction",
    "numpy.compat._inspect.ismethod"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.getargvalues": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.compat._inspect.getargs"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.iscode": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "numpy.compat._inspect.types",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.isfunction": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "numpy.compat._inspect.types",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.ismethod": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "isinstance",
    "numpy.compat._inspect.types",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.joinseq": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.compat._inspect.strseq": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "convert",
    "join",
    "list",
    "numpy.compat._inspect.joinseq",
    "object",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.compat._inspect.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.compat.py3k": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "int",
    "numpy.compat.py3k.long",
    "numpy.compat.py3k.sys",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "module"
 },
 "numpy.compat.py3k.Path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.compat.py3k.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.compat.py3k.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.compat.py3k.asbytes": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "numpy.compat.py3k.asbytes_nested": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.compat.py3k.asbytes",
    "numpy.compat.py3k.bytes",
    "numpy.compat.py3k.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.compat.py3k.asstr": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "numpy.compat.py3k.asunicode": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "isinstance",
    "numpy.compat.py3k.unicode",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.compat.py3k.asunicode_nested": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.compat.py3k.asunicode",
    "numpy.compat.py3k.bytes",
    "numpy.compat.py3k.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.compat.py3k.basestring": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "numpy.compat.py3k.bytes": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.compat.py3k.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.compat.py3k.getexception": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.compat.py3k.sys"
   ]
  },
  "type": "function"
 },
 "numpy.compat.py3k.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "numpy.compat.py3k.importlib.machinery": {
  "data": {
   "shadows": "importlib.machinery"
  },
  "type": "import"
 },
 "numpy.compat.py3k.integer_types": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "numpy.compat.py3k.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "numpy.compat.py3k.is_pathlib_path": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "isinstance",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "numpy.compat.py3k.isfileobj": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "numpy.compat.py3k.long": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "numpy.compat.py3k.npy_load_module": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.compat.py3k.imp",
    "numpy.compat.py3k.os",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.compat.py3k.open_latin1": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.compat.py3k.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.compat.py3k.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.compat.py3k.sixu": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.compat.py3k.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.compat.py3k.strchar": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "numpy.compat.py3k.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.compat.py3k.unicode": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "numpy.compat.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.compat.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "numpy.compat.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.compat.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.compat.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.compat.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.compat.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.complex": {
  "data": {
   "shadows": "__builtin__.complex"
  },
  "type": "import"
 },
 "numpy.conftest": {
  "data": {},
  "type": "module"
 },
 "numpy.conftest._collect_results": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.conftest._old_fpu_mode": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.conftest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.conftest.check_fpu_mode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.conftest._collect_results",
    "numpy.conftest.pytest",
    "numpy.core.multiarray_tests.get_fpu_mode"
   ]
  },
  "type": "function"
 },
 "numpy.conftest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.conftest.get_fpu_mode": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.get_fpu_mode"
  },
  "type": "import"
 },
 "numpy.conftest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "numpy.conftest.pytest_itemcollected": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.conftest._collect_results",
    "numpy.conftest._old_fpu_mode",
    "numpy.conftest.pytest",
    "numpy.core.multiarray_tests.get_fpu_mode"
   ]
  },
  "type": "function"
 },
 "numpy.conftest.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "copy_reg",
    "copy_reg.pickle",
    "numpy.core.__all__",
    "numpy.core._ufunc_reconstruct",
    "numpy.core._ufunc_reduce",
    "numpy.core.env_added",
    "numpy.core.msg",
    "numpy.core.os",
    "numpy.core.sys",
    "numpy.testing._numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.core.__all__": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "numpy.core.__version__": {
  "data": {
   "shadows": "numpy.version.version"
  },
  "type": "import"
 },
 "numpy.core._internal": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.core._internal._getintp_ctype",
    "numpy.core._internal._nbo",
    "numpy.core._internal._pep3118_native_map",
    "numpy.core._internal._pep3118_standard_map",
    "numpy.core._internal.re",
    "numpy.core._internal.sys"
   ]
  },
  "type": "module"
 },
 "numpy.core._internal.AxisError": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "IndexError",
    "ValueError"
   ]
  },
  "type": "class"
 },
 "numpy.core._internal.AxisError.__init__": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "numpy.core._internal.AxisError",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal.TooHardError": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "numpy.core._internal.__dtype_from_pep3118": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "c.isdigit",
    "dict",
    "dtype",
    "int",
    "map",
    "numpy.core._internal._add_trailing_padding",
    "numpy.core._internal._fix_names",
    "numpy.core._internal._lcm",
    "numpy.core._internal._pep3118_native_map",
    "numpy.core._internal._pep3118_native_typechars",
    "numpy.core._internal._pep3118_standard_map",
    "numpy.core._internal._pep3118_standard_typechars",
    "numpy.core._internal._prod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._add_trailing_padding": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "dict",
    "dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._array_descr": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._commastring": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "dtype",
    "eval",
    "len",
    "numpy.core._internal._convorder",
    "numpy.core._internal._nbo",
    "numpy.core._internal.format_re",
    "numpy.core._internal.sep_re",
    "numpy.core._internal.space_re"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._convorder": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "numpy.core._internal._copy_fields": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._ctypes": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "numpy.core._internal._ctypes.__init__": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.core._internal._missing_ctypes",
    "numpy.core._internal.ctypes"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._ctypes.data_as": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "numpy.core._internal._ctypes.get_as_parameter": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "numpy.core._internal._ctypes.get_data": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "numpy.core._internal._ctypes.get_shape": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.core._internal._getintp_ctype"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._ctypes.get_strides": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.core._internal._getintp_ctype"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._ctypes.shape_as": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "numpy.core._internal._ctypes.strides_as": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "numpy.core._internal._dtype_from_pep3118": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "Stream",
    "dtype",
    "numpy.core._internal.__dtype_from_pep3118"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._dtype_from_pep3118.Stream": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core._internal._dtype_from_pep3118.Stream.__bool__": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._dtype_from_pep3118.Stream.__init__": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "numpy.core._internal._dtype_from_pep3118.Stream.advance": {
  "data": {
   "lineno": 454
  },
  "type": "function"
 },
 "numpy.core._internal._dtype_from_pep3118.Stream.consume": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._dtype_from_pep3118.Stream.consume_until": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "c",
    "callable",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._dtype_from_pep3118.Stream.next": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._fix_names": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._gcd": {
  "data": {
   "lineno": 673
  },
  "type": "function"
 },
 "numpy.core._internal._getfield_is_safe": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._getintp_ctype": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "dtype",
    "numpy.core._internal.ctypes",
    "numpy.core._internal.dummy_ctype",
    "numpy.intp"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._lcm": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "numpy.core._internal._gcd"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._makenames_list": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "dtype",
    "format",
    "int",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._missing_ctypes": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core._internal._missing_ctypes.c_void_p": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "numpy.core._internal._missing_ctypes.cast": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "numpy.core._internal._nbo": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.core._internal._newnames": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "set",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._pep3118_native_map": {
  "data": {
   "lineno": 395
  },
  "type": "constant"
 },
 "numpy.core._internal._pep3118_native_typechars": {
  "data": {
   "lineno": 420
  },
  "type": "constant"
 },
 "numpy.core._internal._pep3118_standard_map": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "numpy.core._internal._pep3118_standard_typechars": {
  "data": {
   "lineno": 445
  },
  "type": "constant"
 },
 "numpy.core._internal._prod": {
  "data": {
   "lineno": 667
  },
  "type": "function"
 },
 "numpy.core._internal._reconstruct": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._ufunc_doc_signature_formatter": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._usefields": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "KeyError",
    "dtype",
    "len",
    "numpy.core._internal._makenames_list"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal._view_is_safe": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core._internal.array_ufunc_errmsg_formatter": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core._internal.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.core._internal.ctypes": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.core._internal.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core._internal.dummy_ctype": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core._internal.dummy_ctype.__call__": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "numpy.core._internal.dummy_ctype.__eq__": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "numpy.core._internal.dummy_ctype.__init__": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "numpy.core._internal.dummy_ctype.__mul__": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "numpy.core._internal.dummy_ctype.__ne__": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "numpy.core._internal.format_re": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "numpy.core._internal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core._internal.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core._internal.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.core._internal.sep_re": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "numpy.core._internal.space_re": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "numpy.core._internal.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core._methods": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.umath.add.reduce",
    "numpy.core.umath.logical_and.reduce",
    "numpy.core.umath.logical_or.reduce",
    "numpy.core.umath.maximum.reduce",
    "numpy.core.umath.minimum.reduce",
    "numpy.core.umath.multiply.reduce"
   ]
  },
  "type": "module"
 },
 "numpy.core._methods._all": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.core._methods.umr_all"
   ]
  },
  "type": "function"
 },
 "numpy.core._methods._amax": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.core._methods.umr_maximum"
   ]
  },
  "type": "function"
 },
 "numpy.core._methods._amin": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.core._methods.umr_minimum"
   ]
  },
  "type": "function"
 },
 "numpy.core._methods._any": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.core._methods.umr_any"
   ]
  },
  "type": "function"
 },
 "numpy.core._methods._count_reduce_items": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core._methods._mean": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "RuntimeWarning",
    "hasattr",
    "isinstance",
    "issubclass",
    "numpy.core._methods._count_reduce_items",
    "numpy.core._methods.umr_sum",
    "numpy.core._methods.warnings",
    "numpy.core.multiarray.dtype",
    "numpy.core.multiarray.ndarray",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numerictypes.bool_",
    "numpy.core.numerictypes.float16",
    "numpy.core.numerictypes.integer",
    "numpy.core.umath.true_divide"
   ]
  },
  "type": "function"
 },
 "numpy.core._methods._prod": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.core._methods.umr_prod"
   ]
  },
  "type": "function"
 },
 "numpy.core._methods._std": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.core._methods._var",
    "numpy.core.multiarray.ndarray",
    "numpy.core.umath.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core._methods._sum": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.core._methods.umr_sum"
   ]
  },
  "type": "function"
 },
 "numpy.core._methods._var": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "RuntimeWarning",
    "hasattr",
    "isinstance",
    "issubclass",
    "max",
    "numpy.core._methods._count_reduce_items",
    "numpy.core._methods.umr_sum",
    "numpy.core._methods.warnings",
    "numpy.core.multiarray.dtype",
    "numpy.core.multiarray.ndarray",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numerictypes.bool_",
    "numpy.core.numerictypes.complexfloating",
    "numpy.core.numerictypes.integer",
    "numpy.core.umath.conjugate",
    "numpy.core.umath.multiply",
    "numpy.core.umath.true_divide"
   ]
  },
  "type": "function"
 },
 "numpy.core._methods.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core._methods.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.core._methods.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core._methods.mu": {
  "data": {
   "shadows": "numpy.core.multiarray"
  },
  "type": "import"
 },
 "numpy.core._methods.nt": {
  "data": {
   "shadows": "numpy.core.numerictypes"
  },
  "type": "import"
 },
 "numpy.core._methods.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core._methods.um": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.core._methods.umr_all": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.core._methods.umr_any": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.core._methods.umr_maximum": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.core._methods.umr_minimum": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.core._methods.umr_prod": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.core._methods.umr_sum": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.core._methods.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core._numpy_tester": {
  "data": {
   "shadows": "numpy.testing._numpy_tester"
  },
  "type": "import"
 },
 "numpy.core._ufunc_reconstruct": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "__import__",
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.core._ufunc_reduce": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.core._ufunc_reconstruct",
    "pickle.whichmodule"
   ]
  },
  "type": "function"
 },
 "numpy.core.abs": {
  "data": {
   "shadows": "absolute"
  },
  "type": "import"
 },
 "numpy.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.arrayprint": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "int",
    "issubclass",
    "numpy.core.arrayprint._recursive_guard",
    "numpy.core.arrayprint._typelessdata",
    "numpy.core.arrayprint.array_repr",
    "numpy.core.arrayprint.array_str",
    "numpy.core.arrayprint.set_string_function",
    "numpy.core.arrayprint.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "numpy.core.arrayprint.BoolFormat": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.BoolFormat.__call__": {
  "data": {
   "lineno": 1091
  },
  "type": "function"
 },
 "numpy.core.arrayprint.BoolFormat.__init__": {
  "data": {
   "lineno": 1086
  },
  "type": "function"
 },
 "numpy.core.arrayprint.ComplexFloatingFormat": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.ComplexFloatingFormat.__call__": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.ComplexFloatingFormat.__init__": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.core.arrayprint.FloatingFormat"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.ComplexFormat": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "numpy.core.arrayprint.ComplexFloatingFormat"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.ComplexFormat.__init__": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.arrayprint.ComplexFormat",
    "numpy.core.arrayprint.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.DatetimeFormat": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "numpy.core.arrayprint._TimelikeFormat"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.DatetimeFormat.__call__": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "numpy.core.arrayprint.DatetimeFormat",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.DatetimeFormat.__init__": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "datetime_data",
    "numpy.core.arrayprint.DatetimeFormat",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.DatetimeFormat._format_non_nat": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "datetime_as_string"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.FloatFormat": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "numpy.core.arrayprint.FloatingFormat"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.FloatFormat.__init__": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.arrayprint.FloatFormat",
    "numpy.core.arrayprint.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.FloatingFormat": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.FloatingFormat.__call__": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "dragon4_positional",
    "dragon4_scientific",
    "errstate",
    "len",
    "numpy.core.arrayprint._format_options",
    "numpy.isfinite",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.FloatingFormat.__init__": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.core.arrayprint._none_or_positive_arg"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.FloatingFormat.fillFormat": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "absolute",
    "any",
    "dragon4_positional",
    "dragon4_scientific",
    "errstate",
    "isfinite",
    "isinf",
    "len",
    "max",
    "numpy.core.arrayprint._format_options",
    "numpy.max",
    "numpy.min",
    "numpy.signbit",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.IntegerFormat": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.IntegerFormat.__call__": {
  "data": {
   "lineno": 1081
  },
  "type": "function"
 },
 "numpy.core.arrayprint.IntegerFormat.__init__": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.max",
    "numpy.min",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.LongComplexFormat": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "numpy.core.arrayprint.ComplexFloatingFormat"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.LongComplexFormat.__init__": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.arrayprint.LongComplexFormat",
    "numpy.core.arrayprint.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.LongFloatFormat": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "numpy.core.arrayprint.FloatingFormat"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.LongFloatFormat.__init__": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.arrayprint.LongFloatFormat",
    "numpy.core.arrayprint.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.StructureFormat": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "numpy.core.arrayprint.StructuredVoidFormat"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.StructureFormat.__init__": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.arrayprint.StructureFormat",
    "numpy.core.arrayprint.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.StructuredVoidFormat": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.StructuredVoidFormat.__call__": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "format_function",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.StructuredVoidFormat.__init__": {
  "data": {
   "lineno": 1220
  },
  "type": "function"
 },
 "numpy.core.arrayprint.StructuredVoidFormat.from_data": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "format_function",
    "numpy.core.arrayprint.SubArrayFormat",
    "numpy.core.arrayprint._get_format_function"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.SubArrayFormat": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.SubArrayFormat.__call__": {
  "data": {
   "lineno": 1206
  },
  "type": "function"
 },
 "numpy.core.arrayprint.SubArrayFormat.__init__": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "format_function"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.TimedeltaFormat": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "numpy.core.arrayprint._TimelikeFormat"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.TimedeltaFormat._format_non_nat": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._TimelikeFormat": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint._TimelikeFormat.__call__": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "isnat"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._TimelikeFormat.__init__": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "isnat",
    "len",
    "max",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._TimelikeFormat._format_non_nat": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.core.arrayprint.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._array2string": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "asarray",
    "len",
    "numpy.core.arrayprint._formatArray",
    "numpy.core.arrayprint._get_format_function",
    "numpy.core.arrayprint._leading_trailing",
    "numpy.core.arrayprint._recursive_guard"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._extendLine": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._formatArray": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "recurser"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._formatArray.recurser": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "format_function",
    "len",
    "max",
    "numpy.core.arrayprint._extendLine",
    "range",
    "recurser"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._format_options": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._get_format_function": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "issubclass",
    "numpy.core.arrayprint._get_formatdict"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._get_formatdict": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "indirect",
    "numpy.core.arrayprint.BoolFormat",
    "numpy.core.arrayprint.ComplexFloatingFormat",
    "numpy.core.arrayprint.DatetimeFormat",
    "numpy.core.arrayprint.FloatingFormat",
    "numpy.core.arrayprint.IntegerFormat",
    "numpy.core.arrayprint.TimedeltaFormat",
    "numpy.core.arrayprint._object_format",
    "numpy.core.arrayprint.repr_format",
    "numpy.core.arrayprint.str_format",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._get_formatdict.indirect": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "numpy.core.arrayprint._guarded_str": {
  "data": {
   "lineno": 1418
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._leading_trailing": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "concatenate",
    "len",
    "numpy.index_exp"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._make_options_dict": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "locals",
    "numpy.core.arrayprint.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._none_or_positive_arg": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._nt": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.arrayprint._object_format": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._recursive_guard": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "numpy.core.arrayprint._recursive_guard.decorating_function": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._recursive_guard.decorating_function.wrapper": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "dummy_thread.get_ident",
    "f",
    "id",
    "numpy.core.arrayprint.functools"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._typelessdata": {
  "data": {
   "lineno": 1267
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._void_scalar_repr": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "array",
    "numpy.core.arrayprint.StructuredVoidFormat",
    "numpy.core.arrayprint._format_options"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.array2string": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "len",
    "numpy._NoValue",
    "numpy.core.arrayprint._array2string",
    "numpy.core.arrayprint._format_options",
    "numpy.core.arrayprint._make_options_dict",
    "numpy.core.arrayprint.warnings",
    "repr",
    "style"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.array_repr": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "issubclass",
    "len",
    "numpy.core.arrayprint._format_options",
    "numpy.core.arrayprint.array2string",
    "numpy.core.arrayprint.dtype_is_implied",
    "numpy.core.arrayprint.dtype_short_repr",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.array_str": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "numpy.core.arrayprint._format_options",
    "numpy.core.arrayprint._guarded_str",
    "numpy.core.arrayprint.array2string",
    "numpy.ndarray.__getitem__",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.dtype_is_implied": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "numpy.core.arrayprint._format_options",
    "numpy.core.arrayprint._typelessdata",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.dtype_short_repr": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "issubclass",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.format_float_positional": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "dragon4_positional",
    "numpy.core.arrayprint._none_or_positive_arg"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.format_float_scientific": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "dragon4_scientific",
    "numpy.core.arrayprint._none_or_positive_arg"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.get_ident": {
  "data": {
   "shadows": "dummy_thread.get_ident"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.get_printoptions": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.core.arrayprint._format_options"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.repr_format": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.set_printoptions": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.arrayprint._format_options",
    "numpy.core.arrayprint._make_options_dict",
    "set_legacy_print_mode"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.set_string_function": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "f",
    "numpy.core.arrayprint.array_repr",
    "numpy.core.arrayprint.array_str",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.str_format": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.bench": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "numpy.core.char": {
  "data": {
   "shadows": "defchararray"
  },
  "type": "import"
 },
 "numpy.core.copyreg": {
  "data": {
   "shadows": "copy_reg"
  },
  "type": "import"
 },
 "numpy.core.cversions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "code_generators.genapi.fullapi_hash",
    "code_generators.numpy_api.full_api",
    "os.path.dirname",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.core.cversions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.cversions.curdir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.core.cversions.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "numpy.core.cversions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.cversions.full_api": {
  "data": {
   "shadows": "code_generators.numpy_api.full_api"
  },
  "type": "import"
 },
 "numpy.core.cversions.fullapi_hash": {
  "data": {
   "shadows": "code_generators.genapi.fullapi_hash"
  },
  "type": "import"
 },
 "numpy.core.cversions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.einsumfunc": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.einsumfunc.einsum_symbols",
    "set"
   ]
  },
  "type": "module"
 },
 "numpy.core.einsumfunc.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.core.einsumfunc._can_dot": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.core.einsumfunc._compute_size_by_dict": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "numpy.core.einsumfunc._find_contraction": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "enumerate",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.core.einsumfunc._greedy_path": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.core.einsumfunc._compute_size_by_dict",
    "numpy.core.einsumfunc._find_contraction",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.einsumfunc._optimal_path": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.core.einsumfunc._compute_size_by_dict",
    "numpy.core.einsumfunc._find_contraction",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.einsumfunc._parse_einsum_input": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "Ellipsis",
    "TypeError",
    "ValueError",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.compat.basestring",
    "numpy.core.einsumfunc.einsum_symbols",
    "numpy.core.einsumfunc.einsum_symbols_set",
    "numpy.core.numeric.asanyarray",
    "range",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.core.einsumfunc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.einsumfunc.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.core.einsumfunc.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.core.einsumfunc.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.core.einsumfunc.c_einsum": {
  "data": {
   "shadows": "numpy.core.multiarray.c_einsum"
  },
  "type": "import"
 },
 "numpy.core.einsumfunc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.einsumfunc.dot": {
  "data": {
   "shadows": "numpy.core.numeric.dot"
  },
  "type": "import"
 },
 "numpy.core.einsumfunc.einsum": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "TypeError",
    "any",
    "enumerate",
    "len",
    "numpy.core.einsumfunc.einsum_path",
    "numpy.core.multiarray.c_einsum",
    "numpy.core.numeric.tensordot",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.einsumfunc.einsum_path": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "numpy.compat.basestring",
    "numpy.core.einsumfunc._can_dot",
    "numpy.core.einsumfunc._compute_size_by_dict",
    "numpy.core.einsumfunc._find_contraction",
    "numpy.core.einsumfunc._greedy_path",
    "numpy.core.einsumfunc._optimal_path",
    "numpy.core.einsumfunc._parse_einsum_input",
    "range",
    "set",
    "sorted",
    "str",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.einsumfunc.einsum_symbols": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.core.einsumfunc.einsum_symbols_set": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.core.einsumfunc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.einsumfunc.result_type": {
  "data": {
   "shadows": "numpy.core.numeric.result_type"
  },
  "type": "import"
 },
 "numpy.core.einsumfunc.tensordot": {
  "data": {
   "shadows": "numpy.core.numeric.tensordot"
  },
  "type": "import"
 },
 "numpy.core.env_added": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.core.function_base": {
  "data": {},
  "type": "module"
 },
 "numpy.core.function_base.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.core.function_base._index_deprecate": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "int",
    "numpy.core.function_base.operator",
    "numpy.core.function_base.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.function_base._nx": {
  "data": {
   "shadows": "numeric"
  },
  "type": "import"
 },
 "numpy.core.function_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.function_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.function_base.geomspace": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.core.function_base.logspace",
    "result_type"
   ]
  },
  "type": "function"
 },
 "numpy.core.function_base.linspace": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "asanyarray",
    "float",
    "numpy.core.function_base._index_deprecate",
    "result_type"
   ]
  },
  "type": "function"
 },
 "numpy.core.function_base.logspace": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.core.function_base.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.core.function_base.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.function_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.function_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api": {
  "data": {},
  "type": "module"
 },
 "numpy.core.generate_numpy_api.BoolValuesApi": {
  "data": {
   "shadows": "genapi.BoolValuesApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.FunctionApi": {
  "data": {
   "shadows": "genapi.FunctionApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.GlobalVarApi": {
  "data": {
   "shadows": "genapi.GlobalVarApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.TypeApi": {
  "data": {
   "shadows": "genapi.TypeApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.c_api_header": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "numpy.core.generate_numpy_api.c_template": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "numpy.core.generate_numpy_api.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.do_generate_api": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "AssertionError",
    "genapi.BoolValuesApi",
    "genapi.FunctionApi",
    "genapi.GlobalVarApi",
    "genapi.TypeApi",
    "len",
    "numpy.core.generate_numpy_api.c_api_header",
    "numpy.core.generate_numpy_api.c_template",
    "numpy.core.generate_numpy_api.genapi",
    "numpy.core.generate_numpy_api.h_template",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.generate_numpy_api.genapi": {
  "data": {
   "shadows": "genapi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.generate_api": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.core.generate_numpy_api.do_generate_api",
    "numpy.core.generate_numpy_api.genapi",
    "numpy.core.generate_numpy_api.numpy_api",
    "numpy.core.generate_numpy_api.os"
   ]
  },
  "type": "function"
 },
 "numpy.core.generate_numpy_api.h_template": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.core.generate_numpy_api.numpy_api": {
  "data": {
   "shadows": "numpy_api"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.getlimits": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "exp2",
    "hasattr",
    "numpy.core.getlimits.MachArLike",
    "numpy.core.getlimits._epsneg_f128",
    "numpy.core.getlimits._epsneg_f64",
    "numpy.core.getlimits._epsneg_f80",
    "numpy.core.getlimits._f16",
    "numpy.core.getlimits._f32",
    "numpy.core.getlimits._f64",
    "numpy.core.getlimits._float128_ma",
    "numpy.core.getlimits._float16_ma",
    "numpy.core.getlimits._float32_ma",
    "numpy.core.getlimits._float64_ma",
    "numpy.core.getlimits._float80_ma",
    "numpy.core.getlimits._float_dd_ma",
    "numpy.core.getlimits._huge_dd",
    "numpy.core.getlimits._huge_f128",
    "numpy.core.getlimits._huge_f80",
    "numpy.core.getlimits._ld",
    "numpy.core.getlimits._tiny_f128",
    "numpy.core.getlimits._tiny_f64",
    "numpy.core.getlimits._tiny_f80",
    "numpy.core.getlimits._title_fmt"
   ]
  },
  "type": "module"
 },
 "numpy.core.getlimits.MachArLike": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.getlimits.MachArLike.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "array",
    "float_conv",
    "float_to_float",
    "int",
    "log10",
    "numpy.core.getlimits._MACHAR_PARAMS",
    "numpy.core.getlimits._fr0",
    "numpy.core.getlimits._fr1"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits.MachArLike._str_eps": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits.MachArLike._str_epsneg": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits.MachArLike._str_resolution": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits.MachArLike._str_xmax": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits.MachArLike._str_xmin": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits._KNOWN_TYPES": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "numpy.core.getlimits._MACHAR_PARAMS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.core.getlimits.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.core.getlimits._convert_to_float": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.core.getlimits._discovered_machar": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "MachAr",
    "array",
    "ftype",
    "numpy.core.getlimits._MACHAR_PARAMS",
    "numpy.core.getlimits._fr0"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits._epsneg_f128": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "numpy.core.getlimits._epsneg_f64": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "numpy.core.getlimits._epsneg_f80": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "numpy.core.getlimits._f16": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "numpy.core.getlimits._f32": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "numpy.core.getlimits._f64": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "numpy.core.getlimits._float128_ma": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "numpy.core.getlimits._float16_ma": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "numpy.core.getlimits._float32_ma": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "numpy.core.getlimits._float64_ma": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "numpy.core.getlimits._float80_ma": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "numpy.core.getlimits._float_dd_ma": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "numpy.core.getlimits._fr0": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "numpy.core.getlimits._fr1": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "numpy.core.getlimits._get_machar": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "ftype",
    "numpy.core.getlimits._KNOWN_TYPES",
    "numpy.core.getlimits._MACHAR_PARAMS",
    "numpy.core.getlimits._discovered_machar",
    "numpy.core.getlimits.warnings",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits._huge_dd": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "numpy.core.getlimits._huge_f128": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "numpy.core.getlimits._huge_f80": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "numpy.core.getlimits._ld": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "numpy.core.getlimits._tiny_f128": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "numpy.core.getlimits._tiny_f64": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "numpy.core.getlimits._tiny_f80": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "numpy.core.getlimits._title_fmt": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.core.getlimits.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.getlimits.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.getlimits.finfo": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.getlimits.finfo.__new__": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "issubclass",
    "numpy.core.getlimits._convert_to_float",
    "object.__new__",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits.finfo.__repr__": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "numpy.core.getlimits.finfo.__str__": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "numpy.core.getlimits.finfo._init": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "getattr",
    "numpy.core.getlimits._get_machar",
    "setattr"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits.iinfo": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "max",
    "min",
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "numpy.core.getlimits.iinfo.__init__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.__repr__": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.__str__": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.max": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "numpy.core.getlimits.iinfo"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits.iinfo.min": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "numpy.core.getlimits.iinfo"
   ]
  },
  "type": "function"
 },
 "numpy.core.getlimits.ntypes": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.getlimits.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.getlimits.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.info": {
  "data": {},
  "type": "module"
 },
 "numpy.core.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.info.depends": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "numpy.core.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.info.global_symbols": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "numpy.core.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.machar": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.core.machar.MachAr",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.core.machar.MachAr": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.machar.MachAr.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.core.numeric.errstate"
   ]
  },
  "type": "function"
 },
 "numpy.core.machar.MachAr.__str__": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "numpy.core.machar.MachAr._do_init": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "RuntimeError",
    "abs",
    "float_conv",
    "float_to_float",
    "float_to_str",
    "int",
    "int_conv",
    "locals",
    "numpy.core.fromnumeric.any",
    "numpy.core.machar.math",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.machar.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.core.machar.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.machar.any": {
  "data": {
   "shadows": "numpy.core.fromnumeric.any"
  },
  "type": "import"
 },
 "numpy.core.machar.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.machar.errstate": {
  "data": {
   "shadows": "numpy.core.numeric.errstate"
  },
  "type": "import"
 },
 "numpy.core.machar.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.core.machar.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.max": {
  "data": {
   "shadows": "amax"
  },
  "type": "import"
 },
 "numpy.core.memmap": {
  "data": {},
  "type": "module"
 },
 "numpy.core.memmap.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.core.memmap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.memmap.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.core.memmap.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.memmap.dtypedescr": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.core.memmap.is_pathlib_path": {
  "data": {
   "shadows": "numpy.compat.is_pathlib_path"
  },
  "type": "import"
 },
 "numpy.core.memmap.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.core.memmap.memmap": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "numpy.core.memmap.memmap.__array_finalize__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "hasattr",
    "numpy.may_share_memory"
   ]
  },
  "type": "function"
 },
 "numpy.core.memmap.memmap.__array_wrap__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.core.memmap.memmap",
    "numpy.ndarray",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.memmap.memmap.__getitem__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.core.memmap.memmap",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.memmap.memmap.__new__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "bytes",
    "hasattr",
    "isinstance",
    "list",
    "numpy.compat.basestring",
    "numpy.compat.is_pathlib_path",
    "numpy.compat.long",
    "numpy.core.memmap.dtypedescr",
    "numpy.core.memmap.mmap",
    "numpy.core.memmap.mode_equivalents",
    "numpy.core.memmap.valid_filemodes",
    "open",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.memmap.memmap.flush": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "numpy.core.memmap.mmap": {
  "data": {
   "shadows": "mmap"
  },
  "type": "import"
 },
 "numpy.core.memmap.mode_equivalents": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.core.memmap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.memmap.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "numpy.core.memmap.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.memmap.valid_filemodes": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.core.memmap.writeable_filemodes": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.core.min": {
  "data": {
   "shadows": "amin"
  },
  "type": "import"
 },
 "numpy.core.msg": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.core.nt": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.numeric": {
  "data": {
   "symbols_in_volume": [
    "bool_",
    "cPickle.loads",
    "numpy.core.numeric.__all__",
    "numpy.core.numeric._errdict",
    "numpy.core.numeric._errdict_rev",
    "numpy.core.numeric._setdef",
    "numpy.core.numeric._unspecified",
    "numpy.core.numeric.extend_all",
    "numpy.core.numeric.sys",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "numpy.core.numeric.ComplexWarning": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "numpy.core.numeric.False_": {
  "data": {
   "lineno": 2878
  },
  "type": "constant"
 },
 "numpy.core.numeric.True_": {
  "data": {
   "lineno": 2879
  },
  "type": "constant"
 },
 "numpy.core.numeric._Unspecified": {
  "data": {
   "lineno": 2787
  },
  "type": "constant"
 },
 "numpy.core.numeric.__all__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.core.numeric._errdict": {
  "data": {
   "lineno": 2447
  },
  "type": "constant"
 },
 "numpy.core.numeric._errdict_rev": {
  "data": {
   "lineno": 2454
  },
  "type": "constant"
 },
 "numpy.core.numeric._maketup": {
  "data": {
   "lineno": 2146,
   "symbols_in_volume": [
    "dtype",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric._mode_from_name": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "isinstance",
    "numpy.core.numeric._mode_from_name_dict",
    "numpy.core.numeric.basestring"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric._mode_from_name_dict": {
  "data": {
   "lineno": 862
  },
  "type": "constant"
 },
 "numpy.core.numeric._move_axis_to_0": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "numpy.core.numeric.moveaxis"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric._setdef": {
  "data": {
   "lineno": 2868
  },
  "type": "function"
 },
 "numpy.core.numeric._unspecified": {
  "data": {
   "lineno": 2785,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.numeric.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.numeric.allclose": {
  "data": {
   "lineno": 2189,
   "symbols_in_volume": [
    "all",
    "bool",
    "numpy.core.numeric.isclose"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.argwhere": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "nonzero",
    "transpose"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.array_equal": {
  "data": {
   "lineno": 2358,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "numpy.core.numeric.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.array_equiv": {
  "data": {
   "lineno": 2400,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "numpy.core.numeric.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.asanyarray": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.asarray": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.ascontiguousarray": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.asfortranarray": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.base_repr": {
  "data": {
   "lineno": 2067,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "len",
    "reversed"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.basestring": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.core.numeric.binary_repr": {
  "data": {
   "lineno": 1957,
   "symbols_in_volume": [
    "bin",
    "len",
    "max",
    "warn_if_insufficient"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.binary_repr.warn_if_insufficient": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.numeric.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.bitwise_not": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.core.numeric.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "numpy.core.numeric.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.core.numeric.convolve": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "len",
    "numpy.core.numeric._mode_from_name"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.correlate": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "numpy.core.numeric._mode_from_name"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.count_nonzero": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.character",
    "numpy.core.numeric.asanyarray",
    "numpy.intp",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.cross": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "broadcast",
    "empty",
    "len",
    "multiply",
    "negative",
    "normalize_axis_index",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.moveaxis",
    "promote_types"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.numeric.errstate": {
  "data": {
   "lineno": 2790,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.numeric.errstate.__enter__": {
  "data": {
   "lineno": 2857,
   "symbols_in_volume": [
    "numpy.core.numeric._Unspecified",
    "numpy.core.numeric.seterr",
    "numpy.core.numeric.seterrcall"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.errstate.__exit__": {
  "data": {
   "lineno": 2862,
   "symbols_in_volume": [
    "numpy.core.numeric._Unspecified",
    "numpy.core.numeric.seterr",
    "numpy.core.numeric.seterrcall"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.errstate.__init__": {
  "data": {
   "lineno": 2853,
   "symbols_in_volume": [
    "numpy.core.numeric._Unspecified"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.extend_all": {
  "data": {
   "lineno": 2882,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "numpy.core.numeric.__all__"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.eye": {
  "data": {
   "shadows": "numpy.eye"
  },
  "type": "import"
 },
 "numpy.core.numeric.fastCopyAndTranspose": {
  "data": {
   "shadows": "_fastCopyAndTranspose"
  },
  "type": "import"
 },
 "numpy.core.numeric.flatnonzero": {
  "data": {
   "lineno": 822
  },
  "type": "function"
 },
 "numpy.core.numeric.fromfunction": {
  "data": {
   "lineno": 1861,
   "symbols_in_volume": [
    "float",
    "function",
    "numpy.core.numeric.indices"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.full": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "array",
    "empty"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.full_like": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "empty_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.getbufsize": {
  "data": {
   "lineno": 2635
  },
  "type": "function"
 },
 "numpy.core.numeric.geterr": {
  "data": {
   "lineno": 2560,
   "symbols_in_volume": [
    "numpy.core.numeric._errdict_rev"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.geterrcall": {
  "data": {
   "lineno": 2740
  },
  "type": "function"
 },
 "numpy.core.numeric.identity": {
  "data": {
   "lineno": 2157,
   "symbols_in_volume": [
    "dtype",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.indices": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "arange",
    "empty",
    "enumerate",
    "int",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.isclose": {
  "data": {
   "lineno": 2260,
   "symbols_in_volume": [
    "all",
    "array",
    "isfinite",
    "isnan",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.ones_like",
    "numpy.core.numeric.zeros_like",
    "within_tol"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.isclose.within_tol": {
  "data": {
   "lineno": 2319,
   "symbols_in_volume": [
    "abs",
    "less_equal",
    "numpy.core.numeric.errstate"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.isfortran": {
  "data": {
   "lineno": 719
  },
  "type": "function"
 },
 "numpy.core.numeric.isscalar": {
  "data": {
   "lineno": 1917,
   "symbols_in_volume": [
    "isinstance",
    "numpy.core.numeric.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.core.numeric.little_endian": {
  "data": {
   "lineno": 1787
  },
  "type": "constant"
 },
 "numpy.core.numeric.load": {
  "data": {
   "lineno": 2123,
   "symbols_in_volume": [
    "cPickle.load",
    "isinstance",
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.loads": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.core.numeric.moveaxis": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.normalize_axis_tuple",
    "range",
    "sorted",
    "transpose",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.newaxis": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.core.numeric.normalize_axis_tuple": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "normalize_axis_index",
    "numpy.core.numeric.operator",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.numeric.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "numpy.core.numeric.ones": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "empty"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.ones_like": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "empty_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.numeric.outer": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "multiply",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.newaxis"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "numpy.core.numeric.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.numeric.require": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "numpy.core.numeric.asanyarray",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.roll": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "ValueError",
    "broadcast",
    "empty_like",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.itertools",
    "numpy.core.numeric.normalize_axis_tuple",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.rollaxis": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "AxisError",
    "list",
    "normalize_axis_index",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.setbufsize": {
  "data": {
   "lineno": 2611,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.numeric.getbufsize"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.seterr": {
  "data": {
   "lineno": 2460,
   "symbols_in_volume": [
    "all",
    "numpy.core.numeric._errdict",
    "numpy.core.numeric.geterr"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.seterrcall": {
  "data": {
   "lineno": 2648,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "numpy.core.numeric.collections",
    "numpy.core.numeric.geterrcall"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.numeric.tensordot": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "dot",
    "int",
    "iter",
    "len",
    "list",
    "multiply.reduce",
    "numpy.core.numeric.asarray",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.numeric.ufunc": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.core.numeric.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.numeric.zeros_like": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "empty_like",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.rec": {
  "data": {
   "shadows": "records"
  },
  "type": "import"
 },
 "numpy.core.records": {
  "data": {},
  "type": "module"
 },
 "numpy.core.records.__all__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.core.records._byteorderconv": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.core.records.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.records.array": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "getattr",
    "isinstance",
    "list",
    "numpy.compat.bytes",
    "numpy.compat.isfileobj",
    "numpy.core.records.format_parser",
    "numpy.core.records.fromarrays",
    "numpy.core.records.fromfile",
    "numpy.core.records.fromrecords",
    "numpy.core.records.fromstring",
    "numpy.core.records.ndarray",
    "numpy.core.records.recarray",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.bytes": {
  "data": {
   "shadows": "numpy.compat.bytes"
  },
  "type": "import"
 },
 "numpy.core.records.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.records.find_duplicate": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.format_parser": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.records.format_parser.__init__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "numpy.core.records.format_parser._createdescr": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.core.records._byteorderconv"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.format_parser._parseFormats": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.format_parser._setfieldnames": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "NameError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.core.records.find_duplicate",
    "range",
    "repr",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.fromarrays": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "numpy.core.records.format_parser",
    "numpy.core.records.ndarray",
    "numpy.core.records.recarray",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.fromfile": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "int",
    "isinstance",
    "list",
    "numpy.compat.long",
    "numpy.core.records.format_parser",
    "numpy.core.records.get_remaining_size",
    "numpy.core.records.recarray",
    "open",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.fromrecords": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "memoryview",
    "numpy.compat.long",
    "numpy.core.records.format_parser",
    "numpy.core.records.fromarrays",
    "numpy.core.records.recarray",
    "numpy.core.records.record",
    "numpy.core.records.warnings",
    "object",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.fromstring": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.core.records.format_parser",
    "numpy.core.records.recarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.get_remaining_size": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.records.os"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.isfileobj": {
  "data": {
   "shadows": "numpy.compat.isfileobj"
  },
  "type": "import"
 },
 "numpy.core.records.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.core.records.ndarray": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "numpy.core.records.nt": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.records.numfmt": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "numpy.core.records.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.records.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.records.recarray": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "__name__",
    "numpy.core.records.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.records.recarray.__array_finalize__": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.core.records.record"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.recarray.__getattribute__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "TypeError",
    "issubclass",
    "numpy.core.records.ndarray",
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.recarray.__getitem__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "numpy.core.records.ndarray",
    "numpy.core.records.recarray",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.recarray.__new__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.core.records.format_parser",
    "numpy.core.records.ndarray",
    "numpy.core.records.record"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.recarray.__repr__": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "get_printoptions",
    "issubclass",
    "len",
    "numpy.core.records.record",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.recarray.__setattr__": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "KeyError",
    "TypeError",
    "exctype",
    "issubclass",
    "numpy.core.records.ndarray",
    "numpy.core.records.record",
    "numpy.core.records.sys",
    "object.__delattr__",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.recarray.field": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.core.records.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.record": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "class"
 },
 "numpy.core.records.record.__getattribute__": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.record.__getitem__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.record.__repr__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "get_printoptions",
    "numpy.core.records.record",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.record.__setattr__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.record.__str__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "get_printoptions",
    "numpy.core.records.record",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.record.pprint": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "getattr",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "numpy.core.records.sb": {
  "data": {
   "shadows": "numeric"
  },
  "type": "import"
 },
 "numpy.core.records.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.records.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.round": {
  "data": {
   "shadows": "round_"
  },
  "type": "import"
 },
 "numpy.core.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.core.setup.NPY_RELAXED_STRIDES_CHECKING",
    "numpy.core.setup.configuration",
    "numpy.core.setup.os",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "numpy.core.setup.CallOnceOnly": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.setup.CallOnceOnly.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "numpy.core.setup.CallOnceOnly.check_complex": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.core.setup.check_complex",
    "numpy.core.setup.copy",
    "numpy.core.setup.pickle"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.CallOnceOnly.check_ieee_macros": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.core.setup.check_ieee_macros",
    "numpy.core.setup.copy",
    "numpy.core.setup.pickle"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.CallOnceOnly.check_types": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.core.setup.check_types",
    "numpy.core.setup.copy",
    "numpy.core.setup.pickle"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.core.setup.NPY_RELAXED_STRIDES_CHECKING": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.core.setup.NPY_RELAXED_STRIDES_DEBUG": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.core.setup.check_complex": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "Exception",
    "check_prec",
    "numpy.core.setup.os",
    "numpy.core.setup.warnings",
    "type2def"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.check_complex.check_prec": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "dict",
    "fname2def"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.check_ieee_macros": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "_add_decl",
    "fname2def"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.check_ieee_macros._add_decl": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "fname2def"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "SystemError",
    "check_funcs",
    "check_funcs_once",
    "fname2def",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities.check_func": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities.check_funcs": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "check_func",
    "check_funcs_once",
    "fname2def"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.check_math_capabilities.check_funcs_once": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dict",
    "fname2def"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.check_mathlib": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "EnvironmentError",
    "numpy.core.setup.os"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.check_types": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "RuntimeError",
    "SystemError",
    "numpy.core.setup.pythonlib_dir",
    "numpy.core.setup.sys",
    "sym2def",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.configuration": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "check_api_version",
    "dict",
    "generate_api_func",
    "is_released",
    "numpy._build_utils.apple_accelerate.get_sgemv_fix",
    "numpy._build_utils.apple_accelerate.uses_accelerate_framework",
    "numpy.compat.npy_load_module",
    "numpy.core.setup.CallOnceOnly",
    "numpy.core.setup.os",
    "numpy.core.setup.platform",
    "numpy.core.setup.sys",
    "numpy.core.setup.warnings",
    "numpy.distutils.misc_util.Configuration",
    "numpy.distutils.misc_util.dot_join",
    "numpy.distutils.system_info.get_info",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_api_func": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_api_func.generate_api": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "__import__",
    "numpy.core.setup.os",
    "numpy.core.setup.sys",
    "numpy.distutils.log.info",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_config_h": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "check_long_double_representation",
    "distutils.dep_util.newer",
    "hasattr",
    "isinstance",
    "len",
    "numpy.core.setup.NPY_RELAXED_STRIDES_CHECKING",
    "numpy.core.setup.NPY_RELAXED_STRIDES_DEBUG",
    "numpy.core.setup.check_math_capabilities",
    "numpy.core.setup.check_mathlib",
    "numpy.core.setup.is_npy_no_signal",
    "numpy.core.setup.os",
    "numpy.core.setup.sys",
    "numpy.core.setup.win32_checks",
    "numpy.distutils.log.info",
    "open",
    "os.path.join",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_numpyconfig_h": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "distutils.dep_util.newer",
    "isinstance",
    "numpy.core.setup.NPY_RELAXED_STRIDES_CHECKING",
    "numpy.core.setup.NPY_RELAXED_STRIDES_DEBUG",
    "numpy.core.setup.check_mathlib",
    "numpy.core.setup.is_npy_no_signal",
    "numpy.core.setup.is_npy_no_smp",
    "numpy.core.setup.os",
    "numpy.core.setup.visibility_define",
    "numpy.distutils.log.info",
    "open",
    "os.path.join",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.generate_umath_c": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "dir",
    "distutils.dep_util.newer",
    "numpy.core.setup.os",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.configuration.get_mathlib_info": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.core.setup.check_mathlib"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.core.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.setup.dot_join": {
  "data": {
   "shadows": "numpy.distutils.misc_util.dot_join"
  },
  "type": "import"
 },
 "numpy.core.setup.get_build_architecture": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_build_architecture"
  },
  "type": "import"
 },
 "numpy.core.setup.get_config_var": {
  "data": {
   "shadows": "distutils.sysconfig.get_config_var"
  },
  "type": "import"
 },
 "numpy.core.setup.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "numpy.core.setup.get_sgemv_fix": {
  "data": {
   "shadows": "numpy._build_utils.apple_accelerate.get_sgemv_fix"
  },
  "type": "import"
 },
 "numpy.core.setup.is_npy_no_signal": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.core.setup.sys"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.is_npy_no_smp": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.core.setup.os"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.core.setup.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.core.setup.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.core.setup.npy_load_module": {
  "data": {
   "shadows": "numpy.compat.npy_load_module"
  },
  "type": "import"
 },
 "numpy.core.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.setup.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.setup.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.setup.pythonlib_dir": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "distutils.sysconfig.get_config_var",
    "numpy.core.setup.os",
    "numpy.core.setup.sys"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.core.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.setup.sysconfig": {
  "data": {
   "shadows": "sysconfig"
  },
  "type": "import"
 },
 "numpy.core.setup.uses_accelerate_framework": {
  "data": {
   "shadows": "numpy._build_utils.apple_accelerate.uses_accelerate_framework"
  },
  "type": "import"
 },
 "numpy.core.setup.visibility_define": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "numpy.core.setup.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.setup.win32_checks": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.core.setup.os",
    "numpy.core.setup.sys",
    "numpy.distutils.misc_util.get_build_architecture",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.setup_common.C99_FUNCS",
    "numpy.core.setup_common._IEEE_DOUBLE_BE",
    "numpy.core.setup_common._IEEE_QUAD_PREC_BE"
   ]
  },
  "type": "module"
 },
 "numpy.core.setup_common.C99_COMPLEX_FUNCS": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_COMPLEX_TYPES": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_FUNCS": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_FUNCS_EXTENDED": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_FUNCS_SINGLE": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C_ABI_VERSION": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C_API_VERSION": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.core.setup_common.LONG_DOUBLE_REPRESENTATION_SRC": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "numpy.core.setup_common.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "numpy.core.setup_common.MANDATORY_FUNCS": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "numpy.core.setup_common.MismatchCAPIWarning": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "numpy.core.setup_common.OPTIONAL_FUNCTION_ATTRIBUTES": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "numpy.core.setup_common.OPTIONAL_HEADERS": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "numpy.core.setup_common.OPTIONAL_INTRINSICS": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "numpy.core.setup_common.OPTIONAL_STDFUNCS": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "numpy.core.setup_common.OPTIONAL_STDFUNCS_MAYBE": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "numpy.core.setup_common.OPTIONAL_VARIABLE_ATTRIBUTES": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "numpy.core.setup_common._AFTER_SEQ": {
  "data": {
   "lineno": 323
  },
  "type": "constant"
 },
 "numpy.core.setup_common._BEFORE_SEQ": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "numpy.core.setup_common._DOUBLE_DOUBLE_BE": {
  "data": {
   "lineno": 336
  },
  "type": "constant"
 },
 "numpy.core.setup_common._DOUBLE_DOUBLE_LE": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_DOUBLE_BE": {
  "data": {
   "lineno": 325
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_DOUBLE_LE": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_QUAD_PREC_BE": {
  "data": {
   "lineno": 333
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_QUAD_PREC_LE": {
  "data": {
   "lineno": 335
  },
  "type": "constant"
 },
 "numpy.core.setup_common._INTEL_EXTENDED_12B": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "numpy.core.setup_common._INTEL_EXTENDED_16B": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "numpy.core.setup_common._MOTOROLA_EXTENDED_12B": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "numpy.core.setup_common.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.setup_common.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "numpy.core.setup_common.check_api_version": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.core.setup_common.MismatchCAPIWarning",
    "numpy.core.setup_common.get_api_versions",
    "numpy.core.setup_common.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.check_long_double_representation": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "numpy.core.setup_common.long_double_representation",
    "numpy.core.setup_common.pyod",
    "numpy.core.setup_common.sys",
    "numpy.distutils.misc_util.mingw32"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.core.setup_common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.setup_common.fname2def": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "numpy.core.setup_common.get_api_versions": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "__import__",
    "numpy.core.setup_common.sys"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.is_released": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.long_double_representation": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.setup_common._AFTER_SEQ",
    "numpy.core.setup_common._BEFORE_SEQ",
    "numpy.core.setup_common._DOUBLE_DOUBLE_BE",
    "numpy.core.setup_common._DOUBLE_DOUBLE_LE",
    "numpy.core.setup_common._IEEE_DOUBLE_BE",
    "numpy.core.setup_common._IEEE_DOUBLE_LE",
    "numpy.core.setup_common._IEEE_QUAD_PREC_BE",
    "numpy.core.setup_common._IEEE_QUAD_PREC_LE",
    "numpy.core.setup_common._INTEL_EXTENDED_12B",
    "numpy.core.setup_common._INTEL_EXTENDED_16B",
    "numpy.core.setup_common._MOTOROLA_EXTENDED_12B",
    "numpy.core.setup_common.copy"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.mingw32": {
  "data": {
   "shadows": "numpy.distutils.misc_util.mingw32"
  },
  "type": "import"
 },
 "numpy.core.setup_common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.setup_common.pyod": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "_pyod2",
    "_pyod3",
    "numpy.core.setup_common.sys"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.pyod._pyod2": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.core.setup_common.binascii",
    "oct",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.pyod._pyod3": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "int",
    "len",
    "oct",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.sym2def": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "numpy.core.setup_common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.setup_common.type2def": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "numpy.core.setup_common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.shape_base": {
  "data": {},
  "type": "module"
 },
 "numpy.core.shape_base.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.core.shape_base._block": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "block_recursion"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base._block.atleast_nd": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base._block.block_recursion": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "atleast_nd",
    "block_recursion",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base._block_check_depths_match": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "format_index",
    "len",
    "list",
    "next",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base._block_check_depths_match.format_index": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "numpy.core.shape_base._nx": {
  "data": {
   "shadows": "numeric"
  },
  "type": "import"
 },
 "numpy.core.shape_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.shape_base.atleast_1d": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "asanyarray",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base.atleast_2d": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "asanyarray",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base.atleast_3d": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "asanyarray",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base.block": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.core.shape_base._block",
    "numpy.core.shape_base._block_check_depths_match"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.shape_base.hstack": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.core.shape_base.atleast_1d"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.shape_base.stack": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ValueError",
    "asanyarray",
    "len",
    "normalize_axis_index",
    "set",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base.vstack": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.core.shape_base.atleast_2d"
   ]
  },
  "type": "function"
 },
 "numpy.core.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.test": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "numpy.core.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.core.tests.test_abc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_abc.TestABC": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_abc.TestABC.test_abstract": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "issubclass",
    "numpy.complexfloating",
    "numpy.core.tests.test_abc.numbers",
    "numpy.floating",
    "numpy.inexact",
    "numpy.integer",
    "numpy.number",
    "numpy.signedinteger",
    "numpy.testing.assert_",
    "numpy.unsignedinteger"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_abc.TestABC.test_complex": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "numpy.core.numerictypes.sctypes",
    "numpy.core.tests.test_abc.numbers",
    "numpy.testing.assert_",
    "t",
    "t.__name__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_abc.TestABC.test_floats": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "numpy.core.numerictypes.sctypes",
    "numpy.core.tests.test_abc.numbers",
    "numpy.testing.assert_",
    "t",
    "t.__name__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_abc.TestABC.test_int": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "numpy.core.numerictypes.sctypes",
    "numpy.core.tests.test_abc.numbers",
    "numpy.testing.assert_",
    "t",
    "t.__name__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_abc.TestABC.test_uint": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "numpy.core.numerictypes.sctypes",
    "numpy.core.tests.test_abc.numbers",
    "numpy.testing.assert_",
    "t",
    "t.__name__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_abc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_abc.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_abc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_abc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_abc.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "numpy.core.tests.test_abc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_abc.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_abc.sctypes": {
  "data": {
   "shadows": "numpy.core.numerictypes.sctypes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.ones",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_api.HAS_REFCOUNT": {
  "data": {
   "shadows": "numpy.testing.HAS_REFCOUNT"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.NPY_RELAXED_STRIDES_CHECKING": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.core.tests.test_api.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_api.test_array_array": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "_buffer",
    "_memoryview",
    "_unicode",
    "bytes",
    "dict",
    "float",
    "getattr",
    "globals",
    "hasattr",
    "int",
    "numpy.MAXDIMS",
    "numpy.array",
    "numpy.core.tests.test_api.sys",
    "numpy.dtype",
    "numpy.float64",
    "numpy.full",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.uint8",
    "object",
    "range",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_array_astype": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.matrix",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_broadcast_arrays": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.broadcast_arrays",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_contiguous_flags": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "check_contig",
    "numpy.array",
    "numpy.core.tests.test_api.NPY_RELAXED_STRIDES_CHECKING",
    "numpy.empty",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_contiguous_flags.check_contig": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copy_order": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "check_copy_result",
    "numpy.arange",
    "numpy.copy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copy_order.check_copy_result": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.core.tests.test_api.NPY_RELAXED_STRIDES_CHECKING",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copyto": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.copyto",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copyto_fromscalar": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.copyto",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_copyto_permut": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.copyto",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_api.test_fastCopyAndTranspose": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.fastCopyAndTranspose",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_basic": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array2string",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_edgeitems_kwarg": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "int",
    "numpy.array2string",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_format_function": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "DeprecationWarning",
    "hex",
    "numpy.arange",
    "numpy.array",
    "numpy.array2string",
    "numpy.core.arrayprint.FloatFormat",
    "numpy.core.tests.test_arrayprint.sys",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns",
    "oct"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_format_function._format_function": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_linewidth": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "make_str",
    "numpy.full",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_linewidth.make_str": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "numpy.array2string"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_refcount": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array2string",
    "numpy.core.tests.test_arrayprint.gc",
    "numpy.core.tests.test_arrayprint.sys",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_structure_format": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array2string",
    "numpy.core.tests.test_arrayprint.textwrap",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.float64",
    "numpy.full",
    "numpy.set_printoptions",
    "numpy.str_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_summarize_1d": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_summarize_2d": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_unstructured_void_repr": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "eval",
    "numpy",
    "numpy.array",
    "numpy.testing.assert_equal",
    "repr",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArray2String.test_wide_element": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array2string",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal",
    "repr",
    "str",
    "sub"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.DuckCounter": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.DuckCounter.__getitem__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.DuckCounter.__str__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.array2string"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.DuckCounter.to_string": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.sub": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.sub.__getitem__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "sub",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_0d_object_subclass.sub.__new__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_containing_list": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_fieldless_structured": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.empty",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_nan_inf": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_object_subclass": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.testing.dec.knownfailureif",
    "repr",
    "str",
    "sub"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_object_subclass.sub": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_object_subclass.sub.__getitem__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sub",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_object_subclass.sub.__new__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_self_containing": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_subclass": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_subclass.sub": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestArrayRepr.test_void_scalar_recursion": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.void",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestComplexArray": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestComplexArray.test_str": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.complex64",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.setup": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.get_printoptions"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.teardown": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.set_printoptions"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_0d_arrays": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.array",
    "numpy.array2string",
    "numpy.core.tests.test_arrayprint.sys",
    "numpy.datetime64",
    "numpy.set_printoptions",
    "numpy.str_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns",
    "numpy.timedelta64",
    "numpy.zeros",
    "repr",
    "str",
    "type",
    "unicode"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_basic": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_bool_spacing": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_dtype_linewidth_wrapping": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_arrayprint.sys",
    "numpy.core.tests.test_arrayprint.textwrap",
    "numpy.ones",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_edgeitems": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_arrayprint.textwrap",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_float_overflow_nowarn": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "numpy.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_float_spacing": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_floatmode": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float16",
    "numpy.float64",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_formatter": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_formatter_reset": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_legacy_mode_scalars": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "complex",
    "numpy.complex128",
    "numpy.float64",
    "numpy.nan",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_legacy_stray_comma": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_linewidth_repr": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "numpy.core.tests.test_arrayprint.textwrap",
    "numpy.full",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_linewidth_str": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "numpy.core.tests.test_arrayprint.textwrap",
    "numpy.full",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_precision_zero": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_sign_spacing": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.array",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.TestPrintOptions.test_sign_spacing_structured": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_arrayprint.test_unicode_object_array": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_arrayprint.sys",
    "numpy.testing.assert_equal",
    "object",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_arrayprint.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_datetime.TestDateTime": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_cast_overflow": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_cast_overflow.cast": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_cast_overflow.cast2": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_compare_generic_nat": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_creation_overflow": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_add": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_arange": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_arange_no_dtype": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_array_find_type": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.datetime",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_array_str": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_as_string": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.datetime",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_as_string_timezone": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.tests.test_datetime._has_pytz",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.skipif",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busday_holidays_count": {
  "data": {
   "lineno": 1867,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busday_holidays_offset": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busday_offset": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_busdaycalendar": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_casting_rules": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_compare": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_compare_nat": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns",
    "numpy.testing.suppress_warnings",
    "op"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_divide": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "float",
    "int",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.suppress_warnings",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_dtype_creation": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_futurewarning_once_nat": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings",
    "op"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_is_busday": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "len",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_like": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_maximum_reduce": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_minmax": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_multiply": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "check",
    "float",
    "int",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.suppress_warnings",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_multiply.check": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_nat_casting": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_scalar_construction": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_datetime.datetime",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_scalar_construction_timezone": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_string_conversion": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_subtract": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_unary": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_datetime_y2038": {
  "data": {
   "lineno": 1920,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_days_creation": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_days_to_pydate": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.datetime",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_different_unit_comparison": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_as": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_day": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_fs": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_hour": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_minute": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_month": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_second": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_week": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_divisor_conversion_year": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_dtype_comparison": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_dtype_promotion": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_hours": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_isnat": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_isnat_error": {
  "data": {
   "lineno": 1961,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_month_truncation": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_pickle": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.core.tests.test_datetime.pickle",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_pydatetime_creation": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.datetime",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_pyobject_roundtrip": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_setstate": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_string_parser_error_check": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_string_parser_variants": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_arange": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_arange_no_dtype": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_array_str": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_scalar_construction": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.tests.test_datetime.datetime",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTime.test_timedelta_scalar_construction_units": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.datetime",
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime.TestDateTimeData": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_datetime.TestDateTimeData.test_basic": {
  "data": {
   "lineno": 1971,
   "symbols_in_volume": [
    "numpy.core.tests.test_datetime.numpy",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_datetime._has_pytz": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.core.tests.test_datetime.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_datetime.tz": {
  "data": {
   "shadows": "pytz.timezone"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_defchararray.TestBasic": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_object_array": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.char.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_object_array_unicode": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.char.array",
    "numpy.core.tests.test_defchararray.kw_unicode_true",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_string": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "issubclass",
    "len",
    "numpy.char.array",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_string_array": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.char.array",
    "numpy.char.asarray",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "issubclass",
    "len",
    "numpy.char.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode_array": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "numpy.array",
    "numpy.char.array",
    "numpy.core.tests.test_defchararray.kw_unicode_true",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode_array.fail": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.char.array",
    "numpy.core.tests.test_defchararray.kw_unicode_false"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_unicode_upconvert": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "issubclass",
    "numpy.char.array",
    "numpy.testing.assert_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestChar": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestChar.setup": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestChar.test_it": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.setup": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_equal": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_greater": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_greater_equal": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_less": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_less_equal": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_not_equal": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed1": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.core.tests.test_defchararray.TestComparisons"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed1.setup": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray",
    "numpy.core.tests.test_defchararray.TestComparisons",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed2": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.core.tests.test_defchararray.TestComparisons"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed2.setup": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray",
    "numpy.core.tests.test_defchararray.TestComparisons",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestInformation.setup": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_count": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "issubclass",
    "numpy.integer",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_endswith": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_endswith.fail": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_find": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "issubclass",
    "numpy.integer",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_index": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "numpy.char.index",
    "numpy.integer",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_index.fail": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isalnum": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isalpha": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isdigit": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_islower": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isspace": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_istitle": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isupper": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_len": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "issubclass",
    "numpy.char.str_len",
    "numpy.integer",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rfind": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "issubclass",
    "numpy.integer",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rindex": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "numpy.char.rindex",
    "numpy.integer",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rindex.fail": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_startswith": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_startswith.fail": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestMethods.setup": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_capitalize": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_center": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "issubclass",
    "numpy.all",
    "numpy.char.center",
    "numpy.char.str_len",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_decode": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.char.array",
    "numpy.core.tests.test_defchararray.sys",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_encode": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_expandtabs": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isdecimal": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isdecimal.fail": {
  "data": {
   "lineno": 593
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isnumeric": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "numpy.bool_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isnumeric.fail": {
  "data": {
   "lineno": 583
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_join": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "issubclass",
    "numpy.array",
    "numpy.char.join",
    "numpy.core.tests.test_defchararray.sys",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_ljust": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "issubclass",
    "numpy.all",
    "numpy.char.ljust",
    "numpy.char.str_len",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_lower": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_lstrip": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_partition": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_replace": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "issubclass",
    "numpy.core.tests.test_defchararray.sys",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rjust": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "issubclass",
    "numpy.all",
    "numpy.char.rjust",
    "numpy.char.str_len",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rpartition": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rsplit": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "issubclass",
    "numpy.object_",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rstrip": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_split": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "issubclass",
    "numpy.object_",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_splitlines": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "issubclass",
    "len",
    "numpy.char.array",
    "numpy.object_",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_strip": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_swapcase": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_title": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_upper": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "issubclass",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestOperations.setup": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_add": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.chararray",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_mod": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_mul": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.chararray",
    "numpy.testing.assert_array_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_radd": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_rmod": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.assert_",
    "object",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_rmul": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.chararray",
    "numpy.testing.assert_array_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_slice": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_broadcast_error": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_broadcast_error.fail": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_args_tuple": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_args_tuple.fail": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_function_args": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_function_args.fail": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_result_type": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_result_type.fail": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_type_descr": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_type_descr.fail": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_existent_method": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_existent_method.fail": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_string_array": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_string_array.fail": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace.setup": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace.test1": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.any",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray._vec_string": {
  "data": {
   "shadows": "numpy.core.multiarray._vec_string"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.kw_unicode_false": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.core.tests.test_defchararray.kw_unicode_true": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.core.tests.test_defchararray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.test_empty_indexing": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "numpy.chararray",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_deprecations.TestArrayDataAttributeAssignmentDeprecation": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestArrayDataAttributeAssignmentDeprecation.test_data_attr_assignment": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestBinaryReprInsufficientWidthParameterForRepresentation": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestBinaryReprInsufficientWidthParameterForRepresentation.test_insufficient_width_negative": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.binary_repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestBinaryReprInsufficientWidthParameterForRepresentation.test_insufficient_width_positive": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "numpy.binary_repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestBincount": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestBincount.test_bincount_minlength": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.bincount"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestClassicIntDivision": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestClassicIntDivision.test_int_dtypes": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_deprecations.operator",
    "numpy.core.tests.test_deprecations.sys"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_array_richcompare_legacy_weirdness": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "TypeError",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.core.tests.test_deprecations.operator",
    "numpy.core.tests.test_deprecations.sys",
    "numpy.core.tests.test_deprecations.warnings",
    "numpy.int16",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_warns",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_normal_types": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_deprecations.operator",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_string": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_void_dtype_equality_failures": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "FutureWarning",
    "NotArray",
    "numpy.arange",
    "numpy.testing.assert_warns",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_void_dtype_equality_failures.NotArray": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_void_dtype_equality_failures.NotArray.__array__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestComparisonDeprecations.test_void_dtype_equality_failures.NotArray.__ne__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestDatetime64Timezone": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestDatetime64Timezone.test_datetime": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._has_pytz",
    "numpy.core.tests.test_deprecations.datetime",
    "numpy.core.tests.test_deprecations.pytz",
    "numpy.datetime64",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestDatetime64Timezone.test_string": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.datetime64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestDatetimeEvent": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestDatetimeEvent.test_3_tuple": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestInvalidOrderParameterInputForFlattenArrayDeprecation": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestInvalidOrderParameterInputForFlattenArrayDeprecation.test_flatten_array_invalid_string_arg": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestInvalidOrderParameterInputForFlattenArrayDeprecation.test_flatten_array_non_string_arg": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestLinspaceInvalidNumParameter": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestLinspaceInvalidNumParameter.test_float_arg": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestNPY_CHAR": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestNPY_CHAR.test_npy_char_deprecation": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.npy_char_deprecation",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestNonCContiguousViewDeprecation": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestNonCContiguousViewDeprecation.test_fortran_contiguous": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "complex",
    "numpy.int8",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestNonNumericConjugate": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestNonNumericConjugate.test_conjugate": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestNumericStyleTypecodes": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestNumericStyleTypecodes.test_all_dtypes": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.tests.test_deprecations.sys",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestRankDeprecation": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestRankDeprecation.test": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.VisibleDeprecationWarning",
    "numpy.arange",
    "numpy.rank",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestTestDeprecated": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestTestDeprecated.test_assert_deprecated": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.core.tests.test_deprecations._DeprecationTestCase",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestTestDeprecated.test_assert_deprecated.foo": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.tests.test_deprecations.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestTruthTestingEmptyArrays": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.TestTruthTestingEmptyArrays.test_1d": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "bool",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.TestTruthTestingEmptyArrays.test_2d": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations.Test_UPDATEIFCOPY": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations.Test_UPDATEIFCOPY.test_npy_updateifcopy_deprecation": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.multiarray_tests.npy_updateifcopy_deprecation"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "DeprecationWarning",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.assert_deprecated": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "function",
    "len",
    "numpy._NoValue",
    "numpy.core.tests.test_deprecations.warnings",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.assert_not_deprecated": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "function",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.setup": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.core.tests.test_deprecations.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._DeprecationTestCase.teardown": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "numpy.core.tests.test_deprecations._VisibleDeprecationTestCase": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.VisibleDeprecationWarning",
    "numpy.core.tests.test_deprecations._DeprecationTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_deprecations._has_pytz": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.core.tests.test_deprecations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.assert_no_warnings": {
  "data": {
   "shadows": "numpy.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.npy_char_deprecation": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_char_deprecation"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.npy_updateifcopy_deprecation": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_updateifcopy_deprecation"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.op": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_deprecations.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_dtype.TestBuiltin": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_bad_param": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_dtype": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.core.tests.test_dtype.assert_dtype_equal",
    "numpy.dtype",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_equivalent_dtype_hashing": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "hash",
    "numpy.dtype",
    "numpy.testing.assert_",
    "numpy.uint32",
    "numpy.uintp",
    "numpy.ulonglong"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_field_order_equality": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_invalid_types": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "TypeError",
    "numpy.dtype",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_run": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "complex",
    "float",
    "hash",
    "int",
    "numpy.dtype",
    "numpy.int32",
    "numpy.unicode",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributeDeletion": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributeDeletion.test_dtype_non_writable_attributes_deletion": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "AttributeError",
    "delattr",
    "numpy.double",
    "numpy.dtype",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributeDeletion.test_dtype_writable_attributes_deletion": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "AttributeError",
    "delattr",
    "numpy.double",
    "numpy.dtype",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributes": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributes.test_descr_has_trailing_void": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributes.test_name_builtin": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "numpy.typeDict.values"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributes.test_name_dtype_subclass": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestDtypeAttributes.test_name_dtype_subclass.user_def_subcls": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "numpy.void"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestMetadata": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_base_metadata_copied": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_",
    "numpy.void"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_metadata_rejects_nondict": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.dtype",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_metadata_takes_dict": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_nested_metadata": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_no_metadata": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMonsterType": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestMonsterType.test1": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_dtype.assert_dtype_equal",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestPickling.check_pickling": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "numpy.core.tests.test_dtype.pickle",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_builtin": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "bool",
    "complex",
    "float",
    "int",
    "numpy.dtype",
    "numpy.int32",
    "numpy.unicode",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_datetime": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_metadata": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "int",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestPickling.test_structured": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_aligned_size": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_bool_commastring": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_comma_datetime": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_different_names": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_dtype.assert_dtype_not_equal",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_different_titles": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.core.tests.test_dtype.assert_dtype_not_equal",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_equivalent_record": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_dtype.assert_dtype_equal",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_fields_by_index": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "numpy.core.tests.test_dtype.assert_dtype_equal",
    "numpy.core.tests.test_dtype.operator",
    "numpy.dtype",
    "numpy.float32",
    "numpy.int8",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_from_dict_with_zero_width_field": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_dtype.assert_dtype_equal",
    "numpy.dtype",
    "numpy.float32",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_from_dictproxy": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.core.tests.test_dtype.assert_dtype_equal",
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "numpy.void"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_mutate": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_dtype.assert_dtype_equal",
    "numpy.core.tests.test_dtype.assert_dtype_not_equal",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_nonint_offsets": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "make_dtype",
    "numpy.testing.assert_raises",
    "numpy.uint32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_nonint_offsets.make_dtype": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_not_lists": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "numpy.dtype",
    "numpy.testing.assert_raises",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_union_struct": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestString.test_base_dtype_with_object_type": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_complex_dtype_repr": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_complex_dtype_str": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "eval",
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_dtype_str_with_long_in_shape": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.core.tests.test_dtype.sys",
    "numpy.dtype",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestString.test_empty_string_to_object": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "numpy.array",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_alignment": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_equivalent_record": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_dtype.assert_dtype_equal",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_nonequivalent_record": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_dtype.assert_dtype_not_equal",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_equal": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_dtype.assert_dtype_equal",
    "numpy.dtype",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_invalid": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "numpy.iinfo",
    "numpy.intc",
    "numpy.intp",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_matches_ndim": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_monster": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.core.tests.test_dtype.assert_dtype_not_equal",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_sequence": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "IntLike",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.dtype",
    "numpy.int16",
    "numpy.testing.assert_",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_sequence.IntLike": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_sequence.IntLike.__index__": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_sequence.IntLike.__int__": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_shape_simple": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.core.tests.test_dtype.assert_dtype_not_equal",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_single_subarray": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_dtype.assert_dtype_equal",
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.assert_dtype_equal": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "hash",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.assert_dtype_not_equal": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "hash",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.rational": {
  "data": {
   "shadows": "numpy.core.test_rational.rational"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype.test_dtypes_are_true": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "bool",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.test_invalid_dtype_string": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "TypeError",
    "numpy.dtype",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.test_rational_dtype": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.array",
    "numpy.core.test_rational.rational",
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "numpy.core.tests.test_einsum.chars",
    "numpy.core.tests.test_einsum.global_size_dict",
    "numpy.core.tests.test_einsum.sizes",
    "numpy.testing.run_module_suite",
    "zip"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_einsum.TestEinSum": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_einsum.TestEinSum.check_einsum_sums": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "Ellipsis",
    "numpy.ComplexWarning",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.dtype",
    "numpy.einsum",
    "numpy.full",
    "numpy.inner",
    "numpy.logical_and",
    "numpy.multiply",
    "numpy.ones",
    "numpy.outer",
    "numpy.sum",
    "numpy.tensordot",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "numpy.trace",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.optimize_compare": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "numpy.core.tests.test_einsum.global_size_dict",
    "numpy.einsum",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_collapse": {
  "data": {
   "lineno": 747
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_complex": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_edge_cases": {
  "data": {
   "lineno": 765
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_all_contig_non_contig_output": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.float32",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_broadcast": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.einsum",
    "numpy.prod",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_errors": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.einsum",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_fixed_collapsingbug": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.einsum",
    "numpy.random.normal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_fixedstridebug": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.einsum",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.tensordot",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_misc": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.einsum",
    "numpy.int64",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_cfloat128": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_cfloat64": {
  "data": {
   "lineno": 550
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_clongdouble": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numpy.clongdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_float16": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_float32": {
  "data": {
   "lineno": 540
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_float64": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_int16": {
  "data": {
   "lineno": 517
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_int32": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_int64": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_int8": {
  "data": {
   "lineno": 511
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_longdouble": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_uint16": {
  "data": {
   "lineno": 520
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_uint32": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_uint64": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_sums_uint8": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_einsum_views": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "Ellipsis",
    "numpy.arange",
    "numpy.einsum",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_expand": {
  "data": {
   "lineno": 756
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_hadamard_like_products": {
  "data": {
   "lineno": 725
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_index_transformations": {
  "data": {
   "lineno": 730
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_inner_product": {
  "data": {
   "lineno": 780
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_random_cases": {
  "data": {
   "lineno": 788
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSum.test_small_boolean_arrays": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.einsum",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSumPath": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_einsum.TestEinSumPath.assert_path_equal": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.testing.assert_",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSumPath.build_operands": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "numpy.core.tests.test_einsum.global_size_dict",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSumPath.test_edge_paths": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "numpy.einsum_path"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSumPath.test_long_paths": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "numpy.einsum_path"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSumPath.test_memory_contraints": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "numpy.einsum_path"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.TestEinSumPath.test_path_type_input": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.einsum_path",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_einsum.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.chars": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.core.tests.test_einsum.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.global_size_dict": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.core.tests.test_einsum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_einsum.sizes": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.core.tests.test_einsum.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_errstate.TestErrstate": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_divide": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "FloatingPointError",
    "numpy.arange",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_errcall": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.geterrcall",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_errcall.foo": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_errstate.TestErrstate.test_invalid": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "FloatingPointError",
    "numpy.arange",
    "numpy.core.tests.test_errstate.platform",
    "numpy.errstate",
    "numpy.sqrt",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_errstate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_errstate.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "list",
    "numpy.core.tests.test_extint128.INT128_MAX",
    "numpy.core.tests.test_extint128.INT128_MID",
    "numpy.core.tests.test_extint128.INT128_MIN",
    "numpy.core.tests.test_extint128.INT64_MAX",
    "numpy.core.tests.test_extint128.INT64_MID",
    "numpy.core.tests.test_extint128.INT64_MIN",
    "numpy.core.tests.test_extint128.INT64_VALUES",
    "numpy.iinfo",
    "numpy.int64",
    "range",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_extint128.INT128_MAX": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.core.tests.test_extint128.INT128_MID": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.core.tests.test_extint128.INT128_MIN": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.core.tests.test_extint128.INT128_VALUES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.core.tests.test_extint128.INT64_MAX": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.core.tests.test_extint128.INT64_MID": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.core.tests.test_extint128.INT64_MIN": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.core.tests.test_extint128.INT64_POS_VALUES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.core.tests.test_extint128.INT64_VALUES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.core.tests.test_extint128.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.exc_iter": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "iterate",
    "numpy.core.tests.test_extint128.contextlib",
    "numpy.core.tests.test_extint128.traceback",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.exc_iter.iterate": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.core.tests.test_extint128.itertools"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.mt": {
  "data": {
   "shadows": "numpy.core.multiarray_tests"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_extint128.test_add_128": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.core.multiarray_tests.extint_add_128",
    "numpy.core.tests.test_extint128.INT128_MAX",
    "numpy.core.tests.test_extint128.INT128_MIN",
    "numpy.core.tests.test_extint128.INT128_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_ceildiv_128_64": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.extint_ceildiv_128_64",
    "numpy.core.tests.test_extint128.INT128_VALUES",
    "numpy.core.tests.test_extint128.INT64_POS_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_divmod_128_64": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "divmod",
    "numpy.core.multiarray_tests.extint_divmod_128_64",
    "numpy.core.tests.test_extint128.INT128_VALUES",
    "numpy.core.tests.test_extint128.INT64_POS_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_floordiv_128_64": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.extint_floordiv_128_64",
    "numpy.core.tests.test_extint128.INT128_VALUES",
    "numpy.core.tests.test_extint128.INT64_POS_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_gt_128": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.extint_gt_128",
    "numpy.core.tests.test_extint128.INT128_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_mul_64_64": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.extint_mul_64_64",
    "numpy.core.tests.test_extint128.INT64_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_neg_128": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.extint_neg_128",
    "numpy.core.tests.test_extint128.INT128_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_safe_binop": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.core.multiarray_tests.extint_safe_binop",
    "numpy.core.tests.test_extint128.INT64_MAX",
    "numpy.core.tests.test_extint128.INT64_MIN",
    "numpy.core.tests.test_extint128.INT64_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.core.tests.test_extint128.operator",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "pyop"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_shl_128": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.extint_shl_128",
    "numpy.core.tests.test_extint128.INT128_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_shr_128": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.extint_shr_128",
    "numpy.core.tests.test_extint128.INT128_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_sub_128": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.core.multiarray_tests.extint_sub_128",
    "numpy.core.tests.test_extint128.INT128_MAX",
    "numpy.core.tests.test_extint128.INT128_MIN",
    "numpy.core.tests.test_extint128.INT128_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_to_128": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.extint_to_128",
    "numpy.core.tests.test_extint128.INT64_VALUES",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.test_to_64": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.core.multiarray_tests.extint_to_64",
    "numpy.core.tests.test_extint128.INT128_VALUES",
    "numpy.core.tests.test_extint128.INT64_MAX",
    "numpy.core.tests.test_extint128.INT64_MIN",
    "numpy.core.tests.test_extint128.exc_iter",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_extint128.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__add__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.core.tests.test_function_base.PhysicalQuantity",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__div__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "float",
    "numpy.core.tests.test_function_base.PhysicalQuantity"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__mul__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "float",
    "numpy.core.tests.test_function_base.PhysicalQuantity"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__new__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "float.__new__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__rdiv__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "float",
    "numpy.core.tests.test_function_base.PhysicalQuantity"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__rsub__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.core.tests.test_function_base.PhysicalQuantity",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity.__sub__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.core.tests.test_function_base.PhysicalQuantity",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.PhysicalQuantity2": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestGeomspace": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_array_scalar": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.geomspace",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_basic": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "numpy.geomspace",
    "numpy.testing.assert_",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_bounds": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "numpy.geomspace",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_complex": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "complex",
    "numpy.geomspace",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_dtype": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "complex",
    "float",
    "numpy.dtype",
    "numpy.geomspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_physical_quantities": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.core.tests.test_function_base.PhysicalQuantity",
    "numpy.geomspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestGeomspace.test_subclass": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_function_base.PhysicalQuantity2",
    "numpy.geomspace",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_interface": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "Arrayish",
    "numpy.array",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_interface.Arrayish": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_interface.Arrayish.__array_interface__": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_interface.Arrayish.__init__": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_interface.Arrayish.__mul__": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_array_scalar": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_basic": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.linspace",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_complex": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_corner": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "DeprecationWarning",
    "list",
    "numpy.linspace",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_denormal_numbers": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "any",
    "ftype",
    "numpy.linspace",
    "numpy.nextafter",
    "numpy.sctypes",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_dtype": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_equivalent_to_arange": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.linspace",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_physical_quantities": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.core.tests.test_function_base.PhysicalQuantity",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_retstep": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.testing.assert_",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_subclass": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_function_base.PhysicalQuantity2",
    "numpy.linspace",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_type": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_basic": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "numpy.logspace",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_dtype": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.logspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_physical_quantities": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.core.tests.test_function_base.PhysicalQuantity",
    "numpy.logspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_subclass": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_function_base.PhysicalQuantity2",
    "numpy.logspace",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.dtype": {
  "data": {
   "shadows": "numpy.dtype"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.geomspace": {
  "data": {
   "shadows": "numpy.geomspace"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.linspace": {
  "data": {
   "shadows": "numpy.linspace"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.logspace": {
  "data": {
   "shadows": "numpy.logspace"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.nextafter": {
  "data": {
   "shadows": "numpy.nextafter"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.sctypes": {
  "data": {
   "shadows": "numpy.sctypes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_getlimits.TestDouble": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestDouble.test_singleton": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "id",
    "numpy.core.finfo",
    "numpy.double",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestFinfo": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestFinfo.test_basic": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "list",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.core.finfo",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestHalf": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestHalf.test_singleton": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "id",
    "numpy.core.finfo",
    "numpy.half",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestIinfo": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestIinfo.test_basic": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "list",
    "numpy.core.iinfo",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestIinfo.test_unsigned_max": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "T",
    "numpy.core.iinfo",
    "numpy.sctypes",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestLongdouble": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestLongdouble.test_singleton": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "id",
    "numpy.core.finfo",
    "numpy.longdouble",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestPythonFloat": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestPythonFloat.test_singleton": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "float",
    "id",
    "numpy.core.finfo",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestRepr": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestRepr.test_finfo_repr": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestRepr.test_iinfo_repr": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int16",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestSingle": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestSingle.test_singleton": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "id",
    "numpy.core.finfo",
    "numpy.single",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits._discovered_machar": {
  "data": {
   "shadows": "numpy.core.getlimits._discovered_machar"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits._float128_ma": {
  "data": {
   "shadows": "numpy.core.getlimits._float128_ma"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits._float16_ma": {
  "data": {
   "shadows": "numpy.core.getlimits._float16_ma"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits._float32_ma": {
  "data": {
   "shadows": "numpy.core.getlimits._float32_ma"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits._float64_ma": {
  "data": {
   "shadows": "numpy.core.getlimits._float64_ma"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits._float80_ma": {
  "data": {
   "shadows": "numpy.core.getlimits._float80_ma"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.assert_ma_equal": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.double": {
  "data": {
   "shadows": "numpy.double"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.finfo": {
  "data": {
   "shadows": "numpy.core.finfo"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.half": {
  "data": {
   "shadows": "numpy.half"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.iinfo": {
  "data": {
   "shadows": "numpy.core.iinfo"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.longdouble": {
  "data": {
   "shadows": "numpy.longdouble"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.single": {
  "data": {
   "shadows": "numpy.single"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.test_instances": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.core.finfo",
    "numpy.core.iinfo"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.test_known_types": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "bytes",
    "numpy.core.getlimits._discovered_machar",
    "numpy.core.getlimits._float128_ma",
    "numpy.core.getlimits._float16_ma",
    "numpy.core.getlimits._float32_ma",
    "numpy.core.getlimits._float64_ma",
    "numpy.core.getlimits._float80_ma",
    "numpy.core.tests.test_getlimits.assert_ma_equal",
    "numpy.dtype",
    "numpy.errstate",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.test_plausible_finfo": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.sctypes",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_half.TestHalf": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_half.TestHalf.setup": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_array_interface": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "Dummy",
    "numpy.array",
    "numpy.float16",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_array_interface.Dummy": {
  "data": {
   "lineno": 425
  },
  "type": "class"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_coercion": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.power",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_conversions": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.float16",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_correctness": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.int32",
    "numpy.nonzero",
    "numpy.testing.assert_equal",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_fpe": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_half.assert_raises_fpe",
    "numpy.core.tests.test_half.platform",
    "numpy.divide",
    "numpy.errstate",
    "numpy.float16",
    "numpy.inf",
    "numpy.nan",
    "numpy.nextafter",
    "numpy.spacing",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_funcs": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.float16",
    "numpy.float32",
    "numpy.inf",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_ordering": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.nonzero",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_rounding": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_ufuncs": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.add",
    "numpy.array",
    "numpy.conjugate",
    "numpy.copysign",
    "numpy.divide",
    "numpy.divmod",
    "numpy.equal",
    "numpy.float16",
    "numpy.floor_divide",
    "numpy.fmax",
    "numpy.fmin",
    "numpy.frexp",
    "numpy.greater",
    "numpy.greater_equal",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.ldexp",
    "numpy.less",
    "numpy.less_equal",
    "numpy.logical_and",
    "numpy.logical_not",
    "numpy.logical_or",
    "numpy.logical_xor",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.modf",
    "numpy.multiply",
    "numpy.nan",
    "numpy.negative",
    "numpy.not_equal",
    "numpy.ones_like",
    "numpy.positive",
    "numpy.reciprocal",
    "numpy.remainder",
    "numpy.sign",
    "numpy.signbit",
    "numpy.square",
    "numpy.subtract",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_half_values": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float16",
    "numpy.inf",
    "numpy.testing.assert_equal",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_nans_infs": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.float16",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.signbit",
    "numpy.spacing",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.TestHalf.test_spacing_nextafter": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float16",
    "numpy.inf",
    "numpy.nextafter",
    "numpy.spacing",
    "numpy.testing.assert_equal",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.assert_raises_fpe": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "FloatingPointError",
    "callable",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_half.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.float16": {
  "data": {
   "shadows": "numpy.float16"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.float32": {
  "data": {
   "shadows": "numpy.float32"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.float64": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_half.uint16": {
  "data": {
   "shadows": "numpy.uint16"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_arraytypes_fasttake": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "IndexError",
    "numpy.empty",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_iterators_exceptions": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "IndexError",
    "assign",
    "numpy.array",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_iterators_exceptions.assign": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_mapping": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "IndexError",
    "assign",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_mapping.assign": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_methods": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "IndexError",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_multiindex_exceptions": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "IndexError",
    "numpy.empty",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_put_exceptions": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "IndexError",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.TestIndexErrors.test_take_from_object": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "IndexError",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexerrors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexerrors.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "__name__",
    "hasattr",
    "numpy.core.multiarray.__file__",
    "numpy.core.tests.test_indexing.cdll",
    "numpy.core.tests.test_indexing.sys",
    "numpy.ctypeslib.load_library",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_indexing.HAS_REFCOUNT": {
  "data": {
   "shadows": "numpy.testing.HAS_REFCOUNT"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.TestArrayToIndexDeprecation": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestArrayToIndexDeprecation.test_array_to_index_error": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.core.tests.test_indexing.operator",
    "numpy.reshape",
    "numpy.take",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBooleanIndexing": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestBooleanIndexing.test_bool_as_int_argument_errors": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "numpy.True_",
    "numpy.array",
    "numpy.bool_",
    "numpy.core.tests.test_indexing.operator",
    "numpy.reshape",
    "numpy.take",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBooleanIndexing.test_boolean_indexing_weirdness": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "IndexError",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.assign": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.test_broadcast_subspace": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.test_index_is_larger": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.test_prepend_not_one": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.s_",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.test_prepending_ones": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestBroadcastedAssignments.test_simple_broadcasting_errors": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "ValueError",
    "numpy.s_",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestCApiAccess": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestCApiAccess.test_getitem": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "IndexError",
    "numpy.arange",
    "numpy.core.multiarray_tests.array_indexing",
    "numpy.core.tests.test_indexing.functools",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "subscript"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestCApiAccess.test_setitem": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "assign",
    "numpy.arange",
    "numpy.core.multiarray_tests.array_indexing",
    "numpy.core.tests.test_indexing.functools",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFancyIndexingCast": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestFancyIndexingCast.test_boolean_index_cast_assign": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "bool",
    "numpy.ComplexWarning",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFancyIndexingEquivalence": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestFancyIndexingEquivalence.test_cast_equivalence": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFancyIndexingEquivalence.test_object_assign": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFieldIndexing": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestFieldIndexing.test_scalar_return_type": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_non_integer_argument_errors": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.float64",
    "numpy.reshape",
    "numpy.take",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_non_integer_sequence_multiplication": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "TypeError",
    "mult",
    "numpy.float_",
    "numpy.int_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_non_integer_sequence_multiplication.mult": {
  "data": {
   "lineno": 1201
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_reduce_axis_float_index": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "TypeError",
    "numpy.min",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_valid_indexing": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestFloatNonIntegerArgument.test_valid_slicing": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_assignment_needs_api": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_assignment_value_mismatch": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_assignment_value_mismatch.f": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_indexing_onedim": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_indexing_twodim": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_boolean_shape_mismatch": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "IndexError",
    "bool",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broaderrors_indexing": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "IndexError",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broken_sequence_not_nd_index": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "SequenceLike",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broken_sequence_not_nd_index.SequenceLike": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broken_sequence_not_nd_index.SequenceLike.__getitem__": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broken_sequence_not_nd_index.SequenceLike.__index__": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_broken_sequence_not_nd_index.SequenceLike.__len__": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_ellipsis_index": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "Ellipsis",
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_empty_fancy_index": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.intp",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_empty_tuple_index": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.int_",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_everything_returns_views": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_index_no_array_to_index": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_index_no_floats": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_indexing_array_negative_strides": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_indexing_array_weird_strides": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.broadcast_to",
    "numpy.intp",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_memory_order": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_nonbaseclass_values": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_nonbaseclass_values.SubClass": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_nonbaseclass_values.SubClass.__array_finalize__": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_none_index": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.newaxis",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_reverse_strides_and_subspace_bufferinit": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.intp",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_reversed_strides_result_allocation": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_same_kind_index_casting": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.uintp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_array_bool": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ArrayLike",
    "Zero",
    "isinstance",
    "numpy.array",
    "numpy.float_",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type.ArrayLike": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type.ArrayLike.__array__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type.Zero": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_scalar_return_type.Zero.__index__": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_single_bool_index": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_single_int_index": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_slicing_no_floats": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_small_regressions": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.core.tests.test_indexing.sys",
    "numpy.dtype",
    "numpy.intp",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_subclass_writeable": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.rec.array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_too_many_fancy_indices_special_case": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_trivial_fancy_out_of_bounds": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "IndexError",
    "numpy.intp",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_tuple_subclass": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "TupleSubclass",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_tuple_subclass.TupleSubclass": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_unaligned": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.int16",
    "numpy.int8",
    "numpy.intp",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "ord"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_uncontiguous_subspace_assignment": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.full",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestIndexing.test_void_scalar_empty_tuple": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._check_multi_index": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "Exception",
    "numpy.core.tests.test_indexing.sys",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._check_single_index": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "Exception",
    "numpy.core.tests.test_indexing.sys",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._compare_index_result": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "numpy.core.tests.test_indexing.sys",
    "numpy.may_share_memory",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated._get_multi_index": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "Ellipsis",
    "Exception",
    "IndexError",
    "ValueError",
    "bool",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.broadcast",
    "numpy.intp",
    "numpy.ndarray",
    "numpy.nonzero",
    "numpy.prod",
    "numpy.product",
    "numpy.ravel_multi_index",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.setup": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "Ellipsis",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.empty",
    "numpy.int8",
    "numpy.intp",
    "numpy.prod",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_1d": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "numpy.VisibleDeprecationWarning",
    "numpy.arange",
    "numpy.core.tests.test_indexing.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_boolean": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_multidim": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "DeprecationWarning",
    "IndexError",
    "isskip",
    "itertools.product",
    "numpy.VisibleDeprecationWarning",
    "numpy.core.tests.test_indexing.warnings",
    "numpy.testing.assert_raises",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultiIndexingAutomated.test_multidim.isskip": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestMultipleEllipsisError": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestMultipleEllipsisError.test_basic": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "Ellipsis",
    "IndexError",
    "numpy.arange",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestNonIntegerArrayLike": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestNonIntegerArrayLike.test_basic": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "IndexError",
    "numpy.arange",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_basic": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_basic.SubClass": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_finalize_gets_full_info": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_finalize_gets_full_info.SubClass": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_finalize_gets_full_info.SubClass.__array_finalize__": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_matrix_fancy": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.asmatrix",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_slice_decref_getsetslice": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "AssertionError",
    "DeprecationWarning",
    "ValueError",
    "hasattr",
    "numpy.array",
    "numpy.core.tests.test_indexing.sys",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "numpy.testing.suppress_warnings",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_slice_decref_getsetslice.KeepIndexObject": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_slice_decref_getsetslice.KeepIndexObject.__getitem__": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "ValueError",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing.TestSubclasses.test_slice_decref_getsetslice.KeepIndexObject.__setitem__": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "ValueError",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_indexing._HAS_CTYPE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.core.tests.test_indexing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.array_indexing": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.array_indexing"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.cdll": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.core.tests.test_indexing.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_indexing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_item_selection.HAS_REFCOUNT": {
  "data": {
   "shadows": "numpy.testing.HAS_REFCOUNT"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.TestTake": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_empty_argpartition": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int16",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_empty_partition": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int16",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_refcounting": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "numpy.core.tests.test_item_selection.sys",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_simple": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "IndexError",
    "int",
    "list",
    "numpy.array",
    "numpy.dtype",
    "numpy.empty",
    "numpy.intp",
    "numpy.issubdtype",
    "numpy.number",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "object",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.TestTake.test_unicode_mode": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_item_selection.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_item_selection.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "len",
    "numpy.core.tests.test_longdouble.LD_INFO",
    "numpy.core.tests.test_longdouble._o",
    "numpy.double",
    "numpy.finfo",
    "numpy.longdouble",
    "numpy.testing.run_module_suite",
    "repr"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_longdouble.LD_INFO": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.core.tests.test_longdouble.TestFileBased": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_longdouble.LD_INFO",
    "object",
    "repr"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_fromfile": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.core.tests.test_longdouble.string_to_longdouble_inaccurate",
    "numpy.fromfile",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.knownfailureif",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_fromfile_bogus": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.fromfile",
    "numpy.testing.assert_equal",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_genfromtxt": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.core.tests.test_longdouble.string_to_longdouble_inaccurate",
    "numpy.genfromtxt",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.knownfailureif",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_loadtxt": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.core.tests.test_longdouble.string_to_longdouble_inaccurate",
    "numpy.loadtxt",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.knownfailureif",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.TestFileBased.test_tofile_roundtrip": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.core.tests.test_longdouble.string_to_longdouble_inaccurate",
    "numpy.fromfile",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.knownfailureif",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble._o": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.core.tests.test_longdouble.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.longdouble_longer_than_double": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.core.tests.test_longdouble.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.repr_precision": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.core.tests.test_longdouble.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.string_to_longdouble_inaccurate": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.core.tests.test_longdouble.temppath": {
  "data": {
   "shadows": "numpy.testing.temppath"
  },
  "type": "import"
 },
 "numpy.core.tests.test_longdouble.test_array_repr": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.array",
    "numpy.core.tests.test_longdouble.LD_INFO",
    "numpy.core.tests.test_longdouble.longdouble_longer_than_double",
    "numpy.core.tests.test_longdouble.string_to_longdouble_inaccurate",
    "numpy.longdouble",
    "numpy.testing.assert_",
    "numpy.testing.dec.knownfailureif",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_bogus_string": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "numpy.longdouble",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_bytes": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_format": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.core.tests.test_longdouble.LD_INFO",
    "numpy.core.tests.test_longdouble.longdouble_longer_than_double",
    "numpy.core.tests.test_longdouble.string_to_longdouble_inaccurate",
    "numpy.testing.assert_",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_longdouble.LD_INFO",
    "numpy.core.tests.test_longdouble.string_to_longdouble_inaccurate",
    "numpy.fromstring",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.knownfailureif",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_best_effort": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.fromstring",
    "numpy.longdouble",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_best_effort_float": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.fromstring",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_bogus": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.fromstring",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_empty": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.fromstring",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_foreign": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.fromstring",
    "numpy.longdouble",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_foreign_repr": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "float",
    "numpy.fromstring",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_foreign_sep": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.fromstring",
    "numpy.longdouble",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_foreign_value": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.fromstring",
    "numpy.longdouble",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_fromstring_missing": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.fromstring",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_percent": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.core.tests.test_longdouble.LD_INFO",
    "numpy.core.tests.test_longdouble.longdouble_longer_than_double",
    "numpy.core.tests.test_longdouble.string_to_longdouble_inaccurate",
    "numpy.testing.assert_",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_repr_exact": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.core.tests.test_longdouble.LD_INFO",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_repr_roundtrip": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.core.tests.test_longdouble.LD_INFO",
    "numpy.core.tests.test_longdouble.repr_precision",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_repr_roundtrip_bytes": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.core.tests.test_longdouble.LD_INFO",
    "numpy.core.tests.test_longdouble.string_to_longdouble_inaccurate",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.knownfailureif",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_repr_roundtrip_foreign": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_scalar_extraction": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_longdouble.LD_INFO",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_string": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_longdouble.test_unicode": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_machar": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_machar.MachAr": {
  "data": {
   "shadows": "numpy.core.machar.MachAr"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.TestMachAr": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_machar.TestMachAr._run_machar_highprec": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "numpy.core.machar.MachAr",
    "numpy.core.numerictypes.float96"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_machar.TestMachAr.test_underlow": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "AssertionError",
    "FloatingPointError",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_machar.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.errstate": {
  "data": {
   "shadows": "numpy.errstate"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.ntypes": {
  "data": {
   "shadows": "numpy.core.numerictypes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_machar.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.core.tests.test_mem_overlap.ndims",
    "numpy.core.tests.test_mem_overlap.size",
    "numpy.core.tests.test_mem_overlap.sys",
    "numpy.testing.run_module_suite",
    "range",
    "tuple"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_mem_overlap.DummyArray": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.DummyArray"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.MAY_SHARE_BOUNDS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.core.tests.test_mem_overlap.MAY_SHARE_EXACT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.check_unary_fuzz": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "get_out_axis_size",
    "next",
    "numpy.core.tests.test_mem_overlap.assert_copy_equivalent",
    "numpy.core.tests.test_mem_overlap.iter_random_view_pairs",
    "numpy.core.tests.test_mem_overlap.itertools",
    "numpy.int16",
    "numpy.random.RandomState",
    "numpy.shares_memory",
    "operation",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_1d_manual": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "check",
    "numpy.add",
    "numpy.arange",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.core.tests.test_mem_overlap.itertools",
    "numpy.float32",
    "numpy.float64",
    "numpy.index_exp",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.testing.dec.slow",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_1d_manual.check": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_accumulate_fuzz": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "get_out_axis_size",
    "numpy.add.accumulate",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_accumulate_fuzz.get_out_axis_size": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduce_fuzz": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "get_out_axis_size",
    "numpy.add.reduce",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduce_fuzz.get_out_axis_size": {
  "data": {
   "lineno": 707
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduceat_fuzz": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "get_out_axis_size",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduceat_fuzz.do_reduceat": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "len",
    "numpy.add.reduceat",
    "numpy.arange",
    "numpy.core.tests.test_mem_overlap.size"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduceat_fuzz.get_out_axis_size": {
  "data": {
   "lineno": 714
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduceat_manual": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "check",
    "numpy.add",
    "numpy.arange",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_binary_ufunc_reduceat_manual.check": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_inplace_op_simple_manual": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_ufunc_at_manual": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "check",
    "numpy.add",
    "numpy.arange",
    "numpy.int16",
    "numpy.invert"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_ufunc_at_manual.check": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_gufunc_fuzz": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "next",
    "numpy.core.tests.test_mem_overlap.assert_copy_equivalent",
    "numpy.core.tests.test_mem_overlap.iter_random_view_pairs",
    "numpy.core.umath_tests.euclidean_pdist",
    "numpy.errstate",
    "numpy.random.RandomState",
    "numpy.shares_memory",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_ufunc_1d_manual": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "check",
    "numpy.arange",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.core.tests.test_mem_overlap.itertools",
    "numpy.dtype",
    "numpy.errstate",
    "numpy.float32",
    "numpy.float64",
    "numpy.index_exp",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.integer",
    "numpy.invert",
    "numpy.issubdtype",
    "numpy.reciprocal",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_ufunc_1d_manual.check": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.core.tests.test_mem_overlap.view_element_first_byte",
    "numpy.testing.assert_array_equal",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_ufunc_call_fuzz": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.invert",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_ufunc_where_same": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "check",
    "numpy.arange",
    "numpy.bool_",
    "numpy.invert",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.TestUFunc.test_unary_ufunc_where_same.check": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap._check_assignment": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.core.tests.test_mem_overlap.shape",
    "numpy.product",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap._indices": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.core.tests.test_mem_overlap._indices_for_axis",
    "numpy.core.tests.test_mem_overlap.ndims",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap._indices_for_axis": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.core.tests.test_mem_overlap._indices_for_nelems"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap._indices_for_nelems": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.core.tests.test_mem_overlap.size",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.assert_copy_equivalent": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "dict",
    "numpy.testing.assert_equal",
    "operation"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.check_internal_overlap": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.internal_overlap",
    "numpy.core.tests.test_mem_overlap.itertools",
    "numpy.core.tests.test_mem_overlap.xrange",
    "numpy.testing.assert_equal",
    "repr",
    "set",
    "sum",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.check_may_share_memory_easy_fuzz": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "get_max_work",
    "min",
    "next",
    "numpy.core.tests.test_mem_overlap.MAY_SHARE_EXACT",
    "numpy.core.tests.test_mem_overlap.iter_random_view_pairs",
    "numpy.int16",
    "numpy.may_share_memory",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.check_may_share_memory_exact": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.core.tests.test_mem_overlap.MAY_SHARE_BOUNDS",
    "numpy.core.tests.test_mem_overlap.MAY_SHARE_EXACT",
    "numpy.may_share_memory",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.internal_overlap": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.internal_overlap"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.iter_random_view_pairs": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "max",
    "numpy.arange",
    "numpy.intp",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.random.RandomState",
    "random_slice",
    "random_slice_fixed_size",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.iter_random_view_pairs.random_slice": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.intp",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.iter_random_view_pairs.random_slice_fixed_size": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.core.tests.test_mem_overlap.size",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.ndims": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.core.tests.test_mem_overlap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.shape": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.core.tests.test_mem_overlap.size": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.core.tests.test_mem_overlap.solve_diophantine": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.solve_diophantine"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.test_diophantine_fuzz": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "OverflowError",
    "all",
    "any",
    "int",
    "len",
    "min",
    "numpy.core.multiarray_tests.solve_diophantine",
    "numpy.core.tests.test_mem_overlap.itertools",
    "numpy.core.tests.test_mem_overlap.size",
    "numpy.core.tests.test_mem_overlap.xrange",
    "numpy.iinfo",
    "numpy.intp",
    "numpy.random.RandomState",
    "numpy.testing.assert_",
    "numpy.testing.dec.slow",
    "range",
    "sum",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_diophantine_overflow": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.solve_diophantine",
    "numpy.iinfo",
    "numpy.int64",
    "numpy.intp",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_diophantine": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_diophantine.check": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "all",
    "any",
    "numpy.core.multiarray_tests.solve_diophantine",
    "numpy.testing.assert_",
    "repr",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_fuzz": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "min",
    "numpy.arange",
    "numpy.core.tests.test_mem_overlap.check_internal_overlap",
    "numpy.core.tests.test_mem_overlap.shape",
    "numpy.int8",
    "numpy.intp",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.random.RandomState",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_manual": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_mem_overlap.check_internal_overlap",
    "numpy.int8",
    "numpy.lib.stride_tricks.as_strided"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_slices": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.multiarray_tests.internal_overlap",
    "numpy.int16",
    "numpy.intp",
    "numpy.random.RandomState",
    "numpy.testing.assert_",
    "numpy.zeros",
    "random_slice",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_internal_overlap_slices.random_slice": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.intp",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_may_share_memory_bad_max_work": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.may_share_memory",
    "numpy.shares_memory",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_may_share_memory_easy_fuzz": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "numpy.core.tests.test_mem_overlap.check_may_share_memory_easy_fuzz",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_may_share_memory_harder_fuzz": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "max",
    "numpy.core.tests.test_mem_overlap.check_may_share_memory_easy_fuzz",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_may_share_memory_manual": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_mem_overlap.check_may_share_memory_exact",
    "numpy.core.tests.test_mem_overlap.itertools",
    "numpy.int16",
    "numpy.int8",
    "numpy.may_share_memory",
    "numpy.testing.assert_",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "cls",
    "numpy.arange",
    "numpy.may_share_memory",
    "numpy.shares_memory",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray.__array_interface__": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray.__init__": {
  "data": {
   "lineno": 567
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray2": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray2.__array__": {
  "data": {
   "lineno": 578
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_non_ndarray_inputs.MyArray2.__init__": {
  "data": {
   "lineno": 575
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_overlapping_assignments": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.core.tests.test_mem_overlap._check_assignment",
    "numpy.core.tests.test_mem_overlap._indices",
    "numpy.core.tests.test_mem_overlap.ndims",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.test_shares_memory_api": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.TooHardError",
    "numpy.compat.long",
    "numpy.int8",
    "numpy.shares_memory",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.umath_tests": {
  "data": {
   "shadows": "numpy.core.umath_tests"
  },
  "type": "import"
 },
 "numpy.core.tests.test_mem_overlap.view_element_first_byte": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "dict",
    "numpy.asarray",
    "numpy.lib.stride_tricks.DummyArray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_mem_overlap.xrange": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.core.tests.test_memmap": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_memmap.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.Path": {
  "data": {
   "shadows": "numpy.compat.Path"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.TemporaryFile": {
  "data": {
   "shadows": "tempfile.TemporaryFile"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.TestMemmap": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_memmap.TestMemmap.setup": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.arange",
    "tempfile.NamedTemporaryFile",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.teardown": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.core.tests.test_memmap.shutil"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_arithmetic_drops_references": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "isinstance",
    "numpy.memmap",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_attributes": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.memmap",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_del": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.memmap",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_filename": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.core.tests.test_memmap.os",
    "numpy.memmap",
    "numpy.testing.assert_equal",
    "tempfile.mktemp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_filename_fileobj": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.memmap",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_flush": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.core.tests.test_memmap.sys",
    "numpy.memmap",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_getitem": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.memmap",
    "numpy.ndarray",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_indexing_drops_references": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "isinstance",
    "numpy.memmap",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_memmap_subclass": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "MemmapSubClass",
    "numpy.sum",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_memmap_subclass.MemmapSubClass": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.memmap"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_mmap_offset_greater_than_allocation_granularity": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.core.tests.test_memmap.mmap",
    "numpy.memmap",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_open_with_filename": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.memmap",
    "tempfile.mktemp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_path": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.compat.Path",
    "numpy.core.tests.test_memmap.os",
    "numpy.memmap",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "str",
    "tempfile.mktemp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_roundtrip": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.memmap",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_slicing_keeps_references": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.memmap",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_ufunc_return_ndarray": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "FutureWarning",
    "binary_op",
    "numpy.add",
    "numpy.average",
    "numpy.isscalar",
    "numpy.memmap",
    "numpy.multiply",
    "numpy.ndarray",
    "numpy.product",
    "numpy.subtract",
    "numpy.sum",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings",
    "unary_op"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_unnamed_file": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.memmap",
    "tempfile.TemporaryFile"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_view": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.memmap",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.add": {
  "data": {
   "shadows": "numpy.add"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.average": {
  "data": {
   "shadows": "numpy.average"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.isscalar": {
  "data": {
   "shadows": "numpy.isscalar"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.memmap": {
  "data": {
   "shadows": "numpy.memmap"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.mktemp": {
  "data": {
   "shadows": "tempfile.mktemp"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.mmap": {
  "data": {
   "shadows": "mmap"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.multiply": {
  "data": {
   "shadows": "numpy.multiply"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.product": {
  "data": {
   "shadows": "numpy.product"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.subtract": {
  "data": {
   "shadows": "numpy.subtract"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.sum": {
  "data": {
   "shadows": "numpy.sum"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.testing.IS_PYPY",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_multiarray.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.EMPTY": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.core.tests.test_multiarray.HAS_REFCOUNT": {
  "data": {
   "shadows": "numpy.testing.HAS_REFCOUNT"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.IS_PYPY": {
  "data": {
   "shadows": "numpy.testing.IS_PYPY"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.IsPythonScalar": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.IsPythonScalar"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon": {
  "data": {
   "lineno": 5381,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_exceptions": {
  "data": {
   "lineno": 5391,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_multiarray.itertools",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_matrix_matrix_values": {
  "data": {
   "lineno": 5510,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.stack",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_matrix_vector_values": {
  "data": {
   "lineno": 5483,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.stack",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_result_types": {
  "data": {
   "lineno": 5429,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.ones",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_shapes": {
  "data": {
   "lineno": 5409,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_multiarray.itertools",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_vector_matrix_values": {
  "data": {
   "lineno": 5456,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.stack",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.MatmulCommon.test_vector_vector_values": {
  "data": {
   "lineno": 5443,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.NEIGH_MODE": {
  "data": {
   "lineno": 5826
  },
  "type": "constant"
 },
 "numpy.core.tests.test_multiarray.SkipTest": {
  "data": {
   "shadows": "numpy.testing.SkipTest"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.TestAlen": {
  "data": {
   "lineno": 5749,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAlen.test_basic": {
  "data": {
   "lineno": 5750,
   "symbols_in_volume": [
    "numpy.alen",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAlen.test_singleton": {
  "data": {
   "lineno": 5763,
   "symbols_in_volume": [
    "numpy.alen",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArange": {
  "data": {
   "lineno": 7310,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArange.test_infinite": {
  "data": {
   "lineno": 7311,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.inf",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArange.test_nan_step": {
  "data": {
   "lineno": 7317,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nan",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArange.test_zero_step": {
  "data": {
   "lineno": 7323,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "numpy.arange",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax": {
  "data": {
   "lineno": 3588,
   "symbols_in_volume": [
    "complex",
    "datetime.timedelta",
    "numpy.datetime64",
    "numpy.nan",
    "numpy.timedelta64",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_all": {
  "data": {
   "lineno": 3653,
   "symbols_in_volume": [
    "list",
    "numpy.all",
    "numpy.random.normal",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_argmax_unicode": {
  "data": {
   "lineno": 3690,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_combinations": {
  "data": {
   "lineno": 3662,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.argmax",
    "numpy.max",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_np_vs_ndarray": {
  "data": {
   "lineno": 3695,
   "symbols_in_volume": [
    "int",
    "numpy.argmax",
    "numpy.random.normal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_object_argmax_with_NULLs": {
  "data": {
   "lineno": 3711,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.ctypes",
    "numpy.empty",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_output_shape": {
  "data": {
   "lineno": 3672,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int_",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin": {
  "data": {
   "lineno": 3722,
   "symbols_in_volume": [
    "complex",
    "datetime.timedelta",
    "numpy.datetime64",
    "numpy.nan",
    "numpy.timedelta64",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_all": {
  "data": {
   "lineno": 3787,
   "symbols_in_volume": [
    "list",
    "numpy.all",
    "numpy.random.normal",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_argmin_unicode": {
  "data": {
   "lineno": 3838,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_combinations": {
  "data": {
   "lineno": 3796,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.argmin",
    "numpy.min",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_minimum_signed_integers": {
  "data": {
   "lineno": 3806,
   "symbols_in_volume": [
    "numpy.argmin",
    "numpy.array",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_np_vs_ndarray": {
  "data": {
   "lineno": 3843,
   "symbols_in_volume": [
    "int",
    "numpy.argmin",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_object_argmin_with_NULLs": {
  "data": {
   "lineno": 3859,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.ctypes",
    "numpy.empty",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArgmin.test_output_shape": {
  "data": {
   "lineno": 3820,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int_",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayAttributeDeletion": {
  "data": {
   "lineno": 6539,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayAttributeDeletion.test_multiarray_flags_not_writable_attribute_deletion": {
  "data": {
   "lineno": 6564,
   "symbols_in_volume": [
    "AttributeError",
    "delattr",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayAttributeDeletion.test_multiarray_flags_writable_attribute_deletion": {
  "data": {
   "lineno": 6558,
   "symbols_in_volume": [
    "AttributeError",
    "delattr",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayAttributeDeletion.test_multiarray_not_writable_attributes_deletion": {
  "data": {
   "lineno": 6550,
   "symbols_in_volume": [
    "AttributeError",
    "delattr",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayAttributeDeletion.test_multiarray_writable_attributes_deletion": {
  "data": {
   "lineno": 6541,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "delattr",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction.test_array": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction.test_array_cont": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction.test_array_copy_false": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction.test_array_copy_true": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayConstruction.test_array_empty": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority": {
  "data": {
   "lineno": 7029,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.operator",
    "numpy.core.tests.test_multiarray.sys",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Bar": {
  "data": {
   "lineno": 7050,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Bar.__new__": {
  "data": {
   "lineno": 7053,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Foo": {
  "data": {
   "lineno": 7044,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Foo.__new__": {
  "data": {
   "lineno": 7047,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Other": {
  "data": {
   "lineno": 7056,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.Other._all": {
  "data": {
   "lineno": 7059
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.test_ndarray_other": {
  "data": {
   "lineno": 7090,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.test_ndarray_subclass": {
  "data": {
   "lineno": 7082,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.test_subclass_other": {
  "data": {
   "lineno": 7106,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestArrayPriority.test_subclass_subclass": {
  "data": {
   "lineno": 7098,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAsCArray": {
  "data": {
   "lineno": 6695,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAsCArray.test_1darray": {
  "data": {
   "lineno": 6696,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.multiarray_tests.test_as_c_array",
    "numpy.double",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAsCArray.test_2darray": {
  "data": {
   "lineno": 6701,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.multiarray_tests.test_as_c_array",
    "numpy.double",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAsCArray.test_3darray": {
  "data": {
   "lineno": 6706,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.multiarray_tests.test_as_c_array",
    "numpy.double",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_assignment_broadcasting": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_assignment_broadcasting.assign": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_assignment_errors": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "AttributeError",
    "C",
    "TypeError",
    "ValueError",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_assignment_errors.C": {
  "data": {
   "lineno": 384
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_assignment_errors.assign": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_cast_to_string": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_longdouble_assignment": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.longcomplex",
    "numpy.longdouble",
    "numpy.nextafter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_stringlike_empty_list": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ValueError",
    "bad_sequence",
    "numpy.array",
    "numpy.core.tests.test_multiarray.operator",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_stringlike_empty_list.bad_sequence": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_stringlike_empty_list.bad_sequence.__getitem__": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_stringlike_empty_list.bad_sequence.__len__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_unicode_assignment": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "inject_str",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAssignment.test_unicode_assignment.inject_str": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "numpy.core.numeric.set_string_function"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.setup": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_attributes": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_dtypeattr": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float_",
    "numpy.int_",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_fill": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_fill_max_uint64": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.testing.assert_array_equal",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_fill_struct_array": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_int_subclassing": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.core.multiarray_tests.test_int_subclass",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.int_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_set_stridesattr": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "make_array",
    "numpy.arange",
    "numpy.array",
    "numpy.int8",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_set_stridesattr.make_array": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_set_stridesattr.set_strides": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_stridesattr": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "make_array",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_stridesattr.make_array": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop": {
  "data": {
   "lineno": 2987,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_array_ufunc_index": {
  "data": {
   "lineno": 3224,
   "symbols_in_volume": [
    "CheckIndex",
    "DeprecationWarning",
    "ValueError",
    "numpy.add",
    "numpy.arange",
    "numpy.core.tests.test_multiarray.warnings",
    "numpy.modf",
    "numpy.sin",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_array_ufunc_index.CheckIndex": {
  "data": {
   "lineno": 3228,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_array_ufunc_index.CheckIndex.__array_ufunc__": {
  "data": {
   "lineno": 3229,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_inplace": {
  "data": {
   "lineno": 2988,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_out_override": {
  "data": {
   "lineno": 3272,
   "symbols_in_volume": [
    "A",
    "C",
    "isinstance",
    "numpy.array",
    "numpy.multiply",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_out_override.OutClass": {
  "data": {
   "lineno": 3274,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_out_override.OutClass.__array_ufunc__": {
  "data": {
   "lineno": 3275,
   "symbols_in_volume": [
    "func",
    "getattr",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_override_with_errors": {
  "data": {
   "lineno": 3293,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.array",
    "numpy.float64",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_override_with_errors.PowerOnly": {
  "data": {
   "lineno": 3295,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_pow_override_with_errors.PowerOnly.__array_ufunc__": {
  "data": {
   "lineno": 3296,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.power",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction": {
  "data": {
   "lineno": 3025,
   "symbols_in_volume": [
    "check",
    "float",
    "int",
    "make_obj",
    "numpy.add",
    "numpy.bitwise_and",
    "numpy.bitwise_or",
    "numpy.bitwise_xor",
    "numpy.divmod",
    "numpy.floor_divide",
    "numpy.left_shift",
    "numpy.multiply",
    "numpy.ndarray",
    "numpy.power",
    "numpy.remainder",
    "numpy.right_shift",
    "numpy.subtract",
    "numpy.true_divide",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.Coerced": {
  "data": {
   "lineno": 3050,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.array_impl": {
  "data": {
   "lineno": 3053
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.array_ufunc_impl": {
  "data": {
   "lineno": 3065
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.check": {
  "data": {
   "lineno": 3095,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "__builtin__",
    "arr_imethod",
    "arr_method",
    "arr_rmethod",
    "first_out_arg",
    "getattr",
    "isinstance",
    "numpy.arange",
    "numpy.core.tests.test_multiarray.operator",
    "numpy.ndarray",
    "numpy.ndarray.__array_ufunc__",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "op_fn",
    "tuple",
    "type",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.check.first_out_arg": {
  "data": {
   "lineno": 3106,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.iop_impl": {
  "data": {
   "lineno": 3062
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.make_obj": {
  "data": {
   "lineno": 3071,
   "symbols_in_volume": [
    "MyType",
    "eval",
    "issubclass",
    "numpy.arange",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.op_impl": {
  "data": {
   "lineno": 3056
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_binop_interaction.rop_impl": {
  "data": {
   "lineno": 3059
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_override_normalize_signature": {
  "data": {
   "lineno": 3208,
   "symbols_in_volume": [
    "SomeClass",
    "numpy.add",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_override_normalize_signature.SomeClass": {
  "data": {
   "lineno": 3210,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBinop.test_ufunc_override_normalize_signature.SomeClass.__array_ufunc__": {
  "data": {
   "lineno": 3211
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBool._test_cast_from_flexible": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.False_",
    "numpy.True_",
    "numpy.array",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.check_count_nonzero": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "__builtin__.sum",
    "bool",
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "range",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_cast_from_bytes": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "numpy.bytes_",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_cast_from_unicode": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "numpy.testing.dec.knownfailureif",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_cast_from_void": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "numpy.void"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_count_nonzero": {
  "data": {
   "lineno": 1214
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_count_nonzero_all": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_count_nonzero_unaligned": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "__builtin__.sum",
    "bool",
    "numpy.count_nonzero",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_sum": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "bool",
    "numpy.frombuffer",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_test_interning": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBytestringArrayNonzero": {
  "data": {
   "lineno": 7115,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBytestringArrayNonzero.test_all_null_bstring_array_is_falsey": {
  "data": {
   "lineno": 7125,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBytestringArrayNonzero.test_empty_bstring_array_is_falsey": {
  "data": {
   "lineno": 7117,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBytestringArrayNonzero.test_null_inside_bstring_array_is_truthy": {
  "data": {
   "lineno": 7130,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBytestringArrayNonzero.test_whitespace_bstring_array_is_falsey": {
  "data": {
   "lineno": 7120,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCAPI": {
  "data": {
   "lineno": 3417,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCAPI.test_IsPythonScalar": {
  "data": {
   "lineno": 3418,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.IsPythonScalar",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCTypes": {
  "data": {
   "lineno": 7181,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCTypes.test_ctypes_is_available": {
  "data": {
   "lineno": 7183,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_multiarray.ctypes",
    "numpy.testing.assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCTypes.test_ctypes_is_not_available": {
  "data": {
   "lineno": 7189,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.core._internal._missing_ctypes",
    "numpy.core._internal.ctypes",
    "numpy.core.tests.test_multiarray.ctypes",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.TestCequenceMethods": {
  "data": {
   "lineno": 2982,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCequenceMethods.test_array_contains": {
  "data": {
   "lineno": 2983,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose": {
  "data": {
   "lineno": 5767,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestChoose.setup": {
  "data": {
   "lineno": 5768,
   "symbols_in_volume": [
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose.test_basic": {
  "data": {
   "lineno": 5775,
   "symbols_in_volume": [
    "A",
    "numpy.choose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose.test_broadcast1": {
  "data": {
   "lineno": 5779,
   "symbols_in_volume": [
    "A",
    "numpy.choose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose.test_broadcast2": {
  "data": {
   "lineno": 5783,
   "symbols_in_volume": [
    "A",
    "numpy.choose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip": {
  "data": {
   "lineno": 3907,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestClip._check_range": {
  "data": {
   "lineno": 3908,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.testing.assert_",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip._clip_type": {
  "data": {
   "lineno": 3912,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.sys",
    "numpy.dtype",
    "numpy.random.random",
    "numpy.sctypes",
    "numpy.testing.assert_equal",
    "x",
    "x.clip",
    "x.dtype.byteorder"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_basic": {
  "data": {
   "lineno": 3942
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_max_or_min": {
  "data": {
   "lineno": 3965,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_nan": {
  "data": {
   "lineno": 3974,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_record_array": {
  "data": {
   "lineno": 3959,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCompress": {
  "data": {
   "lineno": 3981,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCompress.test_axis": {
  "data": {
   "lineno": 3982,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.compress",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCompress.test_flatten": {
  "data": {
   "lineno": 3998,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.compress",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCompress.test_truncate": {
  "data": {
   "lineno": 3992,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.compress",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion": {
  "data": {
   "lineno": 6712,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_array_scalar_relational_operation": {
  "data": {
   "lineno": 6713,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_bool_scalar": {
  "data": {
   "lineno": 6754,
   "symbols_in_volume": [
    "NameError",
    "NotConvertible",
    "NotImplementedError",
    "RecursionError",
    "RuntimeError",
    "ValueError",
    "bool",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_bool_scalar.NotConvertible": {
  "data": {
   "lineno": 6760,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_bool_scalar.NotConvertible.__bool__": {
  "data": {
   "lineno": 6761,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_int_scalar": {
  "data": {
   "lineno": 6776,
   "symbols_in_volume": [
    "HasTrunc",
    "NotConvertible",
    "NotImplementedError",
    "TypeError",
    "int",
    "int_func",
    "numpy.array",
    "numpy.bytes_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.unicode_",
    "x.__int__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_int_scalar.HasTrunc": {
  "data": {
   "lineno": 6790
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_int_scalar.HasTrunc.__trunc__": {
  "data": {
   "lineno": 6791
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_int_scalar.NotConvertible": {
  "data": {
   "lineno": 6796,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestConversion.test_to_int_scalar.NotConvertible.__int__": {
  "data": {
   "lineno": 6797,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_array_too_big": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "numpy.iinfo",
    "numpy.intp",
    "numpy.ndarray",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_empty_unicode": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "numpy.empty",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_failed_len_sequence": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "A",
    "len",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_failed_len_sequence.A": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_failed_len_sequence.A.__getitem__": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_failed_len_sequence.A.__init__": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_failed_len_sequence.A.__len__": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_sequence": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "C",
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_sequence.C": {
  "data": {
   "lineno": 851
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_sequence.C.__getitem__": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_false_len_sequence.C.__len__": {
  "data": {
   "lineno": 854
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_attribute": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_raises",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_attribute.x": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_attribute.x.__array__": {
  "data": {
   "lineno": 675
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_string": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_no_len_object_type": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "Point2",
    "numpy.array",
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_no_len_object_type.Point2": {
  "data": {
   "lineno": 837
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_no_len_object_type.Point2.__getitem__": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_no_len_object_type.Point2.__init__": {
  "data": {
   "lineno": 838
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "Fail",
    "Map",
    "ValueError",
    "numpy.array",
    "numpy.dtype",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Fail": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Fail.__getitem__": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Fail.__len__": {
  "data": {
   "lineno": 817
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Map": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Map.__getitem__": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_non_sequence_sequence.Map.__len__": {
  "data": {
   "lineno": 824
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_sequence_long": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "long",
    "numpy.array",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.long",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_sequence_non_homogenous": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_too_big_error": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "numpy.iinfo",
    "numpy.int8",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_void": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_zeros": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_zeros_big": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.testing.dec.slow",
    "numpy.typecodes",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_zeros_like_like_zeros": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_zeros_obj": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_zeros_obj_obj": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot": {
  "data": {
   "lineno": 5103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestDot.setup": {
  "data": {
   "lineno": 5104,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_accelerate_framework_sgemv_fix": {
  "data": {
   "lineno": 5316,
   "symbols_in_volume": [
    "aligned_array",
    "as_aligned",
    "assert_dot_close",
    "numpy.core.tests.test_multiarray.itertools",
    "numpy.dot",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_accelerate_framework_sgemv_fix.aligned_array": {
  "data": {
   "lineno": 5318,
   "symbols_in_volume": [
    "dtype",
    "numpy.prod",
    "numpy.uint8",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_accelerate_framework_sgemv_fix.as_aligned": {
  "data": {
   "lineno": 5329,
   "symbols_in_volume": [
    "aligned_array",
    "dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_accelerate_framework_sgemv_fix.assert_dot_close": {
  "data": {
   "lineno": 5334,
   "symbols_in_volume": [
    "A",
    "numpy.dot",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_all": {
  "data": {
   "lineno": 5193,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.itertools",
    "numpy.dot",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dot_2args": {
  "data": {
   "lineno": 5237,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.core.multiarray.dot",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dot_3args": {
  "data": {
   "lineno": 5247,
   "symbols_in_volume": [
    "f",
    "numpy.core.multiarray.dot",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.empty",
    "numpy.random.random_sample",
    "numpy.random.seed",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dot_3args_errors": {
  "data": {
   "lineno": 5269,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "int",
    "numpy.core.multiarray.dot",
    "numpy.empty",
    "numpy.float32",
    "numpy.random.random_sample",
    "numpy.random.seed",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dot_array_order": {
  "data": {
   "lineno": 5299,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dot_scalar_and_matrix_of_objects": {
  "data": {
   "lineno": 5309,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.matrix",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotcolumnvect1": {
  "data": {
   "lineno": 5163,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotcolumnvect2": {
  "data": {
   "lineno": 5170,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotmatmat": {
  "data": {
   "lineno": 5113,
   "symbols_in_volume": [
    "A",
    "A.transpose",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotmatvec": {
  "data": {
   "lineno": 5120,
   "symbols_in_volume": [
    "A",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotmatvec2": {
  "data": {
   "lineno": 5127,
   "symbols_in_volume": [
    "A",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecmat": {
  "data": {
   "lineno": 5133,
   "symbols_in_volume": [
    "A",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecmat2": {
  "data": {
   "lineno": 5139,
   "symbols_in_volume": [
    "A",
    "A.transpose",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecmat3": {
  "data": {
   "lineno": 5145,
   "symbols_in_volume": [
    "A",
    "A.transpose",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecscalar": {
  "data": {
   "lineno": 5177,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecscalar2": {
  "data": {
   "lineno": 5185,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecvecinner": {
  "data": {
   "lineno": 5157,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_dotvecvecouter": {
  "data": {
   "lineno": 5151,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject": {
  "data": {
   "lineno": 5204,
   "symbols_in_volume": [
    "Vec",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.dot",
    "numpy.testing.assert_equal",
    "numpy.transpose",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec": {
  "data": {
   "lineno": 5205,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec.__add__": {
  "data": {
   "lineno": 5211,
   "symbols_in_volume": [
    "Vec"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec.__init__": {
  "data": {
   "lineno": 5206,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec.__mul__": {
  "data": {
   "lineno": 5221,
   "symbols_in_volume": [
    "Vec"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec.__rmul__": {
  "data": {
   "lineno": 5226
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDot.test_vecobject.Vec.__sub__": {
  "data": {
   "lineno": 5216,
   "symbols_in_volume": [
    "Vec"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDtypedescr": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestDtypedescr.test_byteorders": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDtypedescr.test_construction": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float64",
    "numpy.int32",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDtypedescr.test_structured_non_void": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing": {
  "data": {
   "lineno": 3502,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_assign_mask": {
  "data": {
   "lineno": 3534,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_assign_mask2": {
  "data": {
   "lineno": 3540,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_list": {
  "data": {
   "lineno": 3503,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_mask": {
  "data": {
   "lineno": 3520,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_mask2": {
  "data": {
   "lineno": 3525,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_tuple": {
  "data": {
   "lineno": 3512,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFlags.setup": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_otherflags": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_string_align": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_void_align": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "locals",
    "numpy.testing.assert_raises",
    "numpy.testing.runstring"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlat": {
  "data": {
   "lineno": 4481,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFlat.setup": {
  "data": {
   "lineno": 4482,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlat.test___array__": {
  "data": {
   "lineno": 4510,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlat.test_contiguous": {
  "data": {
   "lineno": 4492,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlat.test_discontiguous": {
  "data": {
   "lineno": 4501,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFormat": {
  "data": {
   "lineno": 7157,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFormat.test_0d": {
  "data": {
   "lineno": 7159,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFormat.test_1d_format": {
  "data": {
   "lineno": 7168,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "TypeError",
    "numpy.array",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.pi",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.suppress_warnings",
    "object.__format__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFormat.test_1d_no_format": {
  "data": {
   "lineno": 7164,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFromBuffer": {
  "data": {
   "lineno": 4465,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFromBuffer.test_empty": {
  "data": {
   "lineno": 4477,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFromBuffer.test_ip_basic": {
  "data": {
   "lineno": 4469,
   "symbols_in_volume": [
    "complex",
    "float",
    "int",
    "numpy.dtype",
    "numpy.random.random",
    "x",
    "x.flat",
    "x.tobytes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFromBuffer.tst_basic": {
  "data": {
   "lineno": 4466,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestHash": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestHash.test_int": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "hash",
    "max",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.testing.assert_equal",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "range",
    "st",
    "ut"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestHashing": {
  "data": {
   "lineno": 7018,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestHashing.test_arrays_not_hashable": {
  "data": {
   "lineno": 7020,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestHashing.test_collections_hashable": {
  "data": {
   "lineno": 7024,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.core.tests.test_multiarray.collections",
    "numpy.testing.assert_",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO": {
  "data": {
   "lineno": 4146,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestIO._check_from": {
  "data": {
   "lineno": 4333,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.fromfile",
    "numpy.fromstring",
    "numpy.testing.assert_array_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.setup": {
  "data": {
   "lineno": 4149,
   "symbols_in_volume": [
    "complex",
    "numpy.core.tests.test_multiarray.tempfile",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.random",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.teardown": {
  "data": {
   "lineno": 4158,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.shutil"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_ascii": {
  "data": {
   "lineno": 4407,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_big_binary": {
  "data": {
   "lineno": 4367,
   "symbols_in_volume": [
    "MemoryError",
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.core.tests.test_multiarray.tempfile",
    "numpy.fromfile",
    "numpy.int8",
    "numpy.testing.assert_",
    "numpy.testing.dec.slow",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_binary": {
  "data": {
   "lineno": 4362,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_bool_fromstring": {
  "data": {
   "lineno": 4169,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.fromstring",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_counted_string": {
  "data": {
   "lineno": 4395
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_counted_string_with_ws": {
  "data": {
   "lineno": 4403,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_dtype": {
  "data": {
   "lineno": 4417,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_dtype_bool": {
  "data": {
   "lineno": 4421,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.fromfile",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_empty_files_binary": {
  "data": {
   "lineno": 4186,
   "symbols_in_volume": [
    "numpy.fromfile",
    "numpy.testing.assert_",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_empty_files_text": {
  "data": {
   "lineno": 4192,
   "symbols_in_volume": [
    "numpy.fromfile",
    "numpy.testing.assert_",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_file_position_after_fromfile": {
  "data": {
   "lineno": 4284,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.io",
    "numpy.float64",
    "numpy.fromfile",
    "numpy.testing.assert_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_file_position_after_tofile": {
  "data": {
   "lineno": 4306,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_multiarray.io",
    "numpy.float64",
    "numpy.testing.assert_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_inf": {
  "data": {
   "lineno": 4352,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_int64_fromstring": {
  "data": {
   "lineno": 4180,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.fromstring",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_io_open_buffered_fromfile": {
  "data": {
   "lineno": 4277,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.io",
    "numpy.fromfile",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_io_open_unbuffered_fromfile": {
  "data": {
   "lineno": 4249,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.io",
    "numpy.fromfile",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_largish_file": {
  "data": {
   "lineno": 4256,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.os",
    "numpy.fromfile",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_locale": {
  "data": {
   "lineno": 4454,
   "symbols_in_volume": [
    "numpy.core.tests.test_print.in_foreign_locale"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_long_sep": {
  "data": {
   "lineno": 4414
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_malformed": {
  "data": {
   "lineno": 4411
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_nan": {
  "data": {
   "lineno": 4346,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_nofile": {
  "data": {
   "lineno": 4161,
   "symbols_in_volume": [
    "IOError",
    "numpy.core.tests.test_multiarray.io",
    "numpy.fromfile",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.uint8",
    "x.tofile"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_numbers": {
  "data": {
   "lineno": 4358
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_binary_str": {
  "data": {
   "lineno": 4213,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_file": {
  "data": {
   "lineno": 4198,
   "symbols_in_volume": [
    "numpy.fromfile",
    "numpy.testing.assert_array_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_filename": {
  "data": {
   "lineno": 4208,
   "symbols_in_volume": [
    "numpy.fromfile",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_repr": {
  "data": {
   "lineno": 4231,
   "symbols_in_volume": [
    "map",
    "numpy.fromstring",
    "numpy.testing.assert_array_equal",
    "repr",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_str": {
  "data": {
   "lineno": 4222,
   "symbols_in_volume": [
    "map",
    "numpy.fromstring",
    "numpy.isfinite",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "str",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_string": {
  "data": {
   "lineno": 4392
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_string_with_ws": {
  "data": {
   "lineno": 4400,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_tofile_format": {
  "data": {
   "lineno": 4444,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.testing.assert_equal",
    "open",
    "x",
    "x.tofile"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_tofile_sep": {
  "data": {
   "lineno": 4432,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "open",
    "x",
    "x.tofile"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_uint64_fromstring": {
  "data": {
   "lineno": 4174,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.fromstring",
    "numpy.testing.assert_array_equal",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_unseekable_fromfile": {
  "data": {
   "lineno": 4237,
   "symbols_in_volume": [
    "IOError",
    "numpy.core.tests.test_multiarray.io",
    "numpy.fromfile",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_unseekable_fromfile.fail": {
  "data": {
   "lineno": 4241,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner": {
  "data": {
   "lineno": 5656,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_3d_tensor": {
  "data": {
   "lineno": 5721,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.inner",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_inner_product_with_various_contiguities": {
  "data": {
   "lineno": 5696,
   "symbols_in_volume": [
    "A",
    "A.T",
    "A.copy",
    "C",
    "numpy.arange",
    "numpy.array",
    "numpy.inner",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_inner_scalar_and_matrix": {
  "data": {
   "lineno": 5673,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inner",
    "numpy.matrix",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_inner_scalar_and_matrix_of_objects": {
  "data": {
   "lineno": 5681,
   "symbols_in_volume": [
    "numpy.inner",
    "numpy.matrix",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_inner_scalar_and_vector": {
  "data": {
   "lineno": 5665,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inner",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_inner_type_mismatch": {
  "data": {
   "lineno": 5658,
   "symbols_in_volume": [
    "A",
    "TypeError",
    "numpy.array",
    "numpy.inner",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestInner.test_vecself": {
  "data": {
   "lineno": 5688,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.inner",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestLexsort": {
  "data": {
   "lineno": 4099,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestLexsort.test_basic": {
  "data": {
   "lineno": 4100,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lexsort",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "numpy.vstack",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestLexsort.test_datetime": {
  "data": {
   "lineno": 4113,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lexsort",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestLexsort.test_invalid_axis": {
  "data": {
   "lineno": 4142,
   "symbols_in_volume": [
    "numpy.AxisError",
    "numpy.lexsort",
    "numpy.linspace",
    "numpy.testing.assert_raises",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestLexsort.test_object": {
  "data": {
   "lineno": 4126,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "numpy.lexsort",
    "numpy.random.choice",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMapIter": {
  "data": {
   "lineno": 6673,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMapIter.test_mapiter": {
  "data": {
   "lineno": 6674,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.core.multiarray_tests.test_inplace_increment",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmul": {
  "data": {
   "lineno": 5576,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.MatmulCommon",
    "numpy.matmul"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMatmul.test_out_arg": {
  "data": {
   "lineno": 5579,
   "symbols_in_volume": [
    "Exception",
    "float",
    "numpy.full",
    "numpy.int32",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator": {
  "data": {
   "lineno": 5621,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.MatmulCommon",
    "numpy.core.tests.test_multiarray.operator"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator.test_array_priority_override": {
  "data": {
   "lineno": 5625,
   "symbols_in_volume": [
    "A",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator.test_array_priority_override.A": {
  "data": {
   "lineno": 5627,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator.test_array_priority_override.A.__matmul__": {
  "data": {
   "lineno": 5630
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMatmulOperator.test_array_priority_override.A.__rmatmul__": {
  "data": {
   "lineno": 5633
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMemEventHook": {
  "data": {
   "lineno": 6661,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMemEventHook.test_mem_seteventhook": {
  "data": {
   "lineno": 6662,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.test_pydatamem_seteventhook_end",
    "numpy.core.multiarray_tests.test_pydatamem_seteventhook_start",
    "numpy.core.tests.test_multiarray.gc",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.assert_partitioned": {
  "data": {
   "lineno": 2372,
   "symbols_in_volume": [
    "numpy.sort",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test__complex__": {
  "data": {
   "lineno": 2942,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test__complex__should_not_work": {
  "data": {
   "lineno": 2960,
   "symbols_in_volume": [
    "TypeError",
    "complex",
    "numpy.array",
    "numpy.dtype",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argpartition_empty_array": {
  "data": {
   "lineno": 2152,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "numpy.partition",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argpartition_gh5524": {
  "data": {
   "lineno": 2492,
   "symbols_in_volume": [
    "numpy.argpartition",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argpartition_integer": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argpartition_out_of_range": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argsort": {
  "data": {
   "lineno": 1747,
   "symbols_in_volume": [
    "chr",
    "complex",
    "float",
    "int",
    "len",
    "list",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.dtype",
    "numpy.empty",
    "numpy.intp",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.unicode",
    "numpy.zeros",
    "numpy.zeros_like",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_choose": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "A",
    "int",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_compress": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_conjugate": {
  "data": {
   "lineno": 2905,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "numpy.conjugate",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_copy": {
  "data": {
   "lineno": 1685,
   "symbols_in_volume": [
    "assert_c",
    "assert_fortran",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_copy.assert_c": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": [
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_copy.assert_fortran": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_diagonal": {
  "data": {
   "lineno": 2644,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_diagonal_memleak": {
  "data": {
   "lineno": 2678,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.sys",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_diagonal_view_notwriteable": {
  "data": {
   "lineno": 2663,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.diagonal",
    "numpy.eye",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot": {
  "data": {
   "lineno": 2512,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.dot",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_matmul_out": {
  "data": {
   "lineno": 2632,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.matmul",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_matmul_out.Sub": {
  "data": {
   "lineno": 2634,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_out_mem_overlap": {
  "data": {
   "lineno": 2610,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.tests.test_multiarray._aligned_zeros",
    "numpy.dot",
    "numpy.dtype",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.typecodes",
    "repr",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_dot_type_mismatch": {
  "data": {
   "lineno": 2603,
   "symbols_in_volume": [
    "A",
    "TypeError",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_flatten": {
  "data": {
   "lineno": 2498,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition": {
  "data": {
   "lineno": 2164,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "aae",
    "at",
    "map",
    "numpy.AxisError",
    "numpy.arange",
    "numpy.argpartition",
    "numpy.array",
    "numpy.complex64",
    "numpy.float32",
    "numpy.int32",
    "numpy.isnan",
    "numpy.nan",
    "numpy.ones",
    "numpy.partition",
    "numpy.random.shuffle",
    "numpy.roll",
    "numpy.sort",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.tile",
    "numpy.transpose",
    "range",
    "x",
    "x.size"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_cdtype": {
  "data": {
   "lineno": 2448,
   "symbols_in_volume": [
    "numpy.argpartition",
    "numpy.array",
    "numpy.partition",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_empty_array": {
  "data": {
   "lineno": 2142,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.partition",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_fuzz": {
  "data": {
   "lineno": 2479,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.partition",
    "numpy.random.randint",
    "numpy.random.shuffle",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_integer": {
  "data": {
   "lineno": 2133,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_iterative": {
  "data": {
   "lineno": 2380,
   "symbols_in_volume": [
    "ValueError",
    "map",
    "numpy.arange",
    "numpy.argpartition",
    "numpy.array",
    "numpy.partition",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.tile",
    "numpy.transpose",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_out_of_range": {
  "data": {
   "lineno": 2113,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_partition_unicode_kind": {
  "data": {
   "lineno": 2473,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_prod": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "ArithmeticError",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.uint16",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_put": {
  "data": {
   "lineno": 2726,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.put",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.typecodes",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_ravel": {
  "data": {
   "lineno": 2766,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.may_share_memory",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_ravel_subclass": {
  "data": {
   "lineno": 2857,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_ravel_subclass.ArraySubclass": {
  "data": {
   "lineno": 2858,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_repeat": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "A",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_reshape": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_round": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "check_round",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_round.check_round": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted": {
  "data": {
   "lineno": 1888,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.complex128",
    "numpy.empty",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted_return_type": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "A",
    "isinstance",
    "numpy.arange",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted_return_type.A": {
  "data": {
   "lineno": 2092,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted_unicode": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted_with_sorter": {
  "data": {
   "lineno": 2008,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.empty",
    "numpy.int16",
    "numpy.intp",
    "numpy.linspace",
    "numpy.random.rand",
    "numpy.random.shuffle",
    "numpy.searchsorted",
    "numpy.sort",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_size_zero_memleak": {
  "data": {
   "lineno": 2688,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.dot",
    "numpy.float64",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "range",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "Boom",
    "chr",
    "float",
    "int",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.complex128",
    "numpy.dtype",
    "numpy.empty",
    "numpy.nan",
    "numpy.sort",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.unicode",
    "numpy.zeros",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort.Boom": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort.Boom.__lt__": {
  "data": {
   "lineno": 1636
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_degraded": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.sort",
    "numpy.testing.assert_equal",
    "x",
    "x.size"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_order": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.compat.strchar",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.rec.fromarrays",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_raises": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "Raiser",
    "TypeError",
    "datetime.datetime.now",
    "numpy.array",
    "numpy.random.shuffle",
    "numpy.testing.assert_raises",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_raises.Raiser": {
  "data": {
   "lineno": 1661,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_raises.Raiser.raises_anything": {
  "data": {
   "lineno": 1662,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_unicode_kind": {
  "data": {
   "lineno": 1882,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_squeeze": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_swapaxes": {
  "data": {
   "lineno": 2873,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "list",
    "numpy.arange",
    "numpy.indices",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_trace": {
  "data": {
   "lineno": 2699,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_trace_subclass": {
  "data": {
   "lineno": 2716,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_trace_subclass.MyArray": {
  "data": {
   "lineno": 2719,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_transpose": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_void_sort": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinMax": {
  "data": {
   "lineno": 3870,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMinMax.test_axis": {
  "data": {
   "lineno": 3881,
   "symbols_in_volume": [
    "numpy.AxisError",
    "numpy.amax",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinMax.test_datetime": {
  "data": {
   "lineno": 3885,
   "symbols_in_volume": [
    "numpy.amax",
    "numpy.amin",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinMax.test_scalar": {
  "data": {
   "lineno": 3872,
   "symbols_in_volume": [
    "numpy.AxisError",
    "numpy.amax",
    "numpy.amin",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType": {
  "data": {
   "lineno": 6094,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType.test_object": {
  "data": {
   "lineno": 6116,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.min_scalar_type",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType.test_usigned_int": {
  "data": {
   "lineno": 6106,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.min_scalar_type",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType.test_usigned_longlong": {
  "data": {
   "lineno": 6111,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.min_scalar_type",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType.test_usigned_short": {
  "data": {
   "lineno": 6101,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.min_scalar_type",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinScalarType.test_usigned_shortshort": {
  "data": {
   "lineno": 6096,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.min_scalar_type",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter": {
  "data": {
   "lineno": 5829,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter._test_circular": {
  "data": {
   "lineno": 5918,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.linspace",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter._test_mirror": {
  "data": {
   "lineno": 5903,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.linspace",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter._test_mirror2d": {
  "data": {
   "lineno": 5864,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter._test_simple": {
  "data": {
   "lineno": 5881,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.test_neighborhood_iterator",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.linspace",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter._test_simple2d": {
  "data": {
   "lineno": 5831,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_circular": {
  "data": {
   "lineno": 5925,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_circular_object": {
  "data": {
   "lineno": 5928,
   "symbols_in_volume": [
    "decimal.Decimal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_mirror": {
  "data": {
   "lineno": 5911,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_mirror2d": {
  "data": {
   "lineno": 5874,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_mirror2d_object": {
  "data": {
   "lineno": 5877,
   "symbols_in_volume": [
    "decimal.Decimal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_mirror_object": {
  "data": {
   "lineno": 5914,
   "symbols_in_volume": [
    "decimal.Decimal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_simple2d": {
  "data": {
   "lineno": 5858,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_simple2d_object": {
  "data": {
   "lineno": 5861,
   "symbols_in_volume": [
    "decimal.Decimal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_simple_float": {
  "data": {
   "lineno": 5896,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_simple_object": {
  "data": {
   "lineno": 5899,
   "symbols_in_volume": [
    "decimal.Decimal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol": {
  "data": {
   "lineno": 6231,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol._check_roundtrip": {
  "data": {
   "lineno": 6232,
   "symbols_in_volume": [
    "memoryview",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_discontiguous": {
  "data": {
   "lineno": 6384,
   "symbols_in_volume": [
    "memoryview",
    "numpy.core.tests.test_multiarray.EMPTY",
    "numpy.float32",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_endian": {
  "data": {
   "lineno": 6446,
   "symbols_in_volume": [
    "memoryview",
    "numpy.array",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.testing.assert_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_flags": {
  "data": {
   "lineno": 6461,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.core.multiarray_tests.get_buffer_info",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_record": {
  "data": {
   "lineno": 6394,
   "symbols_in_volume": [
    "memoryview",
    "numpy.array",
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.core.tests.test_multiarray.EMPTY",
    "numpy.csingle",
    "numpy.double",
    "numpy.dtype",
    "numpy.half",
    "numpy.iinfo",
    "numpy.intp",
    "numpy.longdouble",
    "numpy.ones",
    "numpy.single",
    "numpy.testing.assert_equal",
    "sum",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_simple_1d": {
  "data": {
   "lineno": 6364,
   "symbols_in_volume": [
    "memoryview",
    "numpy.array",
    "numpy.core.tests.test_multiarray.EMPTY",
    "numpy.testing.assert_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_simple_nd": {
  "data": {
   "lineno": 6374,
   "symbols_in_volume": [
    "memoryview",
    "numpy.array",
    "numpy.core.tests.test_multiarray.EMPTY",
    "numpy.float64",
    "numpy.testing.assert_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_export_subarray": {
  "data": {
   "lineno": 6436,
   "symbols_in_volume": [
    "memoryview",
    "numpy.array",
    "numpy.core.tests.test_multiarray.EMPTY",
    "numpy.testing.assert_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_out_of_order_fields": {
  "data": {
   "lineno": 6525,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "memoryview",
    "numpy.dtype",
    "numpy.empty",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_padded_struct_array": {
  "data": {
   "lineno": 6481,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "numpy.int8"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_padding": {
  "data": {
   "lineno": 6465,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "range",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_reference_leak": {
  "data": {
   "lineno": 6470,
   "symbols_in_volume": [
    "memoryview",
    "numpy.asarray",
    "numpy.core._internal",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_relaxed_strides": {
  "data": {
   "lineno": 6500,
   "symbols_in_volume": [
    "memoryview",
    "numpy.core.multiarray_tests.get_buffer_info",
    "numpy.core.tests.test_multiarray.io",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_roundtrip": {
  "data": {
   "lineno": 6248,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.csingle",
    "numpy.double",
    "numpy.float32",
    "numpy.float64",
    "numpy.half",
    "numpy.longdouble",
    "numpy.single",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_roundtrip_half": {
  "data": {
   "lineno": 6318,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_roundtrip_scalar": {
  "data": {
   "lineno": 6360
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewBufferProtocol.test_roundtrip_single_types": {
  "data": {
   "lineno": 6337,
   "symbols_in_volume": [
    "dtype",
    "dtype.char",
    "dtype.newbyteorder",
    "numpy.dtype",
    "numpy.typeDict.values",
    "numpy.zeros",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewaxis": {
  "data": {
   "lineno": 3900,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestNewaxis.test_basic": {
  "data": {
   "lineno": 3901,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.newaxis",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype": {
  "data": {
   "lineno": 6125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype._check": {
  "data": {
   "lineno": 6126,
   "symbols_in_volume": [
    "numpy.core._internal._dtype_from_pep3118",
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_byteorder_inside_struct": {
  "data": {
   "lineno": 6191
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_char_vs_string": {
  "data": {
   "lineno": 6212,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_field_order": {
  "data": {
   "lineno": 6219
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_intra_padding": {
  "data": {
   "lineno": 6197,
   "symbols_in_volume": [
    "aligned",
    "dict",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_intra_padding.aligned": {
  "data": {
   "lineno": 6202
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_native_padding": {
  "data": {
   "lineno": 6132,
   "symbols_in_volume": [
    "numpy.dtype",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_native_padding_2": {
  "data": {
   "lineno": 6144
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_native_padding_3": {
  "data": {
   "lineno": 6172,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_padding_with_array_inside_struct": {
  "data": {
   "lineno": 6184,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_trailing_padding": {
  "data": {
   "lineno": 6149,
   "symbols_in_volume": [
    "aligned",
    "dict",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_trailing_padding.aligned": {
  "data": {
   "lineno": 6155
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPEP3118Dtype.test_unnamed_fields": {
  "data": {
   "lineno": 6224
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling": {
  "data": {
   "lineno": 3436,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestPickling._loads": {
  "data": {
   "lineno": 3450,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.sys",
    "numpy.loads"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_roundtrip": {
  "data": {
   "lineno": 3437,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.core.tests.test_multiarray.pickle",
    "numpy.testing.assert_equal",
    "numpy.transpose",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_subarray_int_shape": {
  "data": {
   "lineno": 3495,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version0_float32": {
  "data": {
   "lineno": 3464,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version0_int8": {
  "data": {
   "lineno": 3458,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int8",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version0_object": {
  "data": {
   "lineno": 3470,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version1_float32": {
  "data": {
   "lineno": 3483,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version1_int8": {
  "data": {
   "lineno": 3477,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int8",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version1_object": {
  "data": {
   "lineno": 3489,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask": {
  "data": {
   "lineno": 4004,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_ip_byteorder": {
  "data": {
   "lineno": 4030
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_ip_types": {
  "data": {
   "lineno": 4010,
   "symbols_in_volume": [
    "T",
    "bytes",
    "numpy.compat.unicode",
    "numpy.random.random",
    "numpy.sctypes.values",
    "numpy.void",
    "object",
    "x",
    "x.copy"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_mask_size": {
  "data": {
   "lineno": 4022,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.putmask",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_record_array": {
  "data": {
   "lineno": 4034,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.putmask",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.tst_basic": {
  "data": {
   "lineno": 4005,
   "symbols_in_volume": [
    "T",
    "numpy.putmask",
    "numpy.testing.assert_equal",
    "x",
    "x.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.tst_byteorder": {
  "data": {
   "lineno": 4025,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.putmask",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord": {
  "data": {
   "lineno": 4624,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.sys",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_bytes_fields": {
  "data": {
   "lineno": 4638,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.testing.assert_raises",
    "x",
    "x.__getitem__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_empty_structure_creation": {
  "data": {
   "lineno": 4804,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_field_names": {
  "data": {
   "lineno": 4682,
   "symbols_in_volume": [
    "FutureWarning",
    "IndexError",
    "ValueError",
    "func",
    "numpy.compat.unicode",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.testing.SkipTest",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.suppress_warnings",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_field_names_deprecation": {
  "data": {
   "lineno": 4744,
   "symbols_in_volume": [
    "FutureWarning",
    "collect_warnings",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_field_names_deprecation.collect_warnings": {
  "data": {
   "lineno": 4746,
   "symbols_in_volume": [
    "f",
    "numpy.core.tests.test_multiarray.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_field_rename": {
  "data": {
   "lineno": 4625,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_multiple_field_name_occurrence": {
  "data": {
   "lineno": 4630,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_multiple_field_name_occurrence.test_assign": {
  "data": {
   "lineno": 4631,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_multiple_field_name_unicode": {
  "data": {
   "lineno": 4653,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_multiple_field_name_unicode.test_assign_unicode": {
  "data": {
   "lineno": 4654,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_record_hash": {
  "data": {
   "lineno": 4788,
   "symbols_in_volume": [
    "hash",
    "numpy.array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_record_no_hash": {
  "data": {
   "lineno": 4800,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_unicode_field_names": {
  "data": {
   "lineno": 4676,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.dtype",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_unicode_field_titles": {
  "data": {
   "lineno": 4663,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.dtype",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRepeat": {
  "data": {
   "lineno": 5788,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestRepeat.setup": {
  "data": {
   "lineno": 5789,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRepeat.test_axis_spec": {
  "data": {
   "lineno": 5803,
   "symbols_in_volume": [
    "A",
    "numpy.repeat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRepeat.test_basic": {
  "data": {
   "lineno": 5793,
   "symbols_in_volume": [
    "A",
    "numpy.repeat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRepeat.test_broadcast1": {
  "data": {
   "lineno": 5798,
   "symbols_in_volume": [
    "A",
    "numpy.repeat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRepeat.test_broadcast2": {
  "data": {
   "lineno": 5813,
   "symbols_in_volume": [
    "A",
    "numpy.repeat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize": {
  "data": {
   "lineno": 4537,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_0d_shape": {
  "data": {
   "lineno": 4569,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.testing.assert_equal",
    "range",
    "x",
    "x.resize",
    "x.shape",
    "x.size"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_basic": {
  "data": {
   "lineno": 4538,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.IS_PYPY",
    "numpy.testing.assert_array_equal",
    "x",
    "x.flat",
    "x.resize"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_check_reference": {
  "data": {
   "lineno": 4548,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_raises",
    "x",
    "x.resize"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_empty_view": {
  "data": {
   "lineno": 4615,
   "symbols_in_volume": [
    "int",
    "numpy.zeros",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_freeform_shape": {
  "data": {
   "lineno": 4587,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.testing.IS_PYPY",
    "numpy.testing.assert_",
    "x",
    "x.resize",
    "x.shape"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_int_shape": {
  "data": {
   "lineno": 4554,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.testing.IS_PYPY",
    "numpy.testing.assert_array_equal",
    "x",
    "x.resize"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_invalid_arguments": {
  "data": {
   "lineno": 4581,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.eye",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_none_shape": {
  "data": {
   "lineno": 4562,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "x",
    "x.resize"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_obj_obj": {
  "data": {
   "lineno": 4604,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.IS_PYPY",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_zeros_appended": {
  "data": {
   "lineno": 4595,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.testing.IS_PYPY",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "x",
    "x.resize"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.setup": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_ellipsis_subscript": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_empty_subscript": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_newaxis": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "IndexError",
    "numpy.newaxis",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_newaxis.subscript": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_subscript": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "IndexError",
    "int",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_subscript_assignment": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_subscript_assignment.assign": {
  "data": {
   "lineno": 598
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_newaxis": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.newaxis.shape",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_overlapping_assignment": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf": {
  "data": {
   "lineno": 6972,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.check_array": {
  "data": {
   "lineno": 6978,
   "symbols_in_volume": [
    "dtype",
    "numpy.arange",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.testing.assert_",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_array_float32": {
  "data": {
   "lineno": 6991,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_array_float64": {
  "data": {
   "lineno": 6994,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_array_int32": {
  "data": {
   "lineno": 6985,
   "symbols_in_volume": [
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_array_int64": {
  "data": {
   "lineno": 6988,
   "symbols_in_volume": [
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_empty_array": {
  "data": {
   "lineno": 6974,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.testing.assert_",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_error": {
  "data": {
   "lineno": 7013,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_reshape": {
  "data": {
   "lineno": 7001,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.sys",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_resize": {
  "data": {
   "lineno": 7005,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.sys",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSizeOf.test_view": {
  "data": {
   "lineno": 6997,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.sys",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter": {
  "data": {
   "lineno": 5932,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_circular": {
  "data": {
   "lineno": 6008,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator_oob",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_const": {
  "data": {
   "lineno": 5934,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator_oob",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_mirror": {
  "data": {
   "lineno": 5960,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator_oob",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_strict_within": {
  "data": {
   "lineno": 6056,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator_oob",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats": {
  "data": {
   "lineno": 4836,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray._mean",
    "numpy.core.tests.test_multiarray._std",
    "numpy.core.tests.test_multiarray._var",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStats.setup": {
  "data": {
   "lineno": 4840,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.array",
    "numpy.random.random",
    "numpy.random.seed",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_ddof": {
  "data": {
   "lineno": 4953,
   "symbols_in_volume": [
    "f",
    "numpy.core.tests.test_multiarray._std",
    "numpy.core.tests.test_multiarray._var",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_ddof_too_big": {
  "data": {
   "lineno": 4967,
   "symbols_in_volume": [
    "RuntimeWarning",
    "f",
    "issubclass",
    "len",
    "numpy.core.tests.test_multiarray._std",
    "numpy.core.tests.test_multiarray._var",
    "numpy.core.tests.test_multiarray.warnings",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_dtype_from_dtype": {
  "data": {
   "lineno": 4926,
   "symbols_in_volume": [
    "f",
    "numpy.dtype",
    "numpy.eye",
    "numpy.testing.assert_",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_dtype_from_input": {
  "data": {
   "lineno": 4877,
   "symbols_in_volume": [
    "decimal.Decimal",
    "f",
    "numpy.array",
    "numpy.core.tests.test_multiarray._mean",
    "numpy.core.tests.test_multiarray._std",
    "numpy.core.tests.test_multiarray._var",
    "numpy.eye",
    "numpy.float64",
    "numpy.testing.assert_",
    "numpy.typecodes",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_empty": {
  "data": {
   "lineno": 4978,
   "symbols_in_volume": [
    "A",
    "RuntimeWarning",
    "f",
    "issubclass",
    "len",
    "numpy.core.tests.test_multiarray.warnings",
    "numpy.isnan",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_keepdims": {
  "data": {
   "lineno": 4853,
   "symbols_in_volume": [
    "f",
    "numpy.eye",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_mean_float16": {
  "data": {
   "lineno": 5003,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray._mean",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_mean_values": {
  "data": {
   "lineno": 4992,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray._mean",
    "numpy.prod",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_out": {
  "data": {
   "lineno": 4864,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.empty",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_python_type": {
  "data": {
   "lineno": 4847,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.mean",
    "numpy.std",
    "numpy.testing.assert_equal",
    "numpy.var",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_std_values": {
  "data": {
   "lineno": 5017,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray._std",
    "numpy.core.tests.test_multiarray._var",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass": {
  "data": {
   "lineno": 5024,
   "symbols_in_volume": [
    "TestArray",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass.TestArray": {
  "data": {
   "lineno": 5025,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass.TestArray.__array_finalize__": {
  "data": {
   "lineno": 5032,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass.TestArray.__new__": {
  "data": {
   "lineno": 5026,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_var_values": {
  "data": {
   "lineno": 5008,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray._mean",
    "numpy.core.tests.test_multiarray._var",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare": {
  "data": {
   "lineno": 3556,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare.test_mixed": {
  "data": {
   "lineno": 3567,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare.test_string": {
  "data": {
   "lineno": 3557,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare.test_unicode": {
  "data": {
   "lineno": 3577,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_assignment": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.dtype",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "testassign"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_assignment.testassign": {
  "data": {
   "lineno": 1127
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_base_attr": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_casting": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.can_cast",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_multiindex_titles": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_objview": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_setfield": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_setfield_object": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_setfield_object.testassign": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_structuredscalar_indexing": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.testing.assert_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_subarray_comparison": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.rec.fromrecords",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "numpy.zeros",
    "object",
    "range",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_subarray_field_access": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStructured.test_zero_width_string": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "dict",
    "eval",
    "int",
    "numpy.array",
    "numpy.core.tests.test_multiarray.io",
    "numpy.dtype",
    "numpy.empty",
    "numpy.load",
    "numpy.ndarray",
    "numpy.save",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.temppath",
    "numpy.zeros",
    "repr",
    "x",
    "x.dtype",
    "x.itemsize",
    "x.reshape"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSubscripting": {
  "data": {
   "lineno": 3427,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestSubscripting.test_test_zero_rank": {
  "data": {
   "lineno": 3428,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.array",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.int_",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "type",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake": {
  "data": {
   "lineno": 4048,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_clip": {
  "data": {
   "lineno": 4070,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "x",
    "x.shape",
    "x.take"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_ip_byteorder": {
  "data": {
   "lineno": 4087
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_ip_types": {
  "data": {
   "lineno": 4053,
   "symbols_in_volume": [
    "T",
    "bytes",
    "numpy.compat.unicode",
    "numpy.random.random",
    "numpy.sctypes.values",
    "numpy.void",
    "object",
    "x",
    "x.copy",
    "x.shape"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_raise": {
  "data": {
   "lineno": 4063,
   "symbols_in_volume": [
    "IndexError",
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "x",
    "x.shape",
    "x.take"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_record_array": {
  "data": {
   "lineno": 4091,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_wrap": {
  "data": {
   "lineno": 4076,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "x",
    "x.shape",
    "x.take"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.tst_basic": {
  "data": {
   "lineno": 4049,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_array_equal",
    "range",
    "x",
    "x.shape",
    "x.take"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.tst_byteorder": {
  "data": {
   "lineno": 4083,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "x",
    "x.take"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide": {
  "data": {
   "lineno": 3315,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_elide_broadcast": {
  "data": {
   "lineno": 3381,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_elide_readonly": {
  "data": {
   "lineno": 3405,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_elide_scalar": {
  "data": {
   "lineno": 3391,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_elide_scalar_readonly": {
  "data": {
   "lineno": 3396,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_elide_updateifcopy": {
  "data": {
   "lineno": 3410,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_extension_incref_elide": {
  "data": {
   "lineno": 3318,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.incref_elide",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_extension_incref_elide_stack": {
  "data": {
   "lineno": 3333,
   "symbols_in_volume": [
    "numpy.core.multiarray_tests.incref_elide_l",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTemporaryElide.test_temporary_with_cast": {
  "data": {
   "lineno": 3348,
   "symbols_in_volume": [
    "abs",
    "numpy.clongdouble",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.longdouble",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeArrayNonzero": {
  "data": {
   "lineno": 7136,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeArrayNonzero.test_all_null_ustring_array_is_falsey": {
  "data": {
   "lineno": 7146,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeArrayNonzero.test_empty_ustring_array_is_falsey": {
  "data": {
   "lineno": 7138,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeArrayNonzero.test_null_inside_ustring_array_is_truthy": {
  "data": {
   "lineno": 7151,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestUnicodeArrayNonzero.test_whitespace_ustring_array_is_falsey": {
  "data": {
   "lineno": 7141,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestVdot": {
  "data": {
   "lineno": 5043,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestVdot.test_basic": {
  "data": {
   "lineno": 5044,
   "symbols_in_volume": [
    "bool",
    "numpy.eye",
    "numpy.isscalar",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.vdot"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestVdot.test_vdot_array_order": {
  "data": {
   "lineno": 5070,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.vdot"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestVdot.test_vdot_uncontiguous": {
  "data": {
   "lineno": 5080,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.vdot",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestView": {
  "data": {
   "lineno": 4811,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestView.test_basic": {
  "data": {
   "lineno": 4812,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int8",
    "numpy.testing.assert_array_equal",
    "x",
    "x.view"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWarnings": {
  "data": {
   "lineno": 6082,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestWarnings.test_complex_warning": {
  "data": {
   "lineno": 6084,
   "symbols_in_volume": [
    "numpy.ComplexWarning",
    "numpy.array",
    "numpy.core.tests.test_multiarray.warnings",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "slice",
    "x",
    "x.__setitem__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere": {
  "data": {
   "lineno": 6805,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_basic": {
  "data": {
   "lineno": 6806,
   "symbols_in_volume": [
    "bool",
    "dt",
    "numpy.clongdouble",
    "numpy.complex128",
    "numpy.double",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.longdouble",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "numpy.where",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_dtype_mix": {
  "data": {
   "lineno": 6887,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.testing.assert_equal",
    "numpy.uint32",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_empty_result": {
  "data": {
   "lineno": 6950,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.intp",
    "numpy.testing.assert_array_equal",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_error": {
  "data": {
   "lineno": 6930,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_exotic": {
  "data": {
   "lineno": 6832,
   "symbols_in_volume": [
    "bool",
    "float",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.where",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_foreign": {
  "data": {
   "lineno": 6911,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_largedim": {
  "data": {
   "lineno": 6958,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_ndim": {
  "data": {
   "lineno": 6873,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWhere.test_string": {
  "data": {
   "lineno": 6937,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy": {
  "data": {
   "lineno": 7202,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_argmax_with_out": {
  "data": {
   "lineno": 7204,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.empty",
    "numpy.eye",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_argmin_with_out": {
  "data": {
   "lineno": 7210,
   "symbols_in_volume": [
    "numpy.argmin",
    "numpy.empty",
    "numpy.eye",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_choose_mod_raise": {
  "data": {
   "lineno": 7245,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.choose",
    "numpy.empty",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_clip_with_out": {
  "data": {
   "lineno": 7216,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.eye",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_dot_out": {
  "data": {
   "lineno": 7261,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_flatiter__array__": {
  "data": {
   "lineno": 7254,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_insert_noncontiguous": {
  "data": {
   "lineno": 7222,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.place",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_put_noncontiguous": {
  "data": {
   "lineno": 7228,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.put",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_putmask_noncontiguous": {
  "data": {
   "lineno": 7233,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.putmask",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_take_mode_raise": {
  "data": {
   "lineno": 7239,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.take",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_view_assign": {
  "data": {
   "lineno": 7267,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.multiarray_tests.npy_create_writebackifcopy",
    "numpy.core.multiarray_tests.npy_resolve",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestWritebackIfCopy.test_view_discard_refcount": {
  "data": {
   "lineno": 7286,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.multiarray_tests.npy_create_writebackifcopy",
    "numpy.core.multiarray_tests.npy_discard",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.setup": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.array",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_constructor": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_ellipsis_subscript": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_ellipsis_subscript_assignment": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_empty_subscript": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_empty_subscript_assignment": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_newaxis": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "IndexError",
    "numpy.newaxis",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_newaxis.subscript": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_subscript": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "IndexError",
    "int",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_subscript_assignment": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_subscript_assignment.assign": {
  "data": {
   "lineno": 536
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_newaxis": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.newaxis.shape",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_output": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ValueError",
    "numpy.add",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible._test_sort_partition": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "bytes",
    "getattr",
    "numpy",
    "numpy.compat.unicode",
    "numpy.void",
    "sort_func",
    "sort_method"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible._zeros": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.void",
    "numpy.zeros",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_argpartition": {
  "data": {
   "lineno": 1305
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_argsort": {
  "data": {
   "lineno": 1299
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_create": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "bytes",
    "numpy.compat.unicode",
    "numpy.testing.assert_equal",
    "numpy.void"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_partition": {
  "data": {
   "lineno": 1302
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_pickle": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "bytes",
    "numpy.compat.unicode",
    "numpy.core.tests.test_multiarray.pickle",
    "numpy.testing.assert_equal",
    "numpy.void"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_resize": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "bytes",
    "numpy.compat.unicode",
    "numpy.void"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_sort": {
  "data": {
   "lineno": 1296
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroSizeFlexible.test_view": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "bytes",
    "numpy.compat.unicode",
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "numpy.void"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray._aligned_zeros": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "hasattr",
    "numpy.core.tests.test_multiarray.functools",
    "numpy.core.tests.test_multiarray.operator",
    "numpy.dtype",
    "numpy.empty",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray._dtype_from_pep3118": {
  "data": {
   "shadows": "numpy.core._internal._dtype_from_pep3118"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray._internal": {
  "data": {
   "shadows": "numpy.core._internal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray._mean": {
  "data": {
   "lineno": 4824
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray._std": {
  "data": {
   "lineno": 4832
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray._var": {
  "data": {
   "lineno": 4828
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.assert_raises_regex": {
  "data": {
   "shadows": "numpy.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.dot": {
  "data": {
   "shadows": "numpy.core.multiarray.dot"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.get_buffer_info": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.get_buffer_info"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.in_foreign_locale": {
  "data": {
   "shadows": "numpy.core.tests.test_print.in_foreign_locale"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.incref_elide": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.incref_elide"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.incref_elide_l": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.incref_elide_l"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.npy_cabs": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_cabs"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.npy_carg": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_carg"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.npy_cosh": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_cosh"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.npy_create_writebackifcopy": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_create_writebackifcopy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.npy_discard": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_discard"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.npy_log10": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_log10"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.npy_resolve": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_resolve"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.npy_sinh": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_sinh"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.npy_tan": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_tan"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.npy_tanh": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.npy_tanh"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.runstring": {
  "data": {
   "shadows": "numpy.testing.runstring"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.set_string_function": {
  "data": {
   "shadows": "numpy.core.numeric.set_string_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.strchar": {
  "data": {
   "shadows": "numpy.compat.strchar"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.temppath": {
  "data": {
   "shadows": "numpy.testing.temppath"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.test_array_interface": {
  "data": {
   "lineno": 6573,
   "symbols_in_volume": [
    "ArrayLike",
    "Foo",
    "TypeError",
    "ValueError",
    "f",
    "f.iface",
    "numpy.array",
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_array_interface.ArrayLike": {
  "data": {
   "lineno": 6603,
   "symbols_in_volume": [
    "numpy.array",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_array_interface.Foo": {
  "data": {
   "lineno": 6575,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_array_interface.Foo.__array_interface__": {
  "data": {
   "lineno": 6583,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_array_interface.Foo.__float__": {
  "data": {
   "lineno": 6580,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_array_interface.Foo.__init__": {
  "data": {
   "lineno": 6576
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_array_interface_empty_shape": {
  "data": {
   "lineno": 6619,
   "symbols_in_volume": [
    "DummyArray1",
    "DummyArray2",
    "dict",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_array_interface_empty_shape.DummyArray1": {
  "data": {
   "lineno": 6625,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_array_interface_empty_shape.DummyArray2": {
  "data": {
   "lineno": 6635,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_array_interface_itemsize": {
  "data": {
   "lineno": 6609,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_as_c_array": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_as_c_array"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.test_equal_override": {
  "data": {
   "lineno": 7338,
   "symbols_in_volume": [
    "my_always_equal_cls",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_equal_override.MyAlwaysEqual": {
  "data": {
   "lineno": 7342,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_equal_override.MyAlwaysEqual.__eq__": {
  "data": {
   "lineno": 7343
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_equal_override.MyAlwaysEqual.__ne__": {
  "data": {
   "lineno": 7346
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_equal_override.MyAlwaysEqualNew": {
  "data": {
   "lineno": 7352
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_equal_override.MyAlwaysEqualOld": {
  "data": {
   "lineno": 7349
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.test_flat_element_deletion": {
  "data": {
   "lineno": 6645,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "TypeError",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_inplace_increment": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_inplace_increment"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.test_int_subclass": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_int_subclass"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.test_matmul_inplace": {
  "data": {
   "lineno": 5641,
   "symbols_in_volume": [
    "TypeError",
    "__builtin__",
    "getattr",
    "globals",
    "locals",
    "numpy.core.tests.test_multiarray.operator",
    "numpy.eye",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_neighborhood_iterator": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_neighborhood_iterator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.test_neighborhood_iterator_oob": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_neighborhood_iterator_oob"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.test_npymath_complex": {
  "data": {
   "lineno": 7364,
   "symbols_in_volume": [
    "complex",
    "fun",
    "npfun",
    "numpy.absolute",
    "numpy.angle",
    "numpy.clongdouble",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.core.multiarray_tests.npy_cabs",
    "numpy.core.multiarray_tests.npy_carg",
    "numpy.core.tests.test_multiarray.itertools",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "t",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_npymath_real": {
  "data": {
   "lineno": 7383,
   "symbols_in_volume": [
    "fun",
    "npfun",
    "numpy.core.multiarray_tests.npy_cosh",
    "numpy.core.multiarray_tests.npy_log10",
    "numpy.core.multiarray_tests.npy_sinh",
    "numpy.core.multiarray_tests.npy_tan",
    "numpy.core.multiarray_tests.npy_tanh",
    "numpy.core.tests.test_multiarray.itertools",
    "numpy.cosh",
    "numpy.errstate",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.log10",
    "numpy.longdouble",
    "numpy.nan",
    "numpy.sinh",
    "numpy.tan",
    "numpy.tanh",
    "numpy.testing.assert_allclose",
    "t",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_orderconverter_with_nonASCII_unicode_ordering": {
  "data": {
   "lineno": 7332,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.test_pydatamem_seteventhook_end": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_pydatamem_seteventhook_end"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.test_pydatamem_seteventhook_start": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_pydatamem_seteventhook_start"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.test_scalar_element_deletion": {
  "data": {
   "lineno": 6656,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.unicode": {
  "data": {
   "shadows": "numpy.compat.unicode"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_nditer.HAS_REFCOUNT": {
  "data": {
   "shadows": "numpy.testing.HAS_REFCOUNT"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.TestIterNested": {
  "data": {
   "lineno": 2150,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_0d": {
  "data": {
   "lineno": 2319,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nested_iters",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_basic": {
  "data": {
   "lineno": 2152,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nested_iters",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_broadcast": {
  "data": {
   "lineno": 2258,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nested_iters",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_dtype_buffered": {
  "data": {
   "lineno": 2304,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "numpy.nested_iters",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_dtype_copy": {
  "data": {
   "lineno": 2275,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "numpy.nested_iters",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_flip_axes": {
  "data": {
   "lineno": 2216,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nested_iters",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.TestIterNested.test_reorder": {
  "data": {
   "lineno": 2174,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nested_iters",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.all": {
  "data": {
   "shadows": "numpy.all"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.iter_indices": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.iter_iterindices": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.iter_multi_index": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.nditer": {
  "data": {
   "shadows": "numpy.nditer"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.test_0d_iter": {
  "data": {
   "lineno": 2636,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "next",
    "numpy.arange",
    "numpy.array",
    "numpy.nditer",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_buffered_readwrite": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_errors": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.newaxis",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_itorder": {
  "data": {
   "lineno": 1361,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_opaxes": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_simple": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_subtype": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.arange",
    "numpy.matrix",
    "numpy.nditer",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_types_byte_order": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nditer",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_types_promotion": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocate_output_types_scalar": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.dtype",
    "numpy.float32",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_allocated_array_dtypes": {
  "data": {
   "lineno": 2617,
   "symbols_in_volume": [
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_array_cast": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_array_cast_errors": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nditer",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_c_index_1d": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.iter_indices",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_c_index_2d": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.iter_indices",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_c_index_3d": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.iter_indices",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_f_index_1d": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.iter_indices",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_f_index_2d": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.iter_indices",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_f_index_3d": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.iter_indices",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_multi_index_1d": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.iter_multi_index",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_multi_index_2d": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.iter_multi_index",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_best_order_multi_index_3d": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.iter_multi_index",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_broadcasting": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_broadcasting_errors": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "numpy.arange",
    "numpy.nditer",
    "numpy.newaxis",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_byteswapped": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "numpy.ComplexWarning",
    "numpy.arange",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_byteswapped_complex": {
  "data": {
   "lineno": 1728,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.clongdouble",
    "numpy.dtype",
    "numpy.longdouble",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_simple": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_structured_type": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.core.tests.test_nditer.sys",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_cast_subarray": {
  "data": {
   "lineno": 1859,
   "symbols_in_volume": [
    "list",
    "numpy.all",
    "numpy.arange",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_reduce_reuse": {
  "data": {
   "lineno": 2085,
   "symbols_in_volume": [
    "float",
    "get_params",
    "numpy.arange",
    "numpy.int_",
    "numpy.nditer",
    "numpy.testing.assert_array_equal",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffered_reduce_reuse.get_params": {
  "data": {
   "lineno": 2095,
   "symbols_in_volume": [
    "numpy.lib.stride_tricks.as_strided",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering": {
  "data": {
   "lineno": 1614,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "numpy.nditer",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_badwriteback": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_delayed_alloc": {
  "data": {
   "lineno": 1660,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_delayed_alloc.assign_iter": {
  "data": {
   "lineno": 1674
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_growinner": {
  "data": {
   "lineno": 2076,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_reduction": {
  "data": {
   "lineno": 2409,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.int8",
    "numpy.nditer",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_reduction_reuse_reduce_loops": {
  "data": {
   "lineno": 2469,
   "symbols_in_volume": [
    "numpy.nditer",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_buffering_string": {
  "data": {
   "lineno": 2058,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.bytes_",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_c_or_f_order": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nditer",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_c_order": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nditer",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_common_dtype": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_copy": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "next",
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_copy_if_overlap": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.int8",
    "numpy.nditer",
    "numpy.ones",
    "numpy.shares_memory",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_dim_coalescing": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_element_deletion": {
  "data": {
   "lineno": 2607,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "TypeError",
    "numpy.nditer",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_f_order": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nditer",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "numpy.nditer",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_index": {
  "data": {
   "lineno": 745
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_iterindex": {
  "data": {
   "lineno": 748
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_iterrange": {
  "data": {
   "lineno": 751
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_flags_errors.assign_multi_index": {
  "data": {
   "lineno": 742
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_iterindex": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.core.tests.test_nditer.iter_iterindices",
    "numpy.nditer",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_iterrange": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "get_array",
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_iterrange.get_array": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_itershape": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nditer",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_nbo_align_contig": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_no_broadcast": {
  "data": {
   "lineno": 2135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_no_inner_dim_coalescing": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_no_inner_full_coalesce": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nditer",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_non_writable_attribute_deletion": {
  "data": {
   "lineno": 2590,
   "symbols_in_volume": [
    "AttributeError",
    "delattr",
    "numpy.nditer",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_object_arrays_basic": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.core.tests.test_nditer.sys",
    "numpy.nditer",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_object_arrays_conversions": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.sys",
    "numpy.nditer",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_op_axes": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.nditer",
    "numpy.newaxis",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_op_axes_errors": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_reduction": {
  "data": {
   "lineno": 2353,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nditer",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_reduction_error": {
  "data": {
   "lineno": 2341,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_refcount": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.tests.test_nditer.sys",
    "numpy.dtype",
    "numpy.nditer",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_remove_axis": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_remove_multi_index_inner_loop": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_scalar_cast": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_scalar_cast_errors": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "TypeError",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.nditer",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_slice": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_too_large": {
  "data": {
   "lineno": 2667,
   "symbols_in_volume": [
    "ValueError",
    "numpy.iinfo",
    "numpy.intp",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.nditer",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_too_large_with_multiindex": {
  "data": {
   "lineno": 2680,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.multiarray_tests.test_nditer_too_large",
    "numpy.empty",
    "numpy.iinfo",
    "numpy.intp",
    "numpy.testing.assert_raises",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_writable_attribute_deletion": {
  "data": {
   "lineno": 2600,
   "symbols_in_volume": [
    "AttributeError",
    "delattr",
    "numpy.nditer",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_write_buffering": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nditer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_writemasked": {
  "data": {
   "lineno": 2552,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nditer",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_iter_writemasked_badinput": {
  "data": {
   "lineno": 2486,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.nditer",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_nditer.test_nditer_too_large": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_nditer_too_large"
  },
  "type": "import"
 },
 "numpy.core.tests.test_nditer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_numeric.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.HAS_REFCOUNT": {
  "data": {
   "shadows": "numpy.testing.HAS_REFCOUNT"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.NIterError": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.TestAllclose": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestAllclose.setup": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "numpy.seterr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.teardown": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "numpy.seterr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_equalnan": {
  "data": {
   "lineno": 1835,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_ip_allclose": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_ip_not_allclose": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_min_int": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.iinfo",
    "numpy.int_",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_no_parameter_modification": {
  "data": {
   "lineno": 1822,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_return_class_is_ndarray": {
  "data": {
   "lineno": 1839,
   "symbols_in_volume": [
    "Foo",
    "bool",
    "numpy.allclose",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_return_class_is_ndarray.Foo": {
  "data": {
   "lineno": 1842,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestAllclose.test_return_class_is_ndarray.Foo.__new__": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.tst_allclose": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestAllclose.tst_not_allclose": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArgwhere": {
  "data": {
   "lineno": 2293,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestArgwhere.test_2D": {
  "data": {
   "lineno": 2294,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argwhere",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArgwhere.test_list": {
  "data": {
   "lineno": 2302,
   "symbols_in_volume": [
    "numpy.argwhere",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_array_equal": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.array_equal",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_array_equiv": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.array_equiv",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_none_compares_elementwise": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_base3": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "numpy.base_repr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_base_range": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "ValueError",
    "numpy.base_repr",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_negative": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "numpy.base_repr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBaseRepr.test_positive": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "numpy.base_repr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_neg_width_boundaries": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "numpy.binary_repr",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_negative": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "numpy.binary_repr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_positive": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "numpy.binary_repr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_sufficient_width": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "numpy.binary_repr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_zero": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "numpy.binary_repr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.setup": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "bool",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.test_all_any": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "bool",
    "list",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.test_logical_and_or_xor": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.logical_and",
    "numpy.logical_or",
    "numpy.logical_xor",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolArray.test_logical_not_abs": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.logical_not",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp.setup": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.nan",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp.test_double": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "numpy.int8",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.signbit",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolCmp.test_float": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.int8",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.signbit",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_and": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.False_",
    "numpy.True_",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_or": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.False_",
    "numpy.True_",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_xor": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.False_",
    "numpy.True_",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_logical": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.False_",
    "numpy.True_",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBroadcast": {
  "data": {
   "lineno": 2678,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBroadcast.test_broadcast_in_args": {
  "data": {
   "lineno": 2679,
   "symbols_in_volume": [
    "numpy.broadcast",
    "numpy.empty",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBroadcast.test_broadcast_single_arg": {
  "data": {
   "lineno": 2694,
   "symbols_in_volume": [
    "numpy.broadcast",
    "numpy.empty",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBroadcast.test_number_of_arguments": {
  "data": {
   "lineno": 2704,
   "symbols_in_volume": [
    "ValueError",
    "numpy.broadcast",
    "numpy.empty",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_data": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_data_complex": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_flt_data": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_int32_data": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_int_data": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_non_native_data": {
  "data": {
   "lineno": 1361,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._neg_byteorder": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.core.tests.test_numeric.sys"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.clip": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "numpy.greater",
    "numpy.less"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.fastclip": {
  "data": {
   "lineno": 1332
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.setup": {
  "data": {
   "lineno": 1328
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_array_double": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_complex": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "complex",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_func_takes_out": {
  "data": {
   "lineno": 1745,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_inplace_array": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_inplace_simple": {
  "data": {
   "lineno": 1735,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_nan": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_non_contig": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_array_int32": {
  "data": {
   "lineno": 1703,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.float64",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_array_outint32": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple2": {
  "data": {
   "lineno": 1681,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.float64",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple_int32": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.int32",
    "numpy.int64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_noncontig_inplace": {
  "data": {
   "lineno": 1536,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_complex": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_double": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_inplace_01": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_inplace_02": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int32_inout": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.float64",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int32_out": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int64_inout": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.float64",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int64_out": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.int32",
    "numpy.int64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_nonnative": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_out": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_01": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_02": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_03": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_04": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_05": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_06": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_07": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_08": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_09": {
  "data": {
   "lineno": 1627,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_10": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.float32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_11": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_12": {
  "data": {
   "lineno": 1660,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "numpy.float32",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestConvolve": {
  "data": {
   "lineno": 2279,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestConvolve.test_no_overwrite": {
  "data": {
   "lineno": 2285,
   "symbols_in_volume": [
    "numpy.convolve",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestConvolve.test_object": {
  "data": {
   "lineno": 2280,
   "symbols_in_volume": [
    "numpy.convolve",
    "numpy.full",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate": {
  "data": {
   "lineno": 2228,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCorrelate._setup": {
  "data": {
   "lineno": 2229,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_complex": {
  "data": {
   "lineno": 2270,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.correlate",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_float": {
  "data": {
   "lineno": 2241,
   "symbols_in_volume": [
    "float",
    "numpy.correlate",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_no_overwrite": {
  "data": {
   "lineno": 2263,
   "symbols_in_volume": [
    "numpy.correlate",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_object": {
  "data": {
   "lineno": 2256,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.correlate",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs": {
  "data": {
   "lineno": 2039,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.check_function": {
  "data": {
   "lineno": 2053,
   "symbols_in_volume": [
    "func",
    "getattr",
    "numpy.core.tests.test_numeric.itertools",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.setup": {
  "data": {
   "lineno": 2042,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.itertools",
    "numpy.dtype",
    "numpy.sctypes.values",
    "range",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_empty": {
  "data": {
   "lineno": 2088,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_for_reference_leak": {
  "data": {
   "lineno": 2095,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.sys",
    "numpy.empty",
    "numpy.full",
    "numpy.ones",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_full": {
  "data": {
   "lineno": 2091,
   "symbols_in_volume": [
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_ones": {
  "data": {
   "lineno": 2085,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCreationFuncs.test_zeros": {
  "data": {
   "lineno": 2082,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCross": {
  "data": {
   "lineno": 2515,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCross.test_2x2": {
  "data": {
   "lineno": 2516,
   "symbols_in_volume": [
    "numpy.cross",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCross.test_2x3": {
  "data": {
   "lineno": 2525,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cross",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCross.test_3x3": {
  "data": {
   "lineno": 2534,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cross",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCross.test_broadcasting": {
  "data": {
   "lineno": 2543,
   "symbols_in_volume": [
    "numpy.cross",
    "numpy.testing.assert_equal",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCross.test_broadcasting_shapes": {
  "data": {
   "lineno": 2573,
   "symbols_in_volume": [
    "numpy.AxisError",
    "numpy.cross",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.assert_op_raises_fpe": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "flop"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.assert_raises_fpe": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "FloatingPointError",
    "flop",
    "numpy.testing.assert_",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.test_floating_exceptions": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "ftype",
    "numpy.dtype",
    "numpy.errstate",
    "numpy.finfo",
    "numpy.inf",
    "numpy.obj2sctype",
    "numpy.power",
    "numpy.testing.dec.knownfailureif",
    "numpy.typecodes",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFloatExceptions.test_warnings": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.core.tests.test_numeric.warnings",
    "numpy.divide",
    "numpy.errstate",
    "numpy.inf",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestFromiter.load_data": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.NIterError",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.makegen": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_2592": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_numeric.NIterError",
    "numpy.fromiter",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_2592_edge": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_numeric.NIterError",
    "numpy.fromiter",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_lengths": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.fromiter",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_types": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "float",
    "numpy.dtype",
    "numpy.fromiter",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_values": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.alltrue",
    "numpy.array",
    "numpy.fromiter",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndex": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestIndex.test_boolean": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndex.test_boolean_edgecase": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose": {
  "data": {
   "lineno": 1850,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestIsclose.setup": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_equal_nan": {
  "data": {
   "lineno": 1938,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isclose",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_all_isclose": {
  "data": {
   "lineno": 1921
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_isclose": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "numpy.isclose",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_isclose_allclose": {
  "data": {
   "lineno": 1931
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_ip_none_isclose": {
  "data": {
   "lineno": 1926
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_masked_arrays": {
  "data": {
   "lineno": 1943,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.inf",
    "numpy.isclose",
    "numpy.ma.masked_where",
    "numpy.nan",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_no_parameter_modification": {
  "data": {
   "lineno": 1973,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.isclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_non_finite_scalar": {
  "data": {
   "lineno": 1980,
   "symbols_in_volume": [
    "numpy.False_",
    "numpy.bool_",
    "numpy.inf",
    "numpy.isclose",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.test_scalar_return": {
  "data": {
   "lineno": 1970,
   "symbols_in_volume": [
    "numpy.isclose",
    "numpy.isscalar",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.tst_all_isclose": {
  "data": {
   "lineno": 1906,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isclose",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.tst_isclose_allclose": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.isclose",
    "numpy.isscalar",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsclose.tst_none_isclose": {
  "data": {
   "lineno": 1909,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isclose",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIsscalar": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestIsscalar.test_isscalar": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "fractions.Fraction",
    "numbers.Number",
    "numpy.int16",
    "numpy.isscalar",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestKeepdims": {
  "data": {
   "lineno": 2715,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestKeepdims.sub_array": {
  "data": {
   "lineno": 2717,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestKeepdims.sub_array.sum": {
  "data": {
   "lineno": 2718,
   "symbols_in_volume": [
    "numpy.ndarray.sum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestKeepdims.test_raise": {
  "data": {
   "lineno": 2721,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.sum",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs": {
  "data": {
   "lineno": 2110,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.check_like_function": {
  "data": {
   "lineno": 2150,
   "symbols_in_volume": [
    "like_function",
    "numpy.array",
    "numpy.dtype",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.compare_array_value": {
  "data": {
   "lineno": 2138,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.all",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.setup": {
  "data": {
   "lineno": 2113,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_empty_like": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": [
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_filled_like": {
  "data": {
   "lineno": 2220,
   "symbols_in_volume": [
    "numpy.full_like",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_ones_like": {
  "data": {
   "lineno": 2211,
   "symbols_in_volume": [
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_zeros_like": {
  "data": {
   "lineno": 2214,
   "symbols_in_volume": [
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis": {
  "data": {
   "lineno": 2441,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_array_likes": {
  "data": {
   "lineno": 2503,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ma.MaskedArray",
    "numpy.ma.zeros",
    "numpy.moveaxis",
    "numpy.ndarray",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_errors": {
  "data": {
   "lineno": 2486,
   "symbols_in_volume": [
    "ValueError",
    "numpy.AxisError",
    "numpy.moveaxis",
    "numpy.random.randn",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_move_multiples": {
  "data": {
   "lineno": 2474,
   "symbols_in_volume": [
    "numpy.moveaxis",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_move_new_position": {
  "data": {
   "lineno": 2451,
   "symbols_in_volume": [
    "numpy.moveaxis",
    "numpy.random.randn",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_move_to_end": {
  "data": {
   "lineno": 2442,
   "symbols_in_volume": [
    "numpy.moveaxis",
    "numpy.random.randn",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestMoveaxis.test_preserve_order": {
  "data": {
   "lineno": 2461,
   "symbols_in_volume": [
    "numpy.moveaxis",
    "numpy.testing.assert_",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_choose": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.choose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_clip": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_compress": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.compress",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_count_nonzero": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_cumproduct": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.cumproduct",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_diagonal": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.diagonal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_mean": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.all",
    "numpy.array",
    "numpy.core.tests.test_numeric.warnings",
    "numpy.isnan",
    "numpy.mean",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_prod": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.prod",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_ptp": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.ptp",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_ravel": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.ravel",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_repeat": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.repeat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_reshape": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.reshape",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_round": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.around",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_searchsorted": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.searchsorted",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_size": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.size",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_squeeze": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.squeeze",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_std": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.array",
    "numpy.core.tests.test_numeric.warnings",
    "numpy.isnan",
    "numpy.std",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_sum": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_swapaxes": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.swapaxes",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_take": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.take",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_trace": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.trace"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_transpose": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_var": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.array",
    "numpy.core.tests.test_numeric.warnings",
    "numpy.isnan",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_array_method": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_count_nonzero_axis": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.AxisError",
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_count_nonzero_axis_all_dtypes": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "assert_equal_w_dt",
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.dtype",
    "numpy.intp",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.void",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_count_nonzero_axis_all_dtypes.assert_equal_w_dt": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_count_nonzero_axis_consistent": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "itertools.combinations",
    "itertools.permutations",
    "len",
    "numpy.count_nonzero",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_countnonzero_axis_empty": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_invalid_object": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "BoolErrors",
    "ValueError",
    "numpy.array",
    "numpy.nonzero",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_invalid_object.BoolErrors": {
  "data": {
   "lineno": 1162
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_invalid_object.BoolErrors.__bool__": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_invalid_object.BoolErrors.__nonzero__": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_onedim": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.nonzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_trivial": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.nonzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_nonzero_twodim": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.eye",
    "numpy.nonzero",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_return_type": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ndarray",
    "numpy.nonzero",
    "numpy.prod",
    "numpy.testing.assert_",
    "range",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_return_type.C": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonzero.test_sparse": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "bool",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.nonzero",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire": {
  "data": {
   "lineno": 2604,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRequire.generate_all_false": {
  "data": {
   "lineno": 2611,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.set_and_check_flag": {
  "data": {
   "lineno": 2622,
   "symbols_in_volume": [
    "numpy.require",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_C_and_F_simul": {
  "data": {
   "lineno": 2657,
   "symbols_in_volume": [
    "ValueError",
    "numpy.require",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_ensure_array": {
  "data": {
   "lineno": 2661,
   "symbols_in_volume": [
    "ArraySubclass",
    "numpy.ndarray",
    "numpy.require",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_ensure_array.ArraySubclass": {
  "data": {
   "lineno": 2662,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_non_array_input": {
  "data": {
   "lineno": 2649,
   "symbols_in_volume": [
    "numpy.require",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_preserve_subtype": {
  "data": {
   "lineno": 2669,
   "symbols_in_volume": [
    "ArraySubclass"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_preserve_subtype.ArraySubclass": {
  "data": {
   "lineno": 2670,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_require_each": {
  "data": {
   "lineno": 2637,
   "symbols_in_volume": [
    "id",
    "numpy.core.tests.test_numeric.itertools"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRequire.test_unknown_requirement": {
  "data": {
   "lineno": 2645,
   "symbols_in_volume": [
    "KeyError",
    "numpy.require",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestResize": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestResize.test_copies": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.resize",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestResize.test_reshape_from_zero": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.resize",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestResize.test_zeroresize": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.resize",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRoll": {
  "data": {
   "lineno": 2321,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRoll.test_roll1d": {
  "data": {
   "lineno": 2322,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.roll",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRoll.test_roll2d": {
  "data": {
   "lineno": 2327,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.reshape",
    "numpy.roll",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRoll.test_roll_empty": {
  "data": {
   "lineno": 2374,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.roll",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRollaxis": {
  "data": {
   "lineno": 2379,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestRollaxis.test_exceptions": {
  "data": {
   "lineno": 2396,
   "symbols_in_volume": [
    "numpy.AxisError",
    "numpy.arange",
    "numpy.rollaxis",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestRollaxis.test_results": {
  "data": {
   "lineno": 2403,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.indices",
    "numpy.rollaxis",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_default": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "dict",
    "numpy.geterr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_divide_err": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "FloatingPointError",
    "numpy.array",
    "numpy.core.tests.test_numeric.platform",
    "numpy.errstate",
    "numpy.seterr",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_errobj": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.core.tests.test_numeric.warnings",
    "numpy.divide",
    "numpy.errstate",
    "numpy.geterrobj",
    "numpy.seterrobj",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_errobj.log_err": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_errobj_noerrmask": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.umath.ERR_DEFAULT",
    "numpy.core.umath.UFUNC_BUFSIZE_DEFAULT",
    "numpy.geterrobj",
    "numpy.isnan",
    "numpy.seterrobj",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_set": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.geterr",
    "numpy.seterr",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar": {
  "data": {
   "lineno": 1988,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStdVar.setup": {
  "data": {
   "lineno": 1989,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_basic": {
  "data": {
   "lineno": 1993,
   "symbols_in_volume": [
    "numpy.std",
    "numpy.testing.assert_almost_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_ddof1": {
  "data": {
   "lineno": 2001,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.std",
    "numpy.testing.assert_almost_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_ddof2": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.std",
    "numpy.testing.assert_almost_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_out_scalar": {
  "data": {
   "lineno": 2013,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.std",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_scalars": {
  "data": {
   "lineno": 1997,
   "symbols_in_volume": [
    "numpy.std",
    "numpy.testing.assert_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex": {
  "data": {
   "lineno": 2027,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex.test_basic": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.std",
    "numpy.testing.assert_almost_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex.test_scalars": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "numpy.std",
    "numpy.testing.assert_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStringFunction": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStringFunction.test_set_string_function": {
  "data": {
   "lineno": 2308,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.set_string_function",
    "numpy.testing.assert_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTensordot": {
  "data": {
   "lineno": 2727,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestTensordot.test_zero_dimension": {
  "data": {
   "lineno": 2729,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.einsum",
    "numpy.ndarray",
    "numpy.tensordot",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestTypes.check_promotion_cases": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.clongdouble",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "promote_func"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_can_cast": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "TypeError",
    "complex",
    "float",
    "numpy.can_cast",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_can_cast_values": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "numpy.can_cast",
    "numpy.finfo",
    "numpy.iinfo",
    "numpy.sctypes",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_coercion": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.clongdouble",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int8",
    "numpy.longdouble",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_coercion.res_type": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "numpy.add"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_promote_types_endian": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.promote_types",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_promote_types_strings": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.promote_types",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestTypes.test_result_type": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.result_type",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.assert_array_strict_equal": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.sys",
    "numpy.intp",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.assert_raises_regex": {
  "data": {
   "shadows": "numpy.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.test_outer_out_param": {
  "data": {
   "lineno": 2593,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.outer",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.umath": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.core.tests.test_numerictypes.sys",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_numerictypes.CreateValues": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.CreateValues.test_list_of_list_of_tuple": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_numerictypes.normalize_descr",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.CreateValues.test_list_of_tuple": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_numerictypes.normalize_descr",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.CreateValues.test_tuple": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_numerictypes.normalize_descr",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.CreateZeros": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.CreateZeros.test_zeros0D": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.normalize_descr",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.void",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.CreateZeros.test_zerosMD": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.normalize_descr",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.CreateZeros.test_zerosSD": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.normalize_descr",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.void",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.NbufferT": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.Ndescr": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.PbufferT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.Pdescr": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested.test_access_top_fields": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested.test_nested1_acessors": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested.test_nested1_descriptor": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_numerictypes.sys",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested.test_nested2_acessors": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesNested.test_nested2_descriptor": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesPlain": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.ReadValuesPlain.test_access_fields": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_loses1": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.find_common_type",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_loses2": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.find_common_type",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "numpy.find_common_type",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins2": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.find_common_type",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins3": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "numpy.find_common_type",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCreateValuesNestedMultiple": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.CreateValues",
    "numpy.core.tests.test_numerictypes.NbufferT",
    "numpy.core.tests.test_numerictypes.Ndescr"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCreateValuesNestedSingle": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.CreateValues",
    "numpy.core.tests.test_numerictypes.NbufferT",
    "numpy.core.tests.test_numerictypes.Ndescr"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCreateValuesPlainMultiple": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.CreateValues",
    "numpy.core.tests.test_numerictypes.PbufferT",
    "numpy.core.tests.test_numerictypes.Pdescr"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCreateValuesPlainSingle": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.CreateValues",
    "numpy.core.tests.test_numerictypes.PbufferT",
    "numpy.core.tests.test_numerictypes.Pdescr"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCreateZerosNested": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.CreateZeros",
    "numpy.core.tests.test_numerictypes.Ndescr"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCreateZerosPlain": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.CreateZeros",
    "numpy.core.tests.test_numerictypes.Pdescr"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestEmptyField": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestEmptyField.test_assign": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.dtype",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_both_abstract": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.floating",
    "numpy.inexact",
    "numpy.issubdtype",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_same": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.itertools",
    "numpy.float32",
    "numpy.int32",
    "numpy.issubdtype",
    "numpy.testing.assert_",
    "w1",
    "w2"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_sibling_class": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.itertools",
    "numpy.float32",
    "numpy.float64",
    "numpy.issubdtype",
    "numpy.testing.assert_",
    "w1",
    "w2"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_subclass": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.testing.assert_",
    "w"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestIsSubDType.test_subclass_backwards": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.testing.assert_",
    "w"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields._bad_call": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.setup": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.test_no_tuple": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "IndexError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.test_return": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestReadValuesNestedMultiple": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.NbufferT",
    "numpy.core.tests.test_numerictypes.Ndescr",
    "numpy.core.tests.test_numerictypes.ReadValuesNested"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestReadValuesNestedSingle": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.NbufferT",
    "numpy.core.tests.test_numerictypes.Ndescr",
    "numpy.core.tests.test_numerictypes.ReadValuesNested"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestReadValuesPlainMultiple": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.PbufferT",
    "numpy.core.tests.test_numerictypes.Pdescr",
    "numpy.core.tests.test_numerictypes.ReadValuesPlain"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestReadValuesPlainSingle": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.PbufferT",
    "numpy.core.tests.test_numerictypes.Pdescr",
    "numpy.core.tests.test_numerictypes.ReadValuesPlain"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.byteorder": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.normalize_descr": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.core.tests.test_numerictypes.byteorder",
    "numpy.prod",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.core.tests.test_print.sys",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_print.SkipTest": {
  "data": {
   "shadows": "numpy.testing.SkipTest"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print._REF": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.core.tests.test_print._check_complex_inf_nan": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dtype",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print._test_redirected_print": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "StringIO.StringIO",
    "numpy.core.tests.test_print.sys",
    "numpy.testing.assert_equal",
    "print",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.check_complex_type": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "complex",
    "numpy.testing.assert_equal",
    "str",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.check_complex_type_print": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "complex",
    "numpy.core.tests.test_print._test_redirected_print",
    "numpy.inf",
    "numpy.nan",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.check_float_type": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "float",
    "numpy.testing.assert_equal",
    "str",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.check_float_type_print": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "float",
    "numpy.core.tests.test_print._REF",
    "numpy.core.tests.test_print._test_redirected_print",
    "numpy.inf",
    "numpy.nan",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.check_nan_inf_float": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.core.tests.test_print._REF",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "str",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.in_foreign_locale": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "func",
    "numpy.core.tests.test_print.nose",
    "numpy.core.tests.test_print.sys"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.in_foreign_locale.wrapper": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "func",
    "numpy.core.tests.test_print.locale",
    "numpy.testing.SkipTest"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_print.test_complex_inf_nan": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "complex",
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.complex64",
    "numpy.inf",
    "numpy.nan",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_complex_type_print": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.complex64",
    "numpy.core.tests.test_print.check_complex_type_print"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_complex_types": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.complex64",
    "numpy.core.tests.test_print.check_complex_type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_float_type_print": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.core.tests.test_print.check_float_type_print",
    "numpy.double",
    "numpy.float32",
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_float_types": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.core.tests.test_print.check_float_type",
    "numpy.double",
    "numpy.float32",
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_locale_double": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "float",
    "numpy.core.tests.test_print.in_foreign_locale",
    "numpy.double",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_locale_longdouble": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "float",
    "numpy.core.tests.test_print.in_foreign_locale",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_locale_single": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "float",
    "numpy.core.tests.test_print.in_foreign_locale",
    "numpy.float32",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_nan_inf_float": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.core.tests.test_print.check_nan_inf_float",
    "numpy.double",
    "numpy.float32",
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_print.test_scalar_format": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool_",
    "numpy.clongdouble",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.longdouble",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "repr",
    "str",
    "valtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_records.TestFromrecords": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_0d_recarray_repr": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.core.tests.test_records.textwrap",
    "numpy.rec.array",
    "numpy.set_printoptions",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.core.tests.test_records.sys",
    "numpy.rec.fromrecords",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords_0len": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "float",
    "numpy.rec.fromrecords",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords_2d": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "numpy.rec.fromrecords",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords_list_of_lists": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.rec.array",
    "numpy.rec.fromrecords",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords_with_explicit_dtype": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.rec.fromrecords",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_method_array": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.rec.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_method_array2": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.rec.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_conflict_fields": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "isinstance",
    "numpy.core.tests.test_records.collections",
    "numpy.rec.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_names": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "len",
    "numpy.rec.array",
    "numpy.rec.fromrecords",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_obj": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.rec.fromarrays",
    "numpy.testing.assert_",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_repr": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "eval",
    "int",
    "numpy",
    "numpy.array",
    "numpy.dtype",
    "numpy.ndarray",
    "numpy.rec.array",
    "numpy.recarray",
    "numpy.record",
    "numpy.testing.assert_equal",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_fromarrays": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.rec.fromarrays",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_fromfile": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.rec.array",
    "numpy.rec.fromfile",
    "numpy.testing.assert_equal",
    "open",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_repr": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_records.textwrap",
    "numpy.ones",
    "numpy.rec.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_returntypes": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.dtype",
    "numpy.ndarray",
    "numpy.rec.array",
    "numpy.recarray",
    "numpy.record",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_slices": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.rec.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_stringtypes": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.recarray",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_views": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.rec.array",
    "numpy.recarray",
    "numpy.record",
    "numpy.testing.assert_equal",
    "numpy.void",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_views.C": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.recarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_zero_width_strings": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.rec.fromarrays",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_records.TestRecord.setup": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.rec.fromrecords"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_assignment1": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_assignment2": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_invalid_assignment": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_invalid_assignment.assign_invalid_column": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_missing_field": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_nonwriteable_setfield": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "numpy.rec.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_objview_record": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "FutureWarning",
    "float",
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.recarray",
    "numpy.testing.assert_warns",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_out_of_order_fields": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "numpy.rec.fromrecords",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_pickle_1": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_records.pickle",
    "numpy.int32",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_pickle_2": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.core.tests.test_records.pickle",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_pickle_3": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.core.tests.test_records.pickle",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_record_scalar_setitem": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "float",
    "numpy.ones",
    "numpy.recarray",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.test_find_duplicate": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.rec.find_duplicate",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromInt": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromInt.test_intp": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.intp",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromInt.test_uint64_from_negative": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromString": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromString.test_floating": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.longdouble",
    "numpy.single",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromString.test_floating_overflow": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.double",
    "numpy.half",
    "numpy.inf",
    "numpy.longdouble",
    "numpy.single",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.TestFromString.test_intp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "numpy.core.tests.test_scalar_ctors.platform",
    "numpy.core.tests.test_scalar_ctors.sys",
    "numpy.int_",
    "numpy.intp",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalar_ctors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalar_ctors.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarinherit": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_scalarinherit.A": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.B": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.core.tests.test_scalarinherit.A",
    "numpy.float64"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.B0": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.core.tests.test_scalarinherit.A",
    "numpy.float64"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.C": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.core.tests.test_scalarinherit.B"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.C0": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.core.tests.test_scalarinherit.B0"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.D": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.core.tests.test_scalarinherit.B",
    "numpy.core.tests.test_scalarinherit.C"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.TestCharacter": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.TestCharacter.test_char_radd": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Mystr",
    "NotImplemented",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.unicode_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarinherit.TestCharacter.test_char_radd.Mystr": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.generic",
    "str"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.TestCharacter.test_char_repeat": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.string_",
    "numpy.testing.assert_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarinherit.TestInherit": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarinherit.TestInherit.test_init": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.core.tests.test_scalarinherit.B",
    "numpy.core.tests.test_scalarinherit.C",
    "numpy.core.tests.test_scalarinherit.D",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarinherit.TestInherit.test_init2": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.core.tests.test_scalarinherit.B0",
    "numpy.core.tests.test_scalarinherit.C0",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarinherit.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarinherit.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarinherit.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarinherit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarinherit.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarinherit.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.bool_",
    "numpy.byte",
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.complexfloating.__subclasses__",
    "numpy.csingle",
    "numpy.double",
    "numpy.floating.__subclasses__",
    "numpy.int_",
    "numpy.intc",
    "numpy.longdouble",
    "numpy.longlong",
    "numpy.short",
    "numpy.single",
    "numpy.testing.IS_PYPY",
    "numpy.testing.run_module_suite",
    "numpy.ubyte",
    "numpy.uint",
    "numpy.uintc",
    "numpy.ulonglong",
    "numpy.ushort"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_scalarmath.IS_PYPY": {
  "data": {
   "shadows": "numpy.testing.IS_PYPY"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.TestAbs": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestAbs._test_abs_func": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "absfunc",
    "numpy.core.tests.test_scalarmath.complex_floating_types",
    "numpy.core.tests.test_scalarmath.floating_types",
    "numpy.finfo",
    "numpy.testing.assert_equal",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestAbs.test_builtin_abs": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestAbs.test_numpy_abs": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestBaseMath": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestBaseMath.test_blocked": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.arange",
    "numpy.core.tests.test_scalarmath.sys",
    "numpy.divide",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.multiply",
    "numpy.ones_like",
    "numpy.reciprocal",
    "numpy.square",
    "numpy.testing._gen_alignment_data",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestBaseMath.test_lower_align": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.float64",
    "numpy.int8",
    "numpy.ones_like",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestComplexDivision": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestComplexDivision.test_branches": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "complex",
    "list",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.errstate",
    "numpy.testing.assert_equal",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestComplexDivision.test_signed_zeros": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "complex",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.errstate",
    "numpy.testing.assert_equal",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestComplexDivision.test_zero_division": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "complex",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.errstate",
    "numpy.inf",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_iinfo_long_values": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.iinfo",
    "numpy.testing.assert_",
    "numpy.typeDict",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_huge_longdouble": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_scalarmath.platform",
    "numpy.double",
    "numpy.finfo",
    "numpy.inf",
    "numpy.longdouble",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.knownfailureif",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_infinite_longdouble": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "OverflowError",
    "int",
    "len",
    "numpy.ComplexWarning",
    "numpy.clongdouble",
    "numpy.inf",
    "numpy.longdouble",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_infinite_longdouble___int__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "OverflowError",
    "len",
    "numpy.ComplexWarning",
    "numpy.clongdouble",
    "numpy.inf",
    "numpy.longdouble",
    "numpy.testing.IS_PYPY",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.knownfailureif",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_long": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.float64",
    "numpy.int64",
    "numpy.testing.assert_equal",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_longdouble": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "int",
    "numpy.longdouble",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_raise_behaviour": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_raise_behaviour.overflow_error_func": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.typeDict"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_numpy_scalar_relational_operators": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_scalar_comparison_to_none": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.core.tests.test_scalarmath.warnings",
    "numpy.datetime64",
    "numpy.equal",
    "numpy.float32",
    "numpy.str_",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestModulus": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestModulus.test_float_modulus_corner_cases": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.array",
    "numpy.core.tests.test_scalarmath.operator",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nextafter",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestModulus.test_float_modulus_exact": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "divmod",
    "float",
    "int",
    "list",
    "numpy.array",
    "numpy.core.tests.test_scalarmath.floordiv_and_mod",
    "numpy.core.tests.test_scalarmath.itertools",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.where",
    "op",
    "op.__name__",
    "range",
    "t",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestModulus.test_float_modulus_roundoff": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "divmod",
    "numpy.array",
    "numpy.core.tests.test_scalarmath.floordiv_and_mod",
    "numpy.core.tests.test_scalarmath.itertools",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "op",
    "op.__name__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestModulus.test_modulus_basic": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "divmod",
    "numpy.array",
    "numpy.core.tests.test_scalarmath._signs",
    "numpy.core.tests.test_scalarmath.floordiv_and_mod",
    "numpy.core.tests.test_scalarmath.itertools",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "op"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply.test_no_seq_repeat_basic_array_like": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "ArrayLike",
    "memoryview",
    "numpy.float32",
    "numpy.full",
    "numpy.int_",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply.test_no_seq_repeat_basic_array_like.ArrayLike": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply.test_no_seq_repeat_basic_array_like.ArrayLike.__array__": {
  "data": {
   "lineno": 587
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply.test_no_seq_repeat_basic_array_like.ArrayLike.__init__": {
  "data": {
   "lineno": 585
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestMultiply.test_seq_repeat": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "list",
    "numpy.core.tests.test_scalarmath.operator",
    "numpy.dtype",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.typecodes",
    "numpy.typecodes.replace",
    "seq_type",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestNegative": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestNegative.test_exceptions": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "TypeError",
    "numpy.bool_",
    "numpy.core.tests.test_scalarmath.operator",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestNegative.test_result": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.core.tests.test_scalarmath.operator",
    "numpy.core.tests.test_scalarmath.types",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_integers_to_negative_integer_power": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.core.tests.test_scalarmath.itertools",
    "numpy.core.tests.test_scalarmath.operator",
    "numpy.float64",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_large_types": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.longdouble",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_mixed_types": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "t1",
    "t2"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_modular_power": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.complex64",
    "numpy.core.tests.test_scalarmath.operator",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_raises",
    "pow",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_small_types": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.int16",
    "numpy.int8",
    "numpy.testing.assert_",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestRepr": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestRepr._test_type_repr": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "ValueError",
    "eval",
    "numpy.array",
    "numpy.dtype",
    "numpy.finfo",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "repr",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestRepr.test_float_repr": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestSizeOf": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestSizeOf.test_equal_nbytes": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "numpy.core.tests.test_scalarmath.sys",
    "numpy.core.tests.test_scalarmath.types",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestSizeOf.test_error": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestSubtract": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestSubtract.test_exceptions": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "TypeError",
    "numpy.bool_",
    "numpy.core.tests.test_scalarmath.operator",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestSubtract.test_result": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.core.tests.test_scalarmath.operator",
    "numpy.core.tests.test_scalarmath.types",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_leak": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.add",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_type_add": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "atype",
    "btype",
    "enumerate",
    "numpy.array",
    "numpy.core.tests.test_scalarmath.types",
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_type_create": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "atype",
    "enumerate",
    "numpy.array",
    "numpy.core.tests.test_scalarmath.types",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_types": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "atype",
    "numpy.core.tests.test_scalarmath.types",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath._gen_alignment_data": {
  "data": {
   "shadows": "numpy.testing._gen_alignment_data"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath._signs": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.complex_floating_types": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.core.tests.test_scalarmath.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.floating_types": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.core.tests.test_scalarmath.floordiv_and_mod": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.types": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.core.tests.test_scalarmath.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_scalarprint.TemporaryFile": {
  "data": {
   "shadows": "tempfile.TemporaryFile"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.float32_roundtrip": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.float64_vs_python": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_dragon4": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "fpos32",
    "fpos64",
    "fsci32",
    "fsci64",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.format_float_positional",
    "numpy.format_float_scientific",
    "numpy.testing.assert_equal",
    "preckwd"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_dragon4_interface": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "fpos",
    "fsci",
    "hasattr",
    "numpy",
    "numpy.float128",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.format_float_positional",
    "numpy.format_float_scientific",
    "numpy.testing.assert_equal",
    "tp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_py2_float_print": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "DeprecationWarning",
    "next",
    "numpy",
    "numpy.core.tests.test_scalarprint.code",
    "numpy.core.tests.test_scalarprint.sys",
    "numpy.double",
    "numpy.sqrt",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "print",
    "repr",
    "str",
    "tempfile.TemporaryFile",
    "userinput"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_py2_float_print.userinput": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "EOFError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_scalar_cutoffs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_scalar_cutoffs.check": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.testing.assert_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.TestRealScalars.test_str": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.longdouble",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "repr",
    "str",
    "styp",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarprint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.code": {
  "data": {
   "shadows": "code"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarprint.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_0D_array": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_1D_array": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_2D_array": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_3D_array": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast1d.test_r1array": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.compat.long",
    "numpy.core.atleast_1d",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_0D_array": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_2d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_1D_array": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_2d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_2D_array": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_2d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_3D_array": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_2d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast2d.test_r2array": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.core.atleast_2d",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_0D_array": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_3d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_1D_array": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_3d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_2D_array": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_3d",
    "numpy.core.newaxis",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestAtleast3d.test_3D_array": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.atleast_3d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_3d": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "int",
    "numpy.block",
    "numpy.core.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_complicated": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.block",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_mixed_1d_and_2d": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.block",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_simple_column_wise": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.block",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_simple_row_wise": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.block",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_with_1d_arrays_column_wise": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.block",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_with_1d_arrays_multiple_rows": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.block",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_with_1d_arrays_row_wise": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.block",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_block_with_mismatched_shape": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.block",
    "numpy.eye",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_different_ndims": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.block",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_different_ndims_depths": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.block",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_empty_lists": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "ValueError",
    "numpy.block",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_invalid_nesting": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError",
    "numpy.block",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_nested": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.block",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_no_lists": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.block",
    "numpy.eye",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestBlock.test_tuple": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "TypeError",
    "numpy.block",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_bad_out_shape": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.array",
    "numpy.core.concatenate",
    "numpy.empty",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_concatenate": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.core.arange",
    "numpy.core.array",
    "numpy.core.concatenate",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_concatenate_axis_None": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.core.array",
    "numpy.float64",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_exceptions": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.AxisError",
    "numpy.array",
    "numpy.concatenate",
    "numpy.core.concatenate",
    "numpy.moveaxis",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_large_concatenate_axis_None": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestConcatenate.test_out_dtype": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "TypeError",
    "numpy.complex64",
    "numpy.core.array",
    "numpy.core.concatenate",
    "numpy.empty",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_0D_array": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.hstack",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_1D_array": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.hstack",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_2D_array": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.hstack",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_empty_input": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.hstack",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestHstack.test_non_iterable": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.hstack",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_0D_array": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.vstack",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_1D_array": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.vstack",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_2D_array": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.vstack",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_2D_array2": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.core.array",
    "numpy.core.vstack",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_empty_input": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.vstack",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.TestVstack.test_non_iterable": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "TypeError",
    "numpy.core.vstack",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.arange": {
  "data": {
   "shadows": "numpy.core.arange"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.array": {
  "data": {
   "shadows": "numpy.core.array"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.assert_raises_regex": {
  "data": {
   "shadows": "numpy.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.atleast_1d": {
  "data": {
   "shadows": "numpy.core.atleast_1d"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.atleast_2d": {
  "data": {
   "shadows": "numpy.core.atleast_2d"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.atleast_3d": {
  "data": {
   "shadows": "numpy.core.atleast_3d"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.block": {
  "data": {
   "shadows": "numpy.core.block"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.concatenate": {
  "data": {
   "shadows": "numpy.core.concatenate"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.hstack": {
  "data": {
   "shadows": "numpy.core.hstack"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.newaxis": {
  "data": {
   "shadows": "numpy.core.newaxis"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.stack": {
  "data": {
   "shadows": "numpy.core.stack"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.test_stack": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "list",
    "numpy.AxisError",
    "numpy.arange",
    "numpy.array",
    "numpy.core.array",
    "numpy.core.stack",
    "numpy.int32",
    "numpy.matrix",
    "numpy.random.randn",
    "numpy.stack",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_raises_regex",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_shape_base.vstack": {
  "data": {
   "shadows": "numpy.core.vstack"
  },
  "type": "import"
 },
 "numpy.core.tests.test_shape_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_ufunc.TestUfunc": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.check_identityless_reduction": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "numpy.minimum.reduce",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "broadcastable",
    "numpy.array",
    "numpy.core.umath_tests.matrix_multiply",
    "numpy.newaxis",
    "numpy.newaxis.swapaxes",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "permute_n",
    "slice",
    "slice_n",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.broadcastable": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.permute_n": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "permute_n",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.slice_n": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "slice",
    "slice_n"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_NotImplemented_not_returned": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "numpy.add",
    "numpy.array",
    "numpy.bitwise_and",
    "numpy.bitwise_or",
    "numpy.bitwise_xor",
    "numpy.divide",
    "numpy.floor_divide",
    "numpy.fmax",
    "numpy.fmin",
    "numpy.fmod",
    "numpy.hypot",
    "numpy.left_shift",
    "numpy.logaddexp",
    "numpy.logaddexp2",
    "numpy.logical_and",
    "numpy.logical_or",
    "numpy.logical_xor",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.mod",
    "numpy.multiply",
    "numpy.power",
    "numpy.right_shift",
    "numpy.subtract",
    "numpy.testing.assert_raises",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_all_ufunc": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_axis_out_of_bounds": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "numpy.AxisError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_broadcast": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_casting_out_param": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.ones",
    "numpy.subtract",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "MyThing",
    "MyThing.getitem_count",
    "MyThing.rmul_count",
    "numpy.float64",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__getitem__": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "IndexError",
    "MyThing",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__init__": {
  "data": {
   "lineno": 1103
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__len__": {
  "data": {
   "lineno": 1106
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_array_like.MyThing.__rmul__": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "MyThing.rmul_count"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_ufunc": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.test_rational.rational",
    "numpy.core.test_rational.test_add_rationals",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_custom_ufunc_forced_sig": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.core.test_rational.rational",
    "numpy.multiply",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_endian": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.arange",
    "numpy.core.umath_tests.inner1d",
    "numpy.dtype",
    "numpy.negative",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_euclidean_pdist": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "numpy.arange",
    "numpy.core.umath_tests.euclidean_pdist",
    "numpy.empty",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "numpy.tri"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_forced_sig": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "fone",
    "foo",
    "ftwo",
    "len",
    "numpy.abs",
    "numpy.add",
    "numpy.all",
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.conjugate",
    "numpy.csingle",
    "numpy.double",
    "numpy.exp",
    "numpy.logical_xor",
    "numpy.longdouble",
    "numpy.ones",
    "numpy.single",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops.foo": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops.foo.conjugate": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops.foo.logical_xor": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_get_signature": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.core.umath_tests.inner1d.signature",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_corder": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_forder": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_noncontig": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_noncontig_unaligned": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_nonreorderable": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.divide.reduce",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_identityless_reduction_otherorder": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_incontiguous_array": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_inner1d": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_innerwt": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.umath_tests.innerwt",
    "numpy.sum",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_innerwt_empty": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.umath_tests.innerwt",
    "numpy.sum",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_inplace_fancy_indexing": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "numpy.add.at",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.equal.at",
    "numpy.invert.at",
    "numpy.modf.at",
    "numpy.negative.at",
    "numpy.power.at",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "object",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_matrix_multiply": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.long"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_matrix_multiply_umath_empty": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "numpy.core.umath_tests.matrix_multiply",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_no_doc_string": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "numpy.core.umath_tests.inner1d_no_doc.__doc__",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_array_accumulate_inplace": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "numpy.add.accumulate",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_array_reduceat_inplace": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "numpy.add.reduceat",
    "numpy.arange",
    "numpy.empty",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_array_reduction": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "numpy.prod",
    "numpy.sum",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_logical": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_and",
    "numpy.logical_and.reduce",
    "numpy.logical_not",
    "numpy.logical_or",
    "numpy.logical_or.reduce",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_object_scalar_multiply": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.multiply",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_operand_flags": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.core.operand_flag_tests.inplace_add",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_output_argument": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_pickle": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.core.test_rational.test_add",
    "numpy.core.tests.test_ufunc.pickle",
    "numpy.sin",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_pickle_withstring": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.core.tests.test_ufunc.pickle",
    "numpy.cos",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_arguments": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "int",
    "numpy.add.reduce",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_noncontig_output": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "numpy.add.reduce",
    "numpy.arange",
    "numpy.int16",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "err",
    "numpy.add",
    "numpy.add.reduce",
    "numpy.maximum",
    "numpy.maximum.identity",
    "numpy.maximum.reduce",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis.err": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis.ok": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduce_zero_axis.t": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "expect",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduceat_shifting_sum": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "list",
    "numpy.add.reduceat",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_safe_casting": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.add",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_no_warnings",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_safe_casting.add_inplace": {
  "data": {
   "lineno": 1034
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_scalar_reduction": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.bool_",
    "numpy.float32",
    "numpy.max",
    "numpy.min",
    "numpy.power.reduce",
    "numpy.prod",
    "numpy.sum",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_scalar_reduction.MyArray": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.umath_tests.test_signature",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_struct_ufunc": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.struct_ufunc_test.add_triplet",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_structured_equal": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "bool",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_structured_equal.MyA": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_structured_equal.MyA.__array_ufunc__": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "getattr",
    "input",
    "input.view",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_sum": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "dt",
    "int",
    "len",
    "numpy.arange",
    "numpy.core.tests.test_ufunc.warnings",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.longdouble",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_sum_complex": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "dt",
    "numpy.arange",
    "numpy.clongdouble",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.empty",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_sum_stability": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_true_divide": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "TypeError",
    "complex",
    "float",
    "max",
    "numpy.array",
    "numpy.bool_",
    "numpy.core.tests.test_ufunc.itertools",
    "numpy.dtype",
    "numpy.errstate",
    "numpy.finfo",
    "numpy.isfinite",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_raises",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_type_cast": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_ufunc_custom_out": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.core.test_rational.rational",
    "numpy.core.test_rational.test_add",
    "numpy.empty",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_where_param": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.arange",
    "numpy.ones",
    "numpy.power",
    "numpy.subtract",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_where_param_alloc": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.float64",
    "numpy.int64",
    "numpy.sqrt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_where_param_buffer_output": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.float64",
    "numpy.int64",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_zerosize_reduction": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "numpy.prod",
    "numpy.sum",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncKwargs": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfuncKwargs.test_kwarg_exact": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.add",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncKwargs.test_sig_dtype": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "numpy.add",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfuncKwargs.test_sig_signature": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "numpy.add",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.assert_no_warnings": {
  "data": {
   "shadows": "numpy.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.opflag_tests": {
  "data": {
   "shadows": "numpy.core.operand_flag_tests"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.rational": {
  "data": {
   "shadows": "numpy.core.test_rational.rational"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.struct_ufunc": {
  "data": {
   "shadows": "numpy.core.struct_ufunc_test"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.test_add": {
  "data": {
   "shadows": "numpy.core.test_rational.test_add"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.test_add_rationals": {
  "data": {
   "shadows": "numpy.core.test_rational.test_add_rationals"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.umt": {
  "data": {
   "shadows": "numpy.core.umath_tests"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_umath.TestAbsoluteNegative": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAbsoluteNegative.test_abs_neg_blocked": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.absolute",
    "numpy.arange",
    "numpy.core.umath.absolute",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.nan",
    "numpy.negative",
    "numpy.testing._gen_alignment_data",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAbsoluteNegative.test_lower_align": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.float64",
    "numpy.int8",
    "numpy.negative",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAdd": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAdd.test_reduce_alignment": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int32",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_any_ninf": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "numpy.NINF",
    "numpy.core.umath.arctan2",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_any_pinf": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.assert_arctan2_isnzero",
    "numpy.core.tests.test_umath.assert_arctan2_ispzero",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_any": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.inf",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_ninf": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.inf",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_pinf": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.inf",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_nan_any": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.assert_arctan2_isnan",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_negative_zero": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.umath.arctan2",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_one_one": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_positive_zero": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.umath.arctan2",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_negative": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.umath.arctan2",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_nzero": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.umath.arctan2",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_positive": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.tests.test_umath.assert_arctan2_isnzero",
    "numpy.core.tests.test_umath.assert_arctan2_ispzero"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_pzero": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.tests.test_umath.assert_arctan2_isnzero",
    "numpy.core.tests.test_umath.assert_arctan2_ispzero"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAttributes": {
  "data": {
   "lineno": 2412,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAttributes.test_attributes": {
  "data": {
   "lineno": 2413,
   "symbols_in_volume": [
    "numpy.core.umath.add",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAttributes.test_doc": {
  "data": {
   "lineno": 2422,
   "symbols_in_volume": [
    "numpy.core.umath.add.__doc__.startswith",
    "numpy.core.umath.frexp.__doc__.startswith",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBitwiseUFuncs": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "numpy.dtype",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestBitwiseUFuncs.test_identity": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "numpy.bitwise_and.identity",
    "numpy.bitwise_or.identity",
    "numpy.bitwise_xor.identity",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBitwiseUFuncs.test_reduction": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.bitwise_and",
    "numpy.bitwise_or",
    "numpy.bitwise_xor",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBitwiseUFuncs.test_types": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bitwise_and",
    "numpy.bitwise_not",
    "numpy.bitwise_or",
    "numpy.bitwise_xor",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBitwiseUFuncs.test_values": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bitwise_and",
    "numpy.bitwise_not",
    "numpy.bitwise_or",
    "numpy.bitwise_xor",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBool": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestBool.test_exceptions": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "TypeError",
    "numpy.bool_",
    "numpy.negative",
    "numpy.ones",
    "numpy.positive",
    "numpy.subtract",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBool.test_reduce": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "all",
    "any",
    "bool",
    "numpy.array",
    "numpy.logical_and.reduce",
    "numpy.logical_or.reduce",
    "numpy.logical_xor.reduce",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBool.test_truth_table_bitwise": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "numpy.bitwise_and",
    "numpy.bitwise_or",
    "numpy.bitwise_xor",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestBool.test_truth_table_logical": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "bool",
    "func",
    "map",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.logical_and",
    "numpy.logical_or",
    "numpy.logical_xor",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.not_equal",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestCbrt": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestCbrt.test_cbrt": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cbrt",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestCbrt.test_cbrt_scalar": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.cbrt",
    "numpy.float32",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestChoose": {
  "data": {
   "lineno": 2211,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestChoose.test_mixed": {
  "data": {
   "lineno": 2212,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.choose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComparisons": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_equal": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "FunkyType",
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.equal",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_equal.FunkyType": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_equal.FunkyType.__eq__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_not_equal": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "FunkyType",
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "numpy.not_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_not_equal.FunkyType": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestComparisons.test_ignore_object_identity_in_not_equal.FunkyType.__ne__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions": {
  "data": {
   "lineno": 2223,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.cos",
    "numpy.exp",
    "numpy.exp2",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.tan",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.check_loss_of_precision": {
  "data": {
   "lineno": 2318,
   "symbols_in_volume": [
    "check",
    "dtype",
    "func",
    "numpy.absolute",
    "numpy.all",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.array",
    "numpy.finfo",
    "numpy.logspace",
    "numpy.longcomplex",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.check_loss_of_precision.check": {
  "data": {
   "lineno": 2386,
   "symbols_in_volume": [
    "abs",
    "dtype",
    "func",
    "numpy.all",
    "numpy.asarray",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_against_cmath": {
  "data": {
   "lineno": 2299,
   "symbols_in_volume": [
    "AttributeError",
    "abs",
    "cfunc",
    "complex",
    "func",
    "func.__name__.split",
    "getattr",
    "numpy.complex_",
    "numpy.core.tests.test_umath.cmath",
    "numpy.finfo",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_branch_cuts": {
  "data": {
   "lineno": 2249,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_branch_cuts_complex64": {
  "data": {
   "lineno": 2274,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.complex64",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_it": {
  "data": {
   "lineno": 2229,
   "symbols_in_volume": [
    "complex",
    "f",
    "numpy.arccosh",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_loss_of_precision": {
  "data": {
   "lineno": 2403,
   "symbols_in_volume": [
    "dtype",
    "numpy.complex64",
    "numpy.complex_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_loss_of_precision_longcomplex": {
  "data": {
   "lineno": 2407,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.is_longdouble_finfo_bogus",
    "numpy.longcomplex",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_precisions_consistent": {
  "data": {
   "lineno": 2240,
   "symbols_in_volume": [
    "f",
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.csingle",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestConstants": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestConstants.test_e": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.core.umath.e",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestConstants.test_euler_gamma": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.core.umath.euler_gamma",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestConstants.test_pi": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.core.umath.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDegrees": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestDegrees.test_degrees": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "numpy.core.umath.degrees",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestDivision.test_division_complex": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.complex128",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_division_int": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_floor_division_complex": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.complex128",
    "numpy.floor_divide",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_zero_division_complex": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.complex128",
    "numpy.errstate",
    "numpy.inf",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExp": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExp.test_exp_values": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExp2": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExp2.test_exp2_values": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp2",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExpm1": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExpm1.test_expm1": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "numpy.core.umath.exp",
    "numpy.core.umath.expm1",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExpm1.test_special": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "numpy.core.umath.expm1",
    "numpy.inf",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFloat_power": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFloat_power.test_type_conversion": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float_power",
    "numpy.ones",
    "numpy.testing.assert_",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFloatingPoint": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFloatingPoint.test_floating_point": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "numpy.core.umath.FLOATING_POINT_SUPPORT",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._FilterInvalids"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFmax.test_complex_nans": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.fmax",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_float_nans": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.fmax",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_reduce": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "func",
    "numpy.arange",
    "numpy.fmax.reduce",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_reduce_complex": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "numpy.fmax.reduce",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._FilterInvalids"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFmin.test_complex_nans": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.fmin",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_float_nans": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.fmin",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_reduce": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "func",
    "numpy.arange",
    "numpy.fmin.reduce",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_reduce_complex": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "numpy.fmin.reduce",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHeavside": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestHeavside.test_heaviside": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.umath.heaviside",
    "numpy.float32",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypot": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestHypot.test_reduce": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "numpy.core.umath.hypot.reduce",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypot.test_simple": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "numpy.core.umath.hypot",
    "numpy.core.umath.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues.test_nan_outputs": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.assert_hypot_isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues.test_nan_outputs2": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.assert_hypot_isinf",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues.test_no_fpe": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "numpy.core.umath.hypot",
    "numpy.inf",
    "numpy.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestInt": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestInt.test_logical_not": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "bool",
    "numpy.int16",
    "numpy.logical_not",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLdexp": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLdexp._check_ldexp": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.umath.ldexp",
    "numpy.float32",
    "numpy.float64",
    "numpy.longdouble",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLdexp.test_ldexp": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "numpy.core.umath.ldexp",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLdexp.test_ldexp_overflow": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "numpy.core.umath.ldexp",
    "numpy.dtype",
    "numpy.errstate",
    "numpy.iinfo",
    "numpy.inf",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog.test_log_values": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog1p": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog1p.test_log1p": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "numpy.core.umath.log",
    "numpy.core.umath.log1p",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog1p.test_special": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "numpy.core.umath.log1p",
    "numpy.errstate",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog2": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog2.test_log2_ints": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "float",
    "numpy.log2",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog2.test_log2_special": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.core.tests.test_umath.warnings",
    "numpy.inf",
    "numpy.isnan",
    "numpy.log2",
    "numpy.nan",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog2.test_log2_values": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log2",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._FilterInvalids"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_inf": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.inf",
    "numpy.logaddexp",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_logaddexp_range": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logaddexp",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_logaddexp_values": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.logaddexp",
    "numpy.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_nan": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isnan",
    "numpy.logaddexp",
    "numpy.nan",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._FilterInvalids"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_inf": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.inf",
    "numpy.logaddexp2",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_logaddexp2_range": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logaddexp2",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_logaddexp2_values": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log2",
    "numpy.logaddexp2",
    "numpy.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_nan": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isnan",
    "numpy.logaddexp2",
    "numpy.nan",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._FilterInvalids"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_complex_nans": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.maximum",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_float_nans": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.maximum",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_object_array": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.maximum",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_object_nans": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.maximum",
    "numpy.testing.assert_",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_reduce": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "func",
    "numpy.arange",
    "numpy.maximum.reduce",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_reduce_complex": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "numpy.maximum.reduce",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinMax": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMinMax.test_lower_align": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int8",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinMax.test_minmax_blocked": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing._gen_alignment_data",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinMax.test_reduce_warns": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "numpy.diagflat",
    "numpy.min",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._FilterInvalids"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_complex_nans": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.minimum",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_float_nans": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.minimum",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_object_array": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.minimum",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_object_nans": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.minimum",
    "numpy.testing.assert_",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_reduce": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "func",
    "numpy.arange",
    "numpy.minimum.reduce",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_reduce_complex": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "numpy.minimum.reduce",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestOut": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestOut.test_out_subok": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "ValueError",
    "numpy.add",
    "numpy.array",
    "numpy.core.tests.test_umath.warnings",
    "numpy.empty",
    "numpy.frexp",
    "numpy.int32",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestOut.test_out_wrap_subok": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ArrayWrap",
    "DeprecationWarning",
    "isinstance",
    "numpy.add",
    "numpy.core.tests.test_umath.warnings",
    "numpy.empty",
    "numpy.frexp",
    "numpy.int32",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestOut.test_out_wrap_subok.ArrayWrap": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestOut.test_out_wrap_subok.ArrayWrap.__array_wrap__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestOut.test_out_wrap_subok.ArrayWrap.__new__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPositive": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestPositive.test_invalid": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.datetime64",
    "numpy.positive",
    "numpy.testing.assert_raises",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPositive.test_valid": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": [
    "complex",
    "float",
    "int",
    "numpy.arange",
    "numpy.positive",
    "numpy.testing.assert_equal",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestPower.test_fast_power": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int16",
    "numpy.may_share_memory",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_integer_power": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.power",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_integer_power_of_1": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones_like",
    "numpy.power",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_integer_power_of_zero": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.power",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_integer_power_with_integer_zero_exponent": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones_like",
    "numpy.power",
    "numpy.testing.assert_equal",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_integer_to_negative_power": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.power",
    "numpy.testing.assert_raises",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_complex": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "assert_complex_equal",
    "complex",
    "numpy.array",
    "numpy.complex_",
    "numpy.core.umath.sqrt",
    "numpy.errstate",
    "numpy.inf",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_complex.assert_complex_equal": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_float": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.umath.sqrt",
    "numpy.float32",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.testing._gen_alignment_data",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_zero": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "assert_complex_equal",
    "complex",
    "numpy.array",
    "numpy.errstate",
    "numpy.nan",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_zero.assert_complex_equal": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRadians": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestRadians.test_radians": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "numpy.core.umath.radians",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRemainder": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestRemainder.test_float_remainder_corner_cases": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.array",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nextafter",
    "numpy.remainder",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRemainder.test_float_remainder_exact": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "divmod",
    "float",
    "int",
    "list",
    "numpy.array",
    "numpy.core.tests.test_umath.floor_divide_and_remainder",
    "numpy.core.tests.test_umath.itertools",
    "numpy.divmod",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.where",
    "op",
    "op.__name__",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRemainder.test_float_remainder_roundoff": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_umath.floor_divide_and_remainder",
    "numpy.core.tests.test_umath.itertools",
    "numpy.divmod",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "op",
    "op.__name__"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRemainder.test_remainder_basic": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_umath._signs",
    "numpy.core.tests.test_umath.floor_divide_and_remainder",
    "numpy.core.tests.test_umath.itertools",
    "numpy.divmod",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "op"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSign": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSign.test_sign": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.umath.sign",
    "numpy.errstate",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSign.test_sign_dtype_nan_object": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSign.test_sign_dtype_nan_object.test_nan": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.sign",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSign.test_sign_dtype_object": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_array_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "A",
    "B",
    "C",
    "numpy.core.umath.maximum",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.A": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.A.__array__": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "func",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.B": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.B.__array__": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.C": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.C.__array__": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "numpy.core.umath.minimum",
    "numpy.ndarray",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "type",
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap.__array__": {
  "data": {
   "lineno": 1545,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 1548
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "A",
    "RuntimeError",
    "numpy.core.umath.maximum",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A.__array__": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A.__array_prepare__": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "A",
    "RuntimeError",
    "numpy.core.umath.maximum",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A.__array__": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A.__array_wrap__": {
  "data": {
   "lineno": 1521,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_gufunc_override": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "A",
    "TypeError",
    "ValueError",
    "inner1d",
    "numpy.core.umath_tests.inner1d",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_gufunc_override.A": {
  "data": {
   "lineno": 2010,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_gufunc_override.A.__array_ufunc__": {
  "data": {
   "lineno": 2011
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_none_wrap": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "A",
    "numpy.core.umath.maximum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_none_wrap.A": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_none_wrap.A.__array__": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_none_wrap.A.__array_wrap__": {
  "data": {
   "lineno": 1534
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "numpy.core.umath.minimum",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap.__array__": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.array",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare.with_prepare": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare.with_prepare.__array_prepare__": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare_out": {
  "data": {
   "lineno": 1570,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.array",
    "numpy.shares_memory",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare_out.with_prepare": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare_out.with_prepare.__array_prepare__": {
  "data": {
   "lineno": 1575,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "A",
    "B",
    "C",
    "f",
    "numpy.core.umath.exp",
    "numpy.core.umath.minimum",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A.__array__": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A.__array_wrap__": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.B": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "A"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.C": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "A"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "A",
    "isinstance",
    "numpy.array",
    "numpy.float64",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar.A": {
  "data": {
   "lineno": 1446,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar.A.__new__": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "A",
    "numpy.matrix",
    "numpy.multiply",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override.A": {
  "data": {
   "lineno": 1627,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override.A.__array_ufunc__": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_disabled": {
  "data": {
   "lineno": 1977,
   "symbols_in_volume": [
    "GreedyArray",
    "OptOut",
    "TypeError",
    "numpy.add",
    "numpy.negative",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_disabled.GreedyArray": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_disabled.GreedyArray.__array_ufunc__": {
  "data": {
   "lineno": 1997
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_disabled.OptOut": {
  "data": {
   "lineno": 1979,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_exception": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": [
    "A",
    "ValueError",
    "numpy.divide",
    "numpy.negative",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_exception.A": {
  "data": {
   "lineno": 1951,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_exception.A.__array_ufunc__": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_methods": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "A",
    "TypeError",
    "ValueError",
    "numpy.multiply",
    "numpy.multiply.__call__",
    "numpy.multiply.accumulate",
    "numpy.multiply.at",
    "numpy.multiply.outer",
    "numpy.multiply.reduce",
    "numpy.multiply.reduceat",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_methods.A": {
  "data": {
   "lineno": 1741,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_methods.A.__array_ufunc__": {
  "data": {
   "lineno": 1742
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "A",
    "ASub",
    "B",
    "C",
    "CSub",
    "TypeError",
    "four_mul_ufunc",
    "numpy.frompyfunc",
    "numpy.multiply",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "three_mul_ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.A": {
  "data": {
   "lineno": 1661,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.A.__array_ufunc__": {
  "data": {
   "lineno": 1662
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.ASub": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "A"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.ASub.__array_ufunc__": {
  "data": {
   "lineno": 1666
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.B": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.B.__array_ufunc__": {
  "data": {
   "lineno": 1670
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.C": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.C.__array_ufunc__": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.CSub": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "C"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.CSub.__array_ufunc__": {
  "data": {
   "lineno": 1678,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.quatro_mul": {
  "data": {
   "lineno": 1654
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_mro.tres_mul": {
  "data": {
   "lineno": 1651
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_not_implemented": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": [
    "A",
    "TypeError",
    "numpy.add",
    "numpy.core.tests.test_umath.fnmatch",
    "numpy.negative",
    "numpy.testing.assert_raises_regex",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_not_implemented.A": {
  "data": {
   "lineno": 1962,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_not_implemented.A.__array_ufunc__": {
  "data": {
   "lineno": 1963,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_out": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "A",
    "B",
    "DeprecationWarning",
    "TypeError",
    "ValueError",
    "numpy.core.tests.test_umath.warnings",
    "numpy.frexp",
    "numpy.modf",
    "numpy.multiply",
    "numpy.sin",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_out.A": {
  "data": {
   "lineno": 1894,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_out.A.__array_ufunc__": {
  "data": {
   "lineno": 1895
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_out.B": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_out.B.__array_ufunc__": {
  "data": {
   "lineno": 1899
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_with_super": {
  "data": {
   "lineno": 2037,
   "symbols_in_volume": [
    "A",
    "B",
    "NotImplemented",
    "TypeError",
    "numpy.add",
    "numpy.add.accumulate",
    "numpy.add.at",
    "numpy.add.reduce",
    "numpy.add.reduceat",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.modf",
    "numpy.sin",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_with_super.A": {
  "data": {
   "lineno": 2040,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_with_super.A.__array_ufunc__": {
  "data": {
   "lineno": 2041,
   "symbols_in_volume": [
    "A",
    "NotImplemented",
    "enumerate",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.ndarray",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_with_super.B": {
  "data": {
   "lineno": 2092,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_ufunc_override_with_super.B.__array_ufunc__": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "A",
    "NotImplemented",
    "any",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "func",
    "len",
    "numpy.core.umath.minimum",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap.__array__": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.core.umath.multiply",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap.__new__": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSubclass": {
  "data": {
   "lineno": 2431,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op": {
  "data": {
   "lineno": 2433,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "simple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op.simple": {
  "data": {
   "lineno": 2435,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op.simple.__new__": {
  "data": {
   "lineno": 2436,
   "symbols_in_volume": [
    "numpy.ndarray.__new__",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._FilterInvalids": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath._FilterInvalids.setUp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.seterr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._FilterInvalids.tearDown": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.seterr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._check_branch_cut": {
  "data": {
   "lineno": 2444,
   "symbols_in_volume": [
    "complex",
    "dtype",
    "f",
    "numpy.NZERO",
    "numpy.absolute",
    "numpy.all",
    "numpy.any",
    "numpy.atleast_1d",
    "numpy.dtype",
    "numpy.finfo",
    "numpy.float32",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._gen_alignment_data": {
  "data": {
   "shadows": "numpy.testing._gen_alignment_data"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath._signs": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._test_nextafter": {
  "data": {
   "lineno": 2513,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nextafter",
    "numpy.testing.assert_",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._test_spacing": {
  "data": {
   "lineno": 2541,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.finfo",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.spacing",
    "numpy.testing.assert_",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isnan": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.isnan",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isninf": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.isinf",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isnzero": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.signbit",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_ispinf": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.isinf",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_ispzero": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.signbit",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.assert_hypot_isinf": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "numpy.core.umath.hypot",
    "numpy.errstate",
    "numpy.isinf",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_hypot_isnan": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "numpy.core.umath.hypot",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_no_warnings": {
  "data": {
   "shadows": "numpy.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.assert_raises_regex": {
  "data": {
   "shadows": "numpy.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.cmath": {
  "data": {
   "shadows": "cmath"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.floor_divide_and_remainder": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.floor_divide",
    "numpy.remainder"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.is_longdouble_finfo_bogus": {
  "data": {
   "lineno": 2218,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.isfinite",
    "numpy.log10",
    "numpy.longcomplex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.ncu": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.ncu_tests": {
  "data": {
   "shadows": "numpy.core.umath_tests"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.on_powerpc": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.platform"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.test_complex_nan_comparisons": {
  "data": {
   "lineno": 2650,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_copysign": {
  "data": {
   "lineno": 2505,
   "symbols_in_volume": [
    "numpy.copysign",
    "numpy.errstate",
    "numpy.nan",
    "numpy.signbit",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafter": {
  "data": {
   "lineno": 2524,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_nextafter",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafter_0": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.itertools",
    "numpy.finfo",
    "numpy.nextafter",
    "numpy.sctypes",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafter_vs_spacing": {
  "data": {
   "lineno": 2594,
   "symbols_in_volume": [
    "f",
    "numpy.float32",
    "numpy.float64",
    "numpy.nextafter",
    "numpy.spacing",
    "numpy.testing.assert_",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafterf": {
  "data": {
   "lineno": 2527,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_nextafter",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafterl": {
  "data": {
   "lineno": 2530,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_nextafter",
    "numpy.core.tests.test_umath.sys",
    "numpy.longdouble",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_pos_nan": {
  "data": {
   "lineno": 2602,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.signbit",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_reduceat": {
  "data": {
   "lineno": 2606,
   "symbols_in_volume": [
    "numpy.UFUNC_BUFSIZE_DEFAULT",
    "numpy.add.reduce",
    "numpy.add.reduceat",
    "numpy.array",
    "numpy.dtype",
    "numpy.empty",
    "numpy.float32",
    "numpy.int64",
    "numpy.setbufsize",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_reduceat_empty": {
  "data": {
   "lineno": 2634,
   "symbols_in_volume": [
    "numpy.add.reduceat",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_rint_big_int": {
  "data": {
   "lineno": 2671,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.rint",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_signaling_nan_exceptions": {
  "data": {
   "lineno": 2681,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.ndarray",
    "numpy.testing.assert_no_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacing": {
  "data": {
   "lineno": 2553,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_spacing",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacing_gfortran": {
  "data": {
   "lineno": 2564,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.spacing",
    "numpy.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacingf": {
  "data": {
   "lineno": 2556,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_spacing",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacingl": {
  "data": {
   "lineno": 2559,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_spacing",
    "numpy.core.tests.test_umath.sys",
    "numpy.longdouble",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "buffer",
    "len",
    "numpy.core.tests.test_unicode.sys",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_unicode.AssignValues": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.AssignValues.content_check": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_unicode.buffer_length",
    "numpy.core.tests.test_unicode.ucs4",
    "numpy.core.tests.test_unicode.ucs4_value",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.AssignValues.test_values0D": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.AssignValues.test_valuesMD": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.AssignValues.test_valuesSD": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ByteorderValues": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.ByteorderValues.test_values0D": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ByteorderValues.test_valuesMD": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ByteorderValues.test_valuesSD": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ByteorderValues.test_values_cast": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.repeat",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ByteorderValues.test_values_updowncast": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.repeat",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateValues": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.CreateValues.content_check": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_unicode.buffer_length",
    "numpy.core.tests.test_unicode.ucs4",
    "numpy.core.tests.test_unicode.ucs4_value",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateValues.test_values0D": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateValues.test_valuesMD": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateValues.test_valuesSD": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateZeros": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.CreateZeros.content_check": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_unicode.buffer_length",
    "numpy.core.tests.test_unicode.ucs4",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateZeros.test_zeros0D": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateZeros.test_zerosMD": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.CreateZeros.test_zerosSD": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_1009_UCS2": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.AssignValues",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_1009_UCS4": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.AssignValues",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_1_UCS2": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.AssignValues",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_1_UCS4": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.AssignValues",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_2_UCS2": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.AssignValues",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestAssignValues_2_UCS4": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.AssignValues",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_1009_UCS2": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.ByteorderValues",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_1009_UCS4": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.ByteorderValues",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_1_UCS2": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.ByteorderValues",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_1_UCS4": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.ByteorderValues",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_2_UCS2": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.ByteorderValues",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestByteorder_2_UCS4": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.ByteorderValues",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_1009_UCS2": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.CreateValues",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_1009_UCS4": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.CreateValues",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_1_UCS2": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.CreateValues",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_1_UCS4": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.CreateValues",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_2_UCS2": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.CreateValues",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateValues_2_UCS4": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.CreateValues",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateZeros_1": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.CreateZeros"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateZeros_1009": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.CreateZeros"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.TestCreateZeros_2": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.CreateZeros"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.buffer_length": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "buffer",
    "isinstance",
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.test_string_cast": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_unicode.sys",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.ucs2_value": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.core.tests.test_unicode.ucs4": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.core.tests.test_unicode.ucs4_value": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.core.tests.test_unicode.unicode": {
  "data": {
   "shadows": "numpy.compat.unicode"
  },
  "type": "import"
 },
 "numpy.core.whichmodule": {
  "data": {
   "shadows": "pickle.whichmodule"
  },
  "type": "import"
 },
 "numpy.ctypeslib": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.core._internal",
    "numpy.core._internal._getintp_ctype",
    "numpy.ctypeslib._dummy",
    "numpy.ctypeslib.ct",
    "numpy.ctypeslib.ctypes",
    "numpy.ctypeslib.load_library",
    "numpy.ctypeslib.prep_simple",
    "numpy.ctypeslib.simple_types",
    "numpy.deprecate",
    "numpy.intp",
    "object",
    "type"
   ]
  },
  "type": "module"
 },
 "numpy.ctypeslib._ARRAY_TYPE": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "numpy.ctypeslib.__all__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.ctypeslib._dtype": {
  "data": {
   "shadows": "numpy.dtype"
  },
  "type": "import"
 },
 "numpy.ctypeslib._dummy": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib._flagdict": {
  "data": {
   "shadows": "numpy.core.multiarray._flagdict"
  },
  "type": "import"
 },
 "numpy.ctypeslib._flagnames": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "numpy.ctypeslib._flags_fromnum": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.core.multiarray._flagdict",
    "numpy.ctypeslib._flagnames"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib._ndptr": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.ctypeslib._ndptr_base"
   ]
  },
  "type": "class"
 },
 "numpy.ctypeslib._ndptr.__array_interface__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib._ndptr._check_retval_": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib._ndptr.from_param": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "isinstance",
    "numpy.ctypeslib._flags_fromnum",
    "numpy.ndarray",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib._ndptr_base": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "numpy.ctypeslib._num_fromflags": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.core.multiarray._flagdict"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib._pointer_type_cache": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "numpy.ctypeslib._typecodes": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "numpy.ctypeslib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ctypeslib.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.ctypeslib.as_array": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "numpy.array",
    "numpy.ctypeslib.prep_array",
    "numpy.ctypeslib.prep_pointer",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib.as_ctypes": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ctypeslib._typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib.c_intp": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "numpy.ctypeslib.ct": {
  "data": {
   "lineno": 323
  },
  "type": "constant"
 },
 "numpy.ctypeslib.ctypes": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "numpy.ctypeslib.ctypes_load_library": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "numpy.ctypeslib.deprecate": {
  "data": {
   "shadows": "numpy.deprecate"
  },
  "type": "import"
 },
 "numpy.ctypeslib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ctypeslib.flagsobj": {
  "data": {
   "shadows": "numpy.core.multiarray.flagsobj"
  },
  "type": "import"
 },
 "numpy.ctypeslib.get_shared_lib_extension": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_shared_lib_extension"
  },
  "type": "import"
 },
 "numpy.ctypeslib.integer": {
  "data": {
   "shadows": "numpy.integer"
  },
  "type": "import"
 },
 "numpy.ctypeslib.load_library": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "OSError",
    "numpy.ctypeslib.ctypes",
    "numpy.ctypeslib.os",
    "numpy.ctypeslib.warnings",
    "numpy.distutils.misc_util.get_shared_lib_extension"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.ctypeslib.ndpointer": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "TypeError",
    "id",
    "int",
    "isinstance",
    "numpy.core.multiarray.flagsobj",
    "numpy.ctypeslib._flags_fromnum",
    "numpy.ctypeslib._ndptr",
    "numpy.ctypeslib._num_fromflags",
    "numpy.ctypeslib._pointer_type_cache",
    "numpy.dtype",
    "numpy.dtype.names",
    "numpy.dtype.str",
    "numpy.integer",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib.nic": {
  "data": {
   "shadows": "numpy.core._internal"
  },
  "type": "import"
 },
 "numpy.ctypeslib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.ctypeslib.prep_array": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.ctypeslib._ARRAY_TYPE",
    "ob",
    "property",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib.prep_array.__array_interface__": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "numpy.ctypeslib.ct"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib.prep_pointer": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.ctypeslib.ct",
    "numpy.dtype",
    "numpy.dtype.str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib.prep_simple": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.ctypeslib._typecodes",
    "numpy.dtype",
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib.prep_simple.__array_interface__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.ctypeslib.ct"
   ]
  },
  "type": "function"
 },
 "numpy.ctypeslib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ctypeslib.simple_types": {
  "data": {
   "lineno": 354
  },
  "type": "constant"
 },
 "numpy.ctypeslib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.ctypeslib.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.testing.nosetester._numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.__config__": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.__config__.extra_dll_dir",
    "numpy.distutils.__config__.os",
    "numpy.distutils.__config__.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.__config__.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.blas_mkl_info": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.blas_opt_info": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.blis_info": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.extra_dll_dir": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.get_info": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "globals"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.__config__.lapack_mkl_info": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.lapack_opt_info": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.openblas_info": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.openblas_lapack_info": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.distutils.__config__.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.__config__.show": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "globals",
    "len",
    "print",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.__config__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.__version__": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "numpy.distutils.__version__.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.__version__.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.__version__.major": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.distutils.__version__.micro": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.distutils.__version__.minor": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.distutils.__version__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.__version__.version": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils._numpy_tester": {
  "data": {
   "shadows": "numpy.testing.nosetester._numpy_tester"
  },
  "type": "import"
 },
 "numpy.distutils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.ccompiler._default_compilers",
    "distutils.ccompiler.gen_lib_options",
    "distutils.ccompiler.gen_preprocess_options",
    "distutils.ccompiler.new_compiler",
    "distutils.ccompiler.split_quoted",
    "dummy_threading.Lock",
    "numpy.distutils.ccompiler.CCompiler_compile",
    "numpy.distutils.ccompiler.CCompiler_customize",
    "numpy.distutils.ccompiler.CCompiler_customize_cmd",
    "numpy.distutils.ccompiler.CCompiler_cxx_compiler",
    "numpy.distutils.ccompiler.CCompiler_find_executables",
    "numpy.distutils.ccompiler.CCompiler_get_version",
    "numpy.distutils.ccompiler.CCompiler_object_filenames",
    "numpy.distutils.ccompiler.CCompiler_show_customization",
    "numpy.distutils.ccompiler.CCompiler_spawn",
    "numpy.distutils.ccompiler._m",
    "numpy.distutils.ccompiler.gen_lib_options",
    "numpy.distutils.ccompiler.gen_preprocess_options",
    "numpy.distutils.ccompiler.new_compiler",
    "numpy.distutils.ccompiler.re",
    "numpy.distutils.ccompiler.replace_method",
    "numpy.distutils.ccompiler.split_quoted",
    "numpy.distutils.ccompiler.string",
    "numpy.distutils.ccompiler.sys",
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.mingw32",
    "set",
    "setattr"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.ccompiler.CCompiler_compile": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "dummy_threading.Semaphore",
    "getattr",
    "isinstance",
    "len",
    "list",
    "numpy.distutils.ccompiler._global_lock",
    "numpy.distutils.ccompiler._job_semaphore",
    "numpy.distutils.ccompiler.sys",
    "numpy.distutils.fcompiler.FCompiler",
    "numpy.distutils.fcompiler.has_f90_header",
    "numpy.distutils.fcompiler.is_f_file",
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.cyg2win32",
    "numpy.distutils.misc_util.get_num_build_jobs",
    "single_compile"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_compile.single_compile": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler._global_lock",
    "numpy.distutils.ccompiler._job_semaphore",
    "numpy.distutils.ccompiler._needs_build",
    "numpy.distutils.ccompiler._processing_files",
    "numpy.distutils.ccompiler.time"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_customize": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "distutils.errors.CompileError",
    "distutils.sysconfig.customize_compiler",
    "hasattr",
    "numpy.distutils.ccompiler.os",
    "numpy.distutils.ccompiler.shutil",
    "numpy.distutils.ccompiler.tempfile",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_customize_cmd": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "allow",
    "numpy.distutils.log.info"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_customize_cmd.allow": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_cxx_compiler": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "copy.copy",
    "numpy.distutils.ccompiler.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_find_executables": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_get_version": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "AttributeError",
    "distutils.version.LooseVersion",
    "hasattr",
    "matcher",
    "numpy.distutils.exec_command.exec_command"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_get_version.matcher": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_object_filenames": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "UnknownFileError",
    "numpy.distutils.ccompiler.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_show_customization": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "numpy.distutils.ccompiler._compiler_to_string",
    "numpy.distutils.log._global_log.threshold",
    "numpy.distutils.log.info",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CCompiler_spawn": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "UnicodeError",
    "distutils.errors.DistutilsExecError",
    "list",
    "numpy.distutils.ccompiler.re",
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.is_sequence",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.CompileError": {
  "data": {
   "shadows": "distutils.errors.CompileError"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.DistutilsExecError": {
  "data": {
   "shadows": "distutils.errors.DistutilsExecError"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.DistutilsModuleError": {
  "data": {
   "shadows": "distutils.errors.DistutilsModuleError"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.DistutilsPlatformError": {
  "data": {
   "shadows": "distutils.errors.DistutilsPlatformError"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler._commandline_dep_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util._commandline_dep_string"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler._compiler_to_string": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "format",
    "getattr",
    "hasattr",
    "len",
    "list",
    "max",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler._distutils_gen_lib_options": {
  "data": {
   "lineno": 739
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._distutils_gen_preprocess_options": {
  "data": {
   "lineno": 762
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._distutils_new_compiler": {
  "data": {
   "lineno": 695
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._dquote_re": {
  "data": {
   "lineno": 776
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._global_lock": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._has_white_re": {
  "data": {
   "lineno": 777
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._job_semaphore": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._m": {
  "data": {
   "lineno": 758
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._needs_build": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "OSError",
    "numpy.distutils.ccompiler.os",
    "numpy.distutils.ccompiler.shlex",
    "numpy.distutils.misc_util._commandline_dep_string",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler._processing_files": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._squote_re": {
  "data": {
   "lineno": 775
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler._wordchars_re": {
  "data": {
   "lineno": 774
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.ccompiler": {
  "data": {
   "shadows": "distutils.ccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.customize_compiler": {
  "data": {
   "shadows": "distutils.sysconfig.customize_compiler"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.cyg2win32": {
  "data": {
   "shadows": "numpy.distutils.misc_util.cyg2win32"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.gen_lib_options": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "list",
    "numpy.distutils.ccompiler._distutils_gen_lib_options",
    "numpy.distutils.misc_util.is_sequence",
    "numpy.distutils.misc_util.quote_args"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.gen_preprocess_options": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler._distutils_gen_preprocess_options",
    "numpy.distutils.misc_util.quote_args"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.get_num_build_jobs": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_num_build_jobs"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.has_f90_header": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.has_f90_header"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.is_f_file": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.is_f_file"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.mingw32": {
  "data": {
   "shadows": "numpy.distutils.misc_util.mingw32"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.multiprocessing.pool": {
  "data": {
   "shadows": "multiprocessing.pool"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.new_compiler": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "__import__",
    "distutils.errors.DistutilsModuleError",
    "distutils.errors.DistutilsPlatformError",
    "get_default_compiler",
    "klass",
    "numpy.distutils.ccompiler.os",
    "numpy.distutils.ccompiler.sys",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.log.debug",
    "numpy.distutils.log.info",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.quote_args": {
  "data": {
   "shadows": "numpy.distutils.misc_util.quote_args"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.replace_method": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "func",
    "numpy.distutils.ccompiler.sys",
    "numpy.distutils.ccompiler.types",
    "setattr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.simple_version_match": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.simple_version_match.matcher": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.split_quoted": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "numpy.distutils.ccompiler._dquote_re",
    "numpy.distutils.ccompiler._has_white_re",
    "numpy.distutils.ccompiler._squote_re",
    "numpy.distutils.ccompiler._wordchars_re",
    "numpy.distutils.ccompiler.string"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.ccompiler.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.threading": {
  "data": {
   "shadows": "dummy_threading"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "numpy.distutils.ccompiler.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.distutils.command": {
  "data": {
   "symbols_in_volume": [
    "__import__",
    "globals",
    "locals",
    "numpy.distutils.command.distutils_all"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.distutils.command.__revision__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.command.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.autodist": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.autodist.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.autodist.check_compiler_gcc4": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_gcc_function_attribute": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_gcc_variable_attribute": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_inline": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_restrict": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "numpy.distutils.command.autodist.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.autodist.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.command.bdist_rpm.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.bdist_rpm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.bdist_rpm": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "distutils.command.bdist_rpm.bdist_rpm"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.bdist_rpm.bdist_rpm._make_spec_file": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "distutils.command.bdist_rpm.bdist_rpm._make_spec_file",
    "numpy.distutils.command.bdist_rpm.os",
    "numpy.distutils.command.bdist_rpm.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.bdist_rpm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.old_bdist_rpm": {
  "data": {
   "shadows": "distutils.command.bdist_rpm.bdist_rpm"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.build": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.build.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.build": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "distutils.command.build.build",
    "distutils.command.build.build.has_ext_modules",
    "distutils.command.build.build.help_options",
    "distutils.command.build.build.sub_commands",
    "distutils.command.build.build.user_options",
    "numpy.distutils.command.config_compiler.show_fortran_compilers"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.build.build.finalize_options": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "distutils.command.build.build.finalize_options",
    "distutils.util.get_platform",
    "int",
    "numpy.distutils.command.build.os",
    "numpy.distutils.command.build.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build.build.initialize_options": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "distutils.command.build.build.initialize_options"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build.build.run": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "distutils.command.build.build.run"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.get_platform": {
  "data": {
   "shadows": "distutils.util.get_platform"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.old_build": {
  "data": {
   "shadows": "distutils.command.build.build"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.show_fortran_compilers": {
  "data": {
   "shadows": "numpy.distutils.command.config_compiler.show_fortran_compilers"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib": {
  "data": {
   "symbols_in_volume": [
    "distutils.command.build_clib.build_clib.user_options",
    "len",
    "numpy.distutils.command.build_clib._l",
    "range"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.build_clib.DistutilsError": {
  "data": {
   "shadows": "distutils.errors.DistutilsError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.DistutilsFileError": {
  "data": {
   "shadows": "distutils.errors.DistutilsFileError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.DistutilsSetupError": {
  "data": {
   "shadows": "distutils.errors.DistutilsSetupError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib._l": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_clib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.all_strings": {
  "data": {
   "shadows": "numpy.distutils.misc_util.all_strings"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.build_clib": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "distutils.command.build_clib.build_clib",
    "distutils.command.build_clib.build_clib.boolean_options",
    "distutils.command.build_clib.build_clib.user_options"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.build_clib.build_clib.build_a_library": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "distutils.dep_util.newer_group",
    "distutils.errors.DistutilsError",
    "distutils.errors.DistutilsFileError",
    "distutils.errors.DistutilsSetupError",
    "glob.glob",
    "list",
    "numpy.distutils.command.build_clib.os",
    "numpy.distutils.fcompiler.new_fcompiler",
    "numpy.distutils.log.debug",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "numpy.distutils.misc_util.filter_sources",
    "numpy.distutils.misc_util.get_numpy_include_dirs",
    "numpy.distutils.misc_util.is_sequence",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.build_libraries": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.finalize_options": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "distutils.command.build_clib.build_clib.finalize_options",
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.get_source_files": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.get_lib_source_files"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.have_cxx_sources": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.has_cxx_sources"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.have_f_sources": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.has_f_sources"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.initialize_options": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "distutils.command.build_clib.build_clib.initialize_options"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.build_clib.run": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "distutils.ccompiler.new_compiler",
    "numpy.distutils.command.build_clib.os",
    "numpy.distutils.command.build_clib.shutil",
    "numpy.distutils.fcompiler.new_fcompiler"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_clib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.filter_sources": {
  "data": {
   "shadows": "numpy.distutils.misc_util.filter_sources"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.get_lib_source_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_lib_source_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.get_numpy_include_dirs": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_numpy_include_dirs"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.has_cxx_sources": {
  "data": {
   "shadows": "numpy.distutils.misc_util.has_cxx_sources"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.has_f_sources": {
  "data": {
   "shadows": "numpy.distutils.misc_util.has_f_sources"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.new_compiler": {
  "data": {
   "shadows": "distutils.ccompiler.new_compiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.newer_group": {
  "data": {
   "shadows": "distutils.dep_util.newer_group"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.old_build_clib": {
  "data": {
   "shadows": "distutils.command.build_clib.build_clib"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_clib.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.build_ext.DistutilsError": {
  "data": {
   "shadows": "distutils.errors.DistutilsError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.DistutilsFileError": {
  "data": {
   "shadows": "distutils.errors.DistutilsFileError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.DistutilsSetupError": {
  "data": {
   "shadows": "distutils.errors.DistutilsSetupError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.build_ext": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "distutils.command.build_ext.build_ext",
    "distutils.command.build_ext.build_ext.help_options",
    "distutils.command.build_ext.build_ext.user_options",
    "numpy.distutils.command.config_compiler.show_fortran_compilers"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.build_ext.build_ext._add_dummy_mingwex_sym": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "numpy.distutils.command.build_ext.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext._libs_with_msvc_and_fortran": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "dir",
    "dir.startswith",
    "distutils.file_util.copy_file",
    "numpy.distutils.command.build_ext.os",
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.log.warn",
    "numpy.distutils.system_info.combine_paths"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext._process_unlinkable_fobjects": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "list",
    "numpy.distutils.command.build_ext.os",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.build_extension": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "distutils.dep_util.newer_group",
    "distutils.errors.DistutilsError",
    "distutils.errors.DistutilsFileError",
    "distutils.errors.DistutilsSetupError",
    "glob.glob",
    "hasattr",
    "linker",
    "list",
    "numpy.distutils.command.build_ext.os",
    "numpy.distutils.log.debug",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "numpy.distutils.misc_util.filter_sources",
    "numpy.distutils.misc_util.get_numpy_include_dirs",
    "numpy.distutils.misc_util.is_sequence"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.finalize_options": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "distutils.command.build_ext.build_ext.finalize_options",
    "int",
    "isinstance",
    "numpy.distutils.command.build_ext.os",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.get_outputs": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "numpy.distutils.command.build_ext.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.get_source_files": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.get_ext_source_files"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.initialize_options": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "distutils.command.build_ext.build_ext.initialize_options"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.run": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "distutils.ccompiler.new_compiler",
    "distutils.file_util.copy_file",
    "numpy.distutils.command.build_ext.os",
    "numpy.distutils.fcompiler.new_fcompiler",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "numpy.distutils.misc_util.has_cxx_sources",
    "numpy.distutils.misc_util.has_f_sources",
    "repr",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_ext.build_ext.swig_sources": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "numpy.distutils.command.build_ext.combine_paths": {
  "data": {
   "shadows": "numpy.distutils.system_info.combine_paths"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.copy_file": {
  "data": {
   "shadows": "distutils.file_util.copy_file"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.filter_sources": {
  "data": {
   "shadows": "numpy.distutils.misc_util.filter_sources"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.get_build_architecture": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_build_architecture"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.get_ext_source_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_ext_source_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.get_numpy_include_dirs": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_numpy_include_dirs"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.has_cxx_sources": {
  "data": {
   "shadows": "numpy.distutils.misc_util.has_cxx_sources"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.has_f_sources": {
  "data": {
   "shadows": "numpy.distutils.misc_util.has_f_sources"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.msvc_version": {
  "data": {
   "shadows": "numpy.distutils.misc_util.msvc_version"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.new_compiler": {
  "data": {
   "shadows": "distutils.ccompiler.new_compiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.newer_group": {
  "data": {
   "shadows": "distutils.dep_util.newer_group"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.old_build_ext": {
  "data": {
   "shadows": "distutils.command.build_ext.build_ext"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.show_fortran_compilers": {
  "data": {
   "shadows": "numpy.distutils.command.config_compiler.show_fortran_compilers"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_ext.system_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.system_info"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.build_py.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py.build_py": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "distutils.command.build_py.build_py"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.build_py.build_py.find_modules": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "distutils.command.build_py.build_py.find_modules",
    "numpy.distutils.misc_util.is_string"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_py.build_py.find_package_modules": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "distutils.command.build_py.build_py.find_package_modules"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_py.build_py.run": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "distutils.command.build_py.build_py.run",
    "list"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_py.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py.old_build_py": {
  "data": {
   "shadows": "distutils.command.build_py.build_py"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.build_scripts.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.build_scripts": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "distutils.command.build_scripts.build_scripts"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.build_scripts.build_scripts.generate_scripts": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "func",
    "list",
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.is_string"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.build_scripts.get_source_files": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.get_script_files"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.build_scripts.run": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "distutils.command.build_scripts.build_scripts.run"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.get_script_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_script_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.old_build_scripts": {
  "data": {
   "shadows": "distutils.command.build_scripts.build_scripts"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.command.build_src.re"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.build_src.DistutilsError": {
  "data": {
   "shadows": "distutils.errors.DistutilsError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.DistutilsSetupError": {
  "data": {
   "shadows": "distutils.errors.DistutilsSetupError"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src._f2py_module_name_match": {
  "data": {
   "lineno": 758
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._f2py_user_module_name_match": {
  "data": {
   "lineno": 760
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._f_pyf_ext_match": {
  "data": {
   "lineno": 718
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._find_swig_target": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "numpy.distutils.command.build_src.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src._has_c_header": {
  "data": {
   "lineno": 724
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._has_cpp_header": {
  "data": {
   "lineno": 725
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._header_ext_match": {
  "data": {
   "lineno": 719
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src._swig_module_name_match": {
  "data": {
   "lineno": 722
  },
  "type": "constant"
 },
 "numpy.distutils.command.build_src.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.appendpath": {
  "data": {
   "shadows": "numpy.distutils.misc_util.appendpath"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.build_ext": {
  "data": {
   "shadows": "distutils.command.build_ext"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.build_src": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "distutils.command.build_ext.build_ext"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.build_src.build_src._build_npy_pkg_config": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.distutils.command.build_src.os",
    "numpy.distutils.command.build_src.subst_vars"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_data_files_sources": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "hasattr",
    "isinstance",
    "list",
    "numpy.distutils.command.build_src.os",
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.get_data_files",
    "repr",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_extension_sources": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "f",
    "list",
    "numpy.distutils.command.build_src.os",
    "numpy.distutils.log.info"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_library_sources": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "list",
    "numpy.distutils.log.info"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_npy_pkg_config": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "hasattr",
    "numpy.distutils.command.build_src.copy",
    "numpy.distutils.command.build_src.os",
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.get_cmd"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_py_modules_sources": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.distutils.command.build_src.os",
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.is_sequence",
    "source"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.build_sources": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.f2py_sources": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "distutils.dep_util.newer",
    "distutils.dep_util.newer_group",
    "distutils.errors.DistutilsError",
    "distutils.errors.DistutilsSetupError",
    "len",
    "numpy.distutils.command.build_src.get_f2py_modulename",
    "numpy.distutils.command.build_src.os",
    "numpy.distutils.log.debug",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "numpy.distutils.misc_util.appendpath",
    "numpy.distutils.misc_util.fortran_ext_match",
    "numpy.distutils.misc_util.is_sequence",
    "source"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.filter_files": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.distutils.command.build_src.os",
    "source"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.filter_h_files": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.filter_py_files": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.finalize_options": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "distutils.command.build_ext",
    "distutils.command.build_ext.inplace",
    "distutils.command.build_ext.swig_cpp",
    "distutils.util.get_platform",
    "getattr",
    "numpy.distutils.command.build_src.os",
    "numpy.distutils.command.build_src.shlex",
    "numpy.distutils.command.build_src.sys",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "setattr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.generate_a_pyrex_source": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.generate_sources": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "func",
    "numpy.distutils.command.build_src.os",
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.is_sequence",
    "numpy.distutils.misc_util.is_string",
    "source"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.initialize_options": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.pyrex_sources": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "numpy.distutils.command.build_src.os",
    "source"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.run": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.distutils.log.info"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.swig_sources": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "distutils.dep_util.newer_group",
    "distutils.errors.DistutilsSetupError",
    "numpy.distutils.command.build_src._find_swig_target",
    "numpy.distutils.command.build_src.get_swig_modulename",
    "numpy.distutils.command.build_src.get_swig_target",
    "numpy.distutils.command.build_src.os",
    "numpy.distutils.log.debug",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "numpy.distutils.misc_util.appendpath",
    "source"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.build_src.template_sources": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "distutils.dep_util.newer_group",
    "numpy.distutils.command.build_src._f_pyf_ext_match",
    "numpy.distutils.command.build_src._header_ext_match",
    "numpy.distutils.command.build_src.os",
    "numpy.distutils.conv_template.process_file",
    "numpy.distutils.from_template.process_file",
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.appendpath",
    "numpy.distutils.misc_util.is_sequence",
    "open",
    "source"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.fortran_ext_match": {
  "data": {
   "shadows": "numpy.distutils.misc_util.fortran_ext_match"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.get_cmd": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_cmd"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.get_data_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_data_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.get_f2py_modulename": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "f",
    "f.close",
    "numpy.distutils.command.build_src._f2py_module_name_match",
    "numpy.distutils.command.build_src._f2py_user_module_name_match",
    "open",
    "source"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.get_platform": {
  "data": {
   "shadows": "distutils.util.get_platform"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.get_swig_modulename": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "f",
    "f.close",
    "numpy.distutils.command.build_src._swig_module_name_match",
    "open",
    "source"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.get_swig_target": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "f",
    "f.close",
    "f.readline",
    "numpy.distutils.command.build_src._has_c_header",
    "numpy.distutils.command.build_src._has_cpp_header",
    "open",
    "source"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.newer_group": {
  "data": {
   "shadows": "distutils.dep_util.newer_group"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.numpy.f2py": {
  "data": {
   "shadows": "numpy.f2py"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.process_c_file": {
  "data": {
   "shadows": "numpy.distutils.conv_template.process_file"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.process_f_file": {
  "data": {
   "shadows": "numpy.distutils.from_template.process_file"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_src.subst_vars": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.distutils.command.build_src.re",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_src.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.config": {
  "data": {
   "symbols_in_volume": [
    "distutils.command.config.LANG_EXT"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.config.CompileError": {
  "data": {
   "shadows": "distutils.ccompiler.CompileError"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.DistutilsExecError": {
  "data": {
   "shadows": "distutils.errors.DistutilsExecError"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.GrabStdout": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.config.GrabStdout.__init__": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "numpy.distutils.command.config.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.GrabStdout.flush": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "numpy.distutils.command.config.GrabStdout.restore": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.distutils.command.config.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.GrabStdout.write": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "numpy.distutils.command.config.LANG_EXT": {
  "data": {
   "shadows": "distutils.command.config.LANG_EXT"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.LinkError": {
  "data": {
   "shadows": "distutils.ccompiler.LinkError"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.check_compiler_gcc4": {
  "data": {
   "shadows": "numpy.distutils.command.autodist.check_compiler_gcc4"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.check_gcc_function_attribute": {
  "data": {
   "shadows": "numpy.distutils.command.autodist.check_gcc_function_attribute"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.check_gcc_variable_attribute": {
  "data": {
   "shadows": "numpy.distutils.command.autodist.check_gcc_variable_attribute"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.check_inline": {
  "data": {
   "shadows": "numpy.distutils.command.autodist.check_inline"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.check_restrict": {
  "data": {
   "shadows": "numpy.distutils.command.autodist.check_restrict"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.config": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "distutils.command.config.config",
    "distutils.command.config.config.user_options"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.config.config._check_compiler": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "IOError",
    "distutils.command.config.config._check_compiler",
    "distutils.msvc9compiler.get_build_version",
    "isinstance",
    "numpy.distutils.command.config.distutils",
    "numpy.distutils.command.config.sys",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.fcompiler.FCompiler",
    "numpy.distutils.fcompiler.new_fcompiler",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config._compile": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "distutils.command.config.config._compile"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config._link": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "distutils.command.config.config._link",
    "distutils.file_util.copy_file",
    "distutils.log.warn",
    "numpy.distutils.command.config.os",
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.mingw32ccompiler.generate_manifest"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config._wrap_method": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "distutils.ccompiler.CompileError",
    "distutils.errors.DistutilsExecError",
    "mth",
    "numpy.distutils.compat.get_exception",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_compiler_gcc4": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "numpy.distutils.command.autodist.check_compiler_gcc4"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_decl": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_func": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_funcs_once": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_gcc_function_attribute": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.distutils.command.autodist.check_gcc_function_attribute"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_gcc_variable_attribute": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.distutils.command.autodist.check_gcc_variable_attribute"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_header": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_inline": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.distutils.command.autodist.check_inline"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_macro_true": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_restrict": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.distutils.command.autodist.check_restrict"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_type": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.distutils.command.config.distutils"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.check_type_size": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "distutils.ccompiler.CompileError"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.get_output": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Exception",
    "KeyboardInterrupt",
    "distutils.ccompiler.CompileError",
    "distutils.ccompiler.LinkError",
    "distutils.log.error",
    "distutils.log.info",
    "hasattr",
    "numpy.distutils.command.config.GrabStdout",
    "numpy.distutils.command.config.os",
    "numpy.distutils.command.config.signal",
    "numpy.distutils.command.config.warnings",
    "numpy.distutils.exec_command.exec_command"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.config.initialize_options": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "distutils.command.config.config.initialize_options"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config.copy_file": {
  "data": {
   "shadows": "distutils.file_util.copy_file"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.distutils": {
  "data": {
   "shadows": "distutils"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.generate_manifest": {
  "data": {
   "shadows": "numpy.distutils.mingw32ccompiler.generate_manifest"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.msvc9compiler": {
  "data": {
   "shadows": "distutils.msvc9compiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.old_config": {
  "data": {
   "shadows": "distutils.command.config.config"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.config.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.config_compiler.Command": {
  "data": {
   "shadows": "distutils.core.Command"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.config_cc": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "distutils.core.Command"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.config_compiler.config_cc.finalize_options": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_cc.initialize_options": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_cc.run": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "distutils.core.Command",
    "numpy.distutils.command.config_compiler.show_fortran_compilers"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.config_compiler.config_fc.finalize_options": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc.initialize_options": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc.run": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.distutils.core": {
  "data": {
   "shadows": "distutils.core"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.show_fcompilers": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.show_fcompilers"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.show_fortran_compilers": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.show_fcompilers"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.develop": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.develop.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.develop.develop": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "__doc__",
    "setuptools.command.develop.develop",
    "setuptools.command.develop.develop.__doc__"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.develop.develop.install_for_development": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "setuptools.command.develop.develop.install_for_development"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.develop.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.develop.old_develop": {
  "data": {
   "shadows": "setuptools.command.develop.develop"
  },
  "type": "import"
 },
 "numpy.distutils.command.develop.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.distutils_all": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.distutils.command.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.egg_info._egg_info": {
  "data": {
   "shadows": "setuptools.command.egg_info.egg_info"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info.egg_info": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "setuptools.command.egg_info.egg_info"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.egg_info.egg_info.run": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.distutils.command.egg_info.sys",
    "numpy.distutils.command.egg_info.textwrap",
    "numpy.distutils.command.egg_info.warnings",
    "setuptools.command.egg_info.egg_info.run"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.egg_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.command.install": {
  "data": {
   "symbols_in_volume": [
    "distutils.command.install.install",
    "numpy.distutils.command.install.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.install.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.distutils_install": {
  "data": {
   "shadows": "distutils.command.install.install"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.have_setuptools": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.distutils.command.install.install": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.distutils.command.install.old_install"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.install.install.finalize_options": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.distutils.command.install.old_install"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install.install.run": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "distutils.file_util.write_file",
    "numpy.distutils.command.install.have_setuptools",
    "numpy.distutils.command.install.old_install",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install.install.setuptools_run": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "distutils.command.install.install.run",
    "numpy.distutils.command.install.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install.old_install": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.distutils.command.install.old_install_mod": {
  "data": {
   "shadows": "distutils.command.install"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.write_file": {
  "data": {
   "shadows": "distutils.file_util.write_file"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.install_clib.Command": {
  "data": {
   "shadows": "distutils.core.Command"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.get_cmd": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_cmd"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.install_clib": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "distutils.core.Command"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.install_clib.install_clib.finalize_options": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.get_outputs": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.initialize_options": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.run": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "distutils.ccompiler.new_compiler",
    "numpy.distutils.command.install_clib.os",
    "numpy.distutils.misc_util.get_cmd"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.new_compiler": {
  "data": {
   "shadows": "distutils.ccompiler.new_compiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.command.install_data.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.install_data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data.have_setuptools": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.distutils.command.install_data.install_data": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "distutils.command.install_data.install_data"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.install_data.install_data.finalize_options": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "numpy.distutils.command.install_data.install_data.run": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "distutils.command.install_data.install_data.run",
    "numpy.distutils.command.install_data.have_setuptools"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install_data.old_install_data": {
  "data": {
   "shadows": "distutils.command.install_data.install_data"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.install_headers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers.install_headers": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "distutils.command.install_headers.install_headers"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.install_headers.install_headers.run": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "isinstance",
    "numpy.distutils.command.install_headers.os",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install_headers.old_install_headers": {
  "data": {
   "shadows": "distutils.command.install_headers.install_headers"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.command.sdist.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.sdist.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.get_data_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_data_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.old_sdist": {
  "data": {
   "shadows": "distutils.command.sdist.sdist"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.sdist": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "distutils.command.sdist.sdist"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.sdist.sdist.add_defaults": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "distutils.command.sdist.sdist.add_defaults",
    "isinstance",
    "numpy.distutils.misc_util.get_data_files",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.sdist.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.test_na_writable_attributes_deletion": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "AttributeError",
    "assert_raises",
    "delattr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.compat": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.compat.get_exception": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.distutils.compat.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template": {
  "data": {
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "__name__",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.conv_template.allstr",
    "numpy.distutils.conv_template.e",
    "numpy.distutils.conv_template.fid",
    "numpy.distutils.conv_template.file",
    "numpy.distutils.conv_template.newname",
    "numpy.distutils.conv_template.os",
    "numpy.distutils.conv_template.outfile",
    "numpy.distutils.conv_template.process_str",
    "numpy.distutils.conv_template.re",
    "numpy.distutils.conv_template.sys",
    "numpy.distutils.conv_template.writestr",
    "open"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.conv_template.__all__": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.allstr": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.e": {
  "data": {
   "lineno": 335
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.exclude_re": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.exclude_vars_re": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.fid": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.file": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.global_names": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.header": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.include_src_re": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.named_re": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.newname": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.outfile": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.paren_repl": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.parenrep": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.parse_loop_header": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "numpy.distutils.conv_template.exclude_re",
    "numpy.distutils.conv_template.exclude_vars_re",
    "numpy.distutils.conv_template.named_re",
    "numpy.distutils.conv_template.parse_values",
    "numpy.distutils.conv_template.stripast",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_string": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.conv_template.parse_loop_header",
    "numpy.distutils.conv_template.parse_structure",
    "numpy.distutils.conv_template.replace_re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_string.replace": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_structure": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.parse_values": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.distutils.conv_template.paren_repl",
    "numpy.distutils.conv_template.parenrep",
    "numpy.distutils.conv_template.plainrep"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.plainrep": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.process_file": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.conv_template.os",
    "numpy.distutils.conv_template.process_str",
    "numpy.distutils.conv_template.resolve_includes"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.process_str": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.distutils.conv_template.global_names",
    "numpy.distutils.conv_template.header",
    "numpy.distutils.conv_template.parse_string"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.replace_re": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.resolve_includes": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.distutils.conv_template.include_src_re",
    "numpy.distutils.conv_template.os",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.stripast": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "numpy.distutils.conv_template.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.conv_template.unique_key": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.conv_template.writestr": {
  "data": {
   "lineno": 333
  },
  "type": "constant"
 },
 "numpy.distutils.core": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.distutils.command.bdist_rpm.bdist_rpm",
    "numpy.distutils.command.build.build",
    "numpy.distutils.command.build_clib.build_clib",
    "numpy.distutils.command.build_ext.build_ext",
    "numpy.distutils.command.build_py.build_py",
    "numpy.distutils.command.build_scripts.build_scripts",
    "numpy.distutils.command.build_src.build_src",
    "numpy.distutils.command.config.config",
    "numpy.distutils.command.config_compiler.config_cc",
    "numpy.distutils.command.config_compiler.config_fc",
    "numpy.distutils.command.develop.develop",
    "numpy.distutils.command.egg_info.egg_info",
    "numpy.distutils.command.install.install",
    "numpy.distutils.command.install_clib.install_clib",
    "numpy.distutils.command.install_data.install_data",
    "numpy.distutils.command.install_headers.install_headers",
    "numpy.distutils.command.sdist.sdist",
    "numpy.distutils.core.have_setuptools",
    "numpy.distutils.core.numpy_cmdclass",
    "numpy.distutils.core.sys",
    "setuptools.command.bdist_egg.bdist_egg",
    "setuptools.command.easy_install.easy_install"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.core.Extension": {
  "data": {
   "shadows": "numpy.distutils.extension.Extension"
  },
  "type": "import"
 },
 "numpy.distutils.core.NumpyDistribution": {
  "data": {
   "shadows": "numpy.distutils.numpy_distribution.NumpyDistribution"
  },
  "type": "import"
 },
 "numpy.distutils.core._check_append_ext_library": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.distutils.core.warnings",
    "numpy.distutils.misc_util.is_sequence"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.core._check_append_library": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.distutils.core.warnings",
    "numpy.distutils.misc_util.is_sequence"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.core._command_line_ok": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.distutils.core.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.core._dict_append": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "list",
    "numpy.distutils.misc_util.is_string",
    "repr",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.core.bdist_egg": {
  "data": {
   "shadows": "setuptools.command.bdist_egg"
  },
  "type": "import"
 },
 "numpy.distutils.core.bdist_rpm": {
  "data": {
   "shadows": "numpy.distutils.command.bdist_rpm"
  },
  "type": "import"
 },
 "numpy.distutils.core.build": {
  "data": {
   "shadows": "numpy.distutils.command.build"
  },
  "type": "import"
 },
 "numpy.distutils.core.build_clib": {
  "data": {
   "shadows": "numpy.distutils.command.build_clib"
  },
  "type": "import"
 },
 "numpy.distutils.core.build_ext": {
  "data": {
   "shadows": "numpy.distutils.command.build_ext"
  },
  "type": "import"
 },
 "numpy.distutils.core.build_py": {
  "data": {
   "shadows": "numpy.distutils.command.build_py"
  },
  "type": "import"
 },
 "numpy.distutils.core.build_scripts": {
  "data": {
   "shadows": "numpy.distutils.command.build_scripts"
  },
  "type": "import"
 },
 "numpy.distutils.core.build_src": {
  "data": {
   "shadows": "numpy.distutils.command.build_src"
  },
  "type": "import"
 },
 "numpy.distutils.core.config": {
  "data": {
   "shadows": "numpy.distutils.command.config"
  },
  "type": "import"
 },
 "numpy.distutils.core.config_compiler": {
  "data": {
   "shadows": "numpy.distutils.command.config_compiler"
  },
  "type": "import"
 },
 "numpy.distutils.core.develop": {
  "data": {
   "shadows": "numpy.distutils.command.develop"
  },
  "type": "import"
 },
 "numpy.distutils.core.distutils.core": {
  "data": {
   "shadows": "distutils.core"
  },
  "type": "import"
 },
 "numpy.distutils.core.distutils.dist": {
  "data": {
   "shadows": "distutils.dist"
  },
  "type": "import"
 },
 "numpy.distutils.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.core.easy_install": {
  "data": {
   "shadows": "setuptools.command.easy_install"
  },
  "type": "import"
 },
 "numpy.distutils.core.egg_info": {
  "data": {
   "shadows": "numpy.distutils.command.egg_info"
  },
  "type": "import"
 },
 "numpy.distutils.core.get_data_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_data_files"
  },
  "type": "import"
 },
 "numpy.distutils.core.get_distribution": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.distutils.numpy_distribution.NumpyDistribution",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.core.have_setuptools": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.distutils.core.install": {
  "data": {
   "shadows": "numpy.distutils.command.install"
  },
  "type": "import"
 },
 "numpy.distutils.core.install_clib": {
  "data": {
   "shadows": "numpy.distutils.command.install_clib"
  },
  "type": "import"
 },
 "numpy.distutils.core.install_data": {
  "data": {
   "shadows": "numpy.distutils.command.install_data"
  },
  "type": "import"
 },
 "numpy.distutils.core.install_headers": {
  "data": {
   "shadows": "numpy.distutils.command.install_headers"
  },
  "type": "import"
 },
 "numpy.distutils.core.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.core.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.core.numpy_cmdclass": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.distutils.core.old_setup": {
  "data": {
   "shadows": "distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.core.sdist": {
  "data": {
   "shadows": "numpy.distutils.command.sdist"
  },
  "type": "import"
 },
 "numpy.distutils.core.setup": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "configuration",
    "distutils.core.setup",
    "hasattr",
    "numpy.distutils.command.config",
    "numpy.distutils.command.config.todict",
    "numpy.distutils.core._check_append_ext_library",
    "numpy.distutils.core._check_append_library",
    "numpy.distutils.core._command_line_ok",
    "numpy.distutils.core._dict_append",
    "numpy.distutils.core.numpy_cmdclass",
    "numpy.distutils.misc_util.is_sequence",
    "numpy.distutils.misc_util.is_string",
    "numpy.distutils.numpy_distribution.NumpyDistribution"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.core.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.CPUInfoBase",
    "numpy.distutils.cpuinfo.DarwinCPUInfo",
    "numpy.distutils.cpuinfo.IRIXCPUInfo",
    "numpy.distutils.cpuinfo.LinuxCPUInfo",
    "numpy.distutils.cpuinfo.SunOSCPUInfo",
    "numpy.distutils.cpuinfo.Win32CPUInfo",
    "numpy.distutils.cpuinfo.cpuinfo",
    "numpy.distutils.cpuinfo.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase.__get_nbits": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.platform",
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase.__getattr__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AttributeError",
    "func",
    "getattr",
    "hasattr",
    "isinstance",
    "numpy.distutils.cpuinfo.types"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._getNCPUs": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._is_32bit": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._is_64bit": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.CPUInfoBase._try_call": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "func"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.CPUInfoBase"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo.__init__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.command_info",
    "numpy.distutils.cpuinfo.key_value_from_command"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo.__machine": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._getNCPUs": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_Power_Macintosh": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_i386": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc403": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc505": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc601": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc602": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc603": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc603e": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc604": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc604e": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc620": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc630": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc740": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc7400": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc7450": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc750": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc801": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc821": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc823": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._is_ppc860": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.DarwinCPUInfo._not_impl": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.CPUInfoBase"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.__cputype": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.key_value_from_command"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.__machine": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._getNCPUs": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP19": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP20": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP21": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP22": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP22_4k": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP22_5k": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP24": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP25": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP26": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP27": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP28": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP30": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP32": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP32_10k": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_IP32_5k": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r10000": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r12000": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r2000": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r3000": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r3900": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4000": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4100": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4300": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4400": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4600": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r4650": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r5000": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r6000": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_r8000": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_rorion": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._is_singleCPU": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo._not_impl": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.IRIXCPUInfo.get_ip": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.CPUInfoBase"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "EnvironmentError",
    "UserWarning",
    "len",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.cpuinfo.getoutput",
    "numpy.distutils.cpuinfo.warnings",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._getNCPUs": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_3dnow": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_3dnowext": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_f00f_bug": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_fdiv_bug": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_mmx": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_sse": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_sse2": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_sse3": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._has_ssse3": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AMD": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AMD64": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Alpha": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Athlon64": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonHX": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK6": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK6_2": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK6_3": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonK7": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_AthlonMP": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Celeron": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Core2": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_EV4": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_EV5": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_EV56": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Hammer": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Intel": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Itanium": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Nocona": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Opteron": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PCA56": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Pentium": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumII": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumIII": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumIV": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumM": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumMMX": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_PentiumPro": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_Prescott": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_XEON": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_i486": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_i586": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_i686": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._is_singleCPU": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.LinuxCPUInfo._not_impl": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.CPUInfoBase"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo.__init__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.command_by_line",
    "numpy.distutils.cpuinfo.command_info",
    "numpy.distutils.cpuinfo.key_value_from_command",
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._getNCPUs": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_SUNW": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_cpusparcv7": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_cpusparcv8": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_cpusparcv9": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_i386": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sparc": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sparcstation5": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sparcv9": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sun4": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_sunfire": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra1": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra2": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra250": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra30": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra4": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra5": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra5_10": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra60": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultra80": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultraenterprice": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._is_ultraenterprice10k": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.SunOSCPUInfo._not_impl": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.CPUInfoBase"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "Exception",
    "_winreg.EnumKey",
    "_winreg.EnumValue",
    "_winreg.HKEY_LOCAL_MACHINE",
    "_winreg.OpenKey",
    "_winreg.error",
    "int",
    "numpy.distutils.cpuinfo.re",
    "numpy.distutils.cpuinfo.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._getNCPUs": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_3dnow": {
  "data": {
   "lineno": 654
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_3dnowext": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_mmx": {
  "data": {
   "lineno": 624
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_sse": {
  "data": {
   "lineno": 633
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._has_sse2": {
  "data": {
   "lineno": 645
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMD": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMD64": {
  "data": {
   "lineno": 566
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK5": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK6": {
  "data": {
   "lineno": 547
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK6_2": {
  "data": {
   "lineno": 551
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK6_3": {
  "data": {
   "lineno": 555
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_AMDK7": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Am486": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Am5x86": {
  "data": {
   "lineno": 540
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Core2": {
  "data": {
   "lineno": 612
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Intel": {
  "data": {
   "lineno": 571
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_Pentium": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumII": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumIII": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumIV": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumM": {
  "data": {
   "lineno": 608
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumMMX": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_PentiumPro": {
  "data": {
   "lineno": 593
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i386": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i486": {
  "data": {
   "lineno": 577
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i586": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_i686": {
  "data": {
   "lineno": 583
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._is_singleCPU": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.Win32CPUInfo._not_impl": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.distutils.cpuinfo.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.command_by_line": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.getoutput"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.command_info": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.getoutput"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.cpu": {
  "data": {
   "lineno": 676
  },
  "type": "constant"
 },
 "numpy.distutils.cpuinfo.cpuinfo": {
  "data": {
   "lineno": 674
  },
  "type": "constant"
 },
 "numpy.distutils.cpuinfo.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.getoutput": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "EnvironmentError",
    "UserWarning",
    "commands.getstatusoutput",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.cpuinfo.os",
    "numpy.distutils.cpuinfo.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.getstatusoutput": {
  "data": {
   "shadows": "commands.getstatusoutput"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.key_value_from_command": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "numpy.distutils.cpuinfo.command_by_line"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.cpuinfo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.cpuinfo.winreg": {
  "data": {
   "shadows": "_winreg"
  },
  "type": "import"
 },
 "numpy.distutils.customized_ccompiler": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "numpy.distutils.customized_fcompiler": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.new_fcompiler"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.environment": {
  "data": {
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.environment.Distribution": {
  "data": {
   "shadows": "distutils.dist.Distribution"
  },
  "type": "import"
 },
 "numpy.distutils.environment.EnvironmentConfig": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.environment.EnvironmentConfig.__getattr__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig._get_var": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "convert",
    "numpy.distutils.environment.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.clone": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.dump_variable": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "convert",
    "numpy.distutils.environment.os",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.dump_variables": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.get": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.environment.EnvironmentConfig.use_distribution": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "distutils.dist.Distribution",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.environment.__metaclass__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.environment.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.environment.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.environment.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.environment.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.exec_command": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.exec_command.__all__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.distutils.exec_command._exec_command": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "EnvironmentError",
    "numpy.distutils.exec_command._quote_arg",
    "numpy.distutils.exec_command.os",
    "numpy.distutils.exec_command.subprocess",
    "numpy.distutils.misc_util.is_sequence",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.exec_command._preserve_environment": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.os",
    "numpy.distutils.log.debug"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.exec_command._quote_arg": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "numpy.distutils.exec_command._supports_fileno": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "IOError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.exec_command._update_environment": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.os",
    "numpy.distutils.log.debug"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.exec_command.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.exec_command.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.exec_command.exec_command": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "__name__",
    "list",
    "numpy.distutils.exec_command._exec_command",
    "numpy.distutils.exec_command._preserve_environment",
    "numpy.distutils.exec_command._update_environment",
    "numpy.distutils.exec_command.os",
    "numpy.distutils.exec_command.sys",
    "numpy.distutils.log.debug"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.exec_command.find_executable": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "KeyError",
    "numpy.distutils.exec_command.os",
    "numpy.distutils.log.debug",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "realpath"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.exec_command.get_pythonexe": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.os",
    "numpy.distutils.exec_command.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.exec_command.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.exec_command.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.exec_command.make_temp_file": {
  "data": {
   "shadows": "numpy.distutils.misc_util.make_temp_file"
  },
  "type": "import"
 },
 "numpy.distutils.exec_command.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.exec_command.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.exec_command.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.distutils.exec_command.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.exec_command.temp_file_name": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.make_temp_file"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.extension": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.extension.re",
    "numpy.distutils.extension.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.extension.Extension": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "distutils.extension.Extension"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.extension.Extension.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "SyntaxWarning",
    "distutils.extension.Extension.__init__",
    "isinstance",
    "numpy.distutils.extension.basestring",
    "numpy.distutils.extension.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.extension.Extension.has_cxx_sources": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.distutils.extension.cxx_ext_re",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.extension.Extension.has_f2py_sources": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.distutils.extension.fortran_pyf_ext_re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.extension.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.extension.basestring": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.extension.cxx_ext_re": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.distutils.extension.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.extension.fortran_pyf_ext_re": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.distutils.extension.old_Extension": {
  "data": {
   "shadows": "distutils.extension.Extension"
  },
  "type": "import"
 },
 "numpy.distutils.extension.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.extension.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.extension.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.extension.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.fcompiler.re",
    "numpy.distutils.fcompiler.show_fcompilers",
    "set",
    "type"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.CCompiler": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.CCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.CompileError": {
  "data": {
   "shadows": "distutils.errors.CompileError"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.CompilerNotFound": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.Distribution": {
  "data": {
   "shadows": "distutils.dist.Distribution"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.DistutilsExecError": {
  "data": {
   "shadows": "distutils.errors.DistutilsExecError"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.DistutilsModuleError": {
  "data": {
   "shadows": "distutils.errors.DistutilsModuleError"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.DistutilsPlatformError": {
  "data": {
   "shadows": "distutils.errors.DistutilsPlatformError"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.EnvironmentConfig": {
  "data": {
   "shadows": "numpy.distutils.environment.EnvironmentConfig"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.FCompiler": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "_command_property",
    "numpy.distutils.ccompiler.CCompiler",
    "numpy.distutils.environment.EnvironmentConfig",
    "numpy.distutils.fcompiler.flaglist",
    "numpy.distutils.fcompiler.str2bool",
    "numpy.distutils.misc_util.get_shared_lib_extension"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.FCompiler.__copy__": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.__init__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.CCompiler.__init__"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler._command_property": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler._command_property.fget": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler._compile": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "distutils.errors.CompileError",
    "distutils.errors.DistutilsExecError",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.fcompiler.get_f77flags",
    "numpy.distutils.fcompiler.has_f90_header",
    "numpy.distutils.fcompiler.is_f_file",
    "numpy.distutils.fcompiler.is_free_format",
    "numpy.distutils.fcompiler.os",
    "numpy.distutils.log.info",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler._environment_hook": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "getattr",
    "hook",
    "hook_name",
    "numpy.distutils.misc_util.is_string"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler._get_command_flags": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.can_ccompiler_link": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.copy": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.customize": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "distutils.sysconfig.get_python_lib",
    "get_flags",
    "numpy.distutils.fcompiler.os",
    "numpy.distutils.fcompiler.sys",
    "numpy.distutils.log.info"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.customize.get_flags": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.dump_properties": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "distutils.fancy_getopt.FancyGetopt",
    "getattr",
    "hasattr",
    "list",
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.find_executables": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.CompilerNotFound",
    "numpy.distutils.log.warn",
    "set_exe"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.find_executables.cached_find_executable": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.find_executable"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.find_executables.set_exe": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "cached_find_executable",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.find_executables.verify_command_form": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "numpy.distutils.fcompiler.is_sequence_of_strings"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_ar": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_arch": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_debug": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_f77": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_f90": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_fix": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_free": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_linker_exe": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_flags_opt": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_libraries": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_library_dirs": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.get_version": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.CCompiler.get_version",
    "numpy.distutils.fcompiler.CompilerNotFound"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.library_dir_option": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.library_option": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.link": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "TypeError",
    "distutils.errors.DistutilsExecError",
    "distutils.errors.LinkError",
    "numpy.distutils.ccompiler.CCompiler.EXECUTABLE",
    "numpy.distutils.ccompiler.gen_lib_options",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.fcompiler.os",
    "numpy.distutils.log.debug",
    "numpy.distutils.misc_util.is_string",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.module_options": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.set_command": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "distutils.util.split_quoted",
    "numpy.distutils.fcompiler.is_sequence_of_strings",
    "numpy.distutils.misc_util.is_string"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.set_commands": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.set_executable": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.update_executables": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FCompiler.wrap_unlinkable_objects": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.FancyGetopt": {
  "data": {
   "shadows": "distutils.fancy_getopt.FancyGetopt"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.LinkError": {
  "data": {
   "shadows": "distutils.errors.LinkError"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.__metaclass__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler._default_compilers": {
  "data": {
   "lineno": 735
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler._f77flags_re": {
  "data": {
   "lineno": 996
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler._find_existing_fcompiler": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "ValueError",
    "distutils.errors.DistutilsModuleError",
    "numpy.distutils.core.get_distribution",
    "numpy.distutils.fcompiler.CompilerNotFound",
    "numpy.distutils.fcompiler.new_fcompiler",
    "numpy.distutils.log.debug",
    "numpy.distutils.log.warn"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler._free_f90_start": {
  "data": {
   "lineno": 964
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler._has_f90_header": {
  "data": {
   "lineno": 962
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler._has_f_header": {
  "data": {
   "lineno": 961
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler._has_fix_header": {
  "data": {
   "lineno": 963
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.absoft": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler",
    "numpy.distutils.fcompiler.absoft.os"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler.get_flags",
    "numpy.distutils.fcompiler.absoft.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_f77": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler.get_flags_f77",
    "numpy.distutils.fcompiler.absoft.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_f90": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler.get_flags_f90"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_fix": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler.get_flags_fix"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.absoft.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_flags_opt": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_libraries": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler.get_libraries",
    "numpy.distutils.fcompiler.absoft.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.get_library_dirs": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.cpu.is_64bit",
    "numpy.distutils.fcompiler.FCompiler.get_library_dirs",
    "numpy.distutils.fcompiler.absoft.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.library_dir_option": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "dir",
    "numpy.distutils.fcompiler.absoft.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.library_option": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.absoft.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.AbsoftFCompiler.update_executables": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.dummy_fortran_file",
    "numpy.distutils.misc_util.cyg2win32"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.absoft.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.compilers": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.absoft.cpu": {
  "data": {
   "shadows": "numpy.distutils.cpuinfo.cpu"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.cyg2win32": {
  "data": {
   "shadows": "numpy.distutils.misc_util.cyg2win32"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.dummy_fortran_file": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.dummy_fortran_file"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absoft.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.all_strings": {
  "data": {
   "shadows": "numpy.distutils.misc_util.all_strings"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.available_fcompilers_for_platform": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler._default_compilers",
    "numpy.distutils.fcompiler.os",
    "numpy.distutils.fcompiler.re",
    "numpy.distutils.fcompiler.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "numpy.distutils.fcompiler.compaq.compilers",
    "numpy.distutils.fcompiler.compaq.os",
    "numpy.distutils.fcompiler.compaq.sys",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler",
    "numpy.distutils.fcompiler.compaq.sys"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_arch": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_debug": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.compaq.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqFCompiler.get_flags_opt": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "ValueError",
    "distutils.errors.DistutilsPlatformError",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.fcompiler.FCompiler",
    "numpy.distutils.fcompiler.compaq.sys",
    "numpy.distutils.msvccompiler.MSVCCompiler",
    "print",
    "str"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags_arch": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags_debug": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.CompaqVisualFCompiler.get_flags_opt": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.compaq.DistutilsPlatformError": {
  "data": {
   "shadows": "distutils.errors.DistutilsPlatformError"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.MSVCCompiler": {
  "data": {
   "shadows": "numpy.distutils.msvccompiler.MSVCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.compilers": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.compaq.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.compaq.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.config_fc": {
  "data": {
   "shadows": "numpy.distutils.command.config_compiler.config_fc"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.dummy_fortran_file": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.make_temp_file"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.failed_fcompilers": {
  "data": {
   "lineno": 851
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.fcompiler_aliases": {
  "data": {
   "lineno": 753
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.fcompiler_class": {
  "data": {
   "lineno": 752
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.find_executable": {
  "data": {
   "shadows": "numpy.distutils.exec_command.find_executable"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.flaglist": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "distutils.util.split_quoted",
    "numpy.distutils.misc_util.is_string"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.g95": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.g95.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler.get_flags": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler.get_flags_debug": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.g95.G95FCompiler.get_flags_opt": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.g95.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.g95.compilers": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.g95.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.g95.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.g95.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.g95.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gen_lib_options": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.gen_lib_options"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.get_default_fcompiler": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler._find_existing_fcompiler",
    "numpy.distutils.fcompiler.available_fcompilers_for_platform",
    "numpy.distutils.log.info"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.get_distribution": {
  "data": {
   "shadows": "numpy.distutils.core.get_distribution"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.get_f77flags": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "distutils.util.split_quoted",
    "numpy.compat.open_latin1",
    "numpy.distutils.fcompiler._f77flags_re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.get_python_lib": {
  "data": {
   "shadows": "distutils.sysconfig.get_python_lib"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.get_shared_lib_extension": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_shared_lib_extension"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.customized_fcompiler",
    "numpy.distutils.fcompiler.gnu.is_win64",
    "numpy.distutils.fcompiler.gnu.re",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.gnu.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.GnuFCompiler",
    "numpy.distutils.fcompiler.gnu._EXTRAFLAGS"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler._hash_files": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.base64",
    "numpy.distutils.fcompiler.gnu.hashlib",
    "numpy.distutils.fcompiler.gnu.sys",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler._link_wrapper_lib": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.distutils.fcompiler.gnu.is_win64",
    "numpy.distutils.fcompiler.gnu.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler._universal_flags": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu._can_target",
    "numpy.distutils.fcompiler.gnu.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.can_ccompiler_link": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_flags": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.GnuFCompiler"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.GnuFCompiler"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_libraries": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.GnuFCompiler",
    "numpy.distutils.fcompiler.gnu.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_library_dirs": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.GnuFCompiler",
    "numpy.distutils.fcompiler.gnu.os",
    "numpy.distutils.fcompiler.gnu.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.get_target": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.fcompiler.gnu.TARGET_R"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.version_match": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.Gnu95FCompiler.wrap_unlinkable_objects": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler",
    "numpy.distutils.fcompiler.gnu.os",
    "numpy.distutils.fcompiler.gnu.sys"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler._c_arch_flags": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "KeyError",
    "distutils.sysconfig.get_config_vars",
    "numpy.distutils.fcompiler.gnu.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_arch": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_debug": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "AttributeError",
    "distutils.sysconfig.get_makefile_filename",
    "distutils.sysconfig.parse_makefile",
    "get_makefile_filename",
    "numpy.distutils.fcompiler.gnu.os",
    "numpy.distutils.fcompiler.gnu.sys",
    "numpy.distutils.fcompiler.gnu.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_opt": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_libgcc_dir": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.fcompiler.gnu.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_libgfortran_dir": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.fcompiler.gnu.os",
    "numpy.distutils.fcompiler.gnu.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_libraries": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.os",
    "numpy.distutils.fcompiler.gnu.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_library_dirs": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.os",
    "numpy.distutils.fcompiler.gnu.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.gnu_version_match": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.distutils.fcompiler.gnu.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.runtime_library_dir_option": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "dir",
    "numpy.distutils.fcompiler.gnu.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.GnuFCompiler.version_match": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.STDOUT": {
  "data": {
   "shadows": "subprocess.STDOUT"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.TARGET_R": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.gnu._EXTRAFLAGS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.gnu._can_target": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.os",
    "numpy.distutils.fcompiler.gnu.tempfile",
    "subprocess.PIPE",
    "subprocess.Popen",
    "subprocess.STDOUT"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.compilers": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.gnu.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.is_win64": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.platform",
    "numpy.distutils.fcompiler.gnu.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.gnu.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.sc": {
  "data": {
   "shadows": "distutils.sysconfig"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.sysconfig": {
  "data": {
   "shadows": "distutils.sysconfig"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.system_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.system_info"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.gnu.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.has_f90_header": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "numpy.compat.open_latin1",
    "numpy.distutils.fcompiler._has_f90_header",
    "numpy.distutils.fcompiler._has_fix_header"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.hpux.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_flags": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_flags_opt": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_libraries": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_library_dirs": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.HPUXFCompiler.get_version": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler.get_version"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.hpux.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux.compilers": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.hpux.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.hpux.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.ibm.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags_debug": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "crt1_match",
    "distutils.log.info",
    "numpy.distutils.fcompiler.ibm.re",
    "numpy.distutils.fcompiler.ibm.sys",
    "numpy.distutils.misc_util.make_temp_file",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_flags_opt": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.IBMFCompiler.get_version": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.exec_command.find_executable",
    "numpy.distutils.fcompiler.FCompiler.get_version",
    "numpy.distutils.fcompiler.ibm.os",
    "numpy.distutils.fcompiler.ibm.re",
    "numpy.distutils.fcompiler.ibm.sys",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.ibm.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.compilers": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.ibm.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.find_executable": {
  "data": {
   "shadows": "numpy.distutils.exec_command.find_executable"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.make_temp_file": {
  "data": {
   "shadows": "numpy.distutils.misc_util.make_temp_file"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.ibm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.intel.BaseIntelFCompiler": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.BaseIntelFCompiler.runtime_library_dir_option": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.BaseIntelFCompiler.update_executables": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.dummy_fortran_file"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.intel.IntelFCompiler",
    "numpy.distutils.fcompiler.intel.intel_version_match"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler.get_flags": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler.get_flags_arch": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64TFCompiler.get_flags_opt": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64VisualFCompiler": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.simple_version_match",
    "numpy.distutils.fcompiler.intel.IntelVisualFCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelEM64VisualFCompiler.get_flags_arch": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.intel.BaseIntelFCompiler",
    "numpy.distutils.fcompiler.intel.intel_version_match"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_arch": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_free": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "numpy.distutils.fcompiler.FCompiler.get_flags_linker_so",
    "numpy.distutils.fcompiler.intel.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelFCompiler.get_flags_opt": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelItaniumFCompiler": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.intel.IntelFCompiler",
    "numpy.distutils.fcompiler.intel.intel_version_match"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelItaniumVisualFCompiler": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.intel.IntelVisualFCompiler",
    "numpy.distutils.fcompiler.intel.intel_version_match"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.intel.BaseIntelFCompiler",
    "numpy.distutils.fcompiler.intel.intel_version_match"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_arch": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_debug": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_free": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.get_flags_opt": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.runtime_library_dir_option": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.IntelVisualFCompiler.update_executables": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.dummy_fortran_file"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.compilers": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.intel.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.dummy_fortran_file": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.dummy_fortran_file"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.intel_version_match": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.simple_version_match",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.intel.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.simple_version_match": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.simple_version_match"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.intel.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.is_f_file": {
  "data": {
   "lineno": 960
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.is_free_format": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "numpy.compat.open_latin1",
    "numpy.distutils.fcompiler._free_f90_start",
    "numpy.distutils.fcompiler._has_f90_header",
    "numpy.distutils.fcompiler._has_f_header"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.is_sequence_of_strings": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.all_strings",
    "numpy.distutils.misc_util.is_sequence"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.lahey.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_flags_debug": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_flags_opt": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_libraries": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.LaheyFCompiler.get_library_dirs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.lahey.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.lahey.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.compilers": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.lahey.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.lahey.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.load_all_fcompiler_classes": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "ValueError",
    "__import__",
    "getattr",
    "glob.glob",
    "hasattr",
    "numpy.distutils.fcompiler.fcompiler_aliases",
    "numpy.distutils.fcompiler.fcompiler_class",
    "numpy.distutils.fcompiler.os",
    "numpy.distutils.fcompiler.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.make_temp_file": {
  "data": {
   "shadows": "numpy.distutils.misc_util.make_temp_file"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.mips.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_arch": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "getattr",
    "numpy.distutils.cpuinfo.cpu"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_arch_f77": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.distutils.cpuinfo.cpu.is_r10000",
    "numpy.distutils.cpuinfo.cpu.is_r12000",
    "numpy.distutils.cpuinfo.cpu.is_r4000",
    "numpy.distutils.cpuinfo.cpu.is_r5000",
    "numpy.distutils.cpuinfo.cpu.is_r8000"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_arch_f90": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.MIPSFCompiler.get_flags_opt": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.mips.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips.compilers": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.mips.cpu": {
  "data": {
   "shadows": "numpy.distutils.cpuinfo.cpu"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.mips.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "numpy.distutils.fcompiler.nag.compiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.nag.BaseNAGFCompiler": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.nag.BaseNAGFCompiler.get_flags_arch": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.BaseNAGFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.BaseNAGFCompiler.get_flags_opt": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.BaseNAGFCompiler.version_match": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.nag.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.nag.BaseNAGFCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler.get_flags_arch": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.nag.BaseNAGFCompiler"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler.get_flags_debug": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.NAGFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.nag.BaseNAGFCompiler",
    "numpy.distutils.fcompiler.nag.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.NAGFORCompiler": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.nag.BaseNAGFCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.nag.NAGFORCompiler.get_flags_debug": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.nag.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.compiler": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.nag.compilers": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.nag.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.nag.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.new_fcompiler": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "klass",
    "numpy.distutils.fcompiler.failed_fcompilers",
    "numpy.distutils.fcompiler.fcompiler_aliases",
    "numpy.distutils.fcompiler.fcompiler_class",
    "numpy.distutils.fcompiler.get_default_fcompiler",
    "numpy.distutils.fcompiler.load_all_fcompiler_classes",
    "numpy.distutils.fcompiler.os",
    "numpy.distutils.log.warn"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.none": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.none.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.none.NoneFCompiler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.none.NoneFCompiler.find_executables": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.none.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.none.compilers": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.none.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.none.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.none.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.none.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.open_latin1": {
  "data": {
   "shadows": "numpy.compat.open_latin1"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.pathf95.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95.PathScaleFCompiler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.pathf95.PathScaleFCompiler.get_flags_debug": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pathf95.PathScaleFCompiler.get_flags_opt": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pathf95.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95.compilers": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.pathf95.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pathf95.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "numpy.distutils.fcompiler.pg.sys",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.pg.CompilerNotFound": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.CompilerNotFound"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler",
    "sys.platform"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags_debug": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags_linker_so": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.get_flags_opt": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFCompiler.runtime_library_dir_option": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_flags": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_flags_arch": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_flags_debug": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_flags_free": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_flags_opt": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_libraries": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler.get_libraries"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_library_dirs": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.FCompiler.get_library_dirs",
    "numpy.distutils.fcompiler.pg.functools",
    "os.path.dirname",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.get_version": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.CompilerNotFound"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.PGroupFlangCompiler.runtime_library_dir_option": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.pg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.compilers": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.pg.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.dummy_fortran_file": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.dummy_fortran_file"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.platform": {
  "data": {
   "shadows": "sys.platform"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.pg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.show_fcompilers": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "ValueError",
    "distutils.dist.Distribution",
    "distutils.errors.DistutilsModuleError",
    "distutils.fancy_getopt.FancyGetopt",
    "list",
    "numpy.distutils.command.config_compiler.config_fc",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.fcompiler.CompilerNotFound",
    "numpy.distutils.fcompiler.available_fcompilers_for_platform",
    "numpy.distutils.fcompiler.fcompiler_class",
    "numpy.distutils.fcompiler.load_all_fcompiler_classes",
    "numpy.distutils.fcompiler.new_fcompiler",
    "numpy.distutils.fcompiler.os",
    "numpy.distutils.fcompiler.sys",
    "numpy.distutils.log.debug",
    "numpy.distutils.log.set_verbosity",
    "print",
    "repr",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.split_quoted": {
  "data": {
   "shadows": "distutils.util.split_quoted"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.str2bool": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "distutils.util.strtobool",
    "numpy.distutils.misc_util.is_string"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.strtobool": {
  "data": {
   "shadows": "distutils.util.strtobool"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.sun.FCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.FCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.simple_version_match",
    "numpy.distutils.fcompiler.FCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_arch": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_flags_f77": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_libraries": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.get_opt": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.SunFCompiler.runtime_library_dir_option": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.sun.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.compilers": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.sun.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sun.simple_version_match": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.simple_version_match"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "distutils.log.set_verbosity",
    "numpy.distutils.customized_fcompiler",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.fcompiler.vast.GnuFCompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.gnu.GnuFCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.GnuFCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler.find_executables": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler.get_flags_arch": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.gnu.GnuFCompiler",
    "numpy.distutils.fcompiler.gnu.GnuFCompiler.get_flags_arch"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.vast.VastFCompiler.get_version_cmd": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.vast.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.fcompiler.vast.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.compilers": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.fcompiler.vast.customized_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.fcompiler.vast.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.from_template": {
  "data": {
   "symbols_in_volume": [
    "IndexError",
    "__name__",
    "numpy.distutils.from_template.allstr",
    "numpy.distutils.from_template.fid",
    "numpy.distutils.from_template.file",
    "numpy.distutils.from_template.find_repl_patterns",
    "numpy.distutils.from_template.newname",
    "numpy.distutils.from_template.os",
    "numpy.distutils.from_template.outfile",
    "numpy.distutils.from_template.process_str",
    "numpy.distutils.from_template.re",
    "numpy.distutils.from_template.sys",
    "numpy.distutils.from_template.writestr",
    "open"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.from_template.__all__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.distutils.from_template._special_names": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.allstr": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.conv": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.distutils.from_template.item_re",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.from_template.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.expand_sub": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.distutils.from_template.find_repl_patterns",
    "numpy.distutils.from_template.list_re",
    "numpy.distutils.from_template.named_re",
    "numpy.distutils.from_template.template_re",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.from_template.expand_sub.listrepl": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.distutils.from_template.conv",
    "numpy.distutils.from_template.template_name_re",
    "numpy.distutils.from_template.unique_key"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.from_template.expand_sub.namerepl": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "numpy.distutils.from_template.fid": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.file": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.find_repl_patterns": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.distutils.from_template.conv",
    "numpy.distutils.from_template.named_re",
    "numpy.distutils.from_template.unique_key"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.from_template.function_start_re": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.include_src_re": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.item_re": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.list_re": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.named_re": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.newname": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.outfile": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.parse_structure": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "numpy.distutils.from_template.function_start_re",
    "numpy.distutils.from_template.routine_end_re",
    "numpy.distutils.from_template.routine_start_re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.from_template.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.process_file": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.distutils.from_template.process_str",
    "numpy.distutils.from_template.resolve_includes"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.from_template.process_str": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.distutils.from_template.expand_sub",
    "numpy.distutils.from_template.find_repl_patterns",
    "numpy.distutils.from_template.parse_structure"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.from_template.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.resolve_includes": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.distutils.from_template.include_src_re",
    "numpy.distutils.from_template.os",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.from_template.routine_end_re": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.routine_start_re": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.from_template.template_name_re": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.template_re": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "numpy.distutils.from_template.unique_key": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.from_template.writestr": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "numpy.distutils.info": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.info.postpone_import": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.intelccompiler.platform"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.intelccompiler.IntelCCompiler": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "distutils.unixccompiler.UnixCCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelCCompiler.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "distutils.unixccompiler.UnixCCompiler.__init__",
    "numpy.distutils.intelccompiler.platform"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelCCompilerW": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.distutils.msvc9compiler.MSVCCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelCCompilerW.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.simple_version_match",
    "numpy.distutils.msvc9compiler.MSVCCompiler.__init__"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelCCompilerW.initialize": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.distutils.msvc9compiler.MSVCCompiler.initialize"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelEM64TCCompiler": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "distutils.unixccompiler.UnixCCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelEM64TCCompiler.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "distutils.unixccompiler.UnixCCompiler.__init__",
    "numpy.distutils.intelccompiler.platform"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelEM64TCCompilerW": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.distutils.intelccompiler.IntelCCompilerW"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelEM64TCCompilerW.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.simple_version_match",
    "numpy.distutils.msvc9compiler.MSVCCompiler.__init__"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelItaniumCCompiler": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "map",
    "numpy.distutils.exec_command.find_executable",
    "numpy.distutils.intelccompiler.IntelCCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.intelccompiler.MSVCCompiler": {
  "data": {
   "shadows": "numpy.distutils.msvc9compiler.MSVCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.UnixCCompiler": {
  "data": {
   "shadows": "distutils.unixccompiler.UnixCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.find_executable": {
  "data": {
   "shadows": "numpy.distutils.exec_command.find_executable"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.simple_version_match": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.simple_version_match"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.lib2def.DEFAULT_NM",
    "numpy.distutils.lib2def.DEF_HEADER",
    "numpy.distutils.lib2def.deffile",
    "numpy.distutils.lib2def.getnm",
    "numpy.distutils.lib2def.nm_cmd",
    "numpy.distutils.lib2def.nm_output",
    "numpy.distutils.lib2def.output_def",
    "numpy.distutils.lib2def.parse_cmd",
    "numpy.distutils.lib2def.parse_nm",
    "numpy.distutils.lib2def.py_ver",
    "numpy.distutils.lib2def.re",
    "numpy.distutils.lib2def.sys",
    "open",
    "str",
    "tuple"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.lib2def.DATA_RE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.DEFAULT_NM": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.DEF_HEADER": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.FUNC_RE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.__doc__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.__version__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.deffile": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.getnm": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.distutils.lib2def.py_ver",
    "numpy.distutils.lib2def.subprocess"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.lib2def.nm_cmd": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.nm_output": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.output_def": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.distutils.lib2def.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.lib2def.parse_cmd": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "numpy.distutils.lib2def.py_ver",
    "numpy.distutils.lib2def.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.lib2def.parse_nm": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.distutils.lib2def.DATA_RE",
    "numpy.distutils.lib2def.FUNC_RE"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.lib2def.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.py_ver": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.distutils.lib2def.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.distutils.lib2def.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.line_endings.dos2unix_dir",
    "numpy.distutils.line_endings.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.line_endings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.dos2unix": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.line_endings.os",
    "numpy.distutils.line_endings.re",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.line_endings.dos2unix_dir": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.distutils.line_endings.dos2unix_one_dir",
    "numpy.distutils.line_endings.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.line_endings.dos2unix_one_dir": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.distutils.line_endings.dos2unix",
    "numpy.distutils.line_endings.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.line_endings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.line_endings.unix2dos": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.distutils.line_endings.os",
    "numpy.distutils.line_endings.re",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.line_endings.unix2dos_dir": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.distutils.line_endings.os",
    "numpy.distutils.line_endings.unix2dos_one_dir"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.line_endings.unix2dos_one_dir": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.distutils.line_endings.os",
    "numpy.distutils.line_endings.unix2dos"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.log": {
  "data": {
   "symbols_in_volume": [
    "distutils.log.Log",
    "distutils.log._global_log.__class__",
    "distutils.log._global_log.good",
    "numpy.distutils.log.set_verbosity",
    "numpy.distutils.log.sys",
    "numpy.distutils.misc_util.cyan_text",
    "numpy.distutils.misc_util.default_text",
    "numpy.distutils.misc_util.red_text"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.log.Log": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "distutils.log.Log"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.log.Log._log": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.distutils.log._fix_args",
    "numpy.distutils.log.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.log.Log.good": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.distutils.log._fix_args",
    "numpy.distutils.log.sys",
    "numpy.distutils.misc_util.green_text",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.log._fix_args": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.is_sequence",
    "numpy.distutils.misc_util.is_string",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.log._global_color_map": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "numpy.distutils.log._global_log": {
  "data": {
   "shadows": "distutils.log._global_log"
  },
  "type": "import"
 },
 "numpy.distutils.log.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.log.cyan_text": {
  "data": {
   "shadows": "numpy.distutils.misc_util.cyan_text"
  },
  "type": "import"
 },
 "numpy.distutils.log.default_text": {
  "data": {
   "shadows": "numpy.distutils.misc_util.default_text"
  },
  "type": "import"
 },
 "numpy.distutils.log.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.log.good": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.distutils.log.green_text": {
  "data": {
   "shadows": "numpy.distutils.misc_util.green_text"
  },
  "type": "import"
 },
 "numpy.distutils.log.is_sequence": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_sequence"
  },
  "type": "import"
 },
 "numpy.distutils.log.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.log.old_Log": {
  "data": {
   "shadows": "distutils.log.Log"
  },
  "type": "import"
 },
 "numpy.distutils.log.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.log.red_text": {
  "data": {
   "shadows": "numpy.distutils.misc_util.red_text"
  },
  "type": "import"
 },
 "numpy.distutils.log.set_threshold": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "distutils.log._global_log.threshold",
    "info"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.log.set_verbosity": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "distutils.log._global_log.threshold",
    "numpy.distutils.log.set_threshold"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.log.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "numpy.distutils.log.warn",
    "numpy.distutils.mingw32ccompiler._MSVCRVER_TO_FULLVER",
    "numpy.distutils.mingw32ccompiler.get_msvcr_replacement",
    "numpy.distutils.mingw32ccompiler.msvcrt",
    "numpy.distutils.mingw32ccompiler.re",
    "numpy.distutils.mingw32ccompiler.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.mingw32ccompiler.CompileError": {
  "data": {
   "shadows": "distutils.errors.CompileError"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.DistutilsExecError": {
  "data": {
   "shadows": "distutils.errors.DistutilsExecError"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "distutils.version.StrictVersion",
    "numpy.distutils.mingw32ccompiler.build_import_library",
    "numpy.distutils.mingw32ccompiler.build_msvcr_library",
    "numpy.distutils.mingw32ccompiler.re",
    "numpy.distutils.mingw32ccompiler.subprocess",
    "numpy.distutils.misc_util.get_build_architecture",
    "numpy.distutils.misc_util.msvc_runtime_version"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler.link": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "distutils.unixccompiler.UnixCCompiler.link",
    "func",
    "func.__code__.co_argcount",
    "numpy.distutils.misc_util.msvc_runtime_library"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.Mingw32CCompiler.object_filenames": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "distutils.errors.UnknownFileError",
    "numpy.distutils.mingw32ccompiler.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.UnixCCompiler": {
  "data": {
   "shadows": "distutils.unixccompiler.UnixCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.UnknownFileError": {
  "data": {
   "shadows": "distutils.errors.UnknownFileError"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler._MSVCRVER_TO_FULLVER": {
  "data": {
   "lineno": 541
  },
  "type": "constant"
 },
 "numpy.distutils.mingw32ccompiler._START": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "numpy.distutils.mingw32ccompiler._TABLE": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "numpy.distutils.mingw32ccompiler._build_import_library_amd64": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.distutils.log.debug",
    "numpy.distutils.log.info",
    "numpy.distutils.mingw32ccompiler._check_for_import_lib",
    "numpy.distutils.mingw32ccompiler.find_python_dll",
    "numpy.distutils.mingw32ccompiler.generate_def",
    "numpy.distutils.mingw32ccompiler.os",
    "numpy.distutils.mingw32ccompiler.subprocess",
    "numpy.distutils.mingw32ccompiler.sys",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler._build_import_library_x86": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "hasattr",
    "numpy.distutils.lib2def.DEFAULT_NM",
    "numpy.distutils.lib2def.DEF_HEADER",
    "numpy.distutils.lib2def.getnm",
    "numpy.distutils.lib2def.output_def",
    "numpy.distutils.lib2def.parse_nm",
    "numpy.distutils.log.debug",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "numpy.distutils.mingw32ccompiler._check_for_import_lib",
    "numpy.distutils.mingw32ccompiler.find_python_dll",
    "numpy.distutils.mingw32ccompiler.os",
    "numpy.distutils.mingw32ccompiler.sys",
    "open",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler._check_for_import_lib": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "hasattr",
    "numpy.distutils.mingw32ccompiler.os",
    "numpy.distutils.mingw32ccompiler.sys",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.build_import_library": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ValueError",
    "numpy.distutils.mingw32ccompiler._build_import_library_amd64",
    "numpy.distutils.mingw32ccompiler._build_import_library_x86",
    "numpy.distutils.mingw32ccompiler.os",
    "numpy.distutils.misc_util.get_build_architecture"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.build_msvcr_library": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.distutils.log.debug",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "numpy.distutils.mingw32ccompiler.find_dll",
    "numpy.distutils.mingw32ccompiler.generate_def",
    "numpy.distutils.mingw32ccompiler.os",
    "numpy.distutils.mingw32ccompiler.subprocess",
    "numpy.distutils.mingw32ccompiler.sys",
    "numpy.distutils.misc_util.msvc_runtime_library",
    "numpy.distutils.misc_util.msvc_runtime_major"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.check_embedded_msvcr_match_linked": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.distutils.misc_util.msvc_runtime_major"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.configtest_name": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "numpy.distutils.mingw32ccompiler.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.distutils.cygwinccompiler": {
  "data": {
   "shadows": "distutils.cygwinccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.dump_table": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.distutils.mingw32ccompiler.subprocess"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_dll": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "_find_dll_in_path",
    "_find_dll_in_winsxs",
    "numpy.distutils.misc_util.get_build_architecture"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_dll._find_dll_in_path": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.distutils.mingw32ccompiler.os",
    "numpy.distutils.mingw32ccompiler.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_dll._find_dll_in_winsxs": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.distutils.mingw32ccompiler.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.find_python_dll": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "numpy.distutils.mingw32ccompiler.os",
    "numpy.distutils.mingw32ccompiler.sys",
    "print",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.gen_lib_options": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.gen_lib_options"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.gen_preprocess_options": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.gen_preprocess_options"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.generate_def": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.distutils.log.warn",
    "numpy.distutils.mingw32ccompiler._START",
    "numpy.distutils.mingw32ccompiler._TABLE",
    "numpy.distutils.mingw32ccompiler.dump_table",
    "numpy.distutils.mingw32ccompiler.os",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.generate_manifest": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "distutils.msvccompiler.get_build_version",
    "int",
    "numpy.distutils.mingw32ccompiler.check_embedded_msvcr_match_linked",
    "numpy.distutils.mingw32ccompiler.manifest_name",
    "numpy.distutils.mingw32ccompiler.msvc_manifest_xml",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.get_build_architecture": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_build_architecture"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.get_build_msvc_version": {
  "data": {
   "shadows": "distutils.msvccompiler.get_build_version"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.get_msvcr_replacement": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.msvc_runtime_library"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.lib2def": {
  "data": {
   "shadows": "numpy.distutils.lib2def"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.manifest_name": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "numpy.distutils.mingw32ccompiler.configtest_name"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.manifest_rc": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "ValueError",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.msvc_manifest_xml": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "min",
    "numpy.distutils.mingw32ccompiler._MSVCRVER_TO_FULLVER",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.msvc_runtime_library": {
  "data": {
   "shadows": "numpy.distutils.misc_util.msvc_runtime_library"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.msvc_runtime_major": {
  "data": {
   "shadows": "numpy.distutils.misc_util.msvc_runtime_major"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.msvc_runtime_version": {
  "data": {
   "shadows": "numpy.distutils.misc_util.msvc_runtime_version"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.msvcrt": {
  "data": {
   "shadows": "msvcrt"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.numpy.distutils.ccompiler": {
  "data": {
   "shadows": "numpy.distutils.ccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.rc_name": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "numpy.distutils.mingw32ccompiler.configtest_name"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.mingw32ccompiler.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.distutils.mingw32ccompiler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.msvc9compiler": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.msvc9compiler.MSVCCompiler": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "distutils.msvc9compiler.MSVCCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.msvc9compiler.MSVCCompiler.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "distutils.msvc9compiler.MSVCCompiler.__init__"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.msvc9compiler.MSVCCompiler.initialize": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "distutils.msvc9compiler.MSVCCompiler.initialize",
    "numpy.distutils.msvc9compiler._merge",
    "numpy.distutils.msvc9compiler.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.msvc9compiler.MSVCCompiler.manifest_setup_ldargs": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "distutils.msvc9compiler.MSVCCompiler.manifest_setup_ldargs"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.msvc9compiler._MSVCCompiler": {
  "data": {
   "shadows": "distutils.msvc9compiler.MSVCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.msvc9compiler._merge": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "numpy.distutils.msvc9compiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.msvc9compiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.msvc9compiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.msvc9compiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.msvccompiler": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.msvccompiler.MSVCCompiler": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "distutils.msvccompiler.MSVCCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.msvccompiler.MSVCCompiler.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "distutils.msvccompiler.MSVCCompiler.__init__"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.msvccompiler.MSVCCompiler.initialize": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "distutils.msvccompiler.MSVCCompiler.initialize",
    "numpy.distutils.msvccompiler._merge",
    "numpy.distutils.msvccompiler.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.msvccompiler._MSVCCompiler": {
  "data": {
   "shadows": "distutils.msvccompiler.MSVCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.msvccompiler._merge": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "numpy.distutils.msvccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.msvccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.msvccompiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.msvccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.new_fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.new_fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "len",
    "numpy.distutils.npy_pkg_config.d",
    "numpy.distutils.npy_pkg_config.files",
    "numpy.distutils.npy_pkg_config.glob",
    "numpy.distutils.npy_pkg_config.info",
    "numpy.distutils.npy_pkg_config.m",
    "numpy.distutils.npy_pkg_config.name",
    "numpy.distutils.npy_pkg_config.os",
    "numpy.distutils.npy_pkg_config.parser",
    "numpy.distutils.npy_pkg_config.pkg_name",
    "numpy.distutils.npy_pkg_config.re",
    "numpy.distutils.npy_pkg_config.read_config",
    "numpy.distutils.npy_pkg_config.section",
    "numpy.distutils.npy_pkg_config.sys",
    "numpy.distutils.npy_pkg_config.value",
    "optparse.OptionParser",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.npy_pkg_config.FormatError": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.FormatError.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.FormatError.__str__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.__str__": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.cflags": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config._escape_backslash"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.libs": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config._escape_backslash"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.LibraryInfo.sections": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.NoOptionError": {
  "data": {
   "shadows": "configparser.NoOptionError"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.PkgNotFound": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.PkgNotFound.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.PkgNotFound.__str__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.RawConfigParser": {
  "data": {
   "shadows": "configparser.RawConfigParser"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.VariableSet": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.__getitem__": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.__setitem__": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet._init_parse": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet._init_parse_var": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.interpolate": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "_interpolate",
    "numpy.distutils.npy_pkg_config._VAR"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.interpolate._interpolate": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.VariableSet.variables": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config._CACHE": {
  "data": {
   "lineno": 332
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config._VAR": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config._escape_backslash": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config._read_config_imp": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "_read_config",
    "numpy.distutils.npy_pkg_config.LibraryInfo",
    "numpy.distutils.npy_pkg_config.VariableSet",
    "numpy.distutils.npy_pkg_config._escape_backslash",
    "numpy.distutils.npy_pkg_config.os",
    "numpy.distutils.npy_pkg_config.sys",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config._read_config_imp._read_config": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "_read_config",
    "numpy.distutils.npy_pkg_config.parse_config",
    "numpy.distutils.npy_pkg_config.pkg_to_filename",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.d": {
  "data": {
   "lineno": 418
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.files": {
  "data": {
   "lineno": 411
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.info": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.m": {
  "data": {
   "lineno": 430
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.name": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.parse_config": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "configparser.RawConfigParser",
    "len",
    "numpy.distutils.npy_pkg_config.PkgNotFound",
    "numpy.distutils.npy_pkg_config._escape_backslash",
    "numpy.distutils.npy_pkg_config.os",
    "numpy.distutils.npy_pkg_config.parse_meta",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_flags": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_meta": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.FormatError"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_sections": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parse_variables": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.FormatError",
    "numpy.distutils.npy_pkg_config.VariableSet"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.parser": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.pkg_name": {
  "data": {
   "lineno": 416
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.pkg_to_filename": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.read_config": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "KeyError",
    "numpy.distutils.npy_pkg_config._CACHE",
    "numpy.distutils.npy_pkg_config._read_config_imp",
    "numpy.distutils.npy_pkg_config.pkg_to_filename"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.npy_pkg_config.section": {
  "data": {
   "lineno": 427
  },
  "type": "constant"
 },
 "numpy.distutils.npy_pkg_config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.npy_pkg_config.value": {
  "data": {
   "lineno": 436
  },
  "type": "constant"
 },
 "numpy.distutils.numpy_distribution": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.numpy_distribution.Distribution": {
  "data": {
   "shadows": "distutils.core.Distribution"
  },
  "type": "import"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "distutils.core.Distribution"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "distutils.core.Distribution.__init__"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution.has_scons_scripts": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.numpy_distribution.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.numpy_distribution.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.numpy_distribution.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.pathccompiler": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.pathccompiler.PathScaleCCompiler": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "distutils.unixccompiler.UnixCCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.pathccompiler.PathScaleCCompiler.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "distutils.unixccompiler.UnixCCompiler.__init__"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.pathccompiler.UnixCCompiler": {
  "data": {
   "shadows": "distutils.unixccompiler.UnixCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.pathccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.pathccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.pathccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.distutils.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.test": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.distutils.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.test_exec_command": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.tests.test_exec_command.sys",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_exec_command.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.TemporaryFile": {
  "data": {
   "shadows": "tempfile.TemporaryFile"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.check_basic": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.exec_command",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.check_execute_in": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.tests.test_exec_command.os",
    "numpy.testing.assert_",
    "numpy.testing.tempdir",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.check_nt": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.exec_command",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.check_posix": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.tests.test_exec_command.os",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.setup": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.get_pythonexe"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.TestExecCommand.test_basic": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "StringIO.StringIO",
    "numpy.distutils.tests.test_exec_command.os",
    "numpy.distutils.tests.test_exec_command.redirect_stderr",
    "numpy.distutils.tests.test_exec_command.redirect_stdout"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix.__enter__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_exec_command.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix.__exit__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_exec_command.os"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.emulate_nonposix.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.get_pythonexe": {
  "data": {
   "shadows": "numpy.distutils.exec_command.get_pythonexe"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr.__enter__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_exec_command.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr.__exit__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_exec_command.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stderr.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_exec_command.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout.__enter__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_exec_command.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout.__exit__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_exec_command.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.redirect_stdout.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_exec_command.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.tempdir": {
  "data": {
   "shadows": "numpy.testing.tempdir"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_exec_command.test_exec_command_stderr": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "StringIO.StringIO",
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.tests.test_exec_command.emulate_nonposix",
    "numpy.distutils.tests.test_exec_command.os",
    "numpy.distutils.tests.test_exec_command.redirect_stderr",
    "numpy.distutils.tests.test_exec_command.redirect_stdout",
    "tempfile.TemporaryFile"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_exec_command.test_exec_command_stdout": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "StringIO.StringIO",
    "numpy.distutils.exec_command.exec_command",
    "numpy.distutils.tests.test_exec_command.emulate_nonposix",
    "numpy.distutils.tests.test_exec_command.os",
    "numpy.distutils.tests.test_exec_command.redirect_stderr",
    "numpy.distutils.tests.test_exec_command.redirect_stdout",
    "tempfile.TemporaryFile"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions.test_g77_version": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_gnu.g77_version_strings",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions.test_not_g77": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_gnu.gfortran_version_strings",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGFortranVersions": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGFortranVersions.test_gfortran_version": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_gnu.gfortran_version_strings",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGFortranVersions.test_not_gfortran": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_gnu.g77_version_strings",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.g77_version_strings": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.gfortran_version_strings": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.numpy.distutils.fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_intel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelEM64TFCompilerVersions": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelEM64TFCompilerVersions.test_64bit_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_intel.intel_64bit_version_strings",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelFCompilerVersions": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_intel.TestIntelFCompilerVersions.test_32bit_version": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_intel.intel_32bit_version_strings",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_intel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_intel.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_intel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_intel.intel_32bit_version_strings": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_intel.intel_64bit_version_strings": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_intel.numpy.distutils.fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_intel.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_intel.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.TestNagFCompilerVersions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.TestNagFCompilerVersions.test_version_match": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_nagfor.nag_version_strings",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.nag_version_strings": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.numpy.distutils.fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_nagfor.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite",
    "os.path.join",
    "os.path.sep"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath.test_1": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.appendpath",
    "numpy.distutils.tests.test_misc_util.ajoin",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath.test_2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.appendpath",
    "numpy.distutils.tests.test_misc_util.ajoin",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestAppendpath.test_3": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.appendpath",
    "numpy.distutils.tests.test_misc_util.ajoin",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestGpaths": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestGpaths.test_gpaths": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.gpaths",
    "numpy.distutils.misc_util.minrelpath",
    "numpy.testing.assert_",
    "os.path.dirname",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestMinrelpath": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestMinrelpath.test_1": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "n",
    "numpy.distutils.misc_util.minrelpath",
    "numpy.testing.assert_equal",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.TestSharedExtension": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_misc_util.TestSharedExtension.test_get_shared_lib_extension": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.get_shared_lib_extension",
    "numpy.distutils.tests.test_misc_util.sys",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_misc_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.ajoin": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_misc_util.appendpath": {
  "data": {
   "shadows": "numpy.distutils.misc_util.appendpath"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.get_info": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_info"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.get_shared_lib_extension": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_shared_lib_extension"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.gpaths": {
  "data": {
   "shadows": "numpy.distutils.misc_util.gpaths"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.minrelpath": {
  "data": {
   "shadows": "numpy.distutils.misc_util.minrelpath"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_misc_util.test_installed_npymath_ini": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.get_info"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo.test_simple": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.read_config",
    "numpy.distutils.tests.test_npy_pkg_config.os",
    "numpy.distutils.tests.test_npy_pkg_config.simple",
    "numpy.distutils.tests.test_npy_pkg_config.simple_d",
    "numpy.testing.assert_",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo.test_simple_variable": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.read_config",
    "numpy.distutils.tests.test_npy_pkg_config.os",
    "numpy.distutils.tests.test_npy_pkg_config.simple_variable",
    "numpy.distutils.tests.test_npy_pkg_config.simple_variable_d",
    "numpy.testing.assert_",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags.test_simple_cflags": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.parse_flags",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags.test_simple_lflags": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.parse_flags",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.parse_flags": {
  "data": {
   "shadows": "numpy.distutils.npy_pkg_config.parse_flags"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.read_config": {
  "data": {
   "shadows": "numpy.distutils.npy_pkg_config.read_config"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple_d": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple_variable": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple_variable_d": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_npy_pkg_config.temppath": {
  "data": {
   "shadows": "numpy.testing.temppath"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.tests.test_system_info.have_compiler",
    "numpy.distutils.tests.test_system_info.simple_site",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_system_info.ConfigParser": {
  "data": {
   "shadows": "numpy.distutils.system_info.ConfigParser"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.DistutilsError": {
  "data": {
   "shadows": "distutils.errors.DistutilsError"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.HAVE_COMPILER": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_system_info.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.Temp1Info": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_system_info._system_info"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_system_info.Temp2Info": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_system_info._system_info"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.setup": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_system_info.fakelib_c_text",
    "numpy.distutils.tests.test_system_info.get_class",
    "numpy.distutils.tests.test_system_info.os",
    "numpy.distutils.tests.test_system_info.simple_site",
    "numpy.distutils.tests.test_system_info.site_cfg",
    "open",
    "site_and_parse",
    "tempfile.mkdtemp",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.setup.site_and_parse": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_system_info.site_cfg"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.tearDown": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Exception",
    "numpy.distutils.tests.test_system_info.os",
    "numpy.distutils.tests.test_system_info.shutil"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_all": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_compile1": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.distutils.customized_ccompiler",
    "numpy.distutils.tests.test_system_info.HAVE_COMPILER",
    "numpy.distutils.tests.test_system_info.os",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_compile2": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.new_compiler",
    "numpy.distutils.customized_ccompiler",
    "numpy.distutils.tests.test_system_info.HAVE_COMPILER",
    "numpy.distutils.tests.test_system_info.os",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_temp1": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.TestSystemInfoReading.test_temp2": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info._system_info": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.distutils.system_info.system_info"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_system_info._system_info.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.distutils.system_info.ConfigParser",
    "numpy.distutils.system_info.default_include_dirs",
    "numpy.distutils.system_info.default_lib_dirs"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info._system_info._check_libs": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.ccompiler": {
  "data": {
   "shadows": "numpy.distutils.ccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.customized_ccompiler": {
  "data": {
   "shadows": "numpy.distutils.customized_ccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.default_include_dirs": {
  "data": {
   "shadows": "numpy.distutils.system_info.default_include_dirs"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.default_lib_dirs": {
  "data": {
   "shadows": "numpy.distutils.system_info.default_lib_dirs"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.fakelib_c_text": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_system_info.get_class": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "cl"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.have_compiler": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "AttributeError",
    "OSError",
    "ValueError",
    "distutils.errors.DistutilsError",
    "numpy.distutils.customized_ccompiler",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_system_info.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.mkstemp": {
  "data": {
   "shadows": "tempfile.mkstemp"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_system_info.simple_site": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_system_info.site_cfg": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_system_info.system_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.system_info"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.ccompiler.replace_method",
    "numpy.distutils.unixccompiler.UnixCCompiler__compile",
    "numpy.distutils.unixccompiler.UnixCCompiler_create_static_lib"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.unixccompiler.CompileError": {
  "data": {
   "shadows": "distutils.errors.CompileError"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.DistutilsExecError": {
  "data": {
   "shadows": "distutils.errors.DistutilsExecError"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.UnixCCompiler__compile": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "distutils.errors.CompileError",
    "distutils.errors.DistutilsExecError",
    "distutils.sysconfig.get_config_vars",
    "getattr",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.misc_util._commandline_dep_string",
    "numpy.distutils.unixccompiler.os",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.unixccompiler.UnixCCompiler_create_static_lib": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "IOError",
    "LibError",
    "OSError",
    "distutils.errors.DistutilsExecError",
    "len",
    "numpy.distutils.compat.get_exception",
    "numpy.distutils.log.debug",
    "numpy.distutils.unixccompiler.os",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.unixccompiler._commandline_dep_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util._commandline_dep_string"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.get_config_vars": {
  "data": {
   "shadows": "distutils.sysconfig.get_config_vars"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.get_exception": {
  "data": {
   "shadows": "numpy.distutils.compat.get_exception"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.distutils.unixccompiler.replace_method": {
  "data": {
   "shadows": "numpy.distutils.ccompiler.replace_method"
  },
  "type": "import"
 },
 "numpy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc": {
  "data": {
   "symbols_in_volume": [
    "__import__",
    "__name__",
    "numpy.doc.__all__",
    "numpy.doc.os",
    "numpy.doc.ref_dir",
    "sorted"
   ]
  },
  "type": "module"
 },
 "numpy.doc.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.doc.__doc__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.doc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.basics": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.basics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.basics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.basics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.broadcasting": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.broadcasting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.broadcasting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.broadcasting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.byteswapping": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.byteswapping.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.byteswapping.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.byteswapping.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.creation": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.creation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.creation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.creation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.glossary": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.glossary.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.glossary.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.glossary.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.indexing": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.indexing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.indexing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.indexing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.internals": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.internals.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.internals.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.internals.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.misc": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.misc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.misc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.doc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.ref_dir": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.doc.structured_arrays": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.structured_arrays.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.structured_arrays.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.structured_arrays.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.subclassing": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.subclassing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.subclassing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.subclassing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.doc.ufuncs": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.ufuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.doc.ufuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.doc.ufuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.dual": {
  "data": {
   "symbols_in_volume": [
    "numpy.fft.fft",
    "numpy.fft.fft2",
    "numpy.fft.fftn",
    "numpy.fft.ifft",
    "numpy.fft.ifft2",
    "numpy.fft.ifftn",
    "numpy.linalg.cholesky",
    "numpy.linalg.det",
    "numpy.linalg.eig",
    "numpy.linalg.eigh",
    "numpy.linalg.eigvals",
    "numpy.linalg.eigvalsh",
    "numpy.linalg.inv",
    "numpy.linalg.lstsq",
    "numpy.linalg.norm",
    "numpy.linalg.pinv",
    "numpy.linalg.solve",
    "numpy.linalg.svd"
   ]
  },
  "type": "module"
 },
 "numpy.dual.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.dual._restore_dict": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.dual.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.dual.cholesky": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.dual.det": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.dual.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.dual.eig": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.dual.eigh": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.dual.eigvals": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.dual.eigvalsh": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.dual.fft": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.dual.fft2": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.dual.fftn": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.dual.fftpkg": {
  "data": {
   "shadows": "numpy.fft"
  },
  "type": "import"
 },
 "numpy.dual.i0": {
  "data": {
   "shadows": "numpy.lib.i0"
  },
  "type": "import"
 },
 "numpy.dual.ifft": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.dual.ifft2": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.dual.ifftn": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.dual.inv": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.dual.linpkg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.dual.lstsq": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "numpy.dual.norm": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.dual.pinv": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.dual.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.dual.register_func": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dual.__all__",
    "numpy.dual._restore_dict",
    "numpy.dual.sys"
   ]
  },
  "type": "function"
 },
 "numpy.dual.restore_all": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.dual._restore_dict",
    "numpy.dual.restore_func"
   ]
  },
  "type": "function"
 },
 "numpy.dual.restore_func": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "numpy.dual.__all__",
    "numpy.dual._restore_dict",
    "numpy.dual.sys"
   ]
  },
  "type": "function"
 },
 "numpy.dual.solve": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.dual.svd": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.dual.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing._numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.f2py.__main__": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "numpy.f2py.__main__.i",
    "numpy.f2py.__main__.os",
    "numpy.f2py.__main__.sys",
    "numpy.f2py.main",
    "repr"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.__main__.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.__main__.i": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.f2py.__main__.main": {
  "data": {
   "shadows": "numpy.f2py.main"
  },
  "type": "import"
 },
 "numpy.f2py.__main__.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.__main__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.__version__": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "__svn_version__.version",
    "numpy.f2py.__version__.major",
    "numpy.f2py.__version__.version_info",
    "str"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.__version__.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.__version__.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.__version__.major": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.f2py.__version__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.__version__.version": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.f2py.__version__.version_info": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.f2py._numpy_tester": {
  "data": {
   "shadows": "numpy.testing._numpy_tester"
  },
  "type": "import"
 },
 "numpy.f2py.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.bench": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "errmess",
    "eval",
    "list",
    "numpy.f2py.capi_maps.__version__",
    "numpy.f2py.capi_maps.c2buildvalue_map",
    "numpy.f2py.capi_maps.c2py_map",
    "numpy.f2py.capi_maps.d",
    "numpy.f2py.capi_maps.f",
    "numpy.f2py.capi_maps.f2cmap_all",
    "numpy.f2py.capi_maps.os",
    "numpy.f2py.capi_maps.sys",
    "numpy.f2py.capi_maps.using_newcore",
    "open",
    "outmess"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.capi_maps.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.__version__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.c2buildvalue_map": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.c2capi_map": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.c2py_map": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.c2pycode_map": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.cb_routsign2map": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "gentitle",
    "hasnote",
    "iscomplexfunction",
    "isfunction",
    "isintent_callback",
    "isintent_in",
    "isintent_inout",
    "isoptional",
    "isstringfunction",
    "l_or",
    "numpy.f2py.capi_maps.cformat_map",
    "numpy.f2py.capi_maps.getctype",
    "numpy.f2py.capi_maps.getpydocsign",
    "numpy.f2py.capi_maps.getstrlength",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.cb_sign2map": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "dictappend",
    "hasnote",
    "isarray",
    "numpy.f2py.capi_maps.c2capi_map",
    "numpy.f2py.capi_maps.cformat_map",
    "numpy.f2py.capi_maps.getarrdims",
    "numpy.f2py.capi_maps.getctype",
    "numpy.f2py.capi_maps.getpydocsign",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.cformat_map": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.common_sign2map": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "dictappend",
    "hasnote",
    "isarray",
    "isstring",
    "isstringarray",
    "numpy.f2py.capi_maps.c2capi_map",
    "numpy.f2py.capi_maps.cformat_map",
    "numpy.f2py.capi_maps.getarrdims",
    "numpy.f2py.capi_maps.getarrdocsign",
    "numpy.f2py.capi_maps.getctype",
    "numpy.f2py.capi_maps.getpydocsign",
    "numpy.f2py.capi_maps.getstrlength"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.d": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.depargs": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.f": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.f2cmap_all": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.f2py_version": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.getarrdims": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "Exception",
    "errmess",
    "eval",
    "isarray",
    "isintent_in",
    "isscalar",
    "isstring",
    "len",
    "numpy.f2py.capi_maps.copy",
    "numpy.f2py.capi_maps.d",
    "numpy.f2py.capi_maps.depargs",
    "numpy.f2py.capi_maps.getstrlength",
    "numpy.f2py.capi_maps.re",
    "outmess",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.getarrdocsign": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "isarray",
    "isscalar",
    "isstring",
    "len",
    "numpy.f2py.capi_maps.c2py_map",
    "numpy.f2py.capi_maps.c2pycode_map",
    "numpy.f2py.capi_maps.getctype",
    "numpy.f2py.capi_maps.getstrlength",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.getctype": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "KeyError",
    "errmess",
    "isexternal",
    "isfunction",
    "issubroutine",
    "numpy.f2py.capi_maps.f2cmap_all",
    "numpy.f2py.capi_maps.os",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.getinit": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "eval",
    "hasinitvalue",
    "isarray",
    "iscomplex",
    "iscomplexarray",
    "isstring",
    "markoutercomma",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.getpydocsign": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "errmess",
    "hasinitvalue",
    "isarray",
    "isexternal",
    "isfunction",
    "isintent_in",
    "isintent_inout",
    "isintent_out",
    "isscalar",
    "isstring",
    "len",
    "numpy.f2py.capi_maps.c2py_map",
    "numpy.f2py.capi_maps.c2pycode_map",
    "numpy.f2py.capi_maps.getctype",
    "numpy.f2py.capi_maps.getinit",
    "numpy.f2py.capi_maps.getstrlength",
    "numpy.f2py.capi_maps.lcb2_map",
    "numpy.f2py.capi_maps.lcb_map",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.getstrlength": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "errmess",
    "isintent_hide",
    "isstring",
    "isstringfunction",
    "len",
    "numpy.f2py.capi_maps.re",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.lcb2_map": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.lcb_map": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.f2py.capi_maps.modsign2map": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "getpymethoddef",
    "getrestdoc",
    "getusercode",
    "getusercode1",
    "hasnote",
    "ismodule"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.routsign2map": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "debugcapi",
    "errmess",
    "gentitle",
    "getcallprotoargument",
    "getcallstatement",
    "getfortranname",
    "getusercode",
    "getusercode1",
    "hasnote",
    "hasresultnote",
    "isfunction",
    "isstringfunction",
    "numpy.f2py.capi_maps.c2buildvalue_map",
    "numpy.f2py.capi_maps.cformat_map",
    "numpy.f2py.capi_maps.getctype",
    "numpy.f2py.capi_maps.getpydocsign",
    "numpy.f2py.capi_maps.getstrlength",
    "numpy.f2py.capi_maps.lcb_map",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.sign2map": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "debugcapi",
    "dictappend",
    "errmess",
    "hasinitvalue",
    "hasnote",
    "isarray",
    "iscomplex",
    "iscomplexarray",
    "isexternal",
    "isfunction",
    "isintent_hide",
    "isintent_in",
    "isintent_inout",
    "isintent_out",
    "isscalar",
    "isstring",
    "l_and",
    "l_not",
    "len",
    "list",
    "map",
    "markoutercomma",
    "numpy.f2py.capi_maps.c2buildvalue_map",
    "numpy.f2py.capi_maps.c2capi_map",
    "numpy.f2py.capi_maps.cformat_map",
    "numpy.f2py.capi_maps.copy",
    "numpy.f2py.capi_maps.f",
    "numpy.f2py.capi_maps.getarrdims",
    "numpy.f2py.capi_maps.getctype",
    "numpy.f2py.capi_maps.getinit",
    "numpy.f2py.capi_maps.getpydocsign",
    "numpy.f2py.capi_maps.getstrlength",
    "numpy.f2py.capi_maps.lcb2_map",
    "numpy.f2py.capi_maps.lcb_map",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.capi_maps.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.capi_maps.using_newcore": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules": {
  "data": {
   "symbols_in_volume": [
    "l_and",
    "l_not",
    "l_or",
    "throw_error"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.cb_rules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.buildcallback": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "applyrules",
    "dictappend",
    "enumerate",
    "getargs",
    "isinstance",
    "isoptional",
    "isrequired",
    "list",
    "numpy.f2py.cb_rules.cb_arg_rules",
    "numpy.f2py.cb_rules.cb_map",
    "numpy.f2py.cb_rules.cb_rout_rules",
    "numpy.f2py.cb_rules.cb_routine_rules",
    "outmess",
    "replace",
    "str",
    "stripcomma"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.cb_rules.buildcallbacks": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "errmess",
    "numpy.f2py.cb_rules.buildcallback",
    "numpy.f2py.cb_rules.cb_map"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.cb_rules.cb_arg_rules": {
  "data": {
   "lineno": 277
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.cb_map": {
  "data": {
   "lineno": 437
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.cb_rout_rules": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.cb_routine_rules": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.f2py_version": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs": {
  "data": {
   "symbols_in_volume": [
    "numpy.f2py.cfuncs.cfuncs",
    "numpy.f2py.cfuncs.cppmacros",
    "numpy.f2py.cfuncs.includes",
    "numpy.f2py.cfuncs.includes0",
    "numpy.f2py.cfuncs.needs",
    "numpy.f2py.cfuncs.sys",
    "numpy.f2py.cfuncs.typedefs"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.cfuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs.append_needs": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "numpy.f2py.cfuncs.callbacks",
    "numpy.f2py.cfuncs.cfuncs",
    "numpy.f2py.cfuncs.commonhooks",
    "numpy.f2py.cfuncs.cppmacros",
    "numpy.f2py.cfuncs.errmess",
    "numpy.f2py.cfuncs.f90modhooks",
    "numpy.f2py.cfuncs.includes",
    "numpy.f2py.cfuncs.includes0",
    "numpy.f2py.cfuncs.needs",
    "numpy.f2py.cfuncs.outneeds",
    "numpy.f2py.cfuncs.typedefs",
    "numpy.f2py.cfuncs.typedefs_generated",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.cfuncs.buildcfuncs": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "numpy.f2py.cfuncs.cppmacros"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.cfuncs.callbacks": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.cfuncs": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.commonhooks": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs.cppmacros": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs.errmess": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.f2py_version": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.f90modhooks": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.get_needs": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "len",
    "map",
    "numpy.f2py.cfuncs.copy",
    "numpy.f2py.cfuncs.errmess",
    "numpy.f2py.cfuncs.needs",
    "numpy.f2py.cfuncs.outneeds",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.cfuncs.includes": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.includes0": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.needs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.outneeds": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.cfuncs.typedefs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.typedefs_generated": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.f2py.cfuncs.userincludes": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules": {
  "data": {
   "symbols_in_volume": [
    "numpy.f2py.common_rules.__version__"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.common_rules.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.buildhooks": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cadd",
    "dadd",
    "fadd",
    "hasnote",
    "iadd",
    "isinstance",
    "isintent_hide",
    "len",
    "list",
    "map",
    "numpy.f2py.common_rules.findcommonblocks",
    "outmess",
    "rmbadname",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.cadd": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.dadd": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.fadd": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.iadd": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.f2py_version": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.findcommonblocks": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "hasbody",
    "hascommon",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.compile": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.distutils.exec_command.exec_command",
    "numpy.f2py.sys",
    "numpy.f2py.tempfile",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.diagnose": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.f2py.diagnose.run"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.diagnose.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.build_flib": {
  "data": {
   "shadows": "numpy_distutils.command.build_flib"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.cpuinfo": {
  "data": {
   "shadows": "numpy_distutils.cpuinfo.cpuinfo"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.f2py2e": {
  "data": {
   "shadows": "numpy.f2py.f2py2e"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.fcompiler": {
  "data": {
   "shadows": "numpy_distutils.fcompiler"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.numpy.distutils": {
  "data": {
   "shadows": "numpy.distutils"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.numpy_distutils": {
  "data": {
   "shadows": "numpy_distutils"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.run": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "compiler_class",
    "dir",
    "getattr",
    "numpy.f2py.diagnose.numpy",
    "numpy.f2py.diagnose.numpy_distutils",
    "numpy.f2py.diagnose.os",
    "numpy.f2py.diagnose.sys",
    "numpy.f2py.diagnose.tempfile",
    "numpy.f2py.f2py2e.__file__",
    "numpy.f2py.f2py2e.__version__.version",
    "numpy_distutils.command.build_flib.all_compilers",
    "numpy_distutils.cpuinfo.cpuinfo",
    "numpy_distutils.fcompiler.show_fcompilers",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.diagnose.run_command": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.f2py.diagnose.os",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.diagnose.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.diagnose.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.f2py.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.__version__",
    "numpy.f2py.f2py2e.f2py_version",
    "numpy.f2py.f2py2e.pprint",
    "numpy.f2py.f2py2e.sys"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.f2py2e.Extension": {
  "data": {
   "shadows": "numpy.distutils.core.Extension"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.__usage__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.buildmodules": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len",
    "numpy.f2py.f2py2e.dict_append",
    "numpy.f2py.f2py2e.outmess",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.callcrackfortran": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.f2py.f2py2e.outmess",
    "numpy.f2py.f2py2e.sys",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.dict_append": {
  "data": {
   "shadows": "numpy.distutils.misc_util.dict_append"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.errmess": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.f2py_version": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.filter_files": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "len",
    "match",
    "numpy.f2py.f2py2e.re"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.get_f2py_modulename": {
  "data": {
   "shadows": "numpy.distutils.command.build_src.get_f2py_modulename"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.get_prefix": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.f2py.f2py2e.os"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.main": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.distutils.system_info.show_all",
    "numpy.f2py.f2py2e.run_compile",
    "numpy.f2py.f2py2e.run_main",
    "numpy.f2py.f2py2e.sys"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.numpy_version": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.outmess": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.run_compile": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "len",
    "list",
    "numpy.distutils.command.build_src.get_f2py_modulename",
    "numpy.distutils.core.Extension",
    "numpy.distutils.core.setup",
    "numpy.distutils.fcompiler.fcompiler_class.keys",
    "numpy.distutils.fcompiler.load_all_fcompiler_classes",
    "numpy.distutils.misc_util.dict_append",
    "numpy.distutils.system_info.get_info",
    "numpy.f2py.f2py2e.filter_files",
    "numpy.f2py.f2py2e.os",
    "numpy.f2py.f2py2e.outmess",
    "numpy.f2py.f2py2e.re",
    "numpy.f2py.f2py2e.shutil",
    "numpy.f2py.f2py2e.sys",
    "numpy.f2py.f2py2e.tempfile",
    "print",
    "range",
    "repr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.run_main": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.f2py.f2py2e.buildmodules",
    "numpy.f2py.f2py2e.callcrackfortran",
    "numpy.f2py.f2py2e.dict_append",
    "numpy.f2py.f2py2e.errmess",
    "numpy.f2py.f2py2e.os",
    "numpy.f2py.f2py2e.outmess",
    "numpy.f2py.f2py2e.scaninputline",
    "numpy.f2py.f2py2e.sys",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.scaninputline": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "IOError",
    "numpy.f2py.f2py2e.__usage__",
    "numpy.f2py.f2py2e.errmess",
    "numpy.f2py.f2py2e.f2py_version",
    "numpy.f2py.f2py2e.os",
    "numpy.f2py.f2py2e.outmess",
    "numpy.f2py.f2py2e.sys",
    "open",
    "print",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f2py2e.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.show": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.f2py.f2py2e.show_all": {
  "data": {
   "shadows": "numpy.distutils.system_info.show_all"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py.f2py_testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.cmdline": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "eval",
    "numpy.f2py.f2py_testing.re",
    "numpy.f2py.f2py_testing.sys"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f2py_testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.jiffies": {
  "data": {
   "shadows": "numpy.testing.jiffies"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.memusage": {
  "data": {
   "shadows": "numpy.testing.memusage"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing.run": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "numpy.testing.jiffies",
    "numpy.testing.memusage",
    "print",
    "repr",
    "runtest"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f2py_testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.f90mod_rules": {
  "data": {
   "symbols_in_volume": [
    "numpy.intp"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.f90mod_rules.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.f90mod_rules.buildhooks": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "applyrules",
    "cadd",
    "dadd",
    "dictappend",
    "eval",
    "fadd",
    "hasbody",
    "hasnote",
    "iadd",
    "isallocatable",
    "isfunction",
    "isinstance",
    "isroutine",
    "isstringarray",
    "l_or",
    "len",
    "list",
    "numpy.f2py.f90mod_rules.fgetdims1",
    "numpy.f2py.f90mod_rules.fgetdims2",
    "numpy.f2py.f90mod_rules.fgetdims2_sa",
    "numpy.f2py.f90mod_rules.findf90modules",
    "outmess",
    "print",
    "undo_rmbadname",
    "undo_rmbadname1"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.cadd": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.dadd": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.fadd": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.buildhooks.iadd": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.f90mod_rules.f2py_version": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.fgetdims1": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.fgetdims2": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.fgetdims2_sa": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.findf90modules": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "hasbody",
    "ismodule"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.f90mod_rules.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.f2py.f90mod_rules.options": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.f2py.f90mod_rules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py.func2subr.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.assubr": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "getfortranname",
    "isfunction_wrap",
    "isintent_out",
    "issubroutine_wrap",
    "numpy.f2py.func2subr.copy",
    "numpy.f2py.func2subr.createfuncwrapper",
    "numpy.f2py.func2subr.createsubrwrapper",
    "outmess"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.createfuncwrapper": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "add",
    "bool",
    "dict",
    "enumerate",
    "getfortranname",
    "isexternal",
    "isfunction",
    "isintent_in",
    "islogicalfunction",
    "ismoduleroutine",
    "isscalar",
    "numpy.f2py.func2subr.var2fixfortran",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.createfuncwrapper.add": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.createsubrwrapper": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "add",
    "bool",
    "dict",
    "enumerate",
    "getfortranname",
    "isexternal",
    "ismoduleroutine",
    "isscalar",
    "issubroutine",
    "numpy.f2py.func2subr.var2fixfortran",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.createsubrwrapper.add": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.f2py_version": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.var2fixfortran": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "outmess",
    "show",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.info": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.info.postpone_import": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.f2py.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.main": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.f2py.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.rules": {
  "data": {
   "symbols_in_volume": [
    "gentitle",
    "int",
    "l_and",
    "l_not",
    "l_or",
    "numpy.f2py.rules.__version__",
    "numpy.f2py.rules.generationtime",
    "numpy.f2py.rules.os",
    "numpy.f2py.rules.sepdict",
    "numpy.f2py.rules.time",
    "numpy.f2py.rules.typedef_need_dict"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.rules.__version__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.f2py.rules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.rules.arg_rules": {
  "data": {
   "lineno": 710
  },
  "type": "constant"
 },
 "numpy.f2py.rules.aux_rules": {
  "data": {
   "lineno": 624
  },
  "type": "constant"
 },
 "numpy.f2py.rules.buildapi": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "applyrules",
    "dictappend",
    "getargs2",
    "isinstance",
    "isintent_aux",
    "isintent_hide",
    "ismoduleroutine",
    "isoptional",
    "len",
    "list",
    "numpy.f2py.rules.arg_rules",
    "numpy.f2py.rules.aux_rules",
    "numpy.f2py.rules.check_rules",
    "numpy.f2py.rules.rout_rules",
    "numpy.f2py.rules.routine_rules",
    "numpy.f2py.rules.stnd",
    "outmess",
    "replace",
    "repr",
    "str",
    "stripcomma",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.rules.buildmodule": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "applyrules",
    "dictappend",
    "errmess",
    "ismoduleroutine",
    "len",
    "numpy.f2py.rules.buildapi",
    "numpy.f2py.rules.copy",
    "numpy.f2py.rules.defmod_rules",
    "numpy.f2py.rules.f2py_version",
    "numpy.f2py.rules.module_rules",
    "numpy.f2py.rules.options",
    "numpy.f2py.rules.os",
    "open",
    "outmess",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.rules.check_rules": {
  "data": {
   "lineno": 1124
  },
  "type": "constant"
 },
 "numpy.f2py.rules.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.rules.defmod_rules": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "numpy.f2py.rules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.rules.f2py_version": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "numpy.f2py.rules.generationtime": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "numpy.f2py.rules.module_rules": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "numpy.f2py.rules.options": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "numpy.f2py.rules.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.rules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.rules.rout_rules": {
  "data": {
   "lineno": 348
  },
  "type": "constant"
 },
 "numpy.f2py.rules.routine_rules": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "numpy.f2py.rules.sepdict": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "numpy.f2py.rules.stnd": {
  "data": {
   "lineno": 1341
  },
  "type": "constant"
 },
 "numpy.f2py.rules.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "numpy.f2py.rules.typedef_need_dict": {
  "data": {
   "lineno": 611
  },
  "type": "constant"
 },
 "numpy.f2py.run_main": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.f2py.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "__version__.version",
    "numpy.distutils.core.setup",
    "numpy.f2py.setup.config",
    "numpy.f2py.setup.configuration",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.f2py.setup.__version__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.f2py.setup._get_f2py_shebang": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.f2py.setup.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.setup.config": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "numpy.f2py.setup.configuration": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.setup.configuration.generate_f2py_py": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "distutils.dep_util.newer",
    "numpy.distutils.log.info",
    "numpy.f2py.setup._get_f2py_shebang",
    "numpy.f2py.setup.os",
    "numpy.f2py.setup.sys",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.setup.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.f2py.setup.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.f2py.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.f2py.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.setup.version": {
  "data": {
   "shadows": "__version__.version"
  },
  "type": "import"
 },
 "numpy.f2py.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.f2py.test": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "numpy.f2py.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py.tests.test_array_from_pyobj": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "exec",
    "numpy.clongdouble",
    "numpy.f2py.tests.test_array_from_pyobj.Intent",
    "numpy.f2py.tests.test_array_from_pyobj._cast_dict",
    "numpy.f2py.tests.test_array_from_pyobj._type_names",
    "numpy.f2py.tests.test_array_from_pyobj.setup_module",
    "numpy.f2py.tests.test_array_from_pyobj.sys",
    "numpy.intp",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.Type",
    "numpy.f2py.tests.test_array_from_pyobj.copy",
    "numpy.f2py.tests.test_array_from_pyobj.flags2names",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.f2py.tests.test_array_from_pyobj.wrap",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.__str__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.arr_equal": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.alltrue"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Array.has_shared_memory": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "isinstance",
    "numpy.f2py.tests.test_array_from_pyobj.wrap",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__getattr__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "getattr",
    "numpy.f2py.tests.test_array_from_pyobj.wrap"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__repr__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.__str__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.is_intent": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Intent.is_intent_exact": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.SkipTest": {
  "data": {
   "shadows": "numpy.testing.SkipTest"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestIntent": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.TestIntent.test_in_out": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.__new__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "isinstance",
    "numpy.core.multiarray.typeinfo.items",
    "numpy.dtype",
    "object.__new__",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type._init": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "getattr",
    "numpy.core.multiarray.typeinfo",
    "numpy.f2py.tests.test_array_from_pyobj.wrap",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.all_types": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_array_from_pyobj._type_names"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.cast_types": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_array_from_pyobj._cast_dict"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.equal_types": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.core.multiarray.typeinfo",
    "numpy.f2py.tests.test_array_from_pyobj.Type",
    "numpy.f2py.tests.test_array_from_pyobj._type_names"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.larger_types": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.core.multiarray.typeinfo",
    "numpy.f2py.tests.test_array_from_pyobj.Type",
    "numpy.f2py.tests.test_array_from_pyobj._type_names"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.Type.smaller_types": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.core.multiarray.typeinfo",
    "numpy.f2py.tests.test_array_from_pyobj.Type",
    "numpy.f2py.tests.test_array_from_pyobj._type_names"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._cast_dict": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_c_copy_in_from_23casttype": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_c_in_from_23casttype": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_c_in_from_23seq": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "len",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_c_inout_23seq": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_cache_hidden": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "SystemError",
    "ValueError",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_f_copy_in_from_23casttype": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_f_in_from_23casttype": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_f_inout_23seq": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "SystemError",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_hidden": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "SystemError",
    "ValueError",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_cache_from_2casttype": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "SystemError",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_cache_from_2casttype_failure": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "SystemError",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_copy_from_2casttype": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_from_23casttype": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_from_2casttype": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_in_from_2seq": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_inout_2seq": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "SystemError",
    "TypeError",
    "len",
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_inplace": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_inplace_from_casttype": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_optional_from_23seq": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "len",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_optional_from_2seq": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "len",
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._test_shared_memory.test_optional_none": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_array_from_pyobj.intent",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj._type_names": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "numpy.f2py.tests.test_array_from_pyobj.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.alltrue": {
  "data": {
   "shadows": "numpy.alltrue"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.clongdouble": {
  "data": {
   "shadows": "numpy.clongdouble"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.dtype": {
  "data": {
   "shadows": "numpy.dtype"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.flags2names": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "abs",
    "getattr",
    "numpy.f2py.tests.test_array_from_pyobj.wrap"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.flags_info": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_array_from_pyobj.flags2names",
    "numpy.f2py.tests.test_array_from_pyobj.wrap"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.intent": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "numpy.f2py.tests.test_array_from_pyobj.intp": {
  "data": {
   "shadows": "numpy.intp"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.setup_module": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_array_from_pyobj.os",
    "numpy.f2py.tests.test_array_from_pyobj.wrap",
    "numpy.testing.SkipTest"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_array_from_pyobj.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.typeinfo": {
  "data": {
   "shadows": "numpy.core.multiarray.typeinfo"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_array_from_pyobj.wrap": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.f2py.tests.test_array_from_pyobj.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_assumed_shape.TestAssumedShapeSumExample": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_assumed_shape._path"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_assumed_shape.TestAssumedShapeSumExample.test_all": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.testing.dec.slow",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_assumed_shape._path": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_assumed_shape.os"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_assumed_shape.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_assumed_shape.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_block_docstring": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_block_docstring.TestBlockDocString": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_block_docstring.TestBlockDocString.test_block_docstring": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_block_docstring.sys",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_block_docstring.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_block_docstring.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_block_docstring.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_block_docstring.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_block_docstring.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_block_docstring.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_block_docstring.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_block_docstring.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "A",
    "getattr",
    "numpy.f2py.tests.test_callback.math",
    "numpy.testing.assert_",
    "repr",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function.A": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function.A.__call__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.check_function.A.mth": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_all": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_docstring": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_callback.textwrap",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_string_callback": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "f",
    "getattr",
    "numpy.f2py.tests.test_callback.sys",
    "numpy.testing.assert_",
    "numpy.testing.dec.knownfailureif",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_string_callback.callback": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_string_callback_array": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "f",
    "getattr",
    "len",
    "numpy.f2py.tests.test_callback.sys",
    "numpy.testing.assert_",
    "numpy.testing.dec.knownfailureif",
    "numpy.zeros",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.TestF77Callback.test_string_callback_array.callback": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_callback.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_callback.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_common.TestCommonBlock": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_common._path"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_common.TestCommonBlock.test_common_block": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.f2py.tests.test_common.sys",
    "numpy.float64",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_common._path": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_common.os"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_common.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_common.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_common.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_common.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_kind.TestKind": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_kind._path"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_kind.TestKind.test_all": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.f2py.crackfortran._selected_int_kind_func",
    "numpy.f2py.crackfortran._selected_real_kind_func",
    "numpy.testing.assert_",
    "numpy.testing.dec.slow",
    "range",
    "selectedintkind",
    "selectedrealkind"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_kind._path": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_kind.os"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_kind.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.selected_int_kind": {
  "data": {
   "shadows": "numpy.f2py.crackfortran._selected_int_kind_func"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_kind.selected_real_kind": {
  "data": {
   "shadows": "numpy.f2py.crackfortran._selected_real_kind_func"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_mixed.TestMixed": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_mixed._path"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_mixed.TestMixed.test_all": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_mixed.TestMixed.test_docstring": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_mixed.textwrap",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_mixed._path": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_mixed.os"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_mixed.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_mixed.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_parameter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_parameter.TestParameters": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_parameter._path"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_both": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.float64",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_compound_int": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int32",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_integer_int": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int32",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_integer_long": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int64",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_no": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.float64",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_non_compound_int": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_real_double": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.float64",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_real_single": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.float32",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.TestParameters.test_constant_sum": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.float64",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter._path": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_parameter.os"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_parameter.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_parameter.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_parameter.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_parameter.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_parameter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_parameter.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_parameter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_parameter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_parameter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_parameter.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_regression.TestIntentInOut": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_regression._path"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_regression.TestIntentInOut.test_inout": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.float32",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_regression._path": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_regression.os"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_regression.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_regression.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_regression.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_return_character.TestF77ReturnCharacter": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_character.TestReturnCharacter"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_character.TestF77ReturnCharacter.test_all": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_character.TestF90ReturnCharacter": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_character.TestReturnCharacter"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_character.TestF90ReturnCharacter.test_all": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_character.TestReturnCharacter": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_character.TestReturnCharacter.check_function": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.array",
    "numpy.testing.assert_",
    "repr",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_character.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_character.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_return_complex.TestF77ReturnComplex": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_complex.TestReturnComplex"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_complex.TestF77ReturnComplex.test_all": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_complex.TestF90ReturnComplex": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_complex.TestReturnComplex"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_complex.TestF90ReturnComplex.test_all": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_complex.TestReturnComplex": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_complex.TestReturnComplex.check_function": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "IndexError",
    "OverflowError",
    "TypeError",
    "abs",
    "numpy.array",
    "numpy.compat.long",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "repr",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_complex.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_complex.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_return_integer.TestF77ReturnInteger": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_integer.TestReturnInteger"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_integer.TestF77ReturnInteger.test_all": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_integer.TestF90ReturnInteger": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_integer.TestReturnInteger"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_integer.TestF90ReturnInteger.test_all": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_integer.TestReturnInteger": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_integer.TestReturnInteger.check_function": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "OverflowError",
    "ValueError",
    "numpy.array",
    "numpy.compat.long",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "repr",
    "t",
    "t.__doc__.split"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_integer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_integer.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_return_logical.TestF77ReturnLogical": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_logical.TestReturnLogical"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_logical.TestF77ReturnLogical.test_all": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_logical.TestF90ReturnLogical": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_logical.TestReturnLogical"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_logical.TestF90ReturnLogical.test_all": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_logical.TestReturnLogical": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_logical.TestReturnLogical.check_function": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.compat.long",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "repr",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_logical.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_logical.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_return_real.TestCReturnReal": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_real.TestReturnReal"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestCReturnReal.test_all": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.TestF77ReturnReal": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_real.TestReturnReal"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestF77ReturnReal.test_all": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.TestF90ReturnReal": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_return_real.TestReturnReal"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestF90ReturnReal.test_all": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.TestReturnReal": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_return_real.TestReturnReal.check_function": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "OverflowError",
    "ValueError",
    "abs",
    "numpy.array",
    "numpy.compat.long",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "repr",
    "t",
    "t.__doc__.split"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_return_real.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_return_real.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_size._path"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample.test_all": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.testing.dec.slow",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample.test_flatten": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.testing.dec.slow",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_size.TestSizeSumExample.test_transpose": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.testing.dec.slow",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_size._path": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_size.os"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_size.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_size.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_string": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.test_string.TestString": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_string._path"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.test_string.TestString.test_char": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_string._path": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.f2py.tests.test_string.os"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.test_string.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_string.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_string.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_string.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_string.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_string.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_string.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.test_string.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.tests.util.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.F2PyTest": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.f2py.tests.util.F2PyTest.setup": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.f2py.tests.util.build_code",
    "numpy.f2py.tests.util.build_module",
    "numpy.f2py.tests.util.has_c_compiler",
    "numpy.f2py.tests.util.has_f77_compiler",
    "numpy.f2py.tests.util.has_f90_compiler",
    "numpy.f2py.tests.util.sys",
    "numpy.testing.SkipTest",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.SkipTest": {
  "data": {
   "shadows": "numpy.testing.SkipTest"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util._cleanup": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "ValueError",
    "numpy.f2py.tests.util._module_dir",
    "numpy.f2py.tests.util.shutil",
    "numpy.f2py.tests.util.sys"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util._compiler_status": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "numpy.f2py.tests.util._get_compiler_status": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "bool",
    "dict",
    "int",
    "numpy.f2py.tests.util._compiler_status",
    "numpy.f2py.tests.util.re",
    "numpy.f2py.tests.util.subprocess",
    "numpy.f2py.tests.util.sys",
    "numpy.testing.temppath",
    "open",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util._memoize": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "func.__name__"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util._memoize.wrapper": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "func",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util._module_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.f2py.tests.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.asstr": {
  "data": {
   "shadows": "numpy.compat.asstr"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.build_code": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.f2py.tests.util._memoize",
    "numpy.f2py.tests.util.build_module",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.build_module": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "RuntimeError",
    "importlib.import_module",
    "numpy.compat.asstr",
    "numpy.f2py.tests.util._memoize",
    "numpy.f2py.tests.util.get_module_dir",
    "numpy.f2py.tests.util.get_temp_module_name",
    "numpy.f2py.tests.util.os",
    "numpy.f2py.tests.util.shutil",
    "numpy.f2py.tests.util.subprocess",
    "numpy.f2py.tests.util.sys",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.build_module_distutils": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "RuntimeError",
    "__import__",
    "dict",
    "numpy.compat.asbytes",
    "numpy.compat.asstr",
    "numpy.f2py.tests.util._memoize",
    "numpy.f2py.tests.util.get_module_dir",
    "numpy.f2py.tests.util.get_temp_module_name",
    "numpy.f2py.tests.util.os",
    "numpy.f2py.tests.util.shutil",
    "numpy.f2py.tests.util.subprocess",
    "numpy.f2py.tests.util.sys",
    "numpy.f2py.tests.util.textwrap",
    "open",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.get_module_dir": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.f2py.tests.util._cleanup",
    "numpy.f2py.tests.util._module_dir",
    "numpy.f2py.tests.util.atexit",
    "numpy.f2py.tests.util.sys",
    "numpy.f2py.tests.util.tempfile"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.get_temp_module_name": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.f2py.tests.util.get_module_dir",
    "numpy.f2py.tests.util.os",
    "numpy.f2py.tests.util.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.has_c_compiler": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.f2py.tests.util._get_compiler_status"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.has_f77_compiler": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.f2py.tests.util._get_compiler_status"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.has_f90_compiler": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.f2py.tests.util._get_compiler_status"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.tests.util.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.md5": {
  "data": {
   "shadows": "md5.new"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.numpy.f2py": {
  "data": {
   "shadows": "numpy.f2py"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.temppath": {
  "data": {
   "shadows": "numpy.testing.temppath"
  },
  "type": "import"
 },
 "numpy.f2py.tests.util.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.f2py.use_rules": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py.use_rules.__version__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.f2py.use_rules.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.f2py.use_rules.buildusevar": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "applyrules",
    "dictappend",
    "gentitle",
    "hasnote",
    "numpy.f2py.use_rules.usemodule_rules",
    "outmess",
    "print",
    "repr",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.use_rules.buildusevars": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dictappend",
    "numpy.f2py.use_rules.buildusevar",
    "outmess"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.use_rules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.f2py.use_rules.f2py_version": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.f2py.use_rules.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.f2py.use_rules.usemodule_rules": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.fft": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing._numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.fft._numpy_tester": {
  "data": {
   "shadows": "numpy.testing._numpy_tester"
  },
  "type": "import"
 },
 "numpy.fft.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.bench": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.fft.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.fftpack": {
  "data": {
   "symbols_in_volume": [
    "_FFTCache"
   ]
  },
  "type": "module"
 },
 "numpy.fft.fftpack.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.fft.fftpack._cook_nd_args": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.core.take",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack._fft_cache": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.fft.fftpack._raw_fft": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "init_function",
    "len",
    "list",
    "numpy.core.asarray",
    "numpy.core.swapaxes",
    "numpy.core.zeros",
    "numpy.fft.fftpack._fft_cache",
    "slice",
    "work_function"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack._raw_fftnd": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "function",
    "len",
    "list",
    "numpy.core.asarray",
    "numpy.fft.fftpack._cook_nd_args",
    "numpy.fft.fftpack.fft",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack._real_fft_cache": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.fft.fftpack._unitary": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.array": {
  "data": {
   "shadows": "numpy.core.array"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.conjugate": {
  "data": {
   "shadows": "numpy.core.conjugate"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.fft": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "complex",
    "numpy.core.asarray",
    "numpy.core.sqrt",
    "numpy.fft.fftpack._fft_cache",
    "numpy.fft.fftpack._raw_fft",
    "numpy.fft.fftpack._unitary"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.fft2": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "numpy.fft.fftpack._raw_fftnd",
    "numpy.fft.fftpack.fft"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.fftn": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "numpy.fft.fftpack._raw_fftnd",
    "numpy.fft.fftpack.fft"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.fftpack": {
  "data": {
   "shadows": "fftpack_lite"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.hfft": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "complex",
    "numpy.core.array",
    "numpy.core.conjugate",
    "numpy.core.sqrt",
    "numpy.fft.fftpack._unitary",
    "numpy.fft.fftpack.irfft"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.ifft": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "complex",
    "numpy.core.array",
    "numpy.core.sqrt",
    "numpy.fft.fftpack._fft_cache",
    "numpy.fft.fftpack._raw_fft",
    "numpy.fft.fftpack._unitary"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.ifft2": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "numpy.fft.fftpack._raw_fftnd",
    "numpy.fft.fftpack.ifft"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.ifftn": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "numpy.fft.fftpack._raw_fftnd",
    "numpy.fft.fftpack.ifft"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.ihfft": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "float",
    "numpy.core.array",
    "numpy.core.conjugate",
    "numpy.core.sqrt",
    "numpy.fft.fftpack._unitary",
    "numpy.fft.fftpack.rfft"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.irfft": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "complex",
    "numpy.core.array",
    "numpy.core.sqrt",
    "numpy.fft.fftpack._raw_fft",
    "numpy.fft.fftpack._real_fft_cache",
    "numpy.fft.fftpack._unitary"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.irfft2": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "numpy.fft.fftpack.irfftn"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.irfftn": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "complex",
    "len",
    "numpy.core.array",
    "numpy.fft.fftpack._cook_nd_args",
    "numpy.fft.fftpack.ifft",
    "numpy.fft.fftpack.irfft",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.rfft": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "float",
    "numpy.core.array",
    "numpy.core.sqrt",
    "numpy.fft.fftpack._raw_fft",
    "numpy.fft.fftpack._real_fft_cache",
    "numpy.fft.fftpack._unitary"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.rfft2": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "numpy.fft.fftpack.rfftn"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.rfftn": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.core.array",
    "numpy.fft.fftpack._cook_nd_args",
    "numpy.fft.fftpack.fft",
    "numpy.fft.fftpack.rfft",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.fftpack.shape": {
  "data": {
   "shadows": "numpy.core.shape"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.sqrt": {
  "data": {
   "shadows": "numpy.core.sqrt"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.swapaxes": {
  "data": {
   "shadows": "numpy.core.swapaxes"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.take": {
  "data": {
   "shadows": "numpy.core.take"
  },
  "type": "import"
 },
 "numpy.fft.fftpack.zeros": {
  "data": {
   "shadows": "numpy.core.zeros"
  },
  "type": "import"
 },
 "numpy.fft.helper": {
  "data": {
   "symbols_in_volume": [
    "numpy.compat.integer_types",
    "numpy.core.integer"
   ]
  },
  "type": "module"
 },
 "numpy.fft.helper._FFTCache": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.fft.helper._FFTCache.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.fft.helper.collections",
    "numpy.fft.helper.threading"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper._FFTCache._check_size": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "max",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper._FFTCache._prune_cache": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper._FFTCache.pop_twiddle_factors": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "numpy.fft.helper._FFTCache.put_twiddle_factors": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.fft.helper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.helper.arange": {
  "data": {
   "shadows": "numpy.core.arange"
  },
  "type": "import"
 },
 "numpy.fft.helper.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.fft.helper.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.fft.helper.concatenate": {
  "data": {
   "shadows": "numpy.core.concatenate"
  },
  "type": "import"
 },
 "numpy.fft.helper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.helper.empty": {
  "data": {
   "shadows": "numpy.core.empty"
  },
  "type": "import"
 },
 "numpy.fft.helper.fftfreq": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "numpy.compat.integer_types",
    "numpy.core.arange",
    "numpy.core.empty"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper.fftshift": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.compat.integer_types",
    "numpy.core.arange",
    "numpy.core.asarray",
    "numpy.core.concatenate",
    "numpy.core.take",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper.ifftshift": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.compat.integer_types",
    "numpy.core.arange",
    "numpy.core.asarray",
    "numpy.core.concatenate",
    "numpy.core.take",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper.integer": {
  "data": {
   "shadows": "numpy.core.integer"
  },
  "type": "import"
 },
 "numpy.fft.helper.integer_types": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.fft.helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.helper.rfftfreq": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "numpy.compat.integer_types",
    "numpy.core.arange"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper.take": {
  "data": {
   "shadows": "numpy.core.take"
  },
  "type": "import"
 },
 "numpy.fft.helper.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "numpy.fft.info": {
  "data": {},
  "type": "module"
 },
 "numpy.fft.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.info.depends": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "numpy.fft.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.fft.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.fft.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.fft.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.fft.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.fft.test": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.fft.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.fft.tests.test_fftpack": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.fft.tests.test_fftpack.sys",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_all_1d_norm_preserving": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "back",
    "forw",
    "numpy.fft.fft",
    "numpy.fft.hfft",
    "numpy.fft.ifft",
    "numpy.fft.ihfft",
    "numpy.fft.irfft",
    "numpy.fft.rfft",
    "numpy.linalg.norm",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_fft": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.fft.fft",
    "numpy.fft.tests.test_fftpack.fft1",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_fft2": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.fft.fft",
    "numpy.fft.fft2",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_fftn": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.fft.fft",
    "numpy.fft.fftn",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_hfft": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.fft.fft",
    "numpy.fft.hfft",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_ifft": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.fft.fft",
    "numpy.fft.ifft",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_ifft2": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.fft.ifft",
    "numpy.fft.ifft2",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_ifftn": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.fft.ifft",
    "numpy.fft.ifftn",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_ihttf": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.fft.hfft",
    "numpy.fft.ihfft",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_irfft": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.fft.irfft",
    "numpy.fft.rfft",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_irfft2": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.fft.irfft2",
    "numpy.fft.rfft2",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_irfftn": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.fft.irfftn",
    "numpy.fft.rfftn",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_rfft": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.fft.fft",
    "numpy.fft.rfft",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_rfft2": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.fft.fft2",
    "numpy.fft.rfft2",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_rfftn": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.fft.fftn",
    "numpy.fft.rfftn",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTShift": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.fft.tests.test_fftpack.TestFFTShift.test_fft_n": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "numpy.fft.fft",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe._test_mtsame": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Queue.Queue",
    "func",
    "numpy.fft.tests.test_fftpack.threading",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe._test_mtsame.worker": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe.test_fft": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.fft.fft",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe.test_ifft": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.fft.ifft",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe.test_irfft": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.fft.irfft",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTThreadSafe.test_rfft": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.fft.rfft",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.fft1": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.exp",
    "numpy.pi",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.queue": {
  "data": {
   "shadows": "Queue"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.random": {
  "data": {
   "shadows": "numpy.random.random"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_fftpack.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.fft.tests.test_helper.TestFFTCache": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestFFTCache.test_automatic_pruning": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "list",
    "numpy.empty",
    "numpy.fft.helper._FFTCache",
    "numpy.float32",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTCache.test_basic_behaviour": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "numpy.fft.helper._FFTCache",
    "numpy.float32",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTFreq": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestFFTFreq.test_definition": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.fft.fftfreq",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_axes_keyword": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.fft.fftshift",
    "numpy.fft.ifftshift",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_definition": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.fft.fftshift",
    "numpy.fft.ifftshift",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_inverse": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.fft.fftshift",
    "numpy.fft.ifftshift",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestIRFFTN": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestIRFFTN.test_not_last_axis_success": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.fft.irfftn",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestRFFTFreq": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestRFFTFreq.test_definition": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.fft.rfftfreq",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper._FFTCache": {
  "data": {
   "shadows": "numpy.fft.helper._FFTCache"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.fft": {
  "data": {
   "shadows": "numpy.fft"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.float": {
  "data": {
   "shadows": "__builtin__.float"
  },
  "type": "import"
 },
 "numpy.int": {
  "data": {
   "shadows": "__builtin__.int"
  },
  "type": "import"
 },
 "numpy.lib": {
  "data": {
   "symbols_in_volume": [
    "numpy.lib.__all__",
    "numpy.testing._numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.lib.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.lib.__version__": {
  "data": {
   "shadows": "numpy.version.version"
  },
  "type": "import"
 },
 "numpy.lib._iotools": {
  "data": {
   "symbols_in_volume": [
    "builtins.str",
    "numpy.lib._iotools.sys"
   ]
  },
  "type": "module"
 },
 "numpy.lib._iotools.ConversionWarning": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.ConverterError": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.ConverterLockError": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.lib._iotools.ConverterError"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.LineSplitter": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "__builtin__.object"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.LineSplitter.__call__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.lib._iotools._decode_line"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "__builtin__.int",
    "hasattr",
    "isinstance",
    "list",
    "numpy.compat.basestring",
    "numpy.cumsum",
    "numpy.lib._iotools._decode_line",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._delimited_splitter": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._fixedwidth_splitter": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "len",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._variablewidth_splitter": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter.autostrip": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "input",
    "method"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "__builtin__.object",
    "set"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.NameValidator.__call__": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator.__init__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator.validate": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "case_converter",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.compat.basestring",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "__builtin__.complex",
    "__builtin__.float",
    "__builtin__.int",
    "__builtin__.object",
    "numpy.compat.asbytes",
    "numpy.compat.asunicode",
    "numpy.core.numeric.bool_",
    "numpy.core.numeric.complexfloating",
    "numpy.core.numeric.dtype",
    "numpy.core.numeric.floating",
    "numpy.core.numeric.int64",
    "numpy.core.numeric.integer",
    "numpy.core.numeric.longdouble",
    "numpy.core.numeric.nan",
    "numpy.core.numeric.string_",
    "numpy.core.numeric.unicode_",
    "numpy.lib._iotools.str2bool",
    "zip"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.StringConverter.__call__": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.__init__": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "__builtin__.bool",
    "__builtin__.float",
    "__builtin__.int",
    "enumerate",
    "hasattr",
    "isinstance",
    "issubclass",
    "list",
    "numpy.compat.basestring",
    "numpy.dtype",
    "numpy.int64",
    "numpy.issubdtype",
    "numpy.lib._iotools.str2bool",
    "numpy.uint64",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._dtypeortype": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "classmethod",
    "numpy.datetime64"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._getdtype": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._getsubdtype": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._loose_call": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._strict_call": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "__builtin__.int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.iterupgrade": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "ValueError",
    "_strict_call",
    "hasattr",
    "len",
    "numpy.lib._iotools.ConverterError",
    "numpy.lib._iotools.ConverterLockError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.update": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "func",
    "isinstance",
    "numpy.compat.basestring",
    "numpy.iterable",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.upgrade": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.lib._iotools.ConverterError",
    "numpy.lib._iotools.ConverterLockError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.upgrade_mapper": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.__docformat__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.lib._iotools._decode_line": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.compat.bytes",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools._is_bytes_like": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools._is_string_like": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools._to_filehandle": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "file",
    "hasattr",
    "numpy.lib._iotools._is_string_like",
    "numpy.lib._iotools.bz2",
    "numpy.lib._iotools.gzip"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib._iotools.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.lib._iotools.asbytes_nested": {
  "data": {
   "shadows": "numpy.compat.asbytes_nested"
  },
  "type": "import"
 },
 "numpy.lib._iotools.asunicode": {
  "data": {
   "shadows": "numpy.compat.asunicode"
  },
  "type": "import"
 },
 "numpy.lib._iotools.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.lib._iotools.bool": {
  "data": {
   "shadows": "__builtin__.bool"
  },
  "type": "import"
 },
 "numpy.lib._iotools.bytes": {
  "data": {
   "shadows": "numpy.compat.bytes"
  },
  "type": "import"
 },
 "numpy.lib._iotools.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "numpy.lib._iotools.complex": {
  "data": {
   "shadows": "__builtin__.complex"
  },
  "type": "import"
 },
 "numpy.lib._iotools.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib._iotools.easy_dtype": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.compat.basestring",
    "numpy.dtype",
    "numpy.lib._iotools.NameValidator",
    "range",
    "tuple",
    "validate",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.flatten_dtype": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "__builtin__.int",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.float": {
  "data": {
   "shadows": "__builtin__.float"
  },
  "type": "import"
 },
 "numpy.lib._iotools.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "numpy.lib._iotools.has_nested_fields": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "numpy.lib._iotools.int": {
  "data": {
   "shadows": "__builtin__.int"
  },
  "type": "import"
 },
 "numpy.lib._iotools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib._iotools.nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib._iotools.object": {
  "data": {
   "shadows": "__builtin__.object"
  },
  "type": "import"
 },
 "numpy.lib._iotools.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib._iotools.str": {
  "data": {
   "shadows": "__builtin__.str"
  },
  "type": "import"
 },
 "numpy.lib._iotools.str2bool": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib._iotools.unicode": {
  "data": {
   "shadows": "__builtin__.unicode"
  },
  "type": "import"
 },
 "numpy.lib._numpy_tester": {
  "data": {
   "shadows": "numpy.testing._numpy_tester"
  },
  "type": "import"
 },
 "numpy.lib._version": {
  "data": {},
  "type": "module"
 },
 "numpy.lib._version.NumpyVersion": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "numpy.lib._version.NumpyVersion.__eq__": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__ge__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__gt__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "numpy.lib._version.re"
   ]
  },
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__le__": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__lt__": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__ne__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion.__repr": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion._compare": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.compat.basestring",
    "numpy.lib._version.NumpyVersion"
   ]
  },
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion._compare_pre_release": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "numpy.lib._version.NumpyVersion._compare_version": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "numpy.lib._version.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.lib._version.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib._version.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.lib._version.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib._version.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib._version.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.lib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.arraypad": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.arraypad.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.lib.arraypad._append_const": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_edge": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_max": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "numpy.lib.arraypad._append_edge",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_mean": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "numpy.lib.arraypad._append_edge",
    "numpy.lib.arraypad._round_ifneeded",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_med": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "numpy.lib.arraypad._append_edge",
    "numpy.lib.arraypad._round_ifneeded",
    "numpy.median",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_min": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "numpy.lib.arraypad._append_edge",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._append_ramp": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.lib.arraypad._arange_ndarray",
    "numpy.lib.arraypad._round_ifneeded",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._arange_ndarray": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._normalize_shape": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.round",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._pad_ref": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._pad_sym": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._pad_wrap": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_const": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_edge": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_max": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "numpy.lib.arraypad._prepend_edge",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_mean": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "numpy.lib.arraypad._prepend_edge",
    "numpy.lib.arraypad._round_ifneeded",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_med": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "numpy.lib.arraypad._prepend_edge",
    "numpy.lib.arraypad._round_ifneeded",
    "numpy.median",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_min": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "enumerate",
    "numpy.concatenate",
    "numpy.lib.arraypad._prepend_edge",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._prepend_ramp": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.lib.arraypad._arange_ndarray",
    "numpy.lib.arraypad._round_ifneeded",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._round_ifneeded": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.integer",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad._validate_lengths": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.arraypad._normalize_shape"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.arraypad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.arraypad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.arraypad.pad": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "isinstance",
    "list",
    "min",
    "numpy.apply_along_axis",
    "numpy.array",
    "numpy.asarray",
    "numpy.compat.basestring",
    "numpy.lib.arraypad._append_const",
    "numpy.lib.arraypad._append_edge",
    "numpy.lib.arraypad._append_max",
    "numpy.lib.arraypad._append_mean",
    "numpy.lib.arraypad._append_med",
    "numpy.lib.arraypad._append_min",
    "numpy.lib.arraypad._append_ramp",
    "numpy.lib.arraypad._normalize_shape",
    "numpy.lib.arraypad._pad_ref",
    "numpy.lib.arraypad._pad_sym",
    "numpy.lib.arraypad._pad_wrap",
    "numpy.lib.arraypad._prepend_const",
    "numpy.lib.arraypad._prepend_edge",
    "numpy.lib.arraypad._prepend_max",
    "numpy.lib.arraypad._prepend_mean",
    "numpy.lib.arraypad._prepend_med",
    "numpy.lib.arraypad._prepend_min",
    "numpy.lib.arraypad._prepend_ramp",
    "numpy.lib.arraypad._validate_lengths",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraypad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.arraysetops.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.lib.arraysetops._unique1d": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.empty",
    "numpy.intp",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.ediff1d": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.asanyarray",
    "numpy.empty",
    "numpy.subtract"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.in1d": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.ones",
    "numpy.unique",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.intersect1d": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.lib.arraysetops.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.isin": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.lib.arraysetops.in1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.setdiff1d": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.lib.arraysetops.in1d",
    "numpy.lib.arraysetops.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.setxor1d": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.lib.arraysetops.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.union1d": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.lib.arraysetops.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.unique": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.asanyarray",
    "numpy.ascontiguousarray",
    "numpy.lib.arraysetops._unique1d",
    "numpy.swapaxes",
    "range",
    "reshape_uniq"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.unique.reshape_uniq": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.swapaxes"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.arrayterator.Arrayterator": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.arrayterator.Arrayterator.__array__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__getattr__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__getitem__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Ellipsis",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "min",
    "numpy.compat.long",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__init__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__iter__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "functools.reduce",
    "min",
    "operator.mul",
    "range",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.flat": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.shape": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.lib.arrayterator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "numpy.lib.bench": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.lib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.emath": {
  "data": {
   "shadows": "scimath"
  },
  "type": "import"
 },
 "numpy.lib.financial": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.financial.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.lib.financial.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.lib.financial._convert_when": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "isinstance",
    "numpy.lib.financial._when_to_num",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial._g_div_gp": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "numpy.lib.financial._rbl": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.lib.financial.fv",
    "numpy.lib.financial.pmt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial._when_to_num": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.lib.financial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.financial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.financial.fv": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "map",
    "numpy.asarray",
    "numpy.lib.financial._convert_when",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.ipmt": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "IndexError",
    "numpy.broadcast_arrays",
    "numpy.lib.financial._convert_when",
    "numpy.lib.financial._rbl",
    "numpy.lib.financial.fv",
    "numpy.lib.financial.nper",
    "numpy.lib.financial.pmt",
    "numpy.logical_and",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.irr": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmin",
    "numpy.lib.financial.rate",
    "numpy.nan",
    "numpy.roots"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.mirr": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "decimal.Decimal",
    "isinstance",
    "numpy.abs",
    "numpy.asarray",
    "numpy.lib.financial.npv",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.financial.nper": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "FloatingPointError",
    "map",
    "numpy.asarray",
    "numpy.errstate",
    "numpy.lib.financial._convert_when",
    "numpy.lib.financial.fv",
    "numpy.lib.financial.pmt",
    "numpy.log",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.npv": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.lib.financial.rate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.pmt": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "map",
    "numpy.array",
    "numpy.lib.financial._convert_when",
    "numpy.lib.financial.fv",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.ppmt": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "numpy.lib.financial.fv",
    "numpy.lib.financial.ipmt",
    "numpy.lib.financial.nper",
    "numpy.lib.financial.pmt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.financial.pv": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "map",
    "numpy.asarray",
    "numpy.lib.financial._convert_when",
    "numpy.lib.financial.fv",
    "numpy.lib.financial.nper",
    "numpy.lib.financial.pmt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.rate": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "abs",
    "decimal.Decimal",
    "default_type",
    "float",
    "isinstance",
    "map",
    "numpy.all",
    "numpy.asarray",
    "numpy.lib.financial._convert_when",
    "numpy.lib.financial._g_div_gp",
    "numpy.lib.financial.fv",
    "numpy.lib.financial.nper",
    "numpy.lib.financial.pmt",
    "numpy.lib.financial.pv",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base": {
  "data": {
   "symbols_in_volume": [
    "numpy.lib.function_base._ARGUMENT",
    "numpy.lib.function_base._ARGUMENT_LIST",
    "numpy.lib.function_base._CORE_DIMENSION_LIST",
    "numpy.lib.function_base._DIMENSION_NAME",
    "numpy.lib.function_base._hist_bin_auto",
    "numpy.lib.function_base._hist_bin_doane",
    "numpy.lib.function_base._hist_bin_fd",
    "numpy.lib.function_base._hist_bin_rice",
    "numpy.lib.function_base._hist_bin_scott",
    "numpy.lib.function_base._hist_bin_sqrt",
    "numpy.lib.function_base._hist_bin_sturges",
    "numpy.lib.function_base.sys"
   ]
  },
  "type": "module"
 },
 "numpy.lib.function_base.AxisError": {
  "data": {
   "shadows": "numpy.core.numeric.AxisError"
  },
  "type": "import"
 },
 "numpy.lib.function_base._ARGUMENT": {
  "data": {
   "lineno": 2438
  },
  "type": "constant"
 },
 "numpy.lib.function_base._ARGUMENT_LIST": {
  "data": {
   "lineno": 2439
  },
  "type": "constant"
 },
 "numpy.lib.function_base._CORE_DIMENSION_LIST": {
  "data": {
   "lineno": 2437
  },
  "type": "constant"
 },
 "numpy.lib.function_base._DIMENSION_NAME": {
  "data": {
   "lineno": 2436
  },
  "type": "constant"
 },
 "numpy.lib.function_base._SIGNATURE": {
  "data": {
   "lineno": 2440
  },
  "type": "constant"
 },
 "numpy.lib.function_base.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.lib.function_base._calculate_shapes": {
  "data": {
   "lineno": 2529,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._chbevl": {
  "data": {
   "lineno": 3661,
   "symbols_in_volume": [
    "len",
    "numpy.lib.function_base.range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._create_arrays": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.lib.function_base._calculate_shapes",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._hist_bin_auto": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "min",
    "numpy.lib.function_base._hist_bin_fd",
    "numpy.lib.function_base._hist_bin_sturges"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._hist_bin_doane": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.log2",
    "numpy.mean",
    "numpy.power",
    "numpy.sqrt",
    "numpy.std",
    "numpy.true_divide"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._hist_bin_fd": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.percentile",
    "numpy.subtract"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._hist_bin_rice": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "numpy.lib.function_base._hist_bin_scott": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._hist_bin_selectors": {
  "data": {
   "lineno": 423
  },
  "type": "constant"
 },
 "numpy.lib.function_base._hist_bin_sqrt": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._hist_bin_sturges": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.log2"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._i0A": {
  "data": {
   "lineno": 3599
  },
  "type": "constant"
 },
 "numpy.lib.function_base._i0B": {
  "data": {
   "lineno": 3632
  },
  "type": "constant"
 },
 "numpy.lib.function_base._i0_1": {
  "data": {
   "lineno": 3673,
   "symbols_in_volume": [
    "numpy.core.umath.exp",
    "numpy.lib.function_base._chbevl",
    "numpy.lib.function_base._i0A"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._i0_2": {
  "data": {
   "lineno": 3677,
   "symbols_in_volume": [
    "numpy.core.umath.exp",
    "numpy.core.umath.sqrt",
    "numpy.lib.function_base._chbevl",
    "numpy.lib.function_base._i0B"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._insert": {
  "data": {
   "shadows": "numpy.core.multiarray._insert"
  },
  "type": "import"
 },
 "numpy.lib.function_base._median": {
  "data": {
   "lineno": 4125,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.core.fromnumeric.mean",
    "numpy.core.fromnumeric.partition",
    "numpy.inexact",
    "numpy.issubdtype",
    "numpy.lib.utils._median_nancheck",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.function_base._parse_gufunc_signature": {
  "data": {
   "lineno": 2443,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.function_base._ARGUMENT",
    "numpy.lib.function_base._DIMENSION_NAME",
    "numpy.lib.function_base._SIGNATURE",
    "numpy.lib.function_base.re",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._parse_input_dimensions": {
  "data": {
   "lineno": 2500,
   "symbols_in_volume": [
    "len",
    "numpy.lib.function_base._update_dim_sizes",
    "numpy.lib.stride_tricks._broadcast_shape",
    "numpy.lib.stride_tricks.as_strided",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._percentile": {
  "data": {
   "lineno": 4298,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "bool",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.core.numeric.around",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.ceil",
    "numpy.core.numeric.concatenate",
    "numpy.core.numeric.floor",
    "numpy.core.numeric.intp",
    "numpy.core.numeric.take",
    "numpy.core.umath.add",
    "numpy.count_nonzero",
    "numpy.inexact",
    "numpy.isnan",
    "numpy.issubdtype",
    "numpy.lib.function_base.range",
    "numpy.lib.function_base.warnings",
    "numpy.moveaxis",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._update_dim_sizes": {
  "data": {
   "lineno": 2466,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base._ureduce": {
  "data": {
   "lineno": 3982,
   "symbols_in_volume": [
    "enumerate",
    "func",
    "len",
    "list",
    "numpy.asanyarray",
    "numpy.core.numeric.normalize_axis_tuple",
    "numpy.lib.function_base.range",
    "set",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.absolute": {
  "data": {
   "shadows": "numpy.core.numeric.absolute"
  },
  "type": "import"
 },
 "numpy.lib.function_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.function_base.add": {
  "data": {
   "shadows": "numpy.core.umath.add"
  },
  "type": "import"
 },
 "numpy.lib.function_base.add_docstring": {
  "data": {
   "shadows": "numpy.core.multiarray.add_docstring"
  },
  "type": "import"
 },
 "numpy.lib.function_base.add_newdoc": {
  "data": {
   "lineno": 4533,
   "symbols_in_volume": [
    "Exception",
    "__import__",
    "getattr",
    "globals",
    "isinstance",
    "list",
    "numpy.core.multiarray.add_docstring",
    "numpy.lib.function_base.place",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.add_newdoc_ufunc": {
  "data": {
   "shadows": "numpy.core.umath._add_newdoc_ufunc"
  },
  "type": "import"
 },
 "numpy.lib.function_base.angle": {
  "data": {
   "lineno": 2095,
   "symbols_in_volume": [
    "issubclass",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.complexfloating",
    "numpy.core.umath.arctan2",
    "numpy.core.umath.pi"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.any": {
  "data": {
   "shadows": "numpy.core.fromnumeric.any"
  },
  "type": "import"
 },
 "numpy.lib.function_base.append": {
  "data": {
   "lineno": 5114,
   "symbols_in_volume": [
    "numpy.core.fromnumeric.ravel",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.concatenate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.arange": {
  "data": {
   "shadows": "numpy.core.numeric.arange"
  },
  "type": "import"
 },
 "numpy.lib.function_base.arctan2": {
  "data": {
   "shadows": "numpy.core.umath.arctan2"
  },
  "type": "import"
 },
 "numpy.lib.function_base.around": {
  "data": {
   "shadows": "numpy.core.numeric.around"
  },
  "type": "import"
 },
 "numpy.lib.function_base.array": {
  "data": {
   "shadows": "numpy.core.numeric.array"
  },
  "type": "import"
 },
 "numpy.lib.function_base.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.lib.function_base.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.function_base.asarray_chkfinite": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.numeric.asarray",
    "numpy.core.numerictypes.typecodes",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.atleast_1d": {
  "data": {
   "shadows": "numpy.core.atleast_1d"
  },
  "type": "import"
 },
 "numpy.lib.function_base.atleast_2d": {
  "data": {
   "shadows": "numpy.core.atleast_2d"
  },
  "type": "import"
 },
 "numpy.lib.function_base.average": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "ZeroDivisionError",
    "issubclass",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.bool_",
    "numpy.broadcast_to",
    "numpy.integer",
    "numpy.multiply",
    "numpy.result_type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.bartlett": {
  "data": {
   "lineno": 3294,
   "symbols_in_volume": [
    "float",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.array",
    "numpy.core.numeric.ones",
    "numpy.core.numeric.where",
    "numpy.core.umath.less_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.basestring": {
  "data": {
   "shadows": "numpy.compat.py3k.basestring"
  },
  "type": "import"
 },
 "numpy.lib.function_base.bincount": {
  "data": {
   "shadows": "numpy.core.multiarray.bincount"
  },
  "type": "import"
 },
 "numpy.lib.function_base.blackman": {
  "data": {
   "lineno": 3196,
   "symbols_in_volume": [
    "float",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.array",
    "numpy.core.numeric.ones",
    "numpy.core.umath.cos",
    "numpy.core.umath.pi"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "numpy.lib.function_base.ceil": {
  "data": {
   "shadows": "numpy.core.numeric.ceil"
  },
  "type": "import"
 },
 "numpy.lib.function_base.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.lib.function_base.compiled_interp": {
  "data": {
   "shadows": "numpy.core.multiarray.interp"
  },
  "type": "import"
 },
 "numpy.lib.function_base.compiled_interp_complex": {
  "data": {
   "shadows": "numpy.core.multiarray.interp_complex"
  },
  "type": "import"
 },
 "numpy.lib.function_base.concatenate": {
  "data": {
   "shadows": "numpy.core.numeric.concatenate"
  },
  "type": "import"
 },
 "numpy.lib.function_base.copy": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "numpy.core.numeric.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.corrcoef": {
  "data": {
   "lineno": 3113,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "numpy._NoValue",
    "numpy.clip",
    "numpy.core.umath.sqrt",
    "numpy.iscomplexobj",
    "numpy.lib.function_base.cov",
    "numpy.lib.function_base.warnings",
    "numpy.lib.twodim_base.diag"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.cos": {
  "data": {
   "shadows": "numpy.core.umath.cos"
  },
  "type": "import"
 },
 "numpy.lib.function_base.cov": {
  "data": {
   "lineno": 2904,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "float",
    "int",
    "numpy.all",
    "numpy.around",
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.core.fromnumeric.any",
    "numpy.core.fromnumeric.sum",
    "numpy.core.numeric.array",
    "numpy.core.numeric.dot",
    "numpy.float64",
    "numpy.lib.function_base.average",
    "numpy.lib.function_base.warnings",
    "numpy.result_type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.delete": {
  "data": {
   "lineno": 4703,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "FutureWarning",
    "IndexError",
    "bool",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.can_cast",
    "numpy.compat.long",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.empty",
    "numpy.core.numeric.integer",
    "numpy.core.numeric.intp",
    "numpy.core.numeric.ndarray",
    "numpy.core.numeric.ones",
    "numpy.lib.function_base.range",
    "numpy.lib.function_base.warnings",
    "numpy.ndarray",
    "slice",
    "type",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.diag": {
  "data": {
   "shadows": "numpy.lib.twodim_base.diag"
  },
  "type": "import"
 },
 "numpy.lib.function_base.diff": {
  "data": {
   "lineno": 1851,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool_",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.core.numeric.asanyarray",
    "numpy.core.umath.not_equal",
    "numpy.core.umath.subtract",
    "numpy.lib.function_base.range",
    "op",
    "repr",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.digitize": {
  "data": {
   "shadows": "numpy.core.multiarray.digitize"
  },
  "type": "import"
 },
 "numpy.lib.function_base.disp": {
  "data": {
   "lineno": 2393,
   "symbols_in_volume": [
    "numpy.lib.function_base.sys"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.function_base.dot": {
  "data": {
   "shadows": "numpy.core.numeric.dot"
  },
  "type": "import"
 },
 "numpy.lib.function_base.empty": {
  "data": {
   "shadows": "numpy.core.numeric.empty"
  },
  "type": "import"
 },
 "numpy.lib.function_base.empty_like": {
  "data": {
   "shadows": "numpy.core.numeric.empty_like"
  },
  "type": "import"
 },
 "numpy.lib.function_base.exp": {
  "data": {
   "shadows": "numpy.core.umath.exp"
  },
  "type": "import"
 },
 "numpy.lib.function_base.extract": {
  "data": {
   "lineno": 2299,
   "symbols_in_volume": [
    "numpy.core.fromnumeric.nonzero",
    "numpy.core.fromnumeric.ravel",
    "numpy.core.numeric.take"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.flip": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "hasattr",
    "numpy.core.numeric.asarray",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.floor": {
  "data": {
   "shadows": "numpy.core.numeric.floor"
  },
  "type": "import"
 },
 "numpy.lib.function_base.frompyfunc": {
  "data": {
   "shadows": "numpy.core.umath.frompyfunc"
  },
  "type": "import"
 },
 "numpy.lib.function_base.gradient": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.asanyarray",
    "numpy.core.numeric.normalize_axis_tuple",
    "numpy.datetime64",
    "numpy.diff",
    "numpy.double",
    "numpy.dtype",
    "numpy.empty_like",
    "numpy.inexact",
    "numpy.issubdtype",
    "numpy.lib.function_base.range",
    "numpy.ndim",
    "numpy.ones",
    "numpy.timedelta64",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.hamming": {
  "data": {
   "lineno": 3500,
   "symbols_in_volume": [
    "float",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.array",
    "numpy.core.numeric.ones",
    "numpy.core.umath.cos",
    "numpy.core.umath.pi"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.hanning": {
  "data": {
   "lineno": 3400,
   "symbols_in_volume": [
    "float",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.array",
    "numpy.core.numeric.ones",
    "numpy.core.umath.cos",
    "numpy.core.umath.pi"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.histogram": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "complex",
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.can_cast",
    "numpy.ceil",
    "numpy.compat.py3k.basestring",
    "numpy.concatenate",
    "numpy.core.fromnumeric.sort",
    "numpy.core.linspace",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.array",
    "numpy.core.numeric.asarray",
    "numpy.diff",
    "numpy.double",
    "numpy.dtype",
    "numpy.intp",
    "numpy.isfinite",
    "numpy.lib.function_base._hist_bin_selectors",
    "numpy.lib.function_base.operator",
    "numpy.lib.function_base.range",
    "numpy.logical_and.reduce",
    "numpy.ndim",
    "numpy.r_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.histogramdd": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "float",
    "int",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.asarray",
    "numpy.core.atleast_1d",
    "numpy.core.atleast_2d",
    "numpy.core.fromnumeric.nonzero",
    "numpy.core.fromnumeric.sort",
    "numpy.core.linspace",
    "numpy.core.multiarray.bincount",
    "numpy.core.multiarray.digitize",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.around",
    "numpy.core.numeric.array",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.empty",
    "numpy.core.numeric.isscalar",
    "numpy.core.numeric.ones",
    "numpy.core.numeric.zeros",
    "numpy.core.umath.log10",
    "numpy.inexact",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.issubdtype",
    "numpy.lib.function_base.diff",
    "numpy.lib.function_base.range",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.i0": {
  "data": {
   "shadows": "numpy.dual.i0"
  },
  "type": "import"
 },
 "numpy.lib.function_base.insert": {
  "data": {
   "lineno": 4908,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "FutureWarning",
    "IndexError",
    "ValueError",
    "bool",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.can_cast",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.array",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.empty",
    "numpy.core.numeric.intp",
    "numpy.core.numeric.ndarray",
    "numpy.core.numeric.ones",
    "numpy.lib.function_base.warnings",
    "numpy.moveaxis",
    "numpy.ndarray",
    "slice",
    "type",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.integer": {
  "data": {
   "shadows": "numpy.core.numeric.integer"
  },
  "type": "import"
 },
 "numpy.lib.function_base.interp": {
  "data": {
   "lineno": 1951,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "float",
    "int",
    "interp_func",
    "isinstance",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.complex128",
    "numpy.concatenate",
    "numpy.core.multiarray.interp",
    "numpy.core.multiarray.interp_complex",
    "numpy.core.numerictypes.number",
    "numpy.float64",
    "numpy.iscomplexobj",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.intp": {
  "data": {
   "shadows": "numpy.core.numeric.intp"
  },
  "type": "import"
 },
 "numpy.lib.function_base.isscalar": {
  "data": {
   "shadows": "numpy.core.numeric.isscalar"
  },
  "type": "import"
 },
 "numpy.lib.function_base.iterable": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.kaiser": {
  "data": {
   "lineno": 3748,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.core.numeric.arange",
    "numpy.core.umath.sqrt",
    "numpy.dual.i0"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.less_equal": {
  "data": {
   "shadows": "numpy.core.umath.less_equal"
  },
  "type": "import"
 },
 "numpy.lib.function_base.linspace": {
  "data": {
   "shadows": "numpy.core.linspace"
  },
  "type": "import"
 },
 "numpy.lib.function_base.log10": {
  "data": {
   "shadows": "numpy.core.umath.log10"
  },
  "type": "import"
 },
 "numpy.lib.function_base.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.function_base.mean": {
  "data": {
   "shadows": "numpy.core.fromnumeric.mean"
  },
  "type": "import"
 },
 "numpy.lib.function_base.median": {
  "data": {
   "lineno": 4037,
   "symbols_in_volume": [
    "numpy.lib.function_base._ureduce"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.meshgrid": {
  "data": {
   "lineno": 4568,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "len",
    "list",
    "numpy.asanyarray",
    "numpy.broadcast_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.mod": {
  "data": {
   "shadows": "numpy.core.umath.mod"
  },
  "type": "import"
 },
 "numpy.lib.function_base.msort": {
  "data": {
   "lineno": 3954,
   "symbols_in_volume": [
    "numpy.core.numeric.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.multiply": {
  "data": {
   "shadows": "numpy.core.umath.multiply"
  },
  "type": "import"
 },
 "numpy.lib.function_base.ndarray": {
  "data": {
   "shadows": "numpy.core.numeric.ndarray"
  },
  "type": "import"
 },
 "numpy.lib.function_base.nonzero": {
  "data": {
   "shadows": "numpy.core.fromnumeric.nonzero"
  },
  "type": "import"
 },
 "numpy.lib.function_base.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "numpy.lib.function_base.not_equal": {
  "data": {
   "shadows": "numpy.core.umath.not_equal"
  },
  "type": "import"
 },
 "numpy.lib.function_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.function_base.number": {
  "data": {
   "shadows": "numpy.core.numerictypes.number"
  },
  "type": "import"
 },
 "numpy.lib.function_base.ones": {
  "data": {
   "shadows": "numpy.core.numeric.ones"
  },
  "type": "import"
 },
 "numpy.lib.function_base.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.lib.function_base.partition": {
  "data": {
   "shadows": "numpy.core.fromnumeric.partition"
  },
  "type": "import"
 },
 "numpy.lib.function_base.percentile": {
  "data": {
   "lineno": 4180,
   "symbols_in_volume": [
    "numpy.core.numeric.array",
    "numpy.float64",
    "numpy.lib.function_base._ureduce"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.pi": {
  "data": {
   "shadows": "numpy.core.umath.pi"
  },
  "type": "import"
 },
 "numpy.lib.function_base.piecewise": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "item",
    "len",
    "list",
    "numpy.any",
    "numpy.concatenate",
    "numpy.core.numeric.array",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.isscalar",
    "numpy.core.numeric.ndarray",
    "numpy.core.numeric.zeros",
    "numpy.lib.function_base.collections",
    "numpy.lib.function_base.range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.place": {
  "data": {
   "lineno": 2350,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.core.multiarray._insert",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.function_base.range": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.lib.function_base.ravel": {
  "data": {
   "shadows": "numpy.core.fromnumeric.ravel"
  },
  "type": "import"
 },
 "numpy.lib.function_base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.lib.function_base.rot90": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.core.numeric.absolute",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.asanyarray",
    "numpy.core.transpose",
    "numpy.lib.function_base.flip",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.select": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "bool",
    "len",
    "numpy.asarray",
    "numpy.bool_",
    "numpy.broadcast_arrays",
    "numpy.copyto",
    "numpy.full",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.lib.function_base.range",
    "numpy.lib.function_base.warnings",
    "numpy.result_type",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.sin": {
  "data": {
   "shadows": "numpy.core.umath.sin"
  },
  "type": "import"
 },
 "numpy.lib.function_base.sinc": {
  "data": {
   "lineno": 3875,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.core.numeric.where",
    "numpy.core.umath.pi",
    "numpy.core.umath.sin"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.sort": {
  "data": {
   "shadows": "numpy.core.fromnumeric.sort"
  },
  "type": "import"
 },
 "numpy.lib.function_base.sort_complex": {
  "data": {
   "lineno": 2194,
   "symbols_in_volume": [
    "issubclass",
    "numpy.core.numeric.array",
    "numpy.core.numeric.complexfloating"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.sqrt": {
  "data": {
   "shadows": "numpy.core.umath.sqrt"
  },
  "type": "import"
 },
 "numpy.lib.function_base.subtract": {
  "data": {
   "shadows": "numpy.core.umath.subtract"
  },
  "type": "import"
 },
 "numpy.lib.function_base.sum": {
  "data": {
   "shadows": "numpy.core.fromnumeric.sum"
  },
  "type": "import"
 },
 "numpy.lib.function_base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.function_base.take": {
  "data": {
   "shadows": "numpy.core.numeric.take"
  },
  "type": "import"
 },
 "numpy.lib.function_base.transpose": {
  "data": {
   "shadows": "numpy.core.transpose"
  },
  "type": "import"
 },
 "numpy.lib.function_base.trapz": {
  "data": {
   "lineno": 4442,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.core.numeric.asanyarray",
    "numpy.core.umath.add.reduce",
    "numpy.lib.function_base.diff",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.trim_zeros": {
  "data": {
   "lineno": 2230,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.typecodes": {
  "data": {
   "shadows": "numpy.core.numerictypes.typecodes"
  },
  "type": "import"
 },
 "numpy.lib.function_base.unique": {
  "data": {
   "lineno": 2281,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.concatenate",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.unwrap": {
  "data": {
   "lineno": 2139,
   "symbols_in_volume": [
    "abs",
    "numpy.core.numeric.array",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.copyto",
    "numpy.core.umath.mod",
    "numpy.core.umath.pi",
    "numpy.lib.function_base.diff",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize": {
  "data": {
   "lineno": 2543,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.function_base.vectorize.__call__": {
  "data": {
   "lineno": 2727,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.lib.function_base.range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize.__call__.func": {
  "data": {
   "lineno": 2746,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize.__init__": {
  "data": {
   "lineno": 2695,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.core.numeric.dtype",
    "numpy.core.numerictypes.typecodes",
    "numpy.lib.function_base._parse_gufunc_signature",
    "numpy.lib.function_base.iterable",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._get_ufunc_and_otypes": {
  "data": {
   "lineno": 2757,
   "symbols_in_volume": [
    "ValueError",
    "__builtin__.any",
    "func",
    "isinstance",
    "len",
    "numpy.core.numeric.asarray",
    "numpy.core.umath.frompyfunc",
    "numpy.lib.function_base.range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._get_ufunc_and_otypes._func": {
  "data": {
   "lineno": 2794,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._vectorize_call": {
  "data": {
   "lineno": 2818,
   "symbols_in_volume": [
    "func",
    "numpy.core.numeric.array",
    "object",
    "tuple",
    "ufunc",
    "ufunc.nout",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.vectorize._vectorize_call_with_signature": {
  "data": {
   "lineno": 2840,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "__builtin__.any",
    "func",
    "isinstance",
    "len",
    "numpy.broadcast_to",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.asarray",
    "numpy.lib.function_base._calculate_shapes",
    "numpy.lib.function_base._create_arrays",
    "numpy.lib.function_base._parse_input_dimensions",
    "numpy.lib.function_base._update_dim_sizes",
    "numpy.ndindex",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.function_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.function_base.where": {
  "data": {
   "shadows": "numpy.core.numeric.where"
  },
  "type": "import"
 },
 "numpy.lib.function_base.zeros": {
  "data": {
   "shadows": "numpy.core.numeric.zeros"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks": {
  "data": {
   "symbols_in_volume": [
    "numpy.lib.index_tricks.CClass",
    "numpy.lib.index_tricks.IndexExpression",
    "numpy.lib.index_tricks.RClass",
    "numpy.lib.index_tricks.mgrid",
    "numpy.lib.index_tricks.nd_grid",
    "numpy.lib.index_tricks.ogrid"
   ]
  },
  "type": "module"
 },
 "numpy.lib.index_tricks.AxisConcatenator": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.core.numeric.concatenate",
    "numpy.matrixlib.matrix",
    "object",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.AxisConcatenator.__getitem__": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "abs",
    "complex",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.core.numeric.ScalarType",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.array",
    "numpy.core.numeric.ndarray",
    "numpy.core.numerictypes.find_common_type",
    "numpy.lib.index_tricks.sys",
    "numpy.matrixlib.bmat",
    "range",
    "slice",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.AxisConcatenator.__init__": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.AxisConcatenator.__len__": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.CClass": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.AxisConcatenator"
   ]
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.CClass.__init__": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.AxisConcatenator"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.IndexExpression": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.IndexExpression.__getitem__": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.IndexExpression.__init__": {
  "data": {
   "lineno": 658
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.RClass": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.AxisConcatenator"
   ]
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.RClass.__init__": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.AxisConcatenator"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ScalarType": {
  "data": {
   "shadows": "numpy.core.numeric.ScalarType"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks._nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.alltrue": {
  "data": {
   "shadows": "numpy.core.numeric.alltrue"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.arange": {
  "data": {
   "shadows": "numpy.core.numeric.arange"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.array": {
  "data": {
   "shadows": "numpy.core.numeric.array"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.c_": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.cumprod": {
  "data": {
   "shadows": "numpy.core.numeric.cumprod"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.diag_indices": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "numpy.core.numeric.arange"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.diag_indices_from": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "ValueError",
    "diff",
    "numpy.core.numeric.alltrue",
    "numpy.lib.index_tricks.diag_indices"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.fill_diagonal": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "ValueError",
    "diff",
    "numpy.core.numeric.alltrue",
    "numpy.core.numeric.cumprod"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.find_common_type": {
  "data": {
   "shadows": "numpy.core.numerictypes.find_common_type"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.index_exp": {
  "data": {
   "lineno": 667
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.issubdtype": {
  "data": {
   "shadows": "numpy.core.numerictypes.issubdtype"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.ix_": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.bool_",
    "numpy.core.numeric.intp",
    "numpy.core.numerictypes.issubdtype",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.matrixlib": {
  "data": {
   "shadows": "numpy.matrixlib"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.mgrid": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.nd_grid": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.nd_grid.__getitem__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "abs",
    "complex",
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.indices",
    "numpy.core.numeric.newaxis",
    "numpy.lib.index_tricks.math",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.nd_grid.__init__": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.nd_grid.__len__": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndenumerate": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.ndenumerate.__init__": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "numpy.core.numeric.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndenumerate.__iter__": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndenumerate.__next__": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.index_tricks.ndindex.__init__": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.core.numeric.nditer",
    "numpy.core.numeric.zeros",
    "numpy.core.numeric.zeros_like",
    "numpy.lib.stride_tricks.as_strided",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex.__iter__": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex.__next__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ndindex.ndincr": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "numpy.lib.index_tricks.ogrid": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.r_": {
  "data": {
   "lineno": 454
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.ravel_multi_index": {
  "data": {
   "shadows": "numpy.core.multiarray.ravel_multi_index"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.s_": {
  "data": {
   "lineno": 668
  },
  "type": "constant"
 },
 "numpy.lib.index_tricks.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.index_tricks.unravel_index": {
  "data": {
   "shadows": "numpy.core.multiarray.unravel_index"
  },
  "type": "import"
 },
 "numpy.lib.info": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.info.depends": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "numpy.lib.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.info.global_symbols": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "numpy.lib.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.lib.mixins": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.mixins.NDArrayOperatorsMixin": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.core.umath.absolute",
    "numpy.core.umath.add",
    "numpy.core.umath.bitwise_and",
    "numpy.core.umath.bitwise_or",
    "numpy.core.umath.bitwise_xor",
    "numpy.core.umath.divide",
    "numpy.core.umath.divmod",
    "numpy.core.umath.equal",
    "numpy.core.umath.floor_divide",
    "numpy.core.umath.greater",
    "numpy.core.umath.greater_equal",
    "numpy.core.umath.invert",
    "numpy.core.umath.left_shift",
    "numpy.core.umath.less",
    "numpy.core.umath.less_equal",
    "numpy.core.umath.multiply",
    "numpy.core.umath.negative",
    "numpy.core.umath.not_equal",
    "numpy.core.umath.positive",
    "numpy.core.umath.power",
    "numpy.core.umath.remainder",
    "numpy.core.umath.right_shift",
    "numpy.core.umath.subtract",
    "numpy.core.umath.true_divide",
    "numpy.lib.mixins._binary_method",
    "numpy.lib.mixins._numeric_methods",
    "numpy.lib.mixins._reflected_binary_method",
    "numpy.lib.mixins._unary_method",
    "numpy.lib.mixins.sys",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.mixins.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.lib.mixins._binary_method": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "numpy.lib.mixins._binary_method.func": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NotImplemented",
    "numpy.lib.mixins._disables_array_ufunc",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.lib.mixins._disables_array_ufunc": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "numpy.lib.mixins._inplace_binary_method": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "numpy.lib.mixins._inplace_binary_method.func": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.lib.mixins._numeric_methods": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.lib.mixins._binary_method",
    "numpy.lib.mixins._inplace_binary_method",
    "numpy.lib.mixins._reflected_binary_method",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.lib.mixins._reflected_binary_method": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.lib.mixins._reflected_binary_method.func": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplemented",
    "numpy.lib.mixins._disables_array_ufunc",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.lib.mixins._unary_method": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "numpy.lib.mixins._unary_method.func": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.lib.mixins.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.mixins.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.mixins.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.mixins.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.mixins.um": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.nanfunctions.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.lib.nanfunctions._copyto": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "isinstance",
    "numpy.copyto",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._divide_by_count": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "isinstance",
    "numpy.divide",
    "numpy.errstate",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanmedian": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "numpy.lib.nanfunctions._nanmedian1d",
    "numpy.lib.nanfunctions._nanmedian_small"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanmedian1d": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "numpy.lib.nanfunctions._remove_nan_1d",
    "numpy.median",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanmedian_small": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.count_nonzero",
    "numpy.isnan",
    "numpy.lib.nanfunctions.warnings",
    "numpy.ma.masked_array",
    "numpy.ma.median",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanpercentile": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "numpy.lib.nanfunctions._nanpercentile1d",
    "numpy.moveaxis"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._nanpercentile1d": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "numpy.full",
    "numpy.lib.nanfunctions._remove_nan_1d",
    "numpy.nan",
    "numpy.percentile"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._remove_nan_1d": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.isnan",
    "numpy.lib.nanfunctions.warnings",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._replace_nan": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "issubclass",
    "numpy.array",
    "numpy.copyto",
    "numpy.inexact",
    "numpy.isnan",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions._ureduce": {
  "data": {
   "shadows": "numpy.lib.function_base._ureduce"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions.nanargmax": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.any",
    "numpy.argmax",
    "numpy.inf",
    "numpy.lib.nanfunctions._replace_nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanargmin": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.any",
    "numpy.argmin",
    "numpy.inf",
    "numpy.lib.nanfunctions._replace_nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nancumprod": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "numpy.cumprod",
    "numpy.lib.nanfunctions._replace_nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nancumsum": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.lib.nanfunctions._replace_nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmax": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy._NoValue",
    "numpy.all",
    "numpy.amax",
    "numpy.any",
    "numpy.fmax.reduce",
    "numpy.inf",
    "numpy.isnan",
    "numpy.lib.nanfunctions._copyto",
    "numpy.lib.nanfunctions._replace_nan",
    "numpy.lib.nanfunctions.warnings",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.object_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmean": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "issubclass",
    "numpy._NoValue",
    "numpy.dtype",
    "numpy.inexact",
    "numpy.intp",
    "numpy.lib.nanfunctions._divide_by_count",
    "numpy.lib.nanfunctions._replace_nan",
    "numpy.lib.nanfunctions.warnings",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmedian": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "numpy._NoValue",
    "numpy.asanyarray",
    "numpy.lib.function_base._ureduce",
    "numpy.lib.nanfunctions._nanmedian",
    "numpy.nanmean"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanmin": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy._NoValue",
    "numpy.all",
    "numpy.amin",
    "numpy.any",
    "numpy.fmin.reduce",
    "numpy.inf",
    "numpy.isnan",
    "numpy.lib.nanfunctions._copyto",
    "numpy.lib.nanfunctions._replace_nan",
    "numpy.lib.nanfunctions.warnings",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.object_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanpercentile": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "numpy._NoValue",
    "numpy.asanyarray",
    "numpy.lib.function_base._ureduce",
    "numpy.nanmean"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanprod": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy._NoValue",
    "numpy.lib.nanfunctions._replace_nan",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanstd": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "isinstance",
    "numpy._NoValue",
    "numpy.lib.nanfunctions.nanvar",
    "numpy.ndarray",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nansum": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy._NoValue",
    "numpy.lib.nanfunctions._replace_nan",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.nanvar": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "issubclass",
    "numpy._NoValue",
    "numpy.any",
    "numpy.complexfloating",
    "numpy.dtype",
    "numpy.inexact",
    "numpy.intp",
    "numpy.lib.nanfunctions._copyto",
    "numpy.lib.nanfunctions._divide_by_count",
    "numpy.lib.nanfunctions._replace_nan",
    "numpy.lib.nanfunctions.warnings",
    "numpy.matrix",
    "numpy.multiply",
    "numpy.nan",
    "numpy.subtract",
    "numpy.sum",
    "numpy.var",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.nanfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.nanfunctions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions": {
  "data": {
   "symbols_in_volume": [
    "numpy.lib.recfunctions.sys",
    "numpy.ma.core._check_fill_value"
   ]
  },
  "type": "module"
 },
 "numpy.lib.recfunctions.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.MaskedArray"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.MaskedRecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.MaskedRecords"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.lib.recfunctions._check_fill_value": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.lib.recfunctions._fix_defaults": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "numpy.lib.recfunctions._fix_output": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.MaskedArray",
    "numpy.ma.filled",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.recarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions._is_string_like": {
  "data": {
   "shadows": "numpy.lib._iotools._is_string_like"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions._izip_fields": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "len",
    "numpy.compat.basestring",
    "numpy.void",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions._izip_fields_flat": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "isinstance",
    "numpy.void",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions._keep_fields": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.lib.recfunctions._fix_output",
    "numpy.lib.recfunctions.recursive_fill_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.append_fields": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "ValueError",
    "future_builtins.zip",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.compat.basestring",
    "numpy.lib.recfunctions._fix_output",
    "numpy.lib.recfunctions.get_fieldspec",
    "numpy.lib.recfunctions.merge_arrays",
    "numpy.lib.recfunctions.recursive_fill_fields",
    "numpy.ma.masked_all",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.drop_fields": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "_drop_descr",
    "numpy.empty",
    "numpy.lib._iotools._is_string_like",
    "numpy.lib.recfunctions._fix_output",
    "numpy.lib.recfunctions.recursive_fill_fields",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.drop_fields._drop_descr": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "_drop_descr"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.find_duplicates": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.concatenate",
    "numpy.lib.recfunctions.get_fieldstructure"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.flatten_descr": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.get_fieldspec": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.get_fieldstructure": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.get_names": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.get_names_flat": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.izip_records": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.lib.recfunctions._izip_fields",
    "numpy.lib.recfunctions._izip_fields_flat",
    "numpy.lib.recfunctions.itertools",
    "numpy.lib.recfunctions.sys",
    "tuple",
    "zip_longest",
    "zipfunc"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.join_by": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "next",
    "numpy.compat.basestring",
    "numpy.concatenate",
    "numpy.dtype",
    "numpy.lib.recfunctions._fix_defaults",
    "numpy.lib.recfunctions._fix_output",
    "numpy.lib.recfunctions._keep_fields",
    "numpy.lib.recfunctions.get_fieldspec",
    "numpy.ma.concatenate",
    "numpy.ma.masked_all",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.merge_arrays": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "future_builtins.zip",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.dtype",
    "numpy.fromiter",
    "numpy.lib.recfunctions._check_fill_value",
    "numpy.lib.recfunctions.itertools",
    "numpy.lib.recfunctions.izip_records",
    "numpy.lib.recfunctions.zip_dtype",
    "numpy.ma.MaskedArray",
    "numpy.ma.array",
    "numpy.ma.getmaskarray",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.recarray",
    "numpy.void",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.rec_append_fields": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "numpy.lib.recfunctions.append_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rec_drop_fields": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy.lib.recfunctions.drop_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rec_join": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "dict",
    "numpy.lib.recfunctions.join_by"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.recarray": {
  "data": {
   "shadows": "numpy.recarray"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.recursive_fill_fields": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "input",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rename_fields": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "_recursive_rename_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rename_fields._recursive_rename_fields": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "_recursive_rename_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.repack_fields": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.stack_arrays": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "TypeError",
    "future_builtins.zip",
    "isinstance",
    "len",
    "max",
    "numpy.asanyarray",
    "numpy.cumsum",
    "numpy.lib.recfunctions._fix_defaults",
    "numpy.lib.recfunctions._fix_output",
    "numpy.lib.recfunctions.get_fieldspec",
    "numpy.ma.concatenate",
    "numpy.ma.masked_all",
    "numpy.ndarray",
    "numpy.r_",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.zip": {
  "data": {
   "shadows": "future_builtins.zip"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.zip_descr": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.lib.recfunctions.zip_dtype"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.zip_dtype": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.lib.recfunctions.flatten_descr",
    "numpy.lib.recfunctions.get_fieldspec"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.numeric.log"
   ]
  },
  "type": "module"
 },
 "numpy.lib.scimath.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.lib.scimath._fix_int_lt_zero": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.core.numeric.any",
    "numpy.core.numeric.asarray",
    "numpy.lib.type_check.isreal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath._fix_real_abs_gt_1": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "abs",
    "numpy.core.numeric.any",
    "numpy.core.numeric.asarray",
    "numpy.lib.scimath._tocomplex",
    "numpy.lib.type_check.isreal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath._fix_real_lt_zero": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.core.numeric.any",
    "numpy.core.numeric.asarray",
    "numpy.lib.scimath._tocomplex",
    "numpy.lib.type_check.isreal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath._ln2": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.lib.scimath._tocomplex": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "issubclass",
    "numpy.core.numerictypes.byte",
    "numpy.core.numerictypes.cdouble",
    "numpy.core.numerictypes.csingle",
    "numpy.core.numerictypes.short",
    "numpy.core.numerictypes.single",
    "numpy.core.numerictypes.ubyte",
    "numpy.core.numerictypes.ushort"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.scimath.any": {
  "data": {
   "shadows": "numpy.core.numeric.any"
  },
  "type": "import"
 },
 "numpy.lib.scimath.arccos": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "numpy.core.numeric.arccos",
    "numpy.lib.scimath._fix_real_abs_gt_1"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.arcsin": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.core.numeric.arcsin",
    "numpy.lib.scimath._fix_real_abs_gt_1"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.arctanh": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "numpy.core.numeric.arctanh",
    "numpy.lib.scimath._fix_real_abs_gt_1"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.scimath.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.scimath.isreal": {
  "data": {
   "shadows": "numpy.lib.type_check.isreal"
  },
  "type": "import"
 },
 "numpy.lib.scimath.log": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.core.numeric.log",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.log10": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.core.numeric.log10",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.log2": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.core.numeric.log2",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.logn": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "numpy.core.numeric.log",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.nt": {
  "data": {
   "shadows": "numpy.core.numerictypes"
  },
  "type": "import"
 },
 "numpy.lib.scimath.nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.scimath.power": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "numpy.core.numeric.power",
    "numpy.lib.scimath._fix_int_lt_zero",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.scimath.sqrt": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.core.numeric.sqrt",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.lib.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.lib.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.lib.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.lib.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.lib.shape_base": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.vstack"
   ]
  },
  "type": "module"
 },
 "numpy.lib.shape_base.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.lib.shape_base._nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.shape_base._replace_zero_by_x_arrays": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "len",
    "numpy.core.numeric.empty",
    "numpy.core.numeric.equal",
    "numpy.core.numeric.ndim",
    "numpy.core.numeric.shape",
    "numpy.core.numeric.sometrue",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.apply_along_axis": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Ellipsis",
    "StopIteration",
    "ValueError",
    "func1d",
    "isinstance",
    "list",
    "next",
    "numpy.core.fromnumeric.transpose",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.zeros",
    "numpy.lib.index_tricks.ndindex",
    "numpy.matrixlib.defmatrix.matrix",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.apply_over_axes": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "numpy.core.numeric.array",
    "numpy.core.numeric.asarray",
    "numpy.lib.shape_base.expand_dims"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.array": {
  "data": {
   "shadows": "numpy.core.numeric.array"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.array_split": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "divmod",
    "int",
    "len",
    "list",
    "numpy.core.numeric.array",
    "numpy.core.numeric.swapaxes",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.atleast_3d": {
  "data": {
   "shadows": "numpy.core.atleast_3d"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.column_stack": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.core.numeric.array",
    "numpy.core.numeric.concatenate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.concatenate": {
  "data": {
   "shadows": "numpy.core.numeric.concatenate"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.dsplit": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.numeric.ndim",
    "numpy.lib.shape_base.split"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.dstack": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.core.atleast_3d",
    "numpy.core.numeric.concatenate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.expand_dims": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.numeric.asarray",
    "numpy.lib.shape_base.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.get_array_prepare": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "hasattr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.get_array_wrap": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "hasattr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.hsplit": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.numeric.ndim",
    "numpy.lib.shape_base.split"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.kron": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "numpy.core.fromnumeric.reshape",
    "numpy.core.numeric.array",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.concatenate",
    "numpy.core.numeric.multiply",
    "numpy.core.numeric.outer",
    "numpy.lib.shape_base.get_array_prepare",
    "numpy.lib.shape_base.get_array_wrap",
    "range",
    "wrapper"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.matrix": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.matrix"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.ndindex": {
  "data": {
   "shadows": "numpy.lib.index_tricks.ndindex"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.outer": {
  "data": {
   "shadows": "numpy.core.numeric.outer"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.product": {
  "data": {
   "shadows": "numpy.core.fromnumeric.product"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.reshape": {
  "data": {
   "shadows": "numpy.core.fromnumeric.reshape"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.row_stack": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "numpy.lib.shape_base.split": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "numpy.lib.shape_base.array_split"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.tile": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "isinstance",
    "len",
    "numpy.core.numeric.array",
    "numpy.core.numeric.ndarray",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.transpose": {
  "data": {
   "shadows": "numpy.core.fromnumeric.transpose"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.vsplit": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.numeric.ndim",
    "numpy.lib.shape_base.split"
   ]
  },
  "type": "function"
 },
 "numpy.lib.shape_base.vstack": {
  "data": {
   "shadows": "numpy.core.vstack"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.shape_base.zeros": {
  "data": {
   "shadows": "numpy.core.numeric.zeros"
  },
  "type": "import"
 },
 "numpy.lib.stride_tricks": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.stride_tricks.DummyArray": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.stride_tricks.DummyArray.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.lib.stride_tricks._broadcast_shape": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "numpy.broadcast",
    "numpy.lib.stride_tricks.broadcast_to",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks._broadcast_to": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "numpy.array",
    "numpy.iterable",
    "numpy.lib.stride_tricks._maybe_view_as_subclass",
    "numpy.nditer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks._maybe_view_as_subclass": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.stride_tricks.as_strided": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "numpy.asarray",
    "numpy.lib.stride_tricks.DummyArray",
    "numpy.lib.stride_tricks._maybe_view_as_subclass",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.broadcast_arrays": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "numpy.array",
    "numpy.lib.stride_tricks._broadcast_shape",
    "numpy.lib.stride_tricks._broadcast_to"
   ]
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.broadcast_to": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.lib.stride_tricks._broadcast_to"
   ]
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.stride_tricks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.stride_tricks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.test": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.lib.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.tests.test__datasource": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.lib.tests.test__datasource.sys",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test__datasource.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.SkipTest": {
  "data": {
   "shadows": "numpy.testing.SkipTest"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.setup": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.lib._datasource.DataSource",
    "numpy.lib.tests.test__datasource.os",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.teardown": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_InvalidFile": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.os",
    "numpy.lib.tests.test__datasource.valid_textfile",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_InvalidHTTP": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.invalid_httpurl",
    "numpy.lib.tests.test__datasource.os",
    "numpy.lib.tests.test__datasource.valid_httpurl",
    "numpy.testing.assert_",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_ValidFile": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.os",
    "numpy.lib.tests.test__datasource.valid_textfile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_ValidHTTP": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.os",
    "numpy.lib.tests.test__datasource.valid_httpurl",
    "numpy.testing.assert_equal",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_sandboxing": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.http_path",
    "numpy.lib.tests.test__datasource.invalid_httpurl",
    "numpy.lib.tests.test__datasource.malicious_files",
    "numpy.lib.tests.test__datasource.os",
    "numpy.lib.tests.test__datasource.valid_httpurl",
    "numpy.lib.tests.test__datasource.valid_textfile",
    "numpy.testing.assert_",
    "tmp_path"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceAbspath.test_windows_os_sep": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.os"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.setup": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.lib._datasource.DataSource",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.teardown": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_InvalidFile": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.invalid_textfile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_InvalidHTTP": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.invalid_httpurl",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_ValidFile": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.valid_textfile",
    "numpy.testing.assert_",
    "shutil.rmtree",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceExists.test_ValidHTTP": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.valid_httpurl",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.setup": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.lib._datasource.DataSource",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.teardown": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_InvalidFile": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "IOError",
    "numpy.lib.tests.test__datasource.invalid_textfile",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_InvalidHTTP": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "IOError",
    "numpy.lib.tests.test__datasource.invalid_httpurl",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_InvalidHTTPCacheURLError": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.invalid_httpurl",
    "numpy.testing.assert_raises",
    "urllib2.URLError"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidBz2File": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ImportError",
    "numpy.lib.tests.test__datasource.bz2",
    "numpy.lib.tests.test__datasource.magic_line",
    "numpy.lib.tests.test__datasource.os",
    "numpy.testing.SkipTest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidFile": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.valid_textfile",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidGzipFile": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ImportError",
    "numpy.lib.tests.test__datasource.gzip",
    "numpy.lib.tests.test__datasource.magic_line",
    "numpy.lib.tests.test__datasource.os",
    "numpy.testing.SkipTest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestDataSourceOpen.test_ValidHTTP": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.valid_httpurl",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc.setup": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc.teardown": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestOpenFunc.test_DataSourceOpen": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.lib._datasource.open",
    "numpy.lib.tests.test__datasource.valid_textfile",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.setup": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.lib._datasource.Repository",
    "numpy.lib.tests.test__datasource.os",
    "numpy.lib.tests.test__datasource.valid_baseurl",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.teardown": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.test_ValidHTTP": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.os",
    "numpy.lib.tests.test__datasource.valid_httpfile",
    "numpy.lib.tests.test__datasource.valid_httpurl",
    "numpy.testing.assert_equal",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.test_sandboxing": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.http_path",
    "numpy.lib.tests.test__datasource.malicious_files",
    "numpy.lib.tests.test__datasource.os",
    "numpy.lib.tests.test__datasource.valid_httpfile",
    "numpy.testing.assert_",
    "tmp_path"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryAbspath.test_windows_os_sep": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.os"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.setup": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.lib._datasource.Repository",
    "numpy.lib.tests.test__datasource.valid_baseurl",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.teardown": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_CachedHTTPFile": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.os",
    "numpy.lib.tests.test__datasource.valid_httpurl",
    "numpy.lib.tests.test__datasource.valid_textfile",
    "numpy.testing.assert_",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_InvalidFile": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.invalid_textfile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_RemoveHTTPFile": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.valid_httpurl",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.TestRepositoryExists.test_ValidFile": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.valid_textfile",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.URLError": {
  "data": {
   "shadows": "urllib2.URLError"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.datasource": {
  "data": {
   "shadows": "numpy.lib._datasource"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.http_fakefile": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.http_fakepath": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.http_file": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.http_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.invalid_baseurl": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.http_fakepath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.invalid_httpfile": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.http_fakefile"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.invalid_httpurl": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.http_fakefile",
    "numpy.lib.tests.test__datasource.http_fakepath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.invalid_textfile": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.os",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.magic_line": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.malicious_files": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.mkstemp": {
  "data": {
   "shadows": "tempfile.mkstemp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.old_urlopen": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.lib.tests.test__datasource.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.setup": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.old_urlopen",
    "numpy.lib.tests.test__datasource.urlopen_stub",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.teardown": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.old_urlopen",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.urllib_request": {
  "data": {
   "shadows": "urllib2"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.urlopen_stub": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.valid_httpurl",
    "tempfile.NamedTemporaryFile",
    "urllib2.URLError"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.urlparse": {
  "data": {
   "shadows": "urlparse.urlparse"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__datasource.valid_baseurl": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.http_path"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.valid_httpfile": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.http_file"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.valid_httpurl": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.http_file",
    "numpy.lib.tests.test__datasource.http_path"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__datasource.valid_textfile": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.lib.tests.test__datasource.os",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test__iotools.LineSplitter": {
  "data": {
   "shadows": "numpy.lib._iotools.LineSplitter"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.NameValidator": {
  "data": {
   "shadows": "numpy.lib._iotools.NameValidator"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.StringConverter": {
  "data": {
   "shadows": "numpy.lib._iotools.StringConverter"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_constant_fixed_width": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.lib._iotools.LineSplitter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_no_delimiter": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.lib._iotools.LineSplitter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_other_delimiter": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.lib._iotools.LineSplitter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_space_delimiter": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.lib._iotools.LineSplitter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_tab_delimiter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.lib._iotools.LineSplitter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestLineSplitter.test_variable_fixed_width": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.lib._iotools.LineSplitter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions.test_easy_dtype": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib._iotools.easy_dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions.test_flatten_dtype": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib._iotools.flatten_dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestMiscFunctions.test_has_nested_dtype": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib._iotools.has_nested_fields",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_case_sensitivity": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib._iotools.NameValidator",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_excludelist": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.lib._iotools.NameValidator",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_missing_names": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.lib._iotools.NameValidator",
    "numpy.testing.assert_equal",
    "validator"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_validate_nb_names": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.lib._iotools.NameValidator",
    "numpy.testing.assert_equal",
    "validator"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestNameValidator.test_validate_wo_names": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.lib._iotools.NameValidator",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "validator"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_creation": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "int",
    "numpy.lib._iotools.StringConverter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_int64_dtype": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "converter",
    "numpy.int64",
    "numpy.lib._iotools.StringConverter",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_keep_default": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "converter",
    "converter.default",
    "converter.type",
    "converter.upgrade",
    "float",
    "numpy.dtype",
    "numpy.lib._iotools.StringConverter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_keep_default_zero": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "converter",
    "converter.default",
    "int",
    "numpy.lib._iotools.StringConverter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_keep_missing_values": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "converter",
    "converter.missing_values",
    "int",
    "numpy.lib._iotools.StringConverter",
    "numpy.testing.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_missing": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "converter",
    "converter.default",
    "numpy.lib._iotools.StringConverter",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_string_to_object": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "hasattr",
    "numpy.lib._iotools.StringConverter",
    "numpy.lib._iotools.StringConverter._mapper",
    "numpy.lib.tests.test__iotools._bytes_to_date",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_uint64_dtype": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "converter",
    "numpy.lib._iotools.StringConverter",
    "numpy.testing.assert_",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_upgrade": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "complex",
    "int",
    "numpy.compat.unicode",
    "numpy.core.numeric.dtype",
    "numpy.core.numeric.int64",
    "numpy.core.numeric.int_",
    "numpy.lib._iotools.StringConverter",
    "numpy.testing.assert_",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.TestStringConverter.test_upgrademapper": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "convert",
    "datetime.date",
    "numpy.lib._iotools.StringConverter",
    "numpy.lib._iotools.StringConverter.upgrade_mapper",
    "numpy.lib.tests.test__iotools._bytes_to_date",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools._bytes_to_date": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "datetime.date",
    "numpy.lib.tests.test__iotools.time"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__iotools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.easy_dtype": {
  "data": {
   "shadows": "numpy.lib._iotools.easy_dtype"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.flatten_dtype": {
  "data": {
   "shadows": "numpy.lib._iotools.flatten_dtype"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.has_nested_fields": {
  "data": {
   "shadows": "numpy.lib._iotools.has_nested_fields"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__iotools.unicode": {
  "data": {
   "shadows": "numpy.compat.unicode"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__version": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test__version.NumpyVersion": {
  "data": {
   "shadows": "numpy.lib.NumpyVersion"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__version.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__version.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__version.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__version.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__version.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__version.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test__version.test_alpha_beta_rc": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.lib.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_dev0_a_b_rc_mixed": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.lib.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_dev0_version": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.lib.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_dev_a_b_rc_mixed": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.lib.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_dev_version": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.lib.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_main_versions": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.lib.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_raises": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.NumpyVersion",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test__version.test_version_1_point_10": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.lib.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_arraypad.TestConditionalShortcuts": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestConditionalShortcuts.test_clip_statistic_range": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConditionalShortcuts.test_shallow_statistic_range": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConditionalShortcuts.test_zero_padding_shortcuts": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_float": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_float2": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float64",
    "numpy.lib.pad",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_float3": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_odd_pad_amount": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_pad_2d": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestConstant.test_check_constant_zeros": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestEdge": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestEdge.test_check_simple": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.reshape",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestEdge.test_check_width_shape_1_2": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestLegacyVectorFunction": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestLegacyVectorFunction.test_legacy_vector_functionality": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestLegacyVectorFunction.test_legacy_vector_functionality._padwithtens": {
  "data": {
   "lineno": 950
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp.test_check_2d": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float64",
    "numpy.lib.pad",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestLinearRamp.test_check_simple": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestNdarrayPadWidth": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestNdarrayPadWidth.test_check_simple": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.reshape",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_01": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_02": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_03": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_large_pad": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_odd_method": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_padding_an_empty_array": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_shape": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestReflect.test_check_simple": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatLen": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestStatLen.test_check_simple": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.reshape",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_maximum_1": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_maximum_2": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_maximum_stat_length": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_mean_2": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_mean_shape_one": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_mean_stat_length": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median_01": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median_02": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_median_stat_length": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_minimum_1": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_minimum_2": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestStatistic.test_check_minimum_stat_length": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_01": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_02": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_03": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_large_pad": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_large_pad_odd": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_odd_method": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_shape": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestSymmetric.test_check_simple": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestTypeError1": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestTypeError1.test_check_wrong_pad_amount": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.reshape",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestTypeError1.test_complex": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "TypeError",
    "complex",
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestTypeError1.test_float": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestTypeError1.test_object": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "FooBar",
    "TypeError",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestTypeError1.test_object.FooBar": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestTypeError1.test_str": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestUnicodeInput": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestUnicodeInput.test_unicode_mode": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestValueError1": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestValueError1.test_check_empty_array": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.pad",
    "numpy.ndarray",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestValueError1.test_check_negative_pad_width": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.reshape",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestValueError1.test_check_negative_stat_length": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.reshape",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestValueError1.test_check_simple": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.reshape",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestValueError2": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestValueError2.test_check_negative_pad_amount": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.reshape",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestValueError3": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestValueError3.test_check_kwarg_not_allowed": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestValueError3.test_malformed_pad_amount": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestValueError3.test_malformed_pad_amount2": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestValueError3.test_mode_not_set": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestValueError3.test_pad_too_many_axes": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_01": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_02": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_large_pad": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.reshape",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestWrap.test_check_simple": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.pad",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.TestZeroPadWidth": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraypad.TestZeroPadWidth.test_zero_pad_width": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.pad",
    "numpy.reshape",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraypad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.pad": {
  "data": {
   "shadows": "numpy.lib.pad"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraypad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_ediff1d": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.lib.arraysetops.ediff1d",
    "numpy.matrix",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.arraysetops.in1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_both_arrays_are_object": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.in1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_both_arrays_have_structured_dtype": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.in1d",
    "numpy.testing.assert_array_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_char_array": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.arraysetops.in1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_first_array_is_object": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.in1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_invert": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.invert",
    "numpy.lib.arraysetops.in1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_ravel": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.arraysetops.in1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_in1d_second_array_is_object": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.in1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_intersect1d": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.arraysetops.intersect1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_isin": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "assert_isin_equal",
    "bool",
    "numpy.arange",
    "numpy.array",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_isin._isin_slow": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_isin.assert_isin_equal": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "isin_slow",
    "numpy.lib.arraysetops.isin",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_manyways": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.arraysetops.intersect1d",
    "numpy.lib.arraysetops.setdiff1d",
    "numpy.lib.arraysetops.setxor1d",
    "numpy.lib.arraysetops.union1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_setdiff1d": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.arraysetops.setdiff1d",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_setdiff1d_char_array": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.arraysetops.setdiff1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_setxor1d": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.arraysetops.setxor1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestSetOps.test_union1d": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.arraysetops.union1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique._run_axis_tests": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dstack",
    "numpy.lib.arraysetops.unique",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_1d": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "check_all",
    "len",
    "list",
    "numpy.array",
    "numpy.chararray",
    "numpy.empty",
    "numpy.intp",
    "numpy.lib.arraysetops.unique",
    "numpy.multiply",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.typecodes",
    "numpy.unique",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_1d.check_all": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.lib.arraysetops.unique",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_axis": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.lib.arraysetops.unique",
    "numpy.testing.assert_array_equal",
    "numpy.typecodes",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_axis_errors": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "numpy.arange",
    "numpy.lib.arraysetops.unique",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_axis_list": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.lib.arraysetops.unique",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_masked": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ma.masked_equal",
    "numpy.testing.assert_array_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestUnique.test_unique_sort_order_with_axis": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.ediff1d": {
  "data": {
   "shadows": "numpy.lib.arraysetops.ediff1d"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.in1d": {
  "data": {
   "shadows": "numpy.lib.arraysetops.in1d"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.intersect1d": {
  "data": {
   "shadows": "numpy.lib.arraysetops.intersect1d"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.isin": {
  "data": {
   "shadows": "numpy.lib.arraysetops.isin"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.setdiff1d": {
  "data": {
   "shadows": "numpy.lib.arraysetops.setdiff1d"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.setxor1d": {
  "data": {
   "shadows": "numpy.lib.arraysetops.setxor1d"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.union1d": {
  "data": {
   "shadows": "numpy.lib.arraysetops.union1d"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.unique": {
  "data": {
   "shadows": "numpy.lib.arraysetops.unique"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_arrayterator.Arrayterator": {
  "data": {
   "shadows": "numpy.lib.Arrayterator"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.test": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "functools.reduce",
    "len",
    "list",
    "numpy.all",
    "numpy.arange",
    "numpy.lib.Arrayterator",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.testing.assert_",
    "operator.mul",
    "range",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_financial.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.TestFinancial": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_broadcast": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "list",
    "numpy.ipmt",
    "numpy.nper",
    "numpy.ppmt",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_broadcast_decimal": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "decimal.Decimal",
    "list",
    "numpy.ipmt",
    "numpy.ppmt",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_decimal_with_when": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.fv",
    "numpy.ipmt",
    "numpy.pmt",
    "numpy.ppmt",
    "numpy.pv",
    "numpy.rate",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_fv": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.fv",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_fv_decimal": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.fv",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ipmt": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.ipmt",
    "numpy.round",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ipmt_decimal": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.ipmt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_irr": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.irr",
    "numpy.nan",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_mirr": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.mirr",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_mirr_decimal": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.isnan",
    "numpy.mirr",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_nper": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.nper",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_nper2": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.nper",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_npv": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.npv",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_npv_decimal": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.npv",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pmt": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.pmt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pmt_decimal": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.array",
    "numpy.pmt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.ppmt",
    "numpy.round",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt_decimal": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.ppmt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt_special_rate": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.ppmt",
    "numpy.round",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt_special_rate_decimal": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "AssertionError",
    "decimal.Decimal",
    "numpy.ppmt",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_ppmt_special_rate_decimal.raise_error_because_not_equal": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.ppmt",
    "numpy.testing.assert_equal",
    "round"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pv": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.pv",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pv_decimal": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.pv",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_rate": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.rate",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_rate_decimal": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.rate",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_when": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.fv",
    "numpy.ipmt",
    "numpy.nper",
    "numpy.pmt",
    "numpy.ppmt",
    "numpy.pv",
    "numpy.rate",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.arange",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.lib.tests.test_format.NbufferT",
    "numpy.lib.tests.test_format.Ndescr",
    "numpy.lib.tests.test_format.PbufferT",
    "numpy.lib.tests.test_format.Pdescr",
    "numpy.lib.tests.test_format.basic",
    "numpy.lib.tests.test_format.basic_arrays",
    "numpy.lib.tests.test_format.dtype",
    "numpy.lib.tests.test_format.scalars",
    "numpy.testing.run_module_suite",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "object"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_format.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.BytesIOSRandomSize": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "io.BytesIO"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_format.BytesIOSRandomSize.read": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.lib.tests.test_format.BytesIOSRandomSize",
    "numpy.lib.tests.test_format.random",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.NbufferT": {
  "data": {
   "lineno": 399
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.Ndescr": {
  "data": {
   "lineno": 380
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.PbufferT": {
  "data": {
   "lineno": 361
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.Pdescr": {
  "data": {
   "lineno": 355
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.SkipTest": {
  "data": {
   "shadows": "numpy.testing.SkipTest"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.__builtin__": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.assert_equal_": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.bad_version_magic": {
  "data": {
   "lineno": 689
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.basic": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.basic_arrays": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.dtype": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.format": {
  "data": {
   "shadows": "numpy.lib.format"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.malformed_magic": {
  "data": {
   "lineno": 697
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.raises": {
  "data": {
   "shadows": "numpy.testing.raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.record_arrays": {
  "data": {
   "lineno": 409
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.roundtrip": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.lib.format.read_array",
    "numpy.lib.format.write_array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.roundtrip_randsize": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.lib.format.read_array",
    "numpy.lib.format.write_array",
    "numpy.lib.tests.test_format.BytesIOSRandomSize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.roundtrip_truncated": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.lib.format.read_array",
    "numpy.lib.format.write_array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.scalars": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.setup_module": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.lib.tests.test_format.tempdir",
    "numpy.lib.tests.test_format.tempfile"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.sp": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.teardown_module": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.lib.tests.test_format.os",
    "numpy.lib.tests.test_format.shutil",
    "numpy.lib.tests.test_format.tempdir"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.tempdir": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.test_bad_header": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "numpy.lib.format.read_array_header_1_0",
    "numpy.lib.format.write_array_header_1_0",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_bad_magic_args": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.format.magic",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_compressed_roundtrip": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "numpy.lib.tests.test_format.os",
    "numpy.lib.tests.test_format.tempdir",
    "numpy.load",
    "numpy.random.rand",
    "numpy.savez_compressed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_large_archive": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "MemoryError",
    "numpy.dtype",
    "numpy.empty",
    "numpy.intp",
    "numpy.lib.tests.test_format.os",
    "numpy.lib.tests.test_format.tempdir",
    "numpy.load",
    "numpy.savez",
    "numpy.testing.SkipTest",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif",
    "numpy.testing.dec.slow",
    "numpy.uint8",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_large_file_support": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "Exception",
    "numpy.arange",
    "numpy.lib.tests.test_format.os",
    "numpy.lib.tests.test_format.sys",
    "numpy.lib.tests.test_format.tempdir",
    "numpy.load",
    "numpy.save",
    "numpy.testing.SkipTest",
    "numpy.testing.assert_array_equal",
    "open",
    "subprocess.check_call"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_large_header": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "numpy.lib.format.write_array_header_1_0",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_long_str": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.lib.format.BUFFER_SIZE",
    "numpy.lib.tests.test_format.roundtrip",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_memmap_roundtrip": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.lib.format.open_memmap",
    "numpy.lib.format.write_array",
    "numpy.lib.tests.test_format.assert_equal_",
    "numpy.lib.tests.test_format.basic_arrays",
    "numpy.lib.tests.test_format.os",
    "numpy.lib.tests.test_format.record_arrays",
    "numpy.lib.tests.test_format.sys",
    "numpy.lib.tests.test_format.tempdir",
    "numpy.testing.dec.slow",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_pickle_disallow": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.lib.tests.test_format.os",
    "numpy.lib.tests.test_format.tempdir",
    "numpy.load",
    "numpy.save",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_pickle_python2_python3": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "ImportError",
    "UnicodeError",
    "bytes",
    "isinstance",
    "numpy.array",
    "numpy.lib.tests.test_format.__builtin__",
    "numpy.lib.tests.test_format.os",
    "numpy.lib.tests.test_format.sys",
    "numpy.load",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "object",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_python2_python3_interoperability": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "numpy.lib.tests.test_format.os",
    "numpy.lib.tests.test_format.sys",
    "numpy.load",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_array_header_1_0": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "float",
    "io.BytesIO",
    "numpy.lib.format.ARRAY_ALIGN",
    "numpy.lib.format.MAGIC_LEN",
    "numpy.lib.format.read_array_header_1_0",
    "numpy.lib.format.write_array",
    "numpy.lib.tests.test_format.dtype",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_array_header_2_0": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "float",
    "io.BytesIO",
    "numpy.lib.format.ARRAY_ALIGN",
    "numpy.lib.format.MAGIC_LEN",
    "numpy.lib.format.read_array_header_2_0",
    "numpy.lib.format.write_array",
    "numpy.lib.tests.test_format.dtype",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_magic": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "float",
    "io.BytesIO",
    "numpy.lib.format.MAGIC_LEN",
    "numpy.lib.format.read_magic",
    "numpy.lib.format.write_array",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_magic_bad_magic": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "numpy.lib.format.read_magic",
    "numpy.lib.tests.test_format.malformed_magic",
    "numpy.testing.raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_version_1_0_bad_magic": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "numpy.lib.format.read_array",
    "numpy.lib.tests.test_format.bad_version_magic",
    "numpy.lib.tests.test_format.malformed_magic",
    "numpy.testing.raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_roundtrip": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "numpy.lib.tests.test_format.basic_arrays",
    "numpy.lib.tests.test_format.record_arrays",
    "numpy.lib.tests.test_format.roundtrip",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_roundtrip_randsize": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "numpy.lib.tests.test_format.basic_arrays",
    "numpy.lib.tests.test_format.record_arrays",
    "numpy.lib.tests.test_format.roundtrip_randsize",
    "numpy.testing.assert_array_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_roundtrip_truncated": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.tests.test_format.basic_arrays",
    "numpy.lib.tests.test_format.roundtrip_truncated",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_version_2_0": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "float",
    "io.BytesIO",
    "len",
    "numpy.lib.format.ARRAY_ALIGN",
    "numpy.lib.format.read_array",
    "numpy.lib.format.write_array",
    "numpy.lib.tests.test_format.warnings",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_version_2_0_memmap": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "float",
    "numpy.lib.format.open_memmap",
    "numpy.lib.tests.test_format.tempdir",
    "numpy.lib.tests.test_format.tempfile",
    "numpy.lib.tests.test_format.warnings",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_write_version": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "io.BytesIO",
    "numpy.arange",
    "numpy.lib.format.write_array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_function_base.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.HAS_REFCOUNT": {
  "data": {
   "shadows": "numpy.testing.HAS_REFCOUNT"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc": {
  "data": {
   "lineno": 3486,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc.test_add_doc": {
  "data": {
   "lineno": 3488,
   "symbols_in_volume": [
    "len",
    "numpy.core.flatiter.index.__doc__",
    "numpy.core.ufunc.identity.__doc__",
    "numpy.lib.index_tricks.mgrid.__doc__",
    "numpy.lib.tests.test_function_base.sys",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc_ufunc": {
  "data": {
   "lineno": 3476,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc_ufunc.test_string_arg": {
  "data": {
   "lineno": 3482,
   "symbols_in_volume": [
    "TypeError",
    "numpy.add",
    "numpy.lib.add_newdoc_ufunc",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAdd_newdoc_ufunc.test_ufunc_arg": {
  "data": {
   "lineno": 3478,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.add",
    "numpy.lib.add_newdoc_ufunc",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAll": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAll.test_basic": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAll.test_nd": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.alltrue",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAmax": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAmax.test_basic": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "numpy.amax",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAmin": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAmin.test_basic": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "numpy.amin",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAngle": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAngle.test_basic": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "numpy.arctan",
    "numpy.array",
    "numpy.lib.angle",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAny": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAny.test_basic": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAny.test_nd": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.sometrue",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_basic": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.average",
    "numpy.matrix",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_object_dtype": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.average",
    "numpy.lib.tests.test_function_base.decimal",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_returned": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.average",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_subclasses": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.matrix",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_subclasses.subclass": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_upcasting": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.average",
    "numpy.dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_weights": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.average",
    "numpy.float32",
    "numpy.float64",
    "numpy.lib.average",
    "numpy.random.rand",
    "numpy.result_type",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount": {
  "data": {
   "lineno": 2583,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_dtype_reference_leaks": {
  "data": {
   "lineno": 2653,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.double",
    "numpy.dtype",
    "numpy.intp",
    "numpy.lib.tests.test_function_base.sys",
    "numpy.testing.HAS_REFCOUNT",
    "numpy.testing.assert_equal",
    "numpy.testing.dec.skipif",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_empty": {
  "data": {
   "lineno": 2626,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_empty_with_minlength": {
  "data": {
   "lineno": 2631,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple": {
  "data": {
   "lineno": 2585,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.bincount",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple2": {
  "data": {
   "lineno": 2589,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple_weight": {
  "data": {
   "lineno": 2593,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_simple_weight2": {
  "data": {
   "lineno": 2599,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_incorrect_minlength": {
  "data": {
   "lineno": 2636,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_minlength": {
  "data": {
   "lineno": 2605,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_minlength_and_weights": {
  "data": {
   "lineno": 2620,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestBincount.test_with_minlength_smaller_than_maxvalue": {
  "data": {
   "lineno": 2613,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite": {
  "data": {
   "lineno": 2144,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite.test_dtype_order": {
  "data": {
   "lineno": 2154,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.lib.asarray_chkfinite",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite.test_simple": {
  "data": {
   "lineno": 2146,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.lib.asarray_chkfinite",
    "numpy.nan",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCopy": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCopy.test_basic": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.copy",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCopy.test_order": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.copy",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef": {
  "data": {
   "lineno": 2161,
   "symbols_in_volume": [
    "numpy.array",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_bias": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.lib.corrcoef",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_warns",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_complex": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.lib.corrcoef",
    "numpy.testing.assert_",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_ddof": {
  "data": {
   "lineno": 2195,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.lib.corrcoef",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_warns",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_empty": {
  "data": {
   "lineno": 2229,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.array",
    "numpy.lib.corrcoef",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_extreme": {
  "data": {
   "lineno": 2238,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.errstate",
    "numpy.lib.corrcoef",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_non_array": {
  "data": {
   "lineno": 2182,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_simple": {
  "data": {
   "lineno": 2186,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.lib.corrcoef",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_xy": {
  "data": {
   "lineno": 2224,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.corrcoef",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov": {
  "data": {
   "lineno": 2246,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.integer",
    "numpy.ones",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_1D_rowvar": {
  "data": {
   "lineno": 2287,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.cov",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_1D_variance": {
  "data": {
   "lineno": 2292,
   "symbols_in_volume": [
    "numpy.lib.cov",
    "numpy.testing.assert_allclose",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_aweights": {
  "data": {
   "lineno": 2311,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "numpy.lib.cov",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_basic": {
  "data": {
   "lineno": 2259,
   "symbols_in_volume": [
    "numpy.lib.cov",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_complex": {
  "data": {
   "lineno": 2262,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.cov",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_empty": {
  "data": {
   "lineno": 2271,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.array",
    "numpy.lib.cov",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_fweights": {
  "data": {
   "lineno": 2295,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "f",
    "numpy.integer",
    "numpy.lib.cov",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_unit_fweights_and_aweights": {
  "data": {
   "lineno": 2323,
   "symbols_in_volume": [
    "numpy.lib.cov",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_wrong_ddof": {
  "data": {
   "lineno": 2280,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.array",
    "numpy.inf",
    "numpy.lib.cov",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCov.test_xy": {
  "data": {
   "lineno": 2266,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.cov",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCumprod": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCumprod.test_basic": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "ArithmeticError",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.cumprod",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.uint16",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCumsum": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCumsum.test_basic": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.cumsum",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.testing.assert_array_equal",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDelete._check_inverse_of_slicing": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.asarray",
    "numpy.compat.long",
    "numpy.integer",
    "numpy.intp",
    "numpy.lib.delete",
    "numpy.lib.setxor1d",
    "numpy.testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.setup": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_0d": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.array",
    "numpy.lib.delete",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_array_order_preserve": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.delete",
    "numpy.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_fancy": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "bool",
    "numpy.array",
    "numpy.lib.delete",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_single": {
  "data": {
   "lineno": 758
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_slices": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_subclass": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "isinstance",
    "numpy.lib.delete",
    "numpy.testing.assert_",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDelete.test_subclass.SubClass": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDiff": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_axis": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.AxisError",
    "numpy.lib.diff",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_basic": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.diff",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_n": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "list",
    "max",
    "numpy.int_",
    "numpy.lib.diff",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_nd": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "numpy.lib.diff",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_subclass": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "numpy.lib.diff",
    "numpy.ma.array",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_times": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.array",
    "numpy.datetime64",
    "numpy.lib.diff",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_casting_error": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "TypeError",
    "numpy.lib.digitize",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_forward": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.digitize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_monotonic": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.digitize",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_random": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "bin",
    "numpy.all",
    "numpy.lib.digitize",
    "numpy.linspace",
    "numpy.random.rand",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_return_type": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.lib.digitize",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_return_type.A": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_reverse": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.digitize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_basic": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "numpy.lib.digitize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_open": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.digitize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_open_random": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.lib.digitize",
    "numpy.linspace",
    "numpy.random.rand",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_right_open_reverse": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.digitize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_basic": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.extract",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_both": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "numpy.lib.extract",
    "numpy.lib.place",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_place": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.lib.place",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_raises_regex",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_bartlett": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "numpy.lib.bartlett",
    "numpy.lib.flipud",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_blackman": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "numpy.lib.blackman",
    "numpy.lib.flipud",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_hamming": {
  "data": {
   "lineno": 1509,
   "symbols_in_volume": [
    "numpy.lib.flipud",
    "numpy.lib.hamming",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_hanning": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "numpy.lib.flipud",
    "numpy.lib.hanning",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_3d_swap_axis0": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.flip",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_3d_swap_axis1": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.flip",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_3d_swap_axis2": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.flip",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_4d": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.flip",
    "numpy.flipud",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_axes": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "numpy.flip",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_basic_lr": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.flip",
    "numpy.lib.tests.test_function_base.get_mat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFlip.test_basic_ud": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.flip",
    "numpy.lib.tests.test_function_base.get_mat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_args": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.cumsum",
    "numpy.lib.gradient",
    "numpy.ones",
    "numpy.stack",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_badargs": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.lib.gradient",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_basic": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.gradient",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_datetime64": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.gradient",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_inexact_dtypes": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diff",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.lib.gradient",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_masked": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "numpy.gradient",
    "numpy.lib.gradient",
    "numpy.ma.arange",
    "numpy.ma.array",
    "numpy.ma.masked",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_second_order_accurate": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.gradient",
    "numpy.linspace",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.sort",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_spacing": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.gradient",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_specific_axes": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "TypeError",
    "numpy.AxisError",
    "numpy.array",
    "numpy.lib.gradient",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_timedelta64": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.gradient",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_values": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.lib.gradient",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.setup": {
  "data": {
   "lineno": 1622
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.teardown": {
  "data": {
   "lineno": 1625
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_bin_edge_cases": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.histogram",
    "numpy.testing.assert_",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_density": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.histogram",
    "numpy.inf",
    "numpy.lib.diff",
    "numpy.lib.histogram",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_empty": {
  "data": {
   "lineno": 1805,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.histogram",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_error_binnum_type": {
  "data": {
   "lineno": 1810,
   "symbols_in_volume": [
    "TypeError",
    "numpy.lib.histogram",
    "numpy.linspace",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_exotic_weights": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.array",
    "numpy.lib.histogram",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_f32_rounding": {
  "data": {
   "lineno": 1732,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.histogram2d",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_finite_range": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.lib.histogram",
    "numpy.linspace",
    "numpy.nan",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_last_bin_inclusive_range": {
  "data": {
   "lineno": 1834,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.histogram",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_no_side_effects": {
  "data": {
   "lineno": 1798,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.histogram",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_normed": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.diff",
    "numpy.lib.histogram",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_one_bin": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.lib.histogram",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_outliers": {
  "data": {
   "lineno": 1693,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.diff",
    "numpy.lib.histogram",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_simple": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": [
    "numpy.lib.histogram",
    "numpy.linspace",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_type": {
  "data": {
   "lineno": 1717,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.arange",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.lib.histogram",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_unsigned_monotonicity_check": {
  "data": {
   "lineno": 1839,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.histogram",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_weights": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.lib.histogram",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramOptimBinNums": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestHistogramOptimBinNums.test_empty": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.histogram",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramOptimBinNums.test_incorrect_methods": {
  "data": {
   "lineno": 1909,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.histogram",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramOptimBinNums.test_novariance": {
  "data": {
   "lineno": 1917,
   "symbols_in_volume": [
    "len",
    "numpy.histogram",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramOptimBinNums.test_outlier": {
  "data": {
   "lineno": 1931,
   "symbols_in_volume": [
    "len",
    "numpy.histogram",
    "numpy.hstack",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramOptimBinNums.test_simple": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.histogram",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramOptimBinNums.test_simple_range": {
  "data": {
   "lineno": 1951,
   "symbols_in_volume": [
    "len",
    "numpy.histogram",
    "numpy.hstack",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramOptimBinNums.test_simple_weighted": {
  "data": {
   "lineno": 1982,
   "symbols_in_volume": [
    "TypeError",
    "numpy.lib.histogram",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramOptimBinNums.test_small": {
  "data": {
   "lineno": 1889,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.histogram",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd": {
  "data": {
   "lineno": 1992,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_bins_errors": {
  "data": {
   "lineno": 2076,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.histogramdd",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_empty": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.histogramdd",
    "numpy.lib.histogramdd",
    "numpy.testing.assert_array_max_ulp",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_finite_range": {
  "data": {
   "lineno": 2123,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.lib.histogramdd",
    "numpy.nan",
    "numpy.random.random",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_identical_samples": {
  "data": {
   "lineno": 2065,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.histogramdd",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_inf_edges": {
  "data": {
   "lineno": 2088,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.errstate",
    "numpy.histogramdd",
    "numpy.inf",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_rightmost_binedge": {
  "data": {
   "lineno": 2100,
   "symbols_in_volume": [
    "numpy.lib.histogramdd",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_shape_3d": {
  "data": {
   "lineno": 2031,
   "symbols_in_volume": [
    "numpy.lib.histogramdd",
    "numpy.random.rand",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_shape_4d": {
  "data": {
   "lineno": 2040,
   "symbols_in_volume": [
    "numpy.lib.histogramdd",
    "numpy.random.rand",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_simple": {
  "data": {
   "lineno": 1994,
   "symbols_in_volume": [
    "list",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.lib.histogramdd",
    "numpy.lib.split",
    "numpy.squeeze",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_weights": {
  "data": {
   "lineno": 2054,
   "symbols_in_volume": [
    "int",
    "numpy.lib.histogramdd",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_0d": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.array",
    "numpy.lib.insert",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_basic": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.float64",
    "numpy.lib.insert",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_index_array_copied": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.insert",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_multidim": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.AxisError",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.lib.insert",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_structured_array": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.insert",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_subclass": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.insert",
    "numpy.testing.assert_",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_subclass.SubClass": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestInterp": {
  "data": {
   "lineno": 2670,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_basic": {
  "data": {
   "lineno": 2679,
   "symbols_in_volume": [
    "numpy.interp",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_complex_interp": {
  "data": {
   "lineno": 2737,
   "symbols_in_volume": [
    "numpy.interp",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_exceptions": {
  "data": {
   "lineno": 2672,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.interp",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_if_len_x_is_small": {
  "data": {
   "lineno": 2767,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.interp",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_period": {
  "data": {
   "lineno": 2772,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.interp",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_right_left_behavior": {
  "data": {
   "lineno": 2685,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.double",
    "numpy.lib.interp",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_scalar_interpolation_point": {
  "data": {
   "lineno": 2723,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.interp",
    "numpy.linspace",
    "numpy.nan",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInterp.test_zero_dimensional_interpolation_point": {
  "data": {
   "lineno": 2759,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.interp",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestKaiser": {
  "data": {
   "lineno": 2370,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestKaiser.test_int_beta": {
  "data": {
   "lineno": 2385,
   "symbols_in_volume": [
    "numpy.lib.kaiser"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestKaiser.test_simple": {
  "data": {
   "lineno": 2372,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isfinite",
    "numpy.lib.kaiser",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian": {
  "data": {
   "lineno": 3219,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_array_like": {
  "data": {
   "lineno": 3297,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_axis_keyword": {
  "data": {
   "lineno": 3246,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.median",
    "numpy.random.randint",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_basic": {
  "data": {
   "lineno": 3221,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.arange",
    "numpy.array",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.median",
    "numpy.nan",
    "numpy.testing.assert_",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_empty": {
  "data": {
   "lineno": 3388,
   "symbols_in_volume": [
    "RuntimeWarning",
    "float",
    "numpy.array",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.median",
    "numpy.nan",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_extended_axis": {
  "data": {
   "lineno": 3422,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dstack",
    "numpy.median",
    "numpy.moveaxis",
    "numpy.random.normal",
    "numpy.random.shuffle",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_extended_axis_invalid": {
  "data": {
   "lineno": 3452,
   "symbols_in_volume": [
    "ValueError",
    "numpy.AxisError",
    "numpy.median",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_keepdims": {
  "data": {
   "lineno": 3460,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_nan_behavior": {
  "data": {
   "lineno": 3340,
   "symbols_in_volume": [
    "RuntimeWarning",
    "float",
    "len",
    "numpy.arange",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.median",
    "numpy.nan",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_object": {
  "data": {
   "lineno": 3416,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.median",
    "numpy.nan",
    "numpy.testing.assert_",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_out": {
  "data": {
   "lineno": 3319,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_out_nan": {
  "data": {
   "lineno": 3328,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.median",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_overwrite_keyword": {
  "data": {
   "lineno": 3264,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.median",
    "numpy.random.shuffle",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass": {
  "data": {
   "lineno": 3304,
   "symbols_in_volume": [
    "MySubClass",
    "numpy.median",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass.MySubClass": {
  "data": {
   "lineno": 3306,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass.MySubClass.__new__": {
  "data": {
   "lineno": 3308,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMedian.test_subclass.MySubClass.mean": {
  "data": {
   "lineno": 3313
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid": {
  "data": {
   "lineno": 2402,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_indexing": {
  "data": {
   "lineno": 2424,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.lib.meshgrid",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_invalid_arguments": {
  "data": {
   "lineno": 2449,
   "symbols_in_volume": [
    "TypeError",
    "numpy.lib.meshgrid",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_no_input": {
  "data": {
   "lineno": 2419,
   "symbols_in_volume": [
    "numpy.lib.meshgrid",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_return_type": {
  "data": {
   "lineno": 2456,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.meshgrid",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_simple": {
  "data": {
   "lineno": 2404,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.meshgrid",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_single_input": {
  "data": {
   "lineno": 2415,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.meshgrid",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_sparse": {
  "data": {
   "lineno": 2444,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.meshgrid",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_writeback": {
  "data": {
   "lineno": 2480,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.meshgrid",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMsort": {
  "data": {
   "lineno": 2389,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMsort.test_simple": {
  "data": {
   "lineno": 2391,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.msort",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile": {
  "data": {
   "lineno": 2788,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_2D": {
  "data": {
   "lineno": 2809,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.percentile",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_api": {
  "data": {
   "lineno": 2802,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.percentile"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_axis": {
  "data": {
   "lineno": 2852,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.percentile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_basic": {
  "data": {
   "lineno": 2790,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.arange",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.nan",
    "numpy.percentile",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_exception": {
  "data": {
   "lineno": 2936,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.percentile",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_extended_axis": {
  "data": {
   "lineno": 3041,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dstack",
    "numpy.moveaxis",
    "numpy.percentile",
    "numpy.random.normal",
    "numpy.random.shuffle",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_extended_axis_invalid": {
  "data": {
   "lineno": 3073,
   "symbols_in_volume": [
    "ValueError",
    "numpy.AxisError",
    "numpy.ones",
    "numpy.percentile",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_keepdims": {
  "data": {
   "lineno": 3084,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.percentile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_linear": {
  "data": {
   "lineno": 2817,
   "symbols_in_volume": [
    "numpy.percentile",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_lower_higher": {
  "data": {
   "lineno": 2826,
   "symbols_in_volume": [
    "numpy.percentile",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_midpoint": {
  "data": {
   "lineno": 2834,
   "symbols_in_volume": [
    "numpy.percentile",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_nan_behavior": {
  "data": {
   "lineno": 3135,
   "symbols_in_volume": [
    "RuntimeWarning",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.nan",
    "numpy.percentile",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_nearest": {
  "data": {
   "lineno": 2842,
   "symbols_in_volume": [
    "numpy.percentile",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_no_p_overwrite": {
  "data": {
   "lineno": 3025,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace",
    "numpy.percentile",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_out": {
  "data": {
   "lineno": 3104,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.percentile",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_out_nan": {
  "data": {
   "lineno": 3117,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.nan",
    "numpy.ones",
    "numpy.percentile",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_percentile_empty_dim": {
  "data": {
   "lineno": 2988,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.percentile",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_percentile_list": {
  "data": {
   "lineno": 2944,
   "symbols_in_volume": [
    "numpy.percentile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_percentile_no_overwrite": {
  "data": {
   "lineno": 3016,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.percentile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_percentile_out": {
  "data": {
   "lineno": 2947,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.percentile",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_percentile_overwrite": {
  "data": {
   "lineno": 3033,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.percentile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_scalar_q": {
  "data": {
   "lineno": 2888,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.isscalar",
    "numpy.percentile",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPercentile.test_sequence": {
  "data": {
   "lineno": 2848,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.percentile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise": {
  "data": {
   "lineno": 2491,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_0d": {
  "data": {
   "lineno": 2539,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.piecewise",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_0d_0d_condition": {
  "data": {
   "lineno": 2569,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.piecewise",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_0d_comparison": {
  "data": {
   "lineno": 2554,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.piecewise",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_default": {
  "data": {
   "lineno": 2530,
   "symbols_in_volume": [
    "numpy.lib.piecewise",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_multidimensional_extrafunc": {
  "data": {
   "lineno": 2575,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.piecewise",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_scalar_domains_three_conditions": {
  "data": {
   "lineno": 2526,
   "symbols_in_volume": [
    "numpy.lib.piecewise",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_simple": {
  "data": {
   "lineno": 2493,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.lib.piecewise",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_two_conditions": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "numpy.lib.piecewise",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestProd": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestProd.test_basic": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "ArithmeticError",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.prod",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.uint16",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPtp": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestPtp.test_basic": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestRot90": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestRot90.test_axes": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.lib.rot90",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestRot90.test_basic": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.rot90",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestRot90.test_rotation_axes": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.rot90",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.array",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestSelect._select": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_basic": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "len",
    "numpy.lib.select",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_broadcasting": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.select",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_deprecated_empty": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.lib.select",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_many_arguments": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.select"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_non_bool_deprecation": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.int_",
    "numpy.lib.select",
    "numpy.lib.tests.test_function_base.warnings",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_warns",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_return_dtype": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.complex_",
    "numpy.int8",
    "numpy.isnan",
    "numpy.lib.select",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSinc": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestSinc.test_array_like": {
  "data": {
   "lineno": 1611,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.lib.sinc",
    "numpy.testing.assert_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSinc.test_simple": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "numpy.lib.flipud",
    "numpy.lib.sinc",
    "numpy.linspace",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_masked": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.trapz",
    "numpy.ma.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_matrix": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "numpy.lib.trapz",
    "numpy.linspace",
    "numpy.matrix",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_ndim": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": [
    "numpy.lib.trapz",
    "numpy.linspace",
    "numpy.ones_like",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_simple": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.exp",
    "numpy.lib.trapz",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_basic": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.trim_zeros",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_leading_skip": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.trim_zeros",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_trailing_skip": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.trim_zeros",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestUnique": {
  "data": {
   "lineno": 2132,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestUnique.test_simple": {
  "data": {
   "lineno": 2134,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.lib.unique",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestUnwrap": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestUnwrap.test_simple": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.lib.diff",
    "numpy.lib.unwrap",
    "numpy.pi",
    "numpy.random.rand",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_UnboundMethod_ticket_1156": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "Foo",
    "Foo.bar",
    "numpy.arange",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_UnboundMethod_ticket_1156.Foo": {
  "data": {
   "lineno": 1220
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_UnboundMethod_ticket_1156.Foo.bar": {
  "data": {
   "lineno": 1223
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_assigning_docstring": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "f",
    "f.__doc__",
    "numpy.lib.vectorize",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_assigning_docstring.foo": {
  "data": {
   "lineno": 1207
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_cache": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "f",
    "f.cache",
    "len",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_cache.f": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "numpy.lib.vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_coverage1_ticket_2100": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "f",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_coverage1_ticket_2100.foo": {
  "data": {
   "lineno": 1200
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_execution_order_ticket_1487": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "f1",
    "f2",
    "numpy.arange",
    "numpy.lib.vectorize",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "f",
    "numpy.array",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords.foo": {
  "data": {
   "lineno": 1126
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords2_ticket_2100": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "f",
    "numpy.array",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords2_ticket_2100.foo": {
  "data": {
   "lineno": 1151
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords3_ticket_2100": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.vectorize",
    "vpolyval"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords3_ticket_2100.mypolyval": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords4_ticket_2100": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "f",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords4_ticket_2100.f": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "numpy.lib.vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords5_ticket_2100": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "f",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords5_ticket_2100.f": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "numpy.lib.vectorize",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_keywords_no_func_code": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "numpy.lib.tests.test_function_base.random",
    "numpy.lib.vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_large": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "f",
    "numpy.lib.vectorize",
    "numpy.linspace",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_otypes": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "f",
    "f.otypes",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_parse_gufunc_signature": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.function_base._parse_gufunc_signature",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_scalar": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "f",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_scalar.addsubtract": {
  "data": {
   "lineno": 1100
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_center": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "f",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_center.center": {
  "data": {
   "lineno": 1307
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_computed_size": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "f",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_excluded": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "f",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_excluded.foo": {
  "data": {
   "lineno": 1347
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_invalid_inputs": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "numpy.lib.tests.test_function_base.operator",
    "numpy.lib.vectorize",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_invalid_outputs": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.lib.vectorize",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_mean_last": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "f",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_mean_last.mean": {
  "data": {
   "lineno": 1299
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_otypes": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "f",
    "numpy.dtype",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_outer": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "f",
    "numpy.lib.vectorize",
    "numpy.outer",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_simple": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "f",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_simple.addsubtract": {
  "data": {
   "lineno": 1288
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_signature_two_outputs": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "len",
    "numpy.lib.vectorize",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_simple": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "f",
    "numpy.lib.vectorize",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_simple.addsubtract": {
  "data": {
   "lineno": 1089
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_size_zero_output": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "f.otypes",
    "int",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises_regex",
    "numpy.vectorize",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_string_ticket_1892": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "f",
    "numpy.testing.assert_equal",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_ufunc": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "f",
    "numpy.array",
    "numpy.cos",
    "numpy.lib.tests.test_function_base.math",
    "numpy.lib.vectorize",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.Test_I0": {
  "data": {
   "lineno": 2344,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.Test_I0.test_simple": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.i0",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.add_newdoc_ufunc": {
  "data": {
   "shadows": "numpy.lib.add_newdoc_ufunc"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.angle": {
  "data": {
   "shadows": "numpy.lib.angle"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_array_max_ulp": {
  "data": {
   "shadows": "numpy.testing.assert_array_max_ulp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_raises_regex": {
  "data": {
   "shadows": "numpy.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.average": {
  "data": {
   "shadows": "numpy.lib.average"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.bartlett": {
  "data": {
   "shadows": "numpy.lib.bartlett"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.blackman": {
  "data": {
   "shadows": "numpy.lib.blackman"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.compare_results": {
  "data": {
   "lineno": 2783,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.corrcoef": {
  "data": {
   "shadows": "numpy.lib.corrcoef"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.cov": {
  "data": {
   "shadows": "numpy.lib.cov"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.delete": {
  "data": {
   "shadows": "numpy.lib.delete"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.diff": {
  "data": {
   "shadows": "numpy.lib.diff"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.digitize": {
  "data": {
   "shadows": "numpy.lib.digitize"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.extract": {
  "data": {
   "shadows": "numpy.lib.extract"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.flipud": {
  "data": {
   "shadows": "numpy.lib.flipud"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.get_mat": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.add.outer",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.gradient": {
  "data": {
   "shadows": "numpy.lib.gradient"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.hamming": {
  "data": {
   "shadows": "numpy.lib.hamming"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.hanning": {
  "data": {
   "shadows": "numpy.lib.hanning"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.histogram": {
  "data": {
   "shadows": "numpy.lib.histogram"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.histogramdd": {
  "data": {
   "shadows": "numpy.lib.histogramdd"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.i0": {
  "data": {
   "shadows": "numpy.lib.i0"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.insert": {
  "data": {
   "shadows": "numpy.lib.insert"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.interp": {
  "data": {
   "shadows": "numpy.lib.interp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.kaiser": {
  "data": {
   "shadows": "numpy.lib.kaiser"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.meshgrid": {
  "data": {
   "shadows": "numpy.lib.meshgrid"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.msort": {
  "data": {
   "shadows": "numpy.lib.msort"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.nfb": {
  "data": {
   "shadows": "numpy.lib.function_base"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.piecewise": {
  "data": {
   "shadows": "numpy.lib.piecewise"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.place": {
  "data": {
   "shadows": "numpy.lib.place"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.rot90": {
  "data": {
   "shadows": "numpy.lib.rot90"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.select": {
  "data": {
   "shadows": "numpy.lib.select"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.setxor1d": {
  "data": {
   "shadows": "numpy.lib.setxor1d"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.sinc": {
  "data": {
   "shadows": "numpy.lib.sinc"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.split": {
  "data": {
   "shadows": "numpy.lib.split"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.trapz": {
  "data": {
   "shadows": "numpy.lib.trapz"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.trim_zeros": {
  "data": {
   "shadows": "numpy.lib.trim_zeros"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.unique": {
  "data": {
   "shadows": "numpy.lib.unique"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.unwrap": {
  "data": {
   "shadows": "numpy.lib.unwrap"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.vectorize": {
  "data": {
   "shadows": "numpy.lib.vectorize"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_1d": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.index_tricks.r_",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_2d": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.r_",
    "numpy.random.rand",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_matrix": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.matrix",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_matrix_builder": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bmat",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_matrix_scalar": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.matrix",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_mixed_type": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.r_",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_more_mixed_type": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.index_tricks.r_",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_basic": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.mgrid",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_linspace_equivalence": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.mgrid",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_nd": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.mgrid",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIndexExpression": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestIndexExpression.test_regression_1": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.index_tricks.index_exp",
    "numpy.lib.index_tricks.s_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIndexExpression.test_simple_1": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.index_exp",
    "numpy.lib.index_tricks.s_",
    "numpy.random.rand",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_.test_1d_only": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ix_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_.test_bool": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.ix_",
    "numpy.nonzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_.test_regression_1": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "func",
    "numpy.arange",
    "numpy.intp",
    "numpy.ix_",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_.test_repeated_input": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.index_tricks.ix_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestIx_.test_shape_and_dtype": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "func",
    "numpy.arange",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ix_",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestNdenumerate": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestNdenumerate.test_basic": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.lib.index_tricks.ndenumerate",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_0d": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises_regex",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_basic": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.ravel_multi_index",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_big_indices": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "numpy.iinfo",
    "numpy.int64",
    "numpy.intp",
    "numpy.ravel_multi_index",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_clipmodes": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ravel_multi_index",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_dtypes": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.ravel_multi_index",
    "numpy.testing.assert_equal",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestRavelUnravelIndex.test_writeability": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.assert_raises_regex": {
  "data": {
   "shadows": "numpy.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.diag_indices": {
  "data": {
   "shadows": "numpy.lib.index_tricks.diag_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.diag_indices_from": {
  "data": {
   "shadows": "numpy.lib.index_tricks.diag_indices_from"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.fill_diagonal": {
  "data": {
   "shadows": "numpy.lib.index_tricks.fill_diagonal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.index_exp": {
  "data": {
   "shadows": "numpy.lib.index_tricks.index_exp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.ix_": {
  "data": {
   "shadows": "numpy.lib.index_tricks.ix_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.mgrid": {
  "data": {
   "shadows": "numpy.lib.index_tricks.mgrid"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.ndenumerate": {
  "data": {
   "shadows": "numpy.lib.index_tricks.ndenumerate"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.ndindex": {
  "data": {
   "shadows": "numpy.lib.index_tricks.ndindex"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.r_": {
  "data": {
   "shadows": "numpy.lib.index_tricks.r_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.s_": {
  "data": {
   "shadows": "numpy.lib.index_tricks.s_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.test_c_": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.c_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_diag_indices": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.index_tricks.diag_indices",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_diag_indices_from": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.index_tricks.diag_indices_from",
    "numpy.random.random",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_fill_diagonal": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.index_tricks.fill_diagonal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_ndindex": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "list",
    "numpy.lib.index_tricks.ndenumerate",
    "numpy.lib.index_tricks.ndindex",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "numpy.lib.tests.test_io.sys",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_io.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.ConversionWarning": {
  "data": {
   "shadows": "numpy.lib._iotools.ConversionWarning"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.ConverterError": {
  "data": {
   "shadows": "numpy.lib._iotools.ConverterError"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.HAS_BZ2": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_io.HAS_LZMA": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_io.IS_64BIT": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_io.IS_PYPY": {
  "data": {
   "shadows": "numpy.testing.IS_PYPY"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.LoadTxtBase": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.check_compressed": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "fopen",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_binary_decode": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_compressed_gzip": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "numpy.lib.tests.test_io.HAS_LZMA",
    "numpy.lib.tests.test_io.lzma",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_converters_decode": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.testing.assert_array_equal",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_converters_nodecode": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_io.io",
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_encoding": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.LoadTxtBase.test_stringload": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath",
    "numpy.unicode",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.Path": {
  "data": {
   "shadows": "numpy.compat.Path"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.RoundtripTest": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.RoundtripTest.check_roundtrips": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.asfortranarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.roundtrip": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "io.BytesIO",
    "isinstance",
    "locals",
    "numpy.lib.npyio.NpzFile",
    "numpy.lib.tests.test_io.os",
    "numpy.lib.tests.test_io.sys",
    "numpy.load",
    "save_func",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_1D": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_array": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.cdouble",
    "numpy.csingle"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_array_object": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.array",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_format_2_0": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "UserWarning",
    "float",
    "numpy.lib.tests.test_io.warnings",
    "numpy.ones",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_mmap": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asfortranarray",
    "numpy.lib.tests.test_io.sys",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.RoundtripTest.test_record": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.SkipTest": {
  "data": {
   "shadows": "numpy.testing.SkipTest"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.TestFromTxt": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.LoadTxtBase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_1D": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ndfromtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_array": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.ndfromtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_auto_dtype": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "enumerate",
    "numpy.VisibleDeprecationWarning",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.warnings",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_auto_dtype_largeint": {
  "data": {
   "lineno": 2159,
   "symbols_in_volume": [
    "float",
    "numpy.int64",
    "numpy.integer",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "numpy.testing.assert_",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_auto_dtype_uniform": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_autonames_and_usecols": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.VisibleDeprecationWarning",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.warnings",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_autostrip": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "dict",
    "float",
    "numpy.VisibleDeprecationWarning",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.warnings",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_binary_decode_autodtype": {
  "data": {
   "lineno": 1926,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_commented_header": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.VisibleDeprecationWarning",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.warnings",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_comments": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_comments_is_none": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "numpy.VisibleDeprecationWarning",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.warnings",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_cornercases": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "datetime.datetime",
    "float",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.strptime",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_cornercases2": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "datetime.datetime",
    "float",
    "numpy.array",
    "numpy.datetime64",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.strptime",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_with_usecols": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_converters_with_usecols_and_names": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.VisibleDeprecationWarning",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.warnings",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_default_field_format": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_dtype_with_converters": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.compat.bytes",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_dtype_with_converters_and_usecols": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "int",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.rec.array",
    "numpy.recfromcsv"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_dtype_with_object": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "AssertionError",
    "NotImplementedError",
    "datetime.datetime",
    "int",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.strptime",
    "numpy.ma.testutils.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_easy_structured_dtype": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_empty_file": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_fancy_dtype": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_fancy_dtype_alt": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.mafromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_filling_values": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_fixed_width_names": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_from_gzip": {
  "data": {
   "lineno": 2134,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.arange",
    "numpy.compat.asbytes",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.gzip",
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_using_filename": {
  "data": {
   "lineno": 2120,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.genfromtxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_using_generator": {
  "data": {
   "lineno": 2150,
   "symbols_in_volume": [
    "count",
    "numpy.arange",
    "numpy.genfromtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_gft_using_generator.count": {
  "data": {
   "lineno": 2152,
   "symbols_in_volume": [
    "numpy.compat.asbytes",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_header": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "numpy.VisibleDeprecationWarning",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.warnings",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_incomplete_names": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_inconsistent_dtype": {
  "data": {
   "lineno": 1697,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "int",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_integer_delimiter": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_converter": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "dict",
    "float",
    "numpy.genfromtxt",
    "numpy.lib._iotools.ConverterError",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise": {
  "data": {
   "lineno": 1646,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "int",
    "len",
    "numpy.lib._iotools.ConversionWarning",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_warns",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise.f": {
  "data": {
   "lineno": 1659,
   "symbols_in_volume": [
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise_with_usecols": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "dict",
    "int",
    "len",
    "numpy.lib._iotools.ConversionWarning",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "numpy.ones",
    "numpy.testing.assert_warns",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_invalid_raise_with_usecols.f": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": [
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_latin1": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "numpy.VisibleDeprecationWarning",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.warnings",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_max_rows": {
  "data": {
   "lineno": 2066,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib._iotools.ConversionWarning",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_missing": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_missing_with_tabs": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_names_auto_completion": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_names_overwrite": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_names_with_usecols_bug1636": {
  "data": {
   "lineno": 1841,
   "symbols_in_volume": [
    "int",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_recfromcsv": {
  "data": {
   "lineno": 2025,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.compat.bytes",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.recarray",
    "numpy.recfromcsv",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_recfromtxt": {
  "data": {
   "lineno": 2006,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.recarray",
    "numpy.recfromtxt",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_record": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_replace_space": {
  "data": {
   "lineno": 1770,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_replace_space_known_dtype": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_shaped_dtype": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ndfromtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_single_dtype_w_explicit_names": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_single_dtype_w_implicit_names": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_single_dtype_wo_names": {
  "data": {
   "lineno": 1716,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_skip_footer": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "dict",
    "float",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_skip_footer_with_invalid": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib._iotools.ConversionWarning",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_skiprows": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_spacedelimiter": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_tricky_converter_bug1666": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_unused_converter": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "int",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "numpy.savetxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_as_css": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_with_integer": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_with_named_columns": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "dict",
    "float",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_usecols_with_structured_dtype": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "list",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal",
    "numpy.ndfromtxt",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_user_filling_values": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_user_missing_values": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "complex",
    "dict",
    "float",
    "int",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.mafromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_userconverters_with_explicit_dtype": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.compat.bytes",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_utf8_byte_encoding": {
  "data": {
   "lineno": 1931,
   "symbols_in_volume": [
    "numpy.VisibleDeprecationWarning",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.warnings",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_utf8_file": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath",
    "numpy.unicode",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_utf8_file_nodtype_unicode": {
  "data": {
   "lineno": 1970,
   "symbols_in_volume": [
    "ImportError",
    "UnicodeError",
    "numpy.VisibleDeprecationWarning",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.io",
    "numpy.lib.tests.test_io.locale",
    "numpy.lib.tests.test_io.warnings",
    "numpy.testing.SkipTest",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_utf8_userconverters_with_explicit_dtype": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.genfromtxt",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.temppath",
    "numpy.unicode",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_with_masked_column_uniform": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": [
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_with_masked_column_various": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.genfromtxt",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_withmissing": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.mafromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestFromTxt.test_withmissing_float": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.mafromtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "numpy.lib.tests.test_io.LoadTxtBase",
    "numpy.loadtxt",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.setUp": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "numpy.lib.npyio._loadtxt_chunksize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.tearDown": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "numpy.lib.npyio._loadtxt_chunksize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_1D": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_3d_shaped_dtype": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_array": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_bad_line": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_binary_load": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_io.locale",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.dec.skipif",
    "numpy.testing.temppath",
    "numpy.unicode",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_comments_byte": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_comments_multi_chars": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_comments_multiple": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_comments_unicode": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_converters_with_usecols": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_dtype_with_object": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "datetime.datetime",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.lib.tests.test_io.strptime",
    "numpy.loadtxt",
    "numpy.ma.testutils.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_empty_field_after_tab": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_empty_file": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_fancy_dtype": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_from_complex": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "complex",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_from_float_hex": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "float",
    "float.hex",
    "map",
    "numpy.float32",
    "numpy.hstack",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.logspace",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_generator_source": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "count",
    "numpy.arange",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_generator_source.count": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_int64_type": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_missing": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_ndmin_keyword": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_none_as_string": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_record": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_shaped_dtype": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_skiprows": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_str_dtype": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bytes_",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_structure_unpack": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_uint64_type": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.ma.testutils.assert_equal",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_universal_newline": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_unused_converter": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "int",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_usecols": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "CrazyInt",
    "TypeError",
    "float",
    "int",
    "int_type",
    "io.BytesIO",
    "list",
    "numpy.array",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.loadtxt",
    "numpy.ma.testutils.assert_equal",
    "numpy.savetxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises_regex",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_usecols.CrazyInt": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestLoadTxt.test_usecols.CrazyInt.__index__": {
  "data": {
   "lineno": 766
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage": {
  "data": {
   "lineno": 2185,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_genfromtxt": {
  "data": {
   "lineno": 2225,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.compat.Path",
    "numpy.genfromtxt",
    "numpy.savetxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.dec.skipif",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_loadtxt": {
  "data": {
   "lineno": 2187,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.compat.Path",
    "numpy.loadtxt",
    "numpy.savetxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.dec.skipif",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_mafromtxt": {
  "data": {
   "lineno": 2246,
   "symbols_in_volume": [
    "numpy.compat.Path",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.mafromtxt",
    "numpy.testing.dec.skipif",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_ndfromtxt": {
  "data": {
   "lineno": 2234,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.compat.Path",
    "numpy.ndfromtxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.dec.skipif",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_recfromcsv": {
  "data": {
   "lineno": 2272,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.compat.Path",
    "numpy.ma.testutils.assert_equal",
    "numpy.recarray",
    "numpy.recfromcsv",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_recfromtxt": {
  "data": {
   "lineno": 2258,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.compat.Path",
    "numpy.ma.testutils.assert_equal",
    "numpy.recarray",
    "numpy.recfromtxt",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_save_load": {
  "data": {
   "lineno": 2196,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.compat.Path",
    "numpy.load",
    "numpy.save",
    "numpy.testing.assert_array_equal",
    "numpy.testing.dec.skipif",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_savez_compressed_load": {
  "data": {
   "lineno": 2215,
   "symbols_in_volume": [
    "numpy.compat.Path",
    "numpy.load",
    "numpy.savez_compressed",
    "numpy.testing.assert_array_equal",
    "numpy.testing.dec.skipif",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestPathUsage.test_savez_load": {
  "data": {
   "lineno": 2206,
   "symbols_in_volume": [
    "numpy.compat.Path",
    "numpy.load",
    "numpy.savez",
    "numpy.testing.assert_array_equal",
    "numpy.testing.dec.skipif",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveLoad": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.lib.tests.test_io.RoundtripTest"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSaveLoad.roundtrip": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.lib.tests.test_io.RoundtripTest",
    "numpy.ma.testutils.assert_equal",
    "numpy.save"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_0D_3D": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "numpy.array",
    "numpy.savetxt",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_1D": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "int",
    "io.BytesIO",
    "numpy.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.savetxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_array": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "float",
    "int",
    "io.BytesIO",
    "numpy.array",
    "numpy.compat.asbytes",
    "numpy.ma.testutils.assert_equal",
    "numpy.savetxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_complex_arrays": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.complex128",
    "numpy.e",
    "numpy.lib.tests.test_io.re",
    "numpy.ma.testutils.assert_equal",
    "numpy.pi",
    "numpy.savetxt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_custom_writer": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "CustomWriter",
    "numpy.array",
    "numpy.loadtxt",
    "numpy.savetxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_custom_writer.CustomWriter": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_custom_writer.CustomWriter.write": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_delimiter": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.savetxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_file_roundtrip": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.loadtxt",
    "numpy.savetxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_format": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "io.BytesIO",
    "numpy.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.savetxt",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_header_footer": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "int",
    "io.BytesIO",
    "numpy.array",
    "numpy.compat.asbytes",
    "numpy.ma.testutils.assert_equal",
    "numpy.savetxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_record": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.savetxt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_unicode": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_io.os",
    "numpy.savetxt",
    "numpy.testing.tempdir",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_unicode_bytestream": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.savetxt",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_unicode_roundtrip": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_io.HAS_BZ2",
    "numpy.lib.tests.test_io.HAS_LZMA",
    "numpy.lib.tests.test_io.os",
    "numpy.loadtxt",
    "numpy.savetxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.tempdir",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSaveTxt.test_unicode_stringstream": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "io.StringIO",
    "numpy.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.savetxt",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.lib.tests.test_io.RoundtripTest"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.roundtrip": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "enumerate",
    "numpy.lib.tests.test_io.RoundtripTest",
    "numpy.lib.tests.test_io.os",
    "numpy.ma.testutils.assert_equal",
    "numpy.savez"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_BagObj": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "complex",
    "dir",
    "float",
    "io.BytesIO",
    "numpy.array",
    "numpy.load",
    "numpy.ma.testutils.assert_equal",
    "numpy.savez",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_big_arrays": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.lib.tests.test_io.IS_64BIT",
    "numpy.load",
    "numpy.savez",
    "numpy.testing.dec.skipif",
    "numpy.testing.dec.slow",
    "numpy.testing.temppath",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_closing_fid": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "Warning",
    "numpy.load",
    "numpy.savez",
    "numpy.testing.IS_PYPY",
    "numpy.testing.dec.skipif",
    "numpy.testing.suppress_warnings",
    "numpy.testing.temppath",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_closing_zipfile_after_load": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.load",
    "numpy.savez",
    "numpy.testing.assert_",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_multiple_arrays": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "complex",
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_named_arrays": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "complex",
    "float",
    "io.BytesIO",
    "numpy.array",
    "numpy.load",
    "numpy.ma.testutils.assert_equal",
    "numpy.savez"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_not_closing_opened_fid": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.load",
    "numpy.savez",
    "numpy.testing.assert_",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_savez_filename_clashes": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.lib.tests.test_io.threading",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TestSavezLoad.test_savez_filename_clashes.writer": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "OSError",
    "numpy.random.randn",
    "numpy.savez",
    "numpy.testing.temppath"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.fromregex",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record_2": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.fromregex",
    "numpy.int32",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record_3": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.fromregex",
    "numpy.lib.tests.test_io.TextIO",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.Testfromregex.test_record_unicode": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.fromregex",
    "numpy.lib.tests.test_io.re",
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TextIO": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "io.BytesIO"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_io.TextIO.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "io.BytesIO.__init__",
    "numpy.compat.asbytes"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TextIO.write": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "io.BytesIO.write",
    "numpy.compat.asbytes"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.TextIO.writelines": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "io.BytesIO.writelines",
    "numpy.compat.asbytes"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.asbytes": {
  "data": {
   "shadows": "numpy.compat.asbytes"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_raises_regex": {
  "data": {
   "shadows": "numpy.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.bytes": {
  "data": {
   "shadows": "numpy.compat.bytes"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.lzma": {
  "data": {
   "shadows": "lzma"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.strptime": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.compat.bytes",
    "numpy.lib.tests.test_io.time",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.tempdir": {
  "data": {
   "shadows": "numpy.testing.tempdir"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.temppath": {
  "data": {
   "shadows": "numpy.testing.temppath"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.test_gzip_load": {
  "data": {
   "lineno": 2287,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.lib.tests.test_io.gzip",
    "numpy.load",
    "numpy.random.random",
    "numpy.save",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_gzip_loadtxt": {
  "data": {
   "lineno": 2301,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.lib.tests.test_io.gzip",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_gzip_loadtxt_from_string": {
  "data": {
   "lineno": 2322,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.lib.tests.test_io.gzip",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_load_refcount": {
  "data": {
   "lineno": 2360,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.lib.tests.test_io.gc",
    "numpy.load",
    "numpy.ma.testutils.assert_equal",
    "numpy.savez",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.test_npzfile_dict": {
  "data": {
   "lineno": 2333,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "numpy.load",
    "numpy.ma.testutils.assert_equal",
    "numpy.savez",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_io.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.unicode": {
  "data": {
   "shadows": "numpy.compat.unicode"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_io.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "divmod",
    "numpy.lib.tests.test_mixins.operator",
    "numpy.lib.tests.test_mixins.sys",
    "numpy.testing.run_module_suite",
    "pow"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_mixins.ArrayLike": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.lib.mixins.NDArrayOperatorsMixin",
    "numpy.lib.tests.test_mixins.numbers",
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_mixins.ArrayLike.__array_ufunc__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplemented",
    "getattr",
    "isinstance",
    "numpy.lib.tests.test_mixins.ArrayLike",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.ArrayLike.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.ArrayLike.__repr__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.PY2": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_array_like_add": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "check",
    "numpy.array",
    "numpy.lib.tests.test_mixins.ArrayLike"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_array_like_add.check": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.lib.tests.test_mixins.ArrayLike",
    "numpy.lib.tests.test_mixins._assert_equal_type_and_value"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_forward_binary_methods": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_mixins.ArrayLike",
    "numpy.lib.tests.test_mixins._ALL_BINARY_OPERATORS",
    "numpy.lib.tests.test_mixins._assert_equal_type_and_value",
    "numpy.lib.tests.test_mixins.wrap_array_like",
    "op"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_inplace": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_mixins.ArrayLike",
    "numpy.lib.tests.test_mixins._assert_equal_type_and_value"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_object": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "TypeError",
    "numpy.lib.tests.test_mixins.ArrayLike",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_opt_out": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "OptOut",
    "TypeError",
    "numpy.lib.tests.test_mixins.ArrayLike",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_opt_out.OptOut": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_opt_out.OptOut.__add__": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_opt_out.OptOut.__radd__": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_reflected_binary_methods": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.lib.tests.test_mixins.ArrayLike",
    "numpy.lib.tests.test_mixins._ALL_BINARY_OPERATORS",
    "numpy.lib.tests.test_mixins._assert_equal_type_and_value",
    "numpy.lib.tests.test_mixins.wrap_array_like",
    "op"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_subclass": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "SubArrayLike",
    "numpy.lib.tests.test_mixins.ArrayLike",
    "numpy.lib.tests.test_mixins._assert_equal_type_and_value"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_subclass.SubArrayLike": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.lib.tests.test_mixins.ArrayLike"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_ufunc_at": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_mixins.ArrayLike",
    "numpy.lib.tests.test_mixins._assert_equal_type_and_value",
    "numpy.negative.at",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_ufunc_two_outputs": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.frexp",
    "numpy.lib.tests.test_mixins.ArrayLike",
    "numpy.lib.tests.test_mixins._assert_equal_type_and_value"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.TestNDArrayOperatorsMixin.test_unary_methods": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "abs",
    "numpy.array",
    "numpy.lib.tests.test_mixins.ArrayLike",
    "numpy.lib.tests.test_mixins._assert_equal_type_and_value",
    "numpy.lib.tests.test_mixins.operator",
    "op"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins._ALL_BINARY_OPERATORS": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_mixins._assert_equal_type_and_value": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "numpy.testing.assert_equal",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_mixins.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_mixins.wrap_array_like": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.lib.tests.test_mixins.ArrayLike",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_dtype_from_char": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "nf",
    "numpy.ComplexWarning",
    "numpy.eye",
    "numpy.nanstd",
    "numpy.nanvar",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_dtype_from_dtype": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "nf",
    "numpy.ComplexWarning",
    "numpy.dtype",
    "numpy.eye",
    "numpy.nanstd",
    "numpy.nanvar",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_dtype_from_input": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "nf",
    "numpy.eye",
    "numpy.testing.assert_",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_keepdims": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "nf",
    "numpy.eye",
    "numpy.testing.assert_",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_matrices": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "numpy.eye",
    "numpy.isscalar",
    "numpy.matrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_mutation": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "f",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_out": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "nf",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_result_values": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "nf",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.lib.tests.test_nanfunctions._rdat",
    "numpy.testing.assert_almost_equal",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin.test_scalar": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "f",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.nanargmax",
    "numpy.nanargmin",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_allnans": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_empty": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_matrices": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "numpy.eye",
    "numpy.isscalar",
    "numpy.matrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_mutation": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "f",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_result_values": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "RuntimeWarning",
    "f",
    "fcmp",
    "numpy.equal",
    "numpy.greater",
    "numpy.isnan",
    "numpy.less",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_ArgminArgmax.test_scalar": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "f",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.cumprod",
    "numpy.cumsum",
    "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin",
    "numpy.nancumprod",
    "numpy.nancumsum"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_allnans": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "f",
    "numpy.array_equal",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_no_warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_empty": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "f",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_keepdims": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "f",
    "g",
    "numpy.arange",
    "numpy.eye",
    "numpy.nan",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_matrices": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "numpy.arange",
    "numpy.eye",
    "numpy.matrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_out": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "nf",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_CumSumProd.test_result_values": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.cumprod",
    "numpy.cumsum",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.lib.tests.test_nanfunctions._ndat_ones",
    "numpy.lib.tests.test_nanfunctions._ndat_zeros",
    "numpy.nancumprod",
    "numpy.nancumsum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.integer_arrays": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanargmax": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.nanargmax",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanargmin": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.argmin",
    "numpy.nanargmin",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nancumprod": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.cumprod",
    "numpy.nancumprod",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nancumsum": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.nancumsum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanmax": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.nanmax",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanmean": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.nanmean",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanmin": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.min",
    "numpy.nanmin",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanprod": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.nanprod",
    "numpy.prod",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanstd": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "numpy.nanstd",
    "numpy.std",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nansum": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.nansum",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_IntTypes.test_nanvar": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.nanvar",
    "numpy.testing.assert_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin",
    "numpy.mean",
    "numpy.nanmean",
    "numpy.nanstd",
    "numpy.nanvar",
    "numpy.std",
    "numpy.var"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_allnans": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "RuntimeWarning",
    "f",
    "issubclass",
    "len",
    "numpy.array",
    "numpy.isnan",
    "numpy.lib.tests.test_nanfunctions.warnings",
    "numpy.nan",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_ddof": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "nf",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.lib.tests.test_nanfunctions._rdat",
    "numpy.nanstd",
    "numpy.nanvar",
    "numpy.std",
    "numpy.testing.assert_almost_equal",
    "numpy.var",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_ddof_too_big": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "RuntimeWarning",
    "any",
    "len",
    "nf",
    "numpy.ComplexWarning",
    "numpy.isnan",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.lib.tests.test_nanfunctions._rdat",
    "numpy.nanstd",
    "numpy.nanvar",
    "numpy.std",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "numpy.var",
    "range",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_dtype_error": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "numpy.bool_",
    "numpy.int_",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.object_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_empty": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "RuntimeWarning",
    "f",
    "issubclass",
    "len",
    "numpy.isnan",
    "numpy.lib.tests.test_nanfunctions.warnings",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MeanVarStd.test_out_dtype_error": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "numpy.bool_",
    "numpy.empty",
    "numpy.int_",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.object_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_allnans": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nanmedian",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_empty": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "RuntimeWarning",
    "issubclass",
    "len",
    "numpy.isnan",
    "numpy.lib.tests.test_nanfunctions.warnings",
    "numpy.nanmedian",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_extended_axis_invalid": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "ValueError",
    "numpy.AxisError",
    "numpy.nanmedian",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_float_special": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.array",
    "numpy.float32",
    "numpy.inf",
    "numpy.nan",
    "numpy.nanmedian",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_keepdims": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.array",
    "numpy.eye",
    "numpy.intp",
    "numpy.median",
    "numpy.nan",
    "numpy.nanmedian",
    "numpy.ones",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_mutation": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.nanmedian",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_out": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "numpy.insert",
    "numpy.median",
    "numpy.nan",
    "numpy.nanmedian",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_result_values": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.lib.tests.test_nanfunctions._rdat",
    "numpy.median",
    "numpy.nanmedian",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_scalar": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "numpy.nanmedian",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Median.test_small_large": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.compress",
    "numpy.isnan",
    "numpy.median",
    "numpy.nan",
    "numpy.nanmedian",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "numpy.nanmax",
    "numpy.nanmin",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_allnans": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "RuntimeWarning",
    "f",
    "issubclass",
    "len",
    "numpy.array",
    "numpy.isnan",
    "numpy.lib.tests.test_nanfunctions.warnings",
    "numpy.nan",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_dtype_from_input": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "nf",
    "numpy.eye",
    "numpy.testing.assert_",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_keepdims": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "nf",
    "numpy.eye",
    "numpy.testing.assert_",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_masked": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "f",
    "numpy.isinf",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.ma.fix_invalid",
    "numpy.nanmin",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_matrices": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "RuntimeWarning",
    "f",
    "isinstance",
    "issubclass",
    "len",
    "numpy.any",
    "numpy.eye",
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.lib.tests.test_nanfunctions.warnings",
    "numpy.matrix",
    "numpy.nan",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_mutation": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "f",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_object_array": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "RuntimeWarning",
    "issubclass",
    "len",
    "list",
    "numpy.array",
    "numpy.lib.tests.test_nanfunctions.warnings",
    "numpy.nan",
    "numpy.nanmin",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_out": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "nf",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_result_values": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "nf",
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.lib.tests.test_nanfunctions._rdat",
    "numpy.testing.assert_almost_equal",
    "rf",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_MinMax.test_scalar": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "f",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_allnans": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "RuntimeWarning",
    "issubclass",
    "len",
    "numpy.array",
    "numpy.isnan",
    "numpy.lib.tests.test_nanfunctions.warnings",
    "numpy.nan",
    "numpy.nanpercentile",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_empty": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "RuntimeWarning",
    "issubclass",
    "len",
    "numpy.isnan",
    "numpy.lib.tests.test_nanfunctions.warnings",
    "numpy.nanpercentile",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_extended_axis_invalid": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "ValueError",
    "numpy.AxisError",
    "numpy.nanpercentile",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_keepdims": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.array",
    "numpy.eye",
    "numpy.intp",
    "numpy.nan",
    "numpy.nanpercentile",
    "numpy.ones",
    "numpy.percentile",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_multiple_percentiles": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.nan",
    "numpy.nanpercentile",
    "numpy.ones",
    "numpy.percentile",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_mutation": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.nanpercentile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_out": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "numpy.insert",
    "numpy.nan",
    "numpy.nanpercentile",
    "numpy.percentile",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_result_values": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "numpy.lib.tests.test_nanfunctions._ndat",
    "numpy.lib.tests.test_nanfunctions._rdat",
    "numpy.nanpercentile",
    "numpy.percentile",
    "numpy.testing.assert_almost_equal",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_Percentile.test_scalar": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.isscalar",
    "numpy.nanpercentile",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_SumProd": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.lib.tests.test_nanfunctions.SharedNanFunctionsTestsMixin",
    "numpy.nanprod",
    "numpy.nansum",
    "numpy.prod",
    "numpy.sum"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_SumProd.test_allnans": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len",
    "numpy.lib.tests.test_nanfunctions.warnings",
    "numpy.nan",
    "numpy.nansum",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions.TestNanFunctions_SumProd.test_empty": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "f",
    "numpy.nanprod",
    "numpy.nansum",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_nanfunctions._ndat": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_nanfunctions._ndat_ones": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_nanfunctions._ndat_zeros": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_nanfunctions._rdat": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_nanfunctions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.assert_no_warnings": {
  "data": {
   "shadows": "numpy.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_nanfunctions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_packbits": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_packbits.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_packbits.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_packbits.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_packbits.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_packbits.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_packbits.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_packbits.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_packbits.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_packbits.test_packbits": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "numpy.array",
    "numpy.packbits",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_packbits_empty": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.packbits",
    "numpy.testing.assert_equal",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_packbits_empty_with_axis": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty",
    "numpy.packbits",
    "numpy.testing.assert_equal",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_packbits_large": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "numpy.array",
    "numpy.iinfo",
    "numpy.packbits",
    "numpy.random.randint",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.uint8",
    "numpy.unpackbits",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_packbits_very_large": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "numpy.packbits",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_unpackbits": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "numpy.unpackbits"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_unpackbits_empty": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "numpy.unpackbits"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_unpackbits_empty_with_axis": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "numpy.unpackbits"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_packbits.test_unpackbits_large": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.packbits",
    "numpy.testing.assert_array_equal",
    "numpy.tile",
    "numpy.uint8",
    "numpy.unpackbits"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_polynomial.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.TestDocs": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_complex": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.poly1d",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_doctests": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.testing.rundocs"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_integ_coeffs": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.poly1d",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_objects": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.issubdtype",
    "numpy.object_",
    "numpy.poly",
    "numpy.poly1d",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_poly": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.conjugate",
    "numpy.iscomplexobj",
    "numpy.isrealobj",
    "numpy.poly",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sqrt",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_poly_coeffs_immutable": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "Exception",
    "numpy.poly1d",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_poly_eq": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.poly1d",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_poly_int_overflow": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.diag",
    "numpy.poly",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_polyfit": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.polyfit",
    "numpy.polyval",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_roots": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.roots",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_str_leading_zeros": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.poly1d",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_zero_dims": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "numpy.poly",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.rundocs": {
  "data": {
   "shadows": "numpy.testing.rundocs"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.lib.recfunctions.get_names",
    "numpy.lib.recfunctions.get_names_flat",
    "numpy.lib.recfunctions.zip_descr",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_recfunctions.MaskedRecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.MaskedRecords"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.setup": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_double": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "int",
    "numpy.lib.recfunctions.append_fields",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_on_flex": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.lib.recfunctions.append_fields",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_on_nested": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.lib.recfunctions.append_fields",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_single": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "int",
    "numpy.lib.recfunctions.append_fields",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFieldsObj": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFieldsObj.setup": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "datetime.date",
    "dict"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFieldsObj.test_append_to_objects": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.append_fields",
    "numpy.ma.testutils.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.setup": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.arange",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_different_field_order": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.testutils.assert_equal",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_duplicate_keys": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.recfunctions.join_by",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_inner_join": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_join": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.join_by"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_join_subdtype": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.MaskedArray",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_leftouter_join": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "int",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_outer_join": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "int",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_padded_dtype": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_same_name_different_dtypes": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_same_name_different_dtypes_key": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.dec.knownfailureif"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_subarray_key": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.testutils.assert_equal",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.setup": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "list",
    "numpy.arange",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_no_postfix": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.recfunctions.join_by",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_no_r1postfix": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_no_r2postfix": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy2.test_two_keys_two_vars": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.lib.recfunctions.join_by",
    "numpy.ma.testutils.assert_equal",
    "numpy.repeat",
    "numpy.tile",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.setup": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_flatten": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.merge_arrays",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_flatten_wflexible": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.merge_arrays",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_singlerecord": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.merge_arrays",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_solo": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.merge_arrays",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_solo_w_flatten": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.merge_arrays",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_standard": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.merge_arrays",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_w_shorter_flex": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.merge_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_w_singlefield": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.merge_arrays",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_wmasked_arrays": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.lib.recfunctions.merge_arrays",
    "numpy.ma.array",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.setup": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_drop_fields": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.drop_fields",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_find_duplicates": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.lib.recfunctions.find_duplicates",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_find_duplicates_ignoremask": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "int",
    "numpy.lib.recfunctions.find_duplicates",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_fieldstructure": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib.recfunctions.get_fieldstructure",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_names": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib.tests.test_recfunctions.get_names",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_names_flat": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib.tests.test_recfunctions.get_names_flat",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_rename_fields": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.rename_fields",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_repack_fields": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.lib.recfunctions.repack_fields",
    "numpy.ma.testutils.assert_equal",
    "numpy.record",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_zip_descr": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib.tests.test_recfunctions.zip_descr",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields.test_masked_flexible": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.lib.recfunctions.recursive_fill_fields",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal",
    "numpy.ma.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields.test_simple_flexible": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.recursive_fill_fields",
    "numpy.ma.testutils.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.setup": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_autoconversion": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "bool",
    "float",
    "int",
    "numpy.lib.recfunctions.stack_arrays",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_checktitles": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "numpy.lib.recfunctions.stack_arrays",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_defaults": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.lib.recfunctions.stack_arrays",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_matching_named_fields": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.lib.recfunctions.stack_arrays",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_solo": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.lib.recfunctions.stack_arrays",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_subdtype": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.lib.recfunctions.stack_arrays",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_unnamed_and_named_fields": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.lib.recfunctions.stack_arrays",
    "numpy.ma.array",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_unnamed_fields": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.recfunctions.stack_arrays",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.append_fields": {
  "data": {
   "shadows": "numpy.lib.recfunctions.append_fields"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.assert_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.drop_fields": {
  "data": {
   "shadows": "numpy.lib.recfunctions.drop_fields"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.find_duplicates": {
  "data": {
   "shadows": "numpy.lib.recfunctions.find_duplicates"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.get_fieldstructure": {
  "data": {
   "shadows": "numpy.lib.recfunctions.get_fieldstructure"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.get_names": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_recfunctions.get_names_flat": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_recfunctions.join_by": {
  "data": {
   "shadows": "numpy.lib.recfunctions.join_by"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.merge_arrays": {
  "data": {
   "shadows": "numpy.lib.recfunctions.merge_arrays"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.recursive_fill_fields": {
  "data": {
   "shadows": "numpy.lib.recfunctions.recursive_fill_fields"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.rename_fields": {
  "data": {
   "shadows": "numpy.lib.recfunctions.rename_fields"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.repack_fields": {
  "data": {
   "shadows": "numpy.lib.recfunctions.repack_fields"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.rfn": {
  "data": {
   "shadows": "numpy.lib.recfunctions"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.stack_arrays": {
  "data": {
   "shadows": "numpy.lib.recfunctions.stack_arrays"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.zip_descr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_regression.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_append_fields_dtype_list": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "numpy.array",
    "numpy.eye",
    "numpy.float64",
    "numpy.int32",
    "numpy.lib.recfunctions.append_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_asfarray_none": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asfarray",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_cov_parameters": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.random.random",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_histogramdd_too_many_bins": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "numpy.histogramdd",
    "numpy.ones",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_include_dirs": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "isinstance",
    "numpy.compat.unicode",
    "numpy.get_include",
    "numpy.testing.assert_",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.dtype",
    "numpy.intp",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing.dp": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.ix_",
    "numpy.ones",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing.dp2": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.ix_",
    "numpy.ones",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_loadtxt_fields_subarrays": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "StringIO.StringIO",
    "numpy.array",
    "numpy.lib.tests.test_regression.sys",
    "numpy.loadtxt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_digitize": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.digitize",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_polymul": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.polymul"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_string_concat": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_vectorise": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.vectorize",
    "numpy.zeros",
    "vt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mgrid_single_element": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.mgrid",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_nansum_with_boolean": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "bool",
    "numpy.nansum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_ndenumerate_crash": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.ndenumerate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly1d": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.poly1d",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly1d_nan_roots": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "getattr",
    "numpy.linalg.LinAlgError",
    "numpy.nan",
    "numpy.poly1d",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly_div": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.poly1d",
    "numpy.polydiv",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly_eq": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.poly1d",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyder_return_type": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.poly1d",
    "numpy.polyder",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polydiv_type": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "complex",
    "float",
    "int",
    "numpy.ones",
    "numpy.polydiv",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyfit_build": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.polyfit",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyint_type": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "complex",
    "float",
    "int",
    "numpy.ones",
    "numpy.polyint",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_py3_compat": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "C",
    "numpy.info",
    "numpy.lib.tests.test_regression.os",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_py3_compat.C": {
  "data": {
   "lineno": 244
  },
  "type": "class"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_refcount_vectorize": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.testing._assert_valid_refcount",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_refcount_vectorize.p": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_unique_zero_sized": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_void_coercion": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.r_.dtype",
    "numpy.testing.assert_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_who_with_0dim_array": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "numpy.array",
    "numpy.lib.tests.test_regression.os",
    "numpy.lib.tests.test_regression.sys",
    "numpy.who",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression._assert_valid_refcount": {
  "data": {
   "shadows": "numpy.testing._assert_valid_refcount"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.append_fields": {
  "data": {
   "shadows": "numpy.lib.recfunctions.append_fields"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.unicode": {
  "data": {
   "shadows": "numpy.compat.unicode"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_stride_tricks.SimpleSubClass": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.VerySimpleSubClass"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_stride_tricks.SimpleSubClass.__array_finalize__": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.SimpleSubClass.__new__": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.VerySimpleSubClass": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_stride_tricks.VerySimpleSubClass.__new__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks._broadcast_shape": {
  "data": {
   "shadows": "numpy.lib.stride_tricks._broadcast_shape"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.as_strided_writeable": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.full_like",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.ones",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.assert_incompatible_shapes_raise": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.assert_same_as_ufunc": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.multiply.reduce",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.assert_shapes_correct": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.broadcast_arrays": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.broadcast_arrays"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.broadcast_to": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.broadcast_to"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.rational": {
  "data": {
   "shadows": "numpy.core.test_rational.rational"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.test_as_strided": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.core.test_rational.rational",
    "numpy.dtype",
    "numpy.empty",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_broadcast_shape": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.stride_tricks._broadcast_shape",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_broadcast_to_raises": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.stride_tricks.broadcast_to",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_broadcast_to_succeeds": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.lib.stride_tricks.broadcast_to",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_incompatible_shapes_raise_valueerror": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.assert_incompatible_shapes_raise"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_one_off": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_reference_types": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.lib.stride_tricks.broadcast_to",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same_as_ufunc": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.assert_same_as_ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same_input_shapes": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.assert_shapes_correct"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_subclasses": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.lib.stride_tricks.broadcast_to",
    "numpy.lib.tests.test_stride_tricks.SimpleSubClass",
    "numpy.lib.tests.test_stride_tricks.VerySimpleSubClass",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_two_compatible_by_ones_input_shapes": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.assert_shapes_correct"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_two_compatible_by_prepending_ones_input_shapes": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.assert_shapes_correct"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_writeable": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.lib.stride_tricks.broadcast_to",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_diag_bounds": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_failure": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "numpy.diag",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_fortran_order": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_twodim_base.get_mat"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_matrix": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.lib.tests.test_twodim_base.get_mat",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_vector": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.diag",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_2d": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_basic": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_bool": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "bool",
    "numpy.eye",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_diag": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_diag2d": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_eye_bounds": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_order": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_strings": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestFliplr": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestFliplr.test_basic": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "numpy.fliplr",
    "numpy.lib.tests.test_twodim_base.get_mat",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestFlipud": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestFlipud.test_basic": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.flipud",
    "numpy.lib.tests.test_twodim_base.get_mat",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_all_outliers": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.histogram2d",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_asym": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.histogram2d",
    "numpy.linspace",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_binparameter_combination": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.histogram2d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_empty": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.histogram2d",
    "numpy.testing.assert_array_max_ulp",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_norm": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.histogram2d",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_simple": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.eye",
    "numpy.histogram2d",
    "numpy.linspace",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTri": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTri.test_dtype": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.tri"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTrilIndicesFrom": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTrilIndicesFrom.test_exceptions": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.tril_indices_from"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndices": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndices.test_triu_indices": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.triu_indices"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndicesFrom": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTriuIndicesFrom.test_exceptions": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.triu_indices_from"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestVander": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestVander.test_basic": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.vander",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestVander.test_dtypes": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int8",
    "numpy.testing.assert_array_equal",
    "numpy.vander"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.add": {
  "data": {
   "shadows": "numpy.add"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.assert_array_max_ulp": {
  "data": {
   "shadows": "numpy.testing.assert_array_max_ulp"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.diag": {
  "data": {
   "shadows": "numpy.diag"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.eye": {
  "data": {
   "shadows": "numpy.eye"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.fliplr": {
  "data": {
   "shadows": "numpy.fliplr"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.flipud": {
  "data": {
   "shadows": "numpy.flipud"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.get_mat": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.add.outer",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.histogram2d": {
  "data": {
   "shadows": "numpy.histogram2d"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.mask_indices": {
  "data": {
   "shadows": "numpy.mask_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.test_mask_indices": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.mask_indices",
    "numpy.testing.assert_array_equal",
    "numpy.triu"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_indices": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.tril_indices"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_triu_dtype": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.tril",
    "numpy.triu",
    "numpy.typecodes",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_triu_ndim2": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.tril",
    "numpy.triu",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_triu_ndim3": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.tril",
    "numpy.triu",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_triu_with_inf": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_array_equal",
    "numpy.tril",
    "numpy.triu"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.tri": {
  "data": {
   "shadows": "numpy.tri"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.tril_indices": {
  "data": {
   "shadows": "numpy.tril_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.tril_indices_from": {
  "data": {
   "shadows": "numpy.tril_indices_from"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.triu_indices": {
  "data": {
   "shadows": "numpy.triu_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.triu_indices_from": {
  "data": {
   "shadows": "numpy.triu_indices_from"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.vander": {
  "data": {
   "shadows": "numpy.vander"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_type_check.TestArrayConversion": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestArrayConversion.test_asfarray": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.lib.type_check.asfarray",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestCommonType": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestCommonType.test_basic": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.lib.type_check.common_type",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestImag": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestImag.test_cmplx": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.imag",
    "numpy.ndarray",
    "numpy.random.rand",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestImag.test_real": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.imag",
    "numpy.ndarray",
    "numpy.random.rand",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplex": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplex.test_fail": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.type_check.iscomplex",
    "numpy.sometrue",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplex.test_pass": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.type_check.iscomplex",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_basic": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.type_check.iscomplexobj",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_custom_dtype_duck": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "MyArray",
    "numpy.lib.type_check.iscomplexobj",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_custom_dtype_duck.MyArray": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_custom_dtype_duck.MyArray.dtype": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "complex",
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_duck": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "DummyComplexArray",
    "numpy.lib.type_check.iscomplexobj",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_duck.DummyComplexArray": {
  "data": {
   "lineno": 200
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_duck.DummyComplexArray.dtype": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "complex",
    "numpy.dtype",
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_list": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.lib.type_check.iscomplexobj",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_pandas_duck": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "DummyPd",
    "numpy.lib.type_check.iscomplexobj",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_pandas_duck.DummyPd": {
  "data": {
   "lineno": 219
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_pandas_duck.DummyPd.dtype": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_pandas_duck.PdComplex": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.complex128"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_pandas_duck.PdDtype": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.dtype",
    "object",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIscomplexobj.test_scalar": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.lib.type_check.iscomplexobj",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_complex": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.isfinite",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_complex1": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_goodvalues": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isfinite",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_ind": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_integer": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.isfinite",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_neginf": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsfinite.test_posinf": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_goodvalues": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isinf",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_ind": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isinf",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_neginf": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isinf",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_neginf_scalar": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isinf",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_posinf": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isinf",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsinf.test_posinf_scalar": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isinf",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_complex": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_complex1": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_goodvalues": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_ind": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_integer": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_neginf": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsnan.test_posinf": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.lib.tests.test_type_check.assert_all"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsneginf": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsneginf.test_generic": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.lib.type_check.isneginf",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsposinf": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsposinf.test_generic": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.lib.type_check.isposinf",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsreal": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsreal.test_fail": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.type_check.isreal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsreal.test_pass": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.type_check.isreal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsrealobj": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsrealobj.test_basic": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.type_check.isrealobj",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestIsscalar": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestIsscalar.test_basic": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.compat.long",
    "numpy.isscalar",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode.test_default_1": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.lib.type_check.mintypecode",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode.test_default_2": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.lib.type_check.mintypecode",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestMintypecode.test_default_3": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.lib.type_check.mintypecode",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_complex_bad": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.lib.tests.test_type_check.assert_all",
    "numpy.lib.type_check.nan_to_num"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_complex_bad2": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.lib.tests.test_type_check.assert_all",
    "numpy.lib.type_check.nan_to_num"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_complex_good": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.lib.tests.test_type_check.assert_all",
    "numpy.lib.type_check.nan_to_num"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_generic": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.lib.tests.test_type_check.assert_all",
    "numpy.lib.type_check.nan_to_num",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestNanToNum.test_integer": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.lib.tests.test_type_check.assert_all",
    "numpy.lib.type_check.nan_to_num",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestReal": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestReal.test_cmplx": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "numpy.random.rand",
    "numpy.real",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestReal.test_real": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "numpy.random.rand",
    "numpy.real",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.TestRealIfClose": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_type_check.TestRealIfClose.test_basic": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.lib.tests.test_type_check.assert_all",
    "numpy.lib.type_check.iscomplexobj",
    "numpy.lib.type_check.isrealobj",
    "numpy.lib.type_check.real_if_close",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.asfarray": {
  "data": {
   "shadows": "numpy.lib.type_check.asfarray"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.assert_all": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_type_check.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.common_type": {
  "data": {
   "shadows": "numpy.lib.type_check.common_type"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.iscomplex": {
  "data": {
   "shadows": "numpy.lib.type_check.iscomplex"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.iscomplexobj": {
  "data": {
   "shadows": "numpy.lib.type_check.iscomplexobj"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.isneginf": {
  "data": {
   "shadows": "numpy.lib.type_check.isneginf"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.isposinf": {
  "data": {
   "shadows": "numpy.lib.type_check.isposinf"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.isreal": {
  "data": {
   "shadows": "numpy.lib.type_check.isreal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.isrealobj": {
  "data": {
   "shadows": "numpy.lib.type_check.isrealobj"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.mintypecode": {
  "data": {
   "shadows": "numpy.lib.type_check.mintypecode"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.nan_to_num": {
  "data": {
   "shadows": "numpy.lib.type_check.nan_to_num"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.real_if_close": {
  "data": {
   "shadows": "numpy.lib.type_check.real_if_close"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_type_check.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_deprecated": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.empty",
    "numpy.lib.ufunclike.fix",
    "numpy.lib.ufunclike.isneginf",
    "numpy.lib.ufunclike.isposinf",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "float",
    "numpy.core.array",
    "numpy.core.zeros",
    "numpy.lib.ufunclike.fix",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "MyArray",
    "isinstance",
    "numpy.core.array",
    "numpy.lib.ufunclike.fix",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass.MyArray": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.core.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass.MyArray.__array_wrap__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_fix_with_subclass.MyArray.__new__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.core.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_isneginf": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bool",
    "numpy.core.array",
    "numpy.core.inf",
    "numpy.core.nan",
    "numpy.core.zeros",
    "numpy.lib.ufunclike.isneginf",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_isposinf": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "bool",
    "numpy.core.array",
    "numpy.core.inf",
    "numpy.core.nan",
    "numpy.core.zeros",
    "numpy.lib.ufunclike.isposinf",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.TestUfunclike.test_scalar": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.True_",
    "numpy.array",
    "numpy.fix",
    "numpy.float64",
    "numpy.inf",
    "numpy.isposinf",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_ufunclike.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.nx": {
  "data": {
   "shadows": "numpy.core"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike.ufl": {
  "data": {
   "shadows": "numpy.lib.ufunclike"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.lib.deprecate",
    "numpy.lib.tests.test_utils.old_func3",
    "numpy.lib.tests.test_utils.sys",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_utils.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.arange": {
  "data": {
   "shadows": "numpy.core.arange"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.assert_raises_regex": {
  "data": {
   "shadows": "numpy.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.deprecate": {
  "data": {
   "shadows": "numpy.lib.deprecate"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.new_func3": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_utils.old_func": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.lib.deprecate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func2": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.lib.deprecate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func3": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.test_assert_raises_regex_context_manager": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_byte_bounds": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.core.arange",
    "numpy.lib.utils.byte_bounds",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_decorator": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.lib.tests.test_utils.old_func",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_decorator_message": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.lib.tests.test_utils.old_func2",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_fn": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.lib.tests.test_utils.new_func3",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_lookfor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "StringIO.StringIO",
    "numpy.lib.tests.test_utils.sys",
    "numpy.lib.utils.lookfor",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_safe_eval_nameconstant": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.lib.utils.safe_eval"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.utils": {
  "data": {
   "shadows": "numpy.lib.utils"
  },
  "type": "import"
 },
 "numpy.lib.tracemalloc_domain": {
  "data": {
   "shadows": "numpy.core.multiarray.tracemalloc_domain"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.iinfo",
    "numpy.core.numeric.int16",
    "numpy.core.numeric.int32",
    "numpy.core.numeric.int8"
   ]
  },
  "type": "module"
 },
 "numpy.lib.twodim_base.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.lib.twodim_base._min_int": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.core.numeric.int16",
    "numpy.core.numeric.int32",
    "numpy.core.numeric.int64",
    "numpy.core.numeric.int8",
    "numpy.lib.twodim_base.i1",
    "numpy.lib.twodim_base.i2",
    "numpy.lib.twodim_base.i4"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.absolute": {
  "data": {
   "shadows": "numpy.core.numeric.absolute"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.arange": {
  "data": {
   "shadows": "numpy.core.numeric.arange"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.diag": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "len",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.diagonal",
    "numpy.core.numeric.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.diagflat": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "AttributeError",
    "abs",
    "len",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.zeros",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.diagonal": {
  "data": {
   "shadows": "numpy.core.numeric.diagonal"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.empty": {
  "data": {
   "shadows": "numpy.core.numeric.empty"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.eye": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "float",
    "numpy.core.numeric.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.fliplr": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.numeric.asanyarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.flipud": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.numeric.asanyarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.greater_equal": {
  "data": {
   "shadows": "numpy.core.numeric.greater_equal"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.histogram2d": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "len",
    "numpy.core.numeric.asarray",
    "numpy.histogramdd",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.histogramdd": {
  "data": {
   "shadows": "numpy.histogramdd"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.i1": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.lib.twodim_base.i2": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.lib.twodim_base.i4": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.lib.twodim_base.iinfo": {
  "data": {
   "shadows": "numpy.core.iinfo"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.int16": {
  "data": {
   "shadows": "numpy.core.numeric.int16"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.int32": {
  "data": {
   "shadows": "numpy.core.numeric.int32"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.int64": {
  "data": {
   "shadows": "numpy.core.numeric.int64"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.int8": {
  "data": {
   "shadows": "numpy.core.numeric.int8"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.mask_indices": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "int",
    "mask_func",
    "numpy.core.numeric.nonzero",
    "numpy.core.numeric.ones"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.multiply": {
  "data": {
   "shadows": "numpy.core.numeric.multiply"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.nonzero": {
  "data": {
   "shadows": "numpy.core.numeric.nonzero"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.ones": {
  "data": {
   "shadows": "numpy.core.numeric.ones"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.promote_types": {
  "data": {
   "shadows": "numpy.core.numeric.promote_types"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.transpose": {
  "data": {
   "shadows": "numpy.core.transpose"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.tri": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "float",
    "numpy.core.numeric.arange",
    "numpy.core.numeric.greater_equal.outer",
    "numpy.lib.twodim_base._min_int"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.tril": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "bool",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.where",
    "numpy.core.numeric.zeros",
    "numpy.lib.twodim_base.tri"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.tril_indices": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "bool",
    "numpy.core.numeric.nonzero",
    "numpy.lib.twodim_base.tri"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.tril_indices_from": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.twodim_base.tril_indices"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.triu": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "bool",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.where",
    "numpy.core.numeric.zeros",
    "numpy.lib.twodim_base.tri"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.triu_indices": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "bool",
    "numpy.core.numeric.nonzero",
    "numpy.lib.twodim_base.tri"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.triu_indices_from": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.twodim_base.triu_indices"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.vander": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.empty",
    "numpy.core.numeric.multiply.accumulate",
    "numpy.core.numeric.promote_types"
   ]
  },
  "type": "function"
 },
 "numpy.lib.twodim_base.where": {
  "data": {
   "shadows": "numpy.core.numeric.where"
  },
  "type": "import"
 },
 "numpy.lib.twodim_base.zeros": {
  "data": {
   "shadows": "numpy.core.numeric.zeros"
  },
  "type": "import"
 },
 "numpy.lib.type_check": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.numeric.cdouble",
    "numpy.core.numeric.clongdouble",
    "numpy.core.numeric.csingle",
    "numpy.core.numeric.double",
    "numpy.core.numeric.half",
    "numpy.core.numeric.longdouble",
    "numpy.core.numeric.single"
   ]
  },
  "type": "module"
 },
 "numpy.lib.type_check.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.lib.type_check._getmaxmin": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.core.getlimits.finfo"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check._namefromtype": {
  "data": {
   "lineno": 486
  },
  "type": "constant"
 },
 "numpy.lib.type_check._nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.type_check._typecodes_by_elsize": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.lib.type_check.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.type_check.array": {
  "data": {
   "shadows": "numpy.core.numeric.array"
  },
  "type": "import"
 },
 "numpy.lib.type_check.array_precision": {
  "data": {
   "lineno": 566
  },
  "type": "constant"
 },
 "numpy.lib.type_check.array_type": {
  "data": {
   "lineno": 564
  },
  "type": "constant"
 },
 "numpy.lib.type_check.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.lib.type_check.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.type_check.asfarray": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.float_",
    "numpy.core.numeric.inexact",
    "numpy.core.numeric.issubdtype"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.asscalar": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "numpy.lib.type_check.common_type": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "max",
    "numpy.core.numeric.integer",
    "numpy.lib.type_check.array_precision",
    "numpy.lib.type_check.array_type",
    "numpy.lib.type_check.iscomplexobj"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.type_check.getlimits": {
  "data": {
   "shadows": "numpy.core.getlimits"
  },
  "type": "import"
 },
 "numpy.lib.type_check.imag": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.numeric.asanyarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.iscomplex": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "bool",
    "issubclass",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.complexfloating",
    "numpy.core.numeric.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.iscomplexobj": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "AttributeError",
    "issubclass",
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.complexfloating"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.isnan": {
  "data": {
   "shadows": "numpy.core.numeric.isnan"
  },
  "type": "import"
 },
 "numpy.lib.type_check.isreal": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.lib.type_check.imag"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.isrealobj": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.lib.type_check.iscomplexobj"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.mintypecode": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance",
    "numpy.core.numeric.asarray",
    "numpy.lib.type_check._typecodes_by_elsize",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.nan_to_num": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "isneginf",
    "isposinf",
    "issubclass",
    "numpy.core.numeric.array",
    "numpy.core.numeric.complexfloating",
    "numpy.core.numeric.copyto",
    "numpy.core.numeric.inexact",
    "numpy.core.numeric.isnan",
    "numpy.lib.type_check._getmaxmin",
    "numpy.lib.type_check.iscomplex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.type_check.real": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.numeric.asanyarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.real_if_close": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "issubclass",
    "numpy.core.getlimits.finfo",
    "numpy.core.numeric.absolute",
    "numpy.core.numeric.all",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.complexfloating"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.typename": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.lib.type_check._namefromtype"
   ]
  },
  "type": "function"
 },
 "numpy.lib.type_check.zeros": {
  "data": {
   "shadows": "numpy.core.numeric.zeros"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.ufunclike.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.lib.ufunclike._deprecate_out_named_y": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "numpy.lib.ufunclike._deprecate_out_named_y.func": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "f",
    "numpy.lib.ufunclike.functools",
    "numpy.lib.ufunclike.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike.fix": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.ceil",
    "numpy.core.numeric.floor",
    "numpy.core.numeric.greater_equal",
    "numpy.core.numeric.ndarray",
    "numpy.lib.ufunclike._deprecate_out_named_y",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike.isneginf": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.core.numeric.isinf",
    "numpy.core.numeric.logical_and",
    "numpy.core.numeric.signbit",
    "numpy.lib.ufunclike._deprecate_out_named_y"
   ]
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.isposinf": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.core.numeric.isinf",
    "numpy.core.numeric.logical_and",
    "numpy.core.numeric.signbit",
    "numpy.lib.ufunclike._deprecate_out_named_y"
   ]
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.user_array": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dir",
    "numpy.core.arange",
    "numpy.core.less",
    "numpy.core.reshape",
    "numpy.core.shape",
    "numpy.core.sin",
    "numpy.core.sqrt",
    "numpy.core.transpose",
    "numpy.lib.user_array.container",
    "numpy.lib.user_array.temp",
    "numpy.lib.user_array.ua",
    "numpy.lib.user_array.ua_small",
    "print",
    "type"
   ]
  },
  "type": "module"
 },
 "numpy.lib.user_array.absolute": {
  "data": {
   "shadows": "numpy.core.absolute"
  },
  "type": "import"
 },
 "numpy.lib.user_array.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.user_array.add": {
  "data": {
   "shadows": "numpy.core.add"
  },
  "type": "import"
 },
 "numpy.lib.user_array.arange": {
  "data": {
   "shadows": "numpy.core.arange"
  },
  "type": "import"
 },
 "numpy.lib.user_array.array": {
  "data": {
   "shadows": "numpy.core.array"
  },
  "type": "import"
 },
 "numpy.lib.user_array.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.lib.user_array.bitwise_and": {
  "data": {
   "shadows": "numpy.core.bitwise_and"
  },
  "type": "import"
 },
 "numpy.lib.user_array.bitwise_or": {
  "data": {
   "shadows": "numpy.core.bitwise_or"
  },
  "type": "import"
 },
 "numpy.lib.user_array.bitwise_xor": {
  "data": {
   "shadows": "numpy.core.bitwise_xor"
  },
  "type": "import"
 },
 "numpy.lib.user_array.container": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.user_array.container.__abs__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.core.absolute"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__add__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.core.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__and__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.core.bitwise_and"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__array__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__array_wrap__": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__complex__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "complex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__div__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.core.asarray",
    "numpy.core.divide"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__divmod__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.core.divide",
    "numpy.core.remainder"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__eq__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.core.equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__float__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ge__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.core.greater_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__getattr__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__getitem__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__gt__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.core.greater"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__hex__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "hex"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__iadd__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.core.add"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__iand__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.core.bitwise_and"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__idiv__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.core.divide"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ilshift__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.core.left_shift"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__imod__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.core.remainder"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__imul__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.core.multiply"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.core.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__int__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__invert__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.core.invert"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ior__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.core.bitwise_or"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ipow__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.core.power"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__irshift__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.core.right_shift"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__isub__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.core.subtract"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ixor__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.core.bitwise_xor"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__le__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.core.less_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__len__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__long__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.compat.long"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__lshift__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.core.left_shift"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__lt__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.core.less"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__mod__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.core.remainder"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__mul__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.core.asarray",
    "numpy.core.multiply"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ne__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.core.not_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__neg__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__oct__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "oct"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__or__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.core.bitwise_or"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__pos__": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__pow__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.core.asarray",
    "numpy.core.power"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rand__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.core.bitwise_and"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rdiv__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.core.asarray",
    "numpy.core.divide"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rdivmod__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.core.divide",
    "numpy.core.remainder"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__repr__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rlshift__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.core.left_shift"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rmod__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.core.remainder"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__ror__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.core.bitwise_or"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rpow__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.core.asarray",
    "numpy.core.power"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rrshift__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.core.right_shift"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rshift__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.core.right_shift"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rsub__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.core.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__rxor__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.core.bitwise_xor"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__setattr__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "AttributeError",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__setitem__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.core.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__sub__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.core.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.__xor__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.core.bitwise_xor"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container._rc": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "len",
    "numpy.core.shape"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container._scalarfunc": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "TypeError",
    "func"
   ]
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.astype": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.byteswap": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.copy": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "numpy.lib.user_array.container.tostring": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "numpy.lib.user_array.divide": {
  "data": {
   "shadows": "numpy.core.divide"
  },
  "type": "import"
 },
 "numpy.lib.user_array.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.user_array.equal": {
  "data": {
   "shadows": "numpy.core.equal"
  },
  "type": "import"
 },
 "numpy.lib.user_array.greater": {
  "data": {
   "shadows": "numpy.core.greater"
  },
  "type": "import"
 },
 "numpy.lib.user_array.greater_equal": {
  "data": {
   "shadows": "numpy.core.greater_equal"
  },
  "type": "import"
 },
 "numpy.lib.user_array.invert": {
  "data": {
   "shadows": "numpy.core.invert"
  },
  "type": "import"
 },
 "numpy.lib.user_array.left_shift": {
  "data": {
   "shadows": "numpy.core.left_shift"
  },
  "type": "import"
 },
 "numpy.lib.user_array.less": {
  "data": {
   "shadows": "numpy.core.less"
  },
  "type": "import"
 },
 "numpy.lib.user_array.less_equal": {
  "data": {
   "shadows": "numpy.core.less_equal"
  },
  "type": "import"
 },
 "numpy.lib.user_array.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.lib.user_array.multiply": {
  "data": {
   "shadows": "numpy.core.multiply"
  },
  "type": "import"
 },
 "numpy.lib.user_array.not_equal": {
  "data": {
   "shadows": "numpy.core.not_equal"
  },
  "type": "import"
 },
 "numpy.lib.user_array.power": {
  "data": {
   "shadows": "numpy.core.power"
  },
  "type": "import"
 },
 "numpy.lib.user_array.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.user_array.remainder": {
  "data": {
   "shadows": "numpy.core.remainder"
  },
  "type": "import"
 },
 "numpy.lib.user_array.reshape": {
  "data": {
   "shadows": "numpy.core.reshape"
  },
  "type": "import"
 },
 "numpy.lib.user_array.right_shift": {
  "data": {
   "shadows": "numpy.core.right_shift"
  },
  "type": "import"
 },
 "numpy.lib.user_array.shape": {
  "data": {
   "shadows": "numpy.core.shape"
  },
  "type": "import"
 },
 "numpy.lib.user_array.sin": {
  "data": {
   "shadows": "numpy.core.sin"
  },
  "type": "import"
 },
 "numpy.lib.user_array.sqrt": {
  "data": {
   "shadows": "numpy.core.sqrt"
  },
  "type": "import"
 },
 "numpy.lib.user_array.subtract": {
  "data": {
   "shadows": "numpy.core.subtract"
  },
  "type": "import"
 },
 "numpy.lib.user_array.temp": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "numpy.lib.user_array.transpose": {
  "data": {
   "shadows": "numpy.core.transpose"
  },
  "type": "import"
 },
 "numpy.lib.user_array.ua": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "numpy.lib.user_array.ua_small": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "numpy.lib.utils": {
  "data": {
   "symbols_in_volume": [
    "numpy.lib.utils._Deprecate",
    "numpy.lib.utils.re"
   ]
  },
  "type": "module"
 },
 "numpy.lib.utils.SafeEval": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.utils.SafeEval.__init__": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.lib.utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.default": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visit": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "getattr",
    "meth"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitBytes": {
  "data": {
   "lineno": 1034
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitDict": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitExpression": {
  "data": {
   "lineno": 1025
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitList": {
  "data": {
   "lineno": 1044
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitName": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitNameConstant": {
  "data": {
   "lineno": 1066
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitNum": {
  "data": {
   "lineno": 1028
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitStr": {
  "data": {
   "lineno": 1031
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitTuple": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.SafeEval.visitUnaryOp": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "SyntaxError",
    "isinstance",
    "numpy.lib.utils.ast"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.lib.utils._Deprecate": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.utils._Deprecate.__call__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "AttributeError",
    "func.__dict__",
    "func.__doc__",
    "numpy.lib.utils._set_function_name"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils._Deprecate.__call__.newfunc": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "DeprecationWarning",
    "func",
    "numpy.lib.utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils._Deprecate.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "numpy.lib.utils.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.lib.utils._dictlist": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "numpy.lib.utils._function_signature_re": {
  "data": {
   "lineno": 703
  },
  "type": "constant"
 },
 "numpy.lib.utils._getmembers": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "Exception",
    "dir",
    "getattr",
    "hasattr",
    "numpy.lib.utils.inspect"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils._info": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "bp",
    "getattr",
    "hex",
    "numpy.lib.utils.sys",
    "print",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils._lookfor_caches": {
  "data": {
   "lineno": 699
  },
  "type": "constant"
 },
 "numpy.lib.utils._lookfor_generate_cache": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "AttributeError",
    "BaseException",
    "ImportError",
    "NameError",
    "StringIO.StringIO",
    "__import__",
    "getattr",
    "hasattr",
    "id",
    "isinstance",
    "list",
    "numpy.core.ufunc",
    "numpy.lib.utils._getmembers",
    "numpy.lib.utils._lookfor_caches",
    "numpy.lib.utils.inspect",
    "numpy.lib.utils.os",
    "numpy.lib.utils.sys",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils._makenamedict": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "__import__",
    "globals",
    "isinstance",
    "len",
    "locals",
    "numpy.lib.utils.types"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils._median_nancheck": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.lib.utils.numpy",
    "numpy.lib.utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils._namedict": {
  "data": {
   "lineno": 367
  },
  "type": "constant"
 },
 "numpy.lib.utils._set_function_name": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "numpy.lib.utils._split_line": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.lib.utils.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.lib.utils.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "numpy.lib.utils.byte_bounds": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.core.asarray",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.core": {
  "data": {
   "shadows": "numpy.core"
  },
  "type": "import"
 },
 "numpy.lib.utils.deprecate": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.lib.utils._Deprecate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.deprecate_with_doc": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "numpy.lib.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.utils.formatargspec": {
  "data": {
   "shadows": "numpy.compat.formatargspec"
  },
  "type": "import"
 },
 "numpy.lib.utils.get_include": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.core.__file__",
    "numpy.lib.utils.numpy",
    "numpy.lib.utils.os"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.getargspec": {
  "data": {
   "shadows": "numpy.compat.getargspec"
  },
  "type": "import"
 },
 "numpy.lib.utils.info": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "getattr",
    "hasattr",
    "id",
    "isinstance",
    "len",
    "numpy.compat.formatargspec",
    "numpy.compat.getargspec",
    "numpy.core.ndarray",
    "numpy.lib.utils._dictlist",
    "numpy.lib.utils._info",
    "numpy.lib.utils._makenamedict",
    "numpy.lib.utils._namedict",
    "numpy.lib.utils._split_line",
    "numpy.lib.utils.inspect",
    "numpy.lib.utils.pydoc",
    "numpy.lib.utils.sys",
    "numpy.lib.utils.types",
    "object",
    "object.__call__",
    "object.__call__.__func__",
    "object.__class__.__name__",
    "object.__func__",
    "object.__init__",
    "object.__init__.__func__",
    "object.__name__",
    "object._ppimport_attr",
    "object._ppimport_module",
    "object.name",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "numpy.lib.utils.issubclass_": {
  "data": {
   "shadows": "numpy.core.numerictypes.issubclass_"
  },
  "type": "import"
 },
 "numpy.lib.utils.issubdtype": {
  "data": {
   "shadows": "numpy.core.numerictypes.issubdtype"
  },
  "type": "import"
 },
 "numpy.lib.utils.issubsctype": {
  "data": {
   "shadows": "numpy.core.numerictypes.issubsctype"
  },
  "type": "import"
 },
 "numpy.lib.utils.lookfor": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "numpy.lib.utils._function_signature_re",
    "numpy.lib.utils._lookfor_generate_cache",
    "numpy.lib.utils.pydoc",
    "pager",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.lookfor.relevance": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "len",
    "max",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.lookfor.relevance_value": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "relevance"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.ndarray": {
  "data": {
   "shadows": "numpy.core.ndarray"
  },
  "type": "import"
 },
 "numpy.lib.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.lib.utils.pydoc": {
  "data": {
   "shadows": "pydoc"
  },
  "type": "import"
 },
 "numpy.lib.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.lib.utils.safe_eval": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "numpy.lib.utils.ast",
    "numpy.lib.utils.source"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.source": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "Exception",
    "numpy.lib.utils.inspect",
    "numpy.lib.utils.sys",
    "object",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.lib.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.utils.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.lib.utils.ufunc": {
  "data": {
   "shadows": "numpy.core.ufunc"
  },
  "type": "import"
 },
 "numpy.lib.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.utils.who": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "id",
    "int",
    "isinstance",
    "len",
    "map",
    "max",
    "numpy.core.ndarray",
    "numpy.lib.utils.sys",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.linalg": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing._numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.linalg._numpy_tester": {
  "data": {
   "shadows": "numpy.testing._numpy_tester"
  },
  "type": "import"
 },
 "numpy.linalg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.bench": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.linalg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.info": {
  "data": {},
  "type": "module"
 },
 "numpy.linalg.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.info.depends": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.linalg.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.linalg": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.cdouble",
    "numpy.core.csingle",
    "numpy.core.double",
    "numpy.core.fastCopyAndTranspose",
    "numpy.core.intc",
    "numpy.core.single",
    "numpy.linalg.linalg._determine_error_states"
   ]
  },
  "type": "module"
 },
 "numpy.linalg.linalg.Inf": {
  "data": {
   "shadows": "numpy.core.Inf"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.LinAlgError": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.linalg._A": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._L": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._N": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._S": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._V": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.linalg.linalg.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._assertFinite": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.core.isfinite",
    "numpy.linalg.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._assertNdSquareness": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.linalg.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._assertNoEmpty2d": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.linalg.linalg.LinAlgError",
    "numpy.linalg.linalg._isEmpty2d"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._assertRank2": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.linalg.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._assertRankAtLeast2": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.linalg.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._assertSquareness": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.linalg.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._commonType": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "numpy.core.cdouble",
    "numpy.core.double",
    "numpy.core.inexact",
    "numpy.core.single",
    "numpy.linalg.linalg._complex_types_map",
    "numpy.linalg.linalg._realType",
    "numpy.linalg.linalg.isComplexType"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._complexType": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.core.cdouble",
    "numpy.linalg.linalg._complex_types_map"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._complex_types_map": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._convertarray": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._fastCT"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._determine_error_states": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.core.errstate",
    "numpy.core.geterrobj"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._fastCT": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._fastCopyAndTranspose": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.linalg._fastCT",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._isEmpty2d": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.core.product"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._linalgRealType": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.core.double"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._linalg_error_extobj": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._makearray": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "getattr",
    "numpy.core.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._multi_dot": {
  "data": {
   "lineno": 2515,
   "symbols_in_volume": [
    "numpy.core.dot"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._multi_dot_matrix_chain_order": {
  "data": {
   "lineno": 2474,
   "symbols_in_volume": [
    "len",
    "numpy.core.Inf",
    "numpy.core.double",
    "numpy.core.empty",
    "numpy.core.intp",
    "numpy.core.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._multi_dot_three": {
  "data": {
   "lineno": 2453,
   "symbols_in_volume": [
    "numpy.core.dot"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._multi_svd_norm": {
  "data": {
   "lineno": 2075,
   "symbols_in_volume": [
    "numpy.core.moveaxis",
    "numpy.linalg.linalg.svd",
    "op"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.linalg.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_nonposdef": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.linalg.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_singular": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.linalg.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._raise_linalgerror_svd_nonconvergence": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.linalg.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._realType": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.core.double",
    "numpy.linalg.linalg._real_types_map"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._real_types_map": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "numpy.linalg.linalg._to_native_byte_order": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "numpy.core.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg._umath_linalg": {
  "data": {
   "shadows": "numpy.linalg._umath_linalg"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.abs": {
  "data": {
   "shadows": "numpy.core.abs"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.add": {
  "data": {
   "shadows": "numpy.core.add"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.all": {
  "data": {
   "shadows": "numpy.core.all"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.amax": {
  "data": {
   "shadows": "numpy.core.amax"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.amin": {
  "data": {
   "shadows": "numpy.core.amin"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.array": {
  "data": {
   "shadows": "numpy.core.array"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.asanyarray": {
  "data": {
   "shadows": "numpy.core.asanyarray"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.asfarray": {
  "data": {
   "shadows": "numpy.lib.asfarray"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.atleast_2d": {
  "data": {
   "shadows": "numpy.core.atleast_2d"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.broadcast": {
  "data": {
   "shadows": "numpy.core.broadcast"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.cdouble": {
  "data": {
   "shadows": "numpy.core.cdouble"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.cholesky": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "gufunc",
    "numpy.linalg._umath_linalg.cholesky_lo",
    "numpy.linalg.linalg._assertNdSquareness",
    "numpy.linalg.linalg._assertRankAtLeast2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg._raise_linalgerror_nonposdef",
    "numpy.linalg.linalg.get_linalg_error_extobj",
    "numpy.linalg.linalg.isComplexType",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.complexfloating": {
  "data": {
   "shadows": "numpy.core.complexfloating"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.cond": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "numpy.core.asarray",
    "numpy.linalg.linalg.inv",
    "numpy.linalg.linalg.norm",
    "numpy.linalg.linalg.svd"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.count_nonzero": {
  "data": {
   "shadows": "numpy.core.count_nonzero"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.csingle": {
  "data": {
   "shadows": "numpy.core.csingle"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.det": {
  "data": {
   "lineno": 1822,
   "symbols_in_volume": [
    "numpy.core.asarray",
    "numpy.linalg._umath_linalg.det",
    "numpy.linalg.linalg._assertNdSquareness",
    "numpy.linalg.linalg._assertRankAtLeast2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg.isComplexType"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.divide": {
  "data": {
   "shadows": "numpy.core.divide"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.dot": {
  "data": {
   "shadows": "numpy.core.dot"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.double": {
  "data": {
   "shadows": "numpy.core.double"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.eig": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "numpy.core.all",
    "numpy.linalg._umath_linalg.eig",
    "numpy.linalg.linalg._assertFinite",
    "numpy.linalg.linalg._assertNdSquareness",
    "numpy.linalg.linalg._assertRankAtLeast2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._complexType",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence",
    "numpy.linalg.linalg._realType",
    "numpy.linalg.linalg.get_linalg_error_extobj",
    "numpy.linalg.linalg.isComplexType",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.eigh": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "ValueError",
    "gufunc",
    "numpy.linalg._umath_linalg.eigh_lo",
    "numpy.linalg._umath_linalg.eigh_up",
    "numpy.linalg.linalg._assertNdSquareness",
    "numpy.linalg.linalg._assertRankAtLeast2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence",
    "numpy.linalg.linalg._realType",
    "numpy.linalg.linalg.get_linalg_error_extobj",
    "numpy.linalg.linalg.isComplexType",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.eigvals": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "numpy.core.all",
    "numpy.linalg._umath_linalg.eigvals",
    "numpy.linalg.linalg._assertFinite",
    "numpy.linalg.linalg._assertNdSquareness",
    "numpy.linalg.linalg._assertRankAtLeast2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._complexType",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence",
    "numpy.linalg.linalg._realType",
    "numpy.linalg.linalg.get_linalg_error_extobj",
    "numpy.linalg.linalg.isComplexType",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.eigvalsh": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "ValueError",
    "gufunc",
    "numpy.linalg._umath_linalg.eigvalsh_lo",
    "numpy.linalg._umath_linalg.eigvalsh_up",
    "numpy.linalg.linalg._assertNdSquareness",
    "numpy.linalg.linalg._assertRankAtLeast2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence",
    "numpy.linalg.linalg._realType",
    "numpy.linalg.linalg.get_linalg_error_extobj",
    "numpy.linalg.linalg.isComplexType",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.empty": {
  "data": {
   "shadows": "numpy.core.empty"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.empty_like": {
  "data": {
   "shadows": "numpy.core.empty_like"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.errstate": {
  "data": {
   "shadows": "numpy.core.errstate"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.fastCopyAndTranspose": {
  "data": {
   "shadows": "numpy.core.fastCopyAndTranspose"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.finfo": {
  "data": {
   "shadows": "numpy.core.finfo"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.fortran_int": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.linalg.linalg.get_linalg_error_extobj": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "list",
    "numpy.linalg.linalg._linalg_error_extobj"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.geterrobj": {
  "data": {
   "shadows": "numpy.core.geterrobj"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.inexact": {
  "data": {
   "shadows": "numpy.core.inexact"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.intc": {
  "data": {
   "shadows": "numpy.core.intc"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.intp": {
  "data": {
   "shadows": "numpy.core.intp"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.inv": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.linalg._umath_linalg.inv",
    "numpy.linalg.linalg._assertNdSquareness",
    "numpy.linalg.linalg._assertRankAtLeast2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg._raise_linalgerror_singular",
    "numpy.linalg.linalg.get_linalg_error_extobj",
    "numpy.linalg.linalg.isComplexType",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.isComplexType": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "issubclass",
    "numpy.core.complexfloating"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.isfinite": {
  "data": {
   "shadows": "numpy.core.isfinite"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.lapack_lite": {
  "data": {
   "shadows": "numpy.linalg.lapack_lite"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.longdouble": {
  "data": {
   "shadows": "numpy.core.longdouble"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.lstsq": {
  "data": {
   "lineno": 1880,
   "symbols_in_volume": [
    "FutureWarning",
    "float",
    "int",
    "lapack_routine",
    "max",
    "min",
    "numpy.core.abs",
    "numpy.core.array",
    "numpy.core.finfo",
    "numpy.core.newaxis",
    "numpy.core.sum",
    "numpy.core.zeros",
    "numpy.linalg.lapack_lite.dgelsd",
    "numpy.linalg.lapack_lite.zgelsd",
    "numpy.linalg.linalg.LinAlgError",
    "numpy.linalg.linalg._assertNoEmpty2d",
    "numpy.linalg.linalg._assertRank2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._fastCopyAndTranspose",
    "numpy.linalg.linalg._linalgRealType",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg._realType",
    "numpy.linalg.linalg._to_native_byte_order",
    "numpy.linalg.linalg.fortran_int",
    "numpy.linalg.linalg.isComplexType",
    "numpy.linalg.linalg.math",
    "numpy.linalg.linalg.warnings",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.matmul": {
  "data": {
   "shadows": "numpy.core.matmul"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.matrix_power": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.matrix_power"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.matrix_rank": {
  "data": {
   "lineno": 1548,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.core.abs",
    "numpy.core.all",
    "numpy.core.asarray",
    "numpy.core.count_nonzero",
    "numpy.core.finfo",
    "numpy.core.newaxis",
    "numpy.linalg.linalg.eigvalsh",
    "numpy.linalg.linalg.svd"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.maximum": {
  "data": {
   "shadows": "numpy.core.maximum"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.moveaxis": {
  "data": {
   "shadows": "numpy.core.moveaxis"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.multi_dot": {
  "data": {
   "lineno": 2342,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.core.asanyarray",
    "numpy.core.atleast_2d",
    "numpy.core.dot",
    "numpy.linalg.linalg._assertRank2",
    "numpy.linalg.linalg._multi_dot",
    "numpy.linalg.linalg._multi_dot_matrix_chain_order",
    "numpy.linalg.linalg._multi_dot_three"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.multiply": {
  "data": {
   "shadows": "numpy.core.multiply"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.newaxis": {
  "data": {
   "shadows": "numpy.core.newaxis"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.norm": {
  "data": {
   "lineno": 2103,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "numpy.core.Inf",
    "numpy.core.abs",
    "numpy.core.add.reduce",
    "numpy.core.amax",
    "numpy.core.amin",
    "numpy.core.asarray",
    "numpy.core.dot",
    "numpy.core.inexact",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.core.object_",
    "numpy.core.sqrt",
    "numpy.core.sum",
    "numpy.linalg.linalg._multi_svd_norm",
    "numpy.linalg.linalg.isComplexType",
    "ord",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.object_": {
  "data": {
   "shadows": "numpy.core.object_"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.ones": {
  "data": {
   "shadows": "numpy.core.ones"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.pinv": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "numpy.core.amax",
    "numpy.core.asarray",
    "numpy.core.divide",
    "numpy.core.empty",
    "numpy.core.matmul",
    "numpy.core.multiply",
    "numpy.core.newaxis",
    "numpy.linalg.linalg._isEmpty2d",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg.svd",
    "numpy.linalg.linalg.transpose",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.product": {
  "data": {
   "shadows": "numpy.core.product"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.qr": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "int",
    "lapack_routine",
    "min",
    "numpy.core.abs",
    "numpy.core.empty",
    "numpy.core.zeros",
    "numpy.lib.triu",
    "numpy.linalg.lapack_lite.dgeqrf",
    "numpy.linalg.lapack_lite.dorgqr",
    "numpy.linalg.lapack_lite.zgeqrf",
    "numpy.linalg.lapack_lite.zungqr",
    "numpy.linalg.linalg.LinAlgError",
    "numpy.linalg.linalg._assertNoEmpty2d",
    "numpy.linalg.linalg._assertRank2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._fastCopyAndTranspose",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg._to_native_byte_order",
    "numpy.linalg.linalg.isComplexType",
    "numpy.linalg.linalg.warnings",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.ravel": {
  "data": {
   "shadows": "numpy.core.ravel"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.single": {
  "data": {
   "shadows": "numpy.core.single"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.size": {
  "data": {
   "shadows": "numpy.core.size"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.slogdet": {
  "data": {
   "lineno": 1737,
   "symbols_in_volume": [
    "numpy.core.asarray",
    "numpy.linalg._umath_linalg.slogdet",
    "numpy.linalg.linalg._assertNdSquareness",
    "numpy.linalg.linalg._assertRankAtLeast2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._realType",
    "numpy.linalg.linalg.isComplexType"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.solve": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "gufunc",
    "numpy.linalg._umath_linalg.solve",
    "numpy.linalg._umath_linalg.solve1",
    "numpy.linalg.linalg._assertNdSquareness",
    "numpy.linalg.linalg._assertRankAtLeast2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg._raise_linalgerror_singular",
    "numpy.linalg.linalg.get_linalg_error_extobj",
    "numpy.linalg.linalg.isComplexType",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.sqrt": {
  "data": {
   "shadows": "numpy.core.sqrt"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.sum": {
  "data": {
   "shadows": "numpy.core.sum"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.svd": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "gufunc",
    "numpy.linalg._umath_linalg.svd_m",
    "numpy.linalg._umath_linalg.svd_m_f",
    "numpy.linalg._umath_linalg.svd_m_s",
    "numpy.linalg._umath_linalg.svd_n",
    "numpy.linalg._umath_linalg.svd_n_f",
    "numpy.linalg._umath_linalg.svd_n_s",
    "numpy.linalg.linalg._assertNoEmpty2d",
    "numpy.linalg.linalg._assertRankAtLeast2",
    "numpy.linalg.linalg._commonType",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg._raise_linalgerror_svd_nonconvergence",
    "numpy.linalg.linalg._realType",
    "numpy.linalg.linalg.get_linalg_error_extobj",
    "numpy.linalg.linalg.isComplexType",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.swapaxes": {
  "data": {
   "shadows": "numpy.core.swapaxes"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.tensorinv": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.asarray",
    "numpy.linalg.linalg.inv"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.tensorsolve": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "list",
    "numpy.core.asarray",
    "numpy.linalg.linalg._makearray",
    "numpy.linalg.linalg.solve",
    "range",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.transpose": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.core.swapaxes"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.linalg.triu": {
  "data": {
   "shadows": "numpy.lib.triu"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.linalg.linalg.zeros": {
  "data": {
   "shadows": "numpy.core.zeros"
  },
  "type": "import"
 },
 "numpy.linalg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.linalg.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.linalg.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.linalg.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "numpy.distutils.system_info.get_info",
    "numpy.linalg.setup.os"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.setup.configuration.get_lapack_lite_sources": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.linalg.setup.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.setup.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "numpy.linalg.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.linalg.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.linalg.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.linalg.test": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "numpy.linalg.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.linalg.tests.test_build": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.get_dependencies": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "RuntimeError",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.grep_dependencies": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dict",
    "numpy.linalg.tests.test_build.re"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.TestF77Mismatch": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_build.TestF77Mismatch.test_lapack": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.lapack_lite.__file__",
    "numpy.linalg.tests.test_build.FindDependenciesLdd",
    "numpy.linalg.tests.test_build.sys",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.lapack_lite": {
  "data": {
   "shadows": "numpy.linalg.lapack_lite"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.linalg.tests.test_deprecations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_deprecations.test_qr_mode_full_future_warning": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.eye",
    "numpy.linalg.qr",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.empty",
    "numpy.linalg.tests.test_linalg.CASES",
    "numpy.linalg.tests.test_linalg.LinalgCase",
    "numpy.linalg.tests.test_linalg._make_generalized_cases",
    "numpy.linalg.tests.test_linalg._make_strided_cases",
    "numpy.linalg.tests.test_linalg.apply_tag",
    "numpy.matrix",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.single",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.linalg.tests.test_linalg.CASES": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase.test_generalized_empty_herm_cases": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase.test_generalized_herm_cases": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.HermitianTestCase": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.HermitianTestCase.test_empty_herm_cases": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.HermitianTestCase.test_herm_cases": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinAlgError": {
  "data": {
   "shadows": "numpy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "frozenset",
    "isinstance",
    "numpy.testing.assert_",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase.__repr__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgCase.check": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "do"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedNonsquareTestCase": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedNonsquareTestCase.test_generalized_empty_nonsq_cases": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedNonsquareTestCase.test_generalized_nonsq_cases": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase.test_generalized_empty_sq_cases": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase.test_generalized_sq_cases": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases",
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase.test_empty_nonsq_cases": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase.test_nonsq_cases": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgSquareTestCase": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.LinalgSquareTestCase.test_empty_sq_cases": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.LinalgSquareTestCase.test_sq_cases": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg._check_cases"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.SkipTest": {
  "data": {
   "shadows": "numpy.testing.SkipTest"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.TestBoolPower": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestBoolPower.test_square": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.matrix_power",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCholesky": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCholesky.test_0_size": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "isinstance",
    "numpy.complex64",
    "numpy.float64",
    "numpy.int_",
    "numpy.linalg.tests.test_linalg.numpy.linalg",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCholesky.test_0_size.ArraySubclass": {
  "data": {
   "lineno": 1536,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCholesky.test_basic_property": {
  "data": {
   "lineno": 1511,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.asarray",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.complexfloating",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.issubdtype",
    "numpy.linalg.cholesky",
    "numpy.linalg.tests.test_linalg.itertools",
    "numpy.matmul",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCond2": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.LinalgSquareTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCond2.do": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.cond",
    "numpy.linalg.svd",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCond2.test_stacked_arrays_explicitly": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.cond",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCondInf": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCondInf.test": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.linalg.cond",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCondSVD": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgSquareTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestCondSVD.do": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.cond",
    "numpy.linalg.svd",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestCondSVD.test_stacked_arrays_explicitly": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.cond",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgSquareTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestDet.do": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.cdouble",
    "numpy.double",
    "numpy.exp",
    "numpy.inf",
    "numpy.linalg.det",
    "numpy.linalg.eigvals",
    "numpy.linalg.slogdet",
    "numpy.multiply.reduce",
    "numpy.single",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet.test_0_size": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "numpy.complex64",
    "numpy.float32",
    "numpy.float64",
    "numpy.linalg.det",
    "numpy.linalg.slogdet",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet.test_types": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet.test_types.check": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.det",
    "numpy.linalg.slogdet",
    "numpy.linalg.tests.test_linalg.get_real_dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestDet.test_zero": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.double",
    "numpy.inf",
    "numpy.linalg.det",
    "numpy.linalg.slogdet",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEig": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgSquareTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEig.do": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.linalg.eig",
    "numpy.linalg.tests.test_linalg.dot_generalized",
    "numpy.linalg.tests.test_linalg.get_rtol",
    "numpy.linalg.tests.test_linalg.imply",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEig.test_0_size": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "isinstance",
    "numpy.complex64",
    "numpy.float64",
    "numpy.int_",
    "numpy.linalg.eig",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEig.test_0_size.ArraySubclass": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEig.test_types": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEig.test_types.check": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.eig",
    "numpy.linalg.tests.test_linalg.get_complex_dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase",
    "numpy.linalg.tests.test_linalg.HermitianTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.do": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.linalg.tests.test_linalg.dot_generalized",
    "numpy.linalg.tests.test_linalg.get_rtol",
    "numpy.linalg.tests.test_linalg.numpy.linalg",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_0_size": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "isinstance",
    "numpy.complex64",
    "numpy.float32",
    "numpy.float64",
    "numpy.int_",
    "numpy.linalg.tests.test_linalg.numpy.linalg",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_0_size.ArraySubclass": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_UPLO": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.double",
    "numpy.linalg.eigh",
    "numpy.linalg.tests.test_linalg.get_rtol",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_invalid": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.linalg.eigh",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_types": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigh.test_types.check": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.eigh",
    "numpy.linalg.tests.test_linalg.get_real_dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgSquareTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.do": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numpy.linalg.eig",
    "numpy.linalg.eigvals",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.test_0_size": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "isinstance",
    "numpy.complex64",
    "numpy.float64",
    "numpy.int_",
    "numpy.linalg.eigvals",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.test_0_size.ArraySubclass": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.test_types": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvals.test_types.check": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.eigvals",
    "numpy.linalg.tests.test_linalg.get_complex_dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.HermitianGeneralizedTestCase",
    "numpy.linalg.tests.test_linalg.HermitianTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.do": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.get_rtol",
    "numpy.linalg.tests.test_linalg.numpy.linalg",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_0_size": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "isinstance",
    "numpy.complex64",
    "numpy.float32",
    "numpy.float64",
    "numpy.int_",
    "numpy.linalg.tests.test_linalg.numpy.linalg",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_0_size.ArraySubclass": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_UPLO": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.double",
    "numpy.linalg.eigvalsh",
    "numpy.linalg.tests.test_linalg.get_rtol",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_invalid": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.linalg.eigvalsh",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_types": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestEigvalsh.test_types.check": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.eigvalsh",
    "numpy.linalg.tests.test_linalg.get_real_dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestInv": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgSquareTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestInv.do": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "isinstance",
    "numpy.linalg.inv",
    "numpy.linalg.tests.test_linalg.dot_generalized",
    "numpy.linalg.tests.test_linalg.identity_like_generalized",
    "numpy.linalg.tests.test_linalg.imply",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_0_size": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "isinstance",
    "numpy.complex64",
    "numpy.float64",
    "numpy.int_",
    "numpy.linalg.inv",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_0_size.ArraySubclass": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_types": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestInv.test_types.check": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.inv",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestLstsq": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgSquareTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestLstsq.do": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "numpy.array",
    "numpy.asarray",
    "numpy.dot",
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.lstsq",
    "numpy.linalg.svd",
    "numpy.linalg.tests.test_linalg.imply",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestLstsq.test_future_rcond": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.array",
    "numpy.linalg.lstsq",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.identity",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_invert_noninvertible": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "numpy.linalg.linalg.LinAlgError",
    "numpy.linalg.matrix_power",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_large_power": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "numpy.linalg.matrix_power",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.test_large_power_trailing_zero": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "numpy.identity",
    "numpy.linalg.matrix_power",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_invert": {
  "data": {
   "lineno": 883
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_invert.tz": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.identity",
    "numpy.linalg.matrix_power",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_one": {
  "data": {
   "lineno": 867
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_one.tz": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "numpy.linalg.matrix_power",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_two": {
  "data": {
   "lineno": 875
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_two.tz": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.matrix_power",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_zero": {
  "data": {
   "lineno": 859
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixPower.testip_zero.tz": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "numpy.identity",
    "numpy.linalg.matrix_power",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixRank": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixRank.test_matrix_rank": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "numpy.linalg.matrix_rank",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMatrixRank.test_symmetric_rank": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.linalg.matrix_rank",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_basic_function_with_dynamic_programing_optimization": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "numpy.linalg.multi_dot",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_basic_function_with_three_arguments": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.multi_dot",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_dynamic_programming_logic": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.linalg.linalg._multi_dot_matrix_chain_order",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.triu"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_too_few_input_arrays": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "ValueError",
    "numpy.linalg.multi_dot",
    "numpy.random.random",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_vector_as_first_and_last_argument": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "numpy.linalg.multi_dot",
    "numpy.random.random",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_vector_as_first_argument": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": [
    "numpy.linalg.multi_dot",
    "numpy.random.random",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestMultiDot.test_vector_as_last_argument": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "numpy.linalg.multi_dot",
    "numpy.random.random",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestNormDouble": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.linalg.tests.test_linalg._TestNorm",
    "numpy.testing.dec"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestNormInt64": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.linalg.tests.test_linalg._TestNorm",
    "numpy.testing.dec"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestNormSingle": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.linalg.tests.test_linalg._TestNorm",
    "numpy.testing.dec"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestNorm_NonSystematic": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestNorm_NonSystematic.test_complex_high_ord": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "numpy.clongdouble",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.empty",
    "numpy.linalg.norm",
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestNorm_NonSystematic.test_intmin": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "numpy.linalg.norm",
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestNorm_NonSystematic.test_longdouble_norm": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linalg.norm",
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal",
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestPinv": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedNonsquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgNonsquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgSquareTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestPinv.do": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "isinstance",
    "numpy.dot",
    "numpy.linalg.pinv",
    "numpy.linalg.tests.test_linalg.dot_generalized",
    "numpy.linalg.tests.test_linalg.imply",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestQR.check_qr": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "isinstance",
    "min",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.tests.test_linalg.numpy.linalg",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.triu",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR.test_0_size": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.numpy.linalg",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR.test_mode_all_but_economic": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR.test_mode_raw": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.double",
    "numpy.linalg.tests.test_linalg.numpy.linalg",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestQR.test_qr_empty": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.numpy.linalg",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSVD": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgSquareTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSVD.do": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.svd",
    "numpy.linalg.tests.test_linalg.dot_generalized",
    "numpy.linalg.tests.test_linalg.get_rtol",
    "numpy.linalg.tests.test_linalg.imply",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSVD.test_0_size": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "numpy.complex64",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.svd",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSVD.test_types": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSVD.test_types.check": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.svd",
    "numpy.linalg.tests.test_linalg.get_real_dtype",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.LinalgGeneralizedSquareTestCase",
    "numpy.linalg.tests.test_linalg.LinalgSquareTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.do": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "isinstance",
    "numpy.linalg.solve",
    "numpy.linalg.tests.test_linalg.dot_generalized",
    "numpy.linalg.tests.test_linalg.imply",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.arange",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.solve",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size.ArraySubclass": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size_k": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.linalg.solve",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_0_size_k.ArraySubclass": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_types": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.TestSolve.test_types.check": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.solve",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "numpy.testing.dec",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_axis": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "ValueError",
    "numpy.Inf",
    "numpy.arange",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.linalg.tests.test_linalg.itertools",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_bad_args": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "ValueError",
    "numpy.AxisError",
    "numpy.arange",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_empty": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.linalg.norm",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_keepdims": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "list",
    "numpy.Inf",
    "numpy.arange",
    "numpy.linalg.norm",
    "numpy.linalg.tests.test_linalg.itertools",
    "numpy.squeeze",
    "numpy.testing.assert_",
    "numpy.testing.assert_allclose",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_matrix_2x2": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.matrix",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_matrix_3x3": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_matrix_return_type": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "RuntimeWarning",
    "issubclass",
    "numpy.array",
    "numpy.floating",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.suppress_warnings",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_vector": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "_test",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_vector._test": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._TestNorm.test_vector_return_type": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "RuntimeWarning",
    "issubclass",
    "numpy.array",
    "numpy.floating",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.suppress_warnings",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._check_cases": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "numpy.linalg.tests.test_linalg.CASES",
    "numpy.linalg.tests.test_linalg.traceback",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._make_generalized_cases": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.linalg.tests.test_linalg.CASES",
    "numpy.linalg.tests.test_linalg.LinalgCase",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._make_strided_cases": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.CASES",
    "numpy.linalg.tests.test_linalg.LinalgCase",
    "numpy.linalg.tests.test_linalg._stride_comb_iter"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg._multi_dot_matrix_chain_order": {
  "data": {
   "shadows": "numpy.linalg.linalg._multi_dot_matrix_chain_order"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg._stride_comb_iter": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "list",
    "numpy.all",
    "numpy.empty",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.linalg.tests.test_linalg.itertools",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.uint32",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.all_tags": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.apply_tag": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.all_tags"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.assert_almost_equal": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.csingle",
    "numpy.linalg.tests.test_linalg.old_assert_almost_equal",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.atleast_2d": {
  "data": {
   "shadows": "numpy.atleast_2d"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.cdouble": {
  "data": {
   "shadows": "numpy.cdouble"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.csingle": {
  "data": {
   "shadows": "numpy.csingle"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.dot_generalized": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ValueError",
    "map",
    "numpy.asarray",
    "numpy.common_type",
    "numpy.dot",
    "numpy.empty",
    "numpy.linalg.tests.test_linalg.itertools",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.double": {
  "data": {
   "shadows": "numpy.double"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.get_complex_dtype": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.get_real_dtype": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.cdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.get_rtol": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.csingle",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.identity": {
  "data": {
   "shadows": "numpy.identity"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.identity_like_generalized": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "map",
    "numpy.asarray",
    "numpy.empty",
    "numpy.identity",
    "numpy.linalg.tests.test_linalg.itertools",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.ifthen": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.imply": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.matrix_power": {
  "data": {
   "shadows": "numpy.linalg.matrix_power"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.matrix_rank": {
  "data": {
   "shadows": "numpy.linalg.matrix_rank"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.multi_dot": {
  "data": {
   "shadows": "numpy.linalg.multi_dot"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.multiply": {
  "data": {
   "shadows": "numpy.multiply"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.numpy.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.old_assert_almost_equal": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_linalg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.resource": {
  "data": {
   "shadows": "resource"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.single": {
  "data": {
   "shadows": "numpy.single"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.test_byteorder_check": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.float32",
    "numpy.float64",
    "numpy.linalg.tests.test_linalg.numpy.linalg",
    "numpy.linalg.tests.test_linalg.sys",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "routine"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_generalized_raise_multiloop": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.inv",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_reduced_rank": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "numpy.linalg.matrix_rank",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_sdot_bug_8577": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "numpy.linalg.tests.test_linalg.subprocess",
    "numpy.linalg.tests.test_linalg.sys",
    "numpy.linalg.tests.test_linalg.textwrap"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.test_xerbla_override": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "OSError",
    "ValueError",
    "numpy.array",
    "numpy.linalg.lapack_lite.dorgqr",
    "numpy.linalg.lapack_lite.xerbla",
    "numpy.linalg.tests.test_linalg.os",
    "numpy.linalg.tests.test_linalg.resource",
    "numpy.testing.SkipTest",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_linalg.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_linalg.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.linalg.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_eig_build": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float64",
    "numpy.linalg.eig",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_eigh_build": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.eigh",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_lapack_endian": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.cholesky",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_large_svd_32bit": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_lstsq_complex_larger_rhs": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.linalg.lstsq",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_norm_object_array": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.dtype",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.linalg.tests.test_regression.warnings",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_norm_vector_badarg": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_svd_build": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.testing.assert_array_almost_equal",
    "numpy.transpose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_svd_no_uv": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "complex",
    "float",
    "numpy.absolute",
    "numpy.count_nonzero",
    "numpy.linalg.matrix_rank",
    "numpy.linalg.norm",
    "numpy.linalg.svd",
    "numpy.ones",
    "numpy.testing.assert_array_less",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.float64": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma": {
  "data": {
   "symbols_in_volume": [
    "numpy.ma.__all__",
    "numpy.testing._numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.ma.__all__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.ma._numpy_tester": {
  "data": {
   "shadows": "numpy.testing._numpy_tester"
  },
  "type": "import"
 },
 "numpy.ma.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.bench": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "numpy.ma.bench.compare_functions_1v": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "locals",
    "numpy.ma.bench.nmxl",
    "numpy.ma.bench.nmxs",
    "numpy.ma.bench.timer",
    "numpy.ma.bench.xl",
    "numpy.ma.bench.xs",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.ma.bench.compare_functions_2v": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "locals",
    "numpy.ma.bench.nmxl",
    "numpy.ma.bench.nmxs",
    "numpy.ma.bench.nmyl",
    "numpy.ma.bench.nmys",
    "numpy.ma.bench.timer",
    "numpy.ma.bench.xl",
    "numpy.ma.bench.xs",
    "numpy.ma.bench.yl",
    "numpy.ma.bench.ys",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.ma.bench.compare_methods": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "locals",
    "numpy.ma.bench.nmxl",
    "numpy.ma.bench.nmxs",
    "numpy.ma.bench.timer",
    "numpy.ma.bench.xl",
    "numpy.ma.bench.xs",
    "print",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.ma.bench.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.bench.m1": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.ma.bench.m2": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.ma.bench.maskx": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.ma.bench.masky": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmxl": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmxs": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmyl": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmys": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmzl": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.ma.bench.nmzs": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.ma.bench.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.bench.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.bench.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "numpy.ma.bench.timer": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int",
    "min",
    "numpy.ma.bench.numpy",
    "numpy.ma.bench.timeit",
    "print",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.bench.xl": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.ma.bench.xs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.ma.bench.yl": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.ma.bench.ys": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.ma.bench.zl": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.ma.bench.zs": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.ma.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.extras": {
  "data": {
   "symbols_in_volume": [
    "numpy.apply_along_axis.__doc__",
    "numpy.apply_over_axes.__doc__.find",
    "numpy.apply_over_axes.__doc__.rstrip",
    "numpy.ma.extras._fromnxfunction_allargs",
    "numpy.ma.extras._fromnxfunction_seq",
    "numpy.ma.extras._fromnxfunction_single",
    "numpy.ma.extras.apply_along_axis",
    "numpy.ma.extras.apply_over_axes",
    "numpy.ma.extras.mr_class",
    "numpy.ma.extras.polyfit",
    "numpy.ma.extras.vander",
    "numpy.polyfit.__doc__",
    "numpy.vander.__doc__"
   ]
  },
  "type": "module"
 },
 "numpy.ma.extras.AxisConcatenator": {
  "data": {
   "shadows": "numpy.lib.index_tricks.AxisConcatenator"
  },
  "type": "import"
 },
 "numpy.ma.extras.MAxisConcatenator": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.AxisConcatenator",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "numpy.ma.extras.MAxisConcatenator.__getitem__": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "MAError",
    "isinstance",
    "numpy.ma.extras.MAxisConcatenator",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.MAxisConcatenator.makemat": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.matrix",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.ma.extras._covhelper": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "int",
    "numpy.array",
    "numpy.concatenate",
    "numpy.logical_not",
    "numpy.logical_or",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras._ezclump": {
  "data": {
   "lineno": 1722,
   "symbols_in_volume": [
    "len",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction.__call__": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction.__init__": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction.getdoc": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "getattr",
    "numpy"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction_allargs": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.ma.extras._fromnxfunction"
   ]
  },
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction_allargs.__call__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "func",
    "getattr",
    "getmaskarray",
    "len",
    "masked_array",
    "numpy",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction_args": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.ma.extras._fromnxfunction"
   ]
  },
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction_args.__call__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "func",
    "getattr",
    "getmaskarray",
    "len",
    "list",
    "masked_array",
    "numpy",
    "numpy.asarray",
    "numpy.ma.extras.issequence"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction_seq": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.ma.extras._fromnxfunction"
   ]
  },
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction_seq.__call__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "func",
    "getattr",
    "getmaskarray",
    "masked_array",
    "numpy",
    "numpy.asarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras._fromnxfunction_single": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.ma.extras._fromnxfunction"
   ]
  },
  "type": "class"
 },
 "numpy.ma.extras._fromnxfunction_single.__call__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "func",
    "getattr",
    "getmaskarray",
    "isinstance",
    "masked_array",
    "numpy",
    "numpy.asarray",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras._median": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "Exception",
    "count",
    "divmod",
    "enumerate",
    "numpy.all",
    "numpy.arange",
    "numpy.copyto",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.inexact",
    "numpy.inf",
    "numpy.issubdtype",
    "numpy.lib.utils._median_nancheck",
    "numpy.ma.is_masked",
    "numpy.ma.mean",
    "numpy.ma.minimum_fill_value",
    "numpy.ma.sum",
    "numpy.meshgrid",
    "numpy.minimum",
    "numpy.true_divide",
    "replace_masked",
    "slice",
    "sort",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras._median.replace_masked": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.ma.is_masked",
    "numpy.ma.minimum_fill_value"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras._ureduce": {
  "data": {
   "shadows": "numpy.lib.function_base._ureduce"
  },
  "type": "import"
 },
 "numpy.ma.extras.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.extras.apply_along_axis": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "TypeError",
    "asarray",
    "func1d",
    "hasattr",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.dtype",
    "numpy.isscalar",
    "numpy.ma.extras.flatten_inplace",
    "numpy.product",
    "numpy.zeros",
    "object",
    "range",
    "slice",
    "tuple",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.apply_over_axes": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ValueError",
    "asarray",
    "func",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.atleast_1d": {
  "data": {
   "lineno": 352
  },
  "type": "constant"
 },
 "numpy.ma.extras.atleast_2d": {
  "data": {
   "lineno": 353
  },
  "type": "constant"
 },
 "numpy.ma.extras.atleast_3d": {
  "data": {
   "lineno": 354
  },
  "type": "constant"
 },
 "numpy.ma.extras.average": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "asarray",
    "getmask",
    "issubclass",
    "numpy.asanyarray",
    "numpy.bool_",
    "numpy.broadcast_to",
    "numpy.integer",
    "numpy.multiply",
    "numpy.result_type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.clump_masked": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "numpy.ma.extras._ezclump"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.clump_unmasked": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "getattr",
    "numpy.ma.extras._ezclump",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.column_stack": {
  "data": {
   "lineno": 358
  },
  "type": "constant"
 },
 "numpy.ma.extras.compress_cols": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "NotImplementedError",
    "asarray",
    "numpy.ma.extras.compress_rowcols"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.compress_nd": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "asarray",
    "getmask",
    "list",
    "numpy.array",
    "numpy.core.numeric.normalize_axis_tuple",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.compress_rowcols": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "NotImplementedError",
    "asarray",
    "numpy.ma.extras.compress_nd"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.compress_rows": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "NotImplementedError",
    "asarray",
    "numpy.ma.extras.compress_rowcols"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.corrcoef": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "dot",
    "numpy._NoValue",
    "numpy.dot",
    "numpy.ma.extras._covhelper",
    "numpy.ma.extras.diagflat",
    "numpy.ma.extras.mask_cols",
    "numpy.ma.extras.warnings",
    "range",
    "vstack"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.count_masked": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "getmaskarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.cov": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "ValueError",
    "dot",
    "int",
    "numpy.dot",
    "numpy.ma.extras._covhelper"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.diagflat": {
  "data": {
   "lineno": 363
  },
  "type": "constant"
 },
 "numpy.ma.extras.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.extras.dstack": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "numpy.ma.extras.ediff1d": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "len",
    "numpy.ma.extras.hstack"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.flatnotmasked_contiguous": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "getmask",
    "len",
    "list",
    "numpy.ma.extras.itertools",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.flatnotmasked_edges": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "getmask",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.flatten_inplace": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.hsplit": {
  "data": {
   "lineno": 361
  },
  "type": "constant"
 },
 "numpy.ma.extras.hstack": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "numpy.ma.extras.in1d": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "len",
    "numpy.ma.extras.unique"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.intersect1d": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "numpy.ma.extras.unique"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.isin": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "numpy.ma.extras.in1d"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.issequence": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.ma.extras.ma": {
  "data": {
   "shadows": "core"
  },
  "type": "import"
 },
 "numpy.ma.extras.mask_cols": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "mask_rowcols"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.mask_rows": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "mask_rowcols"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.masked_all": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "float",
    "make_mask_descr",
    "masked_array",
    "numpy.empty",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.masked_all_like": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "make_mask_descr",
    "numpy.empty_like",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.median": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "getdata",
    "hasattr",
    "isinstance",
    "masked_array",
    "numpy.lib.function_base._ureduce",
    "numpy.median",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.mr_": {
  "data": {
   "lineno": 1497
  },
  "type": "constant"
 },
 "numpy.ma.extras.mr_class": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "numpy.ma.extras.MAxisConcatenator"
   ]
  },
  "type": "class"
 },
 "numpy.ma.extras.mr_class.__init__": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "numpy.ma.extras.MAxisConcatenator"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.ma.extras.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "numpy.ma.extras.normalize_axis_tuple": {
  "data": {
   "shadows": "numpy.core.numeric.normalize_axis_tuple"
  },
  "type": "import"
 },
 "numpy.ma.extras.notmasked_contiguous": {
  "data": {
   "lineno": 1662,
   "symbols_in_volume": [
    "NotImplementedError",
    "asarray",
    "numpy.ma.extras.flatnotmasked_contiguous",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.notmasked_edges": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": [
    "asarray",
    "getmaskarray",
    "numpy.array",
    "numpy.asarray",
    "numpy.indices",
    "numpy.ma.extras.flatnotmasked_edges",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.extras.nxarray": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.ma.extras.polyfit": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "TypeError",
    "asarray",
    "getmask",
    "mask_or",
    "numpy.ma.extras.cov",
    "numpy.ma.extras.mask_rows",
    "numpy.polyfit"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.extras.setdiff1d": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "numpy.ma.extras.in1d",
    "numpy.ma.extras.unique"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.setxor1d": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "numpy.ma.extras.unique"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.umath": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.ma.extras.union1d": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "numpy.ma.extras.unique"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.unique": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.unique",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.vander": {
  "data": {
   "lineno": 1834,
   "symbols_in_volume": [
    "getmask",
    "numpy.vander"
   ]
  },
  "type": "function"
 },
 "numpy.ma.extras.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma.mrecords": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.numerictypes._typestr",
    "numpy.core.records._byteorderconv",
    "numpy.ma.core._check_fill_value",
    "numpy.ma.mrecords.MaskedRecords"
   ]
  },
  "type": "module"
 },
 "numpy.ma.mrecords.MAError": {
  "data": {
   "shadows": "numpy.ma.MAError"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.MaskedArray"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.MaskedRecords": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.ma.MaskedArray",
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "numpy.ma.mrecords.MaskedRecords.__array_finalize__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.array",
    "numpy.ma.make_mask_descr",
    "numpy.ma.make_mask_none",
    "numpy.ma.nomask",
    "numpy.ndarray",
    "numpy.ndarray.__getattribute__",
    "numpy.recarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__getattribute__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "KeyError",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "bool",
    "len",
    "numpy.ma.MaskedArray",
    "numpy.ndarray",
    "numpy.ndarray.__getattribute__",
    "numpy.ndarray.view",
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__getitem__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.compat.basestring",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked",
    "numpy.ndarray.__getattribute__",
    "numpy.ndarray.view",
    "numpy.recarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__getstate__": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__len__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__new__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.dtype",
    "numpy.ma.MAError",
    "numpy.ma.make_mask_descr",
    "numpy.ma.nomask",
    "numpy.recarray.__new__",
    "numpy.reshape",
    "numpy.resize",
    "numpy.size",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__reduce__": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__repr__": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "getattr",
    "len",
    "max",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__setattr__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "KeyError",
    "TypeError",
    "exctype",
    "numpy.ma.filled",
    "numpy.ma.getmaskarray",
    "numpy.ma.masked",
    "numpy.ma.mrecords.sys",
    "numpy.ndarray.__getattribute__",
    "object.__delattr__",
    "object.__getattribute__",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__setitem__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "isinstance",
    "numpy.compat.basestring",
    "numpy.ma.MaskedArray.__setitem__",
    "numpy.ma.getmaskarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__setstate__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.dtype",
    "numpy.ndarray.__setstate__"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.__str__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "getattr",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords._getdata": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.ndarray.view",
    "numpy.recarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords._getfieldmask": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.copy": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.harden_mask": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.soften_mask": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.tolist": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.array",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.MaskedRecords.view": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "issubclass",
    "numpy.dtype",
    "numpy.dtype.fields",
    "numpy.ma.make_mask_descr",
    "numpy.ma.nomask",
    "numpy.ndarray",
    "numpy.ndarray.view",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.ma.mrecords._byteorderconv": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.ma.mrecords._check_fill_value": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.ma.mrecords._checknames": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "NameError",
    "isinstance",
    "len",
    "list",
    "numpy.dtype",
    "numpy.ma.mrecords.reserved_fields",
    "range",
    "repr",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords._get_fieldmask": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords._getformats": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "hasattr",
    "issubclass",
    "numpy.asarray",
    "numpy.core.numerictypes.flexible",
    "numpy.ma.mrecords._typestr",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords._guessvartypes": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "complex",
    "float",
    "int",
    "numpy.asarray",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords._mrreconstruct": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.ndarray.__new__"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords._typestr": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.ma.mrecords.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.addfield": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "len",
    "numpy.bool_",
    "numpy.dtype",
    "numpy.ma.array",
    "numpy.ma.getmaskarray",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.ma.mrecords.reserved_fields",
    "numpy.recarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.bool_": {
  "data": {
   "shadows": "numpy.bool_"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.dtype": {
  "data": {
   "shadows": "numpy.dtype"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.filled": {
  "data": {
   "shadows": "numpy.ma.filled"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.fromarrays": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "list",
    "numpy.atleast_1d",
    "numpy.core.records.fromarrays",
    "numpy.dtype",
    "numpy.ma.getdata",
    "numpy.ma.getmaskarray",
    "numpy.ma.mrecords.mrecarray",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.fromrecords": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.core.records.fromrecords",
    "numpy.dtype",
    "numpy.ma.MaskedArray",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.nomask",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.fromtextfile": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "len",
    "numpy.core.records.fromarrays",
    "numpy.dtype",
    "numpy.ma.default_fill_value",
    "numpy.ma.masked_array",
    "numpy.ma.mrecords._guessvartypes",
    "numpy.ma.mrecords.openfile",
    "numpy.ma.mrecords.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.getdata": {
  "data": {
   "shadows": "numpy.ma.getdata"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.getmaskarray": {
  "data": {
   "shadows": "numpy.ma.getmaskarray"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.masked": {
  "data": {
   "shadows": "numpy.ma.masked"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.masked_array": {
  "data": {
   "shadows": "numpy.ma.masked_array"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.mrecarray": {
  "data": {
   "lineno": 521
  },
  "type": "constant"
 },
 "numpy.ma.mrecords.narray": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.nomask": {
  "data": {
   "shadows": "numpy.ma.nomask"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.ntypes": {
  "data": {
   "shadows": "numpy.core.numerictypes"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.openfile": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "IOError",
    "NotImplementedError",
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.ma.mrecords.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.recarray": {
  "data": {
   "shadows": "numpy.recarray"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.recfromarrays": {
  "data": {
   "shadows": "numpy.core.records.fromarrays"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.recfromrecords": {
  "data": {
   "shadows": "numpy.core.records.fromrecords"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.reserved_fields": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.ma.mrecords.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.ma.mrecords.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.ma.setup.config",
    "numpy.ma.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.ma.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.ma.setup.config": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.ma.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.ma.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.ma.test": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.ma.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.ma.tests.test_deprecations": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.ma.tests.test_deprecations.MaskedArrayFutureWarning": {
  "data": {
   "shadows": "numpy.ma.core.MaskedArrayFutureWarning"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_deprecations.TestArgsort": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_deprecations.TestArgsort._test_base": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "argsort",
    "numpy.array",
    "numpy.ma.core.MaskedArrayFutureWarning",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestArgsort.test_function_maskedarray": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.ma.MaskedArray",
    "numpy.ma.argsort"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestArgsort.test_function_ndarray": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.ma.argsort",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestArgsort.test_method": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.ma.MaskedArray",
    "numpy.ma.MaskedArray.argsort"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestMinimumMaximum": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_deprecations.TestMinimumMaximum.test_axis_default": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ma_max",
    "ma_min",
    "numpy.ma.arange",
    "numpy.ma.core.MaskedArrayFutureWarning",
    "numpy.ma.maximum.reduce",
    "numpy.ma.minimum.reduce",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestMinimumMaximum.test_maximum": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.ma.array",
    "numpy.ma.maximum",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.TestMinimumMaximum.test_minimum": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.ma.array",
    "numpy.ma.minimum",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_deprecations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_deprecations.assert_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_deprecations.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_deprecations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_deprecations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_deprecations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_deprecations.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.ma.tests.test_extras.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.core.MaskedArray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "numpy.ma.core.arange",
    "numpy.ma.extras.apply_along_axis",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d.myfunc": {
  "data": {
   "lineno": 639
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d_kwargs": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "numpy.ma.core.arange",
    "numpy.ma.extras.apply_along_axis",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d_kwargs.myfunc": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyOverAxes": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestApplyOverAxes.test_basic": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.ma.core.arange",
    "numpy.ma.core.masked",
    "numpy.ma.extras.apply_over_axes",
    "numpy.ma.testutils.assert_equal",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.array",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.ediff1d",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_ndarray": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.array",
    "numpy.ma.core.masked",
    "numpy.ma.extras.ediff1d",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_tobegin": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.array",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.ediff1d",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_tobegin_toend": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.array",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.ediff1d",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_toend": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.array",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.ediff1d",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_in1d": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "numpy.ma.core.array",
    "numpy.ma.extras.in1d",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_in1d_invert": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "numpy.invert",
    "numpy.ma.core.array",
    "numpy.ma.extras.in1d",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_intersect1d": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "numpy.ma.core.array",
    "numpy.ma.extras.intersect1d",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_isin": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.arange",
    "numpy.isin",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.array",
    "numpy.ma.core.zeros",
    "numpy.ma.extras.isin",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setdiff1d": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "numpy.ma.core.arange",
    "numpy.ma.core.array",
    "numpy.ma.extras.setdiff1d",
    "numpy.ma.testutils.assert_equal",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setdiff1d_char_array": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ma.extras.setdiff1d",
    "numpy.ma.testutils.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setxor1d": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.array",
    "numpy.ma.extras.setxor1d",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_union1d": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "numpy.ma.core.array",
    "numpy.ma.extras.union1d",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_allmasked": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.unique",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_onlist": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.unique",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_onmaskedarray": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.unique",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_complex": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.average",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.average",
    "numpy.ma.testutils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_onintegers_with_mask": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.ma.core.array",
    "numpy.ma.extras.average",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage1": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.ma.core.array",
    "numpy.ma.core.masked",
    "numpy.ma.extras.average",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage2": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.add.reduce",
    "numpy.arange",
    "numpy.float_",
    "numpy.ma.core.arange",
    "numpy.ma.core.array",
    "numpy.ma.core.count",
    "numpy.ma.core.masked_array",
    "numpy.ma.core.ones",
    "numpy.ma.core.zeros",
    "numpy.ma.extras.average",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage3": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "float",
    "numpy.ma.core.arange",
    "numpy.ma.core.array",
    "numpy.ma.core.masked_array",
    "numpy.ma.core.ones",
    "numpy.ma.core.shape",
    "numpy.ma.extras.average",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_compress_nd": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "bool",
    "list",
    "numpy.array",
    "numpy.ma.core.array",
    "numpy.ma.extras.compress_nd",
    "numpy.ma.testutils.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_compress_rowcols": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.array",
    "numpy.ma.extras.compress_rowcols",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_dot": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot",
    "numpy.ma.core.masked_array",
    "numpy.ma.core.nomask",
    "numpy.ma.extras.dot",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_dot_out": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ma.core.array",
    "numpy.ma.extras.dot",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_dot_returns_maskedarray": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.array",
    "numpy.ma.extras.dot",
    "numpy.ma.testutils.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCompressFunctions.test_mask_rowcols": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.array",
    "numpy.ma.core.masked",
    "numpy.ma.extras.mask_rowcols",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestConcatenator": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_1d": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.array",
    "numpy.ma.core.masked_array",
    "numpy.ma.core.ones",
    "numpy.ma.extras.mr_",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_2d": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.mr_",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.r_",
    "numpy.random.rand",
    "numpy.round_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_matrix": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.ma.extras.mr_",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.ma.testutils.assert_equal",
    "numpy.r_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_matrix_builder": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.ma.MAError",
    "numpy.ma.extras.mr_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.setup": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "numpy.ma.core.array",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_1d_with_missing": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "numpy.corrcoef",
    "numpy.ma.core.masked",
    "numpy.ma.extras.corrcoef",
    "numpy.ma.testutils.assert_almost_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_1d_without_missing": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.corrcoef",
    "numpy.ma.extras.corrcoef",
    "numpy.ma.testutils.assert_almost_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_2d_with_missing": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.corrcoef",
    "numpy.ma.core.masked",
    "numpy.ma.extras.corrcoef",
    "numpy.ma.testutils.assert_almost_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_2d_without_missing": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.corrcoef",
    "numpy.ma.extras.corrcoef",
    "numpy.ma.testutils.assert_almost_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_bias": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.corrcoef",
    "numpy.ma.extras.corrcoef",
    "numpy.ma.tests.test_extras.warnings",
    "numpy.ma.testutils.assert_almost_equal",
    "numpy.testing.assert_warns",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_ddof": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.corrcoef",
    "numpy.ma.extras.corrcoef",
    "numpy.ma.tests.test_extras.warnings",
    "numpy.ma.testutils.assert_almost_equal",
    "numpy.testing.assert_warns",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestCov.setup": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "numpy.ma.core.array",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_1d_with_missing": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cov",
    "numpy.ma.core.masked",
    "numpy.ma.extras.cov",
    "numpy.ma.testutils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_1d_without_missing": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.ma.extras.cov",
    "numpy.ma.testutils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_2d_with_missing": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "int",
    "numpy.cov",
    "numpy.dot",
    "numpy.logical_not",
    "numpy.ma.core.getmaskarray",
    "numpy.ma.core.masked",
    "numpy.ma.extras.cov",
    "numpy.ma.testutils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_2d_without_missing": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.ma.extras.cov",
    "numpy.ma.testutils.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestGeneric.check_clump": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "f",
    "int",
    "numpy.arange",
    "numpy.full",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.clump_unmasked",
    "numpy.ma.testutils.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_clump_masked": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.clump_masked",
    "numpy.ma.testutils.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_clump_unmasked": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.clump_unmasked",
    "numpy.ma.testutils.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_flatnotmasked_contiguous": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.ma.core.arange",
    "numpy.ma.core.masked",
    "numpy.ma.extras.flatnotmasked_contiguous",
    "numpy.ma.testutils.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_masked_all": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "float",
    "numpy.dtype",
    "numpy.ma.core.array",
    "numpy.ma.extras.masked_all",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_masked_all_like": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "float",
    "numpy.dtype",
    "numpy.ma.core.array",
    "numpy.ma.extras.masked_all_like",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_1d_shape_consistency": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "numpy.ma.core.array",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_2d": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.median",
    "numpy.ma.testutils.assert_equal",
    "numpy.random.shuffle",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_2d_waxis": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.median",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_3d": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "numpy.ma.arange",
    "numpy.ma.core.masked",
    "numpy.ma.extras.median",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_ambigous_fill": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ma.masked_array",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_axis_argument_errors": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "numpy.AxisError",
    "numpy.ma.core.array",
    "numpy.ma.median",
    "numpy.ma.tests.test_extras.itertools",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_docstring_examples": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.array",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_empty": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "RuntimeWarning",
    "float",
    "numpy.array",
    "numpy.ma.masked_array",
    "numpy.ma.median",
    "numpy.ma.tests.test_extras.warnings",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.ma.testutils.assert_equal",
    "numpy.nan",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_inf": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.ma.masked_array",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_masked_0d": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "numpy.ma.core.array",
    "numpy.ma.masked",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_masked_1d": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.MaskedConstant",
    "numpy.ma.core.array",
    "numpy.ma.masked",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_nan": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "RuntimeWarning",
    "bool",
    "numpy.isscalar",
    "numpy.ma.array",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.masked",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.ma.testutils.assert_equal",
    "numpy.nan",
    "numpy.testing.suppress_warnings",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_nan_behavior": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "RuntimeWarning",
    "float",
    "len",
    "numpy.arange",
    "numpy.isscalar",
    "numpy.ma.masked",
    "numpy.ma.masked_array",
    "numpy.ma.median",
    "numpy.ma.tests.test_extras.warnings",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.ma.testutils.assert_equal",
    "numpy.nan",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_neg_axis": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.median",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_non_masked": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "numpy.median",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_object": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.ma.masked_array",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_",
    "numpy.nan",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_out": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.median",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "numpy.ones",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_out_1d": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.median",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "numpy.ones",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_out_nan": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.ma.masked",
    "numpy.ma.masked_array",
    "numpy.ma.median",
    "numpy.ma.tests.test_extras.warnings",
    "numpy.ma.testutils.assert_equal",
    "numpy.nan",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_pytype": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_single_non_masked_value_on_axis": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "numpy.ma.masked_equal",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_special": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.inf",
    "numpy.isnan",
    "numpy.ma.masked_array",
    "numpy.ma.median",
    "numpy.ma.testutils.assert_array_equal",
    "numpy.ma.testutils.assert_equal",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestNotMasked": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestNotMasked.test_contiguous": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.notmasked_contiguous",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestNotMasked.test_edges": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.notmasked_edges",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestPolynomial": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestPolynomial.test_polyfit": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.masked",
    "numpy.ma.extras.polyfit",
    "numpy.ma.testutils.assert_almost_equal",
    "numpy.ma.testutils.assert_equal",
    "numpy.polyfit",
    "numpy.random.rand",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestPolynomial.test_polyfit_with_masked_NaNs": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.masked",
    "numpy.ma.extras.polyfit",
    "numpy.ma.testutils.assert_almost_equal",
    "numpy.nan",
    "numpy.polyfit",
    "numpy.random.rand",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestShapeBase": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestShapeBase.test_atleast_2d": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "numpy.ma.core.masked_array",
    "numpy.ma.extras.atleast_2d",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestShapeBase.test_shape_scalar": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "numpy.ma.extras.atleast_1d",
    "numpy.ma.extras.atleast_2d",
    "numpy.ma.extras.atleast_3d",
    "numpy.ma.extras.diagflat",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.apply_along_axis": {
  "data": {
   "shadows": "numpy.ma.extras.apply_along_axis"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.apply_over_axes": {
  "data": {
   "shadows": "numpy.ma.extras.apply_over_axes"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.arange": {
  "data": {
   "shadows": "numpy.ma.core.arange"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.array": {
  "data": {
   "shadows": "numpy.ma.core.array"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.assert_": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.assert_almost_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.assert_array_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.assert_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.atleast_1d": {
  "data": {
   "shadows": "numpy.ma.extras.atleast_1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.atleast_2d": {
  "data": {
   "shadows": "numpy.ma.extras.atleast_2d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.atleast_3d": {
  "data": {
   "shadows": "numpy.ma.extras.atleast_3d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.average": {
  "data": {
   "shadows": "numpy.ma.extras.average"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.clump_masked": {
  "data": {
   "shadows": "numpy.ma.extras.clump_masked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.clump_unmasked": {
  "data": {
   "shadows": "numpy.ma.extras.clump_unmasked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.compress_nd": {
  "data": {
   "shadows": "numpy.ma.extras.compress_nd"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.compress_rowcols": {
  "data": {
   "shadows": "numpy.ma.extras.compress_rowcols"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.corrcoef": {
  "data": {
   "shadows": "numpy.ma.extras.corrcoef"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.count": {
  "data": {
   "shadows": "numpy.ma.core.count"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.cov": {
  "data": {
   "shadows": "numpy.ma.extras.cov"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.diagflat": {
  "data": {
   "shadows": "numpy.ma.extras.diagflat"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.dot": {
  "data": {
   "shadows": "numpy.ma.extras.dot"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.ediff1d": {
  "data": {
   "shadows": "numpy.ma.extras.ediff1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.flatnotmasked_contiguous": {
  "data": {
   "shadows": "numpy.ma.extras.flatnotmasked_contiguous"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.getmaskarray": {
  "data": {
   "shadows": "numpy.ma.core.getmaskarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.in1d": {
  "data": {
   "shadows": "numpy.ma.extras.in1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.intersect1d": {
  "data": {
   "shadows": "numpy.ma.extras.intersect1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.isin": {
  "data": {
   "shadows": "numpy.ma.extras.isin"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.mae": {
  "data": {
   "shadows": "numpy.ma.extras"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.mask_rowcols": {
  "data": {
   "shadows": "numpy.ma.extras.mask_rowcols"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.masked": {
  "data": {
   "shadows": "numpy.ma.core.masked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.masked_all": {
  "data": {
   "shadows": "numpy.ma.extras.masked_all"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.masked_all_like": {
  "data": {
   "shadows": "numpy.ma.extras.masked_all_like"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.masked_array": {
  "data": {
   "shadows": "numpy.ma.core.masked_array"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.median": {
  "data": {
   "shadows": "numpy.ma.extras.median"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.mr_": {
  "data": {
   "shadows": "numpy.ma.extras.mr_"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.nomask": {
  "data": {
   "shadows": "numpy.ma.core.nomask"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.notmasked_contiguous": {
  "data": {
   "shadows": "numpy.ma.extras.notmasked_contiguous"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.notmasked_edges": {
  "data": {
   "shadows": "numpy.ma.extras.notmasked_edges"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.ones": {
  "data": {
   "shadows": "numpy.ma.core.ones"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.polyfit": {
  "data": {
   "shadows": "numpy.ma.extras.polyfit"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.setdiff1d": {
  "data": {
   "shadows": "numpy.ma.extras.setdiff1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.setxor1d": {
  "data": {
   "shadows": "numpy.ma.extras.setxor1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.shape": {
  "data": {
   "shadows": "numpy.ma.core.shape"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.union1d": {
  "data": {
   "shadows": "numpy.ma.extras.union1d"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.unique": {
  "data": {
   "shadows": "numpy.ma.extras.unique"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.zeros": {
  "data": {
   "shadows": "numpy.ma.core.zeros"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.ma.tests.test_mrecords.MaskedRecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.MaskedRecords"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "float",
    "int",
    "list",
    "numpy.ma.array",
    "object",
    "zip"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_byview": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "numpy.ma.testutils.assert_equal_records",
    "numpy.recarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_exotic_formats": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.ma.masked",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.testutils.assert_equal",
    "numpy.ma.testutils.assert_equal_records"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_filled": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.ma.array",
    "numpy.ma.mrecords.fromarrays",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_get": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "numpy.array",
    "numpy.ma.masked",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.nomask",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "numpy.ma.testutils.assert_equal_records"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_hardmask": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.ma.make_mask",
    "numpy.ma.make_mask_none",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.nomask",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "numpy.ma.testutils.assert_equal_records"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_pickling": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.tests.test_mrecords.pickle",
    "numpy.ma.testutils.assert_equal",
    "numpy.ma.testutils.assert_equal_records"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_elements": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.ma.masked",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_fields": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.array",
    "numpy.ma.array",
    "numpy.ma.getdata",
    "numpy.ma.getmaskarray",
    "numpy.ma.masked",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_fields_mask": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.arange",
    "numpy.ma.masked",
    "numpy.ma.mrecords.fromarrays",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.testutils.assert_equal",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.ma.getmaskarray",
    "numpy.ma.masked",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.nomask",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask_fromarray": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask_fromfields": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_setslices_hardmask": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "NotImplementedError",
    "TypeError",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_tolist": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.ma.array",
    "numpy.ma.mrecords.fromarrays",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_withnames": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "float",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.core.records.fromarrays",
    "numpy.ma.array",
    "numpy.ma.mrecords.fromarrays",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_addfield": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.ma.mrecords.addfield",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromarrays": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "float",
    "getattr",
    "int",
    "numpy.ma.array",
    "numpy.ma.mrecords.fromarrays",
    "numpy.ma.testutils.assert_equal",
    "numpy.ma.testutils.assert_equal_records",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromrecords": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "float",
    "getattr",
    "int",
    "numpy.core.records.fromrecords",
    "numpy.ma.mrecords.fromrecords",
    "numpy.ma.testutils.assert_equal",
    "numpy.ma.testutils.assert_equal_records",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromrecords_wmask": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "numpy.ma.mrecords.fromrecords",
    "numpy.ma.testutils.assert_equal",
    "numpy.ma.testutils.assert_equal_records"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromtextfile": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.ma.mrecords.fromtextfile",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.temppath",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestView.setup": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.ma.mrecords.fromarrays",
    "numpy.random.rand",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_by_itself": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal_records"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_flexible_type": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.dtype",
    "numpy.ma.masked",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "numpy.ma.testutils.assert_equal_records"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_simple_dtype": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked",
    "numpy.ma.testutils.assert_",
    "numpy.ma.testutils.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.addfield": {
  "data": {
   "shadows": "numpy.ma.mrecords.addfield"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.assert_": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.assert_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.assert_equal_records": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_equal_records"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.fromarrays": {
  "data": {
   "shadows": "numpy.ma.mrecords.fromarrays"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.fromrecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.fromrecords"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.fromtextfile": {
  "data": {
   "shadows": "numpy.ma.mrecords.fromtextfile"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.masked": {
  "data": {
   "shadows": "numpy.ma.masked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.mrecarray": {
  "data": {
   "shadows": "numpy.ma.mrecords.mrecarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.nomask": {
  "data": {
   "shadows": "numpy.ma.nomask"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.recarray": {
  "data": {
   "shadows": "numpy.recarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.recfromarrays": {
  "data": {
   "shadows": "numpy.core.records.fromarrays"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.recfromrecords": {
  "data": {
   "shadows": "numpy.core.records.fromrecords"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.temppath": {
  "data": {
   "shadows": "numpy.testing.temppath"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.test_record_array_with_object_field": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "int",
    "numpy.ma.masked_array",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.pi",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.ma.tests.test_old_ma.MaskType": {
  "data": {
   "shadows": "numpy.ma.MaskType"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.MaskedArray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.setup": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_clip": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_cumprod": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_cumsum": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_ptp": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "numpy.float_",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_swapaxes": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_trace": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "numpy.ma.sum",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestArrayMethods.test_varstd": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.sqrt",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_old_ma.TestMa.setup": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ma.array",
    "numpy.ma.tests.test_old_ma.pi",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAPI": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "dir",
    "numpy.ma.MaskedArray",
    "numpy.ndarray",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAddSumProd": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "len",
    "numpy.add.accumulate",
    "numpy.add.reduce",
    "numpy.concatenate",
    "numpy.ma.add.accumulate",
    "numpy.ma.add.reduce",
    "numpy.ma.array",
    "numpy.ma.concatenate",
    "numpy.ma.filled",
    "numpy.ma.product",
    "numpy.ma.sum",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.product",
    "numpy.sum",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testArithmetic": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abs",
    "numpy.add",
    "numpy.divide",
    "numpy.errstate",
    "numpy.ma.add",
    "numpy.ma.array",
    "numpy.ma.divide",
    "numpy.ma.masked_array",
    "numpy.ma.multiply",
    "numpy.ma.subtract",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.multiply",
    "numpy.subtract",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testArrayAttributes": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testArrayMethods": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAverage1": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.ma.average",
    "numpy.ma.masked",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testAverage2": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "float",
    "numpy.add.reduce",
    "numpy.arange",
    "numpy.ma.allclose",
    "numpy.ma.arange",
    "numpy.ma.array",
    "numpy.ma.average",
    "numpy.ma.count",
    "numpy.ma.masked",
    "numpy.ma.masked_array",
    "numpy.ma.ones",
    "numpy.ma.shape",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.ma.zeros",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testBasic1d": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "functools.reduce",
    "len",
    "numpy.ma.count",
    "numpy.ma.filled",
    "numpy.ma.isMaskedArray",
    "numpy.ma.shape",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testBasic2d": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "functools.reduce",
    "len",
    "numpy.ma.count",
    "numpy.ma.filled",
    "numpy.ma.isMaskedArray",
    "numpy.ma.shape",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testCI": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.ma.MaskType",
    "numpy.ma.allequal",
    "numpy.ma.array",
    "numpy.ma.getmask",
    "numpy.ma.masked",
    "numpy.ma.masked_array",
    "numpy.ma.masked_values",
    "numpy.ma.sort",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.sort",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "object",
    "repr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testCopySize": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.allequal",
    "numpy.ma.arange",
    "numpy.ma.array",
    "numpy.ma.concatenate",
    "numpy.ma.filled",
    "numpy.ma.getmask",
    "numpy.ma.make_mask",
    "numpy.ma.masked",
    "numpy.ma.repeat",
    "numpy.ma.resize",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testInplace": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.ma.arange",
    "numpy.ma.masked",
    "numpy.ma.ones",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMaPut": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "numpy.ma.all",
    "numpy.ma.put",
    "numpy.ma.take",
    "numpy.nonzero",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMasked": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "numpy.ma.arange",
    "numpy.ma.filled",
    "numpy.ma.masked",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMinMax": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.ma.maximum.reduce",
    "numpy.ma.minimum.reduce",
    "numpy.ma.ravel",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.ravel",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMinMax2": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "numpy.ma.arange",
    "numpy.ma.greater",
    "numpy.ma.less",
    "numpy.ma.masked",
    "numpy.ma.maximum",
    "numpy.ma.maximum.reduce",
    "numpy.ma.minimum",
    "numpy.ma.minimum.reduce",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.ma.where",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testMixedArithmetic": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.ma.MaskedArray",
    "numpy.ma.array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testOddFeatures": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.ma.MaskType",
    "numpy.ma.arange",
    "numpy.ma.array",
    "numpy.ma.choose",
    "numpy.ma.conjugate",
    "numpy.ma.count",
    "numpy.ma.equal",
    "numpy.ma.getmask",
    "numpy.ma.greater",
    "numpy.ma.greater_equal",
    "numpy.ma.less",
    "numpy.ma.less_equal",
    "numpy.ma.masked",
    "numpy.ma.masked_equal",
    "numpy.ma.masked_greater",
    "numpy.ma.masked_greater_equal",
    "numpy.ma.masked_inside",
    "numpy.ma.masked_less",
    "numpy.ma.masked_less_equal",
    "numpy.ma.masked_not_equal",
    "numpy.ma.masked_outside",
    "numpy.ma.masked_where",
    "numpy.ma.nomask",
    "numpy.ma.not_equal",
    "numpy.ma.ones",
    "numpy.ma.shape",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.ma.where",
    "numpy.ma.zeros",
    "numpy.testing.assert_",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testPickle": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "numpy.ma.arange",
    "numpy.ma.masked",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.ma.tests.test_old_ma.pickle",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testPut": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.ma.arange",
    "numpy.ma.array",
    "numpy.ma.make_mask",
    "numpy.ma.masked",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testPut2": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.ma.arange",
    "numpy.ma.array",
    "numpy.ma.masked",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testScalarArithmetic": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.ma.array",
    "numpy.ma.masked_print_option",
    "numpy.ma.maximum",
    "numpy.ma.minimum",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testSingleElementSubscript": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testTakeTransposeInnerOuter": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.inner",
    "numpy.ma.arange",
    "numpy.ma.array",
    "numpy.ma.filled",
    "numpy.ma.inner",
    "numpy.ma.masked",
    "numpy.ma.outer",
    "numpy.ma.take",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.ma.transpose",
    "numpy.outer",
    "numpy.take",
    "numpy.testing.assert_",
    "numpy.transpose",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testToPython": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "float",
    "int",
    "numpy.ma.array",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_testUfuncs1": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "abs",
    "numpy.absolute",
    "numpy.arccos",
    "numpy.arcsin",
    "numpy.arctan",
    "numpy.arctan2",
    "numpy.concatenate",
    "numpy.conjugate",
    "numpy.cos",
    "numpy.cosh",
    "numpy.equal",
    "numpy.errstate",
    "numpy.exp",
    "numpy.greater",
    "numpy.greater_equal",
    "numpy.less",
    "numpy.less_equal",
    "numpy.log",
    "numpy.log10",
    "numpy.ma.absolute",
    "numpy.ma.arccos",
    "numpy.ma.arcsin",
    "numpy.ma.arctan",
    "numpy.ma.arctan2",
    "numpy.ma.concatenate",
    "numpy.ma.conjugate",
    "numpy.ma.cos",
    "numpy.ma.cosh",
    "numpy.ma.equal",
    "numpy.ma.exp",
    "numpy.ma.greater",
    "numpy.ma.greater_equal",
    "numpy.ma.less",
    "numpy.ma.less_equal",
    "numpy.ma.log",
    "numpy.ma.log10",
    "numpy.ma.not_equal",
    "numpy.ma.sin",
    "numpy.ma.sinh",
    "numpy.ma.sqrt",
    "numpy.ma.tan",
    "numpy.ma.tanh",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.not_equal",
    "numpy.sin",
    "numpy.sinh",
    "numpy.sqrt",
    "numpy.tan",
    "numpy.tanh",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestMa.test_xtestCount": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "isinstance",
    "numpy.intp",
    "numpy.ma.array",
    "numpy.ma.count",
    "numpy.ma.getmask",
    "numpy.ma.nomask",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.setup": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.ma.tests.test_old_ma.pi"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_minmax": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "numpy.ma.arange",
    "numpy.ma.masked_where",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_nonzero": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.ma.nonzero",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_reduce": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "numpy.ma.alltrue",
    "numpy.ma.product",
    "numpy.ma.sometrue",
    "numpy.ma.sum",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.TestUfuncs.test_testUfuncRegression": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "mf",
    "numpy.core.fromnumeric",
    "numpy.core.umath",
    "numpy.errstate",
    "numpy.ma",
    "numpy.ma.tests.test_old_ma.eq",
    "numpy.ma.tests.test_old_ma.eqmask",
    "numpy.seterr",
    "numpy.testing.assert_",
    "uf"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.absolute": {
  "data": {
   "shadows": "numpy.ma.absolute"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.add": {
  "data": {
   "shadows": "numpy.ma.add"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.all": {
  "data": {
   "shadows": "numpy.ma.all"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.allclose": {
  "data": {
   "shadows": "numpy.ma.allclose"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.allequal": {
  "data": {
   "shadows": "numpy.ma.allequal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.alltrue": {
  "data": {
   "shadows": "numpy.ma.alltrue"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.arange": {
  "data": {
   "shadows": "numpy.ma.arange"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.arccos": {
  "data": {
   "shadows": "numpy.ma.arccos"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.arcsin": {
  "data": {
   "shadows": "numpy.ma.arcsin"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.arctan": {
  "data": {
   "shadows": "numpy.ma.arctan"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.arctan2": {
  "data": {
   "shadows": "numpy.ma.arctan2"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.array": {
  "data": {
   "shadows": "numpy.ma.array"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.assert_array_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.average": {
  "data": {
   "shadows": "numpy.ma.average"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.choose": {
  "data": {
   "shadows": "numpy.ma.choose"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.concatenate": {
  "data": {
   "shadows": "numpy.ma.concatenate"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.conjugate": {
  "data": {
   "shadows": "numpy.ma.conjugate"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.cos": {
  "data": {
   "shadows": "numpy.ma.cos"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.cosh": {
  "data": {
   "shadows": "numpy.ma.cosh"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.count": {
  "data": {
   "shadows": "numpy.ma.count"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.divide": {
  "data": {
   "shadows": "numpy.ma.divide"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.eq": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.ma.allclose",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.eqmask": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_old_ma.equal": {
  "data": {
   "shadows": "numpy.ma.equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.exp": {
  "data": {
   "shadows": "numpy.ma.exp"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.filled": {
  "data": {
   "shadows": "numpy.ma.filled"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.fromnumeric": {
  "data": {
   "shadows": "numpy.core.fromnumeric"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.getmask": {
  "data": {
   "shadows": "numpy.ma.getmask"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.greater": {
  "data": {
   "shadows": "numpy.ma.greater"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.greater_equal": {
  "data": {
   "shadows": "numpy.ma.greater_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.inner": {
  "data": {
   "shadows": "numpy.ma.inner"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.isMaskedArray": {
  "data": {
   "shadows": "numpy.ma.isMaskedArray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.less": {
  "data": {
   "shadows": "numpy.ma.less"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.less_equal": {
  "data": {
   "shadows": "numpy.ma.less_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.log": {
  "data": {
   "shadows": "numpy.ma.log"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.log10": {
  "data": {
   "shadows": "numpy.ma.log10"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.make_mask": {
  "data": {
   "shadows": "numpy.ma.make_mask"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked": {
  "data": {
   "shadows": "numpy.ma.masked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_array": {
  "data": {
   "shadows": "numpy.ma.masked_array"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_equal": {
  "data": {
   "shadows": "numpy.ma.masked_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_greater": {
  "data": {
   "shadows": "numpy.ma.masked_greater"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_greater_equal": {
  "data": {
   "shadows": "numpy.ma.masked_greater_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_inside": {
  "data": {
   "shadows": "numpy.ma.masked_inside"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_less": {
  "data": {
   "shadows": "numpy.ma.masked_less"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_less_equal": {
  "data": {
   "shadows": "numpy.ma.masked_less_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_not_equal": {
  "data": {
   "shadows": "numpy.ma.masked_not_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_outside": {
  "data": {
   "shadows": "numpy.ma.masked_outside"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_print_option": {
  "data": {
   "shadows": "numpy.ma.masked_print_option"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_values": {
  "data": {
   "shadows": "numpy.ma.masked_values"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.masked_where": {
  "data": {
   "shadows": "numpy.ma.masked_where"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.maximum": {
  "data": {
   "shadows": "numpy.ma.maximum"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.minimum": {
  "data": {
   "shadows": "numpy.ma.minimum"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.multiply": {
  "data": {
   "shadows": "numpy.ma.multiply"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.nomask": {
  "data": {
   "shadows": "numpy.ma.nomask"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.nonzero": {
  "data": {
   "shadows": "numpy.ma.nonzero"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.not_equal": {
  "data": {
   "shadows": "numpy.ma.not_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.ones": {
  "data": {
   "shadows": "numpy.ma.ones"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.outer": {
  "data": {
   "shadows": "numpy.ma.outer"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.pi": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_old_ma.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.product": {
  "data": {
   "shadows": "numpy.ma.product"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.put": {
  "data": {
   "shadows": "numpy.ma.put"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.ravel": {
  "data": {
   "shadows": "numpy.ma.ravel"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.repeat": {
  "data": {
   "shadows": "numpy.ma.repeat"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.resize": {
  "data": {
   "shadows": "numpy.ma.resize"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.shape": {
  "data": {
   "shadows": "numpy.ma.shape"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.sin": {
  "data": {
   "shadows": "numpy.ma.sin"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.sinh": {
  "data": {
   "shadows": "numpy.ma.sinh"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.sometrue": {
  "data": {
   "shadows": "numpy.ma.sometrue"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.sort": {
  "data": {
   "shadows": "numpy.ma.sort"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.sqrt": {
  "data": {
   "shadows": "numpy.ma.sqrt"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.subtract": {
  "data": {
   "shadows": "numpy.ma.subtract"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.sum": {
  "data": {
   "shadows": "numpy.ma.sum"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.take": {
  "data": {
   "shadows": "numpy.ma.take"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.tan": {
  "data": {
   "shadows": "numpy.ma.tan"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.tanh": {
  "data": {
   "shadows": "numpy.ma.tanh"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.transpose": {
  "data": {
   "shadows": "numpy.ma.transpose"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.umath": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.where": {
  "data": {
   "shadows": "numpy.ma.where"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_old_ma.zeros": {
  "data": {
   "shadows": "numpy.ma.zeros"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.ma.tests.test_regression.MaskType": {
  "data": {
   "shadows": "numpy.ma.MaskType"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_atleast_2d": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.ma.masked_array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_ddof_corrcoef": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.array",
    "numpy.ma.corrcoef",
    "numpy.ma.masked_equal",
    "numpy.testing.assert_allclose",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_create": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.ma.masked_array",
    "numpy.ma.nonzero",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_multiply": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.ma.masked",
    "numpy.ma.zeros",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_repeat": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_repr_unicode": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.ma.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_mem_masked_where": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.ma.MaskType",
    "numpy.ma.masked_where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_set_fill_value_unicode_py3": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.ma.masked_array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_var_sets_maskedarray_scalar": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.ma.array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.masked_where": {
  "data": {
   "shadows": "numpy.ma.masked_where"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.ma.tests.test_subclassing.MMatrix",
    "numpy.ma.tests.test_subclassing.MSubArray",
    "numpy.ma.tests.test_subclassing.SubArray",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator.__getitem__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator.__iter__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator.__next__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "next",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.CSAIterator.__setitem__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.SubArray"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.__array_wrap__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.ComplicatedSubArray",
    "numpy.multiply",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.__getitem__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.tests.test_subclassing.ComplicatedSubArray",
    "numpy.ndarray",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.__repr__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.__setitem__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.ComplicatedSubArray",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.__str__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.SubArray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray._validate_input": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ma.tests.test_subclassing.ComplicatedSubArray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.ComplicatedSubArray.flat": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MMatrix": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.ma.core.MaskedArray",
    "numpy.matrix",
    "property"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.MMatrix.__array_finalize__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.ma.core.MaskedArray.__array_finalize__",
    "numpy.matrix.__array_finalize__"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MMatrix.__new__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.ma.core.MaskedArray.__new__",
    "numpy.ma.core.nomask",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MMatrix._get_series": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.ma.core.MaskedArray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MSubArray": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.ma.core.MaskedArray",
    "numpy.ma.tests.test_subclassing.SubArray",
    "property"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.MSubArray.__new__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.ma.core.MaskedArray.__new__",
    "numpy.ma.core.nomask",
    "numpy.ma.tests.test_subclassing.SubArray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MSubArray._get_series": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.ma.core.MaskedArray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.core.MaskedArray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.SubArray": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__add__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.SubArray",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__array_finalize__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "callable",
    "getattr",
    "numpy.ma.tests.test_subclassing.SubArray",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__iadd__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.SubArray",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__new__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubMaskedArray": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.ma.core.MaskedArray"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.SubMaskedArray.__new__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.SubMaskedArray",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.setup": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.tests.test_subclassing.mmatrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_attributepropagation": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.arange",
    "numpy.ma.core.array",
    "numpy.ma.core.masked_array",
    "numpy.ma.tests.test_subclassing.MSubArray",
    "numpy.ma.tests.test_subclassing.SubArray",
    "numpy.ma.tests.test_subclassing.msubarray",
    "numpy.ma.tests.test_subclassing.subarray",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_data_subclassing": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.masked_array",
    "numpy.ma.tests.test_subclassing.SubArray",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_binary_operations": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.core.add",
    "numpy.ma.core.add.outer",
    "numpy.ma.core.hypot",
    "numpy.ma.tests.test_subclassing.mmatrix",
    "numpy.ma.testutils.assert_equal",
    "numpy.matrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_binary_operations2": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.core.divide",
    "numpy.ma.core.masked_array",
    "numpy.ma.tests.test_subclassing.mmatrix",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_unary_operations": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "isinstance",
    "numpy.errstate",
    "numpy.log",
    "numpy.ma.core.log",
    "numpy.ma.tests.test_subclassing.mmatrix",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_maskedarray_subclassing": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "isinstance",
    "numpy.matrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_pure_subclass_info_preservation": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.SubMaskedArray",
    "numpy.subtract",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclass_items": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.arange",
    "numpy.ma.core.masked",
    "numpy.ma.core.masked_array",
    "numpy.ma.tests.test_subclassing.ComplicatedSubArray",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclass_nomask_items": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.ma.core.masked_array",
    "numpy.ma.tests.test_subclassing.ComplicatedSubArray",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclass_repr": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.core.masked_array",
    "numpy.ma.tests.test_subclassing.SubArray",
    "numpy.ma.tests.test_subclassing.assert_startswith",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclass_str": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.ma.core.masked_array",
    "numpy.ma.core.masked_print_option",
    "numpy.ma.tests.test_subclassing.ComplicatedSubArray",
    "numpy.ma.tests.test_subclassing.SubArray",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclasspreservation": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.asanyarray",
    "numpy.ma.core.asarray",
    "numpy.ma.core.masked_array",
    "numpy.ma.tests.test_subclassing.MSubArray",
    "numpy.ma.testutils.assert_equal",
    "numpy.testing.assert_",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.add": {
  "data": {
   "shadows": "numpy.ma.core.add"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.arange": {
  "data": {
   "shadows": "numpy.ma.core.arange"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.array": {
  "data": {
   "shadows": "numpy.ma.core.array"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.asanyarray": {
  "data": {
   "shadows": "numpy.ma.core.asanyarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.asarray": {
  "data": {
   "shadows": "numpy.ma.core.asarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.assert_equal": {
  "data": {
   "shadows": "numpy.ma.testutils.assert_equal"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.assert_startswith": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "len",
    "numpy.ma.testutils.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.divide": {
  "data": {
   "shadows": "numpy.ma.core.divide"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.hypot": {
  "data": {
   "shadows": "numpy.ma.core.hypot"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.log": {
  "data": {
   "shadows": "numpy.ma.core.log"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.masked": {
  "data": {
   "shadows": "numpy.ma.core.masked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.masked_array": {
  "data": {
   "shadows": "numpy.ma.core.masked_array"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.mmatrix": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.msubarray": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.nomask": {
  "data": {
   "shadows": "numpy.ma.core.nomask"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.subarray": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "eval",
    "numpy.ma.timer_comparison.cur",
    "numpy.ma.timer_comparison.func",
    "numpy.ma.timer_comparison.setup_base",
    "numpy.ma.timer_comparison.setup_cur",
    "numpy.ma.timer_comparison.timeit",
    "numpy.pi",
    "numpy.seterr",
    "numpy.sort",
    "print",
    "range"
   ]
  },
  "type": "module"
 },
 "numpy.ma.timer_comparison.ModuleTester": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.ma.timer_comparison.ModuleTester.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "AttributeError",
    "id"
   ]
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.assert_array_compare": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "comparison",
    "isinstance",
    "len",
    "numpy.float_",
    "numpy.isnan",
    "numpy.ndarray",
    "numpy.testing.build_err_msg"
   ]
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.assert_array_equal": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_0": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ma.timer_comparison.pi"
   ]
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_1": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "functools.reduce",
    "len",
    "numpy.array",
    "numpy.ma.timer_comparison.pi",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_2": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "object",
    "repr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_3": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_4": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.inner",
    "numpy.outer",
    "numpy.take",
    "numpy.transpose",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_5": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.float_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_6": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.float_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_7": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "mf",
    "numpy.core.fromnumeric",
    "numpy.ma.timer_comparison.pi",
    "uf"
   ]
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_99": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.add.reduce",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.ModuleTester.test_A": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "numpy.ma.timer_comparison.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.build_err_msg": {
  "data": {
   "shadows": "numpy.testing.build_err_msg"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.cur": {
  "data": {
   "lineno": 437
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.float_": {
  "data": {
   "shadows": "numpy.float_"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.fromnumeric": {
  "data": {
   "shadows": "numpy.core.fromnumeric"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.func": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.pi": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "numpy.ma.timer_comparison.setup_base": {
  "data": {
   "lineno": 427
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison.setup_cur": {
  "data": {
   "lineno": 430
  },
  "type": "constant"
 },
 "numpy.ma.timer_comparison.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "numpy.ma.version": {
  "data": {
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.ma.version.release",
    "numpy.ma.version.revision",
    "numpy.ma.version.version"
   ]
  },
  "type": "module"
 },
 "numpy.ma.version.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.ma.version.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.ma.version.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.ma.version.release": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.ma.version.revision": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.ma.version.version": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.matlib": {
  "data": {
   "symbols_in_volume": [
    "numpy.__all__",
    "numpy.__version__",
    "numpy.matlib.__all__"
   ]
  },
  "type": "module"
 },
 "numpy.matlib.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.matlib.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.matlib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matlib.asmatrix": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.asmatrix"
  },
  "type": "import"
 },
 "numpy.matlib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matlib.empty": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.matrixlib.defmatrix.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.eye": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "float",
    "numpy.eye",
    "numpy.matrixlib.defmatrix.asmatrix"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.identity": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "array",
    "numpy.matlib.empty"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.matrix": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.matrix"
  },
  "type": "import"
 },
 "numpy.matlib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matlib.ones": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.matrixlib.defmatrix.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matlib.rand": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "isinstance",
    "numpy.matrixlib.defmatrix.asmatrix",
    "numpy.random.rand",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.randn": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "isinstance",
    "numpy.matrixlib.defmatrix.asmatrix",
    "numpy.random.randn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.repmat": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "asanyarray"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.zeros": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.matrixlib.defmatrix.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing._numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.matrixlib._numpy_tester": {
  "data": {
   "shadows": "numpy.testing._numpy_tester"
  },
  "type": "import"
 },
 "numpy.matrixlib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.bench": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.matrixlib.defmatrix": {
  "data": {
   "symbols_in_volume": [
    "numpy.matrixlib.defmatrix.asmatrix"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.defmatrix.N": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.matrixlib.defmatrix._convert_from_string": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "map",
    "numpy.matrixlib.defmatrix.ast"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix._from_string": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "KeyError",
    "numpy.core.numeric.concatenate",
    "str.split"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.asanyarray": {
  "data": {
   "shadows": "numpy.core.numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.asmatrix": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.matrixlib.defmatrix.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.binary_repr": {
  "data": {
   "shadows": "numpy.core.numeric.binary_repr"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.bmat": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.core.numeric.concatenate",
    "numpy.core.numeric.ndarray",
    "numpy.matrixlib.defmatrix._from_string",
    "numpy.matrixlib.defmatrix.matrix",
    "numpy.matrixlib.defmatrix.sys",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.concatenate": {
  "data": {
   "shadows": "numpy.core.numeric.concatenate"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.func": {
  "data": {
   "shadows": "numpy.dual.pinv"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.identity": {
  "data": {
   "shadows": "numpy.core.numeric.identity"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.isscalar": {
  "data": {
   "shadows": "numpy.core.numeric.isscalar"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.issubdtype": {
  "data": {
   "shadows": "numpy.core.numerictypes.issubdtype"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.mat": {
  "data": {
   "lineno": 1197
  },
  "type": "constant"
 },
 "numpy.matrixlib.defmatrix.matrix": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray",
    "property"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.defmatrix.matrix.__array_finalize__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.matrixlib.defmatrix.matrix",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__getitem__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "len",
    "numpy.core.numeric.isscalar",
    "numpy.core.numeric.ndarray",
    "numpy.core.numeric.ndarray.__getitem__"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__imul__": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__ipow__": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__mul__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "NotImplemented",
    "hasattr",
    "isinstance",
    "list",
    "numpy.core.numeric.dot",
    "numpy.core.numeric.isscalar",
    "numpy.core.numeric.ndarray",
    "numpy.matrixlib.defmatrix.asmatrix",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__new__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.core.numeric.array",
    "numpy.core.numeric.dtype",
    "numpy.core.numeric.ndarray",
    "numpy.core.numeric.ndarray.__new__",
    "numpy.matrixlib.defmatrix._convert_from_string",
    "numpy.matrixlib.defmatrix.matrix",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__pow__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.matrixlib.defmatrix.matrix_power"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__rmul__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.core.numeric.dot"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.__rpow__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix._align": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix._collapse": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.all": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.all"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.any": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.any"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.argmax": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.argmax"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.argmin": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.argmin"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.flatten": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.flatten"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.getA": {
  "data": {
   "lineno": 927
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.getA1": {
  "data": {
   "lineno": 956
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.getH": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "issubclass",
    "numpy.core.numeric.complexfloating"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.getI": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "numpy.core.numeric",
    "numpy.dual.pinv",
    "numpy.matrixlib.defmatrix.asmatrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.getT": {
  "data": {
   "lineno": 1023
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.max": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.max"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.mean": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.mean"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.min": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.min"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.prod": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.prod"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.ptp": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.ptp"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.ravel": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.ravel"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.squeeze": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.squeeze"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.std": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.std"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.sum": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.sum"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.tolist": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix.var": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "numpy.core.numeric.ndarray.var"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.matrix_power": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.binary_repr",
    "numpy.core.numeric.dot",
    "numpy.core.numeric.identity",
    "numpy.core.numeric.integer",
    "numpy.core.numerictypes.issubdtype",
    "numpy.linalg.inv",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.defmatrix.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.defmatrix.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.matrixlib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.matrixlib.setup.config",
    "numpy.matrixlib.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup.config": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.matrixlib.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.matrixlib.test": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.matrixlib.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.matrixlib.tests.test_defmatrix": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_basic": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.dot",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.matrix",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_notimplemented": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "TypeError",
    "numpy.matrix",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_pow": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.matrix",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_scalar_type_pow": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.int8",
    "numpy.matrix",
    "numpy.testing.assert_array_almost_equal",
    "numpy.uint8",
    "scalar_t"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCasting": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCasting.test_basic": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.complex128",
    "numpy.float64",
    "numpy.matrix",
    "numpy.ones",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_basic": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.bmat",
    "numpy.matrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_bmat_nondefault_str": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "numpy.all",
    "numpy.array",
    "numpy.bmat",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_exceptions": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "numpy.matrix",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestIndexing": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestIndexing.test_basic": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "float",
    "numpy.asmatrix",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestMatrixReturn": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestMatrixReturn.test_instance_methods": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "dir",
    "f",
    "getattr",
    "isinstance",
    "numpy.array",
    "numpy.matrix",
    "numpy.matrixlib.tests.test_defmatrix.collections",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.matrix",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_array_from_matrix_list": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_array_to_list": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_boolean_indexing": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.asmatrix",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_dimesions": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_fancy_indexing": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "isinstance",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_list_indexing": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asmatrix",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_matrix_element": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_row_column_indexing": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "numpy.asmatrix",
    "numpy.eye",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_scalar_indexing": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "float",
    "numpy.asmatrix",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower.test_list": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "numpy.matrixlib.defmatrix.matrix_power",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower.test_returntype": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.matrix",
    "numpy.matrixlib.defmatrix.matrix_power",
    "numpy.matrixlib.mat",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_asmatrix": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asmatrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_basic": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.linalg.inv",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_comparisons": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "abs",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.matrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_make_bool_matrix_from_str": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_max": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.max",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_min": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.min",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_noaxis": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_pinv": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.matrix",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_prod": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.prod",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_ptp": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_repr": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.testing.assert_",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_sum": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_var": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.matrix",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.matrix",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_array_memory_sharing": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.may_share_memory",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_matrix_memory_sharing": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.may_share_memory",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_matrix_ravel_order": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_member_flatten": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_member_ravel": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_numpy_ravel": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.ravel",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_numpy_ravel_order": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.matrix",
    "numpy.ravel",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestShape.test_shape": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.asmatrix": {
  "data": {
   "shadows": "numpy.asmatrix"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.bmat": {
  "data": {
   "shadows": "numpy.bmat"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.mat": {
  "data": {
   "shadows": "numpy.matrixlib.mat"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.matrix_power": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.matrix_power"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView.test_keywords": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.dtype",
    "numpy.int8",
    "numpy.matrix",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView.test_type": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.matrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_multiarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.tests.test_numeric.TestDot": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_numeric.TestDot.test_matscalar": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "complex",
    "numpy.matrix",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_numeric.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.test_diagonal": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.diagonal",
    "numpy.matrix",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_kron_matrix": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.kron",
    "numpy.matrix",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_multiply_by_1d_vector": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_multiply_by_1d_vector.mul": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.mat",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_properties": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "float",
    "numpy.matrix",
    "numpy.ndarray",
    "numpy.testing.assert_",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_std_argmax": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.asmatrix",
    "numpy.random.uniform",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.msg": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "numpy.numarray": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "numpy.object": {
  "data": {
   "shadows": "__builtin__.object"
  },
  "type": "import"
 },
 "numpy.oldnumeric": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "numpy.pkgload": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "PackageLoader",
    "loader"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing._numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial._numpy_tester": {
  "data": {
   "shadows": "numpy.testing._numpy_tester"
  },
  "type": "import"
 },
 "numpy.polynomial._polybase": {
  "data": {},
  "type": "module"
 },
 "numpy.polynomial._polybase.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "numpy.polynomial._polybase.ABCPolyBase": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__add__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__call__": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__div__": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__divmod__": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented",
    "ZeroDivisionError"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__eq__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__floordiv__": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__getstate__": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__iter__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__len__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__mod__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__mul__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__ne__": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__neg__": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__pos__": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__pow__": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__radd__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rdiv__": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rdivmod__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented",
    "ZeroDivisionError"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__repr__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "format",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rfloordiv__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rmod__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rmul__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rsub__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__rtruediv__": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__setstate__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__str__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "format",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__sub__": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "Exception",
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.__truediv__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "numbers.Number",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._add": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._der": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._div": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._fit": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._fromroots": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._get_coefficients": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.all",
    "numpy.polynomial._polybase.ABCPolyBase"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._int": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._line": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._mul": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._pow": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._roots": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._sub": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase._val": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.basis": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "cls.domain",
    "cls.window",
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.cast": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.domain",
    "cls.window"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.convert": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.copy": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.cutdeg": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.degree": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.deriv": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "self.__class__",
    "self._der",
    "self.coef",
    "self.domain",
    "self.mapparms",
    "self.window"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.domain": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.fit": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "len",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.fromroots": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._fromroots",
    "cls.domain",
    "cls.window",
    "len",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.has_samecoef": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.has_samedomain": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.has_sametype": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.has_samewindow": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.identity": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._line",
    "cls.domain",
    "cls.window"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.integ": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "self.__class__",
    "self._int",
    "self.coef",
    "self.domain",
    "self.mapparms",
    "self.window"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.linspace": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "numpy.linspace",
    "self",
    "self.domain"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.mapparms": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "self.domain",
    "self.window"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.nickname": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.roots": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "self._roots",
    "self.coef",
    "self.domain",
    "self.window"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.trim": {
  "data": {
   "lineno": 495
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.truncate": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.ABCPolyBase.window": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial._polybase.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "numpy.polynomial._polybase.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial._polybase.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial._polybase.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "numpy.polynomial._polybase.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "numpy.polynomial._polybase.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial._polybase.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial._polybase.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial._polybase.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.bench": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.chebyshev.Chebyshev": {
  "data": {
   "lineno": 2109,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.polynomial.chebyshev.chebadd",
    "numpy.polynomial.chebyshev.chebder",
    "numpy.polynomial.chebyshev.chebdiv",
    "numpy.polynomial.chebyshev.chebdomain",
    "numpy.polynomial.chebyshev.chebfit",
    "numpy.polynomial.chebyshev.chebfromroots",
    "numpy.polynomial.chebyshev.chebint",
    "numpy.polynomial.chebyshev.chebline",
    "numpy.polynomial.chebyshev.chebmul",
    "numpy.polynomial.chebyshev.chebpow",
    "numpy.polynomial.chebyshev.chebroots",
    "numpy.polynomial.chebyshev.chebsub",
    "numpy.polynomial.chebyshev.chebval",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.chebyshev.Chebyshev.interpolate": {
  "data": {
   "lineno": 2145,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "func",
    "numpy.polynomial.chebyshev.chebinterpolate"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.__all__": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev._cseries_to_zseries": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_der": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.polynomial.chebyshev._zseries_div"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_div": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_int": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.polynomial.chebyshev._zseries_mul"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_mul": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.convolve"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev._zseries_to_cseries": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.cheb2poly": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "len",
    "polyadd",
    "polymulx",
    "polysub",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebadd": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebcompanion": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebder": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.double",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebdiv": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "len",
    "numpy.polynomial.chebyshev._cseries_to_zseries",
    "numpy.polynomial.chebyshev._zseries_div",
    "numpy.polynomial.chebyshev._zseries_to_cseries"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebdomain": {
  "data": {
   "lineno": 447
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev.chebfit": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "issubclass",
    "len",
    "numpy.asarray",
    "numpy.complexfloating",
    "numpy.finfo",
    "numpy.linalg.lstsq",
    "numpy.polynomial.chebyshev.chebvander",
    "numpy.polynomial.chebyshev.warnings",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.square",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebfromroots": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "divmod",
    "len",
    "numpy.ones",
    "numpy.polynomial.chebyshev.chebline",
    "numpy.polynomial.chebyshev.chebmul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebgauss": {
  "data": {
   "lineno": 1962,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.arange",
    "numpy.cos",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebgrid2d": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebgrid3d": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebint": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.double",
    "numpy.empty",
    "numpy.iterable",
    "numpy.moveaxis",
    "numpy.ndim",
    "numpy.polynomial.chebyshev.chebval",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebinterpolate": {
  "data": {
   "lineno": 1895,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "func",
    "numpy.asarray",
    "numpy.dot",
    "numpy.polynomial.chebyshev.chebpts1",
    "numpy.polynomial.chebyshev.chebvander"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebline": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebmul": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev._cseries_to_zseries",
    "numpy.polynomial.chebyshev._zseries_mul",
    "numpy.polynomial.chebyshev._zseries_to_cseries"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebmulx": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "len",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebone": {
  "data": {
   "lineno": 453
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev.chebpow": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.convolve",
    "numpy.polynomial.chebyshev._cseries_to_zseries",
    "numpy.polynomial.chebyshev._zseries_to_cseries",
    "pow",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebpts1": {
  "data": {
   "lineno": 2035,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebpts2": {
  "data": {
   "lineno": 2072,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebroots": {
  "data": {
   "lineno": 1839,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.linalg.eigvals",
    "numpy.polynomial.chebyshev.chebcompanion"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebsub": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebtrim": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev.chebval": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.double",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebval2d": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.chebyshev.chebval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebval3d": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.chebyshev.chebval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebvander": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebvander2d": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.chebyshev.chebvander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebvander3d": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.chebyshev.chebvander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebweight": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.chebx": {
  "data": {
   "lineno": 456
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev.chebzero": {
  "data": {
   "lineno": 450
  },
  "type": "constant"
 },
 "numpy.polynomial.chebyshev.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.poly2cheb": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.chebyshev.chebadd",
    "numpy.polynomial.chebyshev.chebmulx",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.chebyshev.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.chebyshev.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.hermite.Hermite": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.polynomial.hermite.hermadd",
    "numpy.polynomial.hermite.hermder",
    "numpy.polynomial.hermite.hermdiv",
    "numpy.polynomial.hermite.hermdomain",
    "numpy.polynomial.hermite.hermfit",
    "numpy.polynomial.hermite.hermfromroots",
    "numpy.polynomial.hermite.hermint",
    "numpy.polynomial.hermite.hermline",
    "numpy.polynomial.hermite.hermmul",
    "numpy.polynomial.hermite.hermpow",
    "numpy.polynomial.hermite.hermroots",
    "numpy.polynomial.hermite.hermsub",
    "numpy.polynomial.hermite.hermval",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.hermite.__all__": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite._normed_hermite_n": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "float",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.herm2poly": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "polyadd",
    "polymulx",
    "polysub",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermadd": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermcompanion": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.hstack",
    "numpy.multiply.accumulate",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermder": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.double",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermdiv": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "len",
    "numpy.empty",
    "numpy.polynomial.hermite.hermmul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermdomain": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.hermfit": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "issubclass",
    "len",
    "numpy.asarray",
    "numpy.complexfloating",
    "numpy.finfo",
    "numpy.linalg.lstsq",
    "numpy.polynomial.hermite.hermvander",
    "numpy.polynomial.hermite.warnings",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.square",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermfromroots": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "divmod",
    "len",
    "numpy.ones",
    "numpy.polynomial.hermite.hermline",
    "numpy.polynomial.hermite.hermmul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermgauss": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.abs",
    "numpy.array",
    "numpy.float64",
    "numpy.linalg.eigvalsh",
    "numpy.pi",
    "numpy.polynomial.hermite._normed_hermite_n",
    "numpy.polynomial.hermite.hermcompanion",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermgrid2d": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermgrid3d": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermint": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.double",
    "numpy.empty",
    "numpy.iterable",
    "numpy.moveaxis",
    "numpy.ndim",
    "numpy.polynomial.hermite.hermval",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermline": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermmul": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.hermite.hermadd",
    "numpy.polynomial.hermite.hermmulx",
    "numpy.polynomial.hermite.hermsub",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermmulx": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermone": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.hermpow": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.polynomial.hermite.hermmul",
    "pow",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermroots": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.linalg.eigvals",
    "numpy.polynomial.hermite.hermcompanion"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermsub": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermtrim": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.hermval": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.double",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermval2d": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.hermite.hermval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermval3d": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.hermite.hermval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermvander": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermvander2d": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.hermite.hermvander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermvander3d": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.hermite.hermvander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermweight": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.hermx": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.hermzero": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.poly2herm": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.hermite.hermadd",
    "numpy.polynomial.hermite.hermmulx",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.hermite_e.HermiteE": {
  "data": {
   "lineno": 1811,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.polynomial.hermite_e.hermeadd",
    "numpy.polynomial.hermite_e.hermeder",
    "numpy.polynomial.hermite_e.hermediv",
    "numpy.polynomial.hermite_e.hermedomain",
    "numpy.polynomial.hermite_e.hermefit",
    "numpy.polynomial.hermite_e.hermefromroots",
    "numpy.polynomial.hermite_e.hermeint",
    "numpy.polynomial.hermite_e.hermeline",
    "numpy.polynomial.hermite_e.hermemul",
    "numpy.polynomial.hermite_e.hermepow",
    "numpy.polynomial.hermite_e.hermeroots",
    "numpy.polynomial.hermite_e.hermesub",
    "numpy.polynomial.hermite_e.hermeval",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.hermite_e.__all__": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e._normed_hermite_e_n": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "float",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.herme2poly": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "len",
    "polyadd",
    "polymulx",
    "polysub",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeadd": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermecompanion": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.hstack",
    "numpy.multiply.accumulate",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeder": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.double",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermediv": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "len",
    "numpy.empty",
    "numpy.polynomial.hermite_e.hermemul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermedomain": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.hermefit": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "issubclass",
    "len",
    "numpy.asarray",
    "numpy.complexfloating",
    "numpy.finfo",
    "numpy.linalg.lstsq",
    "numpy.polynomial.hermite_e.hermevander",
    "numpy.polynomial.hermite_e.warnings",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.square",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermefromroots": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "divmod",
    "len",
    "numpy.ones",
    "numpy.polynomial.hermite_e.hermeline",
    "numpy.polynomial.hermite_e.hermemul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermegauss": {
  "data": {
   "lineno": 1713,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.abs",
    "numpy.array",
    "numpy.linalg.eigvalsh",
    "numpy.pi",
    "numpy.polynomial.hermite_e._normed_hermite_e_n",
    "numpy.polynomial.hermite_e.hermecompanion",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermegrid2d": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermeval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermegrid3d": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermeval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeint": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.double",
    "numpy.empty",
    "numpy.iterable",
    "numpy.moveaxis",
    "numpy.ndim",
    "numpy.polynomial.hermite_e.hermeval",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeline": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermemul": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.hermite_e.hermeadd",
    "numpy.polynomial.hermite_e.hermemulx",
    "numpy.polynomial.hermite_e.hermesub",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermemulx": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeone": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.hermepow": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.polynomial.hermite_e.hermemul",
    "pow",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeroots": {
  "data": {
   "lineno": 1611,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.linalg.eigvals",
    "numpy.polynomial.hermite_e.hermecompanion"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermesub": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermetrim": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.hermeval": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.double",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeval2d": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.hermite_e.hermeval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeval3d": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.hermite_e.hermeval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermevander": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermevander2d": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.hermite_e.hermevander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermevander3d": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.hermite_e.hermevander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermeweight": {
  "data": {
   "lineno": 1780,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.hermex": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.hermezero": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "numpy.polynomial.hermite_e.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.poly2herme": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.hermite_e.hermeadd",
    "numpy.polynomial.hermite_e.hermemulx",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.hermite_e.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.hermite_e.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.laguerre.Laguerre": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.polynomial.laguerre.lagadd",
    "numpy.polynomial.laguerre.lagder",
    "numpy.polynomial.laguerre.lagdiv",
    "numpy.polynomial.laguerre.lagdomain",
    "numpy.polynomial.laguerre.lagfit",
    "numpy.polynomial.laguerre.lagfromroots",
    "numpy.polynomial.laguerre.lagint",
    "numpy.polynomial.laguerre.lagline",
    "numpy.polynomial.laguerre.lagmul",
    "numpy.polynomial.laguerre.lagpow",
    "numpy.polynomial.laguerre.lagroots",
    "numpy.polynomial.laguerre.lagsub",
    "numpy.polynomial.laguerre.lagval",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.laguerre.__all__": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.lag2poly": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "polyadd",
    "polymulx",
    "polysub",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagadd": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagcompanion": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagder": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.double",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagdiv": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "len",
    "numpy.empty",
    "numpy.polynomial.laguerre.lagmul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagdomain": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.lagfit": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "issubclass",
    "len",
    "numpy.asarray",
    "numpy.complexfloating",
    "numpy.finfo",
    "numpy.linalg.lstsq",
    "numpy.polynomial.laguerre.lagvander",
    "numpy.polynomial.laguerre.warnings",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.square",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagfromroots": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "divmod",
    "len",
    "numpy.ones",
    "numpy.polynomial.laguerre.lagline",
    "numpy.polynomial.laguerre.lagmul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.laggauss": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.abs",
    "numpy.array",
    "numpy.linalg.eigvalsh",
    "numpy.polynomial.laguerre.lagcompanion",
    "numpy.polynomial.laguerre.lagder",
    "numpy.polynomial.laguerre.lagval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.laggrid2d": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.laggrid3d": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagint": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.double",
    "numpy.empty",
    "numpy.iterable",
    "numpy.moveaxis",
    "numpy.ndim",
    "numpy.polynomial.laguerre.lagval",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagline": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagmul": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.laguerre.lagadd",
    "numpy.polynomial.laguerre.lagmulx",
    "numpy.polynomial.laguerre.lagsub",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagmulx": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagone": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.lagpow": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.polynomial.laguerre.lagmul",
    "pow",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagroots": {
  "data": {
   "lineno": 1611,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.linalg.eigvals",
    "numpy.polynomial.laguerre.lagcompanion"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagsub": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagtrim": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.lagval": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.double",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagval2d": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.laguerre.lagval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagval3d": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.laguerre.lagval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagvander": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagvander2d": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.laguerre.lagvander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagvander3d": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.laguerre.lagvander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagweight": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.lagx": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.lagzero": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "numpy.polynomial.laguerre.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.poly2lag": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.laguerre.lagadd",
    "numpy.polynomial.laguerre.lagmulx",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.laguerre.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.laguerre.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.legendre.Legendre": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.polynomial.legendre.legadd",
    "numpy.polynomial.legendre.legder",
    "numpy.polynomial.legendre.legdiv",
    "numpy.polynomial.legendre.legdomain",
    "numpy.polynomial.legendre.legfit",
    "numpy.polynomial.legendre.legfromroots",
    "numpy.polynomial.legendre.legint",
    "numpy.polynomial.legendre.legline",
    "numpy.polynomial.legendre.legmul",
    "numpy.polynomial.legendre.legpow",
    "numpy.polynomial.legendre.legroots",
    "numpy.polynomial.legendre.legsub",
    "numpy.polynomial.legendre.legval",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.legendre.__all__": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.leg2poly": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len",
    "polyadd",
    "polymulx",
    "polysub",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legadd": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legcompanion": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legder": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.double",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legdiv": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "len",
    "numpy.empty",
    "numpy.polynomial.legendre.legmul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legdomain": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.legfit": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "issubclass",
    "len",
    "numpy.asarray",
    "numpy.complexfloating",
    "numpy.finfo",
    "numpy.linalg.lstsq",
    "numpy.polynomial.legendre.legvander",
    "numpy.polynomial.legendre.warnings",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.square",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legfromroots": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "divmod",
    "len",
    "numpy.ones",
    "numpy.polynomial.legendre.legline",
    "numpy.polynomial.legendre.legmul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.leggauss": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.abs",
    "numpy.array",
    "numpy.linalg.eigvalsh",
    "numpy.polynomial.legendre.legcompanion",
    "numpy.polynomial.legendre.legder",
    "numpy.polynomial.legendre.legval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.leggrid2d": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.leggrid3d": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legint": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.double",
    "numpy.empty",
    "numpy.iterable",
    "numpy.moveaxis",
    "numpy.ndim",
    "numpy.polynomial.legendre.legval",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legline": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legmul": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.legendre.legadd",
    "numpy.polynomial.legendre.legmulx",
    "numpy.polynomial.legendre.legsub",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legmulx": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legone": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.legpow": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.polynomial.legendre.legmul",
    "pow",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legroots": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.linalg.eigvals",
    "numpy.polynomial.legendre.legcompanion"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legsub": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legtrim": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.legval": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.double",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legval2d": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.legendre.legval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legval3d": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.legendre.legval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legvander": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legvander2d": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.legendre.legvander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legvander3d": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.legendre.legvander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legweight": {
  "data": {
   "lineno": 1763
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.legx": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.legzero": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "numpy.polynomial.legendre.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.poly2leg": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.legendre.legadd",
    "numpy.polynomial.legendre.legmulx",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.legendre.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.legendre.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.polynomial.Polynomial": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.polynomial.polynomial.polyadd",
    "numpy.polynomial.polynomial.polyder",
    "numpy.polynomial.polynomial.polydiv",
    "numpy.polynomial.polynomial.polydomain",
    "numpy.polynomial.polynomial.polyfit",
    "numpy.polynomial.polynomial.polyfromroots",
    "numpy.polynomial.polynomial.polyint",
    "numpy.polynomial.polynomial.polyline",
    "numpy.polynomial.polynomial.polymul",
    "numpy.polynomial.polynomial.polypow",
    "numpy.polynomial.polynomial.polyroots",
    "numpy.polynomial.polynomial.polysub",
    "numpy.polynomial.polynomial.polyval",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.polynomial.__all__": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.polyadd": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polycompanion": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyder": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polydiv": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polydomain": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.polyfit": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "issubclass",
    "len",
    "numpy.asarray",
    "numpy.complexfloating",
    "numpy.finfo",
    "numpy.linalg.lstsq",
    "numpy.polynomial.polynomial.polyvander",
    "numpy.polynomial.polynomial.warnings",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.square",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyfromroots": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "divmod",
    "len",
    "numpy.ones",
    "numpy.polynomial.polynomial.polyline",
    "numpy.polynomial.polynomial.polymul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polygrid2d": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polyval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polygrid3d": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polyval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyint": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.empty",
    "numpy.iterable",
    "numpy.moveaxis",
    "numpy.ndim",
    "numpy.polynomial.polynomial.polyval",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyline": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polymul": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.convolve"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polymulx": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "len",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyone": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.polypow": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.convolve",
    "pow",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyroots": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.linalg.eigvals",
    "numpy.polynomial.polynomial.polycompanion"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polysub": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polytrim": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.polyval": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyval2d": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.polynomial.polyval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyval3d": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.array",
    "numpy.polynomial.polynomial.polyval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvalfromroots": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.double",
    "numpy.ndarray",
    "numpy.prod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvander": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.empty",
    "numpy.moveaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvander2d": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.polynomial.polyvander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyvander3d": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.array",
    "numpy.polynomial.polynomial.polyvander",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polynomial.polyx": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.polyzero": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "numpy.polynomial.polynomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.pu": {
  "data": {
   "shadows": "polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.polynomial.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils": {
  "data": {},
  "type": "module"
 },
 "numpy.polynomial.polyutils.PolyBase": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.PolyDomainError": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.polynomial.polyutils.PolyError"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.PolyError": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.RankWarning": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.__all__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.polynomial.polyutils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.as_series": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "any",
    "len",
    "min",
    "numpy.array",
    "numpy.common_type",
    "numpy.dtype",
    "numpy.empty",
    "numpy.polynomial.polyutils.trimseq",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.getdomain": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.polynomial.polyutils.as_series",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.mapdomain": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.polynomial.polyutils.mapparms"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.mapparms": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.trimcoef": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.abs",
    "numpy.nonzero",
    "numpy.polynomial.polyutils.as_series"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.trimseq": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.polynomial.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.polynomial.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.polynomial.test": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.polynomial.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.polynomial.tests.test_chebyshev": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.polynomial.tests.test_chebyshev.T0",
    "numpy.polynomial.tests.test_chebyshev.T1",
    "numpy.polynomial.tests.test_chebyshev.T2",
    "numpy.polynomial.tests.test_chebyshev.T3",
    "numpy.polynomial.tests.test_chebyshev.T4",
    "numpy.polynomial.tests.test_chebyshev.T5",
    "numpy.polynomial.tests.test_chebyshev.T6",
    "numpy.polynomial.tests.test_chebyshev.T7",
    "numpy.polynomial.tests.test_chebyshev.T8",
    "numpy.polynomial.tests.test_chebyshev.T9",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_chebyshev.T0": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T1": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T2": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T3": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T4": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T5": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T6": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T7": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T8": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T9": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebadd": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.chebyshev.chebadd",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebdiv": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebadd",
    "numpy.polynomial.chebyshev.chebdiv",
    "numpy.polynomial.chebyshev.chebmul",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebmul": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "abs",
    "numpy.polynomial.chebyshev.chebmul",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebmulx": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebmulx",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebsub": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.chebyshev.chebsub",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebcompanion",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebcompanion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCompanion.test_raises": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.chebyshev.chebcompanion",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebdomain": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebdomain",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebone": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebone",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebx": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebx",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebzero": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestDerivative": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestDerivative.test_chebder": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.chebyshev.chebder",
    "numpy.polynomial.chebyshev.chebint",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestDerivative.test_chebder_axis": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebder",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.einsum",
    "numpy.polynomial.polynomial.polyval",
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebgrid2d": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.chebyshev.chebgrid2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebgrid3d": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.chebyshev.chebgrid3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebval": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.chebyshev.chebval",
    "numpy.polynomial.polynomial.polyval",
    "numpy.polynomial.tests.test_chebyshev.Tlist",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebval2d": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.chebyshev.chebval2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestEvaluation.test_chebval3d": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.chebyshev.chebval3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting.test_chebfit": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "f2",
    "len",
    "numpy.array",
    "numpy.linspace",
    "numpy.polynomial.chebyshev.chebfit",
    "numpy.polynomial.chebyshev.chebval",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting.test_chebfit.f": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestFitting.test_chebfit.f2": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestGauss": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestGauss.test_100": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.pi",
    "numpy.polynomial.chebyshev.chebgauss",
    "numpy.polynomial.chebyshev.chebvander",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestIntegral": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestIntegral.test_chebint": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.polynomial.chebyshev.cheb2poly",
    "numpy.polynomial.chebyshev.chebint",
    "numpy.polynomial.chebyshev.chebval",
    "numpy.polynomial.chebyshev.poly2cheb",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestIntegral.test_chebint_axis": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebint",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate.f": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate.test_approximation": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.chebyshev.chebinterpolate",
    "numpy.polynomial.chebyshev.chebval",
    "numpy.testing.assert_almost_equal",
    "powx",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate.test_approximation.powx": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate.test_dimensions": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebinterpolate",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestInterpolate.test_raises": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.polynomial.chebyshev.chebinterpolate",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_cheb2poly": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.cheb2poly",
    "numpy.polynomial.tests.test_chebyshev.Tlist",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebfromroots": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.polynomial.chebyshev.chebfromroots",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebline": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebline",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebpts1": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.chebyshev.chebpts1",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebpts2": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.chebyshev.chebpts2",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebroots": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.chebyshev.chebfromroots",
    "numpy.polynomial.chebyshev.chebroots",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebtrim": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.chebyshev.chebtrim",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_poly2cheb": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.poly2cheb",
    "numpy.polynomial.tests.test_chebyshev.Tlist",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_weight": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.chebyshev.chebweight",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate.test__cseries_to_zseries": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.double",
    "numpy.polynomial.chebyshev._cseries_to_zseries",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate.test__zseries_to_cseries": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.double",
    "numpy.polynomial.chebyshev._zseries_to_cseries",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander.test_chebvander": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.polynomial.chebyshev.chebval",
    "numpy.polynomial.chebyshev.chebvander",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander.test_chebvander2d": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.chebyshev.chebval2d",
    "numpy.polynomial.chebyshev.chebvander2d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestVander.test_chebvander3d": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.chebyshev.chebval3d",
    "numpy.polynomial.chebyshev.chebvander3d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.Tlist": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.cheb": {
  "data": {
   "shadows": "numpy.polynomial.chebyshev"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.trim": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebtrim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.polynomial.Chebyshev",
    "numpy.polynomial.Hermite",
    "numpy.polynomial.HermiteE",
    "numpy.polynomial.Laguerre",
    "numpy.polynomial.Legendre",
    "numpy.polynomial.Polynomial",
    "numpy.random.random",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_classes.Chebyshev": {
  "data": {
   "shadows": "numpy.polynomial.Chebyshev"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.Hermite": {
  "data": {
   "shadows": "numpy.polynomial.Hermite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.HermiteE": {
  "data": {
   "shadows": "numpy.polynomial.HermiteE"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.Laguerre": {
  "data": {
   "shadows": "numpy.polynomial.Laguerre"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.Legendre": {
  "data": {
   "shadows": "numpy.polynomial.Legendre"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.Polynomial": {
  "data": {
   "shadows": "numpy.polynomial.Polynomial"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate.f": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate.test_approximation": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.Chebyshev.interpolate",
    "numpy.testing.assert_almost_equal",
    "p",
    "powx",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate.test_approximation.powx": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "p"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate.test_dimensions": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.polynomial.Chebyshev.interpolate",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.TestInterpolate.test_raises": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.polynomial.Chebyshev.interpolate",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.assert_poly_almost_equal": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.all",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.check_add": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "Poly",
    "Poly.domain",
    "Poly.window",
    "TypeError",
    "list",
    "numpy.array",
    "numpy.polynomial.Chebyshev",
    "numpy.polynomial.Polynomial",
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_raises",
    "operator.add",
    "p1",
    "p2",
    "p3",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_basis": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_equal",
    "p",
    "p.coef",
    "p.domain",
    "p.window"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_call": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "P",
    "Poly.cast",
    "Poly.domain",
    "numpy.linspace",
    "numpy.polynomial.Polynomial",
    "numpy.testing.assert_almost_equal",
    "p"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_cast": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Poly1",
    "Poly1.domain",
    "Poly1.window",
    "numpy.linspace",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_almost_equal",
    "p1",
    "p2",
    "p2.domain",
    "p2.window"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_conversion": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Poly1",
    "numpy.linspace",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_almost_equal",
    "p1",
    "p2"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_copy": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "Poly.basis",
    "numpy.testing.assert_",
    "p1",
    "p1.coef",
    "p1.copy",
    "p1.domain",
    "p1.window",
    "p2",
    "p2.coef",
    "p2.domain",
    "p2.window"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_cutdeg": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "Poly",
    "ValueError",
    "len",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "p",
    "p.cutdeg"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_degree": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "Poly.basis",
    "numpy.testing.assert_equal",
    "p",
    "p.degree"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_deriv": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "Poly",
    "Poly.domain",
    "Poly.window",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_almost_equal",
    "p1",
    "p1.coef",
    "p1.integ",
    "p2",
    "p2.deriv",
    "p3",
    "p3.coef"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_divmod": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "Poly",
    "Poly.domain",
    "Poly.window",
    "TypeError",
    "divmod",
    "list",
    "numpy.array",
    "numpy.polynomial.Chebyshev",
    "numpy.polynomial.Polynomial",
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_raises",
    "p1",
    "p2",
    "p3",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_equal": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "Poly",
    "numpy.testing.assert_",
    "p1",
    "p2",
    "p3"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_fit": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "f",
    "numpy.linspace",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "p",
    "p.degree",
    "p.domain",
    "p.window",
    "p1",
    "p2",
    "p3"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_fit.f": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_floordiv": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Poly",
    "Poly.domain",
    "Poly.window",
    "TypeError",
    "list",
    "numpy.array",
    "numpy.polynomial.Chebyshev",
    "numpy.polynomial.Polynomial",
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_raises",
    "operator.floordiv",
    "p1",
    "p2",
    "p3",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_fromroots": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.Polynomial.cast",
    "numpy.polynomial.Polynomial.domain",
    "numpy.polynomial.Polynomial.window",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "p1",
    "p1.degree",
    "p1.domain",
    "p1.window",
    "p2",
    "p2.coef"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_identity": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "p"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_integ": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "P",
    "P.cast",
    "Poly.cast",
    "Poly.domain",
    "numpy.polynomial.Polynomial",
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal",
    "p1",
    "p2"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_linspace": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "Poly",
    "Poly.domain",
    "Poly.window",
    "numpy.linspace",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_almost_equal",
    "p",
    "p.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_mapparms": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "Poly",
    "Poly.domain",
    "Poly.window",
    "numpy.testing.assert_almost_equal",
    "p",
    "p.mapparms"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_mod": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "Poly",
    "Poly.domain",
    "Poly.window",
    "TypeError",
    "list",
    "numpy.array",
    "numpy.polynomial.Chebyshev",
    "numpy.polynomial.Polynomial",
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_raises",
    "operator.mod",
    "p1",
    "p2",
    "p3",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_mul": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "Poly",
    "Poly.domain",
    "Poly.window",
    "TypeError",
    "list",
    "numpy.array",
    "numpy.polynomial.Chebyshev",
    "numpy.polynomial.Polynomial",
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_raises",
    "operator.mul",
    "p1",
    "p2",
    "p3",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_not_equal": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "Poly",
    "numpy.testing.assert_",
    "p1",
    "p2",
    "p3"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_pow": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "Poly",
    "Poly.domain",
    "Poly.window",
    "ValueError",
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_raises",
    "operator.pow",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_roots": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "Poly.domain",
    "Poly.fromroots",
    "Poly.window",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.sort",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_sub": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "Poly",
    "Poly.domain",
    "Poly.window",
    "TypeError",
    "list",
    "numpy.array",
    "numpy.polynomial.Chebyshev",
    "numpy.polynomial.Polynomial",
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal",
    "numpy.polynomial.tests.test_classes.random",
    "numpy.testing.assert_raises",
    "operator.sub",
    "p1",
    "p2",
    "p3",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_trim": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "Poly",
    "numpy.testing.assert_equal",
    "p",
    "p.trim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_truediv": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "Poly",
    "TypeError",
    "bool",
    "complex",
    "dict",
    "float",
    "int",
    "issubclass",
    "list",
    "numbers.Number",
    "numpy.ScalarType",
    "numpy.array",
    "numpy.compat.long",
    "numpy.polynomial.tests.test_classes.assert_poly_almost_equal",
    "numpy.polynomial.tests.test_classes.classes",
    "numpy.testing.assert_raises",
    "operator.truediv",
    "p1",
    "p2",
    "ptype",
    "stype",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_truncate": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "Poly",
    "ValueError",
    "len",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "p",
    "p.truncate"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.check_ufunc_override": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "Poly",
    "TypeError",
    "numpy.add",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "p"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_classes.classes": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_classes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.op": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.random": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_classes.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_classes.test_class_methods": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.polynomial.tests.test_classes.classes"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "numpy.polynomial.tests.test_hermite.H0",
    "numpy.polynomial.tests.test_hermite.H1",
    "numpy.polynomial.tests.test_hermite.H2",
    "numpy.polynomial.tests.test_hermite.H3",
    "numpy.polynomial.tests.test_hermite.H4",
    "numpy.polynomial.tests.test_hermite.H5",
    "numpy.polynomial.tests.test_hermite.H6",
    "numpy.polynomial.tests.test_hermite.H7",
    "numpy.polynomial.tests.test_hermite.H8",
    "numpy.polynomial.tests.test_hermite.H9",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_hermite.H0": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H1": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H3": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H4": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H5": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H6": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H7": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H8": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.H9": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.Hlist": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.linspace",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermadd": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.hermite.hermadd",
    "numpy.polynomial.tests.test_hermite.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermdiv": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermadd",
    "numpy.polynomial.hermite.hermdiv",
    "numpy.polynomial.hermite.hermmul",
    "numpy.polynomial.tests.test_hermite.trim",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermmul": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.hermite.hermmul",
    "numpy.polynomial.hermite.hermval",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermmulx": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermmulx",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestArithmetic.test_hermsub": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.hermite.hermsub",
    "numpy.polynomial.tests.test_hermite.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermcompanion",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermcompanion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestCompanion.test_raises": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.hermite.hermcompanion",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermdomain": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermdomain",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermone": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermone",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermx": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermx",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestConstants.test_hermzero": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestDerivative": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestDerivative.test_hermder": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.hermite.hermder",
    "numpy.polynomial.hermite.hermint",
    "numpy.polynomial.tests.test_hermite.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestDerivative.test_hermder_axis": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermder",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.einsum",
    "numpy.polynomial.polynomial.polyval",
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermgrid2d": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.hermite.hermgrid2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermgrid3d": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.hermite.hermgrid3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermval": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.hermite.hermval",
    "numpy.polynomial.polynomial.polyval",
    "numpy.polynomial.tests.test_hermite.Hlist",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermval2d": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.hermite.hermval2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestEvaluation.test_hermval3d": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.hermite.hermval3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting.test_hermfit": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "f2",
    "len",
    "numpy.array",
    "numpy.linspace",
    "numpy.polynomial.hermite.hermfit",
    "numpy.polynomial.hermite.hermval",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting.test_hermfit.f": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestFitting.test_hermfit.f2": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestGauss": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestGauss.test_100": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.pi",
    "numpy.polynomial.hermite.hermgauss",
    "numpy.polynomial.hermite.hermvander",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestIntegral": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestIntegral.test_hermint": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.polynomial.hermite.herm2poly",
    "numpy.polynomial.hermite.hermint",
    "numpy.polynomial.hermite.hermval",
    "numpy.polynomial.hermite.poly2herm",
    "numpy.polynomial.tests.test_hermite.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestIntegral.test_hermint_axis": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermint",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_herm2poly": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.herm2poly",
    "numpy.polynomial.tests.test_hermite.Hlist",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermfromroots": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "len",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.polynomial.hermite.herm2poly",
    "numpy.polynomial.hermite.hermfromroots",
    "numpy.polynomial.hermite.hermval",
    "numpy.polynomial.tests.test_hermite.trim",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermline": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermline",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermroots": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.hermite.hermfromroots",
    "numpy.polynomial.hermite.hermroots",
    "numpy.polynomial.tests.test_hermite.trim",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_hermtrim": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.hermite.hermtrim",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_poly2herm": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.poly2herm",
    "numpy.polynomial.tests.test_hermite.Hlist",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestMisc.test_weight": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.linspace",
    "numpy.polynomial.hermite.hermweight",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestVander": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite.TestVander.test_hermvander": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.polynomial.hermite.hermval",
    "numpy.polynomial.hermite.hermvander",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestVander.test_hermvander2d": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.hermite.hermval2d",
    "numpy.polynomial.hermite.hermvander2d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.TestVander.test_hermvander3d": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.hermite.hermval3d",
    "numpy.polynomial.hermite.hermvander3d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.herm": {
  "data": {
   "shadows": "numpy.polynomial.hermite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite.trim": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.polynomial.hermite.hermtrim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "numpy.polynomial.tests.test_hermite_e.He0",
    "numpy.polynomial.tests.test_hermite_e.He1",
    "numpy.polynomial.tests.test_hermite_e.He2",
    "numpy.polynomial.tests.test_hermite_e.He3",
    "numpy.polynomial.tests.test_hermite_e.He4",
    "numpy.polynomial.tests.test_hermite_e.He5",
    "numpy.polynomial.tests.test_hermite_e.He6",
    "numpy.polynomial.tests.test_hermite_e.He7",
    "numpy.polynomial.tests.test_hermite_e.He8",
    "numpy.polynomial.tests.test_hermite_e.He9",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_hermite_e.He0": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He1": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He3": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He4": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He5": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He6": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He7": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He8": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.He9": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.Helist": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.linspace",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermeadd": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.hermite_e.hermeadd",
    "numpy.polynomial.tests.test_hermite_e.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermediv": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermeadd",
    "numpy.polynomial.hermite_e.hermediv",
    "numpy.polynomial.hermite_e.hermemul",
    "numpy.polynomial.tests.test_hermite_e.trim",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermemul": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.hermite_e.hermemul",
    "numpy.polynomial.hermite_e.hermeval",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermemulx": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermemulx",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestArithmetic.test_hermesub": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.hermite_e.hermesub",
    "numpy.polynomial.tests.test_hermite_e.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermecompanion",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermecompanion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestCompanion.test_raises": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.hermite_e.hermecompanion",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermedomain": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermedomain",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermeone": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermeone",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermex": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermex",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestConstants.test_hermezero": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermezero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestDerivative": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestDerivative.test_hermeder": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.hermite_e.hermeder",
    "numpy.polynomial.hermite_e.hermeint",
    "numpy.polynomial.tests.test_hermite_e.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestDerivative.test_hermeder_axis": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermeder",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.einsum",
    "numpy.polynomial.polynomial.polyval",
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermegrid2d": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.hermite_e.hermegrid2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermegrid3d": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.hermite_e.hermegrid3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermeval": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.hermite_e.hermeval",
    "numpy.polynomial.polynomial.polyval",
    "numpy.polynomial.tests.test_hermite_e.Helist",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermeval2d": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.hermite_e.hermeval2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestEvaluation.test_hermeval3d": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.hermite_e.hermeval3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting.test_hermefit": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "f2",
    "len",
    "numpy.array",
    "numpy.linspace",
    "numpy.polynomial.hermite_e.hermefit",
    "numpy.polynomial.hermite_e.hermeval",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting.test_hermefit.f": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestFitting.test_hermefit.f2": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestGauss": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestGauss.test_100": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.pi",
    "numpy.polynomial.hermite_e.hermegauss",
    "numpy.polynomial.hermite_e.hermevander",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestIntegral": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestIntegral.test_hermeint": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.polynomial.hermite_e.herme2poly",
    "numpy.polynomial.hermite_e.hermeint",
    "numpy.polynomial.hermite_e.hermeval",
    "numpy.polynomial.hermite_e.poly2herme",
    "numpy.polynomial.tests.test_hermite_e.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestIntegral.test_hermeint_axis": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermeint",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_herme2poly": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.herme2poly",
    "numpy.polynomial.tests.test_hermite_e.Helist",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermefromroots": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "len",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.polynomial.hermite_e.herme2poly",
    "numpy.polynomial.hermite_e.hermefromroots",
    "numpy.polynomial.hermite_e.hermeval",
    "numpy.polynomial.tests.test_hermite_e.trim",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermeline": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermeline",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermeroots": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.hermite_e.hermefromroots",
    "numpy.polynomial.hermite_e.hermeroots",
    "numpy.polynomial.tests.test_hermite_e.trim",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_hermetrim": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.hermite_e.hermetrim",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_poly2herme": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.poly2herme",
    "numpy.polynomial.tests.test_hermite_e.Helist",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestMisc.test_weight": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.linspace",
    "numpy.polynomial.hermite_e.hermeweight",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander.test_hermevander": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.polynomial.hermite_e.hermeval",
    "numpy.polynomial.hermite_e.hermevander",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander.test_hermevander2d": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.hermite_e.hermeval2d",
    "numpy.polynomial.hermite_e.hermevander2d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.TestVander.test_hermevander3d": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.hermite_e.hermeval3d",
    "numpy.polynomial.hermite_e.hermevander3d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_hermite_e.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.herme": {
  "data": {
   "shadows": "numpy.polynomial.hermite_e"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_hermite_e.trim": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.polynomial.hermite_e.hermetrim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "numpy.polynomial.tests.test_laguerre.L0",
    "numpy.polynomial.tests.test_laguerre.L1",
    "numpy.polynomial.tests.test_laguerre.L2",
    "numpy.polynomial.tests.test_laguerre.L3",
    "numpy.polynomial.tests.test_laguerre.L4",
    "numpy.polynomial.tests.test_laguerre.L5",
    "numpy.polynomial.tests.test_laguerre.L6",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_laguerre.L0": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L1": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L3": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L4": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L5": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.L6": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.Llist": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.linspace",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagadd": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.laguerre.lagadd",
    "numpy.polynomial.tests.test_laguerre.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagdiv": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagadd",
    "numpy.polynomial.laguerre.lagdiv",
    "numpy.polynomial.laguerre.lagmul",
    "numpy.polynomial.tests.test_laguerre.trim",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagmul": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.laguerre.lagmul",
    "numpy.polynomial.laguerre.lagval",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagmulx": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagmulx",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestArithmetic.test_lagsub": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.laguerre.lagsub",
    "numpy.polynomial.tests.test_laguerre.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagcompanion",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagcompanion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestCompanion.test_raises": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.laguerre.lagcompanion",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagdomain": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagdomain",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagone": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagone",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagx": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagx",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestConstants.test_lagzero": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestDerivative": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestDerivative.test_lagder": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.laguerre.lagder",
    "numpy.polynomial.laguerre.lagint",
    "numpy.polynomial.tests.test_laguerre.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestDerivative.test_lagder_axis": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagder",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.einsum",
    "numpy.polynomial.polynomial.polyval",
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_laggrid2d": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.laguerre.laggrid2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_laggrid3d": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.laguerre.laggrid3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_lagval": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.laguerre.lagval",
    "numpy.polynomial.polynomial.polyval",
    "numpy.polynomial.tests.test_laguerre.Llist",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_lagval2d": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.laguerre.lagval2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestEvaluation.test_lagval3d": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.laguerre.lagval3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestFitting": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestFitting.test_lagfit": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "len",
    "numpy.array",
    "numpy.linspace",
    "numpy.polynomial.laguerre.lagfit",
    "numpy.polynomial.laguerre.lagval",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestFitting.test_lagfit.f": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestGauss": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestGauss.test_100": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.polynomial.laguerre.laggauss",
    "numpy.polynomial.laguerre.lagvander",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestIntegral": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestIntegral.test_lagint": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.polynomial.laguerre.lag2poly",
    "numpy.polynomial.laguerre.lagint",
    "numpy.polynomial.laguerre.lagval",
    "numpy.polynomial.laguerre.poly2lag",
    "numpy.polynomial.tests.test_laguerre.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestIntegral.test_lagint_axis": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagint",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lag2poly": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lag2poly",
    "numpy.polynomial.tests.test_laguerre.Llist",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagfromroots": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "len",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.polynomial.laguerre.lag2poly",
    "numpy.polynomial.laguerre.lagfromroots",
    "numpy.polynomial.laguerre.lagval",
    "numpy.polynomial.tests.test_laguerre.trim",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagline": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagline",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagroots": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.laguerre.lagfromroots",
    "numpy.polynomial.laguerre.lagroots",
    "numpy.polynomial.tests.test_laguerre.trim",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_lagtrim": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.laguerre.lagtrim",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_poly2lag": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.poly2lag",
    "numpy.polynomial.tests.test_laguerre.Llist",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestMisc.test_weight": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.linspace",
    "numpy.polynomial.laguerre.lagweight",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander.test_lagvander": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.polynomial.laguerre.lagval",
    "numpy.polynomial.laguerre.lagvander",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander.test_lagvander2d": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.laguerre.lagval2d",
    "numpy.polynomial.laguerre.lagvander2d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.TestVander.test_lagvander3d": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.laguerre.lagval3d",
    "numpy.polynomial.laguerre.lagvander3d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_laguerre.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.lag": {
  "data": {
   "shadows": "numpy.polynomial.laguerre"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_laguerre.trim": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.polynomial.laguerre.lagtrim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "numpy.polynomial.tests.test_legendre.L0",
    "numpy.polynomial.tests.test_legendre.L1",
    "numpy.polynomial.tests.test_legendre.L2",
    "numpy.polynomial.tests.test_legendre.L3",
    "numpy.polynomial.tests.test_legendre.L4",
    "numpy.polynomial.tests.test_legendre.L5",
    "numpy.polynomial.tests.test_legendre.L6",
    "numpy.polynomial.tests.test_legendre.L7",
    "numpy.polynomial.tests.test_legendre.L8",
    "numpy.polynomial.tests.test_legendre.L9",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_legendre.L0": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L1": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L3": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L4": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L5": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L6": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L7": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L8": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.L9": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.Llist": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.linspace",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legadd": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.legendre.legadd",
    "numpy.polynomial.tests.test_legendre.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legdiv": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legadd",
    "numpy.polynomial.legendre.legdiv",
    "numpy.polynomial.legendre.legmul",
    "numpy.polynomial.tests.test_legendre.trim",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legmul": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "numpy.polynomial.legendre.legmul",
    "numpy.polynomial.legendre.legval",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legmulx": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legmulx",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestArithmetic.test_legsub": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.legendre.legsub",
    "numpy.polynomial.tests.test_legendre.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legcompanion",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legcompanion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestCompanion.test_raises": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.legendre.legcompanion",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legdomain": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legdomain",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legone": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legone",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legx": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legx",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestConstants.test_legzero": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestDerivative": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestDerivative.test_legder": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.legendre.legder",
    "numpy.polynomial.legendre.legint",
    "numpy.polynomial.tests.test_legendre.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestDerivative.test_legder_axis": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legder",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.einsum",
    "numpy.polynomial.polynomial.polyval",
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_leggrid2d": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.legendre.leggrid2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_leggrid3d": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.legendre.leggrid3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_legval": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.legendre.legval",
    "numpy.polynomial.polynomial.polyval",
    "numpy.polynomial.tests.test_legendre.Llist",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_legval2d": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.legendre.legval2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestEvaluation.test_legval3d": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.legendre.legval3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting.test_legfit": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "f2",
    "len",
    "numpy.array",
    "numpy.linspace",
    "numpy.polynomial.legendre.legfit",
    "numpy.polynomial.legendre.legval",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting.test_legfit.f": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestFitting.test_legfit.f2": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestGauss": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestGauss.test_100": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.polynomial.legendre.leggauss",
    "numpy.polynomial.legendre.legvander",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestIntegral": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestIntegral.test_legint": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.polynomial.legendre.leg2poly",
    "numpy.polynomial.legendre.legint",
    "numpy.polynomial.legendre.legval",
    "numpy.polynomial.legendre.poly2leg",
    "numpy.polynomial.tests.test_legendre.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestIntegral.test_legint_axis": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legint",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_leg2poly": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.leg2poly",
    "numpy.polynomial.tests.test_legendre.Llist",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legfromroots": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "len",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.polynomial.legendre.leg2poly",
    "numpy.polynomial.legendre.legfromroots",
    "numpy.polynomial.legendre.legval",
    "numpy.polynomial.tests.test_legendre.trim",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legline": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legline",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legroots": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.legendre.legfromroots",
    "numpy.polynomial.legendre.legroots",
    "numpy.polynomial.tests.test_legendre.trim",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_legtrim": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.legendre.legtrim",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_poly2leg": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.poly2leg",
    "numpy.polynomial.tests.test_legendre.Llist",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestMisc.test_weight": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.legendre.legweight",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestVander": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_legendre.TestVander.test_legvander": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.polynomial.legendre.legval",
    "numpy.polynomial.legendre.legvander",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestVander.test_legvander2d": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.legendre.legval2d",
    "numpy.polynomial.legendre.legvander2d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.TestVander.test_legvander3d": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.legendre.legval3d",
    "numpy.polynomial.legendre.legvander3d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_legendre.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.leg": {
  "data": {
   "shadows": "numpy.polynomial.legendre"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_legendre.trim": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legtrim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.polynomial.tests.test_polynomial.T0",
    "numpy.polynomial.tests.test_polynomial.T1",
    "numpy.polynomial.tests.test_polynomial.T2",
    "numpy.polynomial.tests.test_polynomial.T3",
    "numpy.polynomial.tests.test_polynomial.T4",
    "numpy.polynomial.tests.test_polynomial.T5",
    "numpy.polynomial.tests.test_polynomial.T6",
    "numpy.polynomial.tests.test_polynomial.T7",
    "numpy.polynomial.tests.test_polynomial.T8",
    "numpy.polynomial.tests.test_polynomial.T9",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_polynomial.T0": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T1": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T2": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T3": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T4": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T5": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T6": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T7": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T8": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T9": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polyadd": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.polynomial.polyadd",
    "numpy.polynomial.tests.test_polynomial.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polydiv": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "numpy.polynomial.polynomial.polyadd",
    "numpy.polynomial.polynomial.polydiv",
    "numpy.polynomial.polynomial.polymul",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polymul": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polymul",
    "numpy.polynomial.tests.test_polynomial.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polymulx": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polymulx",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polysub": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "max",
    "numpy.polynomial.polynomial.polysub",
    "numpy.polynomial.tests.test_polynomial.trim",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion.test_dimensions": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polycompanion",
    "numpy.testing.assert_",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion.test_linear_root": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polycompanion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCompanion.test_raises": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.polynomial.polycompanion",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polydomain": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polydomain",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyone": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polyone",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyx": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polyx",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyzero": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polyzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestDerivative": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestDerivative.test_polyder": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.polynomial.polyder",
    "numpy.polynomial.polynomial.polyint",
    "numpy.polynomial.tests.test_polynomial.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestDerivative.test_polyder_axis": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polyder",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.einsum",
    "numpy.polynomial.polynomial.polyval",
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polygrid2d": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.polynomial.polygrid2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polygrid3d": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.ones",
    "numpy.polynomial.polynomial.polygrid3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyval": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.polynomial.polyval",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyval2d": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.polynomial.polyval2d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyval3d": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.polynomial.polynomial.polyval3d",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestEvaluation.test_polyvalfromroots": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.polynomial.polynomial.polyroots",
    "numpy.polynomial.polynomial.polyval",
    "numpy.polynomial.polynomial.polyvalfromroots",
    "numpy.random.randint",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.vstack",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestIntegral": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestIntegral.test_polyint": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.polynomial.polynomial.polyint",
    "numpy.polynomial.polynomial.polyval",
    "numpy.polynomial.tests.test_polynomial.trim",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestIntegral.test_polyint_axis": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polyint",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfit": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "f2",
    "len",
    "numpy.array",
    "numpy.linspace",
    "numpy.polynomial.polynomial.polyfit",
    "numpy.polynomial.polynomial.polyval",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfit.f": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfit.f2": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfromroots": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.polynomial.polynomial.polyfromroots",
    "numpy.polynomial.tests.test_polynomial.Tlist",
    "numpy.polynomial.tests.test_polynomial.trim",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyline": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polyline",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyroots": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.polynomial.polynomial.polyfromroots",
    "numpy.polynomial.polynomial.polyroots",
    "numpy.polynomial.tests.test_polynomial.trim",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polytrim": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.polynomial.polytrim",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.random.random",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander.test_polyvander": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.polynomial.polynomial.polyval",
    "numpy.polynomial.polynomial.polyvander",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander.test_polyvander2d": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.polynomial.polyval2d",
    "numpy.polynomial.polynomial.polyvander2d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestVander.test_polyvander3d": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.polynomial.polynomial.polyval3d",
    "numpy.polynomial.polynomial.polyvander3d",
    "numpy.random.random",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.Tlist": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.poly": {
  "data": {
   "shadows": "numpy.polynomial.polynomial"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.trim": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polytrim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_getdomain": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.polynomial.polyutils.getdomain",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_mapdomain": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.matrix",
    "numpy.polynomial.polyutils.mapdomain",
    "numpy.testing.assert_",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_mapparms": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.polynomial.polyutils.mapparms",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_as_series": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ones",
    "numpy.polynomial.polyutils.as_series",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_trimcoef": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "numpy.polynomial.polyutils.trimcoef",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_trimseq": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.polynomial.polyutils.trimseq",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.pu": {
  "data": {
   "shadows": "numpy.polynomial.polyutils"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_printing.TestRepr": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_chebyshev_str": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.polynomial.Chebyshev",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_hermiteE_repr": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.polynomial.HermiteE",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_hermite_repr": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.polynomial.Hermite",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_laguerre_repr": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.polynomial.Laguerre",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_legendre_repr": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.polynomial.Legendre",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestRepr.test_polynomial_str": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.polynomial.Polynomial",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_chebyshev_str": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.polynomial.Chebyshev",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_hermiteE_str": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.polynomial.HermiteE",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_hermite_str": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.polynomial.Hermite",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_laguerre_str": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.polynomial.Laguerre",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_legendre_str": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.polynomial.Legendre",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.TestStr.test_polynomial_str": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.polynomial.Polynomial",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_printing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.poly": {
  "data": {
   "shadows": "numpy.polynomial"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_printing.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.warnings",
    "numpy.testing._numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.random.__RandomState_ctor": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "RandomState"
   ]
  },
  "type": "function"
 },
 "numpy.random._numpy_tester": {
  "data": {
   "shadows": "numpy.testing._numpy_tester"
  },
  "type": "import"
 },
 "numpy.random.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.random.bench": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "numpy.random.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.random.info": {
  "data": {},
  "type": "module"
 },
 "numpy.random.info.__all__": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "numpy.random.info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.random.info.depends": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "numpy.random.info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.random.info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.random.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.random.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.random.setup.configuration": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "numpy.random.setup.needs_mingw_ftime_workaround",
    "numpy.random.setup.sys",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.random.setup.configuration.generate_libraries": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.get_mathlibs",
    "numpy.random.setup.sys"
   ]
  },
  "type": "function"
 },
 "numpy.random.setup.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "numpy.random.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.random.setup.get_mathlibs": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_mathlibs"
  },
  "type": "import"
 },
 "numpy.random.setup.get_msvc_build_version": {
  "data": {
   "shadows": "distutils.msvccompiler.get_build_version"
  },
  "type": "import"
 },
 "numpy.random.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.random.setup.needs_mingw_ftime_workaround": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "distutils.msvccompiler.get_build_version"
   ]
  },
  "type": "function"
 },
 "numpy.random.setup.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.random.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.random.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.random.setup.split": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "numpy.random.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.random.test": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "numpy.random.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.random.tests.test_random": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.random.tests.test_random.TestBinomial": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestBinomial.test_n_zero": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.random.binomial",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBinomial.test_p_is_nan": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "numpy.random.binomial",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestBroadcast.setSeed": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.setup": {
  "data": {
   "lineno": 948
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_beta": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "ValueError",
    "beta",
    "numpy.array",
    "numpy.random.beta",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_binomial": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "ValueError",
    "binom",
    "numpy.array",
    "numpy.random.binomial",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_chisquare": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "ValueError",
    "chisquare",
    "numpy.array",
    "numpy.random.chisquare",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_exponential": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "ValueError",
    "exponential",
    "numpy.array",
    "numpy.random.exponential",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_f": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.array",
    "numpy.random.f",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_gamma": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "ValueError",
    "gamma",
    "numpy.array",
    "numpy.random.gamma",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_geometric": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "ValueError",
    "geom",
    "numpy.array",
    "numpy.random.geometric",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_gumbel": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "ValueError",
    "gumbel",
    "numpy.array",
    "numpy.random.gumbel",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_hypergeometric": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "ValueError",
    "hypergeom",
    "numpy.array",
    "numpy.random.hypergeometric",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_laplace": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "ValueError",
    "laplace",
    "numpy.array",
    "numpy.random.laplace",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_logistic": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "ValueError",
    "logistic",
    "numpy.array",
    "numpy.random.logistic",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_lognormal": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "ValueError",
    "lognormal",
    "numpy.array",
    "numpy.random.lognormal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_logseries": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "ValueError",
    "logseries",
    "numpy.array",
    "numpy.random.logseries",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_negative_binomial": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "ValueError",
    "neg_binom",
    "numpy.array",
    "numpy.random.negative_binomial",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_noncentral_chisquare": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "ValueError",
    "nonc_chi",
    "numpy.array",
    "numpy.random.noncentral_chisquare",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_noncentral_f": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "ValueError",
    "nonc_f",
    "numpy.array",
    "numpy.random.noncentral_f",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_noncentral_f_small_df": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.noncentral_f",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_normal": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "ValueError",
    "normal",
    "numpy.array",
    "numpy.random.normal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_pareto": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.pareto",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "pareto"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_poisson": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.random.poisson",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "poisson"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_power": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.power",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "power"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_rayleigh": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.rayleigh",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "rayleigh"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_standard_gamma": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.standard_gamma",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "std_gamma"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_standard_t": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.standard_t",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_triangular": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.triangular",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "triangular"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_uniform": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal",
    "uniform"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_vonmises": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.vonmises",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "vonmises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_wald": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.wald",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "wald"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_weibull": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.weibull",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "weibull"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestBroadcast.test_zipf": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.errstate",
    "numpy.nan",
    "numpy.random.zipf",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "zipf"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_basic": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.random.multinomial"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_int_negative_interval": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.randint",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_size": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "numpy.array",
    "numpy.random.multinomial",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_zero_probability": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.random.multinomial"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.randint",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestRandint.test_bounds_checking": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool_",
    "numpy.iinfo",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_full_range": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "numpy.bool_",
    "numpy.iinfo",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_in_bounds_fuzz": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.random.seed",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_int64_uint64_corner_case": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int64",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_repeatability": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "bool",
    "numpy.dtype",
    "numpy.int8",
    "numpy.random.seed",
    "numpy.random.tests.test_random.hashlib",
    "numpy.random.tests.test_random.sys",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_respect_dtype_singleton": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "int",
    "numpy.bool_",
    "numpy.dtype",
    "numpy.iinfo",
    "numpy.long",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_rng_zero_and_extremes": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.iinfo",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandint.test_unsupported_type": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestRandomDist.setup": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_beta": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.beta",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_binomial": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.binomial",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_bytes": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "numpy.random.bytes",
    "numpy.random.seed",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_chisquare": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.chisquare",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_exceptions": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.choice",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_noninteger": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.choice",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_nonuniform_noreplace": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.choice",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_nonuniform_replace": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.choice",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_return_shape": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.isscalar",
    "numpy.random.choice",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "object",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_uniform_noreplace": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.choice",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_choice_uniform_replace": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.choice",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_dirichlet": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.mtrand.dirichlet",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_dirichlet_bad_alpha": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.random.mtrand.dirichlet",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_dirichlet_size": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "numpy.array",
    "numpy.random.dirichlet",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_exponential": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.exponential",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_exponential_0": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.exponential",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_f": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.f",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_gamma": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.gamma",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_gamma_0": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.gamma",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_geometric": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.geometric",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_gumbel": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.gumbel",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_gumbel_0": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.gumbel",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_hypergeometric": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.hypergeometric",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_laplace": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.laplace",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_laplace_0": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.laplace",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_logistic": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.logistic",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_lognormal": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.lognormal",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_lognormal_0": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.lognormal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_logseries": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.logseries",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_multinomial": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.multinomial",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_multivariate_normal": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "numpy.array",
    "numpy.random.multivariate_normal",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_no_warnings",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_negative_binomial": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.negative_binomial",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_noncentral_chisquare": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.noncentral_chisquare",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_noncentral_f": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.noncentral_f",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_normal": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_normal_0": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.normal",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_pareto": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.pareto",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_poisson": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.poisson",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_poisson_exceptions": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "ValueError",
    "numpy.iinfo",
    "numpy.random.poisson",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_power": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.power",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_rand": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_randint": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_randn": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_random_integers": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.array",
    "numpy.random.random_integers",
    "numpy.random.seed",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_random_integers_deprecated": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.iinfo",
    "numpy.random.random_integers",
    "numpy.random.tests.test_random.warnings",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_random_integers_max_int": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "numpy.iinfo",
    "numpy.random.random_integers",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_random_sample": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.random_sample",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_rayleigh": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.rayleigh",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_rayleigh_0": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.rayleigh",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_scalar_exception_propagation": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.random.hypergeometric",
    "numpy.random.uniform",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat.__float__": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger.__int__": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_shuffle": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "conv",
    "numpy.array",
    "numpy.asarray",
    "numpy.complex64",
    "numpy.float32",
    "numpy.int32",
    "numpy.int8",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_equal",
    "numpy.vstack",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_shuffle_masked": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.masked_values",
    "numpy.random.shuffle",
    "numpy.reshape",
    "numpy.testing.assert_equal",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_cauchy": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.standard_cauchy",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_exponential": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.standard_exponential",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_gamma": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.standard_gamma",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_gamma_0": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.standard_gamma",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_normal": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.standard_normal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_standard_t": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.standard_t",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_triangular": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.triangular",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_uniform": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_uniform_range_bounds": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.finfo",
    "numpy.inf",
    "numpy.nextafter",
    "numpy.random.uniform",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_vonmises": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.vonmises",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_vonmises_small": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "numpy.isfinite",
    "numpy.random.seed",
    "numpy.random.vonmises",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_wald": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.wald",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_weibull": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.weibull",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_weibull_0": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.weibull",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRandomDist.test_zipf": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.zipf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSeed": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestSeed.test_array": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSeed.test_invalid_array": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.RandomState",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSeed.test_invalid_array_shape": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.int64",
    "numpy.random.RandomState",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSeed.test_invalid_scalar": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.RandomState",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSeed.test_scalar": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestSetState.setup": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_backwards_compatibility": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_basic": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_gaussian_reset": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_gaussian_reset_in_media_res": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_negative_binomial": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSingleEltArrayInput": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestSingleEltArrayInput.setup": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSingleEltArrayInput.test_one_arg_funcs": {
  "data": {
   "lineno": 1560,
   "symbols_in_volume": [
    "func",
    "numpy.array",
    "numpy.random.chisquare",
    "numpy.random.exponential",
    "numpy.random.geometric",
    "numpy.random.logseries",
    "numpy.random.pareto",
    "numpy.random.poisson",
    "numpy.random.power",
    "numpy.random.rayleigh",
    "numpy.random.standard_gamma",
    "numpy.random.standard_t",
    "numpy.random.weibull",
    "numpy.random.zipf",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSingleEltArrayInput.test_three_arg_funcs": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "func",
    "numpy.random.hypergeometric",
    "numpy.random.noncentral_f",
    "numpy.random.triangular",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSingleEltArrayInput.test_two_arg_funcs": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "func",
    "numpy.array",
    "numpy.random.beta",
    "numpy.random.binomial",
    "numpy.random.f",
    "numpy.random.gamma",
    "numpy.random.gumbel",
    "numpy.random.laplace",
    "numpy.random.logistic",
    "numpy.random.lognormal",
    "numpy.random.negative_binomial",
    "numpy.random.noncentral_chisquare",
    "numpy.random.normal",
    "numpy.random.uniform",
    "numpy.random.vonmises",
    "numpy.random.wald",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestThread.check_function": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "function",
    "len",
    "numpy.empty",
    "numpy.intp",
    "numpy.random.RandomState",
    "numpy.random.tests.test_random.sys",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "t",
    "threading.Thread",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.setup": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_exp": {
  "data": {
   "lineno": 1542
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_exp.gen_random": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_multinomial": {
  "data": {
   "lineno": 1547
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_multinomial.gen_random": {
  "data": {
   "lineno": 1548
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_normal": {
  "data": {
   "lineno": 1537
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestThread.test_normal.gen_random": {
  "data": {
   "lineno": 1538
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.assert_no_warnings": {
  "data": {
   "shadows": "numpy.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.random.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.random.tests.test_regression.TestRegression.test_VonMises_range": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.mtrand.vonmises",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_beta_small_parameters": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.random.beta",
    "numpy.random.seed",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_call_within_randomstate": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_choice_sum_of_probs_tolerance": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.choice",
    "numpy.random.seed",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_hypergeometric_range": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.hypergeometric",
    "numpy.random.tests.test_regression.sys",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_logseries_convergence": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "float",
    "numpy.random.logseries",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_multivariate_normal_size_types": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.int_",
    "numpy.random.multivariate_normal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_permutation_longs": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.compat.long",
    "numpy.random.permutation",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_shuffle_mixed_dimension": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "list",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_shuffle_of_array_of_different_length_strings": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.random.tests.test_regression.gc",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.TestRegression.test_shuffle_of_array_of_objects": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.random.tests.test_regression.gc",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.random.tests.test_regression.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.random.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.show_config": {
  "data": {
   "shadows": "numpy.__config__.show"
  },
  "type": "import"
 },
 "numpy.str": {
  "data": {
   "shadows": "__builtin__.str"
  },
  "type": "import"
 },
 "numpy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.test": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "numpy.testing": {
  "data": {
   "symbols_in_volume": [
    "_numpy_tester"
   ]
  },
  "type": "module"
 },
 "numpy.testing.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "numpy.testing.Tester": {
  "data": {
   "shadows": "NoseTester"
  },
  "type": "import"
 },
 "numpy.testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.dec": {
  "data": {
   "shadows": "decorators"
  },
  "type": "import"
 },
 "numpy.testing.decorators": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.nose_tools.decorators": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.nose_tools.decorators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.decorators.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.decorators.deprecated": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.deprecated.deprecate_decorator": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "conditional",
    "f",
    "isinstance",
    "numpy.testing.nose_tools.decorators.collections",
    "numpy.testing.nose_tools.decorators.nose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.deprecated.deprecate_decorator._deprecated_imp": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "DeprecationWarning",
    "assert_warns",
    "f"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.decorators.knownfailureif": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "fail_condition",
    "isinstance",
    "numpy.testing.nose_tools.decorators.collections"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.knownfailureif.knownfail_decorator": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "f",
    "numpy.testing.nose_tools.decorators.nose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.knownfailureif.knownfail_decorator.knownfailer": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "KnownFailureException",
    "f",
    "fail_val"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.decorators.parametrize": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "input",
    "parameterized"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.decorators.setastest": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.setastest.set_test": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.skipif": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.skipif.skip_decorator": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "numpy.testing.nose_tools.decorators.collections",
    "numpy.testing.nose_tools.decorators.nose",
    "skip_condition"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.skipif.skip_decorator.get_msg": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.skipif.skip_decorator.skipper_func": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "SkipTest",
    "f",
    "get_msg",
    "skip_val"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.skipif.skip_decorator.skipper_gen": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "SkipTest",
    "f",
    "get_msg",
    "skip_val"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.decorators.slow": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.nose_tools.noseclasses.KnownFailurePlugin",
    "numpy.testing.nose_tools.noseclasses.numpy"
   ]
  },
  "type": "module"
 },
 "numpy.testing.nose_tools.noseclasses.ErrorClass": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClass"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.ErrorClassPlugin": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClassPlugin"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.FPUModeCheckPlugin": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "nose.plugins.base.Plugin"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.noseclasses.FPUModeCheckPlugin.prepareTestCase": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.FPUModeCheckPlugin.prepareTestCase.run": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.core.multiarray_tests.get_fpu_mode",
    "numpy.testing.nose_tools.noseclasses.sys"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.KnownFailure": {
  "data": {
   "lineno": 318
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.noseclasses.KnownFailurePlugin": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "nose.plugins.errorclass.ErrorClass",
    "nose.plugins.errorclass.ErrorClassPlugin"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.noseclasses.KnownFailurePlugin.configure": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.KnownFailurePlugin.options": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDocTestCase": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "nose.plugins.doctests.DocTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDocTestCase.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDocTestFinder": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDocTestFinder._find": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "inspect.isclass",
    "inspect.isfunction",
    "inspect.ismethod",
    "inspect.ismodule",
    "inspect.isroutine",
    "isinstance",
    "numpy.testing.nose_tools.noseclasses.doctest",
    "property",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDocTestFinder._from_module": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "numpy.testing.nose_tools.noseclasses.inspect",
    "object",
    "object.__globals__",
    "object.__module__",
    "object.__self__.__class__.__module__",
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDoctest": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "nose.plugins.doctests.Doctest",
    "numpy.testing.nose_tools.noseclasses.NumpyDocTestCase",
    "numpy.testing.nose_tools.noseclasses.NumpyDocTestFinder",
    "numpy.testing.nose_tools.noseclasses.NumpyOutputChecker",
    "numpy.testing.nose_tools.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDoctest.afterContext": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.noseclasses.numpy",
    "numpy.testing.nose_tools.noseclasses.print_state"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDoctest.configure": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "nose.plugins.base.Plugin.configure",
    "numpy.testing.nose_tools.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDoctest.loadTestsFromModule": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "AttributeError",
    "nose.plugins.doctests.log.debug",
    "nose.util.src"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDoctest.options": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "nose.plugins.base.Plugin.options",
    "numpy.testing.nose_tools.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDoctest.set_test_context": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "__import__",
    "get_package_name",
    "numpy.testing.nose_tools.noseclasses.numpy",
    "numpy.testing.nose_tools.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyDoctest.wantFile": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "nose.plugins.doctests.Doctest.wantFile",
    "numpy.testing.nose_tools.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyOutputChecker": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyOutputChecker.check_output": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyTestProgram": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.noseclasses.nose"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.noseclasses.NumpyTestProgram.runTests": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.noseclasses.nose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.Plugin": {
  "data": {
   "shadows": "nose.plugins.base.Plugin"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.Unplugger": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.noseclasses.Unplugger.__init__": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.Unplugger.configure": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.Unplugger.options": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.noseclasses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.get_fpu_mode": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.get_fpu_mode"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.ismethod": {
  "data": {
   "shadows": "inspect.ismethod"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.ismodule": {
  "data": {
   "shadows": "inspect.ismodule"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.isroutine": {
  "data": {
   "shadows": "inspect.isroutine"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.npd": {
  "data": {
   "shadows": "nose.plugins.doctests"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.print_state": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.noseclasses.src": {
  "data": {
   "shadows": "nose.util.src"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.noseclasses.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.nose_tools.nosetester.EntryPointPluginManager": {
  "data": {
   "shadows": "nose.plugins.EntryPointPluginManager"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.NoseTester": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.nosetester.NoseTester.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "AssertionError",
    "getattr",
    "isinstance",
    "numpy.testing.nose_tools.nosetester.get_package_name",
    "numpy.testing.nose_tools.nosetester.os",
    "numpy.testing.nose_tools.nosetester.sys",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.nosetester.NoseTester._get_custom_doctester": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "NumpyDoctest"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.nosetester.NoseTester._show_system_info": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "import_nose",
    "numpy.testing.nose_tools.nosetester.numpy",
    "numpy.testing.nose_tools.nosetester.os",
    "numpy.testing.nose_tools.nosetester.scipy",
    "numpy.testing.nose_tools.nosetester.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.nosetester.NoseTester._test_argv": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.compat.basestring",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.nosetester.NoseTester.bench": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "Unplugger",
    "import_nose",
    "numpy.testing.nose_tools.nosetester.os",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.nosetester.NoseTester.prepare_test_args": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "FPUModeCheckPlugin",
    "ImportError",
    "KnownFailurePlugin",
    "Unplugger",
    "import_nose",
    "int",
    "isinstance",
    "nose.plugins.EntryPointPluginManager",
    "p",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.nosetester.NoseTester.test": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NumpyTestProgram",
    "UserWarning",
    "Warning",
    "dict",
    "isinstance",
    "min",
    "numpy.compat.basestring",
    "numpy.testing.nose_tools.nosetester.doctest",
    "numpy.testing.nose_tools.nosetester.numpy",
    "numpy.testing.nose_tools.nosetester.sys",
    "numpy.testing.nose_tools.nosetester.threading",
    "numpy.testing.nose_tools.nosetester.warnings",
    "print",
    "suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.nosetester.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.nosetester._numpy_tester": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "hasattr",
    "numpy.testing.nose_tools.nosetester.NoseTester",
    "numpy.testing.nose_tools.nosetester.numpy"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.nosetester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.basestring": {
  "data": {
   "shadows": "numpy.compat.basestring"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.get_package_name": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.nosetester.os"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.nosetester.nose.plugins.builtin": {
  "data": {
   "shadows": "nose.plugins.builtin"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.run_module_suite": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AssertionError",
    "KnownFailurePlugin",
    "import_nose",
    "numpy.testing.nose_tools.nosetester.sys"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.nosetester.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.nosetester.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.parameterized": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bytes",
    "collections.OrderedDict",
    "collections.namedtuple",
    "dict",
    "list",
    "numpy.testing.nose_tools.parameterized.PY3",
    "numpy.testing.nose_tools.parameterized.sys",
    "set",
    "str",
    "zip"
   ]
  },
  "type": "module"
 },
 "numpy.testing.nose_tools.parameterized.InstanceType": {
  "data": {
   "shadows": "types.InstanceType"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.parameterized.MaybeOrderedDict": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized.MethodType": {
  "data": {
   "shadows": "types.MethodType"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.parameterized.PY2": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized.PY3": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized.QuietOrderedDict": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict.__repr__",
    "dict.__str__"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.parameterized.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.parameterized._param": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized._test_runner_aliases": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized._test_runner_guess": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized._test_runner_override": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized._test_runners": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized.bytes_type": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized.default_doc_func": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "len",
    "numpy.testing.nose_tools.parameterized.parameterized_argument_value_pairs",
    "numpy.testing.nose_tools.parameterized.short_repr"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.default_name_func": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.testing.nose_tools.parameterized.string_types"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.detect_runner": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.parameterized._test_runner_aliases",
    "numpy.testing.nose_tools.parameterized._test_runner_guess",
    "numpy.testing.nose_tools.parameterized._test_runner_override",
    "numpy.testing.nose_tools.parameterized._test_runners",
    "numpy.testing.nose_tools.parameterized.inspect",
    "reversed"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.parameterized.lzip": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized.make_method": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "type",
    "types.MethodType"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.parameterized.param": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.parameterized._param"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.parameterized.param.__new__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.testing.nose_tools.parameterized._param"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.param.__repr__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.param.explicit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.param.from_decorator": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls",
    "isinstance",
    "numpy.testing.nose_tools.parameterized.param",
    "numpy.testing.nose_tools.parameterized.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.__call__": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.__call__.wrapper": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "TypeError",
    "delattr",
    "enumerate",
    "functools.wraps",
    "issubclass",
    "numpy.testing.nose_tools.parameterized.param",
    "setattr",
    "type",
    "types.InstanceType"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.__init__": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "input",
    "numpy.testing.nose_tools.parameterized.default_doc_func"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized._terrible_magic_get_defining_classes": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "eval",
    "len",
    "numpy.testing.nose_tools.parameterized.inspect"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.assert_not_in_testcase_subclass": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "Exception",
    "any",
    "cls",
    "issubclass",
    "unittest.TestCase"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.check_input_values": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "list",
    "numpy.testing.nose_tools.parameterized.param"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.expand": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "DeprecationWarning",
    "classmethod",
    "numpy.testing.nose_tools.parameterized.default_doc_func",
    "numpy.testing.nose_tools.parameterized.default_name_func",
    "numpy.testing.nose_tools.parameterized.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.expand.parameterized_expand_wrapper": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "cls.input_as_callable",
    "cls.param_as_standalone_func",
    "doc_func",
    "enumerate",
    "input",
    "name_func",
    "numpy.testing.nose_tools.parameterized.inspect"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.input_as_callable": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "callable",
    "classmethod",
    "cls.check_input_values",
    "input"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.param_as_nose_tuple": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "func",
    "functools.wraps",
    "numpy.testing.nose_tools.parameterized.PY2",
    "numpy.testing.nose_tools.parameterized.detect_runner",
    "numpy.testing.nose_tools.parameterized.make_method",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.param_as_standalone_func": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "func"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.param_as_standalone_func.standalone_func": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized.to_safe_name": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "classmethod",
    "numpy.testing.nose_tools.parameterized.re",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.parameterized_argument_value_pairs": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "numpy.testing.nose_tools.parameterized.QuietOrderedDict",
    "numpy.testing.nose_tools.parameterized.inspect",
    "numpy.testing.nose_tools.parameterized.lzip",
    "set",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.parameterized.set_test_runner": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.nose_tools.parameterized._test_runner_override",
    "numpy.testing.nose_tools.parameterized._test_runners"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.short_repr": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "isinstance",
    "len",
    "numpy.testing.nose_tools.parameterized.bytes_type",
    "numpy.testing.nose_tools.parameterized.text_type",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.testing.nose_tools.parameterized.string_types": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.parameterized.text_type": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "numpy.testing.nose_tools.parameterized.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.testing.nose_tools.parameterized.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.nosetester": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.nosetester.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.testing.print_coercion_tables": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.print_coercion_tables.print_cancast_table",
    "numpy.testing.print_coercion_tables.print_coercion_table",
    "numpy.typecodes",
    "print"
   ]
  },
  "type": "module"
 },
 "numpy.testing.print_coercion_tables.GenericObject": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.dtype",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.testing.print_coercion_tables.GenericObject.__add__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.GenericObject.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.GenericObject.__radd__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.print_coercion_tables.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.print_coercion_tables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.print_coercion_tables.print_cancast_table": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int",
    "numpy.can_cast",
    "print"
   ]
  },
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.print_coercion_table": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "coltype",
    "isinstance",
    "numpy.add",
    "numpy.array",
    "numpy.dtype",
    "numpy.ndarray",
    "numpy.obj2sctype",
    "numpy.promote_types",
    "numpy.testing.print_coercion_tables.GenericObject",
    "print",
    "rowtype",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.testing.print_coercion_tables.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.testing.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.testing.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.testing.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.testing.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.testing.test": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.testing.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.tests.test_decorators": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.testing.tests.test_decorators.DidntSkipException": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_decorators.KnownFailureException": {
  "data": {
   "shadows": "numpy.testing.KnownFailureException"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.SkipTest": {
  "data": {
   "shadows": "numpy.testing.SkipTest"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.test_deprecated": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "deprecated_func",
    "numpy.testing.assert_raises",
    "numpy.testing.tests.test_decorators.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_deprecated.deprecated_func": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.dec.deprecated",
    "numpy.testing.tests.test_decorators.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_deprecated.deprecated_func2": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.dec.deprecated",
    "numpy.testing.tests.test_decorators.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_deprecated.deprecated_func3": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.testing.dec.deprecated",
    "numpy.testing.tests.test_decorators.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_deprecated.non_deprecated_func": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.testing.dec.deprecated"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_parametrize": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.testing.dec.parametrize"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest.f_default": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.testing.dec.setastest"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest.f_isnottest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.testing.dec.setastest"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest.f_istest": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.testing.dec.setastest"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "f1",
    "f2",
    "numpy.testing.SkipTest",
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable.f1": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.testing.dec.skipif",
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable.f2": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.testing.dec.skipif",
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable.skip_tester": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_hardcoded": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "f1",
    "f2",
    "numpy.testing.SkipTest",
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_hardcoded.f1": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.testing.dec.skipif",
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_hardcoded.f2": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.testing.dec.skipif",
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Exception",
    "g1",
    "g2",
    "numpy.testing.KnownFailureException",
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable.g1": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.testing.dec.knownfailureif",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable.g2": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.testing.dec.knownfailureif",
    "numpy.testing.tests.test_decorators.DidntSkipException",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable.skip_tester": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_hardcoded": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Exception",
    "g1",
    "g2",
    "numpy.testing.KnownFailureException",
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_hardcoded.g1": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.testing.dec.knownfailureif",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_hardcoded.g2": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.testing.dec.knownfailureif",
    "numpy.testing.tests.test_decorators.DidntSkipException",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_slow": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_slow.slow_func": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.testing.dec.slow"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_doctesting": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.noseclasses.NumpyDoctest",
    "numpy.testing.tests.test_doctesting.argv",
    "numpy.testing.tests.test_doctesting.nose"
   ]
  },
  "type": "module"
 },
 "numpy.testing.tests.test_doctesting.NumpyDoctest": {
  "data": {
   "shadows": "numpy.testing.noseclasses.NumpyDoctest"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_doctesting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_doctesting.argv": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.testing.tests.test_doctesting.check_empty_output": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_implicit_np": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_random_directive": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_skip": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.check_whitespace_enabled": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "numpy.testing.tests.test_doctesting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_doctesting.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_doctesting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils._GenericTest",
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.setUp": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_closeness": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_complex": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_complex_item": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "complex",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_error_message": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_inf_item": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_matrix": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.matrix",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_nan_item": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_simple_item": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_subclass_that_cannot_be_bool": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_subclass_that_cannot_be_bool.MyArray": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_subclass_that_cannot_be_bool.MyArray.__lt__": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "numpy.ndarray",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_subclass_that_cannot_be_bool.MyArray.all": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.setUp": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.testing.assert_approx_equal"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_nan_array": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_nan_items": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_simple_arrays": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_simple_items": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils._GenericTest",
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.setUp": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_closeness": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_inf": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_matrix": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.matrix",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_nan": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_simple": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ma.masked_array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass_that_cannot_be_bool": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass_that_cannot_be_bool.MyArray": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass_that_cannot_be_bool.MyArray.__lt__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.ndarray",
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_subclass_that_cannot_be_bool.MyArray.all": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex128_fail": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.finfo",
    "numpy.float64",
    "numpy.linspace",
    "numpy.r_",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex128_pass": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float64",
    "numpy.linspace",
    "numpy.r_",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex64_fail": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.finfo",
    "numpy.float32",
    "numpy.linspace",
    "numpy.r_",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex64_pass": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "numpy.linspace",
    "numpy.r_",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float32_fail": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.finfo",
    "numpy.float32",
    "numpy.linspace",
    "numpy.r_",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float32_pass": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "numpy.linspace",
    "numpy.r_",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float64_fail": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.finfo",
    "numpy.float64",
    "numpy.linspace",
    "numpy.r_",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_float64_pass": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float64",
    "numpy.linspace",
    "numpy.r_",
    "numpy.testing.assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.setUp": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_inf_compare": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_inf_compare_array": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_nan_noncompare": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_nan_noncompare_array": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_rank2": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_rank3": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_simple_arrays": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAssertLess.test_simple_items": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils._GenericTest",
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.setUp": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank1": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "foo"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank1.foo": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank3": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "foo"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank3.foo": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_nan_array": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_recarrays": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "FutureWarning",
    "float",
    "len",
    "numpy.empty",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_string_arrays": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_equal_nan": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_equal_nan_default": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_min_int": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.iinfo",
    "numpy.int_",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_not_equal_nan": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_report_fail_percentage": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAssertAllclose.test_simple": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestBuildErrorMessage": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestBuildErrorMessage.test_build_err_msg_custom_names": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.build_err_msg"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestBuildErrorMessage.test_build_err_msg_custom_precision": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.build_err_msg"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestBuildErrorMessage.test_build_err_msg_defaults": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.build_err_msg"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestBuildErrorMessage.test_build_err_msg_no_verbose": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.build_err_msg"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.TestArrayEqual"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestEqual.setUp": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_complex": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_complex_item": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "complex",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_datetime": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.datetime64"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_error_message": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.matrix",
    "numpy.testing.tests.test_utils.textwrap",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_inf_items": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_nan_items": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_nat_items": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.testing.tests.test_utils.itertools",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_negative_zero": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.NZERO",
    "numpy.PZERO"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_non_numeric": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestRaises.does_not_raise_exception": {
  "data": {
   "lineno": 712
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.raises_exception": {
  "data": {
   "lineno": 709
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.setUp": {
  "data": {
   "lineno": 703
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.setUp.MyException": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_catch_no_raise": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.testing.raises"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_correct_catch": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "numpy.testing.raises"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_wrong_exception": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "numpy.testing.raises"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestStringEqual": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestStringEqual.test_simple": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_string_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestULP.test_double": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float64",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.testing.assert_array_max_ulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_equal": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_array_max_ulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_inf": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.testing.assert_array_max_ulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_nan": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.array",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_array_max_ulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_single": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float32",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.testing.assert_array_max_ulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_context_manager": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_warns",
    "numpy.testing.tests.test_utils.sys",
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_context_manager.no_warnings": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "numpy.testing.assert_no_warnings",
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_no_warnings",
    "numpy.testing.assert_raises",
    "numpy.testing.assert_warns",
    "numpy.testing.tests.test_utils.sys"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn.f": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn_wrong_warning": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "AssertionError",
    "DeprecationWarning",
    "UserWarning",
    "numpy.testing.assert_warns",
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn_wrong_warning.f": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils._GenericTest._test_equal": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest._test_not_equal": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_diffshape": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_likes": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank1_eq": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank1_noteq": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank2_eq": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_objarray": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.array",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._get_fresh_mod": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "AttributeError",
    "__name__",
    "numpy.testing.tests.test_utils.sys"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_approx_equal": {
  "data": {
   "shadows": "numpy.testing.assert_approx_equal"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_array_almost_equal_nulp": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal_nulp"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_array_max_ulp": {
  "data": {
   "shadows": "numpy.testing.assert_array_max_ulp"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_no_warnings": {
  "data": {
   "shadows": "numpy.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_string_equal": {
  "data": {
   "shadows": "numpy.testing.assert_string_equal"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.assert_warn_len_equal": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_equal",
    "numpy.testing.tests.test_utils.sys"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.build_err_msg": {
  "data": {
   "shadows": "numpy.testing.build_err_msg"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.clear_and_catch_warnings": {
  "data": {
   "shadows": "numpy.testing.clear_and_catch_warnings"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.my_cacw": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.clear_and_catch_warnings",
    "numpy.testing.tests.test_utils.sys"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.raises": {
  "data": {
   "shadows": "numpy.testing.raises"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.tempdir": {
  "data": {
   "shadows": "numpy.testing.tempdir"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.temppath": {
  "data": {
   "shadows": "numpy.testing.temppath"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.test_clear_and_catch_warnings": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.assert_equal",
    "numpy.testing.clear_and_catch_warnings",
    "numpy.testing.tests.test_utils._get_fresh_mod",
    "numpy.testing.tests.test_utils.assert_warn_len_equal",
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_clear_and_catch_warnings_inherit": {
  "data": {
   "lineno": 1361,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.testing.tests.test_utils._get_fresh_mod",
    "numpy.testing.tests.test_utils.my_cacw",
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_decorate_no_record": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "RuntimeWarning",
    "UserWarning",
    "len",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings",
    "numpy.testing.tests.test_utils.warnings",
    "warn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_decorate_no_record.warn": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_forwarding": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings",
    "numpy.testing.tests.test_utils.warnings",
    "range",
    "warn_other_module"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_forwarding.warn_other_module": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "warn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_forwarding.warn_other_module.warn": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_module": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "UserWarning",
    "getattr",
    "len",
    "numpy.lib.shape_base",
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "numpy.testing.tests.test_utils._get_fresh_mod",
    "numpy.testing.tests.test_utils.assert_warn_len_equal",
    "numpy.testing.tests.test_utils.warnings",
    "warn_other_module"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_module.warn_other_module": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "numpy.apply_along_axis"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_module.warn_other_module.warn": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_record": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_",
    "numpy.testing.suppress_warnings",
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_suppress_warnings_type": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "UserWarning",
    "getattr",
    "numpy.testing.assert_equal",
    "numpy.testing.suppress_warnings",
    "numpy.testing.tests.test_utils._get_fresh_mod",
    "numpy.testing.tests.test_utils.assert_warn_len_equal",
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_tempdir": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_",
    "numpy.testing.tempdir",
    "numpy.testing.tests.test_utils.os",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.test_temppath": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_",
    "numpy.testing.temppath",
    "numpy.testing.tests.test_utils.os",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.testing.utils": {
  "data": {},
  "type": "module"
 },
 "numpy.testing.utils.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.tests": {
  "data": {},
  "type": "module"
 },
 "numpy.tests.test_ctypeslib": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "__name__",
    "hasattr",
    "numpy.core.multiarray.__file__",
    "numpy.ctypeslib.load_library",
    "numpy.testing.run_module_suite",
    "numpy.tests.test_ctypeslib.cdll",
    "numpy.tests.test_ctypeslib.sys"
   ]
  },
  "type": "module"
 },
 "numpy.tests.test_ctypeslib.TestLoadLibrary": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.tests.test_ctypeslib.TestLoadLibrary.test_basic": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ImportError",
    "numpy.core.multiarray.__file__",
    "numpy.ctypeslib.load_library",
    "numpy.testing.dec.knownfailureif",
    "numpy.testing.dec.skipif",
    "numpy.tests.test_ctypeslib._HAS_CTYPE",
    "numpy.tests.test_ctypeslib.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestLoadLibrary.test_basic2": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ImportError",
    "numpy.core.multiarray.__file__",
    "numpy.ctypeslib.load_library",
    "numpy.distutils.misc_util.get_shared_lib_extension",
    "numpy.testing.dec.knownfailureif",
    "numpy.testing.dec.skipif",
    "numpy.tests.test_ctypeslib._HAS_CTYPE",
    "numpy.tests.test_ctypeslib.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_cache": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.ctypeslib.ndpointer",
    "numpy.float64",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_dtype": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.ctypeslib.ndpointer",
    "numpy.dtype",
    "numpy.float64",
    "numpy.intc",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_flags": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.ctypeslib.ndpointer",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_ndim": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.ctypeslib.ndpointer",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib.TestNdpointer.test_shape": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.ctypeslib.ndpointer",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_ctypeslib._HAS_CTYPE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.tests.test_ctypeslib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.cdll": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.tests.test_ctypeslib.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.get_shared_lib_extension": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_shared_lib_extension"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.load_library": {
  "data": {
   "shadows": "numpy.ctypeslib.load_library"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.ndpointer": {
  "data": {
   "shadows": "numpy.ctypeslib.ndpointer"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.tests.test_ctypeslib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.tests.test_matlib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.numpy.matlib": {
  "data": {
   "shadows": "numpy.matlib"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.tests.test_matlib.test_empty": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "isinstance",
    "numpy.matlib.empty",
    "numpy.matrix",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_eye": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "numpy.matlib.eye",
    "numpy.matrix",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_identity": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "int",
    "numpy.matlib.identity",
    "numpy.matrix",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_ones": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.matlib.ones",
    "numpy.matrix",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_rand": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.matlib.rand",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_randn": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.matlib.randn",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_repmat": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.matlib.repmat",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_matlib.test_zeros": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.matlib.zeros",
    "numpy.matrix",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_numpy_version": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.tests.test_numpy_version.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.tests.test_numpy_version.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.tests.test_numpy_version.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.tests.test_numpy_version.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.tests.test_numpy_version.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.tests.test_numpy_version.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.tests.test_numpy_version.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.tests.test_numpy_version.test_valid_numpy_version": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.__version__",
    "numpy.testing.assert_",
    "numpy.tests.test_numpy_version.re",
    "numpy.version.release"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_scripts": {
  "data": {
   "symbols_in_volume": [
    "numpy.__file__",
    "os.path.dirname",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "numpy.tests.test_scripts.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.basestring": {
  "data": {
   "shadows": "numpy.compat.py3k.basestring"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.is_inplace": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.tests.test_scripts.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.pathjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.run_command": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "list",
    "numpy.compat.py3k.basestring",
    "numpy.tests.test_scripts.os",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_scripts.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.tests.test_scripts.test_f2py": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Exception",
    "nose.tools.assert_equal",
    "numpy.testing.assert_",
    "numpy.testing.dec.skipif",
    "numpy.tests.test_scripts.is_inplace",
    "numpy.tests.test_scripts.run_command",
    "numpy.tests.test_scripts.sys",
    "os.path.dirname",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_warnings": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite",
    "numpy.tests.test_warnings.sys"
   ]
  },
  "type": "module"
 },
 "numpy.tests.test_warnings.FindFuncs": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.tests.test_warnings.ast"
   ]
  },
  "type": "class"
 },
 "numpy.tests.test_warnings.FindFuncs.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_warnings.FindFuncs.visit_Call": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "numpy.tests.test_warnings.ParseCall",
    "numpy.tests.test_warnings.ast"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_warnings.ParseCall": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.tests.test_warnings.ast"
   ]
  },
  "type": "class"
 },
 "numpy.tests.test_warnings.ParseCall.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "numpy.tests.test_warnings.ParseCall.visit_Attribute": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.tests.test_warnings.ast"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_warnings.ParseCall.visit_Name": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "numpy.tests.test_warnings.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "numpy.tests.test_warnings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "numpy.tests.test_warnings.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "numpy.tests.test_warnings.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.tests.test_warnings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.tests.test_warnings.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.tests.test_warnings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "numpy.tests.test_warnings.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.tests.test_warnings.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.tests.test_warnings.test_warning_calls": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.testing.dec.slow",
    "numpy.tests.test_warnings.FindFuncs",
    "numpy.tests.test_warnings.ast",
    "numpy.tests.test_warnings.numpy",
    "numpy.tests.test_warnings.tokenize",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.tests.test_warnings.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "numpy.unicode": {
  "data": {
   "shadows": "__builtin__.unicode"
  },
  "type": "import"
 },
 "numpy.version": {
  "data": {
   "symbols_in_volume": [
    "numpy.version.full_version",
    "numpy.version.release"
   ]
  },
  "type": "module"
 },
 "numpy.version.full_version": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.version.git_revision": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.version.release": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.version.short_version": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.version.version": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}