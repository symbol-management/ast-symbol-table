{
 "*": {
  "data": {
   "imports": [
    "_regex_core"
   ]
  },
  "type": "star-import"
 },
 "_regex_core": {
  "data": {
   "symbols_in_volume": [
    "_regex_core.ALNUM",
    "_regex_core.ALPHA",
    "_regex_core.BITS_PER_CODE",
    "_regex_core.BYTES_PER_CODE",
    "_regex_core.Boundary",
    "_regex_core.DIGITS",
    "_regex_core.DefaultBoundary",
    "_regex_core.DefaultEndOfWord",
    "_regex_core.DefaultStartOfWord",
    "_regex_core.EndOfString",
    "_regex_core.EndOfWord",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.Failure",
    "_regex_core.Keep",
    "_regex_core.NOCASE",
    "_regex_core.Namespace",
    "_regex_core.OP",
    "_regex_core.OPCODES",
    "_regex_core.POSITION_ESCAPES",
    "_regex_core.PROPERTIES",
    "_regex_core.PROPERTY_NAMES",
    "_regex_core.Prune",
    "_regex_core.Skip",
    "_regex_core.StartOfString",
    "_regex_core.StartOfWord",
    "_regex_core.WORD_POSITION_ESCAPES",
    "_regex_core._ALL_ENCODINGS",
    "_regex_core._ALL_VERSIONS",
    "_regex_core._regex",
    "_regex_core.lookup_property",
    "_regex_core.name",
    "_regex_core.string",
    "dict",
    "enumerate",
    "frozenset",
    "len",
    "max",
    "object",
    "set",
    "setattr"
   ]
  },
  "type": "module"
 },
 "_regex_core.ALNUM": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "_regex_core.ALPHA": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "_regex_core.Any": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Any._compile": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Any.dump": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Any.has_simple_start": {
  "data": {
   "lineno": 1946
  },
  "type": "function"
 },
 "_regex_core.Any.max_width": {
  "data": {
   "lineno": 1958
  },
  "type": "function"
 },
 "_regex_core.AnyAll": {
  "data": {
   "lineno": 1961,
   "symbols_in_volume": [
    "_regex_core.Any",
    "_regex_core.OP"
   ]
  },
  "type": "class"
 },
 "_regex_core.AnyU": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "_regex_core.Any",
    "_regex_core.OP"
   ]
  },
  "type": "class"
 },
 "_regex_core.Atomic": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Atomic.__eq__": {
  "data": {
   "lineno": 2015,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Atomic.__init__": {
  "data": {
   "lineno": 1970,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.Atomic._compile": {
  "data": {
   "lineno": 2004,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Atomic.can_be_affix": {
  "data": {
   "lineno": 1992
  },
  "type": "function"
 },
 "_regex_core.Atomic.contains_group": {
  "data": {
   "lineno": 1995
  },
  "type": "function"
 },
 "_regex_core.Atomic.dump": {
  "data": {
   "lineno": 2008,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Atomic.fix_groups": {
  "data": {
   "lineno": 1974
  },
  "type": "function"
 },
 "_regex_core.Atomic.get_firstset": {
  "data": {
   "lineno": 1998
  },
  "type": "function"
 },
 "_regex_core.Atomic.get_required_string": {
  "data": {
   "lineno": 2022
  },
  "type": "function"
 },
 "_regex_core.Atomic.has_simple_start": {
  "data": {
   "lineno": 2001
  },
  "type": "function"
 },
 "_regex_core.Atomic.is_empty": {
  "data": {
   "lineno": 2012
  },
  "type": "function"
 },
 "_regex_core.Atomic.max_width": {
  "data": {
   "lineno": 2019
  },
  "type": "function"
 },
 "_regex_core.Atomic.optimise": {
  "data": {
   "lineno": 1977
  },
  "type": "function"
 },
 "_regex_core.Atomic.pack_characters": {
  "data": {
   "lineno": 1984
  },
  "type": "function"
 },
 "_regex_core.Atomic.remove_captures": {
  "data": {
   "lineno": 1988
  },
  "type": "function"
 },
 "_regex_core.BITS_PER_CODE": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "_regex_core.BYTES_PER_CODE": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "_regex_core.Boundary": {
  "data": {
   "lineno": 2025,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Branch": {
  "data": {
   "lineno": 2029,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Branch.__eq__": {
  "data": {
   "lineno": 2409,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.__init__": {
  "data": {
   "lineno": 2030,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._add_precheck": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "Character",
    "Literal",
    "_regex_core.NOCASE",
    "_regex_core._check_firstset",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._can_split": {
  "data": {
   "lineno": 2222,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._can_split_rev": {
  "data": {
   "lineno": 2247,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._compile": {
  "data": {
   "lineno": 2109,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._flatten_branches": {
  "data": {
   "lineno": 2126,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._flush_char_prefix": {
  "data": {
   "lineno": 2334,
   "symbols_in_volume": [
    "Character",
    "Sequence",
    "_regex_core.Branch",
    "_regex_core.make_sequence",
    "len",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._flush_set_members": {
  "data": {
   "lineno": 2360,
   "symbols_in_volume": [
    "SetUnion",
    "len",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._is_folded": {
  "data": {
   "lineno": 2384,
   "symbols_in_volume": [
    "Character",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core._regex",
    "chr",
    "isinstance",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._is_full_case": {
  "data": {
   "lineno": 2375,
   "symbols_in_volume": [
    "Character",
    "_regex_core.FULLIGNORECASE",
    "isinstance",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._is_simple_character": {
  "data": {
   "lineno": 2302,
   "symbols_in_volume": [
    "Character",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._merge_common_prefixes": {
  "data": {
   "lineno": 2274,
   "symbols_in_volume": [
    "Sequence",
    "_regex_core.Branch",
    "collections.defaultdict",
    "isinstance",
    "len",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._reduce_to_set": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "Character",
    "Property",
    "_regex_core.Branch",
    "_regex_core.NOCASE",
    "isinstance",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._split_common_prefix": {
  "data": {
   "lineno": 2139,
   "symbols_in_volume": [
    "Sequence",
    "_regex_core.Branch",
    "_regex_core.make_sequence",
    "all",
    "isinstance",
    "len",
    "min",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._split_common_suffix": {
  "data": {
   "lineno": 2181,
   "symbols_in_volume": [
    "Sequence",
    "_regex_core.Branch",
    "_regex_core.make_sequence",
    "all",
    "isinstance",
    "len",
    "min",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.can_be_affix": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.contains_group": {
  "data": {
   "lineno": 2099,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.dump": {
  "data": {
   "lineno": 2119,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.fix_groups": {
  "data": {
   "lineno": 2034
  },
  "type": "function"
 },
 "_regex_core.Branch.get_firstset": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.is_atomic": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.is_empty": {
  "data": {
   "lineno": 2406,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.max_width": {
  "data": {
   "lineno": 2412,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.optimise": {
  "data": {
   "lineno": 2038,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "_regex_core.make_sequence",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.pack_characters": {
  "data": {
   "lineno": 2085
  },
  "type": "function"
 },
 "_regex_core.Branch.remove_captures": {
  "data": {
   "lineno": 2089
  },
  "type": "function"
 },
 "_regex_core.CASE_FLAGS": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "_regex_core.CASE_FLAGS_COMBINATIONS": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "_regex_core.CASE_TEXT": {
  "data": {
   "lineno": 1836
  },
  "type": "constant"
 },
 "_regex_core.CHARACTER_ESCAPES": {
  "data": {
   "lineno": 4442
  },
  "type": "constant"
 },
 "_regex_core.CHARSET_ESCAPES": {
  "data": {
   "lineno": 4453
  },
  "type": "constant"
 },
 "_regex_core.COMMENT": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "_regex_core.CallGroup": {
  "data": {
   "lineno": 2415,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.CallGroup.__eq__": {
  "data": {
   "lineno": 2452,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup.__init__": {
  "data": {
   "lineno": 2416,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup._compile": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup.dump": {
  "data": {
   "lineno": 2449,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup.fix_groups": {
  "data": {
   "lineno": 2424,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_regex_core.error",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup.max_width": {
  "data": {
   "lineno": 2455,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup.remove_captures": {
  "data": {
   "lineno": 2443,
   "symbols_in_volume": [
    "_regex_core.error"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallRef": {
  "data": {
   "lineno": 2458,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.CallRef.__init__": {
  "data": {
   "lineno": 2459
  },
  "type": "function"
 },
 "_regex_core.CallRef._compile": {
  "data": {
   "lineno": 2463,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character": {
  "data": {
   "lineno": 2467,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Character.__init__": {
  "data": {
   "lineno": 2474,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core.NOCASE",
    "_regex_core.RegexBase",
    "_regex_core._regex",
    "bool",
    "chr"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character._compile": {
  "data": {
   "lineno": 2503,
   "symbols_in_volume": [
    "PrecompiledCode",
    "String",
    "_regex_core.Branch",
    "_regex_core.FUZZY_OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.ZEROWIDTH_OP",
    "len",
    "ord"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character.dump": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "ascii",
    "chr",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character.get_firstset": {
  "data": {
   "lineno": 2497,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character.get_required_string": {
  "data": {
   "lineno": 2533,
   "symbols_in_volume": [
    "ord",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character.has_simple_start": {
  "data": {
   "lineno": 2500
  },
  "type": "function"
 },
 "_regex_core.Character.matches": {
  "data": {
   "lineno": 2527
  },
  "type": "function"
 },
 "_regex_core.Character.max_width": {
  "data": {
   "lineno": 2530,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character.optimise": {
  "data": {
   "lineno": 2494
  },
  "type": "function"
 },
 "_regex_core.Character.rebuild": {
  "data": {
   "lineno": 2491,
   "symbols_in_volume": [
    "_regex_core.Character"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional": {
  "data": {
   "lineno": 2541,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Conditional.__eq__": {
  "data": {
   "lineno": 2620,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.__init__": {
  "data": {
   "lineno": 2542,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional._compile": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.can_be_affix": {
  "data": {
   "lineno": 2588
  },
  "type": "function"
 },
 "_regex_core.Conditional.contains_group": {
  "data": {
   "lineno": 2591
  },
  "type": "function"
 },
 "_regex_core.Conditional.dump": {
  "data": {
   "lineno": 2610,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.fix_groups": {
  "data": {
   "lineno": 2550,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_regex_core.error",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.get_firstset": {
  "data": {
   "lineno": 2594
  },
  "type": "function"
 },
 "_regex_core.Conditional.is_atomic": {
  "data": {
   "lineno": 2585
  },
  "type": "function"
 },
 "_regex_core.Conditional.is_empty": {
  "data": {
   "lineno": 2617
  },
  "type": "function"
 },
 "_regex_core.Conditional.max_width": {
  "data": {
   "lineno": 2624,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.optimise": {
  "data": {
   "lineno": 2570,
   "symbols_in_volume": [
    "_regex_core.Conditional"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.pack_characters": {
  "data": {
   "lineno": 2576
  },
  "type": "function"
 },
 "_regex_core.Conditional.remove_captures": {
  "data": {
   "lineno": 2581
  },
  "type": "function"
 },
 "_regex_core.DEFAULT_FLAGS": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "_regex_core.DEFAULT_VERSION": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "_regex_core.DIGITS": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "_regex_core.DefaultBoundary": {
  "data": {
   "lineno": 2627,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.DefaultEndOfWord": {
  "data": {
   "lineno": 2631,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.DefaultStartOfWord": {
  "data": {
   "lineno": 2635,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfLine": {
  "data": {
   "lineno": 2639,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfLineU": {
  "data": {
   "lineno": 2643,
   "symbols_in_volume": [
    "_regex_core.EndOfLine",
    "_regex_core.OP"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfString": {
  "data": {
   "lineno": 2647,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfStringLine": {
  "data": {
   "lineno": 2651,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfStringLineU": {
  "data": {
   "lineno": 2655,
   "symbols_in_volume": [
    "_regex_core.EndOfStringLine",
    "_regex_core.OP"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfWord": {
  "data": {
   "lineno": 2659,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.FLAGS": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "_regex_core.FULLIGNORECASE": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "_regex_core.FULL_CASE_FOLDING": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "_regex_core.FUZZY_OP": {
  "data": {
   "lineno": 1831
  },
  "type": "constant"
 },
 "_regex_core.Failure": {
  "data": {
   "lineno": 2663,
   "symbols_in_volume": [
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Failure._compile": {
  "data": {
   "lineno": 2666,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy": {
  "data": {
   "lineno": 2669,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Fuzzy.__eq__": {
  "data": {
   "lineno": 2755,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.__init__": {
  "data": {
   "lineno": 2670,
   "symbols_in_volume": [
    "_regex_core.RegexBase",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy._compile": {
  "data": {
   "lineno": 2722,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.REVERSE_OP",
    "_regex_core.UNLIMITED",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy._constraints_to_string": {
  "data": {
   "lineno": 2762,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.contains_group": {
  "data": {
   "lineno": 2719
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.dump": {
  "data": {
   "lineno": 2745,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.fix_groups": {
  "data": {
   "lineno": 2705
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.is_atomic": {
  "data": {
   "lineno": 2716
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.is_empty": {
  "data": {
   "lineno": 2752
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.max_width": {
  "data": {
   "lineno": 2759,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.pack_characters": {
  "data": {
   "lineno": 2708
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.remove_captures": {
  "data": {
   "lineno": 2712
  },
  "type": "function"
 },
 "_regex_core.GLOBAL_FLAGS": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "_regex_core.Grapheme": {
  "data": {
   "lineno": 2795,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Grapheme._compile": {
  "data": {
   "lineno": 2796,
   "symbols_in_volume": [
    "GraphemeBoundary",
    "LazyRepeat",
    "Sequence",
    "_regex_core.AnyAll",
    "_regex_core.Atomic"
   ]
  },
  "type": "function"
 },
 "_regex_core.Grapheme.dump": {
  "data": {
   "lineno": 2804,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Grapheme.max_width": {
  "data": {
   "lineno": 2807,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.GraphemeBoundary": {
  "data": {
   "lineno": 2810
  },
  "type": "class"
 },
 "_regex_core.GraphemeBoundary.compile": {
  "data": {
   "lineno": 2811,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat": {
  "data": {
   "lineno": 2814,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.GreedyRepeat.__eq__": {
  "data": {
   "lineno": 2882,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.__init__": {
  "data": {
   "lineno": 2818,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat._compile": {
  "data": {
   "lineno": 2856,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.UNLIMITED",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.can_be_affix": {
  "data": {
   "lineno": 2843
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.contains_group": {
  "data": {
   "lineno": 2846
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.dump": {
  "data": {
   "lineno": 2869,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.fix_groups": {
  "data": {
   "lineno": 2824
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.get_firstset": {
  "data": {
   "lineno": 2849
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.get_required_string": {
  "data": {
   "lineno": 2893,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED",
    "min"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.is_atomic": {
  "data": {
   "lineno": 2840
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.is_empty": {
  "data": {
   "lineno": 2879
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.max_width": {
  "data": {
   "lineno": 2887,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.optimise": {
  "data": {
   "lineno": 2827,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.pack_characters": {
  "data": {
   "lineno": 2832
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.remove_captures": {
  "data": {
   "lineno": 2836
  },
  "type": "function"
 },
 "_regex_core.Group": {
  "data": {
   "lineno": 2906,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Group.__eq__": {
  "data": {
   "lineno": 2974,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Group.__init__": {
  "data": {
   "lineno": 2907,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.Group._compile": {
  "data": {
   "lineno": 2946,
   "symbols_in_volume": [
    "_regex_core.OP",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.Group.can_be_affix": {
  "data": {
   "lineno": 2934
  },
  "type": "function"
 },
 "_regex_core.Group.contains_group": {
  "data": {
   "lineno": 2937
  },
  "type": "function"
 },
 "_regex_core.Group.dump": {
  "data": {
   "lineno": 2967,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Group.fix_groups": {
  "data": {
   "lineno": 2915
  },
  "type": "function"
 },
 "_regex_core.Group.get_firstset": {
  "data": {
   "lineno": 2940
  },
  "type": "function"
 },
 "_regex_core.Group.get_required_string": {
  "data": {
   "lineno": 2981
  },
  "type": "function"
 },
 "_regex_core.Group.has_simple_start": {
  "data": {
   "lineno": 2943
  },
  "type": "function"
 },
 "_regex_core.Group.is_atomic": {
  "data": {
   "lineno": 2931
  },
  "type": "function"
 },
 "_regex_core.Group.max_width": {
  "data": {
   "lineno": 2978
  },
  "type": "function"
 },
 "_regex_core.Group.optimise": {
  "data": {
   "lineno": 2919,
   "symbols_in_volume": [
    "_regex_core.Group"
   ]
  },
  "type": "function"
 },
 "_regex_core.Group.pack_characters": {
  "data": {
   "lineno": 2924
  },
  "type": "function"
 },
 "_regex_core.Group.remove_captures": {
  "data": {
   "lineno": 2928
  },
  "type": "function"
 },
 "_regex_core.HEX_DIGITS": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "_regex_core.HEX_ESCAPES": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "_regex_core.INDENT": {
  "data": {
   "lineno": 1828
  },
  "type": "constant"
 },
 "_regex_core.Info": {
  "data": {
   "lineno": 4206
  },
  "type": "class"
 },
 "_regex_core.Info.__init__": {
  "data": {
   "lineno": 4209,
   "symbols_in_volume": [
    "_regex_core.DEFAULT_FLAGS",
    "_regex_core.DEFAULT_VERSION",
    "_regex_core._ALL_VERSIONS"
   ]
  },
  "type": "function"
 },
 "_regex_core.Info.close_group": {
  "data": {
   "lineno": 4254
  },
  "type": "function"
 },
 "_regex_core.Info.is_open_group": {
  "data": {
   "lineno": 4257,
   "symbols_in_volume": [
    "_regex_core.DEFAULT_VERSION",
    "_regex_core._ALL_VERSIONS",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.Info.open_group": {
  "data": {
   "lineno": 4228,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Keep": {
  "data": {
   "lineno": 2984,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.LazyRepeat": {
  "data": {
   "lineno": 2988,
   "symbols_in_volume": [
    "_regex_core.GreedyRepeat",
    "_regex_core.OP"
   ]
  },
  "type": "class"
 },
 "_regex_core.Literal": {
  "data": {
   "lineno": 3880,
   "symbols_in_volume": [
    "_regex_core.String"
   ]
  },
  "type": "class"
 },
 "_regex_core.Literal.dump": {
  "data": {
   "lineno": 3881,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "ascii",
    "chr",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround": {
  "data": {
   "lineno": 2992,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.LookAround.__eq__": {
  "data": {
   "lineno": 3047,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround.__init__": {
  "data": {
   "lineno": 2995,
   "symbols_in_volume": [
    "_regex_core.RegexBase",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround._compile": {
  "data": {
   "lineno": 3027,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.REVERSE_OP",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround.can_be_affix": {
  "data": {
   "lineno": 3021
  },
  "type": "function"
 },
 "_regex_core.LookAround.contains_group": {
  "data": {
   "lineno": 3024
  },
  "type": "function"
 },
 "_regex_core.LookAround.dump": {
  "data": {
   "lineno": 3039,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround.fix_groups": {
  "data": {
   "lineno": 3001
  },
  "type": "function"
 },
 "_regex_core.LookAround.is_atomic": {
  "data": {
   "lineno": 3018
  },
  "type": "function"
 },
 "_regex_core.LookAround.is_empty": {
  "data": {
   "lineno": 3044
  },
  "type": "function"
 },
 "_regex_core.LookAround.max_width": {
  "data": {
   "lineno": 3051
  },
  "type": "function"
 },
 "_regex_core.LookAround.optimise": {
  "data": {
   "lineno": 3004,
   "symbols_in_volume": [
    "_regex_core.LookAround"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround.pack_characters": {
  "data": {
   "lineno": 3011
  },
  "type": "function"
 },
 "_regex_core.LookAround.remove_captures": {
  "data": {
   "lineno": 3015
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional": {
  "data": {
   "lineno": 3054,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.LookAroundConditional.__eq__": {
  "data": {
   "lineno": 3133,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.__init__": {
  "data": {
   "lineno": 3057,
   "symbols_in_volume": [
    "_regex_core.RegexBase",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional._compile": {
  "data": {
   "lineno": 3105,
   "symbols_in_volume": [
    "_regex_core.OP",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.can_be_affix": {
  "data": {
   "lineno": 3093
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.contains_group": {
  "data": {
   "lineno": 3097
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.dump": {
  "data": {
   "lineno": 3119,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.fix_groups": {
  "data": {
   "lineno": 3065
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.get_firstset": {
  "data": {
   "lineno": 3101
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.get_required_string": {
  "data": {
   "lineno": 3140
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.is_atomic": {
  "data": {
   "lineno": 3089
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.is_empty": {
  "data": {
   "lineno": 3129
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.max_width": {
  "data": {
   "lineno": 3137,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.optimise": {
  "data": {
   "lineno": 3070,
   "symbols_in_volume": [
    "_regex_core.LookAroundConditional"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.pack_characters": {
  "data": {
   "lineno": 3078
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.remove_captures": {
  "data": {
   "lineno": 3084
  },
  "type": "function"
 },
 "_regex_core.NAMED_CHAR_PART": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "_regex_core.NOCASE": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "_regex_core.Namespace": {
  "data": {
   "lineno": 236
  },
  "type": "class"
 },
 "_regex_core.OCT_DIGITS": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "_regex_core.OP": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "_regex_core.OPCODES": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "_regex_core.POSITION_ESCAPES": {
  "data": {
   "lineno": 4463
  },
  "type": "constant"
 },
 "_regex_core.POSITIVE_OP": {
  "data": {
   "lineno": 1829
  },
  "type": "constant"
 },
 "_regex_core.POS_TEXT": {
  "data": {
   "lineno": 1835
  },
  "type": "constant"
 },
 "_regex_core.PROPERTIES": {
  "data": {
   "lineno": 4428
  },
  "type": "constant"
 },
 "_regex_core.PROPERTY_NAMES": {
  "data": {
   "lineno": 4431
  },
  "type": "constant"
 },
 "_regex_core.PROPERTY_NAME_PART": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "_regex_core.ParseError": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_regex_core.PossessiveRepeat": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "Atomic",
    "GreedyRepeat"
   ]
  },
  "type": "function"
 },
 "_regex_core.PrecompiledCode": {
  "data": {
   "lineno": 3143,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.PrecompiledCode.__init__": {
  "data": {
   "lineno": 3144
  },
  "type": "function"
 },
 "_regex_core.PrecompiledCode._compile": {
  "data": {
   "lineno": 3147,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property": {
  "data": {
   "lineno": 3150,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Property.__init__": {
  "data": {
   "lineno": 3157,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.NOCASE",
    "_regex_core.RegexBase",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property._compile": {
  "data": {
   "lineno": 3180,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.ZEROWIDTH_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property.dump": {
  "data": {
   "lineno": 3190,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property.get_firstset": {
  "data": {
   "lineno": 3174,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property.has_simple_start": {
  "data": {
   "lineno": 3177
  },
  "type": "function"
 },
 "_regex_core.Property.matches": {
  "data": {
   "lineno": 3196,
   "symbols_in_volume": [
    "_regex_core._regex"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property.max_width": {
  "data": {
   "lineno": 3199
  },
  "type": "function"
 },
 "_regex_core.Property.optimise": {
  "data": {
   "lineno": 3171
  },
  "type": "function"
 },
 "_regex_core.Property.rebuild": {
  "data": {
   "lineno": 3168,
   "symbols_in_volume": [
    "_regex_core.Property"
   ]
  },
  "type": "function"
 },
 "_regex_core.Prune": {
  "data": {
   "lineno": 3202,
   "symbols_in_volume": [
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Prune._compile": {
  "data": {
   "lineno": 3205,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.REGEX_FLAGS": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "_regex_core.REQUIRED_OP": {
  "data": {
   "lineno": 1833
  },
  "type": "constant"
 },
 "_regex_core.REVERSE_OP": {
  "data": {
   "lineno": 1832
  },
  "type": "constant"
 },
 "_regex_core.Range": {
  "data": {
   "lineno": 3208,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Range.__init__": {
  "data": {
   "lineno": 3215,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.NOCASE",
    "_regex_core.RegexBase",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.Range._compile": {
  "data": {
   "lineno": 3261,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.ZEROWIDTH_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Range.dump": {
  "data": {
   "lineno": 3272,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "ascii",
    "chr",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Range.matches": {
  "data": {
   "lineno": 3279
  },
  "type": "function"
 },
 "_regex_core.Range.max_width": {
  "data": {
   "lineno": 3282
  },
  "type": "function"
 },
 "_regex_core.Range.optimise": {
  "data": {
   "lineno": 3230,
   "symbols_in_volume": [
    "String",
    "_regex_core.Branch",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core._regex",
    "len",
    "ord"
   ]
  },
  "type": "function"
 },
 "_regex_core.Range.rebuild": {
  "data": {
   "lineno": 3227,
   "symbols_in_volume": [
    "_regex_core.Range"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup": {
  "data": {
   "lineno": 3285,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.RefGroup.__init__": {
  "data": {
   "lineno": 3292,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.NOCASE",
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup._compile": {
  "data": {
   "lineno": 3318,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup.dump": {
  "data": {
   "lineno": 3324,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup.fix_groups": {
  "data": {
   "lineno": 3301,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_regex_core.error",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup.max_width": {
  "data": {
   "lineno": 3328,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup.remove_captures": {
  "data": {
   "lineno": 3315,
   "symbols_in_volume": [
    "_regex_core.error"
   ]
  },
  "type": "function"
 },
 "_regex_core.RegexBase": {
  "data": {
   "lineno": 1845
  },
  "type": "class"
 },
 "_regex_core.RegexBase.__eq__": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.RegexBase.__hash__": {
  "data": {
   "lineno": 1902,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "_regex_core.RegexBase.__init__": {
  "data": {
   "lineno": 1846
  },
  "type": "function"
 },
 "_regex_core.RegexBase.__ne__": {
  "data": {
   "lineno": 1908
  },
  "type": "function"
 },
 "_regex_core.RegexBase.can_be_affix": {
  "data": {
   "lineno": 1884
  },
  "type": "function"
 },
 "_regex_core.RegexBase.compile": {
  "data": {
   "lineno": 1896
  },
  "type": "function"
 },
 "_regex_core.RegexBase.contains_group": {
  "data": {
   "lineno": 1887
  },
  "type": "function"
 },
 "_regex_core.RegexBase.fix_groups": {
  "data": {
   "lineno": 1869
  },
  "type": "function"
 },
 "_regex_core.RegexBase.get_firstset": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "_regex_core._FirstSetError"
   ]
  },
  "type": "function"
 },
 "_regex_core.RegexBase.get_required_string": {
  "data": {
   "lineno": 1911
  },
  "type": "function"
 },
 "_regex_core.RegexBase.has_simple_start": {
  "data": {
   "lineno": 1893
  },
  "type": "function"
 },
 "_regex_core.RegexBase.is_atomic": {
  "data": {
   "lineno": 1881
  },
  "type": "function"
 },
 "_regex_core.RegexBase.is_empty": {
  "data": {
   "lineno": 1899
  },
  "type": "function"
 },
 "_regex_core.RegexBase.optimise": {
  "data": {
   "lineno": 1872
  },
  "type": "function"
 },
 "_regex_core.RegexBase.pack_characters": {
  "data": {
   "lineno": 1875
  },
  "type": "function"
 },
 "_regex_core.RegexBase.remove_captures": {
  "data": {
   "lineno": 1878
  },
  "type": "function"
 },
 "_regex_core.RegexBase.with_flags": {
  "data": {
   "lineno": 1849,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS",
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.SCOPED_FLAGS": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "_regex_core.SET_OPS": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "_regex_core.SPECIAL_CHARS": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "_regex_core.Scanner": {
  "data": {
   "lineno": 4331
  },
  "type": "class"
 },
 "_regex_core.Scanner.__init__": {
  "data": {
   "lineno": 4332,
   "symbols_in_volume": [
    "ValueError",
    "_regex_core.Branch",
    "_regex_core.DEFAULT_VERSION",
    "_regex_core.GLOBAL_FLAGS",
    "_regex_core.Group",
    "_regex_core.Info",
    "_regex_core.OP",
    "_regex_core.Source",
    "_regex_core._ALL_VERSIONS",
    "_regex_core._FirstSetError",
    "_regex_core._check_group_features",
    "_regex_core._compile_firstset",
    "_regex_core._flatten_code",
    "_regex_core._get_required_string",
    "_regex_core._parse_pattern",
    "_regex_core._regex",
    "_regex_core.error",
    "bool",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Scanner.scan": {
  "data": {
   "lineno": 4405,
   "symbols_in_volume": [
    "_regex_core.string",
    "action",
    "append",
    "hasattr",
    "match"
   ]
  },
  "type": "function"
 },
 "_regex_core.SearchAnchor": {
  "data": {
   "lineno": 3331,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Sequence": {
  "data": {
   "lineno": 3335,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Sequence.__eq__": {
  "data": {
   "lineno": 3527,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.__init__": {
  "data": {
   "lineno": 3336,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence._compile": {
  "data": {
   "lineno": 3426
  },
  "type": "function"
 },
 "_regex_core.Sequence._fix_full_casefold": {
  "data": {
   "lineno": 3469,
   "symbols_in_volume": [
    "Literal",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core.Sequence",
    "_regex_core._regex",
    "_regex_core.string",
    "chr",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence._flush_characters": {
  "data": {
   "lineno": 3441,
   "symbols_in_volume": [
    "String",
    "_regex_core.Character",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.Sequence",
    "_regex_core.is_cased_i",
    "any",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence._merge_chunks": {
  "data": {
   "lineno": 3503,
   "symbols_in_volume": [
    "len",
    "max",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.can_be_affix": {
  "data": {
   "lineno": 3404
  },
  "type": "function"
 },
 "_regex_core.Sequence.contains_group": {
  "data": {
   "lineno": 3407,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.dump": {
  "data": {
   "lineno": 3437
  },
  "type": "function"
 },
 "_regex_core.Sequence.fix_groups": {
  "data": {
   "lineno": 3343
  },
  "type": "function"
 },
 "_regex_core.Sequence.get_firstset": {
  "data": {
   "lineno": 3410,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.get_required_string": {
  "data": {
   "lineno": 3533
  },
  "type": "function"
 },
 "_regex_core.Sequence.has_simple_start": {
  "data": {
   "lineno": 3423,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.is_atomic": {
  "data": {
   "lineno": 3401,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.is_empty": {
  "data": {
   "lineno": 3524,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.max_width": {
  "data": {
   "lineno": 3530,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.optimise": {
  "data": {
   "lineno": 3347,
   "symbols_in_volume": [
    "_regex_core.Sequence",
    "_regex_core.make_sequence",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.pack_characters": {
  "data": {
   "lineno": 3359,
   "symbols_in_volume": [
    "Literal",
    "String",
    "_regex_core.Character",
    "_regex_core.NOCASE",
    "_regex_core.Sequence",
    "_regex_core.is_cased_i",
    "_regex_core.make_sequence",
    "any",
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.remove_captures": {
  "data": {
   "lineno": 3397
  },
  "type": "function"
 },
 "_regex_core.SetBase": {
  "data": {
   "lineno": 3548,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.SetBase.__init__": {
  "data": {
   "lineno": 3549,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.NOCASE",
    "_regex_core.RegexBase",
    "bool",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase._compile": {
  "data": {
   "lineno": 3573,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.ZEROWIDTH_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase._handle_case_folding": {
  "data": {
   "lineno": 3595,
   "symbols_in_volume": [
    "String",
    "_regex_core.Branch",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core._regex",
    "ord",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase.dump": {
  "data": {
   "lineno": 3589,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase.get_firstset": {
  "data": {
   "lineno": 3567,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase.has_simple_start": {
  "data": {
   "lineno": 3570
  },
  "type": "function"
 },
 "_regex_core.SetBase.max_width": {
  "data": {
   "lineno": 3625,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core._regex",
    "len",
    "max",
    "ord",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase.rebuild": {
  "data": {
   "lineno": 3563,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetDiff": {
  "data": {
   "lineno": 3650,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.SetBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.SetDiff.matches": {
  "data": {
   "lineno": 3672
  },
  "type": "function"
 },
 "_regex_core.SetDiff.optimise": {
  "data": {
   "lineno": 3658,
   "symbols_in_volume": [
    "SetUnion",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetInter": {
  "data": {
   "lineno": 3676,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.SetBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.SetInter.matches": {
  "data": {
   "lineno": 3702,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetInter.optimise": {
  "data": {
   "lineno": 3684,
   "symbols_in_volume": [
    "_regex_core.SetInter",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetSymDiff": {
  "data": {
   "lineno": 3706,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.SetBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.SetSymDiff.matches": {
  "data": {
   "lineno": 3732
  },
  "type": "function"
 },
 "_regex_core.SetSymDiff.optimise": {
  "data": {
   "lineno": 3714,
   "symbols_in_volume": [
    "_regex_core.SetSymDiff",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetUnion": {
  "data": {
   "lineno": 3739,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.SetBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.SetUnion._compile": {
  "data": {
   "lineno": 3767,
   "symbols_in_volume": [
    "_regex_core.Character",
    "_regex_core.FUZZY_OP",
    "_regex_core.OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.ZEROWIDTH_OP",
    "collections.defaultdict",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetUnion.matches": {
  "data": {
   "lineno": 3801,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetUnion.optimise": {
  "data": {
   "lineno": 3747,
   "symbols_in_volume": [
    "_regex_core.SetUnion",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.Skip": {
  "data": {
   "lineno": 3805,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Source": {
  "data": {
   "lineno": 3984
  },
  "type": "class"
 },
 "_regex_core.Source.__init__": {
  "data": {
   "lineno": 3986,
   "symbols_in_volume": [
    "_regex_core.string",
    "bytes",
    "chr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.at_end": {
  "data": {
   "lineno": 4184,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.expect": {
  "data": {
   "lineno": 4180,
   "symbols_in_volume": [
    "_regex_core.error"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.get": {
  "data": {
   "lineno": 3998,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.get_many": {
  "data": {
   "lineno": 4026,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.get_while": {
  "data": {
   "lineno": 4064,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.match": {
  "data": {
   "lineno": 4141,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.skip_while": {
  "data": {
   "lineno": 4112,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.StartOfLine": {
  "data": {
   "lineno": 3809,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.StartOfLineU": {
  "data": {
   "lineno": 3813,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.StartOfLine"
   ]
  },
  "type": "class"
 },
 "_regex_core.StartOfString": {
  "data": {
   "lineno": 3817,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.StartOfWord": {
  "data": {
   "lineno": 3821,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.String": {
  "data": {
   "lineno": 3825,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.String.__init__": {
  "data": {
   "lineno": 3832,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core.NOCASE",
    "_regex_core._regex",
    "chr",
    "ord",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.String._compile": {
  "data": {
   "lineno": 3860,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.REQUIRED_OP",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.String.dump": {
  "data": {
   "lineno": 3869,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "ascii",
    "chr",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.String.get_firstset": {
  "data": {
   "lineno": 3849,
   "symbols_in_volume": [
    "_regex_core.Character",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.String.get_required_string": {
  "data": {
   "lineno": 3877
  },
  "type": "function"
 },
 "_regex_core.String.has_simple_start": {
  "data": {
   "lineno": 3857
  },
  "type": "function"
 },
 "_regex_core.String.max_width": {
  "data": {
   "lineno": 3874,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet": {
  "data": {
   "lineno": 3887,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.StringSet.__init__": {
  "data": {
   "lineno": 3894,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.NOCASE",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet._compile": {
  "data": {
   "lineno": 3905,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "_regex_core.Character",
    "_regex_core.Sequence",
    "_regex_core._ALL_ENCODINGS",
    "_regex_core.string",
    "len",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet._flatten": {
  "data": {
   "lineno": 3952,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "_regex_core.Character",
    "_regex_core.Sequence",
    "_regex_core.String",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet._folded": {
  "data": {
   "lineno": 3946,
   "symbols_in_volume": [
    "_regex_core._regex",
    "isinstance",
    "list",
    "ord",
    "str"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet.dump": {
  "data": {
   "lineno": 3942,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet.max_width": {
  "data": {
   "lineno": 3973,
   "symbols_in_volume": [
    "_regex_core._ALL_ENCODINGS",
    "_regex_core._regex",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "_regex_core.UNLIMITED": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "_regex_core.VERBS": {
  "data": {
   "lineno": 4483
  },
  "type": "constant"
 },
 "_regex_core.WORD_POSITION_ESCAPES": {
  "data": {
   "lineno": 4474
  },
  "type": "constant"
 },
 "_regex_core.ZEROWIDTH_OP": {
  "data": {
   "lineno": 1830
  },
  "type": "constant"
 },
 "_regex_core.ZeroWidthBase": {
  "data": {
   "lineno": 1915,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.ZeroWidthBase.__init__": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": [
    "_regex_core.RegexBase",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.ZeroWidthBase._compile": {
  "data": {
   "lineno": 1925,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.REVERSE_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.ZeroWidthBase.dump": {
  "data": {
   "lineno": 1935,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.ZeroWidthBase.get_firstset": {
  "data": {
   "lineno": 1922,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.ZeroWidthBase.max_width": {
  "data": {
   "lineno": 1939
  },
  "type": "function"
 },
 "_regex_core._ALL_ENCODINGS": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "_regex_core._ALL_VERSIONS": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "_regex_core._FirstSetError": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_regex_core._QUANTIFIERS": {
  "data": {
   "lineno": 516
  },
  "type": "constant"
 },
 "_regex_core._UnscopedFlagSet": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_regex_core.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "_regex_core._check_firstset": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "SetUnion",
    "_regex_core.NOCASE",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core._check_group_features": {
  "data": {
   "lineno": 4271,
   "symbols_in_volume": [
    "_regex_core.CallRef",
    "_regex_core.Fuzzy",
    "bool",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core._compile_firstset": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "_check_firstset",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core._compile_replacement": {
  "data": {
   "lineno": 1706,
   "symbols_in_volume": [
    "_regex_core.ALPHA",
    "_regex_core.DIGITS",
    "_regex_core.HEX_ESCAPES",
    "_regex_core.OCT_DIGITS",
    "_regex_core.error",
    "_regex_core.is_octal",
    "bytes",
    "compile_repl_group",
    "int",
    "isinstance",
    "len",
    "ord",
    "parse_repl_hex_escape",
    "parse_repl_named_char"
   ]
  },
  "type": "function"
 },
 "_regex_core._flatten_code": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "_regex_core._fold_case": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "_regex_core._ALL_ENCODINGS",
    "_regex_core._regex",
    "_regex_core.string"
   ]
  },
  "type": "function"
 },
 "_regex_core._get_required_string": {
  "data": {
   "lineno": 4310,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core._parse_pattern": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "Branch",
    "len",
    "parse_sequence"
   ]
  },
  "type": "function"
 },
 "_regex_core._posix_classes": {
  "data": {
   "lineno": 1632
  },
  "type": "constant"
 },
 "_regex_core._regex": {
  "data": {
   "shadows": "_regex"
  },
  "type": "import"
 },
 "_regex_core._shrink_cache": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "KeyError",
    "_regex_core.random",
    "hasattr",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.append_literal": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "Literal"
   ]
  },
  "type": "function"
 },
 "_regex_core.apply_constraint": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "Character",
    "Fuzzy",
    "_regex_core.error",
    "append_literal",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_regex_core.apply_quantifier": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "Character",
    "_regex_core.error",
    "append_literal",
    "repeated"
   ]
  },
  "type": "function"
 },
 "_regex_core.compile_repl_group": {
  "data": {
   "lineno": 1807,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "_regex_core.error",
    "_regex_core.parse_name",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "_regex_core.error": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_regex_core.error.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception.__init__",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_regex_core.float_to_rational": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "_regex_core.error",
    "abs",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_above_limit": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_cased_f": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "_regex_core._regex",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_cased_i": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "_regex_core._regex",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_decimal": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "_regex_core.DIGITS",
    "_regex_core.string",
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_hexadecimal": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "_regex_core.HEX_DIGITS",
    "_regex_core.string",
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_octal": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "_regex_core.OCT_DIGITS",
    "_regex_core.string",
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.lookup_property": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "Property",
    "_regex_core._posix_classes",
    "_regex_core.error",
    "_regex_core.standardise_name",
    "property"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_case_flags": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_character": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "Character",
    "_regex_core.make_case_flags"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_property": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "_regex_core.make_case_flags"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_ref_group": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "RefGroup",
    "_regex_core.make_case_flags"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_sequence": {
  "data": {
   "lineno": 1839,
   "symbols_in_volume": [
    "Sequence",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_string_set": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "StringSet",
    "_regex_core.make_case_flags"
   ]
  },
  "type": "function"
 },
 "_regex_core.name": {
  "data": {
   "lineno": 4434
  },
  "type": "constant"
 },
 "_regex_core.numeric_to_rational": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "ValueError",
    "_regex_core.float_to_rational",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_atomic": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "Atomic",
    "_regex_core._parse_pattern",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_call_group": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "CallGroup",
    "_regex_core.DIGITS"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_call_named_group": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "CallGroup",
    "parse_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_comment": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "_regex_core.COMMENT",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_common": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "Branch",
    "_regex_core.parse_sequence",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_conditional": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "Conditional",
    "Sequence",
    "_regex_core.error",
    "_regex_core.parse_sequence",
    "bool",
    "parse_lookaround_conditional",
    "parse_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_constraint": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "_regex_core.ParseError"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_cost_constraint": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "_regex_core.ALPHA",
    "_regex_core.DIGITS",
    "_regex_core.ParseError",
    "_regex_core.error",
    "parse_constraint",
    "parse_cost_limit",
    "parse_fuzzy_compare"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_cost_equation": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "_regex_core.ParseError",
    "_regex_core.error",
    "_regex_core.parse_fuzzy_compare",
    "int",
    "parse_cost_term",
    "parse_count"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_cost_limit": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "ValueError",
    "_regex_core.error",
    "int",
    "parse_count"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_cost_term": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "_regex_core.ParseError",
    "_regex_core.error",
    "int",
    "parse_count"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_count": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "_regex_core.DIGITS"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_escape": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "Character",
    "Grapheme",
    "SearchAnchor",
    "_regex_core.ALPHA",
    "_regex_core.DIGITS",
    "_regex_core.HEX_ESCAPES",
    "_regex_core.error",
    "_regex_core.make_character",
    "ord",
    "parse_group_ref",
    "parse_hex_escape",
    "parse_named_char",
    "parse_numeric_escape",
    "parse_property",
    "parse_string_set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_extension": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "Group",
    "_regex_core._parse_pattern",
    "_regex_core.error",
    "_regex_core.make_ref_group",
    "bool",
    "parse_call_named_group",
    "parse_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_flag_set": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "KeyError",
    "_regex_core.REGEX_FLAGS"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_flags": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "_regex_core.error",
    "_regex_core.parse_flag_set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_flags_subpattern": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "_regex_core.FLAGS",
    "_regex_core.GLOBAL_FLAGS",
    "_regex_core._UnscopedFlagSet",
    "_regex_core.error",
    "_regex_core.parse_flags",
    "_regex_core.parse_subpattern",
    "parse_positional_flags"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_fuzzy": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "_regex_core.ParseError",
    "_regex_core.error",
    "parse_fuzzy_item"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_fuzzy_compare": {
  "data": {
   "lineno": 681
  },
  "type": "function"
 },
 "_regex_core.parse_fuzzy_item": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "_regex_core.ParseError",
    "parse_cost_constraint",
    "parse_cost_equation"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_group_ref": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "_regex_core.error",
    "_regex_core.make_ref_group",
    "_regex_core.parse_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_hex_escape": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "ValueError",
    "_regex_core.HEX_DIGITS",
    "_regex_core.error",
    "_regex_core.make_character",
    "int",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_limited_quantifier": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "_regex_core.error",
    "_regex_core.is_above_limit",
    "int",
    "parse_count"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_literal_and_element": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "Any",
    "AnyAll",
    "AnyU",
    "EndOfLine",
    "EndOfLineU",
    "EndOfStringLine",
    "EndOfStringLineU",
    "StartOfLine",
    "StartOfLineU",
    "StartOfString",
    "_regex_core.COMMENT",
    "_regex_core.SPECIAL_CHARS",
    "_regex_core.make_case_flags",
    "ord",
    "parse_escape",
    "parse_paren",
    "parse_set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_lookaround": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "LookAround",
    "_regex_core._parse_pattern",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_lookaround_conditional": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "LookAroundConditional",
    "Sequence",
    "_regex_core._parse_pattern",
    "_regex_core.parse_sequence",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_name": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "_regex_core.error",
    "int",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_named_char": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "KeyError",
    "_regex_core.NAMED_CHAR_PART",
    "_regex_core.error",
    "_regex_core.make_character",
    "_regex_core.unicodedata",
    "ord"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_numeric_escape": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "_regex_core.DIGITS",
    "_regex_core.OCT_DIGITS",
    "_regex_core._ALL_ENCODINGS",
    "_regex_core.error",
    "_regex_core.is_octal",
    "_regex_core.make_character",
    "_regex_core.make_ref_group",
    "int",
    "parse_octal_escape"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_octal_escape": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "ValueError",
    "_regex_core.OCT_DIGITS",
    "_regex_core.error",
    "_regex_core.make_character",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_paren": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "Group",
    "_regex_core._parse_pattern",
    "_regex_core.error",
    "bool",
    "parse_atomic",
    "parse_call_group",
    "parse_call_named_group",
    "parse_comment",
    "parse_common",
    "parse_conditional",
    "parse_extension",
    "parse_flags_subpattern",
    "parse_lookaround",
    "parse_name",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_positional_flags": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "_regex_core.DEFAULT_VERSION",
    "_regex_core._ALL_VERSIONS",
    "_regex_core._UnscopedFlagSet",
    "_regex_core.error",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_posix_class": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "_regex_core.ParseError",
    "_regex_core.parse_property_name",
    "lookup_property"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_property": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "_regex_core.make_character",
    "_regex_core.make_property",
    "lookup_property",
    "ord",
    "parse_property_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_property_name": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "_regex_core.ALNUM",
    "_regex_core.PROPERTY_NAME_PART",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_quantifier": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "_regex_core._QUANTIFIERS",
    "parse_limited_quantifier"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_repl_hex_escape": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "_regex_core.HEX_DIGITS",
    "_regex_core.error",
    "int",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_repl_named_char": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "KeyError",
    "_regex_core.ALPHA",
    "_regex_core.error",
    "_regex_core.unicodedata",
    "ord",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_sequence": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_regex_core.COMMENT",
    "_regex_core.FLAGS",
    "append_literal",
    "apply_constraint",
    "apply_quantifier",
    "make_sequence",
    "ord",
    "parse_fuzzy",
    "parse_literal_and_element",
    "parse_quantifier",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "_regex_core.DEFAULT_VERSION",
    "_regex_core._ALL_VERSIONS",
    "_regex_core.error",
    "_regex_core.make_case_flags",
    "parse_set_imp_union",
    "parse_set_union"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_diff": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "SetDiff",
    "len",
    "parse_set_imp_union"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_imp_union": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "SetUnion",
    "_regex_core.DEFAULT_VERSION",
    "_regex_core.SET_OPS",
    "_regex_core._ALL_VERSIONS",
    "any",
    "len",
    "parse_set_member"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_inter": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "SetInter",
    "len",
    "parse_set_diff"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_item": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "Character",
    "_regex_core.DEFAULT_VERSION",
    "_regex_core.ParseError",
    "_regex_core._ALL_VERSIONS",
    "_regex_core.error",
    "_regex_core.parse_escape",
    "_regex_core.parse_set_union",
    "ord",
    "parse_posix_class"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_member": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "Character",
    "Range",
    "SetUnion",
    "_regex_core.DEFAULT_VERSION",
    "_regex_core._ALL_VERSIONS",
    "_regex_core.error",
    "isinstance",
    "ord",
    "parse_set_item"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_symm_diff": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "SetSymDiff",
    "len",
    "parse_set_inter"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_union": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "SetUnion",
    "len",
    "parse_set_symm_diff"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_string_set": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "_regex_core.error",
    "_regex_core.make_string_set",
    "_regex_core.parse_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_subpattern": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "_regex_core._parse_pattern",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "_regex_core.standardise_name": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "ValueError",
    "ZeroDivisionError",
    "_regex_core.numeric_to_rational"
   ]
  },
  "type": "function"
 },
 "_regex_core.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "_regex_core.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_regex_core.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "regex": {
  "data": {
   "symbols_in_volume": [
    "copyreg.pickle",
    "frozenset",
    "regex.DEFAULT_VERSION",
    "regex._compile",
    "regex._pattern_type",
    "regex._pickle",
    "regex._regex_core",
    "regex.compile",
    "threading.RLock",
    "type"
   ]
  },
  "type": "module"
 },
 "regex.DEFAULT_VERSION": {
  "data": {
   "lineno": 413
  },
  "type": "constant"
 },
 "regex.Regex": {
  "data": {
   "lineno": 691
  },
  "type": "constant"
 },
 "regex._ALL_ENCODINGS": {
  "data": {
   "shadows": "_regex_core._ALL_ENCODINGS"
  },
  "type": "import"
 },
 "regex._ALL_VERSIONS": {
  "data": {
   "shadows": "_regex_core._ALL_VERSIONS"
  },
  "type": "import"
 },
 "regex._ALNUM": {
  "data": {
   "shadows": "_regex_core.ALNUM"
  },
  "type": "import"
 },
 "regex._FirstSetError": {
  "data": {
   "shadows": "_regex_core._FirstSetError"
  },
  "type": "import"
 },
 "regex._Fuzzy": {
  "data": {
   "shadows": "_regex_core.Fuzzy"
  },
  "type": "import"
 },
 "regex._Info": {
  "data": {
   "shadows": "_regex_core.Info"
  },
  "type": "import"
 },
 "regex._MAXCACHE": {
  "data": {
   "lineno": 427
  },
  "type": "constant"
 },
 "regex._MAXREPCACHE": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "regex._METACHARS": {
  "data": {
   "lineno": 415
  },
  "type": "constant"
 },
 "regex._OP": {
  "data": {
   "shadows": "_regex_core.OP"
  },
  "type": "import"
 },
 "regex._RLock": {
  "data": {
   "shadows": "threading.RLock"
  },
  "type": "import"
 },
 "regex._Source": {
  "data": {
   "shadows": "_regex_core.Source"
  },
  "type": "import"
 },
 "regex._UnscopedFlagSet": {
  "data": {
   "shadows": "_regex_core._UnscopedFlagSet"
  },
  "type": "import"
 },
 "regex.__all__": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "regex.__version__": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "regex._cache": {
  "data": {
   "lineno": 420
  },
  "type": "constant"
 },
 "regex._cache_lock": {
  "data": {
   "lineno": 421
  },
  "type": "constant"
 },
 "regex._check_group_features": {
  "data": {
   "shadows": "_regex_core._check_group_features"
  },
  "type": "import"
 },
 "regex._compile": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "_regex_core.Fuzzy",
    "_regex_core.Info",
    "_regex_core.OP.CALL_REF",
    "_regex_core.OP.END",
    "_regex_core.OP.SUCCESS",
    "_regex_core.Source",
    "_regex_core._ALL_ENCODINGS",
    "_regex_core._ALL_VERSIONS",
    "_regex_core._FirstSetError",
    "_regex_core._UnscopedFlagSet",
    "_regex_core._check_group_features",
    "_regex_core._compile_firstset",
    "_regex_core._flatten_code",
    "_regex_core._fold_case",
    "_regex_core._get_required_string",
    "_regex_core._parse_pattern",
    "_regex_core._shrink_cache",
    "bool",
    "bytes",
    "dict",
    "error",
    "frozenset",
    "isinstance",
    "len",
    "locale.getpreferredencoding",
    "regex.DEFAULT_VERSION",
    "regex._MAXCACHE",
    "regex._cache",
    "regex._cache_lock",
    "regex._locale_sensitive",
    "regex._named_args",
    "regex._regex",
    "regex._regex_core",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "regex._compile_firstset": {
  "data": {
   "shadows": "_regex_core._compile_firstset"
  },
  "type": "import"
 },
 "regex._compile_replacement": {
  "data": {
   "shadows": "_regex_core._compile_replacement"
  },
  "type": "import"
 },
 "regex._compile_replacement_helper": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "_regex_core.Source",
    "_regex_core._compile_replacement",
    "isinstance",
    "len",
    "make_string",
    "ord",
    "regex._MAXREPCACHE",
    "regex._replacement_cache",
    "regex.template",
    "str"
   ]
  },
  "type": "function"
 },
 "regex._compile_replacement_helper.make_string": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "regex._copy_reg": {
  "data": {
   "shadows": "copyreg"
  },
  "type": "import"
 },
 "regex._flatten_code": {
  "data": {
   "shadows": "_regex_core._flatten_code"
  },
  "type": "import"
 },
 "regex._fold_case": {
  "data": {
   "shadows": "_regex_core._fold_case"
  },
  "type": "import"
 },
 "regex._get_required_string": {
  "data": {
   "shadows": "_regex_core._get_required_string"
  },
  "type": "import"
 },
 "regex._getpreferredencoding": {
  "data": {
   "shadows": "locale.getpreferredencoding"
  },
  "type": "import"
 },
 "regex._locale_sensitive": {
  "data": {
   "lineno": 424
  },
  "type": "constant"
 },
 "regex._named_args": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "regex._parse_pattern": {
  "data": {
   "shadows": "_regex_core._parse_pattern"
  },
  "type": "import"
 },
 "regex._pattern_type": {
  "data": {
   "lineno": 687
  },
  "type": "constant"
 },
 "regex._pickle": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "regex._regex"
   ]
  },
  "type": "function"
 },
 "regex._regex": {
  "data": {
   "shadows": "_regex"
  },
  "type": "import"
 },
 "regex._regex_core": {
  "data": {
   "shadows": "_regex_core"
  },
  "type": "import"
 },
 "regex._replacement_cache": {
  "data": {
   "lineno": 423
  },
  "type": "constant"
 },
 "regex._shrink_cache": {
  "data": {
   "shadows": "_regex_core._shrink_cache"
  },
  "type": "import"
 },
 "regex.compile": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.escape": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "regex.findall": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.finditer": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.fullmatch": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.match": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.purge": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "regex.search": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.split": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.splititer": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.sub": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.subf": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "_compile",
    "format"
   ]
  },
  "type": "function"
 },
 "regex.subfn": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "_compile",
    "format"
   ]
  },
  "type": "function"
 },
 "regex.subn": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.template": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "test_regex": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test_regex.RegexTests",
    "test_regex.sys",
    "test_regex.test_main"
   ]
  },
  "type": "module"
 },
 "test_regex.BytesSubclass": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "class"
 },
 "test_regex.BytesSubclass.__getitem__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "super",
    "test_regex.BytesSubclass"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "test_regex.unittest"
   ]
  },
  "type": "class"
 },
 "test_regex.RegexTests.assertTypedEqual": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "recurse"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.assertTypedEqual.recurse": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "recurse",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.bump_num": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_anyall": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_ascii_and_unicode_flag": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_atomic": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_basic_regex_sub": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "chr",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bigcharset": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_branch_reset": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_10328": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_113254": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_114660": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_117612": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_14462": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_1661": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_3629": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_418626": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_448951": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_449000": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_449964": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_462270": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_527371": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_545855": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_581080": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_612074": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_725106": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_725149": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_764548": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "my_unicode",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_764548.my_unicode": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "test_regex.RegexTests.test_bug_817234": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_926075": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_931848": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bytes_str_mixing": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_captures": {
  "data": {
   "lineno": 2513,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_case_folding": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_category": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_common_prefix": {
  "data": {
   "lineno": 2506,
   "symbols_in_volume": [
    "all",
    "repr",
    "test_regex.regex",
    "test_regex.string",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_constants": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_copy": {
  "data": {
   "lineno": 2889,
   "symbols_in_volume": [
    "next",
    "test_regex.copy",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_dollar_matches_twice": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_empty_array": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "test_regex.array",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_expand": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_finditer": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_flags": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_format": {
  "data": {
   "lineno": 2932,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_fullmatch": {
  "data": {
   "lineno": 2946,
   "symbols_in_volume": [
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_fuzzy": {
  "data": {
   "lineno": 2633,
   "symbols_in_volume": [
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_getattr": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_grapheme": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_groupdict": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_guards": {
  "data": {
   "lineno": 2533,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_hg_bugs": {
  "data": {
   "lineno": 3101,
   "symbols_in_volume": [
    "ascii",
    "bool",
    "bytes",
    "chr",
    "len",
    "range",
    "test_regex.pickle",
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_ignore_case": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_inline_flags": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "bool",
    "chr",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_issue_18468": {
  "data": {
   "lineno": 2968,
   "symbols_in_volume": [
    "bytearray",
    "memoryview",
    "test_regex.BytesSubclass",
    "test_regex.StrSubclass",
    "test_regex.regex",
    "test_regex.string",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_line_boundary": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_lookbehind": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "bool",
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_more_zerowidth": {
  "data": {
   "lineno": 4038,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_named_lists": {
  "data": {
   "lineno": 2579,
   "symbols_in_volume": [
    "repr",
    "set",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_new_named_groups": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_non_consuming": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_not_literal": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_overlapped": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_partial": {
  "data": {
   "lineno": 3048,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_possessive": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_properties": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "Exception",
    "ascii",
    "bool",
    "set",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_qualified_re_split": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_qualified_re_sub": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_escape": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "bool",
    "chr",
    "range",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_escape_byte": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "range",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_findall": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_groupref": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_groupref_exists": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_match": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_split": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_subn": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_recursive": {
  "data": {
   "lineno": 2818,
   "symbols_in_volume": [
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_repeat_minmax": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_repeated_repeats": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_replacement": {
  "data": {
   "lineno": 2497,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scanner": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scanner.s_float": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scanner.s_ident": {
  "data": {
   "lineno": 806
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scanner.s_int": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scanner.s_operator": {
  "data": {
   "lineno": 807
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scoped_and_inline_flags": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_search_anchor": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_search_coverage": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_search_reverse": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_search_star_plus": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_set": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "chr",
    "len",
    "range",
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_special_escapes": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_splititer": {
  "data": {
   "lineno": 1536,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_sre_character_class_literals": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "bool",
    "chr",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_sre_character_literals": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "bool",
    "chr",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_stack_overflow": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_sub_template_numeric_escape": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_subscripted_captures": {
  "data": {
   "lineno": 4019,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_subscripting_match": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "ascii",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_symbolic_refs": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "IndexError",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_turkic": {
  "data": {
   "lineno": 2553,
   "symbols_in_volume": [
    "ascii",
    "set",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_unmatched_in_sub": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_various": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "ValueError",
    "ascii",
    "chr",
    "int",
    "len",
    "test_regex.regex",
    "test_regex.string",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_weakref": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "test_regex.regex",
    "weakref.proxy"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_word_boundary": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_word_class": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_zerowidth": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.StrSubclass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "test_regex.StrSubclass.__getitem__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "super",
    "test_regex.StrSubclass"
   ]
  },
  "type": "function"
 },
 "test_regex.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "test_regex.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "test_regex.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "test_regex.proxy": {
  "data": {
   "shadows": "weakref.proxy"
  },
  "type": "import"
 },
 "test_regex.regex": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "test_regex.run_unittest": {
  "data": {
   "shadows": "test.support.run_unittest"
  },
  "type": "import"
 },
 "test_regex.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "test_regex.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "test_regex.test_main": {
  "data": {
   "lineno": 4054,
   "symbols_in_volume": [
    "test.support.run_unittest",
    "test_regex.RegexTests"
   ]
  },
  "type": "function"
 },
 "test_regex.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}