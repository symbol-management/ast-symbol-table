{
 "regex": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regex._regex_core": {
  "lineno": null,
  "symbols_in_volume": [
   "regex._regex.get_code_size",
   "regex._regex.get_properties",
   "string.ascii_letters",
   "string.digits",
   "string.hexdigits",
   "string.octdigits"
  ],
  "type": "module"
 },
 "regex._regex_core.Any": {
  "lineno": 1915,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Any._compile": {
  "lineno": 1922,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Any.dump": {
  "lineno": 1928,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Any.has_simple_start": {
  "lineno": 1919,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Any.max_width": {
  "lineno": 1931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.AnyAll": {
  "lineno": 1934,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.AnyU": {
  "lineno": 1938,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Atomic": {
  "lineno": 1942,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Atomic.__eq__": {
  "lineno": 1988,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.__init__": {
  "lineno": 1943,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic._compile": {
  "lineno": 1977,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.can_be_affix": {
  "lineno": 1965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.contains_group": {
  "lineno": 1968,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.dump": {
  "lineno": 1981,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.fix_groups": {
  "lineno": 1947,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.get_firstset": {
  "lineno": 1971,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.get_required_string": {
  "lineno": 1995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.has_simple_start": {
  "lineno": 1974,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.is_empty": {
  "lineno": 1985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.max_width": {
  "lineno": 1992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.optimise": {
  "lineno": 1950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.pack_characters": {
  "lineno": 1957,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.remove_captures": {
  "lineno": 1961,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Boundary": {
  "lineno": 1998,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Branch": {
  "lineno": 2002,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Branch.__eq__": {
  "lineno": 2385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.__init__": {
  "lineno": 2003,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._add_precheck": {
  "lineno": 2046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._can_split": {
  "lineno": 2198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._can_split_rev": {
  "lineno": 2223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._compile": {
  "lineno": 2085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._flatten_branches": {
  "lineno": 2102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._flush_char_prefix": {
  "lineno": 2310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._flush_set_members": {
  "lineno": 2336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._is_folded": {
  "lineno": 2360,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "regex._regex.get_expand_on_folding"
  ],
  "type": "function"
 },
 "regex._regex_core.Branch._is_full_case": {
  "lineno": 2351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._is_simple_character": {
  "lineno": 2278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._merge_common_prefixes": {
  "lineno": 2250,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "regex._regex_core.Branch._reduce_to_set": {
  "lineno": 2282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._split_common_prefix": {
  "lineno": 2115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._split_common_suffix": {
  "lineno": 2157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.can_be_affix": {
  "lineno": 2072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.contains_group": {
  "lineno": 2075,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.dump": {
  "lineno": 2095,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.fix_groups": {
  "lineno": 2007,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.get_firstset": {
  "lineno": 2078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.is_atomic": {
  "lineno": 2069,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.is_empty": {
  "lineno": 2382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.max_width": {
  "lineno": 2388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.optimise": {
  "lineno": 2011,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.pack_characters": {
  "lineno": 2061,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.remove_captures": {
  "lineno": 2065,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup": {
  "lineno": 2391,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.CallGroup.__del__": {
  "lineno": 2434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.__eq__": {
  "lineno": 2428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.__init__": {
  "lineno": 2392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup._compile": {
  "lineno": 2422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.dump": {
  "lineno": 2425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.fix_groups": {
  "lineno": 2400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.max_width": {
  "lineno": 2431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.remove_captures": {
  "lineno": 2419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallRef": {
  "lineno": 2437,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.CallRef.__init__": {
  "lineno": 2438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallRef._compile": {
  "lineno": 2442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character": {
  "lineno": 2446,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Character.__init__": {
  "lineno": 2453,
  "symbols_in_volume": [
   "regex._regex.fold_case"
  ],
  "type": "function"
 },
 "regex._regex_core.Character._compile": {
  "lineno": 2482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.dump": {
  "lineno": 2501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.get_firstset": {
  "lineno": 2476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.get_required_string": {
  "lineno": 2512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.has_simple_start": {
  "lineno": 2479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.matches": {
  "lineno": 2506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.max_width": {
  "lineno": 2509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.optimise": {
  "lineno": 2473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.rebuild": {
  "lineno": 2470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional": {
  "lineno": 2520,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Conditional.__del__": {
  "lineno": 2606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.__eq__": {
  "lineno": 2599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.__init__": {
  "lineno": 2521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional._compile": {
  "lineno": 2577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.can_be_affix": {
  "lineno": 2567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.contains_group": {
  "lineno": 2570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.dump": {
  "lineno": 2589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.fix_groups": {
  "lineno": 2529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.get_firstset": {
  "lineno": 2573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.is_atomic": {
  "lineno": 2564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.is_empty": {
  "lineno": 2596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.max_width": {
  "lineno": 2603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.optimise": {
  "lineno": 2549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.pack_characters": {
  "lineno": 2555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.remove_captures": {
  "lineno": 2560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.DefaultBoundary": {
  "lineno": 2609,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.DefaultEndOfWord": {
  "lineno": 2613,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.DefaultStartOfWord": {
  "lineno": 2617,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfLine": {
  "lineno": 2621,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfLineU": {
  "lineno": 2625,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfString": {
  "lineno": 2629,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfStringLine": {
  "lineno": 2633,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfStringLineU": {
  "lineno": 2637,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfWord": {
  "lineno": 2641,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Failure": {
  "lineno": 2645,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Failure._compile": {
  "lineno": 2648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy": {
  "lineno": 2651,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Fuzzy.__eq__": {
  "lineno": 2744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.__init__": {
  "lineno": 2652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy._compile": {
  "lineno": 2704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy._constraints_to_string": {
  "lineno": 2751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.contains_group": {
  "lineno": 2701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.dump": {
  "lineno": 2734,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.fix_groups": {
  "lineno": 2687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.is_atomic": {
  "lineno": 2698,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.is_empty": {
  "lineno": 2741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.max_width": {
  "lineno": 2748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.pack_characters": {
  "lineno": 2690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.remove_captures": {
  "lineno": 2694,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Grapheme": {
  "lineno": 2784,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Grapheme._compile": {
  "lineno": 2785,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Grapheme.dump": {
  "lineno": 2793,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Grapheme.max_width": {
  "lineno": 2796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GraphemeBoundary": {
  "lineno": 2799,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.GraphemeBoundary.compile": {
  "lineno": 2800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat": {
  "lineno": 2803,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.GreedyRepeat.__eq__": {
  "lineno": 2871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.__init__": {
  "lineno": 2807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat._compile": {
  "lineno": 2845,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.can_be_affix": {
  "lineno": 2832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.contains_group": {
  "lineno": 2835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.dump": {
  "lineno": 2858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.fix_groups": {
  "lineno": 2813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.get_firstset": {
  "lineno": 2838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.get_required_string": {
  "lineno": 2882,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.is_atomic": {
  "lineno": 2829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.is_empty": {
  "lineno": 2868,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.max_width": {
  "lineno": 2876,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.optimise": {
  "lineno": 2816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.pack_characters": {
  "lineno": 2821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.remove_captures": {
  "lineno": 2825,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group": {
  "lineno": 2925,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Group.__del__": {
  "lineno": 3003,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.__eq__": {
  "lineno": 2993,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.__init__": {
  "lineno": 2926,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group._compile": {
  "lineno": 2965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.can_be_affix": {
  "lineno": 2953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.contains_group": {
  "lineno": 2956,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.dump": {
  "lineno": 2986,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.fix_groups": {
  "lineno": 2934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.get_firstset": {
  "lineno": 2959,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.get_required_string": {
  "lineno": 3000,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.has_simple_start": {
  "lineno": 2962,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.is_atomic": {
  "lineno": 2950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.max_width": {
  "lineno": 2997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.optimise": {
  "lineno": 2938,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.pack_characters": {
  "lineno": 2943,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.remove_captures": {
  "lineno": 2947,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Info": {
  "lineno": 4180,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Info.__init__": {
  "lineno": 4183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Info.close_group": {
  "lineno": 4228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Info.is_open_group": {
  "lineno": 4231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Info.open_group": {
  "lineno": 4202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Keep": {
  "lineno": 3006,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.LazyRepeat": {
  "lineno": 3010,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Literal": {
  "lineno": 3910,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Literal.dump": {
  "lineno": 3911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround": {
  "lineno": 3014,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.LookAround.__eq__": {
  "lineno": 3075,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.__init__": {
  "lineno": 3017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround._compile": {
  "lineno": 3055,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.can_be_affix": {
  "lineno": 3043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.contains_group": {
  "lineno": 3046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.dump": {
  "lineno": 3067,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.fix_groups": {
  "lineno": 3023,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.get_firstset": {
  "lineno": 3049,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.is_atomic": {
  "lineno": 3040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.is_empty": {
  "lineno": 3072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.max_width": {
  "lineno": 3079,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.optimise": {
  "lineno": 3026,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.pack_characters": {
  "lineno": 3033,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.remove_captures": {
  "lineno": 3037,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional": {
  "lineno": 3082,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.LookAroundConditional.__eq__": {
  "lineno": 3157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.__init__": {
  "lineno": 3085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional._compile": {
  "lineno": 3129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.can_be_affix": {
  "lineno": 3121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.contains_group": {
  "lineno": 3125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.dump": {
  "lineno": 3143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.fix_groups": {
  "lineno": 3093,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.get_required_string": {
  "lineno": 3164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.is_atomic": {
  "lineno": 3117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.is_empty": {
  "lineno": 3153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.max_width": {
  "lineno": 3161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.optimise": {
  "lineno": 3098,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.pack_characters": {
  "lineno": 3106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.remove_captures": {
  "lineno": 3112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Namespace": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.ParseError": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.PossessiveRepeat": {
  "lineno": 2895,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.PossessiveRepeat._compile": {
  "lineno": 2899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.PossessiveRepeat.dump": {
  "lineno": 2913,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.PossessiveRepeat.is_atomic": {
  "lineno": 2896,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.PrecompiledCode": {
  "lineno": 3167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.PrecompiledCode.__init__": {
  "lineno": 3168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.PrecompiledCode._compile": {
  "lineno": 3171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property": {
  "lineno": 3174,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Property.__init__": {
  "lineno": 3181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property._compile": {
  "lineno": 3204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.dump": {
  "lineno": 3214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.get_firstset": {
  "lineno": 3198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.has_simple_start": {
  "lineno": 3201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.matches": {
  "lineno": 3220,
  "symbols_in_volume": [
   "regex._regex.has_property_value"
  ],
  "type": "function"
 },
 "regex._regex_core.Property.max_width": {
  "lineno": 3223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.optimise": {
  "lineno": 3195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.rebuild": {
  "lineno": 3192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Prune": {
  "lineno": 3226,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Prune._compile": {
  "lineno": 3229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range": {
  "lineno": 3232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Range.__init__": {
  "lineno": 3239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range._compile": {
  "lineno": 3285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range.dump": {
  "lineno": 3296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range.matches": {
  "lineno": 3303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range.max_width": {
  "lineno": 3306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range.optimise": {
  "lineno": 3254,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "regex._regex.get_expand_on_folding"
  ],
  "type": "function"
 },
 "regex._regex_core.Range.rebuild": {
  "lineno": 3251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup": {
  "lineno": 3309,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.RefGroup.__del__": {
  "lineno": 3355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup.__init__": {
  "lineno": 3316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup._compile": {
  "lineno": 3342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup.dump": {
  "lineno": 3348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup.fix_groups": {
  "lineno": 3325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup.max_width": {
  "lineno": 3352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup.remove_captures": {
  "lineno": 3339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase": {
  "lineno": 1818,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.RegexBase.__eq__": {
  "lineno": 1878,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.__hash__": {
  "lineno": 1875,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.__init__": {
  "lineno": 1819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.__ne__": {
  "lineno": 1881,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.can_be_affix": {
  "lineno": 1857,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.compile": {
  "lineno": 1869,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.contains_group": {
  "lineno": 1860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.fix_groups": {
  "lineno": 1842,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.get_firstset": {
  "lineno": 1863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.get_required_string": {
  "lineno": 1884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.has_simple_start": {
  "lineno": 1866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.is_atomic": {
  "lineno": 1854,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.is_empty": {
  "lineno": 1872,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.optimise": {
  "lineno": 1845,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.pack_characters": {
  "lineno": 1848,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.remove_captures": {
  "lineno": 1851,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.with_flags": {
  "lineno": 1822,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Scanner": {
  "lineno": 4305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Scanner.__init__": {
  "lineno": 4306,
  "symbols_in_volume": [
   "regex._regex.compile"
  ],
  "type": "function"
 },
 "regex._regex_core.Scanner.scan": {
  "lineno": 4379,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core.SearchAnchor": {
  "lineno": 3358,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Sequence": {
  "lineno": 3362,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Sequence.__eq__": {
  "lineno": 3554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.__init__": {
  "lineno": 3363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence._compile": {
  "lineno": 3453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence._fix_full_casefold": {
  "lineno": 3496,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "regex._regex.get_expand_on_folding",
   "string",
   "string.find"
  ],
  "type": "function"
 },
 "regex._regex_core.Sequence._flush_characters": {
  "lineno": 3468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence._merge_chunks": {
  "lineno": 3530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.can_be_affix": {
  "lineno": 3431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.contains_group": {
  "lineno": 3434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.dump": {
  "lineno": 3464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.fix_groups": {
  "lineno": 3370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.get_firstset": {
  "lineno": 3437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.get_required_string": {
  "lineno": 3560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.has_simple_start": {
  "lineno": 3450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.is_atomic": {
  "lineno": 3428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.is_empty": {
  "lineno": 3551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.max_width": {
  "lineno": 3557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.optimise": {
  "lineno": 3374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.pack_characters": {
  "lineno": 3386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.remove_captures": {
  "lineno": 3424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase": {
  "lineno": 3575,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.SetBase.__del__": {
  "lineno": 3677,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase.__init__": {
  "lineno": 3576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase._compile": {
  "lineno": 3600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase._handle_case_folding": {
  "lineno": 3622,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "regex._regex.get_expand_on_folding"
  ],
  "type": "function"
 },
 "regex._regex_core.SetBase.dump": {
  "lineno": 3616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase.get_firstset": {
  "lineno": 3594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase.has_simple_start": {
  "lineno": 3597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase.max_width": {
  "lineno": 3652,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "regex._regex.get_expand_on_folding"
  ],
  "type": "function"
 },
 "regex._regex_core.SetBase.rebuild": {
  "lineno": 3590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetDiff": {
  "lineno": 3680,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.SetDiff.matches": {
  "lineno": 3702,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetDiff.optimise": {
  "lineno": 3688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetInter": {
  "lineno": 3706,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.SetInter.matches": {
  "lineno": 3732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetInter.optimise": {
  "lineno": 3714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetSymDiff": {
  "lineno": 3736,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.SetSymDiff.matches": {
  "lineno": 3762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetSymDiff.optimise": {
  "lineno": 3744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetUnion": {
  "lineno": 3769,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.SetUnion._compile": {
  "lineno": 3797,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "regex._regex_core.SetUnion.matches": {
  "lineno": 3831,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetUnion.optimise": {
  "lineno": 3777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Skip": {
  "lineno": 3835,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Source": {
  "lineno": 3958,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Source.__init__": {
  "lineno": 3960,
  "symbols_in_volume": [
   "string",
   "string.decode"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.at_end": {
  "lineno": 4158,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.expect": {
  "lineno": 4154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Source.get": {
  "lineno": 3972,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.get_many": {
  "lineno": 4000,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.get_while": {
  "lineno": 4038,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.match": {
  "lineno": 4115,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace",
   "string.startswith"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.skip_while": {
  "lineno": 4086,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace"
  ],
  "type": "function"
 },
 "regex._regex_core.StartOfLine": {
  "lineno": 3839,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.StartOfLineU": {
  "lineno": 3843,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.StartOfString": {
  "lineno": 3847,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.StartOfWord": {
  "lineno": 3851,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.String": {
  "lineno": 3855,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.String.__init__": {
  "lineno": 3862,
  "symbols_in_volume": [
   "regex._regex.fold_case"
  ],
  "type": "function"
 },
 "regex._regex_core.String._compile": {
  "lineno": 3890,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.String.dump": {
  "lineno": 3899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.String.get_firstset": {
  "lineno": 3879,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.String.get_required_string": {
  "lineno": 3907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.String.has_simple_start": {
  "lineno": 3887,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.String.max_width": {
  "lineno": 3904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.StringSet": {
  "lineno": 3917,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.StringSet.__del__": {
  "lineno": 3955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.StringSet.__init__": {
  "lineno": 3918,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core.StringSet.dump": {
  "lineno": 3951,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.ZeroWidthBase": {
  "lineno": 1888,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.ZeroWidthBase.__init__": {
  "lineno": 1889,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.ZeroWidthBase._compile": {
  "lineno": 1898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.ZeroWidthBase.dump": {
  "lineno": 1908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.ZeroWidthBase.get_firstset": {
  "lineno": 1895,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.ZeroWidthBase.max_width": {
  "lineno": 1912,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._FirstSetError": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core._UnscopedFlagSet": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core._check_firstset": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._check_group_features": {
  "lineno": 4245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._compile_firstset": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._compile_replacement": {
  "lineno": 1679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._flatten_code": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._fold_case": {
  "lineno": 284,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core._get_required_string": {
  "lineno": 4284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._parse_pattern": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._shrink_cache": {
  "lineno": 234,
  "symbols_in_volume": [
   "random",
   "random.sample"
  ],
  "type": "function"
 },
 "regex._regex_core.apply_constraint": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.apply_quantifier": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.compile_repl_group": {
  "lineno": 1780,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.error": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.error.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.float_to_rational": {
  "lineno": 1566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.is_above_limit": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.is_cased_f": {
  "lineno": 296,
  "symbols_in_volume": [
   "regex._regex.get_all_cases"
  ],
  "type": "function"
 },
 "regex._regex_core.is_cased_i": {
  "lineno": 292,
  "symbols_in_volume": [
   "regex._regex.get_all_cases"
  ],
  "type": "function"
 },
 "regex._regex_core.is_decimal": {
  "lineno": 1159,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core.is_hexadecimal": {
  "lineno": 1163,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core.is_octal": {
  "lineno": 1155,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core.lookup_property": {
  "lineno": 1609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_case_flags": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_character": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_property": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_ref_group": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_sequence": {
  "lineno": 1812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_string_set": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.numeric_to_rational": {
  "lineno": 1577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_atomic": {
  "lineno": 986,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_call_group": {
  "lineno": 1016,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_call_named_group": {
  "lineno": 1027,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_comment": {
  "lineno": 894,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_common": {
  "lineno": 998,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_conditional": {
  "lineno": 923,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_constraint": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_cost_constraint": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_cost_equation": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_cost_limit": {
  "lineno": 668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_cost_term": {
  "lineno": 726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_count": {
  "lineno": 764,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_escape": {
  "lineno": 1167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_extension": {
  "lineno": 858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_flag_set": {
  "lineno": 1034,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_flags": {
  "lineno": 1050,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_flags_subpattern": {
  "lineno": 1081,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_fuzzy": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_fuzzy_compare": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_fuzzy_item": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_fuzzy_test": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_group_ref": {
  "lineno": 1309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_hex_escape": {
  "lineno": 1286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_limited_quantifier": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_lookaround": {
  "lineno": 911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_lookaround_conditional": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_name": {
  "lineno": 1136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_named_char": {
  "lineno": 1330,
  "symbols_in_volume": [
   "unicodedata.lookup"
  ],
  "type": "function"
 },
 "regex._regex_core.parse_numeric_escape": {
  "lineno": 1232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_octal_escape": {
  "lineno": 1265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_paren": {
  "lineno": 768,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_positional_flags": {
  "lineno": 1116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_posix_class": {
  "lineno": 1557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_property": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_property_name": {
  "lineno": 1367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_quantifier": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_repl_hex_escape": {
  "lineno": 1751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_repl_named_char": {
  "lineno": 1763,
  "symbols_in_volume": [
   "unicodedata.lookup"
  ],
  "type": "function"
 },
 "regex._regex_core.parse_sequence": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set": {
  "lineno": 1389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_diff": {
  "lineno": 1445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_imp_union": {
  "lineno": 1455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_inter": {
  "lineno": 1435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_item": {
  "lineno": 1519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_member": {
  "lineno": 1478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_symm_diff": {
  "lineno": 1425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_union": {
  "lineno": 1415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_string_set": {
  "lineno": 1320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_subpattern": {
  "lineno": 1067,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.standardise_name": {
  "lineno": 1598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex": {
  "lineno": null,
  "symbols_in_volume": [
   "copyreg.pickle",
   "regex._regex_core.DEFAULT_VERSION",
   "threading.RLock"
  ],
  "type": "module"
 },
 "regex.regex._compile": {
  "lineno": 436,
  "symbols_in_volume": [
   "locale.getpreferredencoding",
   "regex.DEFAULT_VERSION",
   "regex._regex.compile",
   "regex._regex_core.DEFAULT_VERSION",
   "regex._regex_core.Fuzzy",
   "regex._regex_core.Info",
   "regex._regex_core.OP.CALL_REF",
   "regex._regex_core.OP.END",
   "regex._regex_core.OP.SUCCESS",
   "regex._regex_core.Source",
   "regex._regex_core._ALL_ENCODINGS",
   "regex._regex_core._ALL_VERSIONS",
   "regex._regex_core._FirstSetError",
   "regex._regex_core._UnscopedFlagSet",
   "regex._regex_core._check_group_features",
   "regex._regex_core._compile_firstset",
   "regex._regex_core._flatten_code",
   "regex._regex_core._fold_case",
   "regex._regex_core._get_required_string",
   "regex._regex_core._parse_pattern",
   "regex._regex_core._shrink_cache"
  ],
  "type": "function"
 },
 "regex.regex._compile_replacement_helper": {
  "lineno": 652,
  "symbols_in_volume": [
   "regex._regex_core.Source",
   "regex._regex_core._compile_replacement"
  ],
  "type": "function"
 },
 "regex.regex._compile_replacement_helper.make_string": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex._pickle": {
  "lineno": 715,
  "symbols_in_volume": [
   "regex._regex.compile"
  ],
  "type": "function"
 },
 "regex.regex.compile": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.escape": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.findall": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.finditer": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.fullmatch": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.match": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.purge": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.search": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.split": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.splititer": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.sub": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.subf": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.subfn": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.subn": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.template": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "regex.test_regex.BytesSubclass": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex.test_regex.BytesSubclass.__getitem__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests": {
  "lineno": 18,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "regex.test_regex.RegexTests.assertTypedEqual": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.assertTypedEqual.recurse": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.bump_num": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_anyall": {
  "lineno": 545,
  "symbols_in_volume": [
   "regex.DOTALL",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_ascii_and_unicode_flag": {
  "lineno": 971,
  "symbols_in_volume": [
   "regex.ASCII",
   "regex.IGNORECASE",
   "regex.UNICODE",
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_atomic": {
  "lineno": 1313,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_basic_regex_sub": {
  "lineno": 82,
  "symbols_in_volume": [
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bigcharset": {
  "lineno": 530,
  "symbols_in_volume": [
   "regex.UNICODE",
   "regex.findall",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_branch_reset": {
  "lineno": 1620,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_10328": {
  "lineno": 1496,
  "symbols_in_volume": [
   "regex.compile",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_113254": {
  "lineno": 759,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_114660": {
  "lineno": 213,
  "symbols_in_volume": [
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_117612": {
  "lineno": 351,
  "symbols_in_volume": [
   "regex.findall"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_14462": {
  "lineno": 226,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_1661": {
  "lineno": 135,
  "symbols_in_volume": [
   "regex.I",
   "regex.compile",
   "regex.findall",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_3629": {
  "lineno": 147,
  "symbols_in_volume": [
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_418626": {
  "lineno": 779,
  "symbols_in_volume": [
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_448951": {
  "lineno": 821,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_449000": {
  "lineno": 124,
  "symbols_in_volume": [
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_449964": {
  "lineno": 119,
  "symbols_in_volume": [
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_462270": {
  "lineno": 217,
  "symbols_in_volume": [
   "regex.sub",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_527371": {
  "lineno": 764,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_545855": {
  "lineno": 773,
  "symbols_in_volume": [
   "regex.compile",
   "regex.error"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_581080": {
  "lineno": 874,
  "symbols_in_volume": [
   "regex.compile",
   "regex.finditer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_612074": {
  "lineno": 794,
  "symbols_in_volume": [
   "regex.compile",
   "regex.escape"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_725106": {
  "lineno": 830,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_725149": {
  "lineno": 848,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_764548": {
  "lineno": 855,
  "symbols_in_volume": [
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_764548.my_unicode": {
  "lineno": 857,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex.test_regex.RegexTests.test_bug_817234": {
  "lineno": 883,
  "symbols_in_volume": [
   "regex.finditer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_926075": {
  "lineno": 865,
  "symbols_in_volume": [
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_931848": {
  "lineno": 869,
  "symbols_in_volume": [
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bytes_str_mixing": {
  "lineno": 937,
  "symbols_in_volume": [
   "regex.ASCII",
   "regex.UNICODE",
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_captures": {
  "lineno": 2514,
  "symbols_in_volume": [
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_case_folding": {
  "lineno": 590,
  "symbols_in_volume": [
   "regex.findall",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_category": {
  "lineno": 678,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_common_prefix": {
  "lineno": 2507,
  "symbols_in_volume": [
   "regex.compile",
   "string.ascii_lowercase",
   "string.ascii_uppercase",
   "string.digits"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_constants": {
  "lineno": 714,
  "symbols_in_volume": [
   "regex.DOTALL",
   "regex.I",
   "regex.IGNORECASE",
   "regex.L",
   "regex.LOCALE",
   "regex.M",
   "regex.MULTILINE",
   "regex.S",
   "regex.VERBOSE",
   "regex.X"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_copy": {
  "lineno": 2898,
  "symbols_in_volume": [
   "copy.copy",
   "copy.deepcopy",
   "regex.compile",
   "regex.finditer",
   "regex.splititer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_dollar_matches_twice": {
  "lineno": 925,
  "symbols_in_volume": [
   "regex.MULTILINE",
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_empty_array": {
  "lineno": 889,
  "symbols_in_volume": [
   "array.array",
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_expand": {
  "lineno": 425,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_finditer": {
  "lineno": 861,
  "symbols_in_volume": [
   "regex.finditer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_flags": {
  "lineno": 726,
  "symbols_in_volume": [
   "regex.I",
   "regex.L",
   "regex.M",
   "regex.S",
   "regex.X",
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_format": {
  "lineno": 2941,
  "symbols_in_volume": [
   "regex.match",
   "regex.subf",
   "regex.subfn"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_fullmatch": {
  "lineno": 2955,
  "symbols_in_volume": [
   "regex.fullmatch"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_fuzzy": {
  "lineno": 2634,
  "symbols_in_volume": [
   "regex.compile",
   "regex.findall",
   "regex.fullmatch",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_fuzzy_ext": {
  "lineno": 4240,
  "symbols_in_volume": [
   "regex.fullmatch"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_getattr": {
  "lineno": 467,
  "symbols_in_volume": [
   "regex.A",
   "regex.DEFAULT_VERSION",
   "regex.I",
   "regex.U",
   "regex.compile",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_grapheme": {
  "lineno": 1542,
  "symbols_in_volume": [
   "regex.findall",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_groupdict": {
  "lineno": 421,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_guards": {
  "lineno": 2534,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_hg_bugs": {
  "lineno": 3110,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "regex.BESTMATCH",
   "regex.DEBUG",
   "regex.DOTALL",
   "regex.ENHANCEMATCH",
   "regex.FULLCASE",
   "regex.I",
   "regex.IGNORECASE",
   "regex.UNICODE",
   "regex.V1",
   "regex.WORD",
   "regex.X",
   "regex.compile",
   "regex.error",
   "regex.escape",
   "regex.findall",
   "regex.finditer",
   "regex.fullmatch",
   "regex.match",
   "regex.search",
   "regex.sub",
   "regex.subf",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_ignore_case": {
  "lineno": 564,
  "symbols_in_volume": [
   "regex.I",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_inline_flags": {
  "lineno": 897,
  "symbols_in_volume": [
   "regex.I",
   "regex.U",
   "regex.compile",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_issue_18468": {
  "lineno": 2977,
  "symbols_in_volume": [
   "regex.findall",
   "regex.match",
   "regex.split",
   "regex.sub",
   "string",
   "sys.version_info",
   "sys.version_info.major",
   "sys.version_info.minor"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_line_boundary": {
  "lineno": 1578,
  "symbols_in_volume": [
   "regex.findall",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_lookbehind": {
  "lineno": 1427,
  "symbols_in_volume": [
   "regex.compile",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_more_zerowidth": {
  "lineno": 4347,
  "symbols_in_volume": [
   "regex.findall",
   "regex.finditer",
   "regex.split",
   "regex.sub",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_named_lists": {
  "lineno": 2580,
  "symbols_in_volume": [
   "regex.compile",
   "regex.findall",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_new_named_groups": {
  "lineno": 1009,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_non_consuming": {
  "lineno": 550,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_not_literal": {
  "lineno": 681,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_overlapped": {
  "lineno": 1513,
  "symbols_in_volume": [
   "regex.findall",
   "regex.finditer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_partial": {
  "lineno": 3057,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_possessive": {
  "lineno": 1317,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_properties": {
  "lineno": 1015,
  "symbols_in_volume": [
   "regex.findall",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_qualified_re_split": {
  "lineno": 313,
  "symbols_in_volume": [
   "regex.split",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_qualified_re_sub": {
  "lineno": 209,
  "symbols_in_volume": [
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_escape": {
  "lineno": 689,
  "symbols_in_volume": [
   "regex.compile",
   "regex.escape",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_escape_byte": {
  "lineno": 702,
  "symbols_in_volume": [
   "regex.compile",
   "regex.escape",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_findall": {
  "lineno": 326,
  "symbols_in_volume": [
   "regex.findall"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_groupref": {
  "lineno": 405,
  "symbols_in_volume": [
   "regex.findall",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_groupref_exists": {
  "lineno": 382,
  "symbols_in_volume": [
   "regex.compile",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_match": {
  "lineno": 355,
  "symbols_in_volume": [
   "regex.compile",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_split": {
  "lineno": 262,
  "symbols_in_volume": [
   "regex.split",
   "regex.splititer",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_subn": {
  "lineno": 255,
  "symbols_in_volume": [
   "regex.subn"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_recursive": {
  "lineno": 2827,
  "symbols_in_volume": [
   "regex.compile",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_repeat_minmax": {
  "lineno": 430,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_repeated_repeats": {
  "lineno": 1418,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_replacement": {
  "lineno": 2498,
  "symbols_in_volume": [
   "regex.escape",
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scanner": {
  "lineno": 805,
  "symbols_in_volume": [
   "regex.Scanner"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scanner.s_float": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scanner.s_ident": {
  "lineno": 806,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scanner.s_int": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scanner.s_operator": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scoped_and_inline_flags": {
  "lineno": 1401,
  "symbols_in_volume": [
   "regex.I",
   "regex.error",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_search_anchor": {
  "lineno": 1212,
  "symbols_in_volume": [
   "regex.findall"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_search_coverage": {
  "lineno": 685,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_search_reverse": {
  "lineno": 1215,
  "symbols_in_volume": [
   "regex.I",
   "regex.findall",
   "regex.finditer",
   "regex.search",
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_search_star_plus": {
  "lineno": 66,
  "symbols_in_volume": [
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_set": {
  "lineno": 1674,
  "symbols_in_volume": [
   "regex.compile",
   "regex.findall",
   "regex.match",
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_special_escapes": {
  "lineno": 497,
  "symbols_in_volume": [
   "regex.LOCALE",
   "regex.M",
   "regex.UNICODE",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_splititer": {
  "lineno": 1537,
  "symbols_in_volume": [
   "regex.split",
   "regex.splititer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_sre_character_class_literals": {
  "lineno": 747,
  "symbols_in_volume": [
   "regex.error",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_sre_character_literals": {
  "lineno": 731,
  "symbols_in_volume": [
   "regex.error",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_stack_overflow": {
  "lineno": 798,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_sub_template_numeric_escape": {
  "lineno": 152,
  "symbols_in_volume": [
   "regex.error",
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_subscripted_captures": {
  "lineno": 4328,
  "symbols_in_volume": [
   "regex.match",
   "regex.subf"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_subscripting_match": {
  "lineno": 998,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_symbolic_refs": {
  "lineno": 232,
  "symbols_in_volume": [
   "regex.error",
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_turkic": {
  "lineno": 2554,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_unmatched_in_sub": {
  "lineno": 1475,
  "symbols_in_volume": [
   "regex.sub",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_various": {
  "lineno": 1751,
  "symbols_in_volume": [
   "regex.error",
   "regex.search",
   "string",
   "sys.version_info.major",
   "sys.version_info.minor"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_weakref": {
  "lineno": 59,
  "symbols_in_volume": [
   "regex.compile",
   "weakref.proxy"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_word_boundary": {
  "lineno": 1554,
  "symbols_in_volume": [
   "regex.split"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_word_class": {
  "lineno": 1199,
  "symbols_in_volume": [
   "regex.findall",
   "regex.split"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_zerowidth": {
  "lineno": 1343,
  "symbols_in_volume": [
   "regex.findall",
   "regex.finditer",
   "regex.split",
   "regex.splititer",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.StrSubclass": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex.test_regex.StrSubclass.__getitem__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.test_main": {
  "lineno": 4363,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "function"
 }
}