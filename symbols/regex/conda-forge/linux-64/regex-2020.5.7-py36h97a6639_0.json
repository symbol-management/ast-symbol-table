{
 "regex": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regex._regex_core": {
  "lineno": null,
  "symbols_in_volume": [
   "regex._regex.get_code_size",
   "regex._regex.get_properties",
   "string.ascii_letters",
   "string.digits",
   "string.hexdigits",
   "string.octdigits"
  ],
  "type": "module"
 },
 "regex._regex_core.Any": {
  "lineno": 1921,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Any._compile": {
  "lineno": 1928,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Any.dump": {
  "lineno": 1934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Any.has_simple_start": {
  "lineno": 1925,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Any.max_width": {
  "lineno": 1937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.AnyAll": {
  "lineno": 1940,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.AnyU": {
  "lineno": 1944,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Atomic": {
  "lineno": 1948,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Atomic.__eq__": {
  "lineno": 1994,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.__init__": {
  "lineno": 1949,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic._compile": {
  "lineno": 1983,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.can_be_affix": {
  "lineno": 1971,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.contains_group": {
  "lineno": 1974,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.dump": {
  "lineno": 1987,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.fix_groups": {
  "lineno": 1953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.get_firstset": {
  "lineno": 1977,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.get_required_string": {
  "lineno": 2001,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.has_simple_start": {
  "lineno": 1980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.is_empty": {
  "lineno": 1991,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.max_width": {
  "lineno": 1998,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.optimise": {
  "lineno": 1956,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.pack_characters": {
  "lineno": 1963,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Atomic.remove_captures": {
  "lineno": 1967,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Boundary": {
  "lineno": 2004,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Branch": {
  "lineno": 2008,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Branch.__eq__": {
  "lineno": 2388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.__init__": {
  "lineno": 2009,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._add_precheck": {
  "lineno": 2049,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._can_split": {
  "lineno": 2201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._can_split_rev": {
  "lineno": 2226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._compile": {
  "lineno": 2088,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._flatten_branches": {
  "lineno": 2105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._flush_char_prefix": {
  "lineno": 2313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._flush_set_members": {
  "lineno": 2339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._is_folded": {
  "lineno": 2363,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "regex._regex.get_expand_on_folding"
  ],
  "type": "function"
 },
 "regex._regex_core.Branch._is_full_case": {
  "lineno": 2354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._is_simple_character": {
  "lineno": 2281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._merge_common_prefixes": {
  "lineno": 2253,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "regex._regex_core.Branch._reduce_to_set": {
  "lineno": 2285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._split_common_prefix": {
  "lineno": 2118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch._split_common_suffix": {
  "lineno": 2160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.can_be_affix": {
  "lineno": 2075,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.contains_group": {
  "lineno": 2078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.dump": {
  "lineno": 2098,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.fix_groups": {
  "lineno": 2013,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.get_firstset": {
  "lineno": 2081,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.is_atomic": {
  "lineno": 2072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.is_empty": {
  "lineno": 2385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.max_width": {
  "lineno": 2391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.optimise": {
  "lineno": 2017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.pack_characters": {
  "lineno": 2064,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Branch.remove_captures": {
  "lineno": 2068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup": {
  "lineno": 2394,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.CallGroup.__del__": {
  "lineno": 2437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.__eq__": {
  "lineno": 2431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.__init__": {
  "lineno": 2395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup._compile": {
  "lineno": 2425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.dump": {
  "lineno": 2428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.fix_groups": {
  "lineno": 2403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.max_width": {
  "lineno": 2434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallGroup.remove_captures": {
  "lineno": 2422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallRef": {
  "lineno": 2440,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.CallRef.__init__": {
  "lineno": 2441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.CallRef._compile": {
  "lineno": 2445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character": {
  "lineno": 2449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Character.__init__": {
  "lineno": 2456,
  "symbols_in_volume": [
   "regex._regex.fold_case"
  ],
  "type": "function"
 },
 "regex._regex_core.Character._compile": {
  "lineno": 2485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.dump": {
  "lineno": 2504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.get_firstset": {
  "lineno": 2479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.get_required_string": {
  "lineno": 2515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.has_simple_start": {
  "lineno": 2482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.matches": {
  "lineno": 2509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.max_width": {
  "lineno": 2512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.optimise": {
  "lineno": 2476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Character.rebuild": {
  "lineno": 2473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional": {
  "lineno": 2523,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Conditional.__del__": {
  "lineno": 2609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.__eq__": {
  "lineno": 2602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.__init__": {
  "lineno": 2524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional._compile": {
  "lineno": 2580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.can_be_affix": {
  "lineno": 2570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.contains_group": {
  "lineno": 2573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.dump": {
  "lineno": 2592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.fix_groups": {
  "lineno": 2532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.get_firstset": {
  "lineno": 2576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.is_atomic": {
  "lineno": 2567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.is_empty": {
  "lineno": 2599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.max_width": {
  "lineno": 2606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.optimise": {
  "lineno": 2552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.pack_characters": {
  "lineno": 2558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Conditional.remove_captures": {
  "lineno": 2563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.DefaultBoundary": {
  "lineno": 2612,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.DefaultEndOfWord": {
  "lineno": 2616,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.DefaultStartOfWord": {
  "lineno": 2620,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfLine": {
  "lineno": 2624,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfLineU": {
  "lineno": 2628,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfString": {
  "lineno": 2632,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfStringLine": {
  "lineno": 2636,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfStringLineU": {
  "lineno": 2640,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.EndOfWord": {
  "lineno": 2644,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Failure": {
  "lineno": 2648,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Failure._compile": {
  "lineno": 2651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy": {
  "lineno": 2654,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Fuzzy.__eq__": {
  "lineno": 2747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.__init__": {
  "lineno": 2655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy._compile": {
  "lineno": 2707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy._constraints_to_string": {
  "lineno": 2754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.contains_group": {
  "lineno": 2704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.dump": {
  "lineno": 2737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.fix_groups": {
  "lineno": 2690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.is_atomic": {
  "lineno": 2701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.is_empty": {
  "lineno": 2744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.max_width": {
  "lineno": 2751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.pack_characters": {
  "lineno": 2693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Fuzzy.remove_captures": {
  "lineno": 2697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Grapheme": {
  "lineno": 2787,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Grapheme._compile": {
  "lineno": 2788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Grapheme.dump": {
  "lineno": 2796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Grapheme.max_width": {
  "lineno": 2799,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GraphemeBoundary": {
  "lineno": 2802,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.GraphemeBoundary.compile": {
  "lineno": 2803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat": {
  "lineno": 2806,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.GreedyRepeat.__eq__": {
  "lineno": 2874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.__init__": {
  "lineno": 2810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat._compile": {
  "lineno": 2848,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.can_be_affix": {
  "lineno": 2835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.contains_group": {
  "lineno": 2838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.dump": {
  "lineno": 2861,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.fix_groups": {
  "lineno": 2816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.get_firstset": {
  "lineno": 2841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.get_required_string": {
  "lineno": 2885,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.is_atomic": {
  "lineno": 2832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.is_empty": {
  "lineno": 2871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.max_width": {
  "lineno": 2879,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.optimise": {
  "lineno": 2819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.pack_characters": {
  "lineno": 2824,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.GreedyRepeat.remove_captures": {
  "lineno": 2828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group": {
  "lineno": 2928,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Group.__del__": {
  "lineno": 3006,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.__eq__": {
  "lineno": 2996,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.__init__": {
  "lineno": 2929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group._compile": {
  "lineno": 2968,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.can_be_affix": {
  "lineno": 2956,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.contains_group": {
  "lineno": 2959,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.dump": {
  "lineno": 2989,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.fix_groups": {
  "lineno": 2937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.get_firstset": {
  "lineno": 2962,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.get_required_string": {
  "lineno": 3003,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.has_simple_start": {
  "lineno": 2965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.is_atomic": {
  "lineno": 2953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.max_width": {
  "lineno": 3000,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.optimise": {
  "lineno": 2941,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.pack_characters": {
  "lineno": 2946,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Group.remove_captures": {
  "lineno": 2950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Info": {
  "lineno": 4242,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Info.__init__": {
  "lineno": 4245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Info.close_group": {
  "lineno": 4290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Info.is_open_group": {
  "lineno": 4293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Info.open_group": {
  "lineno": 4264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Keep": {
  "lineno": 3009,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.LazyRepeat": {
  "lineno": 3013,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Literal": {
  "lineno": 3913,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Literal.dump": {
  "lineno": 3914,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround": {
  "lineno": 3017,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.LookAround.__eq__": {
  "lineno": 3078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.__init__": {
  "lineno": 3020,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround._compile": {
  "lineno": 3058,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.can_be_affix": {
  "lineno": 3046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.contains_group": {
  "lineno": 3049,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.dump": {
  "lineno": 3070,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.fix_groups": {
  "lineno": 3026,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.get_firstset": {
  "lineno": 3052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.is_atomic": {
  "lineno": 3043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.is_empty": {
  "lineno": 3075,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.max_width": {
  "lineno": 3082,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.optimise": {
  "lineno": 3029,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.pack_characters": {
  "lineno": 3036,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAround.remove_captures": {
  "lineno": 3040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional": {
  "lineno": 3085,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.LookAroundConditional.__eq__": {
  "lineno": 3160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.__init__": {
  "lineno": 3088,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional._compile": {
  "lineno": 3132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.can_be_affix": {
  "lineno": 3124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.contains_group": {
  "lineno": 3128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.dump": {
  "lineno": 3146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.fix_groups": {
  "lineno": 3096,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.get_required_string": {
  "lineno": 3167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.is_atomic": {
  "lineno": 3120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.is_empty": {
  "lineno": 3156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.max_width": {
  "lineno": 3164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.optimise": {
  "lineno": 3101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.pack_characters": {
  "lineno": 3109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.LookAroundConditional.remove_captures": {
  "lineno": 3115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Namespace": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.ParseError": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.PossessiveRepeat": {
  "lineno": 2898,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.PossessiveRepeat._compile": {
  "lineno": 2902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.PossessiveRepeat.dump": {
  "lineno": 2916,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.PossessiveRepeat.is_atomic": {
  "lineno": 2899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.PrecompiledCode": {
  "lineno": 3170,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.PrecompiledCode.__init__": {
  "lineno": 3171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.PrecompiledCode._compile": {
  "lineno": 3174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property": {
  "lineno": 3177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Property.__init__": {
  "lineno": 3184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property._compile": {
  "lineno": 3207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.dump": {
  "lineno": 3217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.get_firstset": {
  "lineno": 3201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.has_simple_start": {
  "lineno": 3204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.matches": {
  "lineno": 3223,
  "symbols_in_volume": [
   "regex._regex.has_property_value"
  ],
  "type": "function"
 },
 "regex._regex_core.Property.max_width": {
  "lineno": 3226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.optimise": {
  "lineno": 3198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Property.rebuild": {
  "lineno": 3195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Prune": {
  "lineno": 3229,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Prune._compile": {
  "lineno": 3232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range": {
  "lineno": 3235,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Range.__init__": {
  "lineno": 3242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range._compile": {
  "lineno": 3288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range.dump": {
  "lineno": 3299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range.matches": {
  "lineno": 3306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range.max_width": {
  "lineno": 3309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Range.optimise": {
  "lineno": 3257,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "regex._regex.get_expand_on_folding"
  ],
  "type": "function"
 },
 "regex._regex_core.Range.rebuild": {
  "lineno": 3254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup": {
  "lineno": 3312,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.RefGroup.__del__": {
  "lineno": 3358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup.__init__": {
  "lineno": 3319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup._compile": {
  "lineno": 3345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup.dump": {
  "lineno": 3351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup.fix_groups": {
  "lineno": 3328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup.max_width": {
  "lineno": 3355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RefGroup.remove_captures": {
  "lineno": 3342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase": {
  "lineno": 1824,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.RegexBase.__eq__": {
  "lineno": 1884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.__hash__": {
  "lineno": 1881,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.__init__": {
  "lineno": 1825,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.__ne__": {
  "lineno": 1887,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.can_be_affix": {
  "lineno": 1863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.compile": {
  "lineno": 1875,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.contains_group": {
  "lineno": 1866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.fix_groups": {
  "lineno": 1848,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.get_firstset": {
  "lineno": 1869,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.get_required_string": {
  "lineno": 1890,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.has_simple_start": {
  "lineno": 1872,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.is_atomic": {
  "lineno": 1860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.is_empty": {
  "lineno": 1878,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.optimise": {
  "lineno": 1851,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.pack_characters": {
  "lineno": 1854,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.remove_captures": {
  "lineno": 1857,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.RegexBase.with_flags": {
  "lineno": 1828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Scanner": {
  "lineno": 4367,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Scanner.__init__": {
  "lineno": 4368,
  "symbols_in_volume": [
   "regex._regex.compile"
  ],
  "type": "function"
 },
 "regex._regex_core.Scanner.scan": {
  "lineno": 4441,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core.SearchAnchor": {
  "lineno": 3361,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Sequence": {
  "lineno": 3365,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Sequence.__eq__": {
  "lineno": 3557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.__init__": {
  "lineno": 3366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence._compile": {
  "lineno": 3456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence._fix_full_casefold": {
  "lineno": 3499,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "regex._regex.get_expand_on_folding",
   "string",
   "string.find"
  ],
  "type": "function"
 },
 "regex._regex_core.Sequence._flush_characters": {
  "lineno": 3471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence._merge_chunks": {
  "lineno": 3533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.can_be_affix": {
  "lineno": 3434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.contains_group": {
  "lineno": 3437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.dump": {
  "lineno": 3467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.fix_groups": {
  "lineno": 3373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.get_firstset": {
  "lineno": 3440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.get_required_string": {
  "lineno": 3563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.has_simple_start": {
  "lineno": 3453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.is_atomic": {
  "lineno": 3431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.is_empty": {
  "lineno": 3554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.max_width": {
  "lineno": 3560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.optimise": {
  "lineno": 3377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.pack_characters": {
  "lineno": 3389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Sequence.remove_captures": {
  "lineno": 3427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase": {
  "lineno": 3578,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.SetBase.__del__": {
  "lineno": 3680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase.__init__": {
  "lineno": 3579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase._compile": {
  "lineno": 3603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase._handle_case_folding": {
  "lineno": 3625,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "regex._regex.get_expand_on_folding"
  ],
  "type": "function"
 },
 "regex._regex_core.SetBase.dump": {
  "lineno": 3619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase.get_firstset": {
  "lineno": 3597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase.has_simple_start": {
  "lineno": 3600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetBase.max_width": {
  "lineno": 3655,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "regex._regex.get_expand_on_folding"
  ],
  "type": "function"
 },
 "regex._regex_core.SetBase.rebuild": {
  "lineno": 3593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetDiff": {
  "lineno": 3683,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.SetDiff.matches": {
  "lineno": 3705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetDiff.optimise": {
  "lineno": 3691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetInter": {
  "lineno": 3709,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.SetInter.matches": {
  "lineno": 3735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetInter.optimise": {
  "lineno": 3717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetSymDiff": {
  "lineno": 3739,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.SetSymDiff.matches": {
  "lineno": 3765,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetSymDiff.optimise": {
  "lineno": 3747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetUnion": {
  "lineno": 3772,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.SetUnion._compile": {
  "lineno": 3800,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "regex._regex_core.SetUnion.matches": {
  "lineno": 3834,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.SetUnion.optimise": {
  "lineno": 3780,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Skip": {
  "lineno": 3838,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Source": {
  "lineno": 4020,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.Source.__init__": {
  "lineno": 4022,
  "symbols_in_volume": [
   "string",
   "string.decode"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.at_end": {
  "lineno": 4220,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.expect": {
  "lineno": 4216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.Source.get": {
  "lineno": 4034,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.get_many": {
  "lineno": 4062,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.get_while": {
  "lineno": 4100,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.match": {
  "lineno": 4177,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace",
   "string.startswith"
  ],
  "type": "function"
 },
 "regex._regex_core.Source.skip_while": {
  "lineno": 4148,
  "symbols_in_volume": [
   "string",
   "string.index",
   "string.isspace"
  ],
  "type": "function"
 },
 "regex._regex_core.StartOfLine": {
  "lineno": 3842,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.StartOfLineU": {
  "lineno": 3846,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.StartOfString": {
  "lineno": 3850,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.StartOfWord": {
  "lineno": 3854,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.String": {
  "lineno": 3858,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.String.__init__": {
  "lineno": 3865,
  "symbols_in_volume": [
   "regex._regex.fold_case"
  ],
  "type": "function"
 },
 "regex._regex_core.String._compile": {
  "lineno": 3893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.String.dump": {
  "lineno": 3902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.String.get_firstset": {
  "lineno": 3882,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.String.get_required_string": {
  "lineno": 3910,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.String.has_simple_start": {
  "lineno": 3890,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.String.max_width": {
  "lineno": 3907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.StringSet": {
  "lineno": 3920,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.StringSet.__del__": {
  "lineno": 4017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.StringSet.__init__": {
  "lineno": 3927,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.StringSet._compile": {
  "lineno": 3938,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core.StringSet._flatten": {
  "lineno": 3985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.StringSet._folded": {
  "lineno": 3979,
  "symbols_in_volume": [
   "regex._regex.fold_case"
  ],
  "type": "function"
 },
 "regex._regex_core.StringSet.dump": {
  "lineno": 3975,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.StringSet.max_width": {
  "lineno": 4006,
  "symbols_in_volume": [
   "regex._regex.fold_case"
  ],
  "type": "function"
 },
 "regex._regex_core.ZeroWidthBase": {
  "lineno": 1894,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.ZeroWidthBase.__init__": {
  "lineno": 1895,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.ZeroWidthBase._compile": {
  "lineno": 1904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.ZeroWidthBase.dump": {
  "lineno": 1914,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.ZeroWidthBase.get_firstset": {
  "lineno": 1901,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.ZeroWidthBase.max_width": {
  "lineno": 1918,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._FirstSetError": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core._UnscopedFlagSet": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core._check_firstset": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._check_group_features": {
  "lineno": 4307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._compile_firstset": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._compile_replacement": {
  "lineno": 1685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._flatten_code": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._fold_case": {
  "lineno": 290,
  "symbols_in_volume": [
   "regex._regex.fold_case",
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core._get_required_string": {
  "lineno": 4346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._parse_pattern": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core._shrink_cache": {
  "lineno": 240,
  "symbols_in_volume": [
   "random",
   "random.sample"
  ],
  "type": "function"
 },
 "regex._regex_core.apply_constraint": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.apply_quantifier": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.compile_repl_group": {
  "lineno": 1786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.error": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex._regex_core.error.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.float_to_rational": {
  "lineno": 1572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.is_above_limit": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.is_cased_f": {
  "lineno": 302,
  "symbols_in_volume": [
   "regex._regex.get_all_cases"
  ],
  "type": "function"
 },
 "regex._regex_core.is_cased_i": {
  "lineno": 298,
  "symbols_in_volume": [
   "regex._regex.get_all_cases"
  ],
  "type": "function"
 },
 "regex._regex_core.is_decimal": {
  "lineno": 1165,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core.is_hexadecimal": {
  "lineno": 1169,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core.is_octal": {
  "lineno": 1161,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "regex._regex_core.lookup_property": {
  "lineno": 1615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_case_flags": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_character": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_property": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_ref_group": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_sequence": {
  "lineno": 1818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.make_string_set": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.numeric_to_rational": {
  "lineno": 1583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_atomic": {
  "lineno": 992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_call_group": {
  "lineno": 1022,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_call_named_group": {
  "lineno": 1033,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_comment": {
  "lineno": 900,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_common": {
  "lineno": 1004,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_conditional": {
  "lineno": 929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_constraint": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_cost_constraint": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_cost_equation": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_cost_limit": {
  "lineno": 674,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_cost_term": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_count": {
  "lineno": 770,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_escape": {
  "lineno": 1173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_extension": {
  "lineno": 864,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_flag_set": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_flags": {
  "lineno": 1056,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_flags_subpattern": {
  "lineno": 1087,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_fuzzy": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_fuzzy_compare": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_fuzzy_item": {
  "lineno": 603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_fuzzy_test": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_group_ref": {
  "lineno": 1315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_hex_escape": {
  "lineno": 1292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_limited_quantifier": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_lookaround": {
  "lineno": 917,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_lookaround_conditional": {
  "lineno": 972,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_name": {
  "lineno": 1142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_named_char": {
  "lineno": 1336,
  "symbols_in_volume": [
   "unicodedata.lookup"
  ],
  "type": "function"
 },
 "regex._regex_core.parse_numeric_escape": {
  "lineno": 1238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_octal_escape": {
  "lineno": 1271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_paren": {
  "lineno": 774,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_positional_flags": {
  "lineno": 1122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_posix_class": {
  "lineno": 1563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_property": {
  "lineno": 1352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_property_name": {
  "lineno": 1373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_quantifier": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_repl_hex_escape": {
  "lineno": 1757,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_repl_named_char": {
  "lineno": 1769,
  "symbols_in_volume": [
   "unicodedata.lookup"
  ],
  "type": "function"
 },
 "regex._regex_core.parse_sequence": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set": {
  "lineno": 1395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_diff": {
  "lineno": 1451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_imp_union": {
  "lineno": 1461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_inter": {
  "lineno": 1441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_item": {
  "lineno": 1525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_member": {
  "lineno": 1484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_symm_diff": {
  "lineno": 1431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_set_union": {
  "lineno": 1421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_string_set": {
  "lineno": 1326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.parse_subpattern": {
  "lineno": 1073,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex._regex_core.standardise_name": {
  "lineno": 1604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex": {
  "lineno": null,
  "symbols_in_volume": [
   "copyreg.pickle",
   "regex._regex_core.DEFAULT_VERSION",
   "threading.RLock"
  ],
  "type": "module"
 },
 "regex.regex._compile": {
  "lineno": 435,
  "symbols_in_volume": [
   "locale.getpreferredencoding",
   "regex.DEFAULT_VERSION",
   "regex._regex.compile",
   "regex._regex_core.DEFAULT_VERSION",
   "regex._regex_core.Fuzzy",
   "regex._regex_core.Info",
   "regex._regex_core.OP.CALL_REF",
   "regex._regex_core.OP.END",
   "regex._regex_core.OP.SUCCESS",
   "regex._regex_core.Source",
   "regex._regex_core._ALL_ENCODINGS",
   "regex._regex_core._ALL_VERSIONS",
   "regex._regex_core._FirstSetError",
   "regex._regex_core._UnscopedFlagSet",
   "regex._regex_core._check_group_features",
   "regex._regex_core._compile_firstset",
   "regex._regex_core._flatten_code",
   "regex._regex_core._fold_case",
   "regex._regex_core._get_required_string",
   "regex._regex_core._parse_pattern",
   "regex._regex_core._shrink_cache"
  ],
  "type": "function"
 },
 "regex.regex._compile_replacement_helper": {
  "lineno": 651,
  "symbols_in_volume": [
   "regex._regex_core.Source",
   "regex._regex_core._compile_replacement"
  ],
  "type": "function"
 },
 "regex.regex._compile_replacement_helper.make_string": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex._pickle": {
  "lineno": 714,
  "symbols_in_volume": [
   "regex._regex.compile"
  ],
  "type": "function"
 },
 "regex.regex.compile": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.escape": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.findall": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.finditer": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.fullmatch": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.match": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.purge": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.search": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.split": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.splititer": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.sub": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.subf": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.subfn": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.subn": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.regex.template": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "regex.test_regex.BytesSubclass": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex.test_regex.BytesSubclass.__getitem__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests": {
  "lineno": 19,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "regex.test_regex.RegexTests.assertTypedEqual": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.assertTypedEqual.recurse": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.bump_num": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_anyall": {
  "lineno": 546,
  "symbols_in_volume": [
   "regex.DOTALL",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_ascii_and_unicode_flag": {
  "lineno": 972,
  "symbols_in_volume": [
   "regex.ASCII",
   "regex.IGNORECASE",
   "regex.UNICODE",
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_atomic": {
  "lineno": 1314,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_basic_regex_sub": {
  "lineno": 83,
  "symbols_in_volume": [
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bigcharset": {
  "lineno": 531,
  "symbols_in_volume": [
   "regex.UNICODE",
   "regex.findall",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_branch_reset": {
  "lineno": 1621,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_10328": {
  "lineno": 1497,
  "symbols_in_volume": [
   "regex.compile",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_113254": {
  "lineno": 760,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_114660": {
  "lineno": 214,
  "symbols_in_volume": [
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_117612": {
  "lineno": 352,
  "symbols_in_volume": [
   "regex.findall"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_14462": {
  "lineno": 227,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_1661": {
  "lineno": 136,
  "symbols_in_volume": [
   "regex.I",
   "regex.compile",
   "regex.findall",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_3629": {
  "lineno": 148,
  "symbols_in_volume": [
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_418626": {
  "lineno": 780,
  "symbols_in_volume": [
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_448951": {
  "lineno": 822,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_449000": {
  "lineno": 125,
  "symbols_in_volume": [
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_449964": {
  "lineno": 120,
  "symbols_in_volume": [
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_462270": {
  "lineno": 218,
  "symbols_in_volume": [
   "regex.sub",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_527371": {
  "lineno": 765,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_545855": {
  "lineno": 774,
  "symbols_in_volume": [
   "regex.compile",
   "regex.error"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_581080": {
  "lineno": 875,
  "symbols_in_volume": [
   "regex.compile",
   "regex.finditer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_612074": {
  "lineno": 795,
  "symbols_in_volume": [
   "regex.compile",
   "regex.escape"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_725106": {
  "lineno": 831,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_725149": {
  "lineno": 849,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_764548": {
  "lineno": 856,
  "symbols_in_volume": [
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_764548.my_unicode": {
  "lineno": 858,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex.test_regex.RegexTests.test_bug_817234": {
  "lineno": 884,
  "symbols_in_volume": [
   "regex.finditer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_926075": {
  "lineno": 866,
  "symbols_in_volume": [
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bug_931848": {
  "lineno": 870,
  "symbols_in_volume": [
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_bytes_str_mixing": {
  "lineno": 938,
  "symbols_in_volume": [
   "regex.ASCII",
   "regex.UNICODE",
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_captures": {
  "lineno": 2515,
  "symbols_in_volume": [
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_case_folding": {
  "lineno": 591,
  "symbols_in_volume": [
   "regex.findall",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_category": {
  "lineno": 679,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_common_prefix": {
  "lineno": 2508,
  "symbols_in_volume": [
   "regex.compile",
   "string.ascii_lowercase",
   "string.ascii_uppercase",
   "string.digits"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_constants": {
  "lineno": 715,
  "symbols_in_volume": [
   "regex.DOTALL",
   "regex.I",
   "regex.IGNORECASE",
   "regex.L",
   "regex.LOCALE",
   "regex.M",
   "regex.MULTILINE",
   "regex.S",
   "regex.VERBOSE",
   "regex.X"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_copy": {
  "lineno": 2899,
  "symbols_in_volume": [
   "copy.copy",
   "copy.deepcopy",
   "regex.compile",
   "regex.finditer",
   "regex.splititer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_dollar_matches_twice": {
  "lineno": 926,
  "symbols_in_volume": [
   "regex.MULTILINE",
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_empty_array": {
  "lineno": 890,
  "symbols_in_volume": [
   "array.array",
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_expand": {
  "lineno": 426,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_finditer": {
  "lineno": 862,
  "symbols_in_volume": [
   "regex.finditer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_flags": {
  "lineno": 727,
  "symbols_in_volume": [
   "regex.I",
   "regex.L",
   "regex.M",
   "regex.S",
   "regex.X",
   "regex.compile"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_format": {
  "lineno": 2942,
  "symbols_in_volume": [
   "regex.match",
   "regex.subf",
   "regex.subfn"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_fullmatch": {
  "lineno": 2956,
  "symbols_in_volume": [
   "regex.fullmatch"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_fuzzy": {
  "lineno": 2635,
  "symbols_in_volume": [
   "regex.compile",
   "regex.findall",
   "regex.fullmatch",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_fuzzy_ext": {
  "lineno": 4237,
  "symbols_in_volume": [
   "regex.fullmatch"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_getattr": {
  "lineno": 468,
  "symbols_in_volume": [
   "regex.A",
   "regex.DEFAULT_VERSION",
   "regex.I",
   "regex.U",
   "regex.compile",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_grapheme": {
  "lineno": 1543,
  "symbols_in_volume": [
   "regex.findall",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_groupdict": {
  "lineno": 422,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_guards": {
  "lineno": 2535,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_hg_bugs": {
  "lineno": 3111,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "regex.BESTMATCH",
   "regex.DEBUG",
   "regex.DOTALL",
   "regex.ENHANCEMATCH",
   "regex.FULLCASE",
   "regex.I",
   "regex.IGNORECASE",
   "regex.UNICODE",
   "regex.V1",
   "regex.WORD",
   "regex.X",
   "regex.compile",
   "regex.error",
   "regex.escape",
   "regex.findall",
   "regex.finditer",
   "regex.fullmatch",
   "regex.match",
   "regex.search",
   "regex.sub",
   "regex.subf",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_ignore_case": {
  "lineno": 565,
  "symbols_in_volume": [
   "regex.I",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_inline_flags": {
  "lineno": 898,
  "symbols_in_volume": [
   "regex.I",
   "regex.U",
   "regex.compile",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_issue_18468": {
  "lineno": 2978,
  "symbols_in_volume": [
   "regex.findall",
   "regex.match",
   "regex.split",
   "regex.sub",
   "string",
   "sys.version_info",
   "sys.version_info.major",
   "sys.version_info.minor"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_line_boundary": {
  "lineno": 1579,
  "symbols_in_volume": [
   "regex.findall",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_lookbehind": {
  "lineno": 1428,
  "symbols_in_volume": [
   "regex.compile",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_more_zerowidth": {
  "lineno": 4344,
  "symbols_in_volume": [
   "regex.findall",
   "regex.finditer",
   "regex.split",
   "regex.sub",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_named_lists": {
  "lineno": 2581,
  "symbols_in_volume": [
   "regex.compile",
   "regex.findall",
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_new_named_groups": {
  "lineno": 1010,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_non_consuming": {
  "lineno": 551,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_not_literal": {
  "lineno": 682,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_overlapped": {
  "lineno": 1514,
  "symbols_in_volume": [
   "regex.findall",
   "regex.finditer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_partial": {
  "lineno": 3058,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_possessive": {
  "lineno": 1318,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_properties": {
  "lineno": 1016,
  "symbols_in_volume": [
   "regex.findall",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_qualified_re_split": {
  "lineno": 314,
  "symbols_in_volume": [
   "regex.split",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_qualified_re_sub": {
  "lineno": 210,
  "symbols_in_volume": [
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_escape": {
  "lineno": 690,
  "symbols_in_volume": [
   "regex.compile",
   "regex.escape",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_escape_byte": {
  "lineno": 703,
  "symbols_in_volume": [
   "regex.compile",
   "regex.escape",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_findall": {
  "lineno": 327,
  "symbols_in_volume": [
   "regex.findall"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_groupref": {
  "lineno": 406,
  "symbols_in_volume": [
   "regex.findall",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_groupref_exists": {
  "lineno": 383,
  "symbols_in_volume": [
   "regex.compile",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_match": {
  "lineno": 356,
  "symbols_in_volume": [
   "regex.compile",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_split": {
  "lineno": 263,
  "symbols_in_volume": [
   "regex.split",
   "regex.splititer",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_re_subn": {
  "lineno": 256,
  "symbols_in_volume": [
   "regex.subn"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_recursive": {
  "lineno": 2828,
  "symbols_in_volume": [
   "regex.compile",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_repeat_minmax": {
  "lineno": 431,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_repeated_repeats": {
  "lineno": 1419,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_replacement": {
  "lineno": 2499,
  "symbols_in_volume": [
   "regex.escape",
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scanner": {
  "lineno": 806,
  "symbols_in_volume": [
   "regex.Scanner"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scanner.s_float": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scanner.s_ident": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scanner.s_int": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scanner.s_operator": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_scoped_and_inline_flags": {
  "lineno": 1402,
  "symbols_in_volume": [
   "regex.I",
   "regex.error",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_search_anchor": {
  "lineno": 1213,
  "symbols_in_volume": [
   "regex.findall"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_search_coverage": {
  "lineno": 686,
  "symbols_in_volume": [
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_search_reverse": {
  "lineno": 1216,
  "symbols_in_volume": [
   "regex.I",
   "regex.findall",
   "regex.finditer",
   "regex.search",
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_search_star_plus": {
  "lineno": 67,
  "symbols_in_volume": [
   "regex.match",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_set": {
  "lineno": 1675,
  "symbols_in_volume": [
   "regex.compile",
   "regex.findall",
   "regex.match",
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_special_escapes": {
  "lineno": 498,
  "symbols_in_volume": [
   "regex.LOCALE",
   "regex.M",
   "regex.UNICODE",
   "regex.search"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_splititer": {
  "lineno": 1538,
  "symbols_in_volume": [
   "regex.split",
   "regex.splititer"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_sre_character_class_literals": {
  "lineno": 748,
  "symbols_in_volume": [
   "regex.error",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_sre_character_literals": {
  "lineno": 732,
  "symbols_in_volume": [
   "regex.error",
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_stack_overflow": {
  "lineno": 799,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_sub_template_numeric_escape": {
  "lineno": 153,
  "symbols_in_volume": [
   "regex.error",
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_subscripted_captures": {
  "lineno": 4325,
  "symbols_in_volume": [
   "regex.match",
   "regex.subf"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_subscripting_match": {
  "lineno": 999,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_symbolic_refs": {
  "lineno": 233,
  "symbols_in_volume": [
   "regex.error",
   "regex.sub"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_turkic": {
  "lineno": 2555,
  "symbols_in_volume": [
   "regex.match"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_unmatched_in_sub": {
  "lineno": 1476,
  "symbols_in_volume": [
   "regex.sub",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_various": {
  "lineno": 1752,
  "symbols_in_volume": [
   "regex.error",
   "regex.search",
   "string",
   "sys.version_info.major",
   "sys.version_info.minor"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_weakref": {
  "lineno": 60,
  "symbols_in_volume": [
   "regex.compile",
   "weakref.proxy"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_word_boundary": {
  "lineno": 1555,
  "symbols_in_volume": [
   "regex.split"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_word_class": {
  "lineno": 1200,
  "symbols_in_volume": [
   "regex.findall",
   "regex.split"
  ],
  "type": "function"
 },
 "regex.test_regex.RegexTests.test_zerowidth": {
  "lineno": 1344,
  "symbols_in_volume": [
   "regex.findall",
   "regex.finditer",
   "regex.split",
   "regex.splititer",
   "sys.version_info"
  ],
  "type": "function"
 },
 "regex.test_regex.StrSubclass": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regex.test_regex.StrSubclass.__getitem__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regex.test_regex.test_main": {
  "lineno": 4360,
  "symbols_in_volume": [
   "test.support.run_unittest"
  ],
  "type": "function"
 }
}