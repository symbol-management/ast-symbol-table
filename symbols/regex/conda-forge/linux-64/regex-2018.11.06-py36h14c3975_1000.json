{
 "*": {
  "data": {
   "imports": [
    "_regex_core"
   ]
  },
  "type": "star-import"
 },
 "_regex_core": {
  "data": {
   "symbols_in_volume": [
    "_regex_core.ALNUM",
    "_regex_core.ALPHA",
    "_regex_core.BITS_PER_CODE",
    "_regex_core.BYTES_PER_CODE",
    "_regex_core.Boundary",
    "_regex_core.DIGITS",
    "_regex_core.DefaultBoundary",
    "_regex_core.DefaultEndOfWord",
    "_regex_core.DefaultStartOfWord",
    "_regex_core.EndOfString",
    "_regex_core.EndOfWord",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.Failure",
    "_regex_core.Keep",
    "_regex_core.NOCASE",
    "_regex_core.Namespace",
    "_regex_core.OP",
    "_regex_core.OPCODES",
    "_regex_core.POSITION_ESCAPES",
    "_regex_core.PROPERTIES",
    "_regex_core.PROPERTY_NAMES",
    "_regex_core.Prune",
    "_regex_core.Skip",
    "_regex_core.StartOfString",
    "_regex_core.StartOfWord",
    "_regex_core.WORD_POSITION_ESCAPES",
    "_regex_core._ALL_ENCODINGS",
    "_regex_core._ALL_VERSIONS",
    "_regex_core._regex",
    "_regex_core.lookup_property",
    "_regex_core.name",
    "_regex_core.string",
    "dict",
    "enumerate",
    "frozenset",
    "len",
    "max",
    "set",
    "setattr"
   ]
  },
  "type": "module"
 },
 "_regex_core.ALNUM": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "_regex_core.ALPHA": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "_regex_core.Any": {
  "data": {
   "lineno": 1891,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Any._compile": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Any.dump": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Any.has_simple_start": {
  "data": {
   "lineno": 1895
  },
  "type": "function"
 },
 "_regex_core.Any.max_width": {
  "data": {
   "lineno": 1907
  },
  "type": "function"
 },
 "_regex_core.AnyAll": {
  "data": {
   "lineno": 1910,
   "symbols_in_volume": [
    "_regex_core.Any",
    "_regex_core.OP"
   ]
  },
  "type": "class"
 },
 "_regex_core.AnyU": {
  "data": {
   "lineno": 1914,
   "symbols_in_volume": [
    "_regex_core.Any",
    "_regex_core.OP"
   ]
  },
  "type": "class"
 },
 "_regex_core.Atomic": {
  "data": {
   "lineno": 1918,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Atomic.__eq__": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Atomic.__init__": {
  "data": {
   "lineno": 1919,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.Atomic._compile": {
  "data": {
   "lineno": 1953,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Atomic.can_be_affix": {
  "data": {
   "lineno": 1941
  },
  "type": "function"
 },
 "_regex_core.Atomic.contains_group": {
  "data": {
   "lineno": 1944
  },
  "type": "function"
 },
 "_regex_core.Atomic.dump": {
  "data": {
   "lineno": 1957,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Atomic.fix_groups": {
  "data": {
   "lineno": 1923
  },
  "type": "function"
 },
 "_regex_core.Atomic.get_firstset": {
  "data": {
   "lineno": 1947
  },
  "type": "function"
 },
 "_regex_core.Atomic.get_required_string": {
  "data": {
   "lineno": 1971
  },
  "type": "function"
 },
 "_regex_core.Atomic.has_simple_start": {
  "data": {
   "lineno": 1950
  },
  "type": "function"
 },
 "_regex_core.Atomic.is_empty": {
  "data": {
   "lineno": 1961
  },
  "type": "function"
 },
 "_regex_core.Atomic.max_width": {
  "data": {
   "lineno": 1968
  },
  "type": "function"
 },
 "_regex_core.Atomic.optimise": {
  "data": {
   "lineno": 1926
  },
  "type": "function"
 },
 "_regex_core.Atomic.pack_characters": {
  "data": {
   "lineno": 1933
  },
  "type": "function"
 },
 "_regex_core.Atomic.remove_captures": {
  "data": {
   "lineno": 1937
  },
  "type": "function"
 },
 "_regex_core.BITS_PER_CODE": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "_regex_core.BYTES_PER_CODE": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "_regex_core.Boundary": {
  "data": {
   "lineno": 1974,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Branch": {
  "data": {
   "lineno": 1978,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Branch.__eq__": {
  "data": {
   "lineno": 2358,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.__init__": {
  "data": {
   "lineno": 1979,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._add_precheck": {
  "data": {
   "lineno": 2019,
   "symbols_in_volume": [
    "Character",
    "_regex_core.NOCASE",
    "_regex_core._check_firstset",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._can_split": {
  "data": {
   "lineno": 2171,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._can_split_rev": {
  "data": {
   "lineno": 2196,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._compile": {
  "data": {
   "lineno": 2058,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._flatten_branches": {
  "data": {
   "lineno": 2075,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._flush_char_prefix": {
  "data": {
   "lineno": 2283,
   "symbols_in_volume": [
    "Character",
    "Sequence",
    "_regex_core.Branch",
    "_regex_core.make_sequence",
    "len",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._flush_set_members": {
  "data": {
   "lineno": 2309,
   "symbols_in_volume": [
    "SetUnion",
    "len",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._is_folded": {
  "data": {
   "lineno": 2333,
   "symbols_in_volume": [
    "Character",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core._regex",
    "chr",
    "isinstance",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._is_full_case": {
  "data": {
   "lineno": 2324,
   "symbols_in_volume": [
    "Character",
    "_regex_core.FULLIGNORECASE",
    "isinstance",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._is_simple_character": {
  "data": {
   "lineno": 2251,
   "symbols_in_volume": [
    "Character",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._merge_common_prefixes": {
  "data": {
   "lineno": 2223,
   "symbols_in_volume": [
    "Sequence",
    "_regex_core.Branch",
    "collections.defaultdict",
    "isinstance",
    "len",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._reduce_to_set": {
  "data": {
   "lineno": 2255,
   "symbols_in_volume": [
    "Character",
    "Property",
    "_regex_core.Branch",
    "_regex_core.NOCASE",
    "isinstance",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._split_common_prefix": {
  "data": {
   "lineno": 2088,
   "symbols_in_volume": [
    "Sequence",
    "_regex_core.Branch",
    "_regex_core.make_sequence",
    "all",
    "isinstance",
    "len",
    "min",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch._split_common_suffix": {
  "data": {
   "lineno": 2130,
   "symbols_in_volume": [
    "Sequence",
    "_regex_core.Branch",
    "_regex_core.make_sequence",
    "all",
    "isinstance",
    "len",
    "min",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.can_be_affix": {
  "data": {
   "lineno": 2045,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.contains_group": {
  "data": {
   "lineno": 2048,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.dump": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.fix_groups": {
  "data": {
   "lineno": 1983
  },
  "type": "function"
 },
 "_regex_core.Branch.get_firstset": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.is_atomic": {
  "data": {
   "lineno": 2042,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.is_empty": {
  "data": {
   "lineno": 2355,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.max_width": {
  "data": {
   "lineno": 2361,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.optimise": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "_regex_core.make_sequence",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Branch.pack_characters": {
  "data": {
   "lineno": 2034
  },
  "type": "function"
 },
 "_regex_core.Branch.remove_captures": {
  "data": {
   "lineno": 2038
  },
  "type": "function"
 },
 "_regex_core.CASE_FLAGS": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "_regex_core.CASE_FLAGS_COMBINATIONS": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "_regex_core.CASE_TEXT": {
  "data": {
   "lineno": 1785
  },
  "type": "constant"
 },
 "_regex_core.CHARACTER_ESCAPES": {
  "data": {
   "lineno": 4421
  },
  "type": "constant"
 },
 "_regex_core.CHARSET_ESCAPES": {
  "data": {
   "lineno": 4432
  },
  "type": "constant"
 },
 "_regex_core.CallGroup": {
  "data": {
   "lineno": 2364,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.CallGroup.__eq__": {
  "data": {
   "lineno": 2401,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup.__init__": {
  "data": {
   "lineno": 2365,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup._compile": {
  "data": {
   "lineno": 2395,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup.dump": {
  "data": {
   "lineno": 2398,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup.fix_groups": {
  "data": {
   "lineno": 2373,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_regex_core.error",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup.max_width": {
  "data": {
   "lineno": 2404,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallGroup.remove_captures": {
  "data": {
   "lineno": 2392,
   "symbols_in_volume": [
    "_regex_core.error"
   ]
  },
  "type": "function"
 },
 "_regex_core.CallRef": {
  "data": {
   "lineno": 2407,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.CallRef.__init__": {
  "data": {
   "lineno": 2408
  },
  "type": "function"
 },
 "_regex_core.CallRef._compile": {
  "data": {
   "lineno": 2412,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character": {
  "data": {
   "lineno": 2416,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Character.__init__": {
  "data": {
   "lineno": 2423,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core.NOCASE",
    "_regex_core.RegexBase",
    "_regex_core._regex",
    "bool",
    "chr"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character._compile": {
  "data": {
   "lineno": 2452,
   "symbols_in_volume": [
    "PrecompiledCode",
    "String",
    "_regex_core.Branch",
    "_regex_core.FUZZY_OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.ZEROWIDTH_OP",
    "len",
    "ord"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character.dump": {
  "data": {
   "lineno": 2471,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "ascii",
    "chr",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character.get_firstset": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character.get_required_string": {
  "data": {
   "lineno": 2482,
   "symbols_in_volume": [
    "ord",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character.has_simple_start": {
  "data": {
   "lineno": 2449
  },
  "type": "function"
 },
 "_regex_core.Character.matches": {
  "data": {
   "lineno": 2476
  },
  "type": "function"
 },
 "_regex_core.Character.max_width": {
  "data": {
   "lineno": 2479,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Character.optimise": {
  "data": {
   "lineno": 2443
  },
  "type": "function"
 },
 "_regex_core.Character.rebuild": {
  "data": {
   "lineno": 2440,
   "symbols_in_volume": [
    "_regex_core.Character"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional": {
  "data": {
   "lineno": 2490,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Conditional.__eq__": {
  "data": {
   "lineno": 2569,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.__init__": {
  "data": {
   "lineno": 2491,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional._compile": {
  "data": {
   "lineno": 2547,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.can_be_affix": {
  "data": {
   "lineno": 2537
  },
  "type": "function"
 },
 "_regex_core.Conditional.contains_group": {
  "data": {
   "lineno": 2540
  },
  "type": "function"
 },
 "_regex_core.Conditional.dump": {
  "data": {
   "lineno": 2559,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.fix_groups": {
  "data": {
   "lineno": 2499,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_regex_core.error",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.get_firstset": {
  "data": {
   "lineno": 2543
  },
  "type": "function"
 },
 "_regex_core.Conditional.is_atomic": {
  "data": {
   "lineno": 2534
  },
  "type": "function"
 },
 "_regex_core.Conditional.is_empty": {
  "data": {
   "lineno": 2566
  },
  "type": "function"
 },
 "_regex_core.Conditional.max_width": {
  "data": {
   "lineno": 2573,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.optimise": {
  "data": {
   "lineno": 2519,
   "symbols_in_volume": [
    "_regex_core.Conditional"
   ]
  },
  "type": "function"
 },
 "_regex_core.Conditional.pack_characters": {
  "data": {
   "lineno": 2525
  },
  "type": "function"
 },
 "_regex_core.Conditional.remove_captures": {
  "data": {
   "lineno": 2530
  },
  "type": "function"
 },
 "_regex_core.DEFAULT_FLAGS": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "_regex_core.DEFAULT_VERSION": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "_regex_core.DIGITS": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "_regex_core.DefaultBoundary": {
  "data": {
   "lineno": 2576,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.DefaultEndOfWord": {
  "data": {
   "lineno": 2580,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.DefaultStartOfWord": {
  "data": {
   "lineno": 2584,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfLine": {
  "data": {
   "lineno": 2588,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfLineU": {
  "data": {
   "lineno": 2592,
   "symbols_in_volume": [
    "_regex_core.EndOfLine",
    "_regex_core.OP"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfString": {
  "data": {
   "lineno": 2596,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfStringLine": {
  "data": {
   "lineno": 2600,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfStringLineU": {
  "data": {
   "lineno": 2604,
   "symbols_in_volume": [
    "_regex_core.EndOfStringLine",
    "_regex_core.OP"
   ]
  },
  "type": "class"
 },
 "_regex_core.EndOfWord": {
  "data": {
   "lineno": 2608,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.FULLIGNORECASE": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "_regex_core.FULL_CASE_FOLDING": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "_regex_core.FUZZY_OP": {
  "data": {
   "lineno": 1780
  },
  "type": "constant"
 },
 "_regex_core.Failure": {
  "data": {
   "lineno": 2612,
   "symbols_in_volume": [
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Failure._compile": {
  "data": {
   "lineno": 2615,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy": {
  "data": {
   "lineno": 2618,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Fuzzy.__eq__": {
  "data": {
   "lineno": 2704,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.__init__": {
  "data": {
   "lineno": 2619,
   "symbols_in_volume": [
    "_regex_core.RegexBase",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy._compile": {
  "data": {
   "lineno": 2671,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.REVERSE_OP",
    "_regex_core.UNLIMITED",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy._constraints_to_string": {
  "data": {
   "lineno": 2711,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.contains_group": {
  "data": {
   "lineno": 2668
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.dump": {
  "data": {
   "lineno": 2694,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.fix_groups": {
  "data": {
   "lineno": 2654
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.is_atomic": {
  "data": {
   "lineno": 2665
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.is_empty": {
  "data": {
   "lineno": 2701
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.max_width": {
  "data": {
   "lineno": 2708,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.pack_characters": {
  "data": {
   "lineno": 2657
  },
  "type": "function"
 },
 "_regex_core.Fuzzy.remove_captures": {
  "data": {
   "lineno": 2661
  },
  "type": "function"
 },
 "_regex_core.GLOBAL_FLAGS": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "_regex_core.Grapheme": {
  "data": {
   "lineno": 2744,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Grapheme._compile": {
  "data": {
   "lineno": 2745,
   "symbols_in_volume": [
    "GraphemeBoundary",
    "LazyRepeat",
    "Sequence",
    "_regex_core.AnyAll",
    "_regex_core.Atomic"
   ]
  },
  "type": "function"
 },
 "_regex_core.Grapheme.dump": {
  "data": {
   "lineno": 2753,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Grapheme.max_width": {
  "data": {
   "lineno": 2756,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.GraphemeBoundary": {
  "data": {
   "lineno": 2759
  },
  "type": "class"
 },
 "_regex_core.GraphemeBoundary.compile": {
  "data": {
   "lineno": 2760,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat": {
  "data": {
   "lineno": 2763,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.GreedyRepeat.__eq__": {
  "data": {
   "lineno": 2831,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.__init__": {
  "data": {
   "lineno": 2767,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat._compile": {
  "data": {
   "lineno": 2805,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.UNLIMITED",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.can_be_affix": {
  "data": {
   "lineno": 2792
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.contains_group": {
  "data": {
   "lineno": 2795
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.dump": {
  "data": {
   "lineno": 2818,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.fix_groups": {
  "data": {
   "lineno": 2773
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.get_firstset": {
  "data": {
   "lineno": 2798
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.get_required_string": {
  "data": {
   "lineno": 2842,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED",
    "min"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.is_atomic": {
  "data": {
   "lineno": 2789
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.is_empty": {
  "data": {
   "lineno": 2828
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.max_width": {
  "data": {
   "lineno": 2836,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.optimise": {
  "data": {
   "lineno": 2776,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.pack_characters": {
  "data": {
   "lineno": 2781
  },
  "type": "function"
 },
 "_regex_core.GreedyRepeat.remove_captures": {
  "data": {
   "lineno": 2785
  },
  "type": "function"
 },
 "_regex_core.Group": {
  "data": {
   "lineno": 2885,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Group.__eq__": {
  "data": {
   "lineno": 2953,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Group.__init__": {
  "data": {
   "lineno": 2886,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.Group._compile": {
  "data": {
   "lineno": 2925,
   "symbols_in_volume": [
    "_regex_core.OP",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.Group.can_be_affix": {
  "data": {
   "lineno": 2913
  },
  "type": "function"
 },
 "_regex_core.Group.contains_group": {
  "data": {
   "lineno": 2916
  },
  "type": "function"
 },
 "_regex_core.Group.dump": {
  "data": {
   "lineno": 2946,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Group.fix_groups": {
  "data": {
   "lineno": 2894
  },
  "type": "function"
 },
 "_regex_core.Group.get_firstset": {
  "data": {
   "lineno": 2919
  },
  "type": "function"
 },
 "_regex_core.Group.get_required_string": {
  "data": {
   "lineno": 2960
  },
  "type": "function"
 },
 "_regex_core.Group.has_simple_start": {
  "data": {
   "lineno": 2922
  },
  "type": "function"
 },
 "_regex_core.Group.is_atomic": {
  "data": {
   "lineno": 2910
  },
  "type": "function"
 },
 "_regex_core.Group.max_width": {
  "data": {
   "lineno": 2957
  },
  "type": "function"
 },
 "_regex_core.Group.optimise": {
  "data": {
   "lineno": 2898,
   "symbols_in_volume": [
    "_regex_core.Group"
   ]
  },
  "type": "function"
 },
 "_regex_core.Group.pack_characters": {
  "data": {
   "lineno": 2903
  },
  "type": "function"
 },
 "_regex_core.Group.remove_captures": {
  "data": {
   "lineno": 2907
  },
  "type": "function"
 },
 "_regex_core.HEX_DIGITS": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "_regex_core.HEX_ESCAPES": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "_regex_core.INDENT": {
  "data": {
   "lineno": 1777
  },
  "type": "constant"
 },
 "_regex_core.Info": {
  "data": {
   "lineno": 4185
  },
  "type": "class"
 },
 "_regex_core.Info.__init__": {
  "data": {
   "lineno": 4188,
   "symbols_in_volume": [
    "_regex_core.DEFAULT_FLAGS",
    "_regex_core.DEFAULT_VERSION",
    "_regex_core._ALL_VERSIONS"
   ]
  },
  "type": "function"
 },
 "_regex_core.Info.close_group": {
  "data": {
   "lineno": 4233
  },
  "type": "function"
 },
 "_regex_core.Info.is_open_group": {
  "data": {
   "lineno": 4236,
   "symbols_in_volume": [
    "_regex_core.DEFAULT_VERSION",
    "_regex_core._ALL_VERSIONS",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.Info.open_group": {
  "data": {
   "lineno": 4207,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Keep": {
  "data": {
   "lineno": 2963,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.LazyRepeat": {
  "data": {
   "lineno": 2967,
   "symbols_in_volume": [
    "_regex_core.GreedyRepeat",
    "_regex_core.OP"
   ]
  },
  "type": "class"
 },
 "_regex_core.Literal": {
  "data": {
   "lineno": 3859,
   "symbols_in_volume": [
    "_regex_core.String"
   ]
  },
  "type": "class"
 },
 "_regex_core.Literal.dump": {
  "data": {
   "lineno": 3860,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "ascii",
    "chr",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround": {
  "data": {
   "lineno": 2971,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.LookAround.__eq__": {
  "data": {
   "lineno": 3026,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround.__init__": {
  "data": {
   "lineno": 2974,
   "symbols_in_volume": [
    "_regex_core.RegexBase",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround._compile": {
  "data": {
   "lineno": 3006,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.REVERSE_OP",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround.can_be_affix": {
  "data": {
   "lineno": 3000
  },
  "type": "function"
 },
 "_regex_core.LookAround.contains_group": {
  "data": {
   "lineno": 3003
  },
  "type": "function"
 },
 "_regex_core.LookAround.dump": {
  "data": {
   "lineno": 3018,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround.fix_groups": {
  "data": {
   "lineno": 2980
  },
  "type": "function"
 },
 "_regex_core.LookAround.is_atomic": {
  "data": {
   "lineno": 2997
  },
  "type": "function"
 },
 "_regex_core.LookAround.is_empty": {
  "data": {
   "lineno": 3023
  },
  "type": "function"
 },
 "_regex_core.LookAround.max_width": {
  "data": {
   "lineno": 3030
  },
  "type": "function"
 },
 "_regex_core.LookAround.optimise": {
  "data": {
   "lineno": 2983,
   "symbols_in_volume": [
    "_regex_core.LookAround"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAround.pack_characters": {
  "data": {
   "lineno": 2990
  },
  "type": "function"
 },
 "_regex_core.LookAround.remove_captures": {
  "data": {
   "lineno": 2994
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional": {
  "data": {
   "lineno": 3033,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.LookAroundConditional.__eq__": {
  "data": {
   "lineno": 3112,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.__init__": {
  "data": {
   "lineno": 3036,
   "symbols_in_volume": [
    "_regex_core.RegexBase",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional._compile": {
  "data": {
   "lineno": 3084,
   "symbols_in_volume": [
    "_regex_core.OP",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.can_be_affix": {
  "data": {
   "lineno": 3072
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.contains_group": {
  "data": {
   "lineno": 3076
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.dump": {
  "data": {
   "lineno": 3098,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.fix_groups": {
  "data": {
   "lineno": 3044
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.get_firstset": {
  "data": {
   "lineno": 3080
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.get_required_string": {
  "data": {
   "lineno": 3119
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.is_atomic": {
  "data": {
   "lineno": 3068
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.is_empty": {
  "data": {
   "lineno": 3108
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.max_width": {
  "data": {
   "lineno": 3116,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.optimise": {
  "data": {
   "lineno": 3049,
   "symbols_in_volume": [
    "_regex_core.LookAroundConditional"
   ]
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.pack_characters": {
  "data": {
   "lineno": 3057
  },
  "type": "function"
 },
 "_regex_core.LookAroundConditional.remove_captures": {
  "data": {
   "lineno": 3063
  },
  "type": "function"
 },
 "_regex_core.NAMED_CHAR_PART": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "_regex_core.NOCASE": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "_regex_core.Namespace": {
  "data": {
   "lineno": 232
  },
  "type": "class"
 },
 "_regex_core.OCT_DIGITS": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "_regex_core.OP": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "_regex_core.OPCODES": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "_regex_core.POSITION_ESCAPES": {
  "data": {
   "lineno": 4442
  },
  "type": "constant"
 },
 "_regex_core.POSITIVE_OP": {
  "data": {
   "lineno": 1778
  },
  "type": "constant"
 },
 "_regex_core.POS_TEXT": {
  "data": {
   "lineno": 1784
  },
  "type": "constant"
 },
 "_regex_core.PROPERTIES": {
  "data": {
   "lineno": 4407
  },
  "type": "constant"
 },
 "_regex_core.PROPERTY_NAMES": {
  "data": {
   "lineno": 4410
  },
  "type": "constant"
 },
 "_regex_core.PROPERTY_NAME_PART": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "_regex_core.ParseError": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_regex_core.PossessiveRepeat": {
  "data": {
   "lineno": 2855,
   "symbols_in_volume": [
    "_regex_core.GreedyRepeat"
   ]
  },
  "type": "class"
 },
 "_regex_core.PossessiveRepeat._compile": {
  "data": {
   "lineno": 2859,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.UNLIMITED",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.PossessiveRepeat.dump": {
  "data": {
   "lineno": 2873,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.PossessiveRepeat.is_atomic": {
  "data": {
   "lineno": 2856
  },
  "type": "function"
 },
 "_regex_core.PrecompiledCode": {
  "data": {
   "lineno": 3122,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.PrecompiledCode.__init__": {
  "data": {
   "lineno": 3123
  },
  "type": "function"
 },
 "_regex_core.PrecompiledCode._compile": {
  "data": {
   "lineno": 3126,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property": {
  "data": {
   "lineno": 3129,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Property.__init__": {
  "data": {
   "lineno": 3136,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.NOCASE",
    "_regex_core.RegexBase",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property._compile": {
  "data": {
   "lineno": 3159,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.ZEROWIDTH_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property.dump": {
  "data": {
   "lineno": 3169,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property.get_firstset": {
  "data": {
   "lineno": 3153,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property.has_simple_start": {
  "data": {
   "lineno": 3156
  },
  "type": "function"
 },
 "_regex_core.Property.matches": {
  "data": {
   "lineno": 3175,
   "symbols_in_volume": [
    "_regex_core._regex"
   ]
  },
  "type": "function"
 },
 "_regex_core.Property.max_width": {
  "data": {
   "lineno": 3178
  },
  "type": "function"
 },
 "_regex_core.Property.optimise": {
  "data": {
   "lineno": 3150
  },
  "type": "function"
 },
 "_regex_core.Property.rebuild": {
  "data": {
   "lineno": 3147,
   "symbols_in_volume": [
    "_regex_core.Property"
   ]
  },
  "type": "function"
 },
 "_regex_core.Prune": {
  "data": {
   "lineno": 3181,
   "symbols_in_volume": [
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Prune._compile": {
  "data": {
   "lineno": 3184,
   "symbols_in_volume": [
    "_regex_core.OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.REGEX_FLAGS": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "_regex_core.REQUIRED_OP": {
  "data": {
   "lineno": 1782
  },
  "type": "constant"
 },
 "_regex_core.REVERSE_OP": {
  "data": {
   "lineno": 1781
  },
  "type": "constant"
 },
 "_regex_core.Range": {
  "data": {
   "lineno": 3187,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Range.__init__": {
  "data": {
   "lineno": 3194,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.NOCASE",
    "_regex_core.RegexBase",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.Range._compile": {
  "data": {
   "lineno": 3240,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.ZEROWIDTH_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.Range.dump": {
  "data": {
   "lineno": 3251,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "ascii",
    "chr",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.Range.matches": {
  "data": {
   "lineno": 3258
  },
  "type": "function"
 },
 "_regex_core.Range.max_width": {
  "data": {
   "lineno": 3261
  },
  "type": "function"
 },
 "_regex_core.Range.optimise": {
  "data": {
   "lineno": 3209,
   "symbols_in_volume": [
    "String",
    "_regex_core.Branch",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core._regex",
    "len",
    "ord"
   ]
  },
  "type": "function"
 },
 "_regex_core.Range.rebuild": {
  "data": {
   "lineno": 3206,
   "symbols_in_volume": [
    "_regex_core.Range"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup": {
  "data": {
   "lineno": 3264,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.RefGroup.__init__": {
  "data": {
   "lineno": 3271,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.NOCASE",
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup._compile": {
  "data": {
   "lineno": 3297,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup.dump": {
  "data": {
   "lineno": 3303,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup.fix_groups": {
  "data": {
   "lineno": 3280,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_regex_core.error",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup.max_width": {
  "data": {
   "lineno": 3307,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.RefGroup.remove_captures": {
  "data": {
   "lineno": 3294,
   "symbols_in_volume": [
    "_regex_core.error"
   ]
  },
  "type": "function"
 },
 "_regex_core.RegexBase": {
  "data": {
   "lineno": 1794
  },
  "type": "class"
 },
 "_regex_core.RegexBase.__eq__": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.RegexBase.__hash__": {
  "data": {
   "lineno": 1851,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "_regex_core.RegexBase.__init__": {
  "data": {
   "lineno": 1795
  },
  "type": "function"
 },
 "_regex_core.RegexBase.__ne__": {
  "data": {
   "lineno": 1857
  },
  "type": "function"
 },
 "_regex_core.RegexBase.can_be_affix": {
  "data": {
   "lineno": 1833
  },
  "type": "function"
 },
 "_regex_core.RegexBase.compile": {
  "data": {
   "lineno": 1845
  },
  "type": "function"
 },
 "_regex_core.RegexBase.contains_group": {
  "data": {
   "lineno": 1836
  },
  "type": "function"
 },
 "_regex_core.RegexBase.fix_groups": {
  "data": {
   "lineno": 1818
  },
  "type": "function"
 },
 "_regex_core.RegexBase.get_firstset": {
  "data": {
   "lineno": 1839,
   "symbols_in_volume": [
    "_regex_core._FirstSetError"
   ]
  },
  "type": "function"
 },
 "_regex_core.RegexBase.get_required_string": {
  "data": {
   "lineno": 1860
  },
  "type": "function"
 },
 "_regex_core.RegexBase.has_simple_start": {
  "data": {
   "lineno": 1842
  },
  "type": "function"
 },
 "_regex_core.RegexBase.is_atomic": {
  "data": {
   "lineno": 1830
  },
  "type": "function"
 },
 "_regex_core.RegexBase.is_empty": {
  "data": {
   "lineno": 1848
  },
  "type": "function"
 },
 "_regex_core.RegexBase.optimise": {
  "data": {
   "lineno": 1821
  },
  "type": "function"
 },
 "_regex_core.RegexBase.pack_characters": {
  "data": {
   "lineno": 1824
  },
  "type": "function"
 },
 "_regex_core.RegexBase.remove_captures": {
  "data": {
   "lineno": 1827
  },
  "type": "function"
 },
 "_regex_core.RegexBase.with_flags": {
  "data": {
   "lineno": 1798,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS",
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.SCOPED_FLAGS": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "_regex_core.SET_OPS": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "_regex_core.SPECIAL_CHARS": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "_regex_core.Scanner": {
  "data": {
   "lineno": 4310
  },
  "type": "class"
 },
 "_regex_core.Scanner.__init__": {
  "data": {
   "lineno": 4311,
   "symbols_in_volume": [
    "ValueError",
    "_regex_core.Branch",
    "_regex_core.DEFAULT_VERSION",
    "_regex_core.GLOBAL_FLAGS",
    "_regex_core.Group",
    "_regex_core.Info",
    "_regex_core.OP",
    "_regex_core.Source",
    "_regex_core._ALL_VERSIONS",
    "_regex_core._FirstSetError",
    "_regex_core._check_group_features",
    "_regex_core._compile_firstset",
    "_regex_core._flatten_code",
    "_regex_core._get_required_string",
    "_regex_core._parse_pattern",
    "_regex_core._regex",
    "_regex_core.error",
    "bool",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Scanner.scan": {
  "data": {
   "lineno": 4384,
   "symbols_in_volume": [
    "_regex_core.string",
    "action",
    "append",
    "hasattr",
    "match"
   ]
  },
  "type": "function"
 },
 "_regex_core.SearchAnchor": {
  "data": {
   "lineno": 3310,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Sequence": {
  "data": {
   "lineno": 3314,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Sequence.__eq__": {
  "data": {
   "lineno": 3506,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.__init__": {
  "data": {
   "lineno": 3315,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence._compile": {
  "data": {
   "lineno": 3405
  },
  "type": "function"
 },
 "_regex_core.Sequence._fix_full_casefold": {
  "data": {
   "lineno": 3448,
   "symbols_in_volume": [
    "Literal",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core.Sequence",
    "_regex_core._regex",
    "_regex_core.string",
    "chr",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence._flush_characters": {
  "data": {
   "lineno": 3420,
   "symbols_in_volume": [
    "String",
    "_regex_core.Character",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.Sequence",
    "_regex_core.is_cased_i",
    "any",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence._merge_chunks": {
  "data": {
   "lineno": 3482,
   "symbols_in_volume": [
    "len",
    "max",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.can_be_affix": {
  "data": {
   "lineno": 3383
  },
  "type": "function"
 },
 "_regex_core.Sequence.contains_group": {
  "data": {
   "lineno": 3386,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.dump": {
  "data": {
   "lineno": 3416
  },
  "type": "function"
 },
 "_regex_core.Sequence.fix_groups": {
  "data": {
   "lineno": 3322
  },
  "type": "function"
 },
 "_regex_core.Sequence.get_firstset": {
  "data": {
   "lineno": 3389,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.get_required_string": {
  "data": {
   "lineno": 3512
  },
  "type": "function"
 },
 "_regex_core.Sequence.has_simple_start": {
  "data": {
   "lineno": 3402,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.is_atomic": {
  "data": {
   "lineno": 3380,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.is_empty": {
  "data": {
   "lineno": 3503,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.max_width": {
  "data": {
   "lineno": 3509,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.optimise": {
  "data": {
   "lineno": 3326,
   "symbols_in_volume": [
    "_regex_core.Sequence",
    "_regex_core.make_sequence",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.pack_characters": {
  "data": {
   "lineno": 3338,
   "symbols_in_volume": [
    "String",
    "_regex_core.Character",
    "_regex_core.NOCASE",
    "_regex_core.Sequence",
    "_regex_core.is_cased_i",
    "_regex_core.make_sequence",
    "any",
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.Sequence.remove_captures": {
  "data": {
   "lineno": 3376
  },
  "type": "function"
 },
 "_regex_core.SetBase": {
  "data": {
   "lineno": 3527,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.SetBase.__init__": {
  "data": {
   "lineno": 3528,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.NOCASE",
    "_regex_core.RegexBase",
    "bool",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase._compile": {
  "data": {
   "lineno": 3552,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.ZEROWIDTH_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase._handle_case_folding": {
  "data": {
   "lineno": 3574,
   "symbols_in_volume": [
    "String",
    "_regex_core.Branch",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core._regex",
    "ord",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase.dump": {
  "data": {
   "lineno": 3568,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase.get_firstset": {
  "data": {
   "lineno": 3546,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase.has_simple_start": {
  "data": {
   "lineno": 3549
  },
  "type": "function"
 },
 "_regex_core.SetBase.max_width": {
  "data": {
   "lineno": 3604,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core._regex",
    "len",
    "max",
    "ord",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetBase.rebuild": {
  "data": {
   "lineno": 3542,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetDiff": {
  "data": {
   "lineno": 3629,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.SetBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.SetDiff.matches": {
  "data": {
   "lineno": 3651
  },
  "type": "function"
 },
 "_regex_core.SetDiff.optimise": {
  "data": {
   "lineno": 3637,
   "symbols_in_volume": [
    "SetUnion",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetInter": {
  "data": {
   "lineno": 3655,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.SetBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.SetInter.matches": {
  "data": {
   "lineno": 3681,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetInter.optimise": {
  "data": {
   "lineno": 3663,
   "symbols_in_volume": [
    "_regex_core.SetInter",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetSymDiff": {
  "data": {
   "lineno": 3685,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.SetBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.SetSymDiff.matches": {
  "data": {
   "lineno": 3711
  },
  "type": "function"
 },
 "_regex_core.SetSymDiff.optimise": {
  "data": {
   "lineno": 3693,
   "symbols_in_volume": [
    "_regex_core.SetSymDiff",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetUnion": {
  "data": {
   "lineno": 3718,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.SetBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.SetUnion._compile": {
  "data": {
   "lineno": 3746,
   "symbols_in_volume": [
    "_regex_core.Character",
    "_regex_core.FUZZY_OP",
    "_regex_core.OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.ZEROWIDTH_OP",
    "collections.defaultdict",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetUnion.matches": {
  "data": {
   "lineno": 3780,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_regex_core.SetUnion.optimise": {
  "data": {
   "lineno": 3726,
   "symbols_in_volume": [
    "_regex_core.SetUnion",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.Skip": {
  "data": {
   "lineno": 3784,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.Source": {
  "data": {
   "lineno": 3963
  },
  "type": "class"
 },
 "_regex_core.Source.__init__": {
  "data": {
   "lineno": 3965,
   "symbols_in_volume": [
    "_regex_core.string",
    "bytes",
    "chr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.at_end": {
  "data": {
   "lineno": 4163,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.expect": {
  "data": {
   "lineno": 4159,
   "symbols_in_volume": [
    "_regex_core.error"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.get": {
  "data": {
   "lineno": 3977,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.get_many": {
  "data": {
   "lineno": 4005,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.get_while": {
  "data": {
   "lineno": 4043,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.match": {
  "data": {
   "lineno": 4120,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.Source.skip_while": {
  "data": {
   "lineno": 4091,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_regex_core.string",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.StartOfLine": {
  "data": {
   "lineno": 3788,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.StartOfLineU": {
  "data": {
   "lineno": 3792,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.StartOfLine"
   ]
  },
  "type": "class"
 },
 "_regex_core.StartOfString": {
  "data": {
   "lineno": 3796,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.StartOfWord": {
  "data": {
   "lineno": 3800,
   "symbols_in_volume": [
    "_regex_core.OP",
    "_regex_core.ZeroWidthBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.String": {
  "data": {
   "lineno": 3804,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.String.__init__": {
  "data": {
   "lineno": 3811,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.FULLIGNORECASE",
    "_regex_core.FULL_CASE_FOLDING",
    "_regex_core.NOCASE",
    "_regex_core._regex",
    "chr",
    "ord",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.String._compile": {
  "data": {
   "lineno": 3839,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.REQUIRED_OP",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.String.dump": {
  "data": {
   "lineno": 3848,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "ascii",
    "chr",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.String.get_firstset": {
  "data": {
   "lineno": 3828,
   "symbols_in_volume": [
    "_regex_core.Character",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.String.get_required_string": {
  "data": {
   "lineno": 3856
  },
  "type": "function"
 },
 "_regex_core.String.has_simple_start": {
  "data": {
   "lineno": 3836
  },
  "type": "function"
 },
 "_regex_core.String.max_width": {
  "data": {
   "lineno": 3853,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet": {
  "data": {
   "lineno": 3866,
   "symbols_in_volume": [
    "_regex_core.FULLIGNORECASE",
    "_regex_core.NOCASE",
    "_regex_core.OP",
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.StringSet.__init__": {
  "data": {
   "lineno": 3873,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS_COMBINATIONS",
    "_regex_core.NOCASE",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet._compile": {
  "data": {
   "lineno": 3884,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "_regex_core.Character",
    "_regex_core.Sequence",
    "_regex_core._ALL_ENCODINGS",
    "_regex_core.string",
    "len",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet._flatten": {
  "data": {
   "lineno": 3931,
   "symbols_in_volume": [
    "_regex_core.Branch",
    "_regex_core.Character",
    "_regex_core.Sequence",
    "_regex_core.String",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet._folded": {
  "data": {
   "lineno": 3925,
   "symbols_in_volume": [
    "_regex_core._regex",
    "isinstance",
    "list",
    "ord",
    "str"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet.dump": {
  "data": {
   "lineno": 3921,
   "symbols_in_volume": [
    "_regex_core.CASE_TEXT",
    "_regex_core.INDENT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.StringSet.max_width": {
  "data": {
   "lineno": 3952,
   "symbols_in_volume": [
    "_regex_core._ALL_ENCODINGS",
    "_regex_core._regex",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "_regex_core.UNLIMITED": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "_regex_core.VERBS": {
  "data": {
   "lineno": 4462
  },
  "type": "constant"
 },
 "_regex_core.WORD_POSITION_ESCAPES": {
  "data": {
   "lineno": 4453
  },
  "type": "constant"
 },
 "_regex_core.ZEROWIDTH_OP": {
  "data": {
   "lineno": 1779
  },
  "type": "constant"
 },
 "_regex_core.ZeroWidthBase": {
  "data": {
   "lineno": 1864,
   "symbols_in_volume": [
    "_regex_core.RegexBase"
   ]
  },
  "type": "class"
 },
 "_regex_core.ZeroWidthBase.__init__": {
  "data": {
   "lineno": 1865,
   "symbols_in_volume": [
    "_regex_core.RegexBase",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.ZeroWidthBase._compile": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": [
    "_regex_core.FUZZY_OP",
    "_regex_core.POSITIVE_OP",
    "_regex_core.REVERSE_OP"
   ]
  },
  "type": "function"
 },
 "_regex_core.ZeroWidthBase.dump": {
  "data": {
   "lineno": 1884,
   "symbols_in_volume": [
    "_regex_core.INDENT",
    "_regex_core.POS_TEXT",
    "print"
   ]
  },
  "type": "function"
 },
 "_regex_core.ZeroWidthBase.get_firstset": {
  "data": {
   "lineno": 1871,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.ZeroWidthBase.max_width": {
  "data": {
   "lineno": 1888
  },
  "type": "function"
 },
 "_regex_core._ALL_ENCODINGS": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "_regex_core._ALL_VERSIONS": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "_regex_core._BINARY_VALUES": {
  "data": {
   "lineno": 1583
  },
  "type": "constant"
 },
 "_regex_core._FirstSetError": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_regex_core._POSIX_CLASSES": {
  "data": {
   "lineno": 1581
  },
  "type": "constant"
 },
 "_regex_core._QUANTIFIERS": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "_regex_core._UnscopedFlagSet": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_regex_core.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "_regex_core._check_firstset": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "SetUnion",
    "_regex_core.NOCASE",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core._check_group_features": {
  "data": {
   "lineno": 4250,
   "symbols_in_volume": [
    "_regex_core.CallRef",
    "_regex_core.Fuzzy",
    "bool",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core._compile_firstset": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "_check_firstset",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core._compile_replacement": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "_regex_core.ALPHA",
    "_regex_core.DIGITS",
    "_regex_core.HEX_ESCAPES",
    "_regex_core.OCT_DIGITS",
    "_regex_core.error",
    "_regex_core.is_octal",
    "bytes",
    "compile_repl_group",
    "int",
    "isinstance",
    "len",
    "ord",
    "parse_repl_hex_escape",
    "parse_repl_named_char"
   ]
  },
  "type": "function"
 },
 "_regex_core._flatten_code": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "_regex_core._fold_case": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "_regex_core._ALL_ENCODINGS",
    "_regex_core._regex",
    "_regex_core.string"
   ]
  },
  "type": "function"
 },
 "_regex_core._get_required_string": {
  "data": {
   "lineno": 4289,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core._parse_pattern": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "Branch",
    "len",
    "parse_sequence"
   ]
  },
  "type": "function"
 },
 "_regex_core._regex": {
  "data": {
   "shadows": "_regex"
  },
  "type": "import"
 },
 "_regex_core._shrink_cache": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "KeyError",
    "_regex_core.random",
    "hasattr",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_regex_core.apply_constraint": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "Fuzzy",
    "_regex_core.error",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_regex_core.apply_quantifier": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "_regex_core.error",
    "isinstance",
    "repeated"
   ]
  },
  "type": "function"
 },
 "_regex_core.compile_repl_group": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "_regex_core.error",
    "_regex_core.parse_name",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "_regex_core.error": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_regex_core.error.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception.__init__",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_regex_core.float_to_rational": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "_regex_core.error",
    "abs",
    "int"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_above_limit": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "_regex_core.UNLIMITED"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_cased_f": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "_regex_core._regex",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_cased_i": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "_regex_core._regex",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_decimal": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "_regex_core.DIGITS",
    "_regex_core.string",
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_hexadecimal": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "_regex_core.HEX_DIGITS",
    "_regex_core.string",
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.is_octal": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "_regex_core.OCT_DIGITS",
    "_regex_core.string",
    "all"
   ]
  },
  "type": "function"
 },
 "_regex_core.lookup_property": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "Property",
    "_regex_core._BINARY_VALUES",
    "_regex_core._POSIX_CLASSES",
    "_regex_core.error",
    "_regex_core.standardise_name",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_case_flags": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "_regex_core.CASE_FLAGS"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_character": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "Character",
    "_regex_core.make_case_flags"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_property": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "_regex_core.make_case_flags"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_ref_group": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "RefGroup",
    "_regex_core.make_case_flags"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_sequence": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": [
    "Sequence",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.make_string_set": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "StringSet",
    "_regex_core.make_case_flags"
   ]
  },
  "type": "function"
 },
 "_regex_core.name": {
  "data": {
   "lineno": 4413
  },
  "type": "constant"
 },
 "_regex_core.numeric_to_rational": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "ValueError",
    "_regex_core.float_to_rational",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_atomic": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "Atomic",
    "_regex_core._parse_pattern",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_call_group": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "CallGroup",
    "_regex_core.DIGITS"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_call_named_group": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "CallGroup",
    "parse_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_comment": {
  "data": {
   "lineno": 870
  },
  "type": "function"
 },
 "_regex_core.parse_common": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "Branch",
    "_regex_core.parse_sequence",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_conditional": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "Conditional",
    "Sequence",
    "_regex_core.error",
    "_regex_core.parse_sequence",
    "bool",
    "parse_lookaround_conditional",
    "parse_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_constraint": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "_regex_core.ParseError"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_cost_constraint": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "_regex_core.ALPHA",
    "_regex_core.DIGITS",
    "_regex_core.ParseError",
    "_regex_core.error",
    "parse_constraint",
    "parse_cost_limit",
    "parse_fuzzy_compare"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_cost_equation": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "_regex_core.ParseError",
    "_regex_core.error",
    "_regex_core.parse_fuzzy_compare",
    "int",
    "parse_cost_term",
    "parse_count"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_cost_limit": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "ValueError",
    "_regex_core.error",
    "int",
    "parse_count"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_cost_term": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "_regex_core.ParseError",
    "_regex_core.error",
    "int",
    "parse_count"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_count": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "_regex_core.DIGITS"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_escape": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "Character",
    "Grapheme",
    "SearchAnchor",
    "_regex_core.ALPHA",
    "_regex_core.DIGITS",
    "_regex_core.HEX_ESCAPES",
    "_regex_core.error",
    "_regex_core.make_character",
    "ord",
    "parse_group_ref",
    "parse_hex_escape",
    "parse_named_char",
    "parse_numeric_escape",
    "parse_property",
    "parse_string_set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_extension": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "Group",
    "_regex_core._parse_pattern",
    "_regex_core.error",
    "_regex_core.make_ref_group",
    "bool",
    "parse_call_named_group",
    "parse_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_flag_set": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "KeyError",
    "_regex_core.REGEX_FLAGS"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_flags": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "_regex_core.error",
    "_regex_core.parse_flag_set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_flags_subpattern": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "_regex_core.GLOBAL_FLAGS",
    "_regex_core._UnscopedFlagSet",
    "_regex_core.error",
    "_regex_core.parse_flags",
    "_regex_core.parse_subpattern",
    "parse_positional_flags"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_fuzzy": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "_regex_core.ParseError",
    "_regex_core.error",
    "parse_fuzzy_item"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_fuzzy_compare": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "_regex_core.parse_fuzzy_item": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "_regex_core.ParseError",
    "parse_cost_constraint",
    "parse_cost_equation"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_group_ref": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "_regex_core.error",
    "_regex_core.make_ref_group",
    "_regex_core.parse_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_hex_escape": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "ValueError",
    "_regex_core.HEX_DIGITS",
    "_regex_core.error",
    "_regex_core.make_character",
    "int",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_limited_quantifier": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "_regex_core.error",
    "_regex_core.is_above_limit",
    "int",
    "parse_count"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_lookaround": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "LookAround",
    "_regex_core._parse_pattern",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_lookaround_conditional": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "LookAroundConditional",
    "Sequence",
    "_regex_core._parse_pattern",
    "_regex_core.parse_sequence",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_name": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "_regex_core.error",
    "int",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_named_char": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "KeyError",
    "_regex_core.NAMED_CHAR_PART",
    "_regex_core.error",
    "_regex_core.make_character",
    "_regex_core.unicodedata",
    "ord"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_numeric_escape": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "_regex_core.DIGITS",
    "_regex_core.OCT_DIGITS",
    "_regex_core._ALL_ENCODINGS",
    "_regex_core.error",
    "_regex_core.is_octal",
    "_regex_core.make_character",
    "_regex_core.make_ref_group",
    "int",
    "parse_octal_escape"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_octal_escape": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "ValueError",
    "_regex_core.OCT_DIGITS",
    "_regex_core.error",
    "_regex_core.make_character",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_paren": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "Group",
    "_regex_core._parse_pattern",
    "_regex_core.error",
    "bool",
    "parse_atomic",
    "parse_call_group",
    "parse_call_named_group",
    "parse_comment",
    "parse_common",
    "parse_conditional",
    "parse_extension",
    "parse_flags_subpattern",
    "parse_lookaround",
    "parse_name",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_positional_flags": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "_regex_core.DEFAULT_VERSION",
    "_regex_core._ALL_VERSIONS",
    "_regex_core._UnscopedFlagSet",
    "_regex_core.error",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_posix_class": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "_regex_core.ParseError",
    "_regex_core.parse_property_name",
    "lookup_property"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_property": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "_regex_core.make_character",
    "_regex_core.make_property",
    "lookup_property",
    "ord",
    "parse_property_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_property_name": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "_regex_core.ALNUM",
    "_regex_core.PROPERTY_NAME_PART",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_quantifier": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "_regex_core._QUANTIFIERS",
    "parse_limited_quantifier"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_repl_hex_escape": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "_regex_core.HEX_DIGITS",
    "_regex_core.error",
    "int",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_repl_named_char": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "KeyError",
    "_regex_core.ALPHA",
    "_regex_core.error",
    "_regex_core.unicodedata",
    "ord",
    "set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_sequence": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "Any",
    "AnyAll",
    "AnyU",
    "Character",
    "EndOfLine",
    "EndOfLineU",
    "EndOfStringLine",
    "EndOfStringLineU",
    "Sequence",
    "StartOfLine",
    "StartOfLineU",
    "StartOfString",
    "_regex_core.SPECIAL_CHARS",
    "_regex_core.make_case_flags",
    "apply_constraint",
    "apply_quantifier",
    "ord",
    "parse_escape",
    "parse_fuzzy",
    "parse_paren",
    "parse_quantifier",
    "parse_set"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "_regex_core.DEFAULT_VERSION",
    "_regex_core._ALL_VERSIONS",
    "_regex_core.error",
    "_regex_core.make_case_flags",
    "parse_set_imp_union",
    "parse_set_union"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_diff": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "SetDiff",
    "len",
    "parse_set_imp_union"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_imp_union": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": [
    "SetUnion",
    "_regex_core.DEFAULT_VERSION",
    "_regex_core.SET_OPS",
    "_regex_core._ALL_VERSIONS",
    "any",
    "len",
    "parse_set_member"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_inter": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "SetInter",
    "len",
    "parse_set_diff"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_item": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "Character",
    "_regex_core.DEFAULT_VERSION",
    "_regex_core.ParseError",
    "_regex_core._ALL_VERSIONS",
    "_regex_core.error",
    "_regex_core.parse_escape",
    "_regex_core.parse_set_union",
    "ord",
    "parse_posix_class"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_member": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "Character",
    "Range",
    "SetUnion",
    "_regex_core.DEFAULT_VERSION",
    "_regex_core._ALL_VERSIONS",
    "_regex_core.error",
    "isinstance",
    "ord",
    "parse_set_item"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_symm_diff": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "SetSymDiff",
    "len",
    "parse_set_inter"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_set_union": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "SetUnion",
    "len",
    "parse_set_symm_diff"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_string_set": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "_regex_core.error",
    "_regex_core.make_string_set",
    "_regex_core.parse_name"
   ]
  },
  "type": "function"
 },
 "_regex_core.parse_subpattern": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "_regex_core._parse_pattern",
    "bool"
   ]
  },
  "type": "function"
 },
 "_regex_core.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "_regex_core.standardise_name": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "ValueError",
    "ZeroDivisionError",
    "_regex_core.numeric_to_rational"
   ]
  },
  "type": "function"
 },
 "_regex_core.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "_regex_core.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_regex_core.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "regex": {
  "data": {
   "symbols_in_volume": [
    "copyreg.pickle",
    "frozenset",
    "regex.DEFAULT_VERSION",
    "regex.Pattern",
    "regex._compile",
    "regex._pickle",
    "regex._regex_core",
    "regex.compile",
    "threading.RLock",
    "type"
   ]
  },
  "type": "module"
 },
 "regex.DEFAULT_VERSION": {
  "data": {
   "lineno": 415
  },
  "type": "constant"
 },
 "regex.Match": {
  "data": {
   "lineno": 690
  },
  "type": "constant"
 },
 "regex.Pattern": {
  "data": {
   "lineno": 689
  },
  "type": "constant"
 },
 "regex.Regex": {
  "data": {
   "lineno": 694
  },
  "type": "constant"
 },
 "regex._ALL_ENCODINGS": {
  "data": {
   "shadows": "_regex_core._ALL_ENCODINGS"
  },
  "type": "import"
 },
 "regex._ALL_VERSIONS": {
  "data": {
   "shadows": "_regex_core._ALL_VERSIONS"
  },
  "type": "import"
 },
 "regex._ALNUM": {
  "data": {
   "shadows": "_regex_core.ALNUM"
  },
  "type": "import"
 },
 "regex._FirstSetError": {
  "data": {
   "shadows": "_regex_core._FirstSetError"
  },
  "type": "import"
 },
 "regex._Fuzzy": {
  "data": {
   "shadows": "_regex_core.Fuzzy"
  },
  "type": "import"
 },
 "regex._Info": {
  "data": {
   "shadows": "_regex_core.Info"
  },
  "type": "import"
 },
 "regex._MAXCACHE": {
  "data": {
   "lineno": 429
  },
  "type": "constant"
 },
 "regex._MAXREPCACHE": {
  "data": {
   "lineno": 430
  },
  "type": "constant"
 },
 "regex._METACHARS": {
  "data": {
   "lineno": 417
  },
  "type": "constant"
 },
 "regex._OP": {
  "data": {
   "shadows": "_regex_core.OP"
  },
  "type": "import"
 },
 "regex._RLock": {
  "data": {
   "shadows": "threading.RLock"
  },
  "type": "import"
 },
 "regex._Source": {
  "data": {
   "shadows": "_regex_core.Source"
  },
  "type": "import"
 },
 "regex._UnscopedFlagSet": {
  "data": {
   "shadows": "_regex_core._UnscopedFlagSet"
  },
  "type": "import"
 },
 "regex.__all__": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "regex.__version__": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "regex._cache": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "regex._cache_lock": {
  "data": {
   "lineno": 423
  },
  "type": "constant"
 },
 "regex._check_group_features": {
  "data": {
   "shadows": "_regex_core._check_group_features"
  },
  "type": "import"
 },
 "regex._compile": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "_regex_core.Fuzzy",
    "_regex_core.Info",
    "_regex_core.OP.CALL_REF",
    "_regex_core.OP.END",
    "_regex_core.OP.SUCCESS",
    "_regex_core.Source",
    "_regex_core._ALL_ENCODINGS",
    "_regex_core._ALL_VERSIONS",
    "_regex_core._FirstSetError",
    "_regex_core._UnscopedFlagSet",
    "_regex_core._check_group_features",
    "_regex_core._compile_firstset",
    "_regex_core._flatten_code",
    "_regex_core._fold_case",
    "_regex_core._get_required_string",
    "_regex_core._parse_pattern",
    "_regex_core._shrink_cache",
    "bool",
    "bytes",
    "dict",
    "error",
    "frozenset",
    "isinstance",
    "len",
    "locale.getpreferredencoding",
    "regex.DEFAULT_VERSION",
    "regex._MAXCACHE",
    "regex._cache",
    "regex._cache_lock",
    "regex._locale_sensitive",
    "regex._named_args",
    "regex._regex",
    "regex._regex_core",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "regex._compile_firstset": {
  "data": {
   "shadows": "_regex_core._compile_firstset"
  },
  "type": "import"
 },
 "regex._compile_replacement": {
  "data": {
   "shadows": "_regex_core._compile_replacement"
  },
  "type": "import"
 },
 "regex._compile_replacement_helper": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "_regex_core.Source",
    "_regex_core._compile_replacement",
    "isinstance",
    "len",
    "make_string",
    "ord",
    "regex._MAXREPCACHE",
    "regex._replacement_cache",
    "regex.template",
    "str"
   ]
  },
  "type": "function"
 },
 "regex._compile_replacement_helper.make_string": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "regex._copy_reg": {
  "data": {
   "shadows": "copyreg"
  },
  "type": "import"
 },
 "regex._flatten_code": {
  "data": {
   "shadows": "_regex_core._flatten_code"
  },
  "type": "import"
 },
 "regex._fold_case": {
  "data": {
   "shadows": "_regex_core._fold_case"
  },
  "type": "import"
 },
 "regex._get_required_string": {
  "data": {
   "shadows": "_regex_core._get_required_string"
  },
  "type": "import"
 },
 "regex._getpreferredencoding": {
  "data": {
   "shadows": "locale.getpreferredencoding"
  },
  "type": "import"
 },
 "regex._locale_sensitive": {
  "data": {
   "lineno": 426
  },
  "type": "constant"
 },
 "regex._named_args": {
  "data": {
   "lineno": 424
  },
  "type": "constant"
 },
 "regex._parse_pattern": {
  "data": {
   "shadows": "_regex_core._parse_pattern"
  },
  "type": "import"
 },
 "regex._pickle": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "regex._regex"
   ]
  },
  "type": "function"
 },
 "regex._regex": {
  "data": {
   "shadows": "_regex"
  },
  "type": "import"
 },
 "regex._regex_core": {
  "data": {
   "shadows": "_regex_core"
  },
  "type": "import"
 },
 "regex._replacement_cache": {
  "data": {
   "lineno": 425
  },
  "type": "constant"
 },
 "regex._shrink_cache": {
  "data": {
   "shadows": "_regex_core._shrink_cache"
  },
  "type": "import"
 },
 "regex.compile": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.escape": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "regex.findall": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.finditer": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.fullmatch": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.match": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.purge": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "regex.search": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.split": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.splititer": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.sub": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.subf": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "_compile",
    "format"
   ]
  },
  "type": "function"
 },
 "regex.subfn": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "_compile",
    "format"
   ]
  },
  "type": "function"
 },
 "regex.subn": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "regex.template": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "_compile"
   ]
  },
  "type": "function"
 },
 "test_regex": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test_regex.RegexTests",
    "test_regex.sys",
    "test_regex.test_main"
   ]
  },
  "type": "module"
 },
 "test_regex.BytesSubclass": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "class"
 },
 "test_regex.BytesSubclass.__getitem__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "super",
    "test_regex.BytesSubclass"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "test_regex.unittest"
   ]
  },
  "type": "class"
 },
 "test_regex.RegexTests.assertTypedEqual": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "recurse"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.assertTypedEqual.recurse": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "recurse",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.bump_num": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_anyall": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_ascii_and_unicode_flag": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_atomic": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_basic_regex_sub": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "chr",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bigcharset": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_branch_reset": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_10328": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_113254": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_114660": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_117612": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_14462": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_1661": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_3629": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_418626": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_448951": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_449000": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_449964": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_462270": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_527371": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_545855": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_581080": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_612074": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_725106": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_725149": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_764548": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "my_unicode",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_764548.my_unicode": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "test_regex.RegexTests.test_bug_817234": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_926075": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bug_931848": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_bytes_str_mixing": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_captures": {
  "data": {
   "lineno": 2515,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_case_folding": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_category": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_common_prefix": {
  "data": {
   "lineno": 2508,
   "symbols_in_volume": [
    "all",
    "repr",
    "test_regex.regex",
    "test_regex.string",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_constants": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_copy": {
  "data": {
   "lineno": 2899,
   "symbols_in_volume": [
    "next",
    "test_regex.copy",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_dollar_matches_twice": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_empty_array": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "test_regex.array",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_expand": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_finditer": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_flags": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_format": {
  "data": {
   "lineno": 2942,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_fullmatch": {
  "data": {
   "lineno": 2956,
   "symbols_in_volume": [
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_fuzzy": {
  "data": {
   "lineno": 2635,
   "symbols_in_volume": [
    "bool",
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_getattr": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_grapheme": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_groupdict": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_guards": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_hg_bugs": {
  "data": {
   "lineno": 3111,
   "symbols_in_volume": [
    "ascii",
    "bool",
    "bytes",
    "chr",
    "len",
    "range",
    "test_regex.pickle",
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_ignore_case": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_inline_flags": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "bool",
    "chr",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_issue_18468": {
  "data": {
   "lineno": 2978,
   "symbols_in_volume": [
    "bytearray",
    "memoryview",
    "test_regex.BytesSubclass",
    "test_regex.StrSubclass",
    "test_regex.regex",
    "test_regex.string",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_line_boundary": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_lookbehind": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "bool",
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_more_zerowidth": {
  "data": {
   "lineno": 4198,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_named_lists": {
  "data": {
   "lineno": 2581,
   "symbols_in_volume": [
    "repr",
    "set",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_new_named_groups": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_non_consuming": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_not_literal": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_overlapped": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_partial": {
  "data": {
   "lineno": 3058,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_possessive": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_properties": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "Exception",
    "ascii",
    "bool",
    "set",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_qualified_re_split": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_qualified_re_sub": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_escape": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "bool",
    "chr",
    "range",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_escape_byte": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "range",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_findall": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_groupref": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_groupref_exists": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_match": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_split": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_re_subn": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_recursive": {
  "data": {
   "lineno": 2828,
   "symbols_in_volume": [
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_repeat_minmax": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "bool",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_repeated_repeats": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_replacement": {
  "data": {
   "lineno": 2499,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scanner": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scanner.s_float": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scanner.s_ident": {
  "data": {
   "lineno": 807
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scanner.s_int": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scanner.s_operator": {
  "data": {
   "lineno": 808
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_scoped_and_inline_flags": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_search_anchor": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_search_coverage": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_search_reverse": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_search_star_plus": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_set": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "chr",
    "len",
    "range",
    "repr",
    "test_regex.regex",
    "type"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_special_escapes": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_splititer": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_sre_character_class_literals": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "bool",
    "chr",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_sre_character_literals": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "bool",
    "chr",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_stack_overflow": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_sub_template_numeric_escape": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_subscripted_captures": {
  "data": {
   "lineno": 4179,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_subscripting_match": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "ascii",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_symbolic_refs": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "IndexError",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_turkic": {
  "data": {
   "lineno": 2555,
   "symbols_in_volume": [
    "ascii",
    "set",
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_unmatched_in_sub": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_various": {
  "data": {
   "lineno": 1752,
   "symbols_in_volume": [
    "ValueError",
    "ascii",
    "chr",
    "int",
    "len",
    "test_regex.regex",
    "test_regex.string",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_weakref": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "test_regex.regex",
    "weakref.proxy"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_word_boundary": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_word_class": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "test_regex.regex"
   ]
  },
  "type": "function"
 },
 "test_regex.RegexTests.test_zerowidth": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "test_regex.regex",
    "test_regex.sys"
   ]
  },
  "type": "function"
 },
 "test_regex.StrSubclass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "test_regex.StrSubclass.__getitem__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "super",
    "test_regex.StrSubclass"
   ]
  },
  "type": "function"
 },
 "test_regex.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "test_regex.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "test_regex.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "test_regex.proxy": {
  "data": {
   "shadows": "weakref.proxy"
  },
  "type": "import"
 },
 "test_regex.regex": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "test_regex.run_unittest": {
  "data": {
   "shadows": "test.support.run_unittest"
  },
  "type": "import"
 },
 "test_regex.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "test_regex.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "test_regex.test_main": {
  "data": {
   "lineno": 4214,
   "symbols_in_volume": [
    "test.support.run_unittest",
    "test_regex.RegexTests"
   ]
  },
  "type": "function"
 },
 "test_regex.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}