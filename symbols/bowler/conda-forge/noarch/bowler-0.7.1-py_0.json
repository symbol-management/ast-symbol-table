{
 "bowler": {
  "data": {},
  "type": "module"
 },
 "bowler.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "bowler.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.__main__.sys",
    "main"
   ]
  },
  "type": "module"
 },
 "bowler.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bowler.__version__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bowler.helpers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.helpers.logging"
   ]
  },
  "type": "module"
 },
 "bowler.helpers.INDENT_STR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "bowler.helpers.Leaf": {
  "data": {
   "shadows": "fissix.pytree.Leaf"
  },
  "type": "import"
 },
 "bowler.helpers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.helpers.Node": {
  "data": {
   "shadows": "fissix.pytree.Node"
  },
  "type": "import"
 },
 "bowler.helpers.Once": {
  "data": {
   "lineno": 199
  },
  "type": "class"
 },
 "bowler.helpers.Once.__bool__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.Once.__init__": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "bowler.helpers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "bowler.helpers.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "bowler.helpers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "bowler.helpers.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "bowler.helpers.dotted_parts": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.filename_endswith": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.filename_endswith.inner": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "Filename",
    "any",
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.find_first": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.find_last": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "bool",
    "int",
    "reversed",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.find_next": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "bool",
    "bowler.helpers.find_first",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.find_previous": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "bool",
    "find_last",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.get_class": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.is_call_to": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.is_method": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.log": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "bowler.helpers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.helpers.power_parts": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "bowler.helpers.quoted_parts",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.print_selector_pattern": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bowler.helpers.click",
    "fissix.pytree.Leaf",
    "fissix.pytree.type_repr",
    "isinstance",
    "list",
    "repr"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.print_tree": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Filename",
    "bowler.helpers.INDENT_STR",
    "bowler.helpers.click",
    "fissix.pgen2.token.tok_name",
    "fissix.pytree.Leaf",
    "fissix.pytree.Node",
    "fissix.pytree.type_repr",
    "int",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.quoted_parts": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bowler.helpers.dotted_parts",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.tok_name": {
  "data": {
   "shadows": "fissix.pgen2.token.tok_name"
  },
  "type": "import"
 },
 "bowler.helpers.type_repr": {
  "data": {
   "shadows": "fissix.pytree.type_repr"
  },
  "type": "import"
 },
 "bowler.imr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.imr.logging"
   ]
  },
  "type": "module"
 },
 "bowler.imr.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "bowler.imr.FunctionArgument": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "attr.dataclass",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "bowler.imr.FunctionArgument.build": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bool",
    "bowler.imr.FunctionArgument",
    "classmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "bowler.imr.FunctionArgument.build_list": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "bool",
    "bowler.imr.FunctionArgument",
    "bowler.imr.log",
    "classmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.imr.FunctionArgument.explode": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "Leaf",
    "Node",
    "bool",
    "fissix.fixer_util.Name",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.imr.FunctionArgument.explode_list": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Leaf",
    "Node",
    "bool",
    "bowler.imr.log",
    "classmethod",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.imr.FunctionSpec": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Node",
    "attr.dataclass",
    "bool",
    "bowler.imr.FunctionArgument",
    "str",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "bowler.imr.FunctionSpec.build": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "IMRError",
    "KeyError",
    "Node",
    "bowler.imr.FunctionArgument",
    "bowler.imr.FunctionSpec",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "bowler.imr.FunctionSpec.explode": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Leaf",
    "Node",
    "bowler.imr.FunctionArgument",
    "find_last",
    "fissix.fixer_util.LParen"
   ]
  },
  "type": "function"
 },
 "bowler.imr.LParen": {
  "data": {
   "shadows": "fissix.fixer_util.LParen"
  },
  "type": "import"
 },
 "bowler.imr.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.imr.Name": {
  "data": {
   "shadows": "fissix.fixer_util.Name"
  },
  "type": "import"
 },
 "bowler.imr.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "bowler.imr.dataclass": {
  "data": {
   "shadows": "attr.dataclass"
  },
  "type": "import"
 },
 "bowler.imr.log": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "bowler.imr.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.main": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.main.main"
   ]
  },
  "type": "module"
 },
 "bowler.main.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "bowler.main.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.main.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "bowler.main.__version__": {
  "data": {
   "shadows": "bowler.__version__"
  },
  "type": "import"
 },
 "bowler.main._code": {
  "data": {
   "shadows": "code"
  },
  "type": "import"
 },
 "bowler.main.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "bowler.main.do": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ImportError",
    "Query",
    "bool",
    "bowler.main.IPython",
    "bowler.main.click",
    "bowler.main.main",
    "code",
    "code.interact",
    "compile",
    "eval",
    "isinstance",
    "repr",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.main.dump": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Query",
    "bool",
    "bowler.main.click",
    "bowler.main.main",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.main.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "bowler.main.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.main.main": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bool",
    "bowler.__version__",
    "bowler.main.click",
    "bowler.main.logging",
    "bowler.main.sys",
    "do"
   ]
  },
  "type": "function"
 },
 "bowler.main.run": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ImportError",
    "bowler.main.click",
    "bowler.main.importlib",
    "bowler.main.main",
    "bowler.main.sys",
    "getattr",
    "pathlib.Path",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bowler.query": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.query.Q",
    "bowler.query.logging",
    "typing.Callable",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "bowler.query.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "bowler.query.Attr": {
  "data": {
   "shadows": "fissix.fixer_util.Attr"
  },
  "type": "import"
 },
 "bowler.query.BaseFix": {
  "data": {
   "shadows": "fissix.fixer_base.BaseFix"
  },
  "type": "import"
 },
 "bowler.query.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "bowler.query.Comma": {
  "data": {
   "shadows": "fissix.fixer_util.Comma"
  },
  "type": "import"
 },
 "bowler.query.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "bowler.query.Dot": {
  "data": {
   "shadows": "fissix.fixer_util.Dot"
  },
  "type": "import"
 },
 "bowler.query.Factory": {
  "data": {
   "shadows": "attr.Factory"
  },
  "type": "import"
 },
 "bowler.query.LParen": {
  "data": {
   "shadows": "fissix.fixer_util.LParen"
  },
  "type": "import"
 },
 "bowler.query.Leaf": {
  "data": {
   "shadows": "fissix.pytree.Leaf"
  },
  "type": "import"
 },
 "bowler.query.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.query.Name": {
  "data": {
   "shadows": "fissix.fixer_util.Name"
  },
  "type": "import"
 },
 "bowler.query.Newline": {
  "data": {
   "shadows": "fissix.fixer_util.Newline"
  },
  "type": "import"
 },
 "bowler.query.Node": {
  "data": {
   "shadows": "fissix.pytree.Node"
  },
  "type": "import"
 },
 "bowler.query.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "bowler.query.Q": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "bowler.query.QM": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "bowler.query.Query": {
  "data": {
   "lineno": 88
  },
  "type": "class"
 },
 "bowler.query.Query.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Transform",
    "bowler.query.pathlib",
    "int",
    "isinstance",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.add_argument": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "bowler.query.inspect",
    "list",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.add_argument.add_argument_transform": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "FunctionArgument",
    "bowler.query.log",
    "enumerate",
    "fissix.fixer_util.Name",
    "fissix.pytree.Node",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.compile": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "bowler.query.log",
    "fissix.fixer_base.BaseFix",
    "typing.List",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.create_fixer": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "bowler.query.SELECTORS",
    "bowler.query.log",
    "len"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.create_fixer.Fixer": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "fissix.fixer_base.BaseFix"
   ]
  },
  "type": "class"
 },
 "bowler.query.Query.create_fixer.Fixer.transform": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "BowlerException",
    "all",
    "callback",
    "f",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.current": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.diff": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.dump": {
  "data": {
   "lineno": 1012
  },
  "type": "function"
 },
 "bowler.query.Query.encapsulate": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "Once",
    "ValueError",
    "any",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.encapsulate.encapsulate_transform": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "find_first",
    "find_last",
    "find_previous",
    "fissix.fixer_util.Attr",
    "fissix.fixer_util.Comma",
    "fissix.fixer_util.Dot",
    "fissix.fixer_util.LParen",
    "fissix.fixer_util.Name",
    "fissix.fixer_util.Newline",
    "fissix.fixer_util.RParen",
    "fissix.pytree.Leaf",
    "fissix.pytree.Node",
    "get_class",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.execute": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "BowlerTool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.execute.processor": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "bool",
    "p"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.filter": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "compile",
    "isinstance",
    "str",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.filter.callback": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "bool",
    "eval",
    "fissix.pytree.Node"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.fixer": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "Transform",
    "fissix.fixer_base.BaseFix",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.idiff": {
  "data": {
   "lineno": 1024
  },
  "type": "function"
 },
 "bowler.query.Query.in_class": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.in_class.filter_in_class": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.is_call": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "bowler.query.Query.is_call.filter_is_call": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.is_def": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "bowler.query.Query.is_def.filter_is_def": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.is_filename": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "bowler.query.re",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.is_filename.filter_filename_exclude": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.is_filename.filter_filename_include": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.modify": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "compile",
    "isinstance",
    "str",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.modify.callback": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "exec",
    "fissix.pytree.Node"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.modify_argument": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.modify_argument.modify_argument_transform": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "fissix.fixer_util.Name",
    "fissix.pytree.Node",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.move": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.move.transform_move": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "bowler.query.Query.process": {
  "data": {
   "lineno": 931
  },
  "type": "function"
 },
 "bowler.query.Query.remove_argument": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "ValueError",
    "bowler.query.inspect",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.remove_argument.remove_argument_transform": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "enumerate",
    "fissix.pytree.Node",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.rename": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.rename.rename_transform": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "bowler.query.log",
    "dotted_parts",
    "fissix.fixer_util.Dot",
    "fissix.fixer_util.Name",
    "fissix.pytree.Leaf",
    "fissix.pytree.Node",
    "fissix.pytree.type_repr",
    "isinstance",
    "len",
    "list",
    "range",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_attribute": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_class": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_function": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_method": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_module": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_pattern": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_root": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bowler.query.selector"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_subclass": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_var": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.silent": {
  "data": {
   "lineno": 1027
  },
  "type": "function"
 },
 "bowler.query.Query.write": {
  "data": {
   "lineno": 1030
  },
  "type": "function"
 },
 "bowler.query.RParen": {
  "data": {
   "shadows": "fissix.fixer_util.RParen"
  },
  "type": "import"
 },
 "bowler.query.SELECTORS": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "bowler.query.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "bowler.query.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "bowler.query.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "bowler.query.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "bowler.query.dataclass": {
  "data": {
   "shadows": "attr.dataclass"
  },
  "type": "import"
 },
 "bowler.query.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "bowler.query.log": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "bowler.query.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.query.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "bowler.query.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "bowler.query.selector": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bowler.query.QM",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "bowler.query.selector.wrapper": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bowler.query.QM",
    "bowler.query.SELECTORS",
    "bowler.query.inspect",
    "bowler.query.selector",
    "list"
   ]
  },
  "type": "function"
 },
 "bowler.query.selector.wrapper.wrapped": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Transform",
    "bowler.query.Q",
    "bowler.query.selector",
    "functools.wraps",
    "hasattr",
    "power_parts",
    "quoted_parts",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "bowler.query.type_repr": {
  "data": {
   "shadows": "fissix.pytree.type_repr"
  },
  "type": "import"
 },
 "bowler.query.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "bowler.tests": {
  "data": {},
  "type": "module"
 },
 "bowler.tests.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.tests.__main__.unittest"
   ]
  },
  "type": "module"
 },
 "bowler.tests.__main__.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "bowler.tests.helpers": {
  "data": {},
  "type": "module"
 },
 "bowler.tests.helpers.DottedPartsTest": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "bowler.tests.helpers.unittest"
   ]
  },
  "type": "class"
 },
 "bowler.tests.helpers.DottedPartsTest.test_dotted_parts": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "dotted_parts"
   ]
  },
  "type": "function"
 },
 "bowler.tests.helpers.Leaf": {
  "data": {
   "shadows": "fissix.pytree.Leaf"
  },
  "type": "import"
 },
 "bowler.tests.helpers.Node": {
  "data": {
   "shadows": "fissix.pytree.Node"
  },
  "type": "import"
 },
 "bowler.tests.helpers.PowerPartsTest": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bowler.tests.helpers.unittest"
   ]
  },
  "type": "class"
 },
 "bowler.tests.helpers.PowerPartsTest.test_power_parts_include_trailer": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "power_parts"
   ]
  },
  "type": "function"
 },
 "bowler.tests.helpers.PrintSelectorPatternTest": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "bowler.tests.helpers.PrintSelectorPatternTest.test_print_selector_pattern": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "print_selector_pattern"
   ]
  },
  "type": "function"
 },
 "bowler.tests.helpers.PrintSelectorPatternTest.test_print_selector_pattern_capture": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "print_selector_pattern"
   ]
  },
  "type": "function"
 },
 "bowler.tests.helpers.PrintSelectorPatternTest.test_print_selector_pattern_capture_list": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "print_selector_pattern"
   ]
  },
  "type": "function"
 },
 "bowler.tests.helpers.PrintTreeTest": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "bowler.tests.helpers.PrintTreeTest.test_print_tree_captures": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "print_tree"
   ]
  },
  "type": "function"
 },
 "bowler.tests.helpers.PrintTreeTest.test_print_tree_node": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "print_tree"
   ]
  },
  "type": "function"
 },
 "bowler.tests.helpers.PrintTreeTest.test_print_tree_recurse_limit": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "print_tree"
   ]
  },
  "type": "function"
 },
 "bowler.tests.helpers.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "bowler.tests.lib": {
  "data": {},
  "type": "module"
 },
 "bowler.tests.lib.BowlerTestCase": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bowler.tests.lib.unittest"
   ]
  },
  "type": "class"
 },
 "bowler.tests.lib.BowlerTestCase._formatMessage": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCase.parse_line": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bowler.types.LN",
    "fissix.pgen2.driver.Driver",
    "fissix.pygram.python_grammar_no_print_statement",
    "fissix.pytree.convert",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCase.run_bowler_modifier": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "bowler.Query",
    "bowler.tests.lib.multiprocessing",
    "bowler.tests.lib.tempfile",
    "modifier_func",
    "open",
    "selector_func"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCase.run_bowler_modifier.local_modifier": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Exception",
    "modifier"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCase.run_bowler_modifiers": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "input",
    "modifier"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCase.setUp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bowler.tests.lib.sys",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCase.tearDown": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bowler.tests.lib.sys",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCaseTest": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bowler.tests.lib.BowlerTestCase"
   ]
  },
  "type": "class"
 },
 "bowler.tests.lib.BowlerTestCaseTest.test_parse_line_leaf": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "bowler.types.TOKEN.NUMBER",
    "input"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCaseTest.test_parse_line_node": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bowler.types.SYMBOL.atom",
    "bowler.types.SYMBOL.expr_stmt",
    "bowler.types.TOKEN.EQUAL",
    "bowler.types.TOKEN.NAME",
    "input"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCaseTest.test_run_bowler_modifier": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "input",
    "modifier"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCaseTest.test_run_bowler_modifier.modifier": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCaseTest.test_run_bowler_modifier_ferries_exception": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "AssertionError",
    "input",
    "modifier"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCaseTest.test_run_bowler_modifier_ferries_exception.modifier": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCaseTest.test_run_bowler_modifier_parse_error": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCaseTest.test_stdout_capture": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.BowlerTestCaseTest.test_stdout_click_no_colors": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bowler.tests.lib.click"
   ]
  },
  "type": "function"
 },
 "bowler.tests.lib.Driver": {
  "data": {
   "shadows": "fissix.pgen2.driver.Driver"
  },
  "type": "import"
 },
 "bowler.tests.lib.LN": {
  "data": {
   "shadows": "bowler.types.LN"
  },
  "type": "import"
 },
 "bowler.tests.lib.Query": {
  "data": {
   "shadows": "bowler.Query"
  },
  "type": "import"
 },
 "bowler.tests.lib.SYMBOL": {
  "data": {
   "shadows": "bowler.types.SYMBOL"
  },
  "type": "import"
 },
 "bowler.tests.lib.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "bowler.tests.lib.TOKEN": {
  "data": {
   "shadows": "bowler.types.TOKEN"
  },
  "type": "import"
 },
 "bowler.tests.lib.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "bowler.tests.lib.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "bowler.tests.lib.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "bowler.tests.lib.pygram": {
  "data": {
   "shadows": "fissix.pygram"
  },
  "type": "import"
 },
 "bowler.tests.lib.pytree": {
  "data": {
   "shadows": "fissix.pytree"
  },
  "type": "import"
 },
 "bowler.tests.lib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bowler.tests.lib.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "bowler.tests.lib.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "bowler.tests.query": {
  "data": {},
  "type": "module"
 },
 "bowler.tests.query.QueryTest": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "bowler.tests.query.QueryTest.test_add_argument": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "input",
    "selector"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_add_argument.add_modifier": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_add_argument.selector": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "Query"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_basic": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Query",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_modifier_return_value": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "input",
    "modifier"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_modifier_return_value.modifier": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "Leaf"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_modifier_return_value_multiple": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "input",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_modifier_return_value_multiple.add_bad_modifier": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "modifier"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_modifier_return_value_multiple.add_ok_modifier": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "modifier"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_modifier_return_value_multiple.modifier": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "Leaf",
    "print"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_modifier_return_value_multiple.noop_modifier": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_class": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_class.modifier": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_class.selector": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Query"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_func": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_func.modifier": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_func.selector": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Query"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_module": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_module.modifier": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_module.selector": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Query"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_module_callsites": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "input",
    "modifier",
    "selector"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_module_callsites.modifier": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_module_callsites.modifier._modifier": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_module_callsites.selector": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_module_callsites.selector._selector": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Query"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_subclass": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "input",
    "modifier",
    "selector"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_subclass.modifier": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "bowler.tests.query.QueryTest.test_rename_subclass.selector": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Query"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "bowler.tests.smoke": {
  "data": {
   "symbols_in_volume": [
    "bowler.tests.smoke.io"
   ]
  },
  "type": "module"
 },
 "bowler.tests.smoke-target": {
  "data": {
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "module"
 },
 "bowler.tests.smoke-target.foo": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "bowler.tests.smoke.Call": {
  "data": {
   "shadows": "fissix.fixer_util.Call"
  },
  "type": "import"
 },
 "bowler.tests.smoke.Mock": {
  "data": {
   "shadows": "unittest.mock.Mock"
  },
  "type": "import"
 },
 "bowler.tests.smoke.Name": {
  "data": {
   "shadows": "fissix.fixer_util.Name"
  },
  "type": "import"
 },
 "bowler.tests.smoke.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "bowler.tests.smoke.STDERR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "bowler.tests.smoke.SmokeTest": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "bowler.tests.smoke.SmokeTest.setUpClass": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bowler.tests.smoke.STDERR",
    "bowler.tests.smoke.logging",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_check_ast": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Query",
    "any",
    "isinstance",
    "pathlib.Path",
    "str",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_tr": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Query",
    "len",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_tr.takes_string_literal": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_tr.verify_hunk": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_tr.wrap_string": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "fissix.fixer_util.Call",
    "fissix.fixer_util.Name"
   ]
  },
  "type": "function"
 },
 "bowler.tests.smoke.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "bowler.tests.smoke.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "bowler.tests.smoke.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.tests.tool": {
  "data": {
   "symbols_in_volume": [
    "bowler.tests.tool.target",
    "pathlib.Path"
   ]
  },
  "type": "module"
 },
 "bowler.tests.tool.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "bowler.tests.tool.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "bowler.tests.tool.ToolTest": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "bowler.tests.tool.ToolTest.cleanup_files": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "bowler.tests.tool.os",
    "bowler.tests.tool.target"
   ]
  },
  "type": "function"
 },
 "bowler.tests.tool.ToolTest.setUp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pathlib.Path",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "bowler.tests.tool.ToolTest.test_process_hunks_after_auto_yes": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "BowlerTool",
    "Query",
    "bowler.tests.tool.hunks",
    "bowler.tests.tool.target",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "bowler.tests.tool.ToolTest.test_process_hunks_after_no_then_yes": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "BowlerTool",
    "Query",
    "bowler.tests.tool.hunks",
    "bowler.tests.tool.target",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "bowler.tests.tool.ToolTest.test_process_hunks_after_only_no": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "BowlerTool",
    "Query",
    "bowler.tests.tool.hunks",
    "bowler.tests.tool.target",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "bowler.tests.tool.ToolTest.test_process_hunks_after_quit": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "BowlerTool",
    "Query",
    "bowler.tests.tool.hunks",
    "bowler.tests.tool.target",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "bowler.tests.tool.ToolTest.test_process_hunks_after_skip_rest": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "BowlerTool",
    "Query",
    "bowler.tests.tool.hunks",
    "bowler.tests.tool.target",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "bowler.tests.tool.ToolTest.test_process_hunks_invalid_hunks": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "BowlerTool",
    "Query",
    "bowler.tests.tool.hunks",
    "bowler.tests.tool.os",
    "bowler.tests.tool.target",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "bowler.tests.tool.ToolTest.test_process_hunks_no_hunks": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "BowlerTool",
    "Query",
    "bowler.tests.tool.target",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "bowler.tests.tool.ToolTest.test_process_hunks_patch_called_correctly": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "BowlerTool",
    "Query",
    "bowler.tests.tool.hunks",
    "bowler.tests.tool.target",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "bowler.tests.tool.hunks": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "bowler.tests.tool.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "bowler.tests.tool.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bowler.tests.tool.target": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "bowler.tests.type_inference": {
  "data": {},
  "type": "module"
 },
 "bowler.tests.type_inference.BINARY_OPERATORS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "bowler.tests.type_inference.Driver": {
  "data": {
   "shadows": "fissix.pgen2.driver.Driver"
  },
  "type": "import"
 },
 "bowler.tests.type_inference.ExpressionTest": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "bowler.tests.type_inference.SAMPLE_EXPRESSIONS",
    "bowler.tests.type_inference.SAMPLE_PY2_EXPRESSIONS",
    "bowler.tests.type_inference._produce_test",
    "bowler.tests.type_inference.unittest",
    "locals"
   ]
  },
  "type": "class"
 },
 "bowler.tests.type_inference.ExpressionTest.gen_test_expression": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "bowler.tests.type_inference.ExpressionTest.gen_test_expression.test_expression": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "bowler.tests.type_inference.tree",
    "numeric_expr_type"
   ]
  },
  "type": "function"
 },
 "bowler.tests.type_inference.OpMinTypeTest": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "bowler.tests.type_inference.BINARY_OPERATORS",
    "bowler.tests.type_inference.UNARY_OPERATORS",
    "bowler.tests.type_inference._produce_test",
    "bowler.tests.type_inference.unittest",
    "enumerate",
    "locals"
   ]
  },
  "type": "class"
 },
 "bowler.tests.type_inference.OpMinTypeTest._run_test": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bowler.tests.type_inference.tree",
    "numeric_expr_type",
    "repr"
   ]
  },
  "type": "function"
 },
 "bowler.tests.type_inference.OpMinTypeTest.gen_test_binop": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "bowler.tests.type_inference.OpMinTypeTest.gen_test_binop.test_binop": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "bowler.tests.type_inference.map_type",
    "eval"
   ]
  },
  "type": "function"
 },
 "bowler.tests.type_inference.OpMinTypeTest.gen_test_min_type": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "bowler.tests.type_inference.OpMinTypeTest.gen_test_min_type.test_min_type": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bowler.tests.type_inference.map_type",
    "bowler.tests.type_inference.tree",
    "eval",
    "fissix.pytree.type_repr"
   ]
  },
  "type": "function"
 },
 "bowler.tests.type_inference.OpMinTypeTest.gen_test_min_type_unary": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "bowler.tests.type_inference.OpMinTypeTest.gen_test_min_type_unary.test_min_type_unary": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "bowler.tests.type_inference.map_type",
    "bowler.tests.type_inference.tree",
    "eval",
    "fissix.pytree.type_repr"
   ]
  },
  "type": "function"
 },
 "bowler.tests.type_inference.OpMinTypeTest.gen_test_uniop": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "bowler.tests.type_inference.OpMinTypeTest.gen_test_uniop.test_uniop": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "TypeError",
    "bowler.tests.type_inference.map_type",
    "eval"
   ]
  },
  "type": "function"
 },
 "bowler.tests.type_inference.SAMPLE_EXPRESSIONS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "bowler.tests.type_inference.SAMPLE_PY2_EXPRESSIONS": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "bowler.tests.type_inference.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "bowler.tests.type_inference.UNARY_OPERATORS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "bowler.tests.type_inference._produce_test": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "gen_func",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.tests.type_inference.map_type": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bool",
    "complex",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "bowler.tests.type_inference.pygram": {
  "data": {
   "shadows": "fissix.pygram"
  },
  "type": "import"
 },
 "bowler.tests.type_inference.pytree": {
  "data": {
   "shadows": "fissix.pytree"
  },
  "type": "import"
 },
 "bowler.tests.type_inference.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bowler.tests.type_inference.tree": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "fissix.pgen2.driver.Driver",
    "fissix.pygram.python_grammar_no_print_statement",
    "fissix.pytree.convert",
    "input",
    "print",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.tests.type_inference.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "bowler.tool": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.tool.logging"
   ]
  },
  "type": "module"
 },
 "bowler.tool.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "bowler.tool.BowlerTool": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bowler.tool.os",
    "fissix.refactor.RefactoringTool"
   ]
  },
  "type": "class"
 },
 "bowler.tool.BowlerTool.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "bowler.tool.multiprocessing",
    "filename_endswith",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.apply_hunks": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "bowler.tool.log",
    "bowler.tool.sh"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.get_fixers": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "f",
    "f.order",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.log_error": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.process_hunks": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "BowlerQuit",
    "Filename",
    "ValueError",
    "bowler.tool.click",
    "bowler.tool.prompt_user",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.processed_file": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "BadTransform",
    "Exception",
    "bowler.tool.ast",
    "bowler.tool.diff_texts",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.queue_work": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "Filename"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "Filename",
    "any",
    "bowler.tool.multiprocessing",
    "bowler.tool.os",
    "bowler.tool.time",
    "isinstance",
    "len",
    "max",
    "min",
    "queue.Empty",
    "range",
    "sorted",
    "str",
    "type",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor_dir": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "Filename",
    "bowler.tool.os",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor_file": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "OSError",
    "UnicodeDecodeError",
    "bowler.tool.log",
    "fissix.pgen2.parse.ParseError",
    "input",
    "input.endswith",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor_queue": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "Exception",
    "bowler.tool.log"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.run": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "bowler.tool.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "bowler.tool.Empty": {
  "data": {
   "shadows": "queue.Empty"
  },
  "type": "import"
 },
 "bowler.tool.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "bowler.tool.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.tool.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "bowler.tool.PROMPT_HELP": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "bowler.tool.ParseError": {
  "data": {
   "shadows": "fissix.pgen2.parse.ParseError"
  },
  "type": "import"
 },
 "bowler.tool.RefactoringTool": {
  "data": {
   "shadows": "fissix.refactor.RefactoringTool"
  },
  "type": "import"
 },
 "bowler.tool.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "bowler.tool.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "bowler.tool.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "bowler.tool.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "bowler.tool.diff_texts": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bowler.tool.difflib",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "bowler.tool.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "bowler.tool.log": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "bowler.tool.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.tool.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "bowler.tool.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bowler.tool.prompt_user": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bowler.tool.PROMPT_HELP",
    "bowler.tool.click",
    "input",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.tool.sh": {
  "data": {
   "shadows": "sh"
  },
  "type": "import"
 },
 "bowler.tool.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "bowler.type_inference": {
  "data": {
   "symbols_in_volume": [
    "bowler.type_inference.InferredType",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "bowler.type_inference.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "bowler.type_inference.Driver": {
  "data": {
   "shadows": "fissix.pgen2.driver.Driver"
  },
  "type": "import"
 },
 "bowler.type_inference.InferredType": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "bowler.type_inference.enum"
   ]
  },
  "type": "class"
 },
 "bowler.type_inference.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "bowler.type_inference.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "bowler.type_inference.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "bowler.type_inference.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "bowler.type_inference.numeric_expr_type": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "bowler.type_inference.InferredType",
    "is_call_to",
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "bowler.type_inference.pygram": {
  "data": {
   "shadows": "fissix.pygram"
  },
  "type": "import"
 },
 "bowler.type_inference.pytree": {
  "data": {
   "shadows": "fissix.pytree"
  },
  "type": "import"
 },
 "bowler.type_inference.token": {
  "data": {
   "shadows": "fissix.pgen2.token"
  },
  "type": "import"
 },
 "bowler.types": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "bowler.types.Capture",
    "bowler.types.Filename",
    "bowler.types.Hunk",
    "bowler.types.Passthrough",
    "bowler.types.STARS",
    "bowler.types.SYMBOL",
    "bowler.types.TOKEN",
    "fissix.fixer_base.BaseFix",
    "fissix.pgen2.token",
    "fissix.pygram.python_symbols",
    "fissix.pytree.Leaf",
    "fissix.pytree.Node",
    "object",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.NewType",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "bowler.types.ARG_ELEMS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "bowler.types.ARG_END": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "bowler.types.ARG_LISTS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "bowler.types.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "bowler.types.BadTransform": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "bowler.types.BowlerException"
   ]
  },
  "type": "class"
 },
 "bowler.types.BaseFix": {
  "data": {
   "shadows": "fissix.fixer_base.BaseFix"
  },
  "type": "import"
 },
 "bowler.types.BowlerException": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "bowler.types.BowlerException.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bowler.types.Hunk",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.types.BowlerQuit": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "bowler.types.BowlerException"
   ]
  },
  "type": "class"
 },
 "bowler.types.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "bowler.types.Callback": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "bowler.types.Capture": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "bowler.types.DROP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "bowler.types.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "bowler.types.Factory": {
  "data": {
   "shadows": "attr.Factory"
  },
  "type": "import"
 },
 "bowler.types.Filename": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "bowler.types.FilenameMatcher": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "bowler.types.Filter": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "bowler.types.Fixers": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "bowler.types.Hunk": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "bowler.types.IMRError": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bowler.types.BowlerException"
   ]
  },
  "type": "class"
 },
 "bowler.types.LN": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "bowler.types.Leaf": {
  "data": {
   "shadows": "fissix.pytree.Leaf"
  },
  "type": "import"
 },
 "bowler.types.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.types.NewType": {
  "data": {
   "shadows": "typing.NewType"
  },
  "type": "import"
 },
 "bowler.types.Node": {
  "data": {
   "shadows": "fissix.pytree.Node"
  },
  "type": "import"
 },
 "bowler.types.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "bowler.types.Passthrough": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "bowler.types.Passthrough.__getattr__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "getattr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "bowler.types.Passthrough.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "bowler.types.Processor": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "bowler.types.RetryFile": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "bowler.types.BowlerException"
   ]
  },
  "type": "class"
 },
 "bowler.types.SENTINEL": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "bowler.types.STARS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "bowler.types.START": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "bowler.types.SYMBOL": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "bowler.types.Stringish": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "bowler.types.TOKEN": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "bowler.types.Transform": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "attr.Factory",
    "attr.dataclass",
    "bowler.types.Callback",
    "bowler.types.Filter",
    "dict",
    "fissix.fixer_base.BaseFix",
    "list",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "bowler.types.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "bowler.types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "bowler.types.dataclass": {
  "data": {
   "shadows": "attr.dataclass"
  },
  "type": "import"
 },
 "bowler.types.python_symbols": {
  "data": {
   "shadows": "fissix.pygram.python_symbols"
  },
  "type": "import"
 },
 "bowler.types.token": {
  "data": {
   "shadows": "fissix.pgen2.token"
  },
  "type": "import"
 }
}