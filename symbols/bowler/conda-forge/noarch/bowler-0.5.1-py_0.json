{
 "bowler": {
  "data": {},
  "type": "module"
 },
 "bowler.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "bowler.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.__main__.sys",
    "main"
   ]
  },
  "type": "module"
 },
 "bowler.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bowler.__version__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bowler.helpers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.helpers.logging"
   ]
  },
  "type": "module"
 },
 "bowler.helpers.Leaf": {
  "data": {
   "shadows": "fissix.pytree.Leaf"
  },
  "type": "import"
 },
 "bowler.helpers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.helpers.Node": {
  "data": {
   "shadows": "fissix.pytree.Node"
  },
  "type": "import"
 },
 "bowler.helpers.Once": {
  "data": {
   "lineno": 155
  },
  "type": "class"
 },
 "bowler.helpers.Once.__bool__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.Once.__init__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "bowler.helpers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "bowler.helpers.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "bowler.helpers.dotted_parts": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.find_first": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.find_last": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "bool",
    "int",
    "reversed",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.find_next": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "bool",
    "bowler.helpers.find_first",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.find_previous": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bool",
    "find_last",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.get_class": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.is_method": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.log": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bowler.helpers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.helpers.power_parts": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "bowler.helpers.quoted_parts",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.print_tree": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Filename",
    "bowler.helpers.click",
    "fissix.pytree.Leaf",
    "fissix.pytree.Node",
    "fissix.pytree.type_repr",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.quoted_parts": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bowler.helpers.dotted_parts",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.helpers.type_repr": {
  "data": {
   "shadows": "fissix.pytree.type_repr"
  },
  "type": "import"
 },
 "bowler.imr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.imr.logging"
   ]
  },
  "type": "module"
 },
 "bowler.imr.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "bowler.imr.FunctionArgument": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "attr.dataclass",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "bowler.imr.FunctionArgument.build": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bool",
    "bowler.imr.FunctionArgument",
    "classmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "bowler.imr.FunctionArgument.build_list": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "bowler.imr.FunctionArgument",
    "bowler.imr.log",
    "classmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.imr.FunctionArgument.explode": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Leaf",
    "Node",
    "bool",
    "fissix.fixer_util.Name",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.imr.FunctionArgument.explode_list": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Leaf",
    "Node",
    "bool",
    "bowler.imr.log",
    "classmethod",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "bowler.imr.FunctionSpec": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "Node",
    "attr.dataclass",
    "bool",
    "bowler.imr.FunctionArgument",
    "str",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "bowler.imr.FunctionSpec.build": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "IMRError",
    "KeyError",
    "Node",
    "bowler.imr.FunctionArgument",
    "bowler.imr.FunctionSpec",
    "classmethod",
    "print"
   ]
  },
  "type": "function"
 },
 "bowler.imr.FunctionSpec.explode": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "Leaf",
    "Node",
    "bowler.imr.FunctionArgument",
    "find_last",
    "fissix.fixer_util.LParen"
   ]
  },
  "type": "function"
 },
 "bowler.imr.LParen": {
  "data": {
   "shadows": "fissix.fixer_util.LParen"
  },
  "type": "import"
 },
 "bowler.imr.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.imr.Name": {
  "data": {
   "shadows": "fissix.fixer_util.Name"
  },
  "type": "import"
 },
 "bowler.imr.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "bowler.imr.dataclass": {
  "data": {
   "shadows": "attr.dataclass"
  },
  "type": "import"
 },
 "bowler.imr.log": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "bowler.imr.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.main": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.main.main"
   ]
  },
  "type": "module"
 },
 "bowler.main.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "bowler.main.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.main.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "bowler.main.__version__": {
  "data": {
   "shadows": "python.bowler.__version__"
  },
  "type": "import"
 },
 "bowler.main.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "bowler.main.do": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ImportError",
    "Query",
    "bool",
    "bowler.main.IPython",
    "bowler.main.click",
    "bowler.main.main",
    "compile",
    "eval",
    "isinstance",
    "repr",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.main.dump": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Query",
    "bowler.main.click",
    "bowler.main.main",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.main.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "bowler.main.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.main.main": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bool",
    "bowler.main.click",
    "bowler.main.logging",
    "do",
    "python.bowler.__version__"
   ]
  },
  "type": "function"
 },
 "bowler.main.run": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ImportError",
    "bowler.main.click",
    "bowler.main.importlib",
    "bowler.main.main",
    "bowler.main.sys",
    "getattr",
    "pathlib.Path",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bowler.query": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.query.Q",
    "bowler.query.logging",
    "typing.Callable",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "bowler.query.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "bowler.query.Attr": {
  "data": {
   "shadows": "fissix.fixer_util.Attr"
  },
  "type": "import"
 },
 "bowler.query.BaseFix": {
  "data": {
   "shadows": "fissix.fixer_base.BaseFix"
  },
  "type": "import"
 },
 "bowler.query.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "bowler.query.Comma": {
  "data": {
   "shadows": "fissix.fixer_util.Comma"
  },
  "type": "import"
 },
 "bowler.query.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "bowler.query.Dot": {
  "data": {
   "shadows": "fissix.fixer_util.Dot"
  },
  "type": "import"
 },
 "bowler.query.Factory": {
  "data": {
   "shadows": "attr.Factory"
  },
  "type": "import"
 },
 "bowler.query.LParen": {
  "data": {
   "shadows": "fissix.fixer_util.LParen"
  },
  "type": "import"
 },
 "bowler.query.Leaf": {
  "data": {
   "shadows": "fissix.pytree.Leaf"
  },
  "type": "import"
 },
 "bowler.query.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.query.Name": {
  "data": {
   "shadows": "fissix.fixer_util.Name"
  },
  "type": "import"
 },
 "bowler.query.Newline": {
  "data": {
   "shadows": "fissix.fixer_util.Newline"
  },
  "type": "import"
 },
 "bowler.query.Node": {
  "data": {
   "shadows": "fissix.pytree.Node"
  },
  "type": "import"
 },
 "bowler.query.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "bowler.query.Q": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "bowler.query.QM": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "bowler.query.Query": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "bowler.query.Query.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Transform",
    "int",
    "isinstance",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.add_argument": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "bowler.query.inspect",
    "list",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.add_argument.add_argument_transform": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "FunctionArgument",
    "bowler.query.log",
    "enumerate",
    "fissix.fixer_util.Name",
    "fissix.pytree.Node",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.compile": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "bowler.query.log",
    "fissix.fixer_base.BaseFix",
    "typing.List",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.create_fixer": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "bowler.query.SELECTORS",
    "bowler.query.log",
    "len"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.create_fixer.Fixer": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "fissix.fixer_base.BaseFix"
   ]
  },
  "type": "class"
 },
 "bowler.query.Query.create_fixer.Fixer.transform": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "all",
    "callback",
    "f",
    "fissix.pytree.Node",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.current": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.diff": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.dump": {
  "data": {
   "lineno": 932
  },
  "type": "function"
 },
 "bowler.query.Query.encapsulate": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "Once",
    "ValueError",
    "any",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.encapsulate.encapsulate_transform": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "find_first",
    "find_last",
    "find_previous",
    "fissix.fixer_util.Attr",
    "fissix.fixer_util.Comma",
    "fissix.fixer_util.Dot",
    "fissix.fixer_util.LParen",
    "fissix.fixer_util.Name",
    "fissix.fixer_util.Newline",
    "fissix.fixer_util.RParen",
    "fissix.pytree.Leaf",
    "fissix.pytree.Node",
    "get_class",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.execute": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "BowlerTool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.execute.processor": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "bool",
    "p"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.filter": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "compile",
    "isinstance",
    "str",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.filter.callback": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "bool",
    "eval",
    "fissix.pytree.Node"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.fixer": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "Transform",
    "fissix.fixer_base.BaseFix",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.idiff": {
  "data": {
   "lineno": 940
  },
  "type": "function"
 },
 "bowler.query.Query.in_class": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.in_class.filter_in_class": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.is_call": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "bowler.query.Query.is_call.filter_is_call": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.is_def": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "bowler.query.Query.is_def.filter_is_def": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.is_filename": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "bowler.query.re",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.is_filename.filter_filename_exclude": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.is_filename.filter_filename_include": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.modify": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "compile",
    "isinstance",
    "str",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.modify.callback": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "exec",
    "fissix.pytree.Node"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.modify_argument": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.modify_argument.modify_argument_transform": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "fissix.fixer_util.Name",
    "fissix.pytree.Node",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.move": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.move.transform_move": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "bowler.query.Query.process": {
  "data": {
   "lineno": 863
  },
  "type": "function"
 },
 "bowler.query.Query.remove_argument": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "ValueError",
    "bowler.query.inspect",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.remove_argument.remove_argument_transform": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "enumerate",
    "fissix.pytree.Node",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.rename": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.rename.rename_transform": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "bowler.query.log",
    "dotted_parts",
    "fissix.fixer_util.Name",
    "fissix.pytree.Leaf",
    "fissix.pytree.Node",
    "fissix.pytree.type_repr",
    "isinstance",
    "iter",
    "list",
    "next",
    "zip"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_attribute": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_class": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_function": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_method": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_module": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_pattern": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_root": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bowler.query.selector"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_subclass": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.select_var": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "bowler.query.selector",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.query.Query.silent": {
  "data": {
   "lineno": 943
  },
  "type": "function"
 },
 "bowler.query.Query.write": {
  "data": {
   "lineno": 946
  },
  "type": "function"
 },
 "bowler.query.RParen": {
  "data": {
   "shadows": "fissix.fixer_util.RParen"
  },
  "type": "import"
 },
 "bowler.query.SELECTORS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "bowler.query.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "bowler.query.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "bowler.query.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "bowler.query.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "bowler.query.dataclass": {
  "data": {
   "shadows": "attr.dataclass"
  },
  "type": "import"
 },
 "bowler.query.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "bowler.query.log": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "bowler.query.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.query.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "bowler.query.selector": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bowler.query.QM",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "bowler.query.selector.wrapper": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bowler.query.QM",
    "bowler.query.SELECTORS",
    "bowler.query.inspect",
    "bowler.query.selector",
    "list"
   ]
  },
  "type": "function"
 },
 "bowler.query.selector.wrapper.wrapped": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Transform",
    "bowler.query.Q",
    "bowler.query.selector",
    "functools.wraps",
    "hasattr",
    "power_parts",
    "quoted_parts",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "bowler.query.type_repr": {
  "data": {
   "shadows": "fissix.pytree.type_repr"
  },
  "type": "import"
 },
 "bowler.query.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "bowler.tests": {
  "data": {},
  "type": "module"
 },
 "bowler.tests.query": {
  "data": {},
  "type": "module"
 },
 "bowler.tests.query.QueryTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "bowler.tests.query.QueryTest.test_basic": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Query",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "bowler.tests.query.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "bowler.tests.smoke": {
  "data": {},
  "type": "module"
 },
 "bowler.tests.smoke-target": {
  "data": {
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "module"
 },
 "bowler.tests.smoke-target.foo": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "bowler.tests.smoke.Call": {
  "data": {
   "shadows": "fissix.fixer_util.Call"
  },
  "type": "import"
 },
 "bowler.tests.smoke.Name": {
  "data": {
   "shadows": "fissix.fixer_util.Name"
  },
  "type": "import"
 },
 "bowler.tests.smoke.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "bowler.tests.smoke.SmokeTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "bowler.tests.smoke.SmokeTest.test_tr": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Query",
    "len",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_tr.takes_string_literal": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_tr.verify_hunk": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_tr.wrap_string": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "fissix.fixer_util.Call",
    "fissix.fixer_util.Name"
   ]
  },
  "type": "function"
 },
 "bowler.tests.smoke.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "bowler.tests.smoke.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.tool": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bowler.tool.logging"
   ]
  },
  "type": "module"
 },
 "bowler.tool.BowlerTool": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "bowler.tool.os",
    "fissix.refactor.RefactoringTool"
   ]
  },
  "type": "class"
 },
 "bowler.tool.BowlerTool.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "bowler.tool.multiprocessing",
    "super"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.get_fixers": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "f",
    "f.order",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.process_hunks": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "BowlerQuit",
    "Filename",
    "ValueError",
    "bowler.tool.click",
    "bowler.tool.log",
    "bowler.tool.prompt_user",
    "bowler.tool.sh",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.processed_file": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "bowler.tool.diff_texts",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.queue_work": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Filename"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "Filename",
    "any",
    "bowler.tool.multiprocessing",
    "bowler.tool.os",
    "bowler.tool.time",
    "len",
    "max",
    "min",
    "queue.Empty",
    "range",
    "sorted",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor_dir": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "Filename",
    "bowler.tool.os",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor_file": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "OSError",
    "fissix.pgen2.parse.ParseError",
    "input",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor_queue": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "bowler.tool.BowlerTool.run": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "bowler.tool.Empty": {
  "data": {
   "shadows": "queue.Empty"
  },
  "type": "import"
 },
 "bowler.tool.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "bowler.tool.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.tool.PROMPT_HELP": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "bowler.tool.ParseError": {
  "data": {
   "shadows": "fissix.pgen2.parse.ParseError"
  },
  "type": "import"
 },
 "bowler.tool.RefactoringTool": {
  "data": {
   "shadows": "fissix.refactor.RefactoringTool"
  },
  "type": "import"
 },
 "bowler.tool.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "bowler.tool.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "bowler.tool.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "bowler.tool.diff_texts": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bowler.tool.difflib",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "bowler.tool.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "bowler.tool.log": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "bowler.tool.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bowler.tool.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "bowler.tool.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bowler.tool.prompt_user": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bowler.tool.PROMPT_HELP",
    "bowler.tool.click",
    "input",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "bowler.tool.sh": {
  "data": {
   "shadows": "sh"
  },
  "type": "import"
 },
 "bowler.tool.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "bowler.types": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "bowler.types.Capture",
    "bowler.types.Filename",
    "bowler.types.Hunk",
    "bowler.types.Passthrough",
    "bowler.types.STARS",
    "bowler.types.SYMBOL",
    "bowler.types.TOKEN",
    "fissix.fixer_base.BaseFix",
    "fissix.pgen2.token",
    "fissix.pygram.python_symbols",
    "fissix.pytree.Leaf",
    "fissix.pytree.Node",
    "object",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.NewType",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "bowler.types.ARG_ELEMS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "bowler.types.ARG_END": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "bowler.types.ARG_LISTS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "bowler.types.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "bowler.types.BaseFix": {
  "data": {
   "shadows": "fissix.fixer_base.BaseFix"
  },
  "type": "import"
 },
 "bowler.types.BowlerException": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "bowler.types.BowlerQuit": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bowler.types.BowlerException"
   ]
  },
  "type": "class"
 },
 "bowler.types.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "bowler.types.Callback": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "bowler.types.Capture": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "bowler.types.DROP": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "bowler.types.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "bowler.types.Factory": {
  "data": {
   "shadows": "attr.Factory"
  },
  "type": "import"
 },
 "bowler.types.Filename": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "bowler.types.Filter": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "bowler.types.Fixers": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "bowler.types.Hunk": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "bowler.types.IMRError": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bowler.types.BowlerException"
   ]
  },
  "type": "class"
 },
 "bowler.types.LN": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "bowler.types.Leaf": {
  "data": {
   "shadows": "fissix.pytree.Leaf"
  },
  "type": "import"
 },
 "bowler.types.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "bowler.types.NewType": {
  "data": {
   "shadows": "typing.NewType"
  },
  "type": "import"
 },
 "bowler.types.Node": {
  "data": {
   "shadows": "fissix.pytree.Node"
  },
  "type": "import"
 },
 "bowler.types.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "bowler.types.Passthrough": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "bowler.types.Passthrough.__getattr__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "getattr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "bowler.types.Passthrough.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "bowler.types.Processor": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "bowler.types.RetryFile": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bowler.types.BowlerException"
   ]
  },
  "type": "class"
 },
 "bowler.types.SENTINEL": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "bowler.types.STARS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "bowler.types.START": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "bowler.types.SYMBOL": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "bowler.types.Stringish": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "bowler.types.TOKEN": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "bowler.types.Transform": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "attr.Factory",
    "attr.dataclass",
    "bowler.types.Callback",
    "bowler.types.Filter",
    "dict",
    "fissix.fixer_base.BaseFix",
    "list",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "bowler.types.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "bowler.types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "bowler.types.dataclass": {
  "data": {
   "shadows": "attr.dataclass"
  },
  "type": "import"
 },
 "bowler.types.python_symbols": {
  "data": {
   "shadows": "fissix.pygram.python_symbols"
  },
  "type": "import"
 },
 "bowler.types.token": {
  "data": {
   "shadows": "fissix.pgen2.token"
  },
  "type": "import"
 }
}