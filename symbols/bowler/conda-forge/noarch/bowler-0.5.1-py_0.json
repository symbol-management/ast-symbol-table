{
 "bowler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bowler.__main__": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.argv"
  ],
  "type": "module"
 },
 "bowler.helpers": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "bowler.helpers.Once": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bowler.helpers.Once.__bool__": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.helpers.Once.__init__": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.helpers.dotted_parts": {
  "lineno": 61,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.helpers.find_first": {
  "lineno": 103,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "bowler.helpers.find_last": {
  "lineno": 133,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "bowler.helpers.find_next": {
  "lineno": 124,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "bowler.helpers.find_previous": {
  "lineno": 115,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "bowler.helpers.get_class": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.helpers.is_method": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.helpers.power_parts": {
  "lineno": 81,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.helpers.print_tree": {
  "lineno": 14,
  "symbols_in_volume": [
   "click.echo",
   "click.secho",
   "click.style",
   "fissix.pytree.Leaf",
   "fissix.pytree.Node",
   "fissix.pytree.type_repr"
  ],
  "type": "function"
 },
 "bowler.helpers.quoted_parts": {
  "lineno": 77,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.imr": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "bowler.imr.FunctionArgument": {
  "lineno": 26,
  "symbols_in_volume": [
   "attr.dataclass",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "class"
 },
 "bowler.imr.FunctionArgument.build": {
  "lineno": 34,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "bowler.imr.FunctionArgument.build_list": {
  "lineno": 67,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.imr.FunctionArgument.explode": {
  "lineno": 100,
  "symbols_in_volume": [
   "fissix.fixer_util.Name",
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.imr.FunctionArgument.explode_list": {
  "lineno": 162,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "bowler.imr.FunctionSpec": {
  "lineno": 192,
  "symbols_in_volume": [
   "attr.dataclass",
   "typing.List"
  ],
  "type": "class"
 },
 "bowler.imr.FunctionSpec.build": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.imr.FunctionSpec.explode": {
  "lineno": 214,
  "symbols_in_volume": [
   "fissix.fixer_util.LParen"
  ],
  "type": "function"
 },
 "bowler.main": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bowler.main.do": {
  "lineno": 43,
  "symbols_in_volume": [
   "IPython.start_ipython",
   "click.ClickException",
   "click.Path",
   "click.argument",
   "click.echo",
   "click.option",
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.main.dump": {
  "lineno": 36,
  "symbols_in_volume": [
   "click.Path",
   "click.argument",
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.main.main": {
  "lineno": 16,
  "symbols_in_volume": [
   "click.Context",
   "click.echo",
   "click.group",
   "click.option",
   "click.pass_context",
   "logging.DEBUG",
   "logging.WARNING",
   "logging.basicConfig",
   "python.bowler.__version__"
  ],
  "type": "function"
 },
 "bowler.main.run": {
  "lineno": 80,
  "symbols_in_volume": [
   "click.ClickException",
   "click.argument",
   "importlib.import_module",
   "importlib.util.module_from_spec",
   "importlib.util.spec_from_file_location",
   "pathlib.Path",
   "sys.argv",
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.query": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "typing.Callable",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "bowler.query.Query": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bowler.query.Query.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "bowler.query.Query.add_argument": {
  "lineno": 666,
  "symbols_in_volume": [
   "inspect.signature",
   "typing.cast"
  ],
  "type": "function"
 },
 "bowler.query.Query.add_argument.add_argument_transform": {
  "lineno": 696,
  "symbols_in_volume": [
   "fissix.fixer_util.Name",
   "fissix.pytree.Node",
   "typing.cast"
  ],
  "type": "function"
 },
 "bowler.query.Query.compile": {
  "lineno": 906,
  "symbols_in_volume": [
   "fissix.fixer_base.BaseFix",
   "typing.List",
   "typing.Type"
  ],
  "type": "function"
 },
 "bowler.query.Query.create_fixer": {
  "lineno": 867,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.create_fixer.Fixer": {
  "lineno": 892,
  "symbols_in_volume": [
   "fissix.fixer_base.BaseFix"
  ],
  "type": "class"
 },
 "bowler.query.Query.create_fixer.Fixer.transform": {
  "lineno": 896,
  "symbols_in_volume": [
   "fissix.pytree.Node",
   "typing.cast"
  ],
  "type": "function"
 },
 "bowler.query.Query.current": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.diff": {
  "lineno": 937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.dump": {
  "lineno": 932,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.encapsulate": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.encapsulate.encapsulate_transform": {
  "lineno": 465,
  "symbols_in_volume": [
   "fissix.fixer_util.Attr",
   "fissix.fixer_util.Comma",
   "fissix.fixer_util.Dot",
   "fissix.fixer_util.LParen",
   "fissix.fixer_util.Name",
   "fissix.fixer_util.Newline",
   "fissix.fixer_util.RParen",
   "fissix.pytree.Leaf",
   "fissix.pytree.Node"
  ],
  "type": "function"
 },
 "bowler.query.Query.execute": {
  "lineno": 917,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.execute.processor": {
  "lineno": 921,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.filter": {
  "lineno": 841,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "bowler.query.Query.filter.callback": {
  "lineno": 845,
  "symbols_in_volume": [
   "fissix.pytree.Node"
  ],
  "type": "function"
 },
 "bowler.query.Query.fixer": {
  "lineno": 837,
  "symbols_in_volume": [
   "fissix.fixer_base.BaseFix",
   "typing.Type"
  ],
  "type": "function"
 },
 "bowler.query.Query.idiff": {
  "lineno": 940,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.in_class": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.in_class.filter_in_class": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.is_call": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.is_call.filter_is_call": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.is_def": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.is_def.filter_is_def": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.is_filename": {
  "lineno": 376,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "bowler.query.Query.is_filename.filter_filename_exclude": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.is_filename.filter_filename_include": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.modify": {
  "lineno": 852,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "bowler.query.Query.modify.callback": {
  "lineno": 856,
  "symbols_in_volume": [
   "fissix.pytree.Node"
  ],
  "type": "function"
 },
 "bowler.query.Query.modify_argument": {
  "lineno": 753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.modify_argument.modify_argument_transform": {
  "lineno": 764,
  "symbols_in_volume": [
   "fissix.fixer_util.Name",
   "fissix.pytree.Node"
  ],
  "type": "function"
 },
 "bowler.query.Query.move": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.move.transform_move": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.process": {
  "lineno": 863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.remove_argument": {
  "lineno": 783,
  "symbols_in_volume": [
   "inspect.Parameter.POSITIONAL_ONLY",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Parameter.VAR_KEYWORD",
   "inspect.Parameter.VAR_POSITIONAL",
   "inspect.signature"
  ],
  "type": "function"
 },
 "bowler.query.Query.remove_argument.remove_argument_transform": {
  "lineno": 811,
  "symbols_in_volume": [
   "fissix.pytree.Node"
  ],
  "type": "function"
 },
 "bowler.query.Query.rename": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.rename.rename_transform": {
  "lineno": 626,
  "symbols_in_volume": [
   "fissix.fixer_util.Name",
   "fissix.pytree.Leaf",
   "fissix.pytree.Node",
   "fissix.pytree.type_repr"
  ],
  "type": "function"
 },
 "bowler.query.Query.select": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.select_attribute": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.select_class": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.select_function": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.select_method": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.select_module": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.select_pattern": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.select_root": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.select_subclass": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.select_var": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.silent": {
  "lineno": 943,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.Query.write": {
  "lineno": 946,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.query.selector": {
  "lineno": 50,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "bowler.query.selector.wrapper": {
  "lineno": 51,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "bowler.query.selector.wrapper.wrapped": {
  "lineno": 58,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "bowler.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bowler.tests.query": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bowler.tests.query.QueryTest": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "bowler.tests.query.QueryTest.test_basic": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.tests.smoke": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bowler.tests.smoke-target": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bowler.tests.smoke-target.foo": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "bowler.tests.smoke.SmokeTest.test_tr": {
  "lineno": 14,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_tr.takes_string_literal": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_tr.verify_hunk": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.tests.smoke.SmokeTest.test_tr.wrap_string": {
  "lineno": 21,
  "symbols_in_volume": [
   "fissix.fixer_util.Call",
   "fissix.fixer_util.Name"
  ],
  "type": "function"
 },
 "bowler.tool": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "bowler.tool.BowlerTool": {
  "lineno": 72,
  "symbols_in_volume": [
   "fissix.refactor.RefactoringTool",
   "os.cpu_count"
  ],
  "type": "class"
 },
 "bowler.tool.BowlerTool.__init__": {
  "lineno": 75,
  "symbols_in_volume": [
   "multiprocessing.JoinableQueue",
   "multiprocessing.Queue",
   "multiprocessing.Semaphore"
  ],
  "type": "function"
 },
 "bowler.tool.BowlerTool.get_fixers": {
  "lineno": 100,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "bowler.tool.BowlerTool.process_hunks": {
  "lineno": 241,
  "symbols_in_volume": [
   "click.echo",
   "click.secho",
   "sh.ErrorReturnCode",
   "sh.patch",
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.tool.BowlerTool.processed_file": {
  "lineno": 106,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.tool.BowlerTool.queue_work": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor": {
  "lineno": 193,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "os.path.isdir",
   "queue.Empty",
   "time.sleep",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor_dir": {
  "lineno": 147,
  "symbols_in_volume": [
   "os.extsep",
   "os.path.join",
   "os.path.splitext",
   "os.walk"
  ],
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor_file": {
  "lineno": 127,
  "symbols_in_volume": [
   "fissix.pgen2.parse.ParseError",
   "typing.List"
  ],
  "type": "function"
 },
 "bowler.tool.BowlerTool.refactor_queue": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bowler.tool.BowlerTool.run": {
  "lineno": 292,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "bowler.tool.diff_texts": {
  "lineno": 38,
  "symbols_in_volume": [
   "difflib.unified_diff",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "bowler.tool.prompt_user": {
  "lineno": 44,
  "symbols_in_volume": [
   "click.echo",
   "click.secho"
  ],
  "type": "function"
 },
 "bowler.types": {
  "lineno": null,
  "symbols_in_volume": [
   "fissix.fixer_base.BaseFix",
   "fissix.pgen2.token",
   "fissix.pygram.python_symbols",
   "fissix.pytree.Leaf",
   "fissix.pytree.Node",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.NewType",
   "typing.Type",
   "typing.Union"
  ],
  "type": "module"
 },
 "bowler.types.BowlerException": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bowler.types.BowlerQuit": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bowler.types.IMRError": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bowler.types.Passthrough": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bowler.types.Passthrough.__getattr__": {
  "lineno": 16,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "bowler.types.Passthrough.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "bowler.types.RetryFile": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bowler.types.Transform": {
  "lineno": 48,
  "symbols_in_volume": [
   "attr.Factory",
   "attr.dataclass",
   "fissix.fixer_base.BaseFix",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "class"
 }
}