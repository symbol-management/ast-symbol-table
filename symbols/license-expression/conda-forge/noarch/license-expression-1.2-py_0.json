{
 "license_expression": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "boolean.boolean.PARSE_ERRORS",
    "boolean.boolean.TOKEN_AND",
    "boolean.boolean.TOKEN_LPAR",
    "boolean.boolean.TOKEN_OR",
    "boolean.boolean.TOKEN_RPAR",
    "collections.namedtuple",
    "len",
    "license_expression.KEYWORDS",
    "license_expression.KW_AND",
    "license_expression.KW_LPAR",
    "license_expression.KW_OR",
    "license_expression.KW_RPAR",
    "license_expression.KW_WITH",
    "license_expression.Keyword",
    "license_expression.PARSE_EXPRESSION_NOT_UNICODE",
    "license_expression.PARSE_INVALID_EXCEPTION",
    "license_expression.PARSE_INVALID_SYMBOL",
    "license_expression.PARSE_INVALID_SYMBOL_AS_EXCEPTION",
    "license_expression.TOKEN_WITH",
    "license_expression.re",
    "license_expression.str",
    "set"
   ]
  },
  "type": "module"
 },
 "license_expression.AND": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "license_expression.RenderableFunction",
    "license_expression.boolean"
   ]
  },
  "type": "class"
 },
 "license_expression.AND.__init__": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "len",
    "license_expression.AND",
    "license_expression.ExpressionError",
    "super"
   ]
  },
  "type": "function"
 },
 "license_expression.AdvancedTokenizer": {
  "data": {
   "shadows": "license_expression._pyahocorasick.Trie"
  },
  "type": "import"
 },
 "license_expression.BaseSymbol": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "license_expression.Renderable",
    "license_expression.boolean"
   ]
  },
  "type": "class"
 },
 "license_expression.BaseSymbol.__contains__": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "license_expression.BaseSymbol"
   ]
  },
  "type": "function"
 },
 "license_expression.BaseSymbol.decompose": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "license_expression.ExpressionError": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "license_expression.ExpressionParseError": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "boolean.boolean.ParseError",
    "license_expression.ExpressionError"
   ]
  },
  "type": "class"
 },
 "license_expression.KEYWORDS": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "license_expression.KEYWORDS_STRINGS": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "license_expression.KW_AND": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "license_expression.KW_LPAR": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "license_expression.KW_OR": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "license_expression.KW_RPAR": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "license_expression.KW_WITH": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "license_expression.Keyword": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "license_expression.LicenseExpression": {
  "data": {
   "shadows": "boolean.Expression"
  },
  "type": "import"
 },
 "license_expression.LicenseSymbol": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "functools.total_ordering",
    "license_expression.BaseSymbol"
   ]
  },
  "type": "class"
 },
 "license_expression.LicenseSymbol.__copy__": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "license_expression.LicenseSymbol",
    "tuple"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.__eq__": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.__hash__": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.__init__": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "TypeError",
    "aliases",
    "bytes",
    "isinstance",
    "license_expression.ExpressionError",
    "license_expression.KEYWORDS_STRINGS",
    "license_expression.LicenseSymbol",
    "license_expression.is_valid_license_key",
    "license_expression.str",
    "list",
    "locals",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.__len__": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.__lt__": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "LicenseWithExceptionSymbol",
    "NotImplemented",
    "isinstance",
    "license_expression.LicenseSymbol",
    "license_expression.str"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.__ne__": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.__repr__": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "aliases",
    "locals"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.__str__": {
  "data": {
   "lineno": 959
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.decompose": {
  "data": {
   "lineno": 924
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.render": {
  "data": {
   "lineno": 956
  },
  "type": "function"
 },
 "license_expression.LicenseSymbol.symbol_like": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "classmethod",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbolLike": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "functools.total_ordering",
    "license_expression.LicenseSymbol"
   ]
  },
  "type": "class"
 },
 "license_expression.LicenseSymbolLike.__copy__": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "license_expression.LicenseSymbolLike"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbolLike.__eq__": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbolLike.__hash__": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbolLike.__init__": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "callable",
    "getattr",
    "license_expression.ExpressionError",
    "license_expression.LicenseSymbolLike",
    "locals",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbolLike.__lt__": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "LicenseWithExceptionSymbol",
    "NotImplemented",
    "isinstance",
    "license_expression.LicenseSymbol",
    "license_expression.LicenseSymbolLike",
    "license_expression.str"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbolLike.__ne__": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseSymbolLike.render": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "license_expression.LicenseSymbolLike",
    "super"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseWithExceptionSymbol": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "functools.total_ordering",
    "license_expression.BaseSymbol"
   ]
  },
  "type": "class"
 },
 "license_expression.LicenseWithExceptionSymbol.__copy__": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "copy.copy",
    "license_expression.LicenseWithExceptionSymbol"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseWithExceptionSymbol.__eq__": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseWithExceptionSymbol.__hash__": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseWithExceptionSymbol.__init__": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "license_expression.ExpressionError",
    "license_expression.LicenseSymbol",
    "license_expression.LicenseWithExceptionSymbol",
    "license_expression.str",
    "locals",
    "super"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseWithExceptionSymbol.__lt__": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "license_expression.LicenseSymbol",
    "license_expression.LicenseSymbolLike",
    "license_expression.LicenseWithExceptionSymbol",
    "license_expression.str"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseWithExceptionSymbol.__ne__": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseWithExceptionSymbol.__repr__": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseWithExceptionSymbol.__str__": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "locals"
   ]
  },
  "type": "function"
 },
 "license_expression.LicenseWithExceptionSymbol.decompose": {
  "data": {
   "lineno": 1087
  },
  "type": "function"
 },
 "license_expression.LicenseWithExceptionSymbol.render": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "locals"
   ]
  },
  "type": "function"
 },
 "license_expression.Licensing": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "license_expression.boolean"
   ]
  },
  "type": "class"
 },
 "license_expression.Licensing.__init__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "as_symbols",
    "license_expression.Licensing",
    "print",
    "super",
    "tuple",
    "validate_symbols"
   ]
  },
  "type": "function"
 },
 "license_expression.Licensing._keys": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "ordered_unique"
   ]
  },
  "type": "function"
 },
 "license_expression.Licensing._parse_and_simplify": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "TypeError",
    "boolean.Expression",
    "isinstance",
    "locals"
   ]
  },
  "type": "function"
 },
 "license_expression.Licensing.advanced_tokenizer": {
  "data": {
   "lineno": 545
  },
  "type": "function"
 },
 "license_expression.Licensing.contains": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "license_expression.Licensing.get_advanced_tokenizer": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "add_item",
    "aliases",
    "getattr",
    "license_expression.KEYWORDS",
    "license_expression._pyahocorasick.Trie"
   ]
  },
  "type": "function"
 },
 "license_expression.Licensing.is_equivalent": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "license_expression.Licensing.license_keys": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "license_expression.Licensing.license_symbols": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "isinstance",
    "license_expression.itertools",
    "list",
    "ordered_unique"
   ]
  },
  "type": "function"
 },
 "license_expression.Licensing.parse": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "boolean.Expression",
    "boolean.boolean.ParseError",
    "bytes",
    "isinstance",
    "license_expression.ExpressionError",
    "license_expression.ExpressionParseError",
    "license_expression.Licensing",
    "license_expression.str",
    "list",
    "locals",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "license_expression.Licensing.primary_license_key": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "license_expression.Licensing.primary_license_symbol": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "license_expression.Licensing.simple_tokenizer": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "LicenseSymbol",
    "license_expression.KW_LPAR",
    "license_expression.KW_RPAR",
    "license_expression.OPERATORS",
    "license_expression._pyahocorasick.Token",
    "license_expression._simple_tokenizer",
    "match_getter"
   ]
  },
  "type": "function"
 },
 "license_expression.Licensing.tokenize": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "boolean.boolean.PARSE_INVALID_EXPRESSION",
    "boolean.boolean.ParseError",
    "build_symbols_from_unknown_tokens",
    "isinstance",
    "license_expression.Keyword",
    "license_expression.PARSE_EXPRESSION_NOT_UNICODE",
    "license_expression.str",
    "replace_with_subexpression_by_license_symbol"
   ]
  },
  "type": "function"
 },
 "license_expression.Licensing.unknown_license_keys": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "license_expression.Licensing.unknown_license_symbols": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "license_expression.OPERATORS": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "license_expression.OR": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "license_expression.RenderableFunction",
    "license_expression.boolean"
   ]
  },
  "type": "class"
 },
 "license_expression.OR.__init__": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "len",
    "license_expression.ExpressionError",
    "license_expression.OR",
    "super"
   ]
  },
  "type": "function"
 },
 "license_expression.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "license_expression.PARSE_ERRORS": {
  "data": {
   "shadows": "boolean.boolean.PARSE_ERRORS"
  },
  "type": "import"
 },
 "license_expression.PARSE_EXPRESSION_NOT_UNICODE": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "license_expression.PARSE_INVALID_EXCEPTION": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "license_expression.PARSE_INVALID_EXPRESSION": {
  "data": {
   "shadows": "boolean.boolean.PARSE_INVALID_EXPRESSION"
  },
  "type": "import"
 },
 "license_expression.PARSE_INVALID_NESTING": {
  "data": {
   "shadows": "boolean.boolean.PARSE_INVALID_NESTING"
  },
  "type": "import"
 },
 "license_expression.PARSE_INVALID_OPERATOR_SEQUENCE": {
  "data": {
   "shadows": "boolean.boolean.PARSE_INVALID_OPERATOR_SEQUENCE"
  },
  "type": "import"
 },
 "license_expression.PARSE_INVALID_SYMBOL": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "license_expression.PARSE_INVALID_SYMBOL_AS_EXCEPTION": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "license_expression.PARSE_INVALID_SYMBOL_SEQUENCE": {
  "data": {
   "shadows": "boolean.boolean.PARSE_INVALID_SYMBOL_SEQUENCE"
  },
  "type": "import"
 },
 "license_expression.PARSE_UNBALANCED_CLOSING_PARENS": {
  "data": {
   "shadows": "boolean.boolean.PARSE_UNBALANCED_CLOSING_PARENS"
  },
  "type": "import"
 },
 "license_expression.PARSE_UNKNOWN_TOKEN": {
  "data": {
   "shadows": "boolean.boolean.PARSE_UNKNOWN_TOKEN"
  },
  "type": "import"
 },
 "license_expression.ParseError": {
  "data": {
   "shadows": "boolean.boolean.ParseError"
  },
  "type": "import"
 },
 "license_expression.Renderable": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "license_expression.Renderable.render": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "license_expression.Renderable.render_as_readable": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "LicenseWithExceptionSymbol",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "license_expression.RenderableFunction": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "license_expression.Renderable"
   ]
  },
  "type": "class"
 },
 "license_expression.RenderableFunction.render": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "license_expression.Renderable",
    "license_expression.str",
    "print",
    "rendered_items_append"
   ]
  },
  "type": "function"
 },
 "license_expression.TOKEN_AND": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_AND"
  },
  "type": "import"
 },
 "license_expression.TOKEN_LPAR": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_LPAR"
  },
  "type": "import"
 },
 "license_expression.TOKEN_OR": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_OR"
  },
  "type": "import"
 },
 "license_expression.TOKEN_RPAR": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_RPAR"
  },
  "type": "import"
 },
 "license_expression.TOKEN_SYMBOL": {
  "data": {
   "shadows": "boolean.boolean.TOKEN_SYMBOL"
  },
  "type": "import"
 },
 "license_expression.TOKEN_WITH": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "license_expression.Token": {
  "data": {
   "shadows": "license_expression._pyahocorasick.Token"
  },
  "type": "import"
 },
 "license_expression._pyahocorasick": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "__name__",
    "license_expression._pyahocorasick.TRACE",
    "license_expression._pyahocorasick.logger",
    "license_expression._pyahocorasick.logging",
    "license_expression._pyahocorasick.re",
    "license_expression._pyahocorasick.str",
    "license_expression._pyahocorasick.sys",
    "object"
   ]
  },
  "type": "module"
 },
 "license_expression._pyahocorasick.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "license_expression._pyahocorasick.TRACE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "license_expression._pyahocorasick.Token": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "license_expression._pyahocorasick.Token.__contains__": {
  "data": {
   "lineno": 571
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Token.__eq__": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "isinstance",
    "license_expression._pyahocorasick.Token"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Token.__hash__": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Token.__init__": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Token.__len__": {
  "data": {
   "lineno": 520
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Token.__repr__": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Token.as_dict": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "getattr"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Token.is_after": {
  "data": {
   "lineno": 552
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Token.is_before": {
  "data": {
   "lineno": 568
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Token.overlap": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Token.sort": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "license_expression._pyahocorasick.Trie.__get_node": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "KeyError",
    "get_tokens",
    "isinstance",
    "license_expression._pyahocorasick.str"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "license_expression._pyahocorasick.TrieNode",
    "set"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.add": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "get_tokens",
    "isinstance",
    "license_expression._pyahocorasick.TrieNode",
    "license_expression._pyahocorasick.str"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.exists": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "bool",
    "license_expression._pyahocorasick.nil"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.get": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "KeyError",
    "license_expression._pyahocorasick.nil"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.is_prefix": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.items": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "iter",
    "walk"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.items.walk": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "license_expression._pyahocorasick.nil",
    "walk"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.iter": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "Token",
    "get_tokens",
    "len",
    "license_expression._pyahocorasick.TRACE",
    "license_expression._pyahocorasick.logger_debug",
    "license_expression._pyahocorasick.nil",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.keys": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.make_automaton": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.tokenize": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "filter_overlapping",
    "license_expression._pyahocorasick.TRACE",
    "license_expression._pyahocorasick.logger_debug",
    "list"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.Trie.values": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.TrieNode": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "license_expression._pyahocorasick.TrieNode.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "license_expression._pyahocorasick.nil"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.TrieNode.__repr__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "license_expression._pyahocorasick.nil"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick._tokenizer": {
  "data": {
   "lineno": 611
  },
  "type": "constant"
 },
 "license_expression._pyahocorasick.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "license_expression._pyahocorasick.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "license_expression._pyahocorasick.filter_overlapping": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "Token.sort",
    "len",
    "license_expression._pyahocorasick.logger_debug"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.get_tokens": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "license_expression._pyahocorasick._tokenizer"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "license_expression._pyahocorasick.logger_debug": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance",
    "license_expression._pyahocorasick.logger",
    "license_expression._pyahocorasick.str",
    "repr"
   ]
  },
  "type": "function"
 },
 "license_expression._pyahocorasick.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "license_expression._pyahocorasick.nil": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "license_expression._pyahocorasick.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "license_expression._pyahocorasick.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "license_expression._pyahocorasick.str": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "license_expression._pyahocorasick.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "license_expression._pyahocorasick.unicode": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "license_expression._pyahocorasick.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "license_expression._simple_tokenizer": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "license_expression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "license_expression.as_symbols": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "isinstance",
    "license_expression.LicenseSymbol",
    "license_expression.LicenseSymbolLike",
    "license_expression.str",
    "locals"
   ]
  },
  "type": "function"
 },
 "license_expression.boolean": {
  "data": {
   "shadows": "boolean"
  },
  "type": "import"
 },
 "license_expression.build_symbols_from_unknown_tokens": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "build_token_with_symbol",
    "collections.deque",
    "list"
   ]
  },
  "type": "function"
 },
 "license_expression.build_symbols_from_unknown_tokens.build_token_with_symbol": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "LicenseSymbol",
    "license_expression._pyahocorasick.Token",
    "license_expression.string"
   ]
  },
  "type": "function"
 },
 "license_expression.build_token_groups_for_with_subexpression": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "collections.deque",
    "is_with_subexpression",
    "len",
    "list",
    "triple_clear",
    "triple_popleft",
    "tripple_append",
    "tuple"
   ]
  },
  "type": "function"
 },
 "license_expression.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "license_expression.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "license_expression.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "license_expression.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "license_expression.is_valid_license_key": {
  "data": {
   "lineno": 868
  },
  "type": "constant"
 },
 "license_expression.is_with_subexpression": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "LicenseSymbol",
    "isinstance",
    "license_expression.KW_WITH"
   ]
  },
  "type": "function"
 },
 "license_expression.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "license_expression.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "license_expression.ordered_unique": {
  "data": {
   "lineno": 1215
  },
  "type": "function"
 },
 "license_expression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "license_expression.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "license_expression.replace_with_subexpression_by_license_symbol": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "Exception",
    "LicenseSymbol",
    "LicenseWithExceptionSymbol",
    "boolean.boolean.PARSE_INVALID_EXPRESSION",
    "boolean.boolean.ParseError",
    "boolean.boolean.TOKEN_SYMBOL",
    "isinstance",
    "len",
    "license_expression.Keyword",
    "license_expression.PARSE_INVALID_EXCEPTION",
    "license_expression.PARSE_INVALID_SYMBOL",
    "license_expression.PARSE_INVALID_SYMBOL_AS_EXCEPTION",
    "license_expression.TOKEN_WITH",
    "license_expression._pyahocorasick.Token",
    "license_expression.build_token_groups_for_with_subexpression",
    "license_expression.string",
    "repr"
   ]
  },
  "type": "function"
 },
 "license_expression.str": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "license_expression.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "license_expression.total_ordering": {
  "data": {
   "shadows": "functools.total_ordering"
  },
  "type": "import"
 },
 "license_expression.unicode": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "license_expression.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "license_expression.validate_symbols": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "aliases",
    "aliases.add",
    "collections.defaultdict",
    "getattr",
    "isinstance",
    "len",
    "license_expression.KEYWORDS_STRINGS",
    "license_expression.LicenseSymbol",
    "list",
    "locals",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 }
}