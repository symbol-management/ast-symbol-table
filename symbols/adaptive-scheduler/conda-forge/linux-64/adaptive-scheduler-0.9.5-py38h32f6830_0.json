{
 "adaptive_scheduler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "adaptive_scheduler._mock_scheduler": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "logging.INFO",
   "logging.getLogger",
   "structlog.wrap_logger",
   "zmq.asyncio.Context"
  ],
  "type": "module"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler": {
  "lineno": 22,
  "symbols_in_volume": [
   "asyncio.sleep",
   "typing.Coroutine",
   "zmq.REP"
  ],
  "type": "class"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "asyncio.get_event_loop"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._dispatch": {
  "lineno": 142,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._get_new_job_id": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._queue_is_full": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._refresh": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._submit": {
  "lineno": 89,
  "symbols_in_volume": [
   "os.environ",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.cancel": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.queue": {
  "lineno": 65,
  "symbols_in_volume": [
   "toolz.dicttoolz.dissoc"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.submit": {
  "lineno": 100,
  "symbols_in_volume": [
   "datetime.datetime.now"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler._external_command": {
  "lineno": 165,
  "symbols_in_volume": [
   "asyncio.get_event_loop",
   "typing.Tuple",
   "zmq.RCVTIMEO",
   "zmq.REQ"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.cancel": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.queue": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.submit": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._static_version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "adaptive_scheduler._version": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "os.path.basename",
   "os.path.dirname",
   "os.path.realpath",
   "os.path.split"
  ],
  "type": "module"
 },
 "adaptive_scheduler._version._build_py": {
  "lineno": 190,
  "symbols_in_volume": [
   "setuptools.command.build_py.build_py"
  ],
  "type": "class"
 },
 "adaptive_scheduler._version._build_py.run": {
  "lineno": 191,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "adaptive_scheduler._version._sdist": {
  "lineno": 196,
  "symbols_in_volume": [
   "setuptools.command.sdist.sdist"
  ],
  "type": "class"
 },
 "adaptive_scheduler._version._sdist.make_release_tree": {
  "lineno": 197,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "adaptive_scheduler._version._write_version": {
  "lineno": 176,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "adaptive_scheduler._version.get_static_version_info": {
  "lineno": 43,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "adaptive_scheduler._version.get_version": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._version.get_version_from_git": {
  "lineno": 71,
  "symbols_in_volume": [
   "os.path.samefile",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "adaptive_scheduler._version.get_version_from_git_archive": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._version.pep440_format": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._version.version_is_from_git": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.client_support": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger",
   "structlog.processors.JSONRenderer",
   "structlog.processors.StackInfoRenderer",
   "structlog.processors.TimeStamper",
   "structlog.processors.format_exc_info",
   "structlog.wrap_logger",
   "zmq.Context"
  ],
  "type": "module"
 },
 "adaptive_scheduler.client_support._add_log_file_handler": {
  "lineno": 35,
  "symbols_in_volume": [
   "logging.FileHandler"
  ],
  "type": "function"
 },
 "adaptive_scheduler.client_support._get_log_entry": {
  "lineno": 113,
  "symbols_in_volume": [
   "adaptive.AsyncRunner",
   "adaptive_scheduler.utils._get_npoints",
   "contextlib.suppress",
   "datetime.timedelta",
   "psutil.cpu_percent",
   "psutil.virtual_memory",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.client_support.get_learner": {
  "lineno": 40,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "adaptive_scheduler.utils._deserialize",
   "adaptive_scheduler.utils._serialize",
   "adaptive_scheduler.utils.log_exception",
   "adaptive_scheduler.utils.maybe_lst",
   "socket",
   "socket.connect",
   "socket.recv_serialized",
   "socket.send_serialized",
   "socket.setsockopt",
   "typing.List",
   "typing.Tuple",
   "typing.Union",
   "zmq.LINGER",
   "zmq.RCVTIMEO",
   "zmq.REQ"
  ],
  "type": "function"
 },
 "adaptive_scheduler.client_support.log_info": {
  "lineno": 137,
  "symbols_in_volume": [
   "adaptive.AsyncRunner",
   "adaptive_scheduler.utils._get_npoints",
   "asyncio.Task",
   "asyncio.sleep",
   "socket.gethostname"
  ],
  "type": "function"
 },
 "adaptive_scheduler.client_support.tell_done": {
  "lineno": 93,
  "symbols_in_volume": [
   "adaptive_scheduler.utils._deserialize",
   "adaptive_scheduler.utils._serialize",
   "socket",
   "socket.connect",
   "socket.recv_serialized",
   "socket.send_serialized",
   "socket.setsockopt",
   "zmq.RCVTIMEO",
   "zmq.REQ"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "adaptive_scheduler.scheduler.BaseScheduler": {
  "lineno": 32,
  "symbols_in_volume": [
   "adaptive_scheduler.utils._RequireAttrsABCMeta"
  ],
  "type": "class"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.__getstate__": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.__setstate__": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._dask_mpi": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._executor_specific": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._ipyparallel": {
  "lineno": 195,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._mpi4py": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._process_pool": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.batch_fname": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.cancel": {
  "lineno": 149,
  "symbols_in_volume": [
   "time.sleep",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.cancel.cancel_jobs": {
  "lineno": 171,
  "symbols_in_volume": [
   "adaptive_scheduler.utils._progress",
   "subprocess.PIPE",
   "subprocess.run",
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.cancel.to_cancel": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.ext": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.extra_env_vars": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.extra_scheduler": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.extra_script": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.job_script": {
  "lineno": 130,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.log_fname": {
  "lineno": 241,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.join"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.output_fnames": {
  "lineno": 247,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.queue": {
  "lineno": 98,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.Dict"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.sanatize_job_id": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.start_job": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.submit_cmd": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.write_job_script": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler": {
  "lineno": 676,
  "symbols_in_volume": [],
  "type": "class"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.__getstate__": {
  "lineno": 724,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.__init__": {
  "lineno": 682,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.extra_scheduler": {
  "lineno": 778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.job_script": {
  "lineno": 730,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.queue": {
  "lineno": 770,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.start_job": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "class"
 },
 "adaptive_scheduler.scheduler.PBS.__getstate__": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.__init__": {
  "lineno": 297,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._calculate_nnodes": {
  "lineno": 349,
  "symbols_in_volume": [
   "math.ceil",
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._fix_line_cuts": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._guess_cores_per_node": {
  "lineno": 516,
  "symbols_in_volume": [
   "collections.Counter"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._qnodes": {
  "lineno": 501,
  "symbols_in_volume": [
   "subprocess.run"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._split_by_job": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.job_script": {
  "lineno": 391,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.output_fnames": {
  "lineno": 381,
  "symbols_in_volume": [
   "os.path.expanduser",
   "os.path.join",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.queue": {
  "lineno": 462,
  "symbols_in_volume": [
   "getpass.getuser",
   "os.environ",
   "subprocess.run",
   "typing.Dict"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.sanatize_job_id": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.start_job": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "class"
 },
 "adaptive_scheduler.scheduler.SLURM.__init__": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM._ipyparallel": {
  "lineno": 559,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM.job_script": {
  "lineno": 582,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM.queue": {
  "lineno": 630,
  "symbols_in_volume": [
   "getpass.getuser",
   "subprocess.run",
   "typing.Dict"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM.queue.line_to_dict": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM.start_job": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler._get_default_scheduler": {
  "lineno": 783,
  "symbols_in_volume": [
   "distutils.spawn.find_executable",
   "os.environ.get",
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler._run_submit": {
  "lineno": 18,
  "symbols_in_volume": [
   "os.environ.copy",
   "subprocess.run",
   "time.sleep"
  ],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.float_info.max"
  ],
  "type": "module"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner": {
  "lineno": 27,
  "symbols_in_volume": [
   "adaptive.learner.base_learner.BaseLearner"
  ],
  "type": "class"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "adaptive_scheduler.utils._print_same_line",
   "copy.copy",
   "time.sleep",
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner._get_data": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner._set_data": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.ask": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.done": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.loss": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.npoints": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.remove_unfinished": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.result": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.tell": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.tell_pending": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.ensure_hashable": {
  "lineno": 13,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger",
   "structlog.wrap_logger",
   "zmq.asyncio.Context"
  ],
  "type": "module"
 },
 "adaptive_scheduler.server_support.DatabaseManager": {
  "lineno": 83,
  "symbols_in_volume": [
   "adaptive_scheduler.utils._deserialize",
   "adaptive_scheduler.utils._serialize",
   "socket",
   "socket.bind",
   "socket.close",
   "socket.recv_serialized",
   "socket.send_serialized",
   "zmq.REP"
  ],
  "type": "class"
 },
 "adaptive_scheduler.server_support.DatabaseManager.__init__": {
  "lineno": 109,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "adaptive_scheduler.scheduler.BaseScheduler",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._dispatch": {
  "lineno": 229,
  "symbols_in_volume": [
   "adaptive_scheduler.utils.maybe_lst",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._output_logs": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._setup": {
  "lineno": 134,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._start_request": {
  "lineno": 180,
  "symbols_in_volume": [
   "tinydb.Query",
   "tinydb.TinyDB",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._stop_request": {
  "lineno": 211,
  "symbols_in_volume": [
   "adaptive_scheduler.utils.maybe_lst",
   "tinydb.Query",
   "tinydb.TinyDB",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._stop_requests": {
  "lineno": 221,
  "symbols_in_volume": [
   "adaptive_scheduler.utils.maybe_lst",
   "tinydb.TinyDB",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.as_dicts": {
  "lineno": 169,
  "symbols_in_volume": [
   "tinydb.TinyDB",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.create_empty_db": {
  "lineno": 159,
  "symbols_in_volume": [
   "os.path.exists",
   "os.remove",
   "tinydb.TinyDB"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.n_done": {
  "lineno": 154,
  "symbols_in_volume": [
   "tinydb.Query",
   "tinydb.TinyDB"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.update": {
  "lineno": 139,
  "symbols_in_volume": [
   "tinydb.TinyDB",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.JobManager": {
  "lineno": 275,
  "symbols_in_volume": [
   "asyncio.sleep"
  ],
  "type": "class"
 },
 "adaptive_scheduler.server_support.JobManager.__init__": {
  "lineno": 307,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.JobManager._queued": {
  "lineno": 332,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.JobManager.max_job_starts": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support.KillManager": {
  "lineno": 436,
  "symbols_in_volume": [
   "adaptive_scheduler.utils._remove_or_move_files",
   "asyncio.sleep",
   "typing.List"
  ],
  "type": "class"
 },
 "adaptive_scheduler.server_support.KillManager.__init__": {
  "lineno": 463,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "typing.Callable",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.MaxRestartsReached": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "adaptive_scheduler.server_support.RunManager": {
  "lineno": 712,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "class"
 },
 "adaptive_scheduler.server_support.RunManager.__init__": {
  "lineno": 806,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "adaptive_scheduler.scheduler.BaseScheduler",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._repr_html_": {
  "lineno": 1035,
  "symbols_in_volume": [
   "adaptive_scheduler.widgets.info"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._setup": {
  "lineno": 889,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.cancel": {
  "lineno": 918,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.cleanup": {
  "lineno": 928,
  "symbols_in_volume": [
   "contextlib.suppress",
   "os.remove",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.elapsed_time": {
  "lineno": 986,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.get_database": {
  "lineno": 978,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "typing.Any",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info": {
  "lineno": 1038,
  "symbols_in_volume": [
   "adaptive_scheduler.widgets.info"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.load_learners": {
  "lineno": 982,
  "symbols_in_volume": [
   "adaptive_scheduler.utils.load_parallel"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.parse_log_files": {
  "lineno": 950,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.status": {
  "lineno": 1001,
  "symbols_in_volume": [
   "asyncio.CancelledError",
   "asyncio.InvalidStateError",
   "time.time",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.task_status": {
  "lineno": 967,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager": {
  "lineno": 51,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "abc.abstractmethod"
  ],
  "type": "class"
 },
 "adaptive_scheduler.server_support._BaseManager.__init__": {
  "lineno": 52,
  "symbols_in_volume": [
   "asyncio.Task",
   "asyncio.events.AbstractEventLoop",
   "typing.Coroutine",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager._setup": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager.cancel": {
  "lineno": 70,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager.is_started": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager.start": {
  "lineno": 57,
  "symbols_in_volume": [
   "asyncio.get_event_loop"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._delete_old_ipython_profiles": {
  "lineno": 684,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "adaptive_scheduler.utils._progress",
   "concurrent.futures.ThreadPoolExecutor",
   "glob.glob",
   "os.path.expanduser",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._get_all_files": {
  "lineno": 637,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "glob.glob",
   "os.path.exists",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._get_infos": {
  "lineno": 569,
  "symbols_in_volume": [
   "adaptive_scheduler.widgets.info",
   "contextlib.suppress",
   "json.loads",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._make_default_run_script": {
  "lineno": 528,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "cloudpickle.dumps",
   "jinja2.Template",
   "pathlib.Path",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.cleanup": {
  "lineno": 654,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "adaptive_scheduler.utils._remove_or_move_files",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.get_allowed_url": {
  "lineno": 514,
  "symbols_in_volume": [
   "socket.gethostbyname",
   "socket.gethostname",
   "zmq.ssh.tunnel.select_random_ports"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.logs_with_string_or_condition": {
  "lineno": 390,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.logs_with_string_or_condition.file_has_error": {
  "lineno": 420,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.parse_log_files": {
  "lineno": 583,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "os.path.exists",
   "pandas.DataFrame",
   "pandas.to_timedelta",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.periodically_clean_ipython_profiles": {
  "lineno": 1042,
  "symbols_in_volume": [
   "asyncio.get_event_loop",
   "asyncio.sleep",
   "contextlib.suppress"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "adaptive_scheduler.utils.LRUCachedCallable": {
  "lineno": 546,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable"
  ],
  "type": "class"
 },
 "adaptive_scheduler.utils.LRUCachedCallable.__call__": {
  "lineno": 604,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.LRUCachedCallable.__init__": {
  "lineno": 556,
  "symbols_in_volume": [
   "inspect.signature",
   "multiprocessing.Manager",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.LRUCachedCallable._get_from_cache": {
  "lineno": 569,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.LRUCachedCallable._insert_into_cache": {
  "lineno": 585,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.LRUCachedCallable.cache_dict": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils._RequireAttrsABCMeta": {
  "lineno": 32,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "adaptive_scheduler.utils._RequireAttrsABCMeta.__call__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils._deserialize": {
  "lineno": 542,
  "symbols_in_volume": [
   "cloudpickle.loads"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils._get_default_args": {
  "lineno": 515,
  "symbols_in_volume": [
   "inspect.Parameter.empty",
   "inspect.signature",
   "inspect.signature.parameters.items",
   "typing.Callable",
   "typing.Dict"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils._get_npoints": {
  "lineno": 256,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "contextlib.suppress",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils._print_same_line": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils._progress": {
  "lineno": 264,
  "symbols_in_volume": [
   "adaptive.notebook_integration.in_ipynb",
   "tqdm.tqdm",
   "tqdm.tqdm_notebook"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils._remove_or_move_files": {
  "lineno": 352,
  "symbols_in_volume": [
   "os.makedirs",
   "os.remove",
   "pathlib.Path",
   "shutil.move",
   "typing.List",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils._serialize": {
  "lineno": 538,
  "symbols_in_volume": [
   "cloudpickle.dumps"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils._split": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils._wait_for_successful_ipyparallel_client_start": {
  "lineno": 459,
  "symbols_in_volume": [
   "contextlib.suppress",
   "ipyparallel.error.NoEnginesRegistered",
   "time.sleep"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.add_constant_to_fname": {
  "lineno": 302,
  "symbols_in_volume": [
   "pathlib.Path",
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.combine_sequence_learners": {
  "lineno": 195,
  "symbols_in_volume": [
   "adaptive.SequenceLearner",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.combo2fname": {
  "lineno": 286,
  "symbols_in_volume": [
   "pathlib.Path",
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.combo_to_fname": {
  "lineno": 276,
  "symbols_in_volume": [
   "os.path.join",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.connect_to_ipyparallel": {
  "lineno": 478,
  "symbols_in_volume": [
   "ipyparallel.Client",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.copy_from_sequence_learner": {
  "lineno": 233,
  "symbols_in_volume": [
   "adaptive.SequenceLearner"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.hash_anything": {
  "lineno": 50,
  "symbols_in_volume": [
   "hashlib.md5",
   "pickle.dumps"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.load_parallel": {
  "lineno": 389,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "concurrent.futures.ThreadPoolExecutor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.load_parallel.load": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils.log_exception": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils.maybe_lst": {
  "lineno": 531,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.maybe_round": {
  "lineno": 320,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.complex",
   "numpy.float",
   "typing.Any"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.maybe_round.try_is_nan_inf": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.isinf",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.round_sigfigs": {
  "lineno": 339,
  "symbols_in_volume": [
   "math.floor",
   "math.log10"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.save_parallel": {
  "lineno": 422,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "concurrent.futures.ThreadPoolExecutor",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.save_parallel.save": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils.shared_memory_cache": {
  "lineno": 618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils.shared_memory_cache.cache_decorator": {
  "lineno": 626,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.shuffle_list": {
  "lineno": 43,
  "symbols_in_volume": [
   "random.Random"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.split": {
  "lineno": 63,
  "symbols_in_volume": [
   "math.ceil",
   "toolz.partition_all"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.split_in_balancing_learners": {
  "lineno": 81,
  "symbols_in_volume": [
   "adaptive.BalancingLearner",
   "adaptive.BaseLearner",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.split_sequence_in_sequence_learners": {
  "lineno": 157,
  "symbols_in_volume": [
   "adaptive.SequenceLearner",
   "pathlib.Path",
   "typing.Any",
   "typing.Callable",
   "typing.List",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.split_sequence_learner": {
  "lineno": 114,
  "symbols_in_volume": [
   "adaptive.SequenceLearner",
   "pathlib.Path",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "adaptive_scheduler.widgets._failed_job_logs": {
  "lineno": 40,
  "symbols_in_volume": [
   "glob.glob",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets._files_that_contain": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets._files_that_contain.contains": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets._get_fnames": {
  "lineno": 24,
  "symbols_in_volume": [
   "pathlib.Path",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets._info_html": {
  "lineno": 312,
  "symbols_in_volume": [
   "contextlib.suppress",
   "datetime.timedelta",
   "pandas.Timestamp.now"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets._info_html._table_row": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets._read_file": {
  "lineno": 140,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets._sort_fnames": {
  "lineno": 75,
  "symbols_in_volume": [
   "collections.defaultdict",
   "datetime.datetime.now",
   "numpy.datetime64",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets._sort_fnames._sort_key": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets._sort_fnames._try_transform": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets._sort_fnames._try_transform._f": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets._sort_fnames.extract": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.info": {
  "lineno": 386,
  "symbols_in_volume": [
   "IPython.display.display",
   "ipywidgets.Button",
   "ipywidgets.Checkbox",
   "ipywidgets.HBox",
   "ipywidgets.HTML",
   "ipywidgets.Layout",
   "ipywidgets.VBox"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets.info.cancel": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.info.cleanup": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.info.cleanup._callable": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.info.load_learners": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.info.switch_to": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.info.switch_to.on_click": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.info.toggle_logs": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.info.update": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer": {
  "lineno": 150,
  "symbols_in_volume": [
   "asyncio.CancelledError",
   "asyncio.sleep",
   "ipywidgets.Button",
   "ipywidgets.Checkbox",
   "ipywidgets.Dropdown",
   "ipywidgets.HTML",
   "ipywidgets.Layout",
   "ipywidgets.Text",
   "ipywidgets.Textarea",
   "ipywidgets.VBox",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._click_button_on_change": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._click_button_on_change.on_change": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._last_editted": {
  "lineno": 176,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._on_dropdown_change": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._on_dropdown_change.on_change": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._tail": {
  "lineno": 196,
  "symbols_in_volume": [
   "asyncio.get_running_loop"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._tail.on_click": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._update_fname_dropdown": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._update_fname_dropdown.on_click": {
  "lineno": 159,
  "symbols_in_volume": [
   "contextlib.suppress"
  ],
  "type": "function"
 }
}