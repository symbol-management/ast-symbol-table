{
 "adaptive_scheduler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "adaptive_scheduler._mock_scheduler": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "logging.INFO",
   "logging.getLogger",
   "structlog.wrap_logger",
   "zmq.asyncio.Context"
  ],
  "type": "module"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler": {
  "lineno": 22,
  "symbols_in_volume": [
   "asyncio.sleep",
   "typing.Coroutine",
   "zmq.REP"
  ],
  "type": "class"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "asyncio.get_event_loop"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._dispatch": {
  "lineno": 142,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._get_new_job_id": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._queue_is_full": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._refresh": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._submit": {
  "lineno": 89,
  "symbols_in_volume": [
   "os.environ",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.cancel": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.queue": {
  "lineno": 65,
  "symbols_in_volume": [
   "toolz.dicttoolz.dissoc"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.submit": {
  "lineno": 100,
  "symbols_in_volume": [
   "datetime.datetime.now"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler._external_command": {
  "lineno": 165,
  "symbols_in_volume": [
   "asyncio.get_event_loop",
   "typing.Tuple",
   "zmq.RCVTIMEO",
   "zmq.REQ"
  ],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.cancel": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.queue": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.submit": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._static_version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "adaptive_scheduler._version": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "os.path.basename",
   "os.path.dirname",
   "os.path.realpath",
   "typing.List"
  ],
  "type": "module"
 },
 "adaptive_scheduler._version._build_py": {
  "lineno": 184,
  "symbols_in_volume": [
   "distutils.command.build_py.build_py"
  ],
  "type": "class"
 },
 "adaptive_scheduler._version._build_py.run": {
  "lineno": 185,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "adaptive_scheduler._version._sdist": {
  "lineno": 190,
  "symbols_in_volume": [
   "setuptools.command.sdist.sdist"
  ],
  "type": "class"
 },
 "adaptive_scheduler._version._sdist.make_release_tree": {
  "lineno": 191,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "adaptive_scheduler._version._write_version": {
  "lineno": 170,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "adaptive_scheduler._version.get_static_version_info": {
  "lineno": 37,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "adaptive_scheduler._version.get_version": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._version.get_version_from_git": {
  "lineno": 65,
  "symbols_in_volume": [
   "os.path.samefile",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "adaptive_scheduler._version.get_version_from_git_archive": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._version.pep440_format": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler._version.version_is_from_git": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.client_support": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger",
   "structlog.processors.JSONRenderer",
   "structlog.processors.StackInfoRenderer",
   "structlog.processors.TimeStamper",
   "structlog.processors.format_exc_info",
   "structlog.wrap_logger",
   "zmq.Context"
  ],
  "type": "module"
 },
 "adaptive_scheduler.client_support._add_log_file_handler": {
  "lineno": 29,
  "symbols_in_volume": [
   "logging.FileHandler"
  ],
  "type": "function"
 },
 "adaptive_scheduler.client_support._get_log_entry": {
  "lineno": 127,
  "symbols_in_volume": [
   "adaptive.AsyncRunner",
   "adaptive_scheduler.utils._get_npoints",
   "contextlib.suppress",
   "datetime.timedelta",
   "psutil.cpu_percent",
   "psutil.virtual_memory",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.client_support.get_learner": {
  "lineno": 34,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "adaptive_scheduler.utils.log_exception",
   "socket",
   "socket.connect",
   "socket.recv_pyobj",
   "socket.send_pyobj",
   "socket.setsockopt",
   "typing.List",
   "typing.Tuple",
   "zmq.RCVTIMEO",
   "zmq.REQ"
  ],
  "type": "function"
 },
 "adaptive_scheduler.client_support.get_learner.maybe_lst": {
  "lineno": 89,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.client_support.log_info": {
  "lineno": 151,
  "symbols_in_volume": [
   "adaptive.AsyncRunner",
   "adaptive_scheduler.utils._get_npoints",
   "asyncio.Task",
   "asyncio.sleep",
   "socket.gethostname"
  ],
  "type": "function"
 },
 "adaptive_scheduler.client_support.tell_done": {
  "lineno": 107,
  "symbols_in_volume": [
   "socket",
   "socket.connect",
   "socket.recv_pyobj",
   "socket.send_pyobj",
   "socket.setsockopt",
   "zmq.RCVTIMEO",
   "zmq.REQ"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "adaptive_scheduler.scheduler.BaseScheduler": {
  "lineno": 18,
  "symbols_in_volume": [
   "adaptive_scheduler.utils._RequireAttrsABCMeta"
  ],
  "type": "class"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.__getstate__": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.__init__": {
  "lineno": 56,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.__setstate__": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._dask_mpi": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._executor_specific": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._ipyparallel": {
  "lineno": 176,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._mpi4py": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._process_pool": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.batch_fname": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.cancel": {
  "lineno": 130,
  "symbols_in_volume": [
   "time.sleep",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.cancel.cancel_jobs": {
  "lineno": 152,
  "symbols_in_volume": [
   "adaptive_scheduler.utils._progress",
   "subprocess.PIPE",
   "subprocess.run",
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.cancel.to_cancel": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.ext": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.extra_env_vars": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.extra_scheduler": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.job_script": {
  "lineno": 111,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.log_fname": {
  "lineno": 222,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.join"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.output_fnames": {
  "lineno": 228,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.queue": {
  "lineno": 79,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.Dict"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.sanatize_job_id": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.start_job": {
  "lineno": 249,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.run",
   "time.sleep"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.submit_cmd": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.write_job_script": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "class"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.__getstate__": {
  "lineno": 674,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.__init__": {
  "lineno": 634,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.extra_scheduler": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.job_script": {
  "lineno": 680,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.queue": {
  "lineno": 716,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.start_job": {
  "lineno": 719,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.run",
   "time.sleep"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "class"
 },
 "adaptive_scheduler.scheduler.PBS.__getstate__": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.__init__": {
  "lineno": 278,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._calculate_nnodes": {
  "lineno": 328,
  "symbols_in_volume": [
   "math.ceil",
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._fix_line_cuts": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._guess_cores_per_node": {
  "lineno": 484,
  "symbols_in_volume": [
   "collections.Counter"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._qnodes": {
  "lineno": 469,
  "symbols_in_volume": [
   "subprocess.run"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._split_by_job": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.job_script": {
  "lineno": 370,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.output_fnames": {
  "lineno": 360,
  "symbols_in_volume": [
   "os.path.expanduser",
   "os.path.join",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.queue": {
  "lineno": 430,
  "symbols_in_volume": [
   "getpass.getuser",
   "os.environ",
   "subprocess.run",
   "typing.Dict"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.sanatize_job_id": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "class"
 },
 "adaptive_scheduler.scheduler.SLURM.__init__": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM._ipyparallel": {
  "lineno": 525,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM.job_script": {
  "lineno": 548,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM.queue": {
  "lineno": 582,
  "symbols_in_volume": [
   "getpass.getuser",
   "subprocess.run",
   "typing.Dict"
  ],
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM.queue.line_to_dict": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.scheduler._get_default_scheduler": {
  "lineno": 734,
  "symbols_in_volume": [
   "distutils.spawn.find_executable",
   "os.environ.get",
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.float_info.max"
  ],
  "type": "module"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner": {
  "lineno": 27,
  "symbols_in_volume": [
   "adaptive.learner.base_learner.BaseLearner"
  ],
  "type": "class"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "adaptive_scheduler.utils._print_same_line",
   "copy.copy",
   "time.sleep",
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner._get_data": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner._set_data": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.ask": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.done": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.loss": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.npoints": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.remove_unfinished": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.result": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.tell": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.tell_pending": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.ensure_hashable": {
  "lineno": 13,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger",
   "structlog.wrap_logger",
   "zmq.asyncio.Context"
  ],
  "type": "module"
 },
 "adaptive_scheduler.server_support.DatabaseManager": {
  "lineno": 74,
  "symbols_in_volume": [
   "socket",
   "socket.bind",
   "socket.close",
   "socket.recv_pyobj",
   "socket.send_pyobj",
   "zmq.REP"
  ],
  "type": "class"
 },
 "adaptive_scheduler.server_support.DatabaseManager.__init__": {
  "lineno": 98,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._dispatch": {
  "lineno": 204,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._output_logs": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._setup": {
  "lineno": 121,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._start_request": {
  "lineno": 167,
  "symbols_in_volume": [
   "tinydb.Query",
   "tinydb.TinyDB",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._stop_request": {
  "lineno": 198,
  "symbols_in_volume": [
   "tinydb.Query",
   "tinydb.TinyDB"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.as_dicts": {
  "lineno": 156,
  "symbols_in_volume": [
   "tinydb.TinyDB",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.create_empty_db": {
  "lineno": 146,
  "symbols_in_volume": [
   "os.path.exists",
   "os.remove",
   "tinydb.TinyDB"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.n_done": {
  "lineno": 141,
  "symbols_in_volume": [
   "tinydb.Query",
   "tinydb.TinyDB"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.update": {
  "lineno": 126,
  "symbols_in_volume": [
   "tinydb.TinyDB",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.JobManager": {
  "lineno": 243,
  "symbols_in_volume": [
   "asyncio.sleep"
  ],
  "type": "class"
 },
 "adaptive_scheduler.server_support.JobManager.__init__": {
  "lineno": 275,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.JobManager._queued": {
  "lineno": 300,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.JobManager.max_job_starts": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support.KillManager": {
  "lineno": 404,
  "symbols_in_volume": [
   "adaptive_scheduler.utils._remove_or_move_files",
   "asyncio.sleep",
   "typing.List"
  ],
  "type": "class"
 },
 "adaptive_scheduler.server_support.KillManager.__init__": {
  "lineno": 431,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "typing.Callable",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.MaxRestartsReached": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "adaptive_scheduler.server_support.RunManager": {
  "lineno": 747,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "class"
 },
 "adaptive_scheduler.server_support.RunManager.__init__": {
  "lineno": 840,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "adaptive_scheduler.scheduler.BaseScheduler",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._get_learners_file": {
  "lineno": 935,
  "symbols_in_volume": [
   "importlib.util.module_from_spec",
   "importlib.util.spec_from_file_location"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._info_html": {
  "lineno": 1088,
  "symbols_in_volume": [
   "contextlib.suppress",
   "datetime.timedelta",
   "pandas.Timestamp.now"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._info_html._table_row": {
  "lineno": 1105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._repr_html_": {
  "lineno": 1158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._setup": {
  "lineno": 914,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.cancel": {
  "lineno": 943,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.cleanup": {
  "lineno": 952,
  "symbols_in_volume": [
   "contextlib.suppress",
   "os.remove"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.elapsed_time": {
  "lineno": 1002,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.get_database": {
  "lineno": 994,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "typing.Any",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info": {
  "lineno": 1037,
  "symbols_in_volume": [
   "IPython.display.display",
   "ipywidgets.Button",
   "ipywidgets.HTML",
   "ipywidgets.Layout",
   "ipywidgets.VBox"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.cancel": {
  "lineno": 1066,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.cleanup": {
  "lineno": 1070,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.show_logs": {
  "lineno": 1074,
  "symbols_in_volume": [
   "adaptive_scheduler.widgets.log_explorer"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.update": {
  "lineno": 1063,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.load_learners": {
  "lineno": 998,
  "symbols_in_volume": [
   "adaptive_scheduler.utils.load_parallel"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.parse_log_files": {
  "lineno": 966,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.status": {
  "lineno": 1017,
  "symbols_in_volume": [
   "asyncio.CancelledError",
   "asyncio.InvalidStateError",
   "time.time"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.task_status": {
  "lineno": 983,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager": {
  "lineno": 42,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "abc.abstractmethod"
  ],
  "type": "class"
 },
 "adaptive_scheduler.server_support._BaseManager.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "asyncio.Task",
   "asyncio.events.AbstractEventLoop",
   "typing.Coroutine",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager._setup": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager.cancel": {
  "lineno": 61,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager.is_started": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager.start": {
  "lineno": 48,
  "symbols_in_volume": [
   "asyncio.get_event_loop"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._delete_old_ipython_profiles": {
  "lineno": 719,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "adaptive_scheduler.utils._progress",
   "concurrent.futures.ThreadPoolExecutor",
   "glob.glob",
   "os.path.expanduser",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._get_all_files": {
  "lineno": 679,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "glob.glob",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support._make_default_run_script": {
  "lineno": 496,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "dill.dumps",
   "os.path.abspath",
   "os.path.basename",
   "os.path.dirname",
   "os.path.splitext",
   "textwrap.dedent",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.cleanup": {
  "lineno": 689,
  "symbols_in_volume": [
   "adaptive_scheduler.scheduler.BaseScheduler",
   "adaptive_scheduler.utils._remove_or_move_files",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.get_allowed_url": {
  "lineno": 482,
  "symbols_in_volume": [
   "socket.gethostbyname",
   "socket.gethostname",
   "zmq.ssh.tunnel.select_random_ports"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.logs_with_string_or_condition": {
  "lineno": 358,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.logs_with_string_or_condition.file_has_error": {
  "lineno": 388,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.parse_log_files": {
  "lineno": 612,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "pandas.DataFrame",
   "pandas.to_timedelta",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.parse_log_files._get_infos": {
  "lineno": 642,
  "symbols_in_volume": [
   "contextlib.suppress",
   "json.loads",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.server_support.periodically_clean_ipython_profiles": {
  "lineno": 1162,
  "symbols_in_volume": [
   "asyncio.get_event_loop",
   "asyncio.sleep",
   "contextlib.suppress"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "adaptive_scheduler.utils._RequireAttrsABCMeta": {
  "lineno": 23,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "adaptive_scheduler.utils._RequireAttrsABCMeta.__call__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils._get_default_args": {
  "lineno": 287,
  "symbols_in_volume": [
   "inspect.Parameter.empty",
   "inspect.signature",
   "typing.Callable",
   "typing.Dict"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils._get_npoints": {
  "lineno": 98,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "contextlib.suppress",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils._print_same_line": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils._progress": {
  "lineno": 106,
  "symbols_in_volume": [
   "adaptive.notebook_integration.in_ipynb",
   "tqdm.tqdm",
   "tqdm.tqdm_notebook"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils._remove_or_move_files": {
  "lineno": 126,
  "symbols_in_volume": [
   "os.makedirs",
   "os.remove",
   "shutil.move",
   "typing.List",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils._split": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils._wait_for_successful_ipyparallel_client_start": {
  "lineno": 231,
  "symbols_in_volume": [
   "contextlib.suppress",
   "ipyparallel.error.NoEnginesRegistered",
   "time.sleep"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.combo_to_fname": {
  "lineno": 118,
  "symbols_in_volume": [
   "os.path.join",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.connect_to_ipyparallel": {
  "lineno": 250,
  "symbols_in_volume": [
   "ipyparallel.Client",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.load_parallel": {
  "lineno": 161,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "concurrent.futures.ThreadPoolExecutor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.load_parallel.load": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils.log_exception": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils.save_parallel": {
  "lineno": 194,
  "symbols_in_volume": [
   "adaptive.BaseLearner",
   "concurrent.futures.ThreadPoolExecutor",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.save_parallel.save": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.utils.shuffle_list": {
  "lineno": 34,
  "symbols_in_volume": [
   "random.Random"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.split": {
  "lineno": 47,
  "symbols_in_volume": [
   "math.ceil",
   "toolz.partition_all"
  ],
  "type": "function"
 },
 "adaptive_scheduler.utils.split_in_balancing_learners": {
  "lineno": 65,
  "symbols_in_volume": [
   "adaptive.BalancingLearner",
   "adaptive.BaseLearner",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "adaptive_scheduler.widgets._get_fnames": {
  "lineno": 8,
  "symbols_in_volume": [
   "pathlib.Path",
   "typing.List"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets._read_file": {
  "lineno": 19,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer": {
  "lineno": 24,
  "symbols_in_volume": [
   "asyncio.CancelledError",
   "asyncio.sleep",
   "ipywidgets.Button",
   "ipywidgets.Checkbox",
   "ipywidgets.Dropdown",
   "ipywidgets.HTML",
   "ipywidgets.Layout",
   "ipywidgets.Textarea",
   "ipywidgets.VBox",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._click_button_on_change": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._click_button_on_change.on_change": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._last_editted": {
  "lineno": 33,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._on_dropdown_change": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._on_dropdown_change.on_change": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._tail": {
  "lineno": 53,
  "symbols_in_volume": [
   "asyncio.get_running_loop"
  ],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._tail.on_click": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._update_dropdown": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._update_dropdown.on_click": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 }
}