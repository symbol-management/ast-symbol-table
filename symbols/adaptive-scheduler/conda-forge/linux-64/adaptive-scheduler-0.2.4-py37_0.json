{
 "adaptive_scheduler": {
  "data": {},
  "type": "module"
 },
 "adaptive_scheduler.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "adaptive_scheduler.__version__": {
  "data": {
   "shadows": "adaptive_scheduler._version.__version__"
  },
  "type": "import"
 },
 "adaptive_scheduler._scheduler": {
  "data": {
   "symbols_in_volume": [
    "NotImplementedError",
    "__import__",
    "adaptive_scheduler._scheduler.DEFAULT",
    "adaptive_scheduler._scheduler.module",
    "adaptive_scheduler._scheduler.names",
    "adaptive_scheduler._scheduler.os",
    "adaptive_scheduler._scheduler.scheduler_system",
    "getattr",
    "globals"
   ]
  },
  "type": "module"
 },
 "adaptive_scheduler._scheduler.DEFAULT": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.module": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.names": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler._scheduler.scheduler_system": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "adaptive_scheduler._static_version": {
  "data": {},
  "type": "module"
 },
 "adaptive_scheduler._static_version.version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "adaptive_scheduler._version": {
  "data": {
   "symbols_in_volume": [
    "adaptive_scheduler._version._build_py",
    "adaptive_scheduler._version._sdist",
    "adaptive_scheduler._version.get_version",
    "adaptive_scheduler._version.os",
    "adaptive_scheduler._version.package_root",
    "collections.namedtuple",
    "dict"
   ]
  },
  "type": "module"
 },
 "adaptive_scheduler._version.STATIC_VERSION_FILE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.Version": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.__version__": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "adaptive_scheduler._version._build_py": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "distutils.command.build_py.build_py"
   ]
  },
  "type": "class"
 },
 "adaptive_scheduler._version._build_py.run": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "adaptive_scheduler._version.STATIC_VERSION_FILE",
    "adaptive_scheduler._version._write_version",
    "adaptive_scheduler._version.os",
    "adaptive_scheduler._version.package_name",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler._version._sdist": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "setuptools.command.sdist.sdist"
   ]
  },
  "type": "class"
 },
 "adaptive_scheduler._version._sdist.make_release_tree": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "adaptive_scheduler._version.STATIC_VERSION_FILE",
    "adaptive_scheduler._version._write_version",
    "adaptive_scheduler._version.os",
    "adaptive_scheduler._version.package_name",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler._version._write_version": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "OSError",
    "adaptive_scheduler._version.__version__",
    "adaptive_scheduler._version.os",
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler._version.build_py_orig": {
  "data": {
   "shadows": "distutils.command.build_py.build_py"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.cmdclass": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.distr_root": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.get_static_version_info": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "adaptive_scheduler._version.STATIC_VERSION_FILE",
    "adaptive_scheduler._version.os",
    "adaptive_scheduler._version.package_root",
    "exec",
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler._version.get_version": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "adaptive_scheduler._version.STATIC_VERSION_FILE",
    "adaptive_scheduler._version.Version",
    "adaptive_scheduler._version.get_static_version_info",
    "adaptive_scheduler._version.get_version_from_git",
    "adaptive_scheduler._version.get_version_from_git_archive",
    "adaptive_scheduler._version.pep440_format"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler._version.get_version_from_git": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "adaptive_scheduler._version.Version",
    "adaptive_scheduler._version.distr_root",
    "adaptive_scheduler._version.os",
    "adaptive_scheduler._version.subprocess"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler._version.get_version_from_git_archive": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "KeyError",
    "adaptive_scheduler._version.Version",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler._version.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.package_name": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.package_root": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.pep440_format": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "adaptive_scheduler._version.sdist_orig": {
  "data": {
   "shadows": "setuptools.command.sdist.sdist"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.version_is_from_git": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "adaptive_scheduler._version.STATIC_VERSION_FILE",
    "adaptive_scheduler._version.get_static_version_info"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.cancel_jobs": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.cancel"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support": {
  "data": {
   "shadows": "adaptive_scheduler.client_support"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.ctx": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "adaptive_scheduler.client_support.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.get_job_id": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.get_job_id"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.get_learner": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "StopIteration",
    "UserWarning",
    "adaptive_scheduler._scheduler.get_job_id",
    "adaptive_scheduler.client_support.ctx",
    "adaptive_scheduler.client_support.log",
    "adaptive_scheduler.client_support.socket",
    "adaptive_scheduler.client_support.zmq",
    "isinstance",
    "maybe_lst",
    "next",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.get_learner.maybe_lst": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.log": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "adaptive_scheduler.client_support.log_info": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "adaptive_scheduler.client_support.asyncio",
    "adaptive_scheduler.client_support.datetime",
    "adaptive_scheduler.client_support.log",
    "adaptive_scheduler.client_support.psutil",
    "adaptive_scheduler.client_support.socket",
    "contextlib.suppress",
    "coro",
    "get_npoints",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.log_info.get_npoints": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "AttributeError",
    "contextlib.suppress",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.structlog": {
  "data": {
   "shadows": "structlog"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.tell_done": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "adaptive_scheduler.client_support.ctx",
    "adaptive_scheduler.client_support.log",
    "adaptive_scheduler.client_support.socket",
    "adaptive_scheduler.client_support.zmq"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs": {
  "data": {
   "shadows": "adaptive_scheduler.pbs"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs._cancel_function": {
  "data": {
   "shadows": "adaptive_scheduler.utils._cancel_function"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs._fix_line_cuts": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs._split_by_job": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs.cancel": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "adaptive_scheduler.pbs.ext": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "adaptive_scheduler.pbs.get_job_id": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "adaptive_scheduler.pbs.os"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.make_job_script": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "adaptive_scheduler.pbs.sys",
    "adaptive_scheduler.pbs.textwrap"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.queue": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "RuntimeError",
    "adaptive_scheduler.pbs._fix_line_cuts",
    "adaptive_scheduler.pbs._split_by_job",
    "adaptive_scheduler.pbs.getpass",
    "adaptive_scheduler.pbs.os",
    "adaptive_scheduler.pbs.subprocess",
    "dict"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs.submit_cmd": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "adaptive_scheduler.pbs.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner": {
  "data": {
   "symbols_in_volume": [
    "adaptive_scheduler.sequence_learner.sys"
   ]
  },
  "type": "module"
 },
 "adaptive_scheduler.sequence_learner.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner"
   ]
  },
  "type": "class"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "adaptive_scheduler.sequence_learner.ensure_hashable",
    "copy.copy",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner._get_data": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner._set_data": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.ask": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "adaptive_scheduler.sequence_learner.inf"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.done": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.loss": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "adaptive_scheduler.sequence_learner.inf",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.npoints": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.remove_unfinished": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.result": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Exception",
    "adaptive_scheduler.sequence_learner.ensure_hashable"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.tell": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.tell_pending": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner.ensure_hashable": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "hash",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.inf": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "adaptive_scheduler.sequence_learner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support": {
  "data": {
   "shadows": "adaptive_scheduler.server_support"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Button": {
  "data": {
   "shadows": "ipywidgets.Button"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Coroutine": {
  "data": {
   "shadows": "typing.Coroutine"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.HBox": {
  "data": {
   "shadows": "ipywidgets.HBox"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.HTML": {
  "data": {
   "shadows": "ipywidgets.HTML"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Layout": {
  "data": {
   "shadows": "ipywidgets.Layout"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.MaxRestartsReached": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "adaptive_scheduler.server_support.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Query": {
  "data": {
   "shadows": "tinydb.Query"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.RunManager": {
  "data": {
   "lineno": 450
  },
  "type": "class"
 },
 "adaptive_scheduler.server_support.RunManager.__init__": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "ValueError",
    "adaptive_scheduler._scheduler.make_job_script",
    "adaptive_scheduler.server_support.asyncio",
    "adaptive_scheduler.server_support.get_allowed_url",
    "adaptive_scheduler.server_support.job_name",
    "bool",
    "callable",
    "dict",
    "int",
    "job_script_function",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._get_learners_file": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "importlib.util.module_from_spec",
    "importlib.util.spec_from_file_location"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._info_html": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "Exception",
    "adaptive_scheduler._scheduler.queue",
    "adaptive_scheduler.server_support.datetime",
    "contextlib.suppress",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._repr_html_": {
  "data": {
   "lineno": 794
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._set_job_names": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._start_database_manager": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.start_database_manager"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._start_job_manager": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support._make_default_run_script",
    "adaptive_scheduler.server_support.start_job_manager"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._start_kill_manager": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.start_kill_manager"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.cancel": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "adaptive_scheduler._scheduler.cancel"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.cleanup": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "adaptive_scheduler.utils.cleanup_files"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.elapsed_time": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.time"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.get_database": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.get_database",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "IPython.display.display",
    "adaptive_scheduler._scheduler.cancel",
    "ipywidgets.Button",
    "ipywidgets.HBox",
    "ipywidgets.HTML",
    "ipywidgets.Layout",
    "ipywidgets.VBox",
    "list",
    "update"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.cancel": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "update"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.cleanup": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "update"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.update": {
  "data": {
   "lineno": 728
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.parse_log_files": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "adaptive_scheduler.utils.parse_log_files"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.start": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "_start",
    "adaptive_scheduler.server_support.time"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.status": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "Exception",
    "adaptive_scheduler.server_support.asyncio",
    "adaptive_scheduler.server_support.time"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.task_status": {
  "data": {
   "lineno": 669
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.write_db": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.create_empty_db",
    "adaptive_scheduler.server_support.os"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.TinyDB": {
  "data": {
   "shadows": "tinydb.TinyDB"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.VBox": {
  "data": {
   "shadows": "ipywidgets.VBox"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support._DATABASE_MANAGER_DOC": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support._JOB_MANAGER_DOC": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support._choose_fname": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "Exception",
    "adaptive_scheduler.server_support.log",
    "str",
    "tinydb.Query",
    "tinydb.TinyDB"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._dispatch": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception",
    "adaptive_scheduler.server_support._choose_fname",
    "adaptive_scheduler.server_support._done_with_learner",
    "adaptive_scheduler.server_support.log"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._done_with_learner": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "str",
    "tinydb.Query",
    "tinydb.TinyDB"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._get_n_jobs_done": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "str",
    "tinydb.Query",
    "tinydb.TinyDB"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._make_default_run_script": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.dill",
    "adaptive_scheduler.server_support.textwrap",
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._remove_or_move_files": {
  "data": {
   "shadows": "adaptive_scheduler.utils._remove_or_move_files"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support._start_job": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "adaptive_scheduler._scheduler.ext",
    "adaptive_scheduler._scheduler.ext.split",
    "adaptive_scheduler._scheduler.submit_cmd.split",
    "adaptive_scheduler.server_support.subprocess",
    "adaptive_scheduler.server_support.time",
    "job_script_function",
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._update_db": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.running",
    "dict",
    "str",
    "tinydb.TinyDB",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.cancel": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.cancel"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.cleanup_files": {
  "data": {
   "shadows": "adaptive_scheduler.utils.cleanup_files"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.create_empty_db": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.os",
    "dict",
    "str",
    "tinydb.TinyDB",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.ctx": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.dill": {
  "data": {
   "shadows": "dill"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.ext": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.ext"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.failed_jobs": {
  "data": {
   "lineno": 353
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.get_allowed_url": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.socket",
    "adaptive_scheduler.server_support.zmq"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.get_database": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "str",
    "tinydb.TinyDB",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.job_name": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.log": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.logs_with_string": {
  "data": {
   "shadows": "adaptive_scheduler.utils.logs_with_string"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.make_job_script": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.make_job_script"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.max_job_starts": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.module_from_spec": {
  "data": {
   "shadows": "importlib.util.module_from_spec"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.n_jobs_done": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.n_started": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.parse_log_files": {
  "data": {
   "shadows": "adaptive_scheduler.utils.parse_log_files"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.queue": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.queue"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.reply": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.request": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.running": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.running_job_names": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.socket": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.spec_from_file_location": {
  "data": {
   "shadows": "importlib.util.spec_from_file_location"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.start_database_manager": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.asyncio",
    "manage_database",
    "str"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.start_job_manager": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "adaptive_scheduler._scheduler.make_job_script",
    "adaptive_scheduler.server_support.asyncio",
    "manage_jobs"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.start_kill_manager": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "adaptive_scheduler.server_support.asyncio",
    "int",
    "kill_failed",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.structlog": {
  "data": {
   "shadows": "structlog"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.submit_cmd": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.submit_cmd"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.to_cancel": {
  "data": {
   "lineno": 354
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.to_delete": {
  "data": {
   "lineno": 355
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.to_start": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.zmq.asyncio": {
  "data": {
   "shadows": "zmq.asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.zmq.ssh": {
  "data": {
   "shadows": "zmq.ssh"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm": {
  "data": {
   "shadows": "adaptive_scheduler.slurm"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm._cancel_function": {
  "data": {
   "shadows": "adaptive_scheduler.utils._cancel_function"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm.cancel": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "adaptive_scheduler.slurm.ext": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "adaptive_scheduler.slurm.get_job_id": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "adaptive_scheduler.slurm.os"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.slurm.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm.make_job_script": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "adaptive_scheduler.slurm.sys",
    "adaptive_scheduler.slurm.textwrap"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.slurm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm.queue": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "RuntimeError",
    "adaptive_scheduler.slurm.getpass",
    "adaptive_scheduler.slurm.subprocess",
    "line_to_dict"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.slurm.queue.line_to_dict": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.slurm.submit_cmd": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "adaptive_scheduler.slurm.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils": {
  "data": {
   "shadows": "adaptive_scheduler.utils"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.ThreadPoolExecutor": {
  "data": {
   "shadows": "concurrent.futures.ThreadPoolExecutor"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils._cancel_function": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._cancel_function.cancel": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bool",
    "cancel_jobs",
    "int",
    "range",
    "set",
    "str",
    "to_cancel",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._cancel_function.cancel.cancel_jobs": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "UserWarning",
    "adaptive_scheduler.utils._progress",
    "adaptive_scheduler.utils.subprocess",
    "adaptive_scheduler.utils.warnings"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._cancel_function.cancel.to_cancel": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "queue_function"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._get_status_prints": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "bool",
    "open",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._is_string_inside_file": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._progress": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "adaptive.notebook_integration.in_ipynb",
    "bool",
    "list",
    "str",
    "tqdm.tqdm",
    "tqdm.tqdm_notebook",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._remove_or_move_files": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Exception",
    "adaptive_scheduler.utils._progress",
    "adaptive_scheduler.utils.os",
    "adaptive_scheduler.utils.shutil",
    "adaptive_scheduler.utils.warnings",
    "bool",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._split": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "adaptive_scheduler.utils.math",
    "adaptive_scheduler.utils.toolz",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.adaptive": {
  "data": {
   "shadows": "adaptive"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.cleanup_files": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "adaptive_scheduler.utils._remove_or_move_files",
    "adaptive_scheduler.utils.glob",
    "bool",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.combo_to_fname": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "adaptive_scheduler.utils.os",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.get_database": {
  "data": {
   "shadows": "adaptive_scheduler.server_support.get_database"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.in_ipynb": {
  "data": {
   "shadows": "adaptive.notebook_integration.in_ipynb"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.load_parallel": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "adaptive_scheduler.utils._progress",
    "adaptive_scheduler.utils.adaptive",
    "bool",
    "concurrent.futures.ThreadPoolExecutor",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.load_parallel.load": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.logs_with_string": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "adaptive_scheduler.utils._is_string_inside_file",
    "adaptive_scheduler.utils.collections",
    "adaptive_scheduler.utils.glob",
    "dict",
    "list",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.parse_log_files": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ImportError",
    "adaptive_scheduler.server_support.get_database",
    "adaptive_scheduler.server_support.queue",
    "adaptive_scheduler.utils._get_status_prints",
    "adaptive_scheduler.utils.glob",
    "adaptive_scheduler.utils.warnings",
    "bool",
    "convert_type",
    "datetime.datetime.strptime",
    "dict",
    "join_str",
    "pandas.DataFrame",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.parse_log_files.convert_type": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "adaptive_scheduler.utils.ast",
    "float",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.parse_log_files.join_str": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.queue": {
  "data": {
   "shadows": "adaptive_scheduler.server_support.queue"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.shuffle_list": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "adaptive_scheduler.utils.random",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.split_in_balancing_learners": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "adaptive_scheduler.utils._split",
    "adaptive_scheduler.utils.adaptive",
    "int",
    "str",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.toolz": {
  "data": {
   "shadows": "toolz"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.tqdm_notebook": {
  "data": {
   "shadows": "tqdm.tqdm_notebook"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}