{
 "adaptive_scheduler": {
  "data": {},
  "type": "module"
 },
 "adaptive_scheduler.PBS": {
  "data": {
   "shadows": "adaptive_scheduler.scheduler.PBS"
  },
  "type": "import"
 },
 "adaptive_scheduler.RunManager": {
  "data": {
   "shadows": "adaptive_scheduler.server_support.RunManager"
  },
  "type": "import"
 },
 "adaptive_scheduler.SLURM": {
  "data": {
   "shadows": "adaptive_scheduler.scheduler.SLURM"
  },
  "type": "import"
 },
 "adaptive_scheduler.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "adaptive_scheduler.__version__": {
  "data": {
   "shadows": "adaptive_scheduler._version.__version__"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      192
     ]
    },
    "adaptive_scheduler._mock_scheduler.DEFAULT_URL": {
     "line number": [
      199
     ]
    },
    "adaptive_scheduler._mock_scheduler.argparse": {
     "line number": [
      195
     ]
    },
    "adaptive_scheduler._mock_scheduler.args": {
     "line number": [
      202,
      203,
      204,
      205,
      206,
      207,
      208,
      209
     ]
    },
    "adaptive_scheduler._mock_scheduler.cancel": {
     "line number": [
      209
     ]
    },
    "adaptive_scheduler._mock_scheduler.job_id": {
     "line number": [
      209
     ]
    },
    "adaptive_scheduler._mock_scheduler.logger": {
     "line number": [
      16,
      17
     ]
    },
    "adaptive_scheduler._mock_scheduler.logging": {
     "line number": [
      15,
      16
     ]
    },
    "adaptive_scheduler._mock_scheduler.parser": {
     "line number": [
      196,
      197,
      198,
      199,
      200
     ]
    },
    "adaptive_scheduler._mock_scheduler.queue": {
     "line number": [
      203
     ]
    },
    "adaptive_scheduler._mock_scheduler.structlog": {
     "line number": [
      17
     ]
    },
    "adaptive_scheduler._mock_scheduler.submit": {
     "line number": [
      206
     ]
    },
    "adaptive_scheduler._mock_scheduler.zmq": {
     "line number": [
      13
     ]
    },
    "print": {
     "line number": [
      203,
      206,
      210
     ]
    },
    "str": {
     "line number": [
      197,
      198,
      199
     ]
    }
   }
  },
  "type": "module"
 },
 "adaptive_scheduler._mock_scheduler.Coroutine": {
  "data": {
   "shadows": "typing.Coroutine"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler.DEFAULT_URL": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      122
     ]
    },
    "adaptive_scheduler._mock_scheduler.DEFAULT_URL": {
     "line number": [
      43
     ]
    },
    "adaptive_scheduler._mock_scheduler.asyncio": {
     "line number": [
      84,
      86,
      120
     ]
    },
    "adaptive_scheduler._mock_scheduler.ctx": {
     "line number": [
      132
     ]
    },
    "adaptive_scheduler._mock_scheduler.log": {
     "line number": [
      131
     ]
    },
    "adaptive_scheduler._mock_scheduler.zmq": {
     "line number": [
      132
     ]
    },
    "print": {
     "line number": [
      123
     ]
    },
    "str": {
     "line number": [
      83,
      83
     ]
    },
    "typing.Coroutine": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "adaptive_scheduler._mock_scheduler.DEFAULT_URL": {
     "line number": [
      62
     ]
    },
    "adaptive_scheduler._mock_scheduler.asyncio": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._dispatch": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      161
     ]
    },
    "adaptive_scheduler._mock_scheduler.log": {
     "line number": [
      143,
      148,
      153,
      157,
      160
     ]
    },
    "str": {
     "line number": [
      142
     ]
    },
    "typing.Tuple": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._get_new_job_id": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "str": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._queue_is_full": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._refresh": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler._submit": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "adaptive_scheduler._mock_scheduler.os": {
     "line number": [
      94
     ]
    },
    "adaptive_scheduler._mock_scheduler.subprocess": {
     "line number": [
      93,
      94
     ]
    },
    "dict": {
     "line number": [
      94
     ]
    },
    "str": {
     "line number": [
      89,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.cancel": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "str": {
     "line number": [
      111,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.queue": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      65
     ]
    },
    "toolz.dicttoolz.dissoc": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.MockScheduler.submit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "adaptive_scheduler._mock_scheduler.datetime": {
     "line number": [
      106
     ]
    },
    "str": {
     "line number": [
      100,
      100,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler._external_command": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "_coro": {
     "line number": [
      174
     ]
    },
    "adaptive_scheduler._mock_scheduler.asyncio": {
     "line number": [
      175
     ]
    },
    "adaptive_scheduler._mock_scheduler.ctx": {
     "line number": [
      167
     ]
    },
    "adaptive_scheduler._mock_scheduler.zmq": {
     "line number": [
      167,
      168
     ]
    },
    "str": {
     "line number": [
      165,
      165
     ]
    },
    "typing.Tuple": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler.args": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "adaptive_scheduler._mock_scheduler.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler.cancel": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "adaptive_scheduler._mock_scheduler.DEFAULT_URL": {
     "line number": [
      188
     ]
    },
    "adaptive_scheduler._mock_scheduler._external_command": {
     "line number": [
      189
     ]
    },
    "str": {
     "line number": [
      188,
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.ctx": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "adaptive_scheduler._mock_scheduler.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler.dissoc": {
  "data": {
   "shadows": "toolz.dicttoolz.dissoc"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler.job_id": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "adaptive_scheduler._mock_scheduler.log": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "adaptive_scheduler._mock_scheduler.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "adaptive_scheduler._mock_scheduler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler.parser": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "adaptive_scheduler._mock_scheduler.queue": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "adaptive_scheduler._mock_scheduler.DEFAULT_URL": {
     "line number": [
      180
     ]
    },
    "adaptive_scheduler._mock_scheduler._external_command": {
     "line number": [
      181
     ]
    },
    "str": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.structlog": {
  "data": {
   "shadows": "structlog"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler.submit": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "adaptive_scheduler._mock_scheduler.DEFAULT_URL": {
     "line number": [
      184
     ]
    },
    "adaptive_scheduler._mock_scheduler._external_command": {
     "line number": [
      185
     ]
    },
    "str": {
     "line number": [
      184,
      184,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._mock_scheduler.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "adaptive_scheduler._mock_scheduler.zmq.asyncio": {
  "data": {
   "shadows": "zmq.asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler._static_version": {
  "data": {},
  "type": "module"
 },
 "adaptive_scheduler._static_version.version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "adaptive_scheduler._version": {
  "data": {
   "symbols_in_volume": {
    "adaptive_scheduler._version._build_py": {
     "line number": [
      196
     ]
    },
    "adaptive_scheduler._version._sdist": {
     "line number": [
      196
     ]
    },
    "adaptive_scheduler._version.get_version": {
     "line number": [
      162
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      16,
      16,
      17,
      18
     ]
    },
    "adaptive_scheduler._version.package_root": {
     "line number": [
      17,
      18
     ]
    },
    "collections.namedtuple": {
     "line number": [
      11
     ]
    },
    "dict": {
     "line number": [
      196
     ]
    },
    "str": {
     "line number": [
      14
     ]
    },
    "typing.List": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "adaptive_scheduler._version.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.STATIC_VERSION_FILE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.Version": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.__version__": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "adaptive_scheduler._version._build_py": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "distutils.command.build_py.build_py": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler._version._build_py.run": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "adaptive_scheduler._version.STATIC_VERSION_FILE": {
     "line number": [
      187
     ]
    },
    "adaptive_scheduler._version._write_version": {
     "line number": [
      187
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      187
     ]
    },
    "adaptive_scheduler._version.package_name": {
     "line number": [
      187
     ]
    },
    "super": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version._sdist": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "setuptools.command.sdist.sdist": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler._version._sdist.make_release_tree": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "adaptive_scheduler._version.STATIC_VERSION_FILE": {
     "line number": [
      193
     ]
    },
    "adaptive_scheduler._version._write_version": {
     "line number": [
      193
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      193
     ]
    },
    "adaptive_scheduler._version.package_name": {
     "line number": [
      193
     ]
    },
    "super": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version._write_version": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      175
     ]
    },
    "adaptive_scheduler._version.__version__": {
     "line number": [
      180
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      174
     ]
    },
    "open": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version.build_py_orig": {
  "data": {
   "shadows": "distutils.command.build_py.build_py"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.cmdclass": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.distr_root": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.get_static_version_info": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "adaptive_scheduler._version.STATIC_VERSION_FILE": {
     "line number": [
      37
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      39
     ]
    },
    "adaptive_scheduler._version.package_root": {
     "line number": [
      39
     ]
    },
    "exec": {
     "line number": [
      40
     ]
    },
    "open": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version.get_version": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "adaptive_scheduler._version.STATIC_VERSION_FILE": {
     "line number": [
      23
     ]
    },
    "adaptive_scheduler._version.Version": {
     "line number": [
      31
     ]
    },
    "adaptive_scheduler._version.get_static_version_info": {
     "line number": [
      24
     ]
    },
    "adaptive_scheduler._version.get_version_from_git": {
     "line number": [
      27
     ]
    },
    "adaptive_scheduler._version.get_version_from_git_archive": {
     "line number": [
      29
     ]
    },
    "adaptive_scheduler._version.pep440_format": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version.get_version_from_git": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      73,
      94,
      125
     ]
    },
    "ValueError": {
     "line number": [
      111
     ]
    },
    "adaptive_scheduler._version.Version": {
     "line number": [
      131
     ]
    },
    "adaptive_scheduler._version.distr_root": {
     "line number": [
      69,
      77,
      90,
      124
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      77
     ]
    },
    "adaptive_scheduler._version.subprocess": {
     "line number": [
      67,
      70,
      71,
      88,
      91,
      92,
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version.get_version_from_git_archive": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      143
     ]
    },
    "adaptive_scheduler._version.Version": {
     "line number": [
      157,
      159
     ]
    },
    "len": {
     "line number": [
      154
     ]
    },
    "sorted": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.package_name": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.package_root": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.pep440_format": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "adaptive_scheduler._version.sdist_orig": {
  "data": {
   "shadows": "setuptools.command.sdist.sdist"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.version_is_from_git": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "adaptive_scheduler._version.STATIC_VERSION_FILE": {
     "line number": [
      44
     ]
    },
    "adaptive_scheduler._version.get_static_version_info": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support": {
  "data": {
   "shadows": "adaptive_scheduler.client_support"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.AsyncRunner": {
  "data": {
   "shadows": "adaptive.AsyncRunner"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.BaseLearner": {
  "data": {
   "shadows": "adaptive.BaseLearner"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support._add_log_file_handler": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "adaptive_scheduler.client_support.logger": {
     "line number": [
      31
     ]
    },
    "adaptive_scheduler.client_support.logging": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support._get_log_entry": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      142
     ]
    },
    "Exception": {
     "line number": [
      140
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      137
     ]
    },
    "adaptive.AsyncRunner": {
     "line number": [
      127
     ]
    },
    "adaptive_scheduler.client_support.datetime": {
     "line number": [
      130
     ]
    },
    "adaptive_scheduler.client_support.psutil": {
     "line number": [
      146,
      147
     ]
    },
    "adaptive_scheduler.utils._get_npoints": {
     "line number": [
      133,
      135
     ]
    },
    "contextlib.suppress": {
     "line number": [
      137,
      140,
      142
     ]
    },
    "float": {
     "line number": [
      129
     ]
    },
    "int": {
     "line number": [
      127,
      129
     ]
    },
    "len": {
     "line number": [
      143
     ]
    },
    "str": {
     "line number": [
      129,
      129,
      131,
      127
     ]
    },
    "typing.Any": {
     "line number": [
      127
     ]
    },
    "typing.Dict": {
     "line number": [
      129,
      127
     ]
    },
    "typing.Union": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support._get_npoints": {
  "data": {
   "shadows": "adaptive_scheduler.utils._get_npoints"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.ctx": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "adaptive_scheduler.client_support.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.get_learner": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      82
     ]
    },
    "RuntimeError": {
     "line number": [
      79,
      99
     ]
    },
    "StopIteration": {
     "line number": [
      97
     ]
    },
    "adaptive.BaseLearner": {
     "line number": [
      35
     ]
    },
    "adaptive_scheduler.client_support._add_log_file_handler": {
     "line number": [
      66
     ]
    },
    "adaptive_scheduler.client_support.ctx": {
     "line number": [
      70
     ]
    },
    "adaptive_scheduler.client_support.log": {
     "line number": [
      67,
      73,
      76,
      80,
      83,
      87,
      100,
      103
     ]
    },
    "adaptive_scheduler.client_support.socket": {
     "line number": [
      70,
      71,
      72,
      74,
      75
     ]
    },
    "adaptive_scheduler.client_support.zmq": {
     "line number": [
      70,
      74
     ]
    },
    "adaptive_scheduler.utils.log_exception": {
     "line number": [
      80,
      83,
      100
     ]
    },
    "isinstance": {
     "line number": [
      82
     ]
    },
    "maybe_lst": {
     "line number": [
      96
     ]
    },
    "next": {
     "line number": [
      96
     ]
    },
    "str": {
     "line number": [
      36,
      37,
      38,
      39,
      40,
      76,
      41,
      41
     ]
    },
    "typing.List": {
     "line number": [
      35,
      36
     ]
    },
    "typing.Tuple": {
     "line number": [
      41
     ]
    },
    "zip": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.get_learner.maybe_lst": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      90
     ]
    },
    "list": {
     "line number": [
      92
     ]
    },
    "str": {
     "line number": [
      89,
      89
     ]
    },
    "tuple": {
     "line number": [
      90
     ]
    },
    "typing.List": {
     "line number": [
      89
     ]
    },
    "typing.Union": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.log": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "adaptive_scheduler.client_support.log_exception": {
  "data": {
   "shadows": "adaptive_scheduler.utils.log_exception"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.log_info": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "adaptive.AsyncRunner": {
     "line number": [
      151
     ]
    },
    "adaptive_scheduler.client_support._get_log_entry": {
     "line number": [
      172,
      175
     ]
    },
    "adaptive_scheduler.client_support.asyncio": {
     "line number": [
      171,
      151
     ]
    },
    "adaptive_scheduler.client_support.log": {
     "line number": [
      166,
      169,
      173,
      174,
      175
     ]
    },
    "adaptive_scheduler.client_support.socket": {
     "line number": [
      166
     ]
    },
    "adaptive_scheduler.utils._get_npoints": {
     "line number": [
      168
     ]
    },
    "coro": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "adaptive_scheduler.client_support.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.structlog": {
  "data": {
   "shadows": "structlog"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.tell_done": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "adaptive_scheduler.client_support.ctx": {
     "line number": [
      119
     ]
    },
    "adaptive_scheduler.client_support.log": {
     "line number": [
      118,
      123
     ]
    },
    "adaptive_scheduler.client_support.socket": {
     "line number": [
      119,
      120,
      121,
      122,
      124
     ]
    },
    "adaptive_scheduler.client_support.zmq": {
     "line number": [
      119,
      122
     ]
    },
    "str": {
     "line number": [
      107,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler": {
  "data": {
   "shadows": "adaptive_scheduler.scheduler"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.BaseScheduler": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "adaptive_scheduler.utils._RequireAttrsABCMeta": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.__getstate__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      261,
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.sys": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.__setstate__": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._dask_mpi": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "str": {
     "line number": [
      172,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._executor_specific": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      218
     ]
    },
    "ValueError": {
     "line number": [
      210
     ]
    },
    "str": {
     "line number": [
      203,
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._ipyparallel": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.textwrap": {
     "line number": [
      180
     ]
    },
    "str": {
     "line number": [
      176,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._mpi4py": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "str": {
     "line number": [
      168,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler._process_pool": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "str": {
     "line number": [
      199,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.batch_fname": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "str": {
     "line number": [
      122,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.cancel": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.time": {
     "line number": [
      166
     ]
    },
    "bool": {
     "line number": [
      131
     ]
    },
    "cancel_jobs": {
     "line number": [
      165
     ]
    },
    "int": {
     "line number": [
      131
     ]
    },
    "range": {
     "line number": [
      160
     ]
    },
    "set": {
     "line number": [
      159
     ]
    },
    "str": {
     "line number": [
      131
     ]
    },
    "to_cancel": {
     "line number": [
      161
     ]
    },
    "typing.List": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.cancel.cancel_jobs": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      157
     ]
    },
    "adaptive_scheduler.scheduler.subprocess": {
     "line number": [
      155,
      155
     ]
    },
    "adaptive_scheduler.scheduler.warnings": {
     "line number": [
      157
     ]
    },
    "adaptive_scheduler.utils._progress": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.cancel.to_cancel": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.ext": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "property": {
     "line number": [
      101
     ]
    },
    "str": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.extra_env_vars": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "property": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.extra_scheduler": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "property": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.job_script": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.abc": {
     "line number": [
      111
     ]
    },
    "str": {
     "line number": [
      112,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.log_fname": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.os": {
     "line number": [
      225,
      226
     ]
    },
    "str": {
     "line number": [
      222,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.output_fnames": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "str": {
     "line number": [
      228,
      228
     ]
    },
    "typing.List": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.queue": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.abc": {
     "line number": [
      79
     ]
    },
    "bool": {
     "line number": [
      80
     ]
    },
    "dict": {
     "line number": [
      80
     ]
    },
    "str": {
     "line number": [
      80
     ]
    },
    "typing.Dict": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.sanatize_job_id": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.start_job": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.subprocess": {
     "line number": [
      254,
      256
     ]
    },
    "adaptive_scheduler.scheduler.time": {
     "line number": [
      258
     ]
    },
    "str": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.submit_cmd": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "property": {
     "line number": [
      106
     ]
    },
    "str": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.BaseScheduler.write_job_script": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "open": {
     "line number": [
      245
     ]
    },
    "str": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.DefaultScheduler": {
  "data": {
   "lineno": 780
  },
  "type": "constant"
 },
 "adaptive_scheduler.scheduler.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.BaseScheduler": {
     "line number": [
      628
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.__getstate__": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      676,
      674
     ]
    },
    "super": {
     "line number": [
      677
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.__init__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.warnings": {
     "line number": [
      648
     ]
    },
    "super": {
     "line number": [
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.extra_scheduler": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      731
     ]
    },
    "property": {
     "line number": [
      729
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.job_script": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.textwrap": {
     "line number": [
      695
     ]
    },
    "str": {
     "line number": [
      680,
      680
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.queue": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      716
     ]
    },
    "dict": {
     "line number": [
      716
     ]
    },
    "str": {
     "line number": [
      716
     ]
    },
    "typing.Dict": {
     "line number": [
      716
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.LocalMockScheduler.start_job": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.subprocess": {
     "line number": [
      723,
      725
     ]
    },
    "adaptive_scheduler.scheduler.time": {
     "line number": [
      727
     ]
    },
    "str": {
     "line number": [
      719
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.BaseScheduler": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.scheduler.PBS.__getstate__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      321
     ]
    },
    "super": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.__init__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.warnings": {
     "line number": [
      317
     ]
    },
    "super": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._calculate_nnodes": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      343
     ]
    },
    "ValueError": {
     "line number": [
      356
     ]
    },
    "adaptive_scheduler.scheduler.math": {
     "line number": [
      333
     ]
    },
    "adaptive_scheduler.scheduler.warnings": {
     "line number": [
      341,
      350
     ]
    },
    "float": {
     "line number": [
      355
     ]
    },
    "int": {
     "line number": [
      358
     ]
    },
    "round": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._fix_line_cuts": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._guess_cores_per_node": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.collections": {
     "line number": [
      486
     ]
    },
    "int": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._qnodes": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      474
     ]
    },
    "adaptive_scheduler.scheduler.subprocess": {
     "line number": [
      470
     ]
    },
    "dict": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS._split_by_job": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.job_script": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.textwrap": {
     "line number": [
      379
     ]
    },
    "str": {
     "line number": [
      370,
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.output_fnames": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.os": {
     "line number": [
      364,
      366
     ]
    },
    "str": {
     "line number": [
      360,
      360
     ]
    },
    "typing.List": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.queue": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      442
     ]
    },
    "adaptive_scheduler.scheduler.getpass": {
     "line number": [
      460
     ]
    },
    "adaptive_scheduler.scheduler.os": {
     "line number": [
      437
     ]
    },
    "adaptive_scheduler.scheduler.subprocess": {
     "line number": [
      433
     ]
    },
    "bool": {
     "line number": [
      430
     ]
    },
    "dict": {
     "line number": [
      437,
      449,
      430
     ]
    },
    "str": {
     "line number": [
      430
     ]
    },
    "typing.Dict": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.PBS.sanatize_job_id": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.BaseScheduler": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.scheduler.SLURM.__init__": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": {
    "super": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM._ipyparallel": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.textwrap": {
     "line number": [
      529
     ]
    },
    "str": {
     "line number": [
      525,
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM.job_script": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.textwrap": {
     "line number": [
      557
     ]
    },
    "str": {
     "line number": [
      548,
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM.queue": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      609
     ]
    },
    "adaptive_scheduler.scheduler.getpass": {
     "line number": [
      599
     ]
    },
    "adaptive_scheduler.scheduler.subprocess": {
     "line number": [
      601
     ]
    },
    "bool": {
     "line number": [
      582
     ]
    },
    "line_to_dict": {
     "line number": [
      619
     ]
    },
    "str": {
     "line number": [
      582,
      582,
      582
     ]
    },
    "typing.Dict": {
     "line number": [
      582,
      582
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler.SLURM.queue.line_to_dict": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "list": {
     "line number": [
      612
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler._RequireAttrsABCMeta": {
  "data": {
   "shadows": "adaptive_scheduler.utils._RequireAttrsABCMeta"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler._get_default_scheduler": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.PBS": {
     "line number": [
      765,
      771
     ]
    },
    "adaptive_scheduler.scheduler.SLURM": {
     "line number": [
      754,
      765,
      773
     ]
    },
    "adaptive_scheduler.scheduler.os": {
     "line number": [
      756
     ]
    },
    "adaptive_scheduler.scheduler.warnings": {
     "line number": [
      759,
      768,
      776
     ]
    },
    "bool": {
     "line number": [
      751,
      751,
      752,
      752
     ]
    },
    "distutils.spawn.find_executable": {
     "line number": [
      751,
      751,
      752,
      752
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.scheduler._progress": {
  "data": {
   "shadows": "adaptive_scheduler.utils._progress"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.adaptive_scheduler._mock_scheduler": {
  "data": {
   "shadows": "adaptive_scheduler._mock_scheduler"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.find_executable": {
  "data": {
   "shadows": "distutils.spawn.find_executable"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "adaptive_scheduler.scheduler.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner": {
  "data": {
   "symbols_in_volume": {
    "adaptive_scheduler.sequence_learner.sys": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "adaptive_scheduler.sequence_learner.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "adaptive.learner.base_learner.BaseLearner": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "adaptive_scheduler.sequence_learner.ensure_hashable": {
     "line number": [
      37
     ]
    },
    "adaptive_scheduler.sequence_learner.time": {
     "line number": [
      35
     ]
    },
    "adaptive_scheduler.sequence_learner.warnings": {
     "line number": [
      29
     ]
    },
    "adaptive_scheduler.utils._print_same_line": {
     "line number": [
      34
     ]
    },
    "copy.copy": {
     "line number": [
      39
     ]
    },
    "len": {
     "line number": [
      38
     ]
    },
    "print": {
     "line number": [
      30
     ]
    },
    "range": {
     "line number": [
      33
     ]
    },
    "set": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner._get_data": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner._set_data": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "zip": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.ask": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "adaptive_scheduler.sequence_learner.inf": {
     "line number": [
      50
     ]
    },
    "len": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.done": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.loss": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "adaptive_scheduler.sequence_learner.inf": {
     "line number": [
      70
     ]
    },
    "len": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.npoints": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "len": {
     "line number": [
      97
     ]
    },
    "property": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.remove_unfinished": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "set": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.result": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      92
     ]
    },
    "adaptive_scheduler.sequence_learner.ensure_hashable": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.tell": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.tell_pending": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner._print_same_line": {
  "data": {
   "shadows": "adaptive_scheduler.utils._print_same_line"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner.ensure_hashable": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      17
     ]
    },
    "adaptive_scheduler.sequence_learner.warnings": {
     "line number": [
      20,
      23
     ]
    },
    "dict": {
     "line number": [
      19
     ]
    },
    "hash": {
     "line number": [
      15
     ]
    },
    "isinstance": {
     "line number": [
      19
     ]
    },
    "tuple": {
     "line number": [
      21,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.inf": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "adaptive_scheduler.sequence_learner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support": {
  "data": {
   "shadows": "adaptive_scheduler.server_support"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.BaseScheduler": {
  "data": {
   "shadows": "adaptive_scheduler.scheduler.BaseScheduler"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Button": {
  "data": {
   "shadows": "ipywidgets.Button"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Coroutine": {
  "data": {
   "shadows": "typing.Coroutine"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.DatabaseManager": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support._BaseManager": {
     "line number": [
      74
     ]
    },
    "adaptive_scheduler.server_support.ctx": {
     "line number": [
      232
     ]
    },
    "adaptive_scheduler.server_support.log": {
     "line number": [
      231
     ]
    },
    "adaptive_scheduler.server_support.socket": {
     "line number": [
      232,
      233,
      236,
      238,
      240
     ]
    },
    "adaptive_scheduler.server_support.zmq": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.server_support.DatabaseManager.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      117
     ]
    },
    "adaptive_scheduler.scheduler.BaseScheduler": {
     "line number": [
      101
     ]
    },
    "bool": {
     "line number": [
      104
     ]
    },
    "dict": {
     "line number": [
      113
     ]
    },
    "str": {
     "line number": [
      100,
      102,
      103,
      117,
      118,
      119
     ]
    },
    "super": {
     "line number": [
      106
     ]
    },
    "typing.Any": {
     "line number": [
      119
     ]
    },
    "typing.Dict": {
     "line number": [
      119
     ]
    },
    "typing.List": {
     "line number": [
      103,
      119
     ]
    },
    "typing.Optional": {
     "line number": [
      118
     ]
    },
    "typing.Tuple": {
     "line number": [
      118
     ]
    },
    "typing.Union": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._dispatch": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      221,
      204
     ]
    },
    "adaptive_scheduler.server_support.log": {
     "line number": [
      206,
      214,
      218
     ]
    },
    "dict": {
     "line number": [
      211
     ]
    },
    "str": {
     "line number": [
      204,
      204
     ]
    },
    "typing.Tuple": {
     "line number": [
      204
     ]
    },
    "typing.Union": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._output_logs": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "str": {
     "line number": [
      160,
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._setup": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.os": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._start_request": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      175
     ]
    },
    "adaptive_scheduler.server_support.log": {
     "line number": [
      184
     ]
    },
    "str": {
     "line number": [
      168,
      168,
      168,
      169
     ]
    },
    "tinydb.Query": {
     "line number": [
      170
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      171
     ]
    },
    "typing.Optional": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager._stop_request": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      201
     ]
    },
    "str": {
     "line number": [
      198
     ]
    },
    "tinydb.Query": {
     "line number": [
      199
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.as_dicts": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "str": {
     "line number": [
      156,
      156
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      157
     ]
    },
    "typing.Dict": {
     "line number": [
      156
     ]
    },
    "typing.List": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.create_empty_db": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.os": {
     "line number": [
      151,
      152
     ]
    },
    "dict": {
     "line number": [
      150
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.n_done": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "int": {
     "line number": [
      141
     ]
    },
    "tinydb.Query": {
     "line number": [
      142
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.DatabaseManager.update": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "str": {
     "line number": [
      126,
      126,
      126
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      131
     ]
    },
    "typing.Dict": {
     "line number": [
      126,
      126
     ]
    },
    "typing.Optional": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.HTML": {
  "data": {
   "shadows": "ipywidgets.HTML"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.JobManager": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      353
     ]
    },
    "adaptive_scheduler.server_support.MaxRestartsReached": {
     "line number": [
      337,
      344
     ]
    },
    "adaptive_scheduler.server_support._BaseManager": {
     "line number": [
      243
     ]
    },
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      340,
      355
     ]
    },
    "adaptive_scheduler.server_support.log": {
     "line number": [
      342,
      345,
      354
     ]
    },
    "len": {
     "line number": [
      318,
      322,
      327
     ]
    },
    "list": {
     "line number": [
      323
     ]
    },
    "max": {
     "line number": [
      322
     ]
    },
    "set": {
     "line number": [
      315,
      323
     ]
    },
    "str": {
     "line number": [
      350,
      354
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.server_support.JobManager.__init__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.BaseScheduler": {
     "line number": [
      279
     ]
    },
    "adaptive_scheduler.server_support.DatabaseManager": {
     "line number": [
      278
     ]
    },
    "int": {
     "line number": [
      280,
      282,
      283
     ]
    },
    "str": {
     "line number": [
      277
     ]
    },
    "super": {
     "line number": [
      285
     ]
    },
    "typing.List": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.JobManager._queued": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "str": {
     "line number": [
      300
     ]
    },
    "typing.Set": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.JobManager.max_job_starts": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "int": {
     "line number": [
      296
     ]
    },
    "len": {
     "line number": [
      298
     ]
    },
    "property": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.KillManager": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      478
     ]
    },
    "adaptive_scheduler.server_support._BaseManager": {
     "line number": [
      404
     ]
    },
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      474
     ]
    },
    "adaptive_scheduler.server_support.log": {
     "line number": [
      476,
      479
     ]
    },
    "adaptive_scheduler.server_support.logs_with_string_or_condition": {
     "line number": [
      456
     ]
    },
    "adaptive_scheduler.utils._remove_or_move_files": {
     "line number": [
      469
     ]
    },
    "str": {
     "line number": [
      460,
      461,
      479
     ]
    },
    "typing.List": {
     "line number": [
      460,
      461
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.server_support.KillManager.__init__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.BaseScheduler": {
     "line number": [
      433
     ]
    },
    "adaptive_scheduler.server_support.DatabaseManager": {
     "line number": [
      434
     ]
    },
    "bool": {
     "line number": [
      435
     ]
    },
    "int": {
     "line number": [
      436,
      437
     ]
    },
    "str": {
     "line number": [
      435,
      435,
      438,
      448,
      449
     ]
    },
    "super": {
     "line number": [
      440
     ]
    },
    "typing.Callable": {
     "line number": [
      435
     ]
    },
    "typing.List": {
     "line number": [
      435,
      448,
      449
     ]
    },
    "typing.Optional": {
     "line number": [
      438
     ]
    },
    "typing.Union": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.Layout": {
  "data": {
   "shadows": "ipywidgets.Layout"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.MaxRestartsReached": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.server_support.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Query": {
  "data": {
   "shadows": "tinydb.Query"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.RunManager": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support._BaseManager": {
     "line number": [
      747
     ]
    },
    "adaptive_scheduler.server_support.time": {
     "line number": [
      933
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.server_support.RunManager.__init__": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.BaseScheduler": {
     "line number": [
      842
     ]
    },
    "adaptive_scheduler.server_support.DatabaseManager": {
     "line number": [
      887
     ]
    },
    "adaptive_scheduler.server_support.JobManager": {
     "line number": [
      894
     ]
    },
    "adaptive_scheduler.server_support.KillManager": {
     "line number": [
      903
     ]
    },
    "adaptive_scheduler.server_support.adaptive": {
     "line number": [
      843
     ]
    },
    "adaptive_scheduler.server_support.get_allowed_url": {
     "line number": [
      886
     ]
    },
    "bool": {
     "line number": [
      843,
      852,
      855
     ]
    },
    "dict": {
     "line number": [
      844
     ]
    },
    "float": {
     "line number": [
      878,
      879
     ]
    },
    "int": {
     "line number": [
      847,
      848,
      850,
      851
     ]
    },
    "len": {
     "line number": [
      884
     ]
    },
    "range": {
     "line number": [
      884
     ]
    },
    "str": {
     "line number": [
      845,
      846,
      849,
      852,
      852,
      853,
      854,
      856,
      857
     ]
    },
    "super": {
     "line number": [
      859
     ]
    },
    "typing.Any": {
     "line number": [
      856,
      857
     ]
    },
    "typing.Callable": {
     "line number": [
      843,
      852
     ]
    },
    "typing.Dict": {
     "line number": [
      856,
      857
     ]
    },
    "typing.List": {
     "line number": [
      852
     ]
    },
    "typing.Optional": {
     "line number": [
      844,
      845,
      853,
      856,
      857,
      878,
      879
     ]
    },
    "typing.Union": {
     "line number": [
      843,
      852
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._get_learners_file": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": {
    "importlib.util.module_from_spec": {
     "line number": [
      939
     ]
    },
    "importlib.util.spec_from_file_location": {
     "line number": [
      938
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._info_html": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1152,
      1176
     ]
    },
    "_table_row": {
     "line number": [
      1182
     ]
    },
    "adaptive_scheduler.server_support.datetime": {
     "line number": [
      1149
     ]
    },
    "contextlib.suppress": {
     "line number": [
      1152,
      1176
     ]
    },
    "enumerate": {
     "line number": [
      1182
     ]
    },
    "int": {
     "line number": [
      1157,
      1164
     ]
    },
    "max": {
     "line number": [
      1157,
      1164
     ]
    },
    "min": {
     "line number": [
      1157,
      1164
     ]
    },
    "pandas.Timestamp.now": {
     "line number": [
      1154
     ]
    },
    "str": {
     "line number": [
      1120
     ]
    },
    "sum": {
     "line number": [
      1124,
      1125,
      1126
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._info_html._table_row": {
  "data": {
   "lineno": 1137
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._repr_html_": {
  "data": {
   "lineno": 1190
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._setup": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support._make_default_run_script": {
     "line number": [
      915
     ]
    },
    "adaptive_scheduler.server_support.time": {
     "line number": [
      929
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.cancel": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.time": {
     "line number": [
      950
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.cleanup": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      958
     ]
    },
    "adaptive_scheduler.server_support._delete_old_ipython_profiles": {
     "line number": [
      962
     ]
    },
    "adaptive_scheduler.server_support.cleanup": {
     "line number": [
      964
     ]
    },
    "adaptive_scheduler.server_support.os": {
     "line number": [
      960
     ]
    },
    "contextlib.suppress": {
     "line number": [
      958
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.elapsed_time": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.time": {
     "line number": [
      1014
     ]
    },
    "float": {
     "line number": [
      1002
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.get_database": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      996
     ]
    },
    "str": {
     "line number": [
      994
     ]
    },
    "typing.Any": {
     "line number": [
      994
     ]
    },
    "typing.Dict": {
     "line number": [
      994
     ]
    },
    "typing.List": {
     "line number": [
      994
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": {
    "IPython.display.display": {
     "line number": [
      1118
     ]
    },
    "adaptive_scheduler.server_support.cleanup": {
     "line number": [
      1113
     ]
    },
    "ipywidgets.Button": {
     "line number": [
      1050,
      1056,
      1062,
      1068,
      1074
     ]
    },
    "ipywidgets.HTML": {
     "line number": [
      1046
     ]
    },
    "ipywidgets.Layout": {
     "line number": [
      1048
     ]
    },
    "ipywidgets.VBox": {
     "line number": [
      1080
     ]
    },
    "tuple": {
     "line number": [
      1117
     ]
    },
    "update": {
     "line number": [
      1114
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.cancel": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": {
    "update": {
     "line number": [
      1089
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.cleanup": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": {
    "update": {
     "line number": [
      1093
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.load_learners": {
  "data": {
   "lineno": 1095
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.toggle_logs": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": {
    "adaptive_scheduler.widgets.log_explorer": {
     "line number": [
      1102
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.update": {
  "data": {
   "lineno": 1084
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.load_learners": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.load_parallel": {
     "line number": [
      1000
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.parse_log_files": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.parse_log_files": {
     "line number": [
      979
     ]
    },
    "bool": {
     "line number": [
      966
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      966
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.status": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1028
     ]
    },
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      1024,
      1026
     ]
    },
    "adaptive_scheduler.server_support.time": {
     "line number": [
      1034
     ]
    },
    "str": {
     "line number": [
      1017
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.task_status": {
  "data": {
   "lineno": 983
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.ThreadPoolExecutor": {
  "data": {
   "shadows": "concurrent.futures.ThreadPoolExecutor"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.TinyDB": {
  "data": {
   "shadows": "tinydb.TinyDB"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.VBox": {
  "data": {
   "shadows": "ipywidgets.VBox"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support._BaseManager": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.abc": {
     "line number": [
      42,
      69
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.server_support._BaseManager.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      44,
      46
     ]
    },
    "typing.Coroutine": {
     "line number": [
      45
     ]
    },
    "typing.Optional": {
     "line number": [
      44,
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager._setup": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager.cancel": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      61
     ]
    },
    "typing.Optional": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager.is_started": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      58
     ]
    },
    "property": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._BaseManager.start": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      50
     ]
    },
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._delete_old_ipython_profiles": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.BaseScheduler": {
     "line number": [
      720
     ]
    },
    "adaptive_scheduler.server_support.glob": {
     "line number": [
      729
     ]
    },
    "adaptive_scheduler.server_support.os": {
     "line number": [
      729
     ]
    },
    "adaptive_scheduler.server_support.shutil": {
     "line number": [
      741
     ]
    },
    "adaptive_scheduler.utils._progress": {
     "line number": [
      740,
      743
     ]
    },
    "bool": {
     "line number": [
      720
     ]
    },
    "concurrent.futures.ThreadPoolExecutor": {
     "line number": [
      738
     ]
    },
    "set": {
     "line number": [
      731
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._get_all_files": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.BaseScheduler": {
     "line number": [
      679
     ]
    },
    "adaptive_scheduler.server_support.glob": {
     "line number": [
      685
     ]
    },
    "str": {
     "line number": [
      679,
      679
     ]
    },
    "sum": {
     "line number": [
      682,
      686
     ]
    },
    "typing.List": {
     "line number": [
      679,
      679
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._make_default_run_script": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      521
     ]
    },
    "ModuleNotFoundError": {
     "line number": [
      519
     ]
    },
    "NotImplementedError": {
     "line number": [
      528
     ]
    },
    "RuntimeError": {
     "line number": [
      533
     ]
    },
    "adaptive_scheduler.server_support.adaptive": {
     "line number": [
      501
     ]
    },
    "adaptive_scheduler.server_support.dill": {
     "line number": [
      508
     ]
    },
    "adaptive_scheduler.server_support.os": {
     "line number": [
      532,
      532,
      532,
      538,
      538
     ]
    },
    "adaptive_scheduler.server_support.textwrap": {
     "line number": [
      540
     ]
    },
    "bool": {
     "line number": [
      501
     ]
    },
    "dict": {
     "line number": [
      506,
      507
     ]
    },
    "int": {
     "line number": [
      499,
      500
     ]
    },
    "open": {
     "line number": [
      608
     ]
    },
    "str": {
     "line number": [
      497,
      498,
      502,
      503,
      504
     ]
    },
    "typing.Any": {
     "line number": [
      502
     ]
    },
    "typing.Callable": {
     "line number": [
      501
     ]
    },
    "typing.Dict": {
     "line number": [
      502
     ]
    },
    "typing.Optional": {
     "line number": [
      502
     ]
    },
    "typing.Union": {
     "line number": [
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._progress": {
  "data": {
   "shadows": "adaptive_scheduler.utils._progress"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support._remove_or_move_files": {
  "data": {
   "shadows": "adaptive_scheduler.utils._remove_or_move_files"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.adaptive": {
  "data": {
   "shadows": "adaptive"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.cleanup": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": {
    "adaptive_scheduler.scheduler.BaseScheduler": {
     "line number": [
      691
     ]
    },
    "adaptive_scheduler.server_support._get_all_files": {
     "line number": [
      712
     ]
    },
    "adaptive_scheduler.utils._remove_or_move_files": {
     "line number": [
      714
     ]
    },
    "bool": {
     "line number": [
      692
     ]
    },
    "str": {
     "line number": [
      690,
      693
     ]
    },
    "typing.List": {
     "line number": [
      690
     ]
    },
    "typing.Optional": {
     "line number": [
      693
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.ctx": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.dask_mpi": {
  "data": {
   "shadows": "dask_mpi"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.dill": {
  "data": {
   "shadows": "dill"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.get_allowed_url": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.socket": {
     "line number": [
      491,
      491
     ]
    },
    "adaptive_scheduler.server_support.zmq": {
     "line number": [
      492
     ]
    },
    "str": {
     "line number": [
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.load_parallel": {
  "data": {
   "shadows": "adaptive_scheduler.utils.load_parallel"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.log": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.log_explorer": {
  "data": {
   "shadows": "adaptive_scheduler.widgets.log_explorer"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.logs_with_string_or_condition": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      386
     ]
    },
    "adaptive_scheduler.server_support.DatabaseManager": {
     "line number": [
      359
     ]
    },
    "any": {
     "line number": [
      398
     ]
    },
    "bool": {
     "line number": [
      359
     ]
    },
    "callable": {
     "line number": [
      383
     ]
    },
    "file_has_error": {
     "line number": [
      398
     ]
    },
    "isinstance": {
     "line number": [
      381
     ]
    },
    "str": {
     "line number": [
      359,
      359,
      381,
      360,
      360
     ]
    },
    "typing.Callable": {
     "line number": [
      359
     ]
    },
    "typing.List": {
     "line number": [
      359,
      360,
      360
     ]
    },
    "typing.Tuple": {
     "line number": [
      360
     ]
    },
    "typing.Union": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.logs_with_string_or_condition.file_has_error": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.os": {
     "line number": [
      389
     ]
    },
    "has_error": {
     "line number": [
      393
     ]
    },
    "open": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.module_from_spec": {
  "data": {
   "shadows": "importlib.util.module_from_spec"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.parse_log_files": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": {
    "_get_infos": {
     "line number": [
      660
     ]
    },
    "adaptive_scheduler.server_support.DatabaseManager": {
     "line number": [
      614
     ]
    },
    "adaptive_scheduler.server_support.datetime": {
     "line number": [
      662
     ]
    },
    "bool": {
     "line number": [
      616
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      676,
      617
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      665
     ]
    },
    "str": {
     "line number": [
      613
     ]
    },
    "typing.List": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.parse_log_files._get_infos": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      647
     ]
    },
    "adaptive_scheduler.server_support.json": {
     "line number": [
      648
     ]
    },
    "bool": {
     "line number": [
      642
     ]
    },
    "contextlib.suppress": {
     "line number": [
      647
     ]
    },
    "open": {
     "line number": [
      644
     ]
    },
    "reversed": {
     "line number": [
      646
     ]
    },
    "str": {
     "line number": [
      642,
      643
     ]
    },
    "typing.List": {
     "line number": [
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.periodically_clean_ipython_profiles": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1214
     ]
    },
    "adaptive_scheduler.server_support._delete_old_ipython_profiles": {
     "line number": [
      1215
     ]
    },
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      1216,
      1218
     ]
    },
    "clean": {
     "line number": [
      1219
     ]
    },
    "contextlib.suppress": {
     "line number": [
      1214
     ]
    },
    "int": {
     "line number": [
      1194
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.spec_from_file_location": {
  "data": {
   "shadows": "importlib.util.spec_from_file_location"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.structlog": {
  "data": {
   "shadows": "structlog"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.zmq.asyncio": {
  "data": {
   "shadows": "zmq.asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.zmq.ssh": {
  "data": {
   "shadows": "zmq.ssh"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils": {
  "data": {
   "shadows": "adaptive_scheduler.utils"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Client": {
  "data": {
   "shadows": "ipyparallel.Client"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.MAX_LINE_LENGTH": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "adaptive_scheduler.utils.NoEnginesRegistered": {
  "data": {
   "shadows": "ipyparallel.error.NoEnginesRegistered"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.ThreadPoolExecutor": {
  "data": {
   "shadows": "concurrent.futures.ThreadPoolExecutor"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils._RequireAttrsABCMeta": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.abc": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.utils._RequireAttrsABCMeta.__call__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      35
     ]
    },
    "hasattr": {
     "line number": [
      34
     ]
    },
    "super": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._get_default_args": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.inspect": {
     "line number": [
      480,
      484
     ]
    },
    "str": {
     "line number": [
      479,
      479
     ]
    },
    "typing.Callable": {
     "line number": [
      479
     ]
    },
    "typing.Dict": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._get_npoints": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      230,
      232
     ]
    },
    "adaptive_scheduler.utils.adaptive": {
     "line number": [
      229
     ]
    },
    "contextlib.suppress": {
     "line number": [
      230,
      232
     ]
    },
    "int": {
     "line number": [
      229
     ]
    },
    "sum": {
     "line number": [
      234
     ]
    },
    "typing.Optional": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._print_same_line": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.MAX_LINE_LENGTH": {
     "line number": [
      418,
      418,
      419
     ]
    },
    "bool": {
     "line number": [
      415
     ]
    },
    "len": {
     "line number": [
      418,
      419
     ]
    },
    "max": {
     "line number": [
      418,
      419
     ]
    },
    "print": {
     "line number": [
      420
     ]
    },
    "str": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._progress": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "adaptive.notebook_integration.in_ipynb": {
     "line number": [
      243
     ]
    },
    "bool": {
     "line number": [
      238
     ]
    },
    "list": {
     "line number": [
      244,
      246
     ]
    },
    "str": {
     "line number": [
      238
     ]
    },
    "tqdm.tqdm": {
     "line number": [
      246
     ]
    },
    "tqdm.tqdm_notebook": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._remove_or_move_files": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      346
     ]
    },
    "adaptive_scheduler.utils._progress": {
     "line number": [
      339
     ]
    },
    "adaptive_scheduler.utils.os": {
     "line number": [
      342,
      344
     ]
    },
    "adaptive_scheduler.utils.shutil": {
     "line number": [
      345
     ]
    },
    "adaptive_scheduler.utils.warnings": {
     "line number": [
      350
     ]
    },
    "bool": {
     "line number": [
      320
     ]
    },
    "len": {
     "line number": [
      350
     ]
    },
    "pathlib.Path": {
     "line number": [
      345
     ]
    },
    "str": {
     "line number": [
      319,
      321,
      322
     ]
    },
    "typing.List": {
     "line number": [
      319
     ]
    },
    "typing.Optional": {
     "line number": [
      321,
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._split": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      56
     ]
    },
    "int": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._wait_for_successful_ipyparallel_client_start": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      439
     ]
    },
    "adaptive_scheduler.utils._print_same_line": {
     "line number": [
      433
     ]
    },
    "adaptive_scheduler.utils.time": {
     "line number": [
      437
     ]
    },
    "contextlib.suppress": {
     "line number": [
      429
     ]
    },
    "int": {
     "line number": [
      423,
      423
     ]
    },
    "ipyparallel.error.NoEnginesRegistered": {
     "line number": [
      429
     ]
    },
    "len": {
     "line number": [
      428
     ]
    },
    "range": {
     "line number": [
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.adaptive": {
  "data": {
   "shadows": "adaptive"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.add_constant_to_fname": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.combo2fname": {
     "line number": [
      285,
      287
     ]
    },
    "bool": {
     "line number": [
      281
     ]
    },
    "int": {
     "line number": [
      280
     ]
    },
    "pathlib.Path": {
     "line number": [
      278
     ]
    },
    "str": {
     "line number": [
      276,
      277,
      278,
      279
     ]
    },
    "typing.Any": {
     "line number": [
      276,
      277
     ]
    },
    "typing.Dict": {
     "line number": [
      276,
      277
     ]
    },
    "typing.Optional": {
     "line number": [
      278,
      279
     ]
    },
    "typing.Union": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.collections.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.combine_sequence_learners": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.adaptive": {
     "line number": [
      192,
      193,
      214,
      194
     ]
    },
    "enumerate": {
     "line number": [
      220
     ]
    },
    "list": {
     "line number": [
      213
     ]
    },
    "sum": {
     "line number": [
      213
     ]
    },
    "typing.List": {
     "line number": [
      192
     ]
    },
    "typing.Optional": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.combo2fname": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.maybe_round": {
     "line number": [
      268
     ]
    },
    "int": {
     "line number": [
      263
     ]
    },
    "pathlib.Path": {
     "line number": [
      261,
      269,
      264
     ]
    },
    "sorted": {
     "line number": [
      268
     ]
    },
    "str": {
     "line number": [
      260,
      261,
      262
     ]
    },
    "typing.Any": {
     "line number": [
      260
     ]
    },
    "typing.Dict": {
     "line number": [
      260
     ]
    },
    "typing.Optional": {
     "line number": [
      261,
      262
     ]
    },
    "typing.Union": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.combo_to_fname": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.os": {
     "line number": [
      256
     ]
    },
    "str": {
     "line number": [
      250,
      250,
      250,
      251
     ]
    },
    "typing.Any": {
     "line number": [
      250
     ]
    },
    "typing.Dict": {
     "line number": [
      250
     ]
    },
    "typing.Optional": {
     "line number": [
      250,
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.connect_to_ipyparallel": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "adaptive_scheduler.utils._wait_for_successful_ipyparallel_client_start": {
     "line number": [
      468
     ]
    },
    "int": {
     "line number": [
      443,
      445
     ]
    },
    "ipyparallel.Client": {
     "line number": [
      467
     ]
    },
    "print": {
     "line number": [
      472
     ]
    },
    "str": {
     "line number": [
      444,
      446
     ]
    },
    "typing.Optional": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.hash_anything": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      49
     ]
    },
    "adaptive_scheduler.utils.hashlib": {
     "line number": [
      48,
      50
     ]
    },
    "adaptive_scheduler.utils.pickle": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.in_ipynb": {
  "data": {
   "shadows": "adaptive.notebook_integration.in_ipynb"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.load_parallel": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "adaptive_scheduler.utils._progress": {
     "line number": [
      380,
      382
     ]
    },
    "adaptive_scheduler.utils.adaptive": {
     "line number": [
      354
     ]
    },
    "bool": {
     "line number": [
      357
     ]
    },
    "concurrent.futures.ThreadPoolExecutor": {
     "line number": [
      378
     ]
    },
    "int": {
     "line number": [
      358
     ]
    },
    "str": {
     "line number": [
      355
     ]
    },
    "typing.List": {
     "line number": [
      354,
      355
     ]
    },
    "typing.Optional": {
     "line number": [
      358
     ]
    },
    "zip": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.load_parallel.load": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.log_exception": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.maybe_round": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.functools": {
     "line number": [
      294
     ]
    },
    "complex": {
     "line number": [
      299,
      300
     ]
    },
    "float": {
     "line number": [
      297
     ]
    },
    "int": {
     "line number": [
      293
     ]
    },
    "isinstance": {
     "line number": [
      297,
      299
     ]
    },
    "numpy.complex": {
     "line number": [
      299
     ]
    },
    "numpy.float": {
     "line number": [
      297
     ]
    },
    "numpy.isinf": {
     "line number": [
      295
     ]
    },
    "numpy.isnan": {
     "line number": [
      295
     ]
    },
    "rnd": {
     "line number": [
      298,
      300,
      300
     ]
    },
    "typing.Any": {
     "line number": [
      293,
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.round_sigfigs": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      313
     ]
    },
    "adaptive_scheduler.utils.math": {
     "line number": [
      313,
      313
     ]
    },
    "float": {
     "line number": [
      305,
      311,
      305
     ]
    },
    "int": {
     "line number": [
      305,
      313
     ]
    },
    "round": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.save_parallel": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "adaptive_scheduler.utils._progress": {
     "line number": [
      409,
      411
     ]
    },
    "adaptive_scheduler.utils.adaptive": {
     "line number": [
      387
     ]
    },
    "bool": {
     "line number": [
      390
     ]
    },
    "concurrent.futures.ThreadPoolExecutor": {
     "line number": [
      407
     ]
    },
    "str": {
     "line number": [
      388
     ]
    },
    "typing.List": {
     "line number": [
      387,
      388
     ]
    },
    "zip": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.save_parallel.save": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.shuffle_list": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.random": {
     "line number": [
      42
     ]
    },
    "list": {
     "line number": [
      41
     ]
    },
    "zip": {
     "line number": [
      41,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.split": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.math": {
     "line number": [
      73
     ]
    },
    "adaptive_scheduler.utils.toolz": {
     "line number": [
      74
     ]
    },
    "int": {
     "line number": [
      59
     ]
    },
    "len": {
     "line number": [
      73
     ]
    },
    "list": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.split_in_balancing_learners": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.adaptive": {
     "line number": [
      78,
      104,
      82
     ]
    },
    "adaptive_scheduler.utils.split": {
     "line number": [
      102
     ]
    },
    "int": {
     "line number": [
      80
     ]
    },
    "str": {
     "line number": [
      79,
      81,
      82
     ]
    },
    "typing.List": {
     "line number": [
      78,
      79,
      82,
      82
     ]
    },
    "typing.Tuple": {
     "line number": [
      82
     ]
    },
    "zip": {
     "line number": [
      102,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.split_sequence_in_sequence_learners": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.adaptive": {
     "line number": [
      183,
      158
     ]
    },
    "adaptive_scheduler.utils.hash_anything": {
     "line number": [
      185
     ]
    },
    "adaptive_scheduler.utils.split": {
     "line number": [
      182
     ]
    },
    "int": {
     "line number": [
      156
     ]
    },
    "len": {
     "line number": [
      185
     ]
    },
    "pathlib.Path": {
     "line number": [
      157,
      179,
      158
     ]
    },
    "str": {
     "line number": [
      157
     ]
    },
    "typing.Any": {
     "line number": [
      154,
      154,
      155
     ]
    },
    "typing.Callable": {
     "line number": [
      154
     ]
    },
    "typing.List": {
     "line number": [
      158,
      158
     ]
    },
    "typing.Sequence": {
     "line number": [
      155
     ]
    },
    "typing.Tuple": {
     "line number": [
      158
     ]
    },
    "typing.Union": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.split_sequence_learner": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.adaptive": {
     "line number": [
      112
     ]
    },
    "adaptive_scheduler.utils.split": {
     "line number": [
      141
     ]
    },
    "adaptive_scheduler.utils.split_sequence_in_sequence_learners": {
     "line number": [
      134
     ]
    },
    "enumerate": {
     "line number": [
      143
     ]
    },
    "int": {
     "line number": [
      111
     ]
    },
    "len": {
     "line number": [
      141
     ]
    },
    "pathlib.Path": {
     "line number": [
      111,
      112
     ]
    },
    "range": {
     "line number": [
      141
     ]
    },
    "str": {
     "line number": [
      111
     ]
    },
    "typing.List": {
     "line number": [
      112,
      112
     ]
    },
    "typing.Tuple": {
     "line number": [
      112
     ]
    },
    "typing.Union": {
     "line number": [
      111
     ]
    },
    "zip": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.toolz": {
  "data": {
   "shadows": "toolz"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.tqdm_notebook": {
  "data": {
   "shadows": "tqdm.tqdm_notebook"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets": {
  "data": {},
  "type": "module"
 },
 "adaptive_scheduler.widgets.Button": {
  "data": {
   "shadows": "ipywidgets.Button"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets.Checkbox": {
  "data": {
   "shadows": "ipywidgets.Checkbox"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets.Dropdown": {
  "data": {
   "shadows": "ipywidgets.Dropdown"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets.HTML": {
  "data": {
   "shadows": "ipywidgets.HTML"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets.Layout": {
  "data": {
   "shadows": "ipywidgets.Layout"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets.Textarea": {
  "data": {
   "shadows": "ipywidgets.Textarea"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets.VBox": {
  "data": {
   "shadows": "ipywidgets.VBox"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets._get_fnames": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      8
     ]
    },
    "map": {
     "line number": [
      15
     ]
    },
    "pathlib.Path": {
     "line number": [
      15,
      16,
      8
     ]
    },
    "sorted": {
     "line number": [
      15,
      16
     ]
    },
    "typing.List": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets._read_file": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      25
     ]
    },
    "UnicodeDecodeError": {
     "line number": [
      23
     ]
    },
    "pathlib.Path": {
     "line number": [
      19
     ]
    },
    "str": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler.widgets.log_explorer": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      55
     ]
    },
    "_click_button_on_change": {
     "line number": [
      113
     ]
    },
    "_last_editted": {
     "line number": [
      45,
      49
     ]
    },
    "_on_dropdown_change": {
     "line number": [
      107
     ]
    },
    "_tail": {
     "line number": [
      116
     ]
    },
    "_update_dropdown": {
     "line number": [
      112
     ]
    },
    "adaptive_scheduler.widgets._get_fnames": {
     "line number": [
      103
     ]
    },
    "adaptive_scheduler.widgets._read_file": {
     "line number": [
      51,
      104
     ]
    },
    "adaptive_scheduler.widgets.asyncio": {
     "line number": [
      47,
      53
     ]
    },
    "dict": {
     "line number": [
      105
     ]
    },
    "ipywidgets.Button": {
     "line number": [
      109,
      114
     ]
    },
    "ipywidgets.Checkbox": {
     "line number": [
      108
     ]
    },
    "ipywidgets.Dropdown": {
     "line number": [
      106
     ]
    },
    "ipywidgets.HTML": {
     "line number": [
      118
     ]
    },
    "ipywidgets.Layout": {
     "line number": [
      121
     ]
    },
    "ipywidgets.Textarea": {
     "line number": [
      44,
      105
     ]
    },
    "ipywidgets.VBox": {
     "line number": [
      119,
      29
     ]
    },
    "pathlib.Path": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._click_button_on_change": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._click_button_on_change.on_change": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._last_editted": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      41
     ]
    },
    "float": {
     "line number": [
      38
     ]
    },
    "pathlib.Path": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._on_dropdown_change": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._on_dropdown_change.on_change": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "adaptive_scheduler.widgets._read_file": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._tail": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "adaptive_scheduler.widgets.asyncio": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._tail.on_click": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "_tail_log": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._update_dropdown": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "adaptive_scheduler.widgets.log_explorer._update_dropdown.on_click": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "adaptive_scheduler.widgets._get_fnames": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 }
}