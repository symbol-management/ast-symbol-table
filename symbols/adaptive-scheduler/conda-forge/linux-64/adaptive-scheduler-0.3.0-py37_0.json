{
 "adaptive_scheduler": {
  "data": {},
  "type": "module"
 },
 "adaptive_scheduler.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "adaptive_scheduler.__version__": {
  "data": {
   "shadows": "adaptive_scheduler._version.__version__"
  },
  "type": "import"
 },
 "adaptive_scheduler._scheduler": {
  "data": {
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      29
     ]
    },
    "__import__": {
     "line number": [
      45
     ]
    },
    "adaptive_scheduler._scheduler.DEFAULT": {
     "line number": [
      27,
      37
     ]
    },
    "adaptive_scheduler._scheduler.has_pbs": {
     "line number": [
      26,
      32,
      36
     ]
    },
    "adaptive_scheduler._scheduler.has_slurm": {
     "line number": [
      26,
      34,
      36
     ]
    },
    "adaptive_scheduler._scheduler.module": {
     "line number": [
      48
     ]
    },
    "adaptive_scheduler._scheduler.msg": {
     "line number": [
      39
     ]
    },
    "adaptive_scheduler._scheduler.names": {
     "line number": [
      44,
      50
     ]
    },
    "adaptive_scheduler._scheduler.os": {
     "line number": [
      27
     ]
    },
    "adaptive_scheduler._scheduler.scheduler_system": {
     "line number": [
      28,
      30,
      38,
      46
     ]
    },
    "adaptive_scheduler._scheduler.warnings": {
     "line number": [
      39
     ]
    },
    "bool": {
     "line number": [
      23,
      23,
      24,
      24
     ]
    },
    "distutils.spawn.find_executable": {
     "line number": [
      23,
      23,
      24,
      24
     ]
    },
    "getattr": {
     "line number": [
      48
     ]
    },
    "globals": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "adaptive_scheduler._scheduler.DEFAULT": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.__all__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.find_executable": {
  "data": {
   "shadows": "distutils.spawn.find_executable"
  },
  "type": "import"
 },
 "adaptive_scheduler._scheduler.has_pbs": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.has_slurm": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.module": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.msg": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.names": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler._scheduler.scheduler_system": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "adaptive_scheduler._scheduler.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive_scheduler._static_version": {
  "data": {},
  "type": "module"
 },
 "adaptive_scheduler._static_version.version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "adaptive_scheduler._version": {
  "data": {
   "symbols_in_volume": {
    "adaptive_scheduler._version._build_py": {
     "line number": [
      197
     ]
    },
    "adaptive_scheduler._version._sdist": {
     "line number": [
      197
     ]
    },
    "adaptive_scheduler._version.get_version": {
     "line number": [
      163
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      17,
      17,
      18,
      19
     ]
    },
    "adaptive_scheduler._version.package_root": {
     "line number": [
      18,
      19
     ]
    },
    "collections.namedtuple": {
     "line number": [
      12
     ]
    },
    "dict": {
     "line number": [
      197
     ]
    },
    "str": {
     "line number": [
      15
     ]
    },
    "typing.List": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "module"
 },
 "adaptive_scheduler._version.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.STATIC_VERSION_FILE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.Version": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.__version__": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "adaptive_scheduler._version._build_py": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "distutils.command.build_py.build_py": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler._version._build_py.run": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "adaptive_scheduler._version.STATIC_VERSION_FILE": {
     "line number": [
      188
     ]
    },
    "adaptive_scheduler._version._write_version": {
     "line number": [
      188
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      188
     ]
    },
    "adaptive_scheduler._version.package_name": {
     "line number": [
      188
     ]
    },
    "super": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version._sdist": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "setuptools.command.sdist.sdist": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler._version._sdist.make_release_tree": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "adaptive_scheduler._version.STATIC_VERSION_FILE": {
     "line number": [
      194
     ]
    },
    "adaptive_scheduler._version._write_version": {
     "line number": [
      194
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      194
     ]
    },
    "adaptive_scheduler._version.package_name": {
     "line number": [
      194
     ]
    },
    "super": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version._write_version": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      176
     ]
    },
    "adaptive_scheduler._version.__version__": {
     "line number": [
      181
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      175
     ]
    },
    "open": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version.build_py_orig": {
  "data": {
   "shadows": "distutils.command.build_py.build_py"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.cmdclass": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.distr_root": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.get_static_version_info": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "adaptive_scheduler._version.STATIC_VERSION_FILE": {
     "line number": [
      38
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      40
     ]
    },
    "adaptive_scheduler._version.package_root": {
     "line number": [
      40
     ]
    },
    "exec": {
     "line number": [
      41
     ]
    },
    "open": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version.get_version": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "adaptive_scheduler._version.STATIC_VERSION_FILE": {
     "line number": [
      24
     ]
    },
    "adaptive_scheduler._version.Version": {
     "line number": [
      32
     ]
    },
    "adaptive_scheduler._version.get_static_version_info": {
     "line number": [
      25
     ]
    },
    "adaptive_scheduler._version.get_version_from_git": {
     "line number": [
      28
     ]
    },
    "adaptive_scheduler._version.get_version_from_git_archive": {
     "line number": [
      30
     ]
    },
    "adaptive_scheduler._version.pep440_format": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version.get_version_from_git": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      74,
      95,
      126
     ]
    },
    "ValueError": {
     "line number": [
      112
     ]
    },
    "adaptive_scheduler._version.Version": {
     "line number": [
      132
     ]
    },
    "adaptive_scheduler._version.distr_root": {
     "line number": [
      70,
      78,
      91,
      125
     ]
    },
    "adaptive_scheduler._version.os": {
     "line number": [
      78
     ]
    },
    "adaptive_scheduler._version.subprocess": {
     "line number": [
      68,
      71,
      72,
      89,
      92,
      93,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version.get_version_from_git_archive": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      144
     ]
    },
    "adaptive_scheduler._version.Version": {
     "line number": [
      158,
      160
     ]
    },
    "len": {
     "line number": [
      155
     ]
    },
    "sorted": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler._version.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.package_name": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.package_root": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "adaptive_scheduler._version.pep440_format": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "adaptive_scheduler._version.sdist_orig": {
  "data": {
   "shadows": "setuptools.command.sdist.sdist"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler._version.version_is_from_git": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "adaptive_scheduler._version.STATIC_VERSION_FILE": {
     "line number": [
      45
     ]
    },
    "adaptive_scheduler._version.get_static_version_info": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.cancel_jobs": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.cancel"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support": {
  "data": {
   "shadows": "adaptive_scheduler.client_support"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.AsyncRunner": {
  "data": {
   "shadows": "adaptive.AsyncRunner"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.BaseLearner": {
  "data": {
   "shadows": "adaptive.BaseLearner"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support._get_log_entry": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      114
     ]
    },
    "Exception": {
     "line number": [
      112
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      109
     ]
    },
    "adaptive.AsyncRunner": {
     "line number": [
      99
     ]
    },
    "adaptive_scheduler.client_support._get_npoints": {
     "line number": [
      105,
      107
     ]
    },
    "adaptive_scheduler.client_support.datetime": {
     "line number": [
      102
     ]
    },
    "adaptive_scheduler.client_support.psutil": {
     "line number": [
      118,
      119
     ]
    },
    "contextlib.suppress": {
     "line number": [
      109,
      112,
      114
     ]
    },
    "int": {
     "line number": [
      99
     ]
    },
    "len": {
     "line number": [
      115
     ]
    },
    "str": {
     "line number": [
      103,
      99
     ]
    },
    "typing.Any": {
     "line number": [
      99
     ]
    },
    "typing.Dict": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support._get_npoints": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      92,
      94
     ]
    },
    "adaptive.BaseLearner": {
     "line number": [
      91
     ]
    },
    "contextlib.suppress": {
     "line number": [
      92,
      94
     ]
    },
    "int": {
     "line number": [
      91
     ]
    },
    "sum": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.ctx": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "adaptive_scheduler.client_support.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.get_job_id": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.get_job_id"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.get_learner": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      48
     ]
    },
    "RuntimeError": {
     "line number": [
      47
     ]
    },
    "StopIteration": {
     "line number": [
      63
     ]
    },
    "UserWarning": {
     "line number": [
      66
     ]
    },
    "adaptive.BaseLearner": {
     "line number": [
      18
     ]
    },
    "adaptive_scheduler._scheduler.get_job_id": {
     "line number": [
      36
     ]
    },
    "adaptive_scheduler.client_support.ctx": {
     "line number": [
      38
     ]
    },
    "adaptive_scheduler.client_support.log": {
     "line number": [
      37,
      41,
      43,
      46,
      49,
      53,
      65,
      68
     ]
    },
    "adaptive_scheduler.client_support.socket": {
     "line number": [
      38,
      39,
      40,
      42
     ]
    },
    "adaptive_scheduler.client_support.zmq": {
     "line number": [
      38
     ]
    },
    "isinstance": {
     "line number": [
      48
     ]
    },
    "maybe_lst": {
     "line number": [
      62
     ]
    },
    "next": {
     "line number": [
      62
     ]
    },
    "str": {
     "line number": [
      18,
      18,
      43
     ]
    },
    "typing.List": {
     "line number": [
      18,
      18
     ]
    },
    "zip": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.get_learner.maybe_lst": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      56
     ]
    },
    "list": {
     "line number": [
      58
     ]
    },
    "str": {
     "line number": [
      55,
      55
     ]
    },
    "tuple": {
     "line number": [
      56
     ]
    },
    "typing.Tuple": {
     "line number": [
      55
     ]
    },
    "typing.Union": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.log": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "adaptive_scheduler.client_support.log_info": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "adaptive.AsyncRunner": {
     "line number": [
      123
     ]
    },
    "adaptive_scheduler.client_support._get_log_entry": {
     "line number": [
      144,
      147
     ]
    },
    "adaptive_scheduler.client_support._get_npoints": {
     "line number": [
      140
     ]
    },
    "adaptive_scheduler.client_support.asyncio": {
     "line number": [
      143,
      123
     ]
    },
    "adaptive_scheduler.client_support.log": {
     "line number": [
      138,
      141,
      145,
      146,
      147
     ]
    },
    "adaptive_scheduler.client_support.socket": {
     "line number": [
      138
     ]
    },
    "coro": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.structlog": {
  "data": {
   "shadows": "structlog"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive_scheduler.client_support.tell_done": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "adaptive_scheduler.client_support.ctx": {
     "line number": [
      84
     ]
    },
    "adaptive_scheduler.client_support.log": {
     "line number": [
      83,
      87
     ]
    },
    "adaptive_scheduler.client_support.socket": {
     "line number": [
      84,
      85,
      86,
      88
     ]
    },
    "adaptive_scheduler.client_support.zmq": {
     "line number": [
      84
     ]
    },
    "str": {
     "line number": [
      72,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.client_support.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs": {
  "data": {
   "shadows": "adaptive_scheduler.pbs"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs._cancel_function": {
  "data": {
   "shadows": "adaptive_scheduler.utils._cancel_function"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs._fix_line_cuts": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs._guess_cores_per_node": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "adaptive_scheduler.pbs._qnodes": {
     "line number": [
      256
     ]
    },
    "adaptive_scheduler.pbs.collections": {
     "line number": [
      257
     ]
    },
    "int": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs._qnodes": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      244
     ]
    },
    "adaptive_scheduler.pbs._fix_line_cuts": {
     "line number": [
      249
     ]
    },
    "adaptive_scheduler.pbs._split_by_job": {
     "line number": [
      246
     ]
    },
    "adaptive_scheduler.pbs.subprocess": {
     "line number": [
      240
     ]
    },
    "dict": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs._split_by_job": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs.cancel": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "adaptive_scheduler.pbs.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.ext": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "adaptive_scheduler.pbs.get_job_id": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "adaptive_scheduler.pbs.os": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.make_job_script": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      86,
      88
     ]
    },
    "NotImplementedError": {
     "line number": [
      110,
      135
     ]
    },
    "ValueError": {
     "line number": [
      92
     ]
    },
    "adaptive_scheduler.pbs._guess_cores_per_node": {
     "line number": [
      77
     ]
    },
    "adaptive_scheduler.pbs.math": {
     "line number": [
      78
     ]
    },
    "adaptive_scheduler.pbs.sys": {
     "line number": [
      96
     ]
    },
    "adaptive_scheduler.pbs.textwrap": {
     "line number": [
      116,
      137
     ]
    },
    "adaptive_scheduler.pbs.warnings": {
     "line number": [
      84
     ]
    },
    "float": {
     "line number": [
      91
     ]
    },
    "int": {
     "line number": [
      94
     ]
    },
    "round": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.queue": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      219
     ]
    },
    "adaptive_scheduler.pbs._fix_line_cuts": {
     "line number": [
      226
     ]
    },
    "adaptive_scheduler.pbs._split_by_job": {
     "line number": [
      221
     ]
    },
    "adaptive_scheduler.pbs.getpass": {
     "line number": [
      208
     ]
    },
    "adaptive_scheduler.pbs.os": {
     "line number": [
      214
     ]
    },
    "adaptive_scheduler.pbs.subprocess": {
     "line number": [
      210
     ]
    },
    "dict": {
     "line number": [
      214,
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.pbs.submit_cmd": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "adaptive_scheduler.pbs.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "adaptive_scheduler.pbs.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner": {
  "data": {
   "symbols_in_volume": {
    "adaptive_scheduler.sequence_learner.sys": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "adaptive_scheduler.sequence_learner.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "adaptive.learner.base_learner.BaseLearner": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "adaptive_scheduler.sequence_learner.ensure_hashable": {
     "line number": [
      27
     ]
    },
    "copy.copy": {
     "line number": [
      29
     ]
    },
    "len": {
     "line number": [
      28
     ]
    },
    "set": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner._get_data": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner._set_data": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "zip": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.ask": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "adaptive_scheduler.sequence_learner.inf": {
     "line number": [
      40
     ]
    },
    "len": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.done": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.loss": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "adaptive_scheduler.sequence_learner.inf": {
     "line number": [
      60
     ]
    },
    "len": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.npoints": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "len": {
     "line number": [
      87
     ]
    },
    "property": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.remove_unfinished": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "set": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.result": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      82
     ]
    },
    "adaptive_scheduler.sequence_learner.ensure_hashable": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.tell": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.SequenceLearner.tell_pending": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner.ensure_hashable": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      14
     ]
    },
    "adaptive_scheduler.sequence_learner.warnings": {
     "line number": [
      17,
      20
     ]
    },
    "dict": {
     "line number": [
      16
     ]
    },
    "hash": {
     "line number": [
      12
     ]
    },
    "isinstance": {
     "line number": [
      16
     ]
    },
    "tuple": {
     "line number": [
      18,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.sequence_learner.inf": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "adaptive_scheduler.sequence_learner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive_scheduler.sequence_learner.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support": {
  "data": {
   "shadows": "adaptive_scheduler.server_support"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Button": {
  "data": {
   "shadows": "ipywidgets.Button"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Coroutine": {
  "data": {
   "shadows": "typing.Coroutine"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.HBox": {
  "data": {
   "shadows": "ipywidgets.HBox"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.HTML": {
  "data": {
   "shadows": "ipywidgets.HTML"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Layout": {
  "data": {
   "shadows": "ipywidgets.Layout"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.MaxRestartsReached": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "adaptive_scheduler.server_support.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Query": {
  "data": {
   "shadows": "tinydb.Query"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.RunManager": {
  "data": {
   "lineno": 546
  },
  "type": "class"
 },
 "adaptive_scheduler.server_support.RunManager.__init__": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      717
     ]
    },
    "adaptive_scheduler._scheduler.make_job_script": {
     "line number": [
      666
     ]
    },
    "adaptive_scheduler.server_support.adaptive": {
     "line number": [
      657
     ]
    },
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      711
     ]
    },
    "adaptive_scheduler.server_support.get_allowed_url": {
     "line number": [
      707
     ]
    },
    "adaptive_scheduler.server_support.job_name": {
     "line number": [
      685
     ]
    },
    "bool": {
     "line number": [
      657,
      670,
      674
     ]
    },
    "dict": {
     "line number": [
      658
     ]
    },
    "int": {
     "line number": [
      655,
      661,
      662,
      665,
      668,
      669
     ]
    },
    "job_script_function": {
     "line number": [
      686,
      713
     ]
    },
    "str": {
     "line number": [
      656,
      659,
      660,
      663,
      665,
      665,
      665,
      665,
      670,
      670,
      671,
      672,
      673,
      675,
      676
     ]
    },
    "typing.Any": {
     "line number": [
      675,
      676
     ]
    },
    "typing.Callable": {
     "line number": [
      657,
      664,
      670
     ]
    },
    "typing.Dict": {
     "line number": [
      675,
      676
     ]
    },
    "typing.List": {
     "line number": [
      670
     ]
    },
    "typing.Optional": {
     "line number": [
      656,
      657,
      658,
      659,
      665,
      671,
      675,
      676
     ]
    },
    "typing.Union": {
     "line number": [
      667,
      670
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._check_job_script_function": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": {
    "adaptive_scheduler._scheduler.make_job_script": {
     "line number": [
      744,
      747
     ]
    },
    "adaptive_scheduler.server_support.functools": {
     "line number": [
      763
     ]
    },
    "adaptive_scheduler.server_support.warnings": {
     "line number": [
      762
     ]
    },
    "adaptive_scheduler.utils._get_default_args": {
     "line number": [
      759
     ]
    },
    "getattr": {
     "line number": [
      760
     ]
    },
    "hasattr": {
     "line number": [
      744,
      744
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._get_learners_file": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": {
    "importlib.util.module_from_spec": {
     "line number": [
      770
     ]
    },
    "importlib.util.spec_from_file_location": {
     "line number": [
      769
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._info_html": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      988
     ]
    },
    "adaptive_scheduler._scheduler.queue": {
     "line number": [
      966
     ]
    },
    "adaptive_scheduler.server_support.datetime": {
     "line number": [
      985
     ]
    },
    "adaptive_scheduler.server_support.n_done": {
     "line number": [
      969,
      984
     ]
    },
    "contextlib.suppress": {
     "line number": [
      988
     ]
    },
    "str": {
     "line number": [
      965
     ]
    },
    "sum": {
     "line number": [
      967,
      968,
      969
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._repr_html_": {
  "data": {
   "lineno": 1009
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._set_job_names": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": {
    "len": {
     "line number": [
      781
     ]
    },
    "range": {
     "line number": [
      781
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._start_database_manager": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.start_database_manager": {
     "line number": [
      808
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._start_job_manager": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support._make_default_run_script": {
     "line number": [
      786
     ]
    },
    "adaptive_scheduler.server_support.start_job_manager": {
     "line number": [
      797
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._start_kill_manager": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.start_kill_manager": {
     "line number": [
      813
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager._write_db": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.create_empty_db": {
     "line number": [
      777
     ]
    },
    "adaptive_scheduler.server_support.os": {
     "line number": [
      775
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.cancel": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": {
    "adaptive_scheduler._scheduler.cancel": {
     "line number": [
      828
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.cleanup": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      838
     ]
    },
    "adaptive_scheduler._scheduler.queue": {
     "line number": [
      842
     ]
    },
    "adaptive_scheduler.server_support.os": {
     "line number": [
      840
     ]
    },
    "adaptive_scheduler.utils._delete_old_ipython_profiles": {
     "line number": [
      844
     ]
    },
    "adaptive_scheduler.utils.cleanup_files": {
     "line number": [
      845
     ]
    },
    "contextlib.suppress": {
     "line number": [
      838
     ]
    },
    "set": {
     "line number": [
      842
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.elapsed_time": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.time": {
     "line number": [
      897
     ]
    },
    "float": {
     "line number": [
      885
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.get_database": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.get_database": {
     "line number": [
      877
     ]
    },
    "str": {
     "line number": [
      875
     ]
    },
    "typing.Any": {
     "line number": [
      875
     ]
    },
    "typing.Dict": {
     "line number": [
      875
     ]
    },
    "typing.List": {
     "line number": [
      875
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": {
    "IPython.display.display": {
     "line number": [
      958
     ]
    },
    "adaptive_scheduler._scheduler.cancel": {
     "line number": [
      953
     ]
    },
    "ipywidgets.Button": {
     "line number": [
      932,
      933,
      934
     ]
    },
    "ipywidgets.HBox": {
     "line number": [
      959
     ]
    },
    "ipywidgets.HTML": {
     "line number": [
      928
     ]
    },
    "ipywidgets.Layout": {
     "line number": [
      930,
      961
     ]
    },
    "ipywidgets.VBox": {
     "line number": [
      957
     ]
    },
    "list": {
     "line number": [
      957
     ]
    },
    "update": {
     "line number": [
      955
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.cancel": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": {
    "update": {
     "line number": [
      947
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.cleanup": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": {
    "update": {
     "line number": [
      951
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.info.update": {
  "data": {
   "lineno": 942
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.load_learners": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.load_parallel": {
     "line number": [
      883
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.parse_log_files": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.parse_log_files": {
     "line number": [
      862
     ]
    },
    "bool": {
     "line number": [
      847
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.start": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": {
    "_start": {
     "line number": [
      733
     ]
    },
    "adaptive_scheduler.server_support.time": {
     "line number": [
      724,
      732
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.status": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      910
     ]
    },
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      906,
      908
     ]
    },
    "adaptive_scheduler.server_support.time": {
     "line number": [
      916
     ]
    },
    "str": {
     "line number": [
      900
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.RunManager.task_status": {
  "data": {
   "lineno": 866
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.TinyDB": {
  "data": {
   "shadows": "tinydb.TinyDB"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.VBox": {
  "data": {
   "shadows": "ipywidgets.VBox"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support._DATABASE_MANAGER_DOC": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support._JOB_MANAGER_DOC": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support._KILL_MANAGER_DOC": {
  "data": {
   "lineno": 395
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support._choose_fname": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      332
     ]
    },
    "adaptive_scheduler.server_support.log": {
     "line number": [
      339
     ]
    },
    "str": {
     "line number": [
      326,
      326,
      326
     ]
    },
    "tinydb.Query": {
     "line number": [
      327
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._delete_old_ipython_profiles": {
  "data": {
   "shadows": "adaptive_scheduler.utils._delete_old_ipython_profiles"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support._dispatch": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      57
     ]
    },
    "adaptive_scheduler.server_support._choose_fname": {
     "line number": [
      50
     ]
    },
    "adaptive_scheduler.server_support._done_with_learner": {
     "line number": [
      56
     ]
    },
    "adaptive_scheduler.server_support.log": {
     "line number": [
      45,
      51,
      55
     ]
    },
    "str": {
     "line number": [
      43,
      43,
      43
     ]
    },
    "typing.Tuple": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._done_with_learner": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "str": {
     "line number": [
      346,
      346
     ]
    },
    "tinydb.Query": {
     "line number": [
      347
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._get_default_args": {
  "data": {
   "shadows": "adaptive_scheduler.utils._get_default_args"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support._get_n_jobs_done": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "int": {
     "line number": [
      352
     ]
    },
    "str": {
     "line number": [
      352
     ]
    },
    "tinydb.Query": {
     "line number": [
      353
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._make_default_run_script": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      475
     ]
    },
    "ModuleNotFoundError": {
     "line number": [
      473
     ]
    },
    "NotImplementedError": {
     "line number": [
      479
     ]
    },
    "RuntimeError": {
     "line number": [
      482
     ]
    },
    "adaptive_scheduler.server_support.adaptive": {
     "line number": [
      451
     ]
    },
    "adaptive_scheduler.server_support.dill": {
     "line number": [
      458
     ]
    },
    "adaptive_scheduler.server_support.os": {
     "line number": [
      481,
      487
     ]
    },
    "adaptive_scheduler.server_support.textwrap": {
     "line number": [
      489
     ]
    },
    "bool": {
     "line number": [
      451
     ]
    },
    "dict": {
     "line number": [
      456,
      457
     ]
    },
    "int": {
     "line number": [
      449,
      450
     ]
    },
    "open": {
     "line number": [
      541
     ]
    },
    "str": {
     "line number": [
      447,
      448,
      452,
      453,
      454
     ]
    },
    "typing.Any": {
     "line number": [
      452
     ]
    },
    "typing.Callable": {
     "line number": [
      451
     ]
    },
    "typing.Dict": {
     "line number": [
      452
     ]
    },
    "typing.Optional": {
     "line number": [
      451,
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._remove_or_move_files": {
  "data": {
   "shadows": "adaptive_scheduler.utils._remove_or_move_files"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support._start_job": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "adaptive_scheduler._scheduler.ext": {
     "line number": [
      270
     ]
    },
    "adaptive_scheduler._scheduler.ext.split": {
     "line number": [
      277
     ]
    },
    "adaptive_scheduler._scheduler.submit_cmd.split": {
     "line number": [
      277
     ]
    },
    "adaptive_scheduler.server_support.subprocess": {
     "line number": [
      276,
      277
     ]
    },
    "adaptive_scheduler.server_support.time": {
     "line number": [
      279
     ]
    },
    "job_script_function": {
     "line number": [
      271
     ]
    },
    "open": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support._update_db": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.running": {
     "line number": [
      322
     ]
    },
    "dict": {
     "line number": [
      319
     ]
    },
    "str": {
     "line number": [
      319,
      319
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      321
     ]
    },
    "typing.Dict": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.adaptive": {
  "data": {
   "shadows": "adaptive"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.cancel": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.cancel"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.cleanup_files": {
  "data": {
   "shadows": "adaptive_scheduler.utils.cleanup_files"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.create_empty_db": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.os": {
     "line number": [
      307,
      308
     ]
    },
    "dict": {
     "line number": [
      306
     ]
    },
    "str": {
     "line number": [
      296,
      296
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      309
     ]
    },
    "typing.List": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.ctx": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.dask_mpi": {
  "data": {
   "shadows": "dask_mpi"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.dill": {
  "data": {
   "shadows": "dill"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.ext": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.ext"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.failed_jobs": {
  "data": {
   "lineno": 374
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.get_allowed_url": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.socket": {
     "line number": [
      291,
      291
     ]
    },
    "adaptive_scheduler.server_support.zmq": {
     "line number": [
      292
     ]
    },
    "str": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.get_database": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "str": {
     "line number": [
      313,
      313
     ]
    },
    "tinydb.TinyDB": {
     "line number": [
      315
     ]
    },
    "typing.Any": {
     "line number": [
      313
     ]
    },
    "typing.Dict": {
     "line number": [
      313
     ]
    },
    "typing.List": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.job_name": {
  "data": {
   "lineno": 380
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.load_parallel": {
  "data": {
   "shadows": "adaptive_scheduler.utils.load_parallel"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.log": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.logs_with_string_or_condition": {
  "data": {
   "shadows": "adaptive_scheduler.utils.logs_with_string_or_condition"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.make_job_script": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.make_job_script"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.max_job_starts": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.module_from_spec": {
  "data": {
   "shadows": "importlib.util.module_from_spec"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.n_done": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.n_started": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.not_queued": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.parse_log_files": {
  "data": {
   "shadows": "adaptive_scheduler.utils.parse_log_files"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.queue": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.queue"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.queued": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.reply": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.request": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.running": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.socket": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.spec_from_file_location": {
  "data": {
   "shadows": "importlib.util.spec_from_file_location"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.start_database_manager": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      98,
      97
     ]
    },
    "manage_database": {
     "line number": [
      99
     ]
    },
    "str": {
     "line number": [
      97,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.start_job_manager": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "adaptive_scheduler._scheduler.make_job_script": {
     "line number": [
      240
     ]
    },
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      248,
      247
     ]
    },
    "int": {
     "line number": [
      237,
      239,
      243,
      245,
      246
     ]
    },
    "manage_jobs": {
     "line number": [
      249
     ]
    },
    "str": {
     "line number": [
      235,
      236,
      239,
      239,
      239,
      239,
      241,
      242
     ]
    },
    "typing.Callable": {
     "line number": [
      238
     ]
    },
    "typing.List": {
     "line number": [
      235
     ]
    },
    "typing.Optional": {
     "line number": [
      239,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.start_kill_manager": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "adaptive_scheduler.server_support.asyncio": {
     "line number": [
      436,
      435
     ]
    },
    "bool": {
     "line number": [
      431
     ]
    },
    "int": {
     "line number": [
      432,
      433
     ]
    },
    "manage_killer": {
     "line number": [
      437
     ]
    },
    "str": {
     "line number": [
      430,
      431,
      431,
      434
     ]
    },
    "typing.Callable": {
     "line number": [
      431
     ]
    },
    "typing.List": {
     "line number": [
      430,
      431
     ]
    },
    "typing.Optional": {
     "line number": [
      434
     ]
    },
    "typing.Union": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.server_support.structlog": {
  "data": {
   "shadows": "structlog"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.submit_cmd": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.submit_cmd"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.to_cancel": {
  "data": {
   "lineno": 375
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.to_delete": {
  "data": {
   "lineno": 376
  },
  "type": "constant"
 },
 "adaptive_scheduler.server_support.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.zmq.asyncio": {
  "data": {
   "shadows": "zmq.asyncio"
  },
  "type": "import"
 },
 "adaptive_scheduler.server_support.zmq.ssh": {
  "data": {
   "shadows": "zmq.ssh"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm": {
  "data": {
   "shadows": "adaptive_scheduler.slurm"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm._cancel_function": {
  "data": {
   "shadows": "adaptive_scheduler.utils._cancel_function"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm.cancel": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "adaptive_scheduler.slurm.ext": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "adaptive_scheduler.slurm.get_job_id": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "adaptive_scheduler.slurm.os": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.slurm.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm.make_job_script": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      103
     ]
    },
    "ValueError": {
     "line number": [
      78
     ]
    },
    "adaptive_scheduler.slurm.os": {
     "line number": [
      106,
      107
     ]
    },
    "adaptive_scheduler.slurm.sys": {
     "line number": [
      63
     ]
    },
    "adaptive_scheduler.slurm.textwrap": {
     "line number": [
      84,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.slurm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm.queue": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      175
     ]
    },
    "adaptive_scheduler.slurm.getpass": {
     "line number": [
      165
     ]
    },
    "adaptive_scheduler.slurm.subprocess": {
     "line number": [
      167
     ]
    },
    "line_to_dict": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.slurm.queue.line_to_dict": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "list": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.slurm.submit_cmd": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "adaptive_scheduler.slurm.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive_scheduler.slurm.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils": {
  "data": {
   "shadows": "adaptive_scheduler.utils"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Client": {
  "data": {
   "shadows": "ipyparallel.Client"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.MAX_LINE_LENGTH": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "adaptive_scheduler.utils.NoEnginesRegistered": {
  "data": {
   "shadows": "ipyparallel.error.NoEnginesRegistered"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.ThreadPoolExecutor": {
  "data": {
   "shadows": "concurrent.futures.ThreadPoolExecutor"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils._cancel_function": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "str": {
     "line number": [
      99
     ]
    },
    "typing.Callable": {
     "line number": [
      99,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._cancel_function.cancel": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      101
     ]
    },
    "cancel_jobs": {
     "line number": [
      135
     ]
    },
    "int": {
     "line number": [
      101
     ]
    },
    "range": {
     "line number": [
      130
     ]
    },
    "set": {
     "line number": [
      129
     ]
    },
    "str": {
     "line number": [
      101
     ]
    },
    "to_cancel": {
     "line number": [
      131
     ]
    },
    "typing.List": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._cancel_function.cancel.cancel_jobs": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      127
     ]
    },
    "adaptive_scheduler.utils._progress": {
     "line number": [
      123
     ]
    },
    "adaptive_scheduler.utils.subprocess": {
     "line number": [
      125,
      125
     ]
    },
    "adaptive_scheduler.utils.warnings": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._cancel_function.cancel.to_cancel": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "queue_function": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._delete_old_ipython_profiles": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "adaptive_scheduler.utils._progress": {
     "line number": [
      161,
      165
     ]
    },
    "adaptive_scheduler.utils.glob": {
     "line number": [
      153
     ]
    },
    "adaptive_scheduler.utils.os": {
     "line number": [
      153
     ]
    },
    "adaptive_scheduler.utils.shutil": {
     "line number": [
      164
     ]
    },
    "concurrent.futures.ThreadPoolExecutor": {
     "line number": [
      160
     ]
    },
    "str": {
     "line number": [
      148
     ]
    },
    "typing.Set": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._get_default_args": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.inspect": {
     "line number": [
      522,
      526
     ]
    },
    "str": {
     "line number": [
      521,
      521
     ]
    },
    "typing.Callable": {
     "line number": [
      521
     ]
    },
    "typing.Dict": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._get_status_prints": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      301
     ]
    },
    "open": {
     "line number": [
      303
     ]
    },
    "reversed": {
     "line number": [
      307
     ]
    },
    "str": {
     "line number": [
      301,
      302
     ]
    },
    "typing.List": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._print_same_line": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.MAX_LINE_LENGTH": {
     "line number": [
      460,
      460,
      461
     ]
    },
    "bool": {
     "line number": [
      457
     ]
    },
    "len": {
     "line number": [
      460,
      461
     ]
    },
    "max": {
     "line number": [
      460,
      461
     ]
    },
    "print": {
     "line number": [
      462
     ]
    },
    "str": {
     "line number": [
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._progress": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "adaptive.notebook_integration.in_ipynb": {
     "line number": [
      93
     ]
    },
    "bool": {
     "line number": [
      89
     ]
    },
    "list": {
     "line number": [
      94,
      96
     ]
    },
    "str": {
     "line number": [
      89
     ]
    },
    "tqdm.tqdm": {
     "line number": [
      96
     ]
    },
    "tqdm.tqdm_notebook": {
     "line number": [
      94
     ]
    },
    "typing.Any": {
     "line number": [
      89
     ]
    },
    "typing.Sequence": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._remove_or_move_files": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      236
     ]
    },
    "adaptive_scheduler.utils._progress": {
     "line number": [
      229
     ]
    },
    "adaptive_scheduler.utils.os": {
     "line number": [
      232,
      234
     ]
    },
    "adaptive_scheduler.utils.shutil": {
     "line number": [
      235
     ]
    },
    "adaptive_scheduler.utils.warnings": {
     "line number": [
      240
     ]
    },
    "bool": {
     "line number": [
      210
     ]
    },
    "str": {
     "line number": [
      209,
      211,
      212
     ]
    },
    "typing.List": {
     "line number": [
      209
     ]
    },
    "typing.Optional": {
     "line number": [
      211,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._split": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      35
     ]
    },
    "int": {
     "line number": [
      33
     ]
    },
    "typing.Sequence": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils._wait_for_successful_ipyparallel_client_start": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      481
     ]
    },
    "adaptive_scheduler.utils._print_same_line": {
     "line number": [
      475
     ]
    },
    "adaptive_scheduler.utils.time": {
     "line number": [
      479
     ]
    },
    "contextlib.suppress": {
     "line number": [
      471
     ]
    },
    "int": {
     "line number": [
      465,
      465
     ]
    },
    "ipyparallel.error.NoEnginesRegistered": {
     "line number": [
      471
     ]
    },
    "len": {
     "line number": [
      470
     ]
    },
    "range": {
     "line number": [
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.adaptive": {
  "data": {
   "shadows": "adaptive"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.cleanup_files": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "adaptive_scheduler.utils._remove_or_move_files": {
     "line number": [
      203
     ]
    },
    "adaptive_scheduler.utils.glob": {
     "line number": [
      197,
      201
     ]
    },
    "adaptive_scheduler.utils.os": {
     "line number": [
      201
     ]
    },
    "bool": {
     "line number": [
      172
     ]
    },
    "str": {
     "line number": [
      170,
      171,
      173,
      174,
      193
     ]
    },
    "typing.List": {
     "line number": [
      170,
      171,
      193
     ]
    },
    "typing.Optional": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.combo_to_fname": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.os": {
     "line number": [
      145
     ]
    },
    "str": {
     "line number": [
      140,
      140,
      140
     ]
    },
    "typing.Any": {
     "line number": [
      140
     ]
    },
    "typing.Dict": {
     "line number": [
      140
     ]
    },
    "typing.Optional": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.connect_to_ipyparallel": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "adaptive_scheduler.utils._wait_for_successful_ipyparallel_client_start": {
     "line number": [
      510
     ]
    },
    "int": {
     "line number": [
      485,
      487
     ]
    },
    "ipyparallel.Client": {
     "line number": [
      509
     ]
    },
    "print": {
     "line number": [
      514
     ]
    },
    "str": {
     "line number": [
      486,
      488
     ]
    },
    "typing.Optional": {
     "line number": [
      488
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.get_database": {
  "data": {
   "shadows": "adaptive_scheduler.server_support.get_database"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.in_ipynb": {
  "data": {
   "shadows": "adaptive.notebook_integration.in_ipynb"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.load_parallel": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "adaptive_scheduler.utils._progress": {
     "line number": [
      266,
      268
     ]
    },
    "adaptive_scheduler.utils.adaptive": {
     "line number": [
      244
     ]
    },
    "bool": {
     "line number": [
      247
     ]
    },
    "concurrent.futures.ThreadPoolExecutor": {
     "line number": [
      264
     ]
    },
    "str": {
     "line number": [
      245
     ]
    },
    "typing.List": {
     "line number": [
      244,
      245
     ]
    },
    "zip": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.load_parallel.load": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.logs_with_string_or_condition": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.collections": {
     "line number": [
      443
     ]
    },
    "adaptive_scheduler.utils.glob": {
     "line number": [
      445
     ]
    },
    "bool": {
     "line number": [
      417
     ]
    },
    "callable": {
     "line number": [
      440
     ]
    },
    "dict": {
     "line number": [
      454
     ]
    },
    "has_error": {
     "line number": [
      452
     ]
    },
    "isinstance": {
     "line number": [
      438
     ]
    },
    "list": {
     "line number": [
      443,
      418
     ]
    },
    "open": {
     "line number": [
      450
     ]
    },
    "str": {
     "line number": [
      417,
      417,
      417,
      438,
      443,
      443,
      418
     ]
    },
    "typing.Callable": {
     "line number": [
      417
     ]
    },
    "typing.Dict": {
     "line number": [
      443,
      418
     ]
    },
    "typing.List": {
     "line number": [
      417,
      417,
      443
     ]
    },
    "typing.Union": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.parse_log_files": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      347
     ]
    },
    "adaptive_scheduler._scheduler.queue": {
     "line number": [
      398
     ]
    },
    "adaptive_scheduler.server_support.get_database": {
     "line number": [
      406
     ]
    },
    "adaptive_scheduler.utils._get_status_prints": {
     "line number": [
      383
     ]
    },
    "adaptive_scheduler.utils.glob": {
     "line number": [
      379
     ]
    },
    "adaptive_scheduler.utils.os": {
     "line number": [
      379
     ]
    },
    "adaptive_scheduler.utils.time": {
     "line number": [
      387,
      392
     ]
    },
    "adaptive_scheduler.utils.warnings": {
     "line number": [
      349
     ]
    },
    "bool": {
     "line number": [
      317
     ]
    },
    "convert_type": {
     "line number": [
      390
     ]
    },
    "datetime.datetime.strptime": {
     "line number": [
      392
     ]
    },
    "dict": {
     "line number": [
      389
     ]
    },
    "join_str": {
     "line number": [
      388
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      413
     ]
    },
    "str": {
     "line number": [
      316,
      318,
      319
     ]
    },
    "typing.List": {
     "line number": [
      316
     ]
    },
    "typing.Optional": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.parse_log_files.convert_type": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.ast": {
     "line number": [
      361
     ]
    },
    "float": {
     "line number": [
      359
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.parse_log_files.join_str": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.queue": {
  "data": {
   "shadows": "adaptive_scheduler._scheduler.queue"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.save_parallel": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "adaptive_scheduler.utils._progress": {
     "line number": [
      295,
      297
     ]
    },
    "adaptive_scheduler.utils.adaptive": {
     "line number": [
      273
     ]
    },
    "bool": {
     "line number": [
      276
     ]
    },
    "concurrent.futures.ThreadPoolExecutor": {
     "line number": [
      293
     ]
    },
    "str": {
     "line number": [
      274
     ]
    },
    "typing.List": {
     "line number": [
      273,
      274
     ]
    },
    "zip": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.save_parallel.save": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.shuffle_list": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.random": {
     "line number": [
      29
     ]
    },
    "list": {
     "line number": [
      28
     ]
    },
    "zip": {
     "line number": [
      28,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.split": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.math": {
     "line number": [
      52
     ]
    },
    "adaptive_scheduler.utils.toolz": {
     "line number": [
      53
     ]
    },
    "int": {
     "line number": [
      38
     ]
    },
    "len": {
     "line number": [
      52
     ]
    },
    "list": {
     "line number": [
      51
     ]
    },
    "typing.Sequence": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.split_in_balancing_learners": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "adaptive_scheduler.utils.adaptive": {
     "line number": [
      57,
      83,
      61
     ]
    },
    "adaptive_scheduler.utils.split": {
     "line number": [
      81
     ]
    },
    "int": {
     "line number": [
      59
     ]
    },
    "str": {
     "line number": [
      58,
      60,
      61
     ]
    },
    "typing.List": {
     "line number": [
      57,
      58,
      61,
      61
     ]
    },
    "typing.Tuple": {
     "line number": [
      61
     ]
    },
    "zip": {
     "line number": [
      81,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "adaptive_scheduler.utils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.toolz": {
  "data": {
   "shadows": "toolz"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.tqdm_notebook": {
  "data": {
   "shadows": "tqdm.tqdm_notebook"
  },
  "type": "import"
 },
 "adaptive_scheduler.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}