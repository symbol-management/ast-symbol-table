{
 "elpigraph": {
  "data": {},
  "type": "module"
 },
 "elpigraph._AlterStructure": {
  "data": {},
  "type": "module"
 },
 "elpigraph._AlterStructure.CollapseBranches": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ConstructGraph",
    "GetSubGraph",
    "PartitionData",
    "all",
    "any",
    "dict",
    "elpigraph._AlterStructure.copy",
    "float",
    "len",
    "list",
    "map",
    "numpy.any",
    "numpy.append",
    "numpy.array",
    "numpy.isin",
    "numpy.isnan",
    "numpy.mean",
    "numpy.repeat",
    "numpy.sum",
    "numpy.unique",
    "numpy.vstack",
    "numpy.where",
    "print",
    "project_point_onto_graph",
    "range",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "elpigraph._AlterStructure.ExtendLeaves": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ConstructGraph",
    "DistFun",
    "PartialDistance",
    "PartitionData",
    "ValueError",
    "elpigraph._AlterStructure.copy",
    "float",
    "len",
    "list",
    "map",
    "numpy.any",
    "numpy.append",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.array",
    "numpy.hstack",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.nan",
    "numpy.quantile",
    "numpy.repeat",
    "numpy.sum",
    "numpy.vstack",
    "numpy.where",
    "print",
    "project_point_onto_edge",
    "range",
    "set",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "elpigraph._AlterStructure.ExtendLeaves.DistFun": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.quantile",
    "numpy.vstack",
    "project_point_onto_edge"
   ]
  },
  "type": "function"
 },
 "elpigraph._AlterStructure.ShiftBranching": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "ConstructGraph",
    "PartialDistance",
    "PartitionData",
    "ValueError",
    "dict",
    "elpigraph._AlterStructure.copy",
    "elpigraph._AlterStructure.warnings",
    "float",
    "len",
    "list",
    "map",
    "numpy.argsort",
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "numpy.sum",
    "numpy.where",
    "print",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "elpigraph._AlterStructure.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "elpigraph._AlterStructure.igraph": {
  "data": {
   "shadows": "igraph"
  },
  "type": "import"
 },
 "elpigraph._AlterStructure.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph._AlterStructure.scipy.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "elpigraph._AlterStructure.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "elpigraph._BaseElPiWrapper": {
  "data": {},
  "type": "module"
 },
 "elpigraph._BaseElPiWrapper.computeElasticPrincipalGraphWithGrammars": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Encode2ElasticMatrix",
    "PartialDistance",
    "PrimitiveElasticGraphEmbedment",
    "PrimitiveElasticGraphEmbedment_cp",
    "computeElasticPrincipalGraph",
    "elpigraph._BaseElPiWrapper.cupy",
    "float",
    "generateInitialConfiguration",
    "len",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.finfo",
    "numpy.min",
    "numpy.random.uniform",
    "numpy.sum",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph._BaseElPiWrapper.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "elpigraph._BaseElPiWrapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph._EMAdjustment": {
  "data": {},
  "type": "module"
 },
 "elpigraph._EMAdjustment.AdjustByConstant": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.sum",
    "numpy.where",
    "print"
   ]
  },
  "type": "function"
 },
 "elpigraph._EMAdjustment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph._plotting": {
  "data": {},
  "type": "module"
 },
 "elpigraph._plotting.PlotPG": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "PCA",
    "PartitionData",
    "ValueError",
    "any",
    "dict",
    "float",
    "itertools.combinations",
    "len",
    "list",
    "numpy.dot",
    "numpy.sum",
    "numpy.var",
    "pandas.DataFrame.from_dict",
    "project_point_onto_graph",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "elpigraph._plotting.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "elpigraph._plotting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph._plotting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "elpigraph._plotting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "elpigraph._topologies": {
  "data": {},
  "type": "module"
 },
 "elpigraph._topologies.GrowLeaves": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "elpigraph._topologies.elpigraph",
    "float",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "elpigraph._topologies.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "elpigraph._topologies.computeElasticPrincipalCircle": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "elpigraph._topologies.elpigraph",
    "float",
    "list",
    "numpy.array",
    "print"
   ]
  },
  "type": "function"
 },
 "elpigraph._topologies.computeElasticPrincipalCurve": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "elpigraph._topologies.elpigraph",
    "float",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "elpigraph._topologies.computeElasticPrincipalTree": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "elpigraph._topologies.elpigraph",
    "float",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "elpigraph._topologies.elpigraph": {
  "data": {
   "shadows": "elpigraph"
  },
  "type": "import"
 },
 "elpigraph._topologies.fineTuneBR": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "elpigraph._topologies.elpigraph",
    "float",
    "len",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "elpigraph._topologies.generateInitialConfiguration": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "PCA",
    "PartialDistance",
    "TruncPCA",
    "ValueError",
    "abs",
    "dict",
    "int",
    "len",
    "max",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.dot",
    "numpy.errstate",
    "numpy.isinf",
    "numpy.linspace",
    "numpy.mean",
    "numpy.pi",
    "numpy.random.choice",
    "numpy.sin",
    "numpy.std",
    "numpy.sum",
    "numpy.vstack",
    "numpy.where",
    "print",
    "sklearn.cluster.KMeans",
    "sum"
   ]
  },
  "type": "function"
 },
 "elpigraph._topologies.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph._version": {
  "data": {},
  "type": "module"
 },
 "elpigraph._version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "elpigraph.src": {
  "data": {},
  "type": "module"
 },
 "elpigraph.src.BaseElPi": {
  "data": {},
  "type": "module"
 },
 "elpigraph.src.BaseElPi.ElPrincGraph": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "AdjustElasticMatrix_Initial",
    "ApplyOptimalGraphGrammarOperation",
    "PartitionData",
    "PartitionData_cp",
    "PrimitiveElasticGraphEmbedment",
    "PrimitiveElasticGraphEmbedment_cp",
    "ReportOnPrimitiveGraphEmbedment",
    "TypeError",
    "ValueError",
    "dict",
    "elpigraph.src.BaseElPi.copy",
    "elpigraph.src.BaseElPi.cupy",
    "elpigraph.src.BaseElPi.isnumeric",
    "elpigraph.src.BaseElPi.time",
    "float",
    "isinstance",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.diag",
    "numpy.isinf",
    "numpy.ndarray",
    "numpy.round",
    "numpy.sum",
    "numpy.triu",
    "numpy.where",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.BaseElPi.computeElasticPrincipalGraph": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "AdjustElasticMatrix_Initial",
    "DecodeElasticMatrix",
    "Encode2ElasticMatrix",
    "PCA",
    "TruncPCA",
    "ValueError",
    "dict",
    "elpigraph.src.BaseElPi.ElPrincGraph",
    "elpigraph.src.BaseElPi.datetime",
    "elpigraph.src.BaseElPi.time",
    "float",
    "isinstance",
    "len",
    "max",
    "min",
    "numpy.array",
    "numpy.cumsum",
    "numpy.mean",
    "numpy.min",
    "numpy.round",
    "numpy.sum",
    "numpy.var",
    "numpy.where",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.BaseElPi.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "elpigraph.src.BaseElPi.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "elpigraph.src.BaseElPi.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "elpigraph.src.BaseElPi.isnumeric": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "elpigraph.src.BaseElPi.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "elpigraph.src.BaseElPi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph.src.BaseElPi.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "elpigraph.src.PCA": {
  "data": {},
  "type": "module"
 },
 "elpigraph.src.PCA.PCA": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.cov",
    "numpy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.PCA.PCA_gpu": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "elpigraph.src.PCA.cupy"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.PCA.TruncPCA": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.decomposition.TruncatedSVD"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.PCA.TruncSVD_gpu": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "elpigraph.src.PCA.cupy",
    "min",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.PCA.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "elpigraph.src.PCA.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "elpigraph.src.PCA.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "elpigraph.src.PCA.la": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "elpigraph.src.PCA.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph.src.core": {
  "data": {},
  "type": "module"
 },
 "elpigraph.src.core.ComputeRelativeChangeOfNodePositions": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numba.njit"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.core.ComputeSpringLaplacianMatrix": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "len",
    "numba.njit",
    "numpy.diag",
    "numpy.logical_and",
    "numpy.repeat",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.core.DecodeElasticMatrix": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.fill_diagonal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.core.DecodeElasticMatrix2": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.fill_diagonal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.core.Encode2ElasticMatrix": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.diag",
    "numpy.max",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.core.MakeUniformElasticMatrix": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.core.PartitionData": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.arange",
    "numpy.dot",
    "numpy.isinf",
    "numpy.newaxis",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.core.PartitionData_cp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "elpigraph.src.core.cupy",
    "float",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.core.PrimitiveElasticGraphEmbedment": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ComputePenalizedPrimitiveGraphElasticEnergy",
    "ComputePrimitiveGraphElasticEnergy",
    "FitGraph2DataGivenPartition",
    "ValueError",
    "elpigraph.src.core.ComputeRelativeChangeOfNodePositions",
    "elpigraph.src.core.ComputeSpringLaplacianMatrix",
    "elpigraph.src.core.PartitionData",
    "float",
    "numpy.around",
    "numpy.isfinite",
    "numpy.ones",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.core.PrimitiveElasticGraphEmbedment_cp": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "ComputePenalizedPrimitiveGraphElasticEnergy",
    "ComputePrimitiveGraphElasticEnergy",
    "FitGraph2DataGivenPartition",
    "ValueError",
    "elpigraph.src.core.ComputeRelativeChangeOfNodePositions",
    "elpigraph.src.core.ComputeSpringLaplacianMatrix",
    "elpigraph.src.core.PartitionData_cp",
    "float",
    "numpy.around",
    "numpy.isfinite",
    "numpy.ones",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.core.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "elpigraph.src.core.nb": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "elpigraph.src.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph.src.distutils": {
  "data": {},
  "type": "module"
 },
 "elpigraph.src.distutils.ComputePenalizedPrimitiveGraphElasticEnergy": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "len",
    "numba.njit",
    "numpy.diag",
    "numpy.dot",
    "numpy.maximum",
    "numpy.sum",
    "numpy.triu",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.distutils.ComputePrimitiveGraphElasticEnergy": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "numba.njit",
    "numpy.diag",
    "numpy.dot",
    "numpy.sum",
    "numpy.triu",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.distutils.ComputeWeightedAverage": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.newaxis.T",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.distutils.FitGraph2DataGivenPartition": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "elpigraph.src.distutils.ComputeWeightedAverage",
    "numpy.diag",
    "numpy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.distutils.PartialDistance": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "elpigraph.src.distutils.euclidean_distance_square_numba",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.distutils.RadialCount": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.matmul",
    "numpy.square",
    "numpy.sum",
    "numpy.transpose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.distutils.euclidean_distance_square_numba": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "elpigraph.src.distutils.sum_squares_2d_array_along_axis1",
    "numba.njit",
    "numpy.dot",
    "numpy.expand_dims",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.distutils.nb": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "elpigraph.src.distutils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph.src.distutils.sum_squares_2d_array_along_axis1": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numba.njit",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.grammar_operations": {
  "data": {},
  "type": "module"
 },
 "elpigraph.src.grammar_operations.AddNode2Node": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "float",
    "len",
    "numpy.array",
    "numpy.bincount",
    "numpy.fill_diagonal",
    "numpy.hstack",
    "numpy.isinf",
    "numpy.nonzero",
    "numpy.sum",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.grammar_operations.ApplyOptimalGraphGrammarOperation": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "AdjustByConstant",
    "PartitionData",
    "PartitionData_cp",
    "PrimitiveElasticGraphEmbedment",
    "PrimitiveElasticGraphEmbedment_cp",
    "all",
    "dict",
    "elpigraph.src.grammar_operations.GraphGrammarOperation",
    "elpigraph.src.grammar_operations.proxy",
    "elpigraph.src.grammar_operations.proxy_cp",
    "float",
    "len",
    "min",
    "multiprocessing.Pool",
    "numpy.array",
    "numpy.inf",
    "numpy.isin",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.grammar_operations.BisectEdge": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "DecodeElasticMatrix2",
    "enumerate",
    "len",
    "max",
    "numpy.array",
    "numpy.bincount",
    "numpy.hstack",
    "numpy.max",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.grammar_operations.GraphGrammarOperation": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "AddNode2Node",
    "BisectEdge",
    "RemoveNode",
    "ShrinkEdge",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.grammar_operations.RemoveNode": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.fill_diagonal",
    "numpy.repeat",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.grammar_operations.ShrinkEdge": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "numpy.fill_diagonal",
    "numpy.hstack",
    "numpy.max",
    "numpy.maximum",
    "numpy.min",
    "numpy.triu",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.grammar_operations.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "elpigraph.src.grammar_operations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph.src.grammar_operations.proxy": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "PrimitiveElasticGraphEmbedment"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.grammar_operations.proxy_cp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "PrimitiveElasticGraphEmbedment_cp"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.graphs": {
  "data": {},
  "type": "module"
 },
 "elpigraph.src.graphs.ConstructGraph": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "elpigraph.src.graphs.igraph",
    "list",
    "numpy.max",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.graphs.GetBranches": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "elpigraph.src.graphs.copy",
    "len",
    "list",
    "numpy.array",
    "numpy.max",
    "numpy.random.choice",
    "numpy.where",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.graphs.GetSubGraph": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "elpigraph.src.graphs.igraph",
    "len",
    "list",
    "map",
    "numpy.all",
    "numpy.any",
    "numpy.argmin",
    "numpy.array",
    "numpy.isin",
    "numpy.min",
    "numpy.nan",
    "numpy.sort",
    "numpy.sum",
    "numpy.union1d",
    "numpy.vstack",
    "numpy.where",
    "pandas.DataFrame",
    "print",
    "range",
    "reversed",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.graphs.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "elpigraph.src.graphs.igraph": {
  "data": {
   "shadows": "igraph"
  },
  "type": "import"
 },
 "elpigraph.src.graphs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph.src.graphs.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "elpigraph.src.reporting": {
  "data": {},
  "type": "module"
 },
 "elpigraph.src.reporting.ReportOnPrimitiveGraphEmbedment": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ComputePrimitiveGraphElasticEnergy",
    "DecodeElasticMatrix",
    "PartitionData",
    "dict",
    "elpigraph.src.reporting.getPrimitiveGraphStructureBarCode",
    "elpigraph.src.reporting.project_point_onto_graph",
    "len",
    "numpy.bincount",
    "numpy.fill_diagonal",
    "numpy.max",
    "numpy.nan",
    "numpy.sum",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.reporting.getPrimitiveGraphStructureBarCode": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.fill_diagonal",
    "numpy.max",
    "str"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.reporting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "elpigraph.src.reporting.project_point_onto_edge": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "dict",
    "int",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.reporting.project_point_onto_graph": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "PartitionData",
    "dict",
    "len",
    "numpy.array",
    "numpy.inf",
    "numpy.isin",
    "numpy.mean",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "project_point_onto_edge",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.synthetic": {
  "data": {},
  "type": "module"
 },
 "elpigraph.src.synthetic.GrowPath": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict",
    "len",
    "max",
    "numpy.all",
    "numpy.any",
    "numpy.random.normal",
    "numpy.random.uniform",
    "numpy.vstack",
    "numpy.zeros",
    "print",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.synthetic.InitializeWalkers": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.random.choice",
    "numpy.random.normal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "elpigraph.src.synthetic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 }
}