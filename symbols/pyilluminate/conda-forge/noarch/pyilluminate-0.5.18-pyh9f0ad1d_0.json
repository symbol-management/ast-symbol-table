{
 "pyilluminate": {
  "data": {
   "symbols_in_volume": [
    "get_versions"
   ]
  },
  "type": "module"
 },
 "pyilluminate.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyilluminate._version": {
  "data": {},
  "type": "module"
 },
 "pyilluminate._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pyilluminate._version.json",
    "pyilluminate._version.version_json"
   ]
  },
  "type": "function"
 },
 "pyilluminate._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyilluminate._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pyilluminate.conftest": {
  "data": {},
  "type": "module"
 },
 "pyilluminate.conftest.pytest_configure": {
  "data": {
   "lineno": 1
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate": {
  "data": {},
  "type": "module"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.__enter__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.__exit__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.full",
    "numpy.zeros",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.all_leds": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "list",
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.autoclear": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.brightness": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.clear": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.close": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.color": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pyilluminate.fake_illuminate.collections",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.device_name": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.fill_array": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.led": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.led_positions": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.open": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.rgb_leds": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "list",
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.serial_number": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.uv_leds": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.FakeIlluminate.version": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.fake_illuminate.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyilluminate.fake_illuminate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyilluminate.fake_illuminate.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyilluminate.illuminate": {
  "data": {
   "symbols_in_volume": [
    "pathlib.Path",
    "pyilluminate.illuminate.known_devices",
    "pyilluminate.illuminate.os",
    "pyilluminate.illuminate.tempfile",
    "pyilluminate.illuminate.tmpdir"
   ]
  },
  "type": "module"
 },
 "pyilluminate.illuminate.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.Illuminate": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pyilluminate.illuminate.known_devices",
    "pyilluminate.illuminate.known_mac_addresses",
    "pyilluminate.illuminate.known_serial_numbers"
   ]
  },
  "type": "class"
 },
 "pyilluminate.illuminate.Illuminate.NA": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "float",
    "round"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.__del__": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.__enter__": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.__exit__": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.__init__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "bool",
    "float",
    "hasattr",
    "int",
    "pyilluminate.illuminate.get_port_serial_number",
    "serial.Serial",
    "str",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._ask_list": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._ask_string": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._check_output": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._device_serial_number_pairs": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyilluminate.illuminate.Illuminate",
    "serial.tools.list_ports.comports",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._extract_number": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "float",
    "int",
    "pyilluminate.illuminate.re"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._find_port_number": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "RuntimeError",
    "len"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._finish_demo": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": [
    "RuntimeError",
    "float",
    "max",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._led": {
  "data": {
   "lineno": 988
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._load_parameters": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.zeros",
    "pyilluminate.illuminate.json",
    "str",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._lock_acquire": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "RuntimeError",
    "filelock.Timeout"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._lock_release": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._make_lock": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "pyilluminate.illuminate.MultiUserFileLock",
    "pyilluminate.illuminate.locks_dir",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._open": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "Exception",
    "serial.SerialException"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._open_startup_procedure": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "distutils.version.LooseVersion",
    "pyilluminate.illuminate.json",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._read_led_positions": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.empty",
    "pyilluminate.illuminate.json",
    "range",
    "time.sleep",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._scan": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate._update_led_state": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "set"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.about": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.annulus": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.array_distance": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.ask": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.autoclear": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.autoupdate": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "ValueError",
    "bool"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.brightfield": {
  "data": {
   "lineno": 1023
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.brightness": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.clear": {
  "data": {
   "lineno": 1005
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.close": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "serial.SerialException"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.color": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pyilluminate.illuminate.collections",
    "tuple",
    "typing.Iterable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.color_maximum_value": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.color_minimum_increment": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.darkfield": {
  "data": {
   "lineno": 1027
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.debug": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.delay": {
  "data": {
   "lineno": 1278
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.demo": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "float"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.device_name": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.discoparty_demo": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.draw_channel": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.draw_quadrant": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.fill_array": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.find": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len",
    "pyilluminate.illuminate.Illuminate",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.half_annulus": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "float",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.half_circle": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.half_circle_color": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.help": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.illuminate_uv": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.led": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "int",
    "typing.Iterable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.led_count": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.led_positions": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "property",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.led_positions_NA": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "property",
    "pyilluminate.illuminate.json"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.led_state": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "property",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.leds": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.list_all_serial_numbers": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "pyilluminate.illuminate.Illuminate",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.mac_address": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.open": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.parameters_json": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.positions_as_xarray": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.precision": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.print_sequence": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.print_sequence_length": {
  "data": {
   "lineno": 1172
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.print_values": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.read": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "RuntimeError",
    "bytearray",
    "int"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.read_paragraph": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "RuntimeError",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.readline": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "RuntimeError",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.reboot": {
  "data": {
   "lineno": 738
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.reset_sequence": {
  "data": {
   "lineno": 1191
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.run_sequence": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.run_sequence_fast": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.scan_brightfield": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.scan_full": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "float",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.sequence": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.sequence_bit_depth": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.sequence_length": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.serial_by_mac_address": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.set_pin_order": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.step_sequence": {
  "data": {
   "lineno": 1176
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.trigger": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.trigger_print": {
  "data": {
   "lineno": 1225
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.trigger_setup": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.trigger_test": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.turn_on_led": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.ndarray",
    "pyilluminate.illuminate.MAX_ARGUMENT_CHAR_COUNT",
    "pyilluminate.illuminate.collections",
    "range",
    "str",
    "typing.Iterable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.update": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.version": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.water_drop_demo": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Illuminate.write": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.MAX_ARGUMENT_CHAR_COUNT": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "pyilluminate.illuminate.MultiUserFileLock": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "filelock.FileLock"
   ]
  },
  "type": "class"
 },
 "pyilluminate.illuminate.MultiUserFileLock.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyilluminate.illuminate.os",
    "pyilluminate.illuminate.shutil",
    "super"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.MultiUserFileLock.acquire": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyilluminate.illuminate.shutil",
    "super"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.Serial": {
  "data": {
   "shadows": "serial.Serial"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.SerialException": {
  "data": {
   "shadows": "serial.SerialException"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.Timeout": {
  "data": {
   "shadows": "filelock.Timeout"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.comports": {
  "data": {
   "shadows": "serial.tools.list_ports.comports"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.get_port_serial_number": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "serial.tools.list_ports.comports"
   ]
  },
  "type": "function"
 },
 "pyilluminate.illuminate.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.known_devices": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "pyilluminate.illuminate.known_mac_addresses": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "pyilluminate.illuminate.known_serial_numbers": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "pyilluminate.illuminate.locks_dir": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyilluminate.illuminate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.tmpdir": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyilluminate.illuminate.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pyilluminate.illuminate.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyilluminate.led_color": {
  "data": {},
  "type": "module"
 },
 "pyilluminate.led_color.LEDColor": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "int",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "pyilluminate.led_color.LEDColor.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "int",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyilluminate.led_color.LEDColor.__iter__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "pyilluminate.led_color.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyilluminate.led_color.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "pyilluminate.led_color.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pyilluminate.tests": {
  "data": {},
  "type": "module"
 },
 "pyilluminate.tests.test_basic": {
  "data": {},
  "type": "module"
 },
 "pyilluminate.tests.test_basic.pyilluminate": {
  "data": {
   "shadows": "pyilluminate"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_basic.test_version": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "pyilluminate.tests.test_basic.pyilluminate"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_fake_illuminate": {
  "data": {},
  "type": "module"
 },
 "pyilluminate.tests.test_fake_illuminate.FakeIlluminate": {
  "data": {
   "shadows": "pyilluminate.fake_illuminate.FakeIlluminate"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_fake_illuminate.LEDColor": {
  "data": {
   "shadows": "pyilluminate.LEDColor"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_fake_illuminate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_fake_illuminate.test_clear": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "pyilluminate.LEDColor",
    "pyilluminate.fake_illuminate.FakeIlluminate",
    "pyilluminate.tests.test_fake_illuminate.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_fake_illuminate.test_defaults": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "pyilluminate.fake_illuminate.FakeIlluminate",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_fake_illuminate.test_fill_array": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "UserWarning",
    "pyilluminate.LEDColor",
    "pyilluminate.fake_illuminate.FakeIlluminate",
    "pyilluminate.tests.test_fake_illuminate.pytest",
    "range",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_fake_illuminate.test_set_values": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "UserWarning",
    "pyilluminate.LEDColor",
    "pyilluminate.fake_illuminate.FakeIlluminate",
    "pyilluminate.tests.test_fake_illuminate.pytest",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_filelock": {
  "data": {
   "symbols_in_volume": [
    "pyilluminate.tests.test_filelock.pytest"
   ]
  },
  "type": "module"
 },
 "pyilluminate.tests.test_filelock.Illuminate": {
  "data": {
   "shadows": "pyilluminate.Illuminate"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_filelock.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_filelock.pytestmark": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyilluminate.tests.test_filelock.tests_filelock_multiBoard": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "RuntimeError",
    "pyilluminate.Illuminate",
    "pyilluminate.tests.test_filelock.pytest"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_filelock.tests_filelock_singleBoard": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "RuntimeError",
    "pyilluminate.Illuminate",
    "pyilluminate.tests.test_filelock.pytest"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_color": {
  "data": {
   "symbols_in_volume": [
    "pyilluminate.tests.test_led_color.pytest"
   ]
  },
  "type": "module"
 },
 "pyilluminate.tests.test_led_color.Illuminate": {
  "data": {
   "shadows": "pyilluminate.Illuminate"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_color.light": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pyilluminate.Illuminate",
    "pyilluminate.tests.test_led_color.pytest"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_color.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_color.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_color.pytestmark": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyilluminate.tests.test_led_color.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_color.test_blue_color_list": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyilluminate.tests.test_led_color.light",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_color.test_green_color_numpy": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.asarray",
    "pyilluminate.tests.test_led_color.light",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_color.test_red_color_tuple": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pyilluminate.tests.test_led_color.light",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_color.test_single_color": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pyilluminate.tests.test_led_color.light",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_commands": {
  "data": {
   "symbols_in_volume": [
    "pyilluminate.tests.test_led_commands.pytest"
   ]
  },
  "type": "module"
 },
 "pyilluminate.tests.test_led_commands.Illuminate": {
  "data": {
   "shadows": "pyilluminate.Illuminate"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_commands.light": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pyilluminate.Illuminate",
    "pyilluminate.tests.test_led_commands.pytest"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_commands.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_commands.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_commands.pytestmark": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyilluminate.tests.test_led_commands.test_long_led_command": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyilluminate.tests.test_led_commands.light",
    "range"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_commands.test_short_led_command": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pyilluminate.tests.test_led_commands.light",
    "range"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_commands.test_short_led_command_array": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "pyilluminate.tests.test_led_commands.light"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_commands.test_short_led_command_list": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "list",
    "pyilluminate.tests.test_led_commands.light",
    "range"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_commands.test_single_led_command": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pyilluminate.tests.test_led_commands.light"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_state": {
  "data": {},
  "type": "module"
 },
 "pyilluminate.tests.test_led_state.FakeIlluminate": {
  "data": {
   "shadows": "pyilluminate.fake_illuminate.FakeIlluminate"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_state.Illuminate": {
  "data": {
   "shadows": "pyilluminate.Illuminate"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_state.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_state.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_state.light": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pyilluminate.Illuminate",
    "pyilluminate.fake_illuminate.FakeIlluminate",
    "pyilluminate.tests.test_led_state.pytest"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_state.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_led_state.test_fill_array": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "pyilluminate.tests.test_led_state.light"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_state.test_initial_state": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "pyilluminate.tests.test_led_state.light"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_led_state.test_led_and_clear": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "pyilluminate.tests.test_led_state.light",
    "set"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_open": {
  "data": {
   "symbols_in_volume": [
    "pyilluminate.Illuminate.find",
    "pyilluminate.Illuminate.list_all_serial_numbers",
    "pyilluminate.tests.test_open.pytest"
   ]
  },
  "type": "module"
 },
 "pyilluminate.tests.test_open.Illuminate": {
  "data": {
   "shadows": "pyilluminate.Illuminate"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_open.ports": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pyilluminate.tests.test_open.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyilluminate.tests.test_open.pytestmark": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyilluminate.tests.test_open.serial_number": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyilluminate.tests.test_open.test_device_by_serial_number": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "pyilluminate.Illuminate._device_serial_number_pairs",
    "pyilluminate.tests.test_open.pytest",
    "pyilluminate.tests.test_open.serial_number"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_open.test_open": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pyilluminate.Illuminate"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_open.test_open_by_port": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pyilluminate.Illuminate",
    "pyilluminate.tests.test_open.ports",
    "pyilluminate.tests.test_open.pytest"
   ]
  },
  "type": "function"
 },
 "pyilluminate.tests.test_open.test_open_serial_number": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "RuntimeError",
    "pyilluminate.Illuminate",
    "pyilluminate.tests.test_open.pytest",
    "pyilluminate.tests.test_open.serial_number"
   ]
  },
  "type": "function"
 }
}