{
 "atomic_hpc": {
  "data": {},
  "type": "module"
 },
 "atomic_hpc.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "atomic_hpc.config_yaml": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "__name__",
    "atomic_hpc.config_yaml._process_local_schema",
    "atomic_hpc.config_yaml._process_qsub_schema",
    "atomic_hpc.config_yaml._remote_schema",
    "atomic_hpc.config_yaml.logging",
    "str"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.config_yaml.ValidationError": {
  "data": {
   "shadows": "jsonschema.ValidationError"
  },
  "type": "import"
 },
 "atomic_hpc.config_yaml.YAML": {
  "data": {
   "shadows": "ruamel.yaml.YAML"
  },
  "type": "import"
 },
 "atomic_hpc.config_yaml._config_schema": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "atomic_hpc.config_yaml._global_defaults": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "atomic_hpc.config_yaml._process_local_schema": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "atomic_hpc.config_yaml._process_qsub_schema": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "atomic_hpc.config_yaml._remote_schema": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "atomic_hpc.config_yaml._run_schema": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "atomic_hpc.config_yaml.basestring": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "atomic_hpc.config_yaml.edict": {
  "data": {
   "shadows": "jsonextended.edict"
  },
  "type": "import"
 },
 "atomic_hpc.config_yaml.format_config_yaml": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "atomic_hpc.config_yaml._config_schema",
    "atomic_hpc.config_yaml._global_defaults",
    "atomic_hpc.config_yaml._run_schema",
    "atomic_hpc.config_yaml.basestring",
    "atomic_hpc.config_yaml.logger",
    "enumerate",
    "isinstance",
    "jsonextended.edict.combine_lists",
    "jsonextended.edict.filter_keys",
    "jsonextended.edict.merge",
    "jsonschema.ValidationError",
    "jsonschema.validate",
    "len",
    "pathlib2.Path",
    "ruamel.yaml.YAML",
    "set"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.config_yaml.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "atomic_hpc.config_yaml.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.config_yaml.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "atomic_hpc.config_yaml.renumber_config_yaml": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "atomic_hpc.config_yaml._config_schema",
    "atomic_hpc.config_yaml.basestring",
    "atomic_hpc.config_yaml.logger",
    "enumerate",
    "isinstance",
    "jsonschema.validate",
    "pathlib2.Path",
    "ruamel.yaml.YAML"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.config_yaml.validate": {
  "data": {
   "shadows": "jsonschema.validate"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder": {
  "data": {},
  "type": "module"
 },
 "atomic_hpc.context_folder.LocalPath": {
  "data": {
   "shadows": "atomic_hpc.context_folder.local.LocalPath"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.RemotePath": {
  "data": {
   "shadows": "atomic_hpc.context_folder.remote.RemotePath"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.abstract": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "atomic_hpc.context_folder.abstract.logging",
    "atomic_hpc.utils.add_loglevel"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.check_cmndline_security": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "fnmatch.fnmatch",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.chmod": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.copy": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.copy_from": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.copy_to": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.exec_cmnd": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.exists": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.getabs": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.glob": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.isdir": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.isfile": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.iterdir": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.abstract.os"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.makedirs": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.name": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.abstract.os",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.open": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "NotImplementedError",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.remove": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.rename": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.rmtree": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.stat": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.add_loglevel": {
  "data": {
   "shadows": "atomic_hpc.utils.add_loglevel"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.abstract.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.abstract.fnmatch": {
  "data": {
   "shadows": "fnmatch.fnmatch"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.abstract.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.abstract.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.base": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "__name__",
    "atomic_hpc.context_folder.base.logging",
    "str"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.context_folder.base.LocalPath": {
  "data": {
   "shadows": "atomic_hpc.context_folder.local.LocalPath"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.base.RemotePath": {
  "data": {
   "shadows": "atomic_hpc.context_folder.remote.RemotePath"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.base.basestring": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "atomic_hpc.context_folder.base.change_dir": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.context_folder.base.change_dir.__enter__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.base.logger",
    "atomic_hpc.context_folder.local.LocalPath",
    "atomic_hpc.context_folder.remote.RemotePath"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.base.change_dir.__exit__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.base.logger"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.base.change_dir.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "RuntimeError",
    "atomic_hpc.context_folder.base.basestring",
    "atomic_hpc.context_folder.base.os",
    "atomic_hpc.context_folder.base.paramiko",
    "hasattr",
    "isinstance",
    "pathlib2.Path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.base.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "atomic_hpc.context_folder.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.base.paramiko": {
  "data": {
   "shadows": "paramiko"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.base.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.change_dir": {
  "data": {
   "shadows": "atomic_hpc.context_folder.base.change_dir"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "__name__",
    "atomic_hpc.context_folder.local.logging",
    "str"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.context_folder.local.LocalPath": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.abstract.VirtualDir"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.context_folder.local.LocalPath.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath._exec_in_dir": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.local.os",
    "contextlib.contextmanager",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath._pipe_reader": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "iter",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.chmod": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.copy": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.local.logger",
    "atomic_hpc.context_folder.local.os",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.copy_from": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.local.logger",
    "atomic_hpc.context_folder.local.shutil",
    "hasattr",
    "pathlib2.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.copy_to": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.local.logger",
    "atomic_hpc.context_folder.local.shutil",
    "hasattr",
    "pathlib2.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.exec_cmnd": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "Queue.Queue",
    "RuntimeError",
    "ValueError",
    "atomic_hpc.context_folder.local.logger",
    "atomic_hpc.context_folder.local.logging",
    "getattr",
    "iter",
    "range",
    "subprocess.PIPE",
    "subprocess.Popen",
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.exists": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.getabs": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.glob": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.isdir": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.isfile": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.makedirs": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.local.logger",
    "atomic_hpc.utils.splitall"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.open": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.local.logger",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.remove": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.local.logger"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.rename": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.local.logger"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.rmtree": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.local.logger",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.stat": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.local.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local.Queue": {
  "data": {
   "shadows": "Queue.Queue"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local.VirtualDir": {
  "data": {
   "shadows": "atomic_hpc.context_folder.abstract.VirtualDir"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local.basestring": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "atomic_hpc.context_folder.local.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "atomic_hpc.context_folder.local.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.local.splitall": {
  "data": {
   "shadows": "atomic_hpc.utils.splitall"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "__name__",
    "atomic_hpc.context_folder.remote.logging",
    "atomic_hpc.context_folder.remote.msvcrt",
    "atomic_hpc.context_folder.remote.os",
    "atomic_hpc.context_folder.remote.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.context_folder.remote.RemotePath": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.abstract.VirtualDir"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.context_folder.remote.RemotePath.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath._log_error": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.logger",
    "iter",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath._log_output": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.logger",
    "getattr",
    "iter",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath._stream_exec": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.select",
    "atomic_hpc.context_folder.remote.sys",
    "hasattr",
    "len",
    "staticmethod",
    "stderr_func",
    "stdout_func"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.chmod": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.renew_connection"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.copy": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.remote.logger",
    "atomic_hpc.context_folder.remote.os",
    "atomic_hpc.context_folder.remote.renew_connection"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.copy_from": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.remote.basestring",
    "atomic_hpc.context_folder.remote.logger",
    "atomic_hpc.context_folder.remote.os",
    "atomic_hpc.context_folder.remote.renew_connection",
    "isinstance",
    "pathlib2.Path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.copy_to": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.remote.basestring",
    "atomic_hpc.context_folder.remote.logger",
    "atomic_hpc.context_folder.remote.os",
    "atomic_hpc.context_folder.remote.renew_connection",
    "isinstance",
    "pathlib2.Path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.exec_cmnd": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "atomic_hpc.context_folder.remote.logger",
    "atomic_hpc.context_folder.remote.logging",
    "atomic_hpc.context_folder.remote.os",
    "atomic_hpc.context_folder.remote.renew_connection"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.exists": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.remote.renew_connection"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.getabs": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.os",
    "atomic_hpc.context_folder.remote.renew_connection"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.glob": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "IOError",
    "any",
    "atomic_hpc.context_folder.remote.logger",
    "atomic_hpc.context_folder.remote.os",
    "atomic_hpc.context_folder.remote.renew_connection",
    "atomic_hpc.utils.glob_path",
    "atomic_hpc.utils.splitall"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.glob.walk_func": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "atomic_hpc.utils.walk_path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.isdir": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.renew_connection",
    "atomic_hpc.context_folder.remote.stat"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.isfile": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.renew_connection",
    "atomic_hpc.context_folder.remote.stat"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.makedirs": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.logger",
    "atomic_hpc.context_folder.remote.os",
    "atomic_hpc.context_folder.remote.renew_connection",
    "atomic_hpc.utils.splitall"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.open": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.codecs",
    "atomic_hpc.context_folder.remote.logger",
    "atomic_hpc.context_folder.remote.renew_connection",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.remove": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.remote.logger",
    "atomic_hpc.context_folder.remote.renew_connection",
    "list"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.rename": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.logger",
    "atomic_hpc.context_folder.remote.os",
    "atomic_hpc.context_folder.remote.renew_connection"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.rmtree": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.context_folder.remote.logger",
    "atomic_hpc.context_folder.remote.os",
    "atomic_hpc.context_folder.remote.renew_connection",
    "list",
    "print",
    "reversed",
    "sorted"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.stat": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.renew_connection"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.VirtualDir": {
  "data": {
   "shadows": "atomic_hpc.context_folder.abstract.VirtualDir"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.basestring": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "atomic_hpc.context_folder.remote.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.glob_path": {
  "data": {
   "shadows": "atomic_hpc.utils.glob_path"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "atomic_hpc.context_folder.remote.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.msvcrt": {
  "data": {
   "shadows": "msvcrt"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.renew_connection": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.renew_connection.wrapper": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.remote.logger",
    "func"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.select": {
  "data": {
   "shadows": "select"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.splitall": {
  "data": {
   "shadows": "atomic_hpc.utils.splitall"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.remote.walk_path": {
  "data": {
   "shadows": "atomic_hpc.utils.walk_path"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "atomic_hpc.context_folder.test_context_folder.logging"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.context_folder.test_context_folder.LocalPath": {
  "data": {
   "shadows": "atomic_hpc.context_folder.LocalPath"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.MockPath": {
  "data": {
   "shadows": "jsonextended.utils.MockPath"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.RemotePath": {
  "data": {
   "shadows": "atomic_hpc.context_folder.RemotePath"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.change_dir": {
  "data": {
   "shadows": "atomic_hpc.context_folder.change_dir"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.context": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.test_context_folder.pytest"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.local_mockpath": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.change_dir",
    "atomic_hpc.context_folder.test_context_folder.pytest",
    "jsonextended.utils.MockPath"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.local_pathlib": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.change_dir",
    "atomic_hpc.context_folder.test_context_folder.os",
    "atomic_hpc.context_folder.test_context_folder.pytest",
    "atomic_hpc.context_folder.test_context_folder.shutil",
    "open",
    "pathlib2.Path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.mockserver": {
  "data": {
   "shadows": "atomic_hpc.mockssh.mockserver"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.remote": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.change_dir",
    "atomic_hpc.context_folder.test_context_folder.os",
    "atomic_hpc.context_folder.test_context_folder.pytest",
    "atomic_hpc.context_folder.test_context_folder.shutil",
    "atomic_hpc.mockssh.mockserver.Server",
    "open",
    "pathlib2.Path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "atomic_hpc.context_folder.test_context_folder.test_consistent": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.LocalPath",
    "atomic_hpc.context_folder.RemotePath",
    "atomic_hpc.context_folder.test_context_folder.inspect",
    "sorted"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_context_methods1": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.test_context_folder.context",
    "sorted"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_context_methods2": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.test_context_folder.context",
    "list",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_exec_cmnd_multiline_output": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.test_context_folder.context",
    "atomic_hpc.context_folder.test_context_folder.logging",
    "atomic_hpc.context_folder.test_context_folder.sys"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_exec_cmnd_with_stderr": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.test_context_folder.context"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_exec_fail": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "RuntimeError",
    "atomic_hpc.context_folder.test_context_folder.context",
    "atomic_hpc.context_folder.test_context_folder.pytest"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_exec_longer_cmnd": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "atomic_hpc.context_folder.test_context_folder.context"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.deploy_runs": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "NameError",
    "__name__",
    "atomic_hpc.deploy_runs.logging",
    "atomic_hpc.utils.add_loglevel",
    "str"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.deploy_runs.YAML": {
  "data": {
   "shadows": "ruamel.yaml.YAML"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs._QSUB_CMNDLINE": {
  "data": {
   "lineno": 587
  },
  "type": "constant"
 },
 "atomic_hpc.deploy_runs._REGEX_FILE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "atomic_hpc.deploy_runs._REGEX_VAR": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "atomic_hpc.deploy_runs._create_qsub": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "atomic_hpc.deploy_runs._qsub_top_template",
    "atomic_hpc.deploy_runs._resolve_walltime"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.deploy_runs._qsub_top_template": {
  "data": {
   "lineno": 385
  },
  "type": "constant"
 },
 "atomic_hpc.deploy_runs._replace_in_cmnd": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "KeyError",
    "atomic_hpc.deploy_runs._REGEX_VAR",
    "atomic_hpc.deploy_runs.re",
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.deploy_runs._resolve_walltime": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.deploy_runs.add_loglevel": {
  "data": {
   "shadows": "atomic_hpc.utils.add_loglevel"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs.atomic_hpc": {
  "data": {
   "shadows": "atomic_hpc"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs.basestring": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "atomic_hpc.deploy_runs.context_folder": {
  "data": {
   "shadows": "atomic_hpc.context_folder"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs.create_output_dir": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "atomic_hpc.deploy_runs.atomic_hpc",
    "atomic_hpc.deploy_runs.logger",
    "atomic_hpc.deploy_runs.os",
    "atomic_hpc.deploy_runs.time",
    "ruamel.yaml.YAML"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.deploy_runs.deploy_run_normal": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "atomic_hpc.context_folder.change_dir",
    "atomic_hpc.deploy_runs.basestring",
    "atomic_hpc.deploy_runs.create_output_dir",
    "atomic_hpc.deploy_runs.logger",
    "atomic_hpc.deploy_runs.logging",
    "atomic_hpc.deploy_runs.os",
    "dict",
    "getattr",
    "isinstance",
    "list",
    "pathlib2.Path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.deploy_runs.deploy_run_qsub": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "atomic_hpc.context_folder.change_dir",
    "atomic_hpc.deploy_runs._QSUB_CMNDLINE",
    "atomic_hpc.deploy_runs._create_qsub",
    "atomic_hpc.deploy_runs.basestring",
    "atomic_hpc.deploy_runs.create_output_dir",
    "atomic_hpc.deploy_runs.logger",
    "atomic_hpc.deploy_runs.os",
    "atomic_hpc.deploy_runs.unicode",
    "dict",
    "getattr",
    "isinstance",
    "pathlib2.Path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.deploy_runs.deploy_runs": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "atomic_hpc.deploy_runs.deploy_run_normal",
    "atomic_hpc.deploy_runs.deploy_run_qsub",
    "atomic_hpc.deploy_runs.get_inputs",
    "atomic_hpc.deploy_runs.logger",
    "atomic_hpc.deploy_runs.logging",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.deploy_runs.fnmatch": {
  "data": {
   "shadows": "fnmatch.fnmatch"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs.get_inputs": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "atomic_hpc.context_folder.change_dir",
    "atomic_hpc.deploy_runs._REGEX_FILE",
    "atomic_hpc.deploy_runs._REGEX_VAR",
    "atomic_hpc.deploy_runs._replace_in_cmnd",
    "atomic_hpc.deploy_runs.basestring",
    "atomic_hpc.deploy_runs.copy",
    "atomic_hpc.deploy_runs.re",
    "dict",
    "isinstance",
    "pathlib2.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.deploy_runs.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "atomic_hpc.deploy_runs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs.retrieve_outputs": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "atomic_hpc.context_folder.change_dir",
    "atomic_hpc.deploy_runs.basestring",
    "atomic_hpc.deploy_runs.logger",
    "atomic_hpc.deploy_runs.os",
    "dict",
    "fnmatch.fnmatch",
    "isinstance",
    "pathlib2.Path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.deploy_runs.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "atomic_hpc.deploy_runs.unicode": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "atomic_hpc.frontend": {
  "data": {},
  "type": "module"
 },
 "atomic_hpc.frontend.retrieve_config": {
  "data": {
   "symbols_in_volume": [
    "atomic_hpc.frontend.retrieve_config.logging"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.frontend.retrieve_config.ErrorParser": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "atomic_hpc.frontend.retrieve_config.argparse"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.frontend.retrieve_config.ErrorParser.error": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "atomic_hpc.frontend.retrieve_config.sys"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.frontend.retrieve_config.ValidationError": {
  "data": {
   "shadows": "jsonschema.ValidationError"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.retrieve_config.__version__": {
  "data": {
   "shadows": "atomic_hpc.__version__"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.retrieve_config.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.retrieve_config.cmndline_prompt": {
  "data": {
   "shadows": "atomic_hpc.utils.cmndline_prompt"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.retrieve_config.format_config_yaml": {
  "data": {
   "shadows": "atomic_hpc.config_yaml.format_config_yaml"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.retrieve_config.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "atomic_hpc.frontend.retrieve_config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.retrieve_config.logging.handlers": {
  "data": {
   "shadows": "logging.handlers"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.retrieve_config.main": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "atomic_hpc.__version__",
    "atomic_hpc.frontend.retrieve_config.ErrorParser",
    "atomic_hpc.frontend.retrieve_config.os",
    "atomic_hpc.frontend.retrieve_config.run",
    "atomic_hpc.frontend.retrieve_config.sys",
    "atomic_hpc.utils.cmndline_prompt",
    "atomic_hpc.utils.str2intlist",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.frontend.retrieve_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.retrieve_config.retrieve_outputs": {
  "data": {
   "shadows": "atomic_hpc.deploy_runs.retrieve_outputs"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.retrieve_config.run": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RuntimeError",
    "atomic_hpc.config_yaml.format_config_yaml",
    "atomic_hpc.deploy_runs.retrieve_outputs",
    "atomic_hpc.frontend.retrieve_config.logger",
    "atomic_hpc.frontend.retrieve_config.logging",
    "atomic_hpc.frontend.retrieve_config.os",
    "atomic_hpc.frontend.retrieve_config.sys",
    "getattr",
    "jsonschema.ValidationError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.frontend.retrieve_config.str2intlist": {
  "data": {
   "shadows": "atomic_hpc.utils.str2intlist"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.retrieve_config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config": {
  "data": {
   "symbols_in_volume": [
    "atomic_hpc.frontend.run_config.logging"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.frontend.run_config.ErrorParser": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "atomic_hpc.frontend.run_config.argparse"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.frontend.run_config.ErrorParser.error": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "atomic_hpc.frontend.run_config.sys"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.frontend.run_config.ValidationError": {
  "data": {
   "shadows": "jsonschema.ValidationError"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config.__version__": {
  "data": {
   "shadows": "atomic_hpc.__version__"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config.cmndline_prompt": {
  "data": {
   "shadows": "atomic_hpc.utils.cmndline_prompt"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config.deploy_runs": {
  "data": {
   "shadows": "atomic_hpc.deploy_runs.deploy_runs"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config.format_config_yaml": {
  "data": {
   "shadows": "atomic_hpc.config_yaml.format_config_yaml"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "atomic_hpc.frontend.run_config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config.logging.handlers": {
  "data": {
   "shadows": "logging.handlers"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config.main": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "atomic_hpc.__version__",
    "atomic_hpc.frontend.run_config.ErrorParser",
    "atomic_hpc.frontend.run_config.os",
    "atomic_hpc.frontend.run_config.run",
    "atomic_hpc.frontend.run_config.sys",
    "atomic_hpc.utils.cmndline_prompt",
    "atomic_hpc.utils.str2intlist",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.frontend.run_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config.run": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RuntimeError",
    "atomic_hpc.config_yaml.format_config_yaml",
    "atomic_hpc.deploy_runs.deploy_runs",
    "atomic_hpc.frontend.run_config.logger",
    "atomic_hpc.frontend.run_config.logging",
    "atomic_hpc.frontend.run_config.os",
    "atomic_hpc.frontend.run_config.sys",
    "getattr",
    "jsonschema.ValidationError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.frontend.run_config.str2intlist": {
  "data": {
   "shadows": "atomic_hpc.utils.str2intlist"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.run_config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.test_frontend": {
  "data": {},
  "type": "module"
 },
 "atomic_hpc.frontend.test_frontend.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.test_frontend.retrieve_config": {
  "data": {
   "shadows": "atomic_hpc.frontend.retrieve_config"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.test_frontend.run_config": {
  "data": {
   "shadows": "atomic_hpc.frontend.run_config"
  },
  "type": "import"
 },
 "atomic_hpc.frontend.test_frontend.test_retrieve_config_help": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "SystemExit",
    "atomic_hpc.frontend.retrieve_config.main",
    "atomic_hpc.frontend.test_frontend.pytest"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.frontend.test_frontend.test_run_config_help": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "SystemExit",
    "atomic_hpc.frontend.run_config.main",
    "atomic_hpc.frontend.test_frontend.pytest"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh": {
  "data": {},
  "type": "module"
 },
 "atomic_hpc.mockssh.mockserver": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "atomic_hpc.mockssh.mockserver.os"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.mockssh.mockserver.Handler": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "__name__",
    "atomic_hpc.mockssh.mockserver.logging",
    "atomic_hpc.mockssh.mockserver.paramiko"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.mockssh.mockserver.Handler.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.SERVER_KEY_PATH",
    "atomic_hpc.mockssh.mockserver.paramiko",
    "atomic_hpc.mockssh.mocksftp.SFTPServer"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.check_auth_password": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.paramiko"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.check_auth_publickey": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.paramiko"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.check_channel_exec_request": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "Queue.Queue"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.check_channel_request": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.paramiko"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.get_allowed_auths": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.handle_client": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Exception",
    "atomic_hpc.mockssh.mockserver.subprocess"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.run": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Queue.Queue",
    "atomic_hpc.mockssh.mockserver.threading"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Queue": {
  "data": {
   "shadows": "Queue.Queue"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.SERVER_KEY_PATH": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "atomic_hpc.mockssh.mockserver.SFTPError": {
  "data": {
   "shadows": "paramiko.sftp.SFTPError"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.SFTPServer": {
  "data": {
   "shadows": "atomic_hpc.mockssh.mocksftp.SFTPServer"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.Server": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "__name__",
    "atomic_hpc.mockssh.mockserver.logging",
    "object"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.mockssh.mockserver.Server.__enter__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.os",
    "atomic_hpc.mockssh.mockserver.socket",
    "atomic_hpc.mockssh.mockserver.threading"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.__exit__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Exception",
    "atomic_hpc.mockssh.mockserver.os",
    "atomic_hpc.mockssh.mockserver.socket"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.patch_chdir",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server._run": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.Handler",
    "atomic_hpc.mockssh.mockserver.select",
    "atomic_hpc.mockssh.mockserver.threading"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.add_user": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.paramiko"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.client": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.SERVER_KEY_PATH",
    "atomic_hpc.mockssh.mockserver.paramiko"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.port": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.users": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.__all__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "atomic_hpc.mockssh.mockserver.b": {
  "data": {
   "shadows": "paramiko.py3compat.b"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.paramiko": {
  "data": {
   "shadows": "paramiko"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.patch_chdir": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.errno",
    "atomic_hpc.mockssh.mockserver.os",
    "atomic_hpc.mockssh.mockserver.stat",
    "paramiko.py3compat.b",
    "paramiko.sftp.SFTPError"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.select": {
  "data": {
   "shadows": "select"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mockserver.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mocksftp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "atomic_hpc.mockssh.mocksftp.logging"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.mockssh.mocksftp.EACCES": {
  "data": {
   "shadows": "errno.EACCES"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mocksftp.EDQUOT": {
  "data": {
   "shadows": "errno.EDQUOT"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mocksftp.ENOENT": {
  "data": {
   "shadows": "errno.ENOENT"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mocksftp.ENOTDIR": {
  "data": {
   "shadows": "errno.ENOTDIR"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mocksftp.EPERM": {
  "data": {
   "shadows": "errno.EPERM"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mocksftp.EROFS": {
  "data": {
   "shadows": "errno.EROFS"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mocksftp.LOG": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPHandle": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "__name__",
    "atomic_hpc.mockssh.mocksftp.logging",
    "atomic_hpc.mockssh.mocksftp.paramiko"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPHandle.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.SFTPHandle",
    "super"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPHandle.readfile": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPHandle.writefile": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServer": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.paramiko"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServer.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.SFTPServer",
    "atomic_hpc.mockssh.mocksftp.SFTPServerInterface",
    "super"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "__name__",
    "atomic_hpc.mockssh.mocksftp.logging",
    "atomic_hpc.mockssh.mocksftp.paramiko"
   ]
  },
  "type": "class"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.SFTPServerInterface",
    "super"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.chattr": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.os",
    "atomic_hpc.mockssh.mocksftp.paramiko",
    "atomic_hpc.mockssh.mocksftp.returns_sftp_error",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.list_folder": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.os",
    "atomic_hpc.mockssh.mocksftp.paramiko",
    "atomic_hpc.mockssh.mocksftp.returns_sftp_error"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.mkdir": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.os",
    "atomic_hpc.mockssh.mocksftp.paramiko",
    "atomic_hpc.mockssh.mocksftp.returns_sftp_error"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.open": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.SFTPHandle",
    "atomic_hpc.mockssh.mocksftp.os",
    "atomic_hpc.mockssh.mocksftp.returns_sftp_error"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.remove": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.os",
    "atomic_hpc.mockssh.mocksftp.paramiko",
    "atomic_hpc.mockssh.mocksftp.returns_sftp_error"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.rename": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.os",
    "atomic_hpc.mockssh.mocksftp.paramiko",
    "atomic_hpc.mockssh.mocksftp.returns_sftp_error"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.rmdir": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.os",
    "atomic_hpc.mockssh.mocksftp.paramiko",
    "atomic_hpc.mockssh.mocksftp.returns_sftp_error"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.session_ended": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.session_started": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.stat": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mocksftp.os",
    "atomic_hpc.mockssh.mocksftp.paramiko",
    "atomic_hpc.mockssh.mocksftp.returns_sftp_error"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "atomic_hpc.mockssh.mocksftp.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mocksftp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mocksftp.paramiko": {
  "data": {
   "shadows": "paramiko"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.mocksftp.returns_sftp_error": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.returns_sftp_error.wrapped": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception",
    "OSError",
    "atomic_hpc.mockssh.mocksftp.LOG",
    "atomic_hpc.mockssh.mocksftp.paramiko",
    "errno.EACCES",
    "errno.EDQUOT",
    "errno.ENOENT",
    "errno.ENOTDIR",
    "errno.EPERM",
    "errno.EROFS",
    "func"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh": {
  "data": {},
  "type": "module"
 },
 "atomic_hpc.mockssh.test_mockssh.files_equal": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.test_mockssh.os",
    "open"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.test_mockssh.mockserver": {
  "data": {
   "shadows": "atomic_hpc.mockssh.mockserver"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.test_mockssh.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.test_mockssh.paramiko": {
  "data": {
   "shadows": "paramiko"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.test_mockssh.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.test_mockssh.server": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.mockserver.Server",
    "atomic_hpc.mockssh.test_mockssh.os",
    "atomic_hpc.mockssh.test_mockssh.pytest",
    "atomic_hpc.mockssh.test_mockssh.shutil"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "atomic_hpc.mockssh.test_mockssh.test_connect_keypath": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.test_mockssh.os",
    "atomic_hpc.mockssh.test_mockssh.paramiko",
    "atomic_hpc.mockssh.test_mockssh.server"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_connect_password": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.test_mockssh.paramiko",
    "atomic_hpc.mockssh.test_mockssh.server"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_connect_wrong_hostname": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "atomic_hpc.mockssh.test_mockssh.paramiko",
    "atomic_hpc.mockssh.test_mockssh.pytest",
    "atomic_hpc.mockssh.test_mockssh.server"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_connect_wrong_keypath": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Exception",
    "atomic_hpc.mockssh.test_mockssh.os",
    "atomic_hpc.mockssh.test_mockssh.paramiko",
    "atomic_hpc.mockssh.test_mockssh.pytest",
    "atomic_hpc.mockssh.test_mockssh.server"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_connect_wrong_password": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.test_mockssh.paramiko",
    "atomic_hpc.mockssh.test_mockssh.pytest",
    "atomic_hpc.mockssh.test_mockssh.server"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_invalid_user": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "KeyError",
    "atomic_hpc.mockssh.test_mockssh.pytest",
    "atomic_hpc.mockssh.test_mockssh.server"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_sftp_session": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "IOError",
    "atomic_hpc.mockssh.test_mockssh.files_equal",
    "atomic_hpc.mockssh.test_mockssh.os",
    "atomic_hpc.mockssh.test_mockssh.pytest",
    "atomic_hpc.mockssh.test_mockssh.server",
    "sorted"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_ssh_session": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "atomic_hpc.mockssh.test_mockssh.pytest",
    "atomic_hpc.mockssh.test_mockssh.server"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "atomic_hpc.test_deploy_runs.logging"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.test_deploy_runs.MockPath": {
  "data": {
   "shadows": "jsonextended.utils.MockPath"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs._create_qsub": {
  "data": {
   "shadows": "atomic_hpc.deploy_runs._create_qsub"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs._replace_in_cmnd": {
  "data": {
   "shadows": "atomic_hpc.deploy_runs._replace_in_cmnd"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.context": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "atomic_hpc.test_deploy_runs.pytest"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.deploy_run_normal": {
  "data": {
   "shadows": "atomic_hpc.deploy_runs.deploy_run_normal"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.deploy_run_qsub": {
  "data": {
   "shadows": "atomic_hpc.deploy_runs.deploy_run_qsub"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.deploy_runs": {
  "data": {
   "shadows": "atomic_hpc.deploy_runs.deploy_runs"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.example_run": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "atomic_hpc.test_deploy_runs.format_config_yaml": {
  "data": {
   "shadows": "atomic_hpc.config_yaml.format_config_yaml"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.get_inputs": {
  "data": {
   "shadows": "atomic_hpc.deploy_runs.get_inputs"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.local_mock": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "atomic_hpc.config_yaml.format_config_yaml",
    "atomic_hpc.test_deploy_runs.example_run",
    "atomic_hpc.test_deploy_runs.pytest",
    "jsonextended.utils.MockPath"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.local_pathlib": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "atomic_hpc.config_yaml.format_config_yaml",
    "atomic_hpc.test_deploy_runs.example_run",
    "atomic_hpc.test_deploy_runs.os",
    "atomic_hpc.test_deploy_runs.pytest",
    "atomic_hpc.test_deploy_runs.shutil",
    "open"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.mockserver": {
  "data": {
   "shadows": "atomic_hpc.mockssh.mockserver"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.remote": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "atomic_hpc.config_yaml.format_config_yaml",
    "atomic_hpc.mockssh.mockserver.Server",
    "atomic_hpc.test_deploy_runs.example_run",
    "atomic_hpc.test_deploy_runs.os",
    "atomic_hpc.test_deploy_runs.pytest",
    "atomic_hpc.test_deploy_runs.shutil",
    "open"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "atomic_hpc.test_deploy_runs.test_create_qsub": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "atomic_hpc.deploy_runs._create_qsub",
    "atomic_hpc.deploy_runs.get_inputs",
    "atomic_hpc.test_deploy_runs.context"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_full_normal": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "atomic_hpc.deploy_runs.deploy_runs",
    "atomic_hpc.test_deploy_runs.context"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_get_inputs": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "atomic_hpc.deploy_runs.get_inputs",
    "atomic_hpc.test_deploy_runs.context",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_get_inputs_missing_file": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "atomic_hpc.deploy_runs.get_inputs",
    "atomic_hpc.test_deploy_runs.context",
    "atomic_hpc.test_deploy_runs.pytest"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_get_inputs_missing_file_in_script": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "KeyError",
    "atomic_hpc.deploy_runs.get_inputs",
    "atomic_hpc.test_deploy_runs.context",
    "atomic_hpc.test_deploy_runs.pytest"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_get_inputs_missing_variable_in_script": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "KeyError",
    "atomic_hpc.deploy_runs.get_inputs",
    "atomic_hpc.test_deploy_runs.context",
    "atomic_hpc.test_deploy_runs.pytest"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_replace_in_cmnd": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "KeyError",
    "atomic_hpc.deploy_runs._replace_in_cmnd",
    "atomic_hpc.test_deploy_runs.pytest"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_run_deploy_normal": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "atomic_hpc.deploy_runs.deploy_run_normal",
    "atomic_hpc.deploy_runs.get_inputs",
    "atomic_hpc.test_deploy_runs.context",
    "atomic_hpc.test_deploy_runs.os",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_run_deploy_qsub_fail_local": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "atomic_hpc.deploy_runs.deploy_run_qsub",
    "atomic_hpc.deploy_runs.get_inputs",
    "atomic_hpc.test_deploy_runs.local_pathlib"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_run_deploy_qsub_pass_local": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "atomic_hpc.deploy_runs.deploy_run_qsub",
    "atomic_hpc.deploy_runs.get_inputs",
    "atomic_hpc.test_deploy_runs.local_pathlib",
    "atomic_hpc.test_deploy_runs.os",
    "atomic_hpc.test_deploy_runs.shutil",
    "pathlib2.Path",
    "sorted",
    "str",
    "tempfile.mkdtemp",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_run_deploy_qsub_pass_remote": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "atomic_hpc.deploy_runs.deploy_run_qsub",
    "atomic_hpc.deploy_runs.get_inputs",
    "atomic_hpc.test_deploy_runs.os",
    "atomic_hpc.test_deploy_runs.remote",
    "atomic_hpc.test_deploy_runs.shutil",
    "pathlib2.Path",
    "sorted",
    "str",
    "tempfile.mkdtemp",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_read_config": {
  "data": {},
  "type": "module"
 },
 "atomic_hpc.test_read_config.edict": {
  "data": {
   "shadows": "jsonextended.edict"
  },
  "type": "import"
 },
 "atomic_hpc.test_read_config.example_file_maximal": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "atomic_hpc.test_read_config.example_file_minimal": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "atomic_hpc.test_read_config.expected_output_maximal": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "atomic_hpc.test_read_config.expected_output_minimal": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "atomic_hpc.test_read_config.format_config_yaml": {
  "data": {
   "shadows": "atomic_hpc.config_yaml.format_config_yaml"
  },
  "type": "import"
 },
 "atomic_hpc.test_read_config.renumber_config_yaml": {
  "data": {
   "shadows": "atomic_hpc.config_yaml.renumber_config_yaml"
  },
  "type": "import"
 },
 "atomic_hpc.test_read_config.test_format_maximal": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "atomic_hpc.config_yaml.format_config_yaml",
    "atomic_hpc.test_read_config.example_file_maximal",
    "atomic_hpc.test_read_config.expected_output_maximal",
    "jsonextended.edict.diff",
    "jsonextended.utils.MockPath"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_read_config.test_format_minimal": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "atomic_hpc.config_yaml.format_config_yaml",
    "atomic_hpc.test_read_config.example_file_minimal",
    "atomic_hpc.test_read_config.expected_output_minimal",
    "jsonextended.edict.diff",
    "jsonextended.utils.MockPath"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_read_config.test_renumber_config_yaml": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "atomic_hpc.config_yaml.renumber_config_yaml",
    "jsonextended.utils.MockPath"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_read_config.utils": {
  "data": {
   "shadows": "jsonextended.utils"
  },
  "type": "import"
 },
 "atomic_hpc.test_utils": {
  "data": {},
  "type": "module"
 },
 "atomic_hpc.test_utils.dummy_isfile": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "atomic_hpc.test_utils.dummy_isfolder": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "atomic_hpc.test_utils.dummy_listdir": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "atomic_hpc.test_utils.dummy_walk_path": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "atomic_hpc.test_utils.dummy_isfile",
    "atomic_hpc.test_utils.dummy_isfolder",
    "atomic_hpc.test_utils.dummy_listdir",
    "atomic_hpc.utils.walk_path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_utils.fnmatch_path": {
  "data": {
   "shadows": "atomic_hpc.utils.fnmatch_path"
  },
  "type": "import"
 },
 "atomic_hpc.test_utils.glob_path": {
  "data": {
   "shadows": "atomic_hpc.utils.glob_path"
  },
  "type": "import"
 },
 "atomic_hpc.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "atomic_hpc.test_utils.splitall": {
  "data": {
   "shadows": "atomic_hpc.utils.splitall"
  },
  "type": "import"
 },
 "atomic_hpc.test_utils.test_fnmatch_path": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "atomic_hpc.test_utils.pytest",
    "atomic_hpc.utils.fnmatch_path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_utils.test_fnmatch_path_fail": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "atomic_hpc.test_utils.pytest",
    "atomic_hpc.utils.fnmatch_path"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_utils.test_glob_path": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "atomic_hpc.test_utils.dummy_walk_path",
    "atomic_hpc.utils.glob_path",
    "list"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_utils.test_splitall": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "atomic_hpc.utils.splitall"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.test_utils.walk_path": {
  "data": {
   "shadows": "atomic_hpc.utils.walk_path"
  },
  "type": "import"
 },
 "atomic_hpc.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "builtins.input"
   ]
  },
  "type": "module"
 },
 "atomic_hpc.utils.add_loglevel": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "AttributeError",
    "atomic_hpc.utils.logging",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.utils.add_loglevel.logForLevel": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "atomic_hpc.utils.add_loglevel.logToRoot": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "atomic_hpc.utils.logging"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.utils.cmndline_prompt": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "atomic_hpc.utils.sys",
    "builtins.input",
    "distutils.strtobool"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.utils.fnmatch": {
  "data": {
   "shadows": "fnmatch.fnmatch"
  },
  "type": "import"
 },
 "atomic_hpc.utils.fnmatch_path": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "atomic_hpc.utils.splitall",
    "enumerate",
    "fnmatch.fnmatch",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.utils.glob_path": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "atomic_hpc.utils.fnmatch_path",
    "atomic_hpc.utils.os",
    "walk_func"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.utils.input": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "atomic_hpc.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "atomic_hpc.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "atomic_hpc.utils.splitall": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "atomic_hpc.utils.os"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.utils.str2intlist": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "enumerate",
    "get_int",
    "list",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.utils.str2intlist.get_int": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "TypeError",
    "int"
   ]
  },
  "type": "function"
 },
 "atomic_hpc.utils.strtobool": {
  "data": {
   "shadows": "distutils.strtobool"
  },
  "type": "import"
 },
 "atomic_hpc.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "atomic_hpc.utils.walk_path": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "atomic_hpc.utils.os",
    "isfile",
    "isfolder",
    "listdir"
   ]
  },
  "type": "function"
 }
}