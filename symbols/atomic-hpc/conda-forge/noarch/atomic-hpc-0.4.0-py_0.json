{
 "atomic_hpc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "atomic_hpc.config_yaml": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "atomic_hpc.config_yaml.format_config_yaml": {
  "lineno": 178,
  "symbols_in_volume": [
   "jsonextended.edict.combine_lists",
   "jsonextended.edict.filter_keys",
   "jsonextended.edict.merge",
   "jsonschema.ValidationError",
   "jsonschema.validate",
   "pathlib2.Path",
   "ruamel.yaml.YAML"
  ],
  "type": "function"
 },
 "atomic_hpc.config_yaml.renumber_config_yaml": {
  "lineno": 241,
  "symbols_in_volume": [
   "jsonschema.validate",
   "pathlib2.Path",
   "ruamel.yaml.YAML"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "atomic_hpc.context_folder.abstract": {
  "lineno": null,
  "symbols_in_volume": [
   "atomic_hpc.utils.add_loglevel",
   "logging.INFO"
  ],
  "type": "module"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.check_cmndline_security": {
  "lineno": 261,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.chmod": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.copy": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.copy_from": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.copy_to": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.exec_cmnd": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.exists": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.getabs": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.glob": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.isdir": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.isfile": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.iterdir": {
  "lineno": 202,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.makedirs": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.name": {
  "lineno": 18,
  "symbols_in_volume": [
   "os.path.basename"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.open": {
  "lineno": 118,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.remove": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.rename": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.rmtree": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.abstract.VirtualDir.stat": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.base": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "atomic_hpc.context_folder.base.change_dir": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "atomic_hpc.context_folder.base.change_dir.__enter__": {
  "lineno": 84,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.local.LocalPath",
   "atomic_hpc.context_folder.remote.RemotePath"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.base.change_dir.__exit__": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.base.change_dir.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.abspath",
   "os.path.exists",
   "os.path.expanduser",
   "os.path.isdir",
   "paramiko.AutoAddPolicy",
   "paramiko.SSHClient",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.local": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "atomic_hpc.context_folder.local.LocalPath": {
  "lineno": 27,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.abstract.VirtualDir"
  ],
  "type": "class"
 },
 "atomic_hpc.context_folder.local.LocalPath.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath._exec_in_dir": {
  "lineno": 339,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.chdir",
   "os.getcwd"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath._pipe_reader": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.chmod": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.copy": {
  "lineno": 255,
  "symbols_in_volume": [
   "os.path.relpath"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.copy_from": {
  "lineno": 283,
  "symbols_in_volume": [
   "pathlib2.Path",
   "shutil.copy",
   "shutil.copytree"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.copy_to": {
  "lineno": 311,
  "symbols_in_volume": [
   "pathlib2.Path",
   "shutil.copy",
   "shutil.copytree"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.exec_cmnd": {
  "lineno": 409,
  "symbols_in_volume": [
   "Queue.Queue",
   "logging.error",
   "subprocess.PIPE",
   "subprocess.Popen",
   "threading.Thread"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.exists": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.getabs": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.glob": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.isdir": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.isfile": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.makedirs": {
  "lineno": 117,
  "symbols_in_volume": [
   "atomic_hpc.utils.splitall"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.open": {
  "lineno": 214,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.remove": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.rename": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.rmtree": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.local.LocalPath.stat": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "msvcrt.setmode",
   "os.O_BINARY",
   "sys.platform",
   "sys.stdout.fileno"
  ],
  "type": "module"
 },
 "atomic_hpc.context_folder.remote.RemotePath": {
  "lineno": 42,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.abstract.VirtualDir"
  ],
  "type": "class"
 },
 "atomic_hpc.context_folder.remote.RemotePath.__init__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath._log_error": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath._log_output": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath._stream_exec": {
  "lineno": 382,
  "symbols_in_volume": [
   "select.select",
   "sys.stderr",
   "sys.stderr.buffer.write",
   "sys.stderr.write",
   "sys.stdout",
   "sys.stdout.buffer.write",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.chmod": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.copy": {
  "lineno": 513,
  "symbols_in_volume": [
   "os.path.basename"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.copy_from": {
  "lineno": 294,
  "symbols_in_volume": [
   "os.path.join",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.copy_to": {
  "lineno": 323,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.join",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.exec_cmnd": {
  "lineno": 457,
  "symbols_in_volume": [
   "logging.error",
   "os.path.join"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.exists": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.getabs": {
  "lineno": 148,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.glob": {
  "lineno": 185,
  "symbols_in_volume": [
   "atomic_hpc.utils.glob_path",
   "atomic_hpc.utils.splitall",
   "os.path.join"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.glob.walk_func": {
  "lineno": 202,
  "symbols_in_volume": [
   "atomic_hpc.utils.walk_path"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.isdir": {
  "lineno": 85,
  "symbols_in_volume": [
   "stat.S_ISDIR"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.isfile": {
  "lineno": 99,
  "symbols_in_volume": [
   "stat.S_ISREG"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.makedirs": {
  "lineno": 163,
  "symbols_in_volume": [
   "atomic_hpc.utils.splitall",
   "os.path.join"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.open": {
  "lineno": 359,
  "symbols_in_volume": [
   "codecs.getreader",
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.remove": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.rename": {
  "lineno": 248,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.rmtree": {
  "lineno": 221,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.RemotePath.stat": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.renew_connection": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.remote.renew_connection.wrapper": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.basicConfig"
  ],
  "type": "module"
 },
 "atomic_hpc.context_folder.test_context_folder.context": {
  "lineno": 94,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.local_mockpath": {
  "lineno": 54,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.change_dir",
   "jsonextended.utils.MockPath",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.local_pathlib": {
  "lineno": 29,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.change_dir",
   "os.mkdir",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "pathlib2.Path",
   "pytest.fixture",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.remote": {
  "lineno": 66,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.change_dir",
   "atomic_hpc.mockssh.mockserver.Server",
   "os.mkdir",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "pathlib2.Path",
   "pytest.fixture",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_consistent": {
  "lineno": 21,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.LocalPath",
   "atomic_hpc.context_folder.RemotePath",
   "inspect.getmembers",
   "inspect.isfunction"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_context_methods1": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_context_methods2": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_exec_cmnd_multiline_output": {
  "lineno": 189,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.basicConfig",
   "sys.stdout"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_exec_cmnd_with_stderr": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_exec_fail": {
  "lineno": 166,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.context_folder.test_context_folder.test_exec_longer_cmnd": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.deploy_runs": {
  "lineno": null,
  "symbols_in_volume": [
   "atomic_hpc.utils.add_loglevel",
   "logging.INFO",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "atomic_hpc.deploy_runs._create_qsub": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.deploy_runs._replace_in_cmnd": {
  "lineno": 43,
  "symbols_in_volume": [
   "re.findall"
  ],
  "type": "function"
 },
 "atomic_hpc.deploy_runs._resolve_walltime": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.deploy_runs.create_output_dir": {
  "lineno": 233,
  "symbols_in_volume": [
   "atomic_hpc.__version__",
   "os.path.join",
   "ruamel.yaml.YAML",
   "time.strftime"
  ],
  "type": "function"
 },
 "atomic_hpc.deploy_runs.deploy_run_normal": {
  "lineno": 288,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.change_dir",
   "logging.info",
   "os.path.basename",
   "os.path.join",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "atomic_hpc.deploy_runs.deploy_run_qsub": {
  "lineno": 590,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.change_dir",
   "os.path.join",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "atomic_hpc.deploy_runs.deploy_runs": {
  "lineno": 182,
  "symbols_in_volume": [
   "logging.critical"
  ],
  "type": "function"
 },
 "atomic_hpc.deploy_runs.get_inputs": {
  "lineno": 68,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.change_dir",
   "copy.copy",
   "pathlib2.Path",
   "re.findall"
  ],
  "type": "function"
 },
 "atomic_hpc.deploy_runs.retrieve_outputs": {
  "lineno": 668,
  "symbols_in_volume": [
   "atomic_hpc.context_folder.change_dir",
   "fnmatch.fnmatch",
   "os.path.basename",
   "os.path.join",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "atomic_hpc.frontend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "atomic_hpc.frontend.retrieve_config": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "atomic_hpc.frontend.retrieve_config.ErrorParser": {
  "lineno": 86,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "class"
 },
 "atomic_hpc.frontend.retrieve_config.ErrorParser.error": {
  "lineno": 91,
  "symbols_in_volume": [
   "sys.exit",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "atomic_hpc.frontend.retrieve_config.main": {
  "lineno": 97,
  "symbols_in_volume": [
   "atomic_hpc.__version__",
   "atomic_hpc.utils.cmndline_prompt",
   "atomic_hpc.utils.str2intlist",
   "os.getcwd",
   "os.path.join",
   "sys.argv",
   "sys.exit"
  ],
  "type": "function"
 },
 "atomic_hpc.frontend.retrieve_config.run": {
  "lineno": 16,
  "symbols_in_volume": [
   "atomic_hpc.config_yaml.format_config_yaml",
   "atomic_hpc.deploy_runs.retrieve_outputs",
   "jsonschema.ValidationError",
   "logging",
   "logging.DEBUG",
   "logging.Filter",
   "logging.Formatter",
   "logging.StreamHandler",
   "logging.getLogger",
   "os.path.abspath",
   "sys.stdout"
  ],
  "type": "function"
 },
 "atomic_hpc.frontend.run_config": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "atomic_hpc.frontend.run_config.ErrorParser": {
  "lineno": 88,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "class"
 },
 "atomic_hpc.frontend.run_config.ErrorParser.error": {
  "lineno": 93,
  "symbols_in_volume": [
   "sys.exit",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "atomic_hpc.frontend.run_config.main": {
  "lineno": 99,
  "symbols_in_volume": [
   "atomic_hpc.__version__",
   "atomic_hpc.utils.cmndline_prompt",
   "atomic_hpc.utils.str2intlist",
   "os.getcwd",
   "sys.argv",
   "sys.exit"
  ],
  "type": "function"
 },
 "atomic_hpc.frontend.run_config.run": {
  "lineno": 16,
  "symbols_in_volume": [
   "atomic_hpc.config_yaml.format_config_yaml",
   "atomic_hpc.deploy_runs.deploy_runs",
   "jsonschema.ValidationError",
   "logging",
   "logging.DEBUG",
   "logging.Filter",
   "logging.Formatter",
   "logging.StreamHandler",
   "logging.getLogger",
   "os.path.abspath",
   "sys.stdout"
  ],
  "type": "function"
 },
 "atomic_hpc.frontend.test_frontend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "atomic_hpc.frontend.test_frontend.test_retrieve_config_help": {
  "lineno": 12,
  "symbols_in_volume": [
   "atomic_hpc.frontend.retrieve_config.main",
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.frontend.test_frontend.test_run_config_help": {
  "lineno": 6,
  "symbols_in_volume": [
   "atomic_hpc.frontend.run_config.main",
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "atomic_hpc.mockssh.mockserver": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "atomic_hpc.mockssh.mockserver.Handler": {
  "lineno": 57,
  "symbols_in_volume": [
   "logging.getLogger",
   "paramiko.ServerInterface"
  ],
  "type": "class"
 },
 "atomic_hpc.mockssh.mockserver.Handler.__init__": {
  "lineno": 61,
  "symbols_in_volume": [
   "atomic_hpc.mockssh.mocksftp.SFTPServer",
   "paramiko.RSAKey",
   "paramiko.Transport"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.check_auth_password": {
  "lineno": 100,
  "symbols_in_volume": [
   "paramiko.AUTH_FAILED",
   "paramiko.AUTH_SUCCESSFUL"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.check_auth_publickey": {
  "lineno": 114,
  "symbols_in_volume": [
   "paramiko.AUTH_FAILED",
   "paramiko.AUTH_SUCCESSFUL"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.check_channel_exec_request": {
  "lineno": 128,
  "symbols_in_volume": [
   "Queue.Queue"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.check_channel_request": {
  "lineno": 132,
  "symbols_in_volume": [
   "paramiko.OPEN_FAILED_ADMINISTRATIVELY_PROHIBITED",
   "paramiko.OPEN_SUCCEEDED"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.get_allowed_auths": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.handle_client": {
  "lineno": 82,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Handler.run": {
  "lineno": 70,
  "symbols_in_volume": [
   "Queue.Queue",
   "threading.Thread"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server": {
  "lineno": 171,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "class"
 },
 "atomic_hpc.mockssh.mockserver.Server.__enter__": {
  "lineno": 204,
  "symbols_in_volume": [
   "os.chdir",
   "os.getcwd",
   "socket.AF_INET",
   "socket.SOCK_STREAM",
   "socket.socket",
   "threading.Thread"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.__exit__": {
  "lineno": 229,
  "symbols_in_volume": [
   "os.chdir",
   "socket.SHUT_RDWR"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.__init__": {
  "lineno": 177,
  "symbols_in_volume": [
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server._run": {
  "lineno": 216,
  "symbols_in_volume": [
   "select.select",
   "threading.Thread"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.add_user": {
  "lineno": 186,
  "symbols_in_volume": [
   "paramiko.RSAKey.from_private_key_file"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.client": {
  "lineno": 240,
  "symbols_in_volume": [
   "paramiko.RSAKey.from_private_key_file",
   "paramiko.RejectPolicy",
   "paramiko.SSHClient"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.port": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.Server.users": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mockserver.patch_chdir": {
  "lineno": 141,
  "symbols_in_volume": [
   "errno.ENOTDIR",
   "os.path.abspath",
   "os.path.isabs",
   "os.path.join",
   "os.strerror",
   "paramiko.py3compat.b",
   "paramiko.sftp.SFTPError",
   "stat.S_ISDIR"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPHandle": {
  "lineno": 35,
  "symbols_in_volume": [
   "logging.getLogger",
   "paramiko.SFTPHandle"
  ],
  "type": "class"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPHandle.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPHandle.readfile": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPHandle.writefile": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServer": {
  "lineno": 153,
  "symbols_in_volume": [
   "paramiko.SFTPServer"
  ],
  "type": "class"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServer.__init__": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface": {
  "lineno": 77,
  "symbols_in_volume": [
   "logging.getLogger",
   "paramiko.SFTPServerInterface"
  ],
  "type": "class"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.chattr": {
  "lineno": 113,
  "symbols_in_volume": [
   "os.chmod",
   "paramiko.SFTP_OK"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.list_folder": {
  "lineno": 122,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join",
   "os.stat",
   "paramiko.SFTPAttributes.from_stat"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.mkdir": {
  "lineno": 132,
  "symbols_in_volume": [
   "os.mkdir",
   "paramiko.SFTP_OK"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.open": {
  "lineno": 94,
  "symbols_in_volume": [
   "os.O_APPEND",
   "os.O_RDWR",
   "os.O_WRONLY",
   "os.fdopen",
   "os.open"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.remove": {
  "lineno": 137,
  "symbols_in_volume": [
   "os.remove",
   "paramiko.SFTP_OK"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.rename": {
  "lineno": 142,
  "symbols_in_volume": [
   "os.rename",
   "paramiko.SFTP_OK"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.rmdir": {
  "lineno": 147,
  "symbols_in_volume": [
   "os.rmdir",
   "paramiko.SFTP_OK"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.session_ended": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.session_started": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.SFTPServerInterface.stat": {
  "lineno": 108,
  "symbols_in_volume": [
   "os.stat",
   "paramiko.SFTPAttributes.from_stat"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.returns_sftp_error": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.mockssh.mocksftp.returns_sftp_error.wrapped": {
  "lineno": 57,
  "symbols_in_volume": [
   "errno.EACCES",
   "errno.EDQUOT",
   "errno.ENOENT",
   "errno.ENOTDIR",
   "errno.EPERM",
   "errno.EROFS",
   "paramiko.SFTP_FAILURE",
   "paramiko.SFTP_NO_SUCH_FILE",
   "paramiko.SFTP_PERMISSION_DENIED"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "atomic_hpc.mockssh.test_mockssh.files_equal": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.stat"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.server": {
  "lineno": 20,
  "symbols_in_volume": [
   "atomic_hpc.mockssh.mockserver.Server",
   "os.mkdir",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "pytest.fixture",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_connect_keypath": {
  "lineno": 97,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "paramiko.AutoAddPolicy",
   "paramiko.SSHClient"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_connect_password": {
  "lineno": 85,
  "symbols_in_volume": [
   "paramiko.AutoAddPolicy",
   "paramiko.SSHClient"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_connect_wrong_hostname": {
  "lineno": 44,
  "symbols_in_volume": [
   "paramiko.AutoAddPolicy",
   "paramiko.SSHClient",
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_connect_wrong_keypath": {
  "lineno": 71,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "paramiko.AutoAddPolicy",
   "paramiko.SSHClient",
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_connect_wrong_password": {
  "lineno": 58,
  "symbols_in_volume": [
   "paramiko.AutoAddPolicy",
   "paramiko.SSHClient",
   "paramiko.ssh_exception.AuthenticationException",
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_invalid_user": {
  "lineno": 38,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_sftp_session": {
  "lineno": 120,
  "symbols_in_volume": [
   "os.F_OK",
   "os.access",
   "os.path.dirname",
   "os.path.join",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.mockssh.test_mockssh.test_ssh_session": {
  "lineno": 110,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.basicConfig"
  ],
  "type": "module"
 },
 "atomic_hpc.test_deploy_runs.context": {
  "lineno": 149,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.local_mock": {
  "lineno": 102,
  "symbols_in_volume": [
   "atomic_hpc.config_yaml.format_config_yaml",
   "jsonextended.utils.MockPath",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.local_pathlib": {
  "lineno": 79,
  "symbols_in_volume": [
   "atomic_hpc.config_yaml.format_config_yaml",
   "os.mkdir",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "pytest.fixture",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.remote": {
  "lineno": 123,
  "symbols_in_volume": [
   "atomic_hpc.config_yaml.format_config_yaml",
   "atomic_hpc.mockssh.mockserver.Server",
   "os.mkdir",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "pytest.fixture",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_create_qsub": {
  "lineno": 237,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs._create_qsub",
   "atomic_hpc.deploy_runs.get_inputs"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_full_normal": {
  "lineno": 232,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs.deploy_runs"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_get_inputs": {
  "lineno": 154,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs.get_inputs"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_get_inputs_missing_file": {
  "lineno": 182,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs.get_inputs",
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_get_inputs_missing_file_in_script": {
  "lineno": 174,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs.get_inputs",
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_get_inputs_missing_variable_in_script": {
  "lineno": 166,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs.get_inputs",
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_replace_in_cmnd": {
  "lineno": 190,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs._replace_in_cmnd",
   "pytest.raises"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_run_deploy_normal": {
  "lineno": 200,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs.deploy_run_normal",
   "atomic_hpc.deploy_runs.get_inputs",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_run_deploy_qsub_fail_local": {
  "lineno": 351,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs.deploy_run_qsub",
   "atomic_hpc.deploy_runs.get_inputs"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_run_deploy_qsub_pass_local": {
  "lineno": 360,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs.deploy_run_qsub",
   "atomic_hpc.deploy_runs.get_inputs",
   "os.environ",
   "os.getenv",
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "pathlib2.Path",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "atomic_hpc.test_deploy_runs.test_run_deploy_qsub_pass_remote": {
  "lineno": 402,
  "symbols_in_volume": [
   "atomic_hpc.deploy_runs.deploy_run_qsub",
   "atomic_hpc.deploy_runs.get_inputs",
   "os.environ",
   "os.getenv",
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "pathlib2.Path",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "atomic_hpc.test_read_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "atomic_hpc.test_read_config.test_format_maximal": {
  "lineno": 283,
  "symbols_in_volume": [
   "atomic_hpc.config_yaml.format_config_yaml",
   "jsonextended.edict.diff",
   "jsonextended.utils.MockPath"
  ],
  "type": "function"
 },
 "atomic_hpc.test_read_config.test_format_minimal": {
  "lineno": 273,
  "symbols_in_volume": [
   "atomic_hpc.config_yaml.format_config_yaml",
   "jsonextended.edict.diff",
   "jsonextended.utils.MockPath"
  ],
  "type": "function"
 },
 "atomic_hpc.test_read_config.test_renumber_config_yaml": {
  "lineno": 293,
  "symbols_in_volume": [
   "atomic_hpc.config_yaml.renumber_config_yaml",
   "jsonextended.utils.MockPath"
  ],
  "type": "function"
 },
 "atomic_hpc.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "atomic_hpc.test_utils.dummy_isfile": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.test_utils.dummy_isfolder": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.test_utils.dummy_listdir": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.test_utils.dummy_walk_path": {
  "lineno": 31,
  "symbols_in_volume": [
   "atomic_hpc.utils.walk_path"
  ],
  "type": "function"
 },
 "atomic_hpc.test_utils.test_fnmatch_path": {
  "lineno": 39,
  "symbols_in_volume": [
   "atomic_hpc.utils.fnmatch_path",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "atomic_hpc.test_utils.test_fnmatch_path_fail": {
  "lineno": 49,
  "symbols_in_volume": [
   "atomic_hpc.utils.fnmatch_path",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "atomic_hpc.test_utils.test_glob_path": {
  "lineno": 56,
  "symbols_in_volume": [
   "atomic_hpc.utils.glob_path"
  ],
  "type": "function"
 },
 "atomic_hpc.test_utils.test_splitall": {
  "lineno": 35,
  "symbols_in_volume": [
   "atomic_hpc.utils.splitall"
  ],
  "type": "function"
 },
 "atomic_hpc.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "builtins.input"
  ],
  "type": "module"
 },
 "atomic_hpc.utils.add_loglevel": {
  "lineno": 170,
  "symbols_in_volume": [
   "logging",
   "logging.addLevelName",
   "logging.getLoggerClass"
  ],
  "type": "function"
 },
 "atomic_hpc.utils.add_loglevel.logForLevel": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.utils.add_loglevel.logToRoot": {
  "lineno": 220,
  "symbols_in_volume": [
   "logging.root._log",
   "logging.root.isEnabledFor"
  ],
  "type": "function"
 },
 "atomic_hpc.utils.cmndline_prompt": {
  "lineno": 230,
  "symbols_in_volume": [
   "builtins.input",
   "distutils.strtobool",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "atomic_hpc.utils.fnmatch_path": {
  "lineno": 43,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "atomic_hpc.utils.glob_path": {
  "lineno": 108,
  "symbols_in_volume": [
   "os.path.join",
   "os.walk"
  ],
  "type": "function"
 },
 "atomic_hpc.utils.splitall": {
  "lineno": 16,
  "symbols_in_volume": [
   "os.path.split"
  ],
  "type": "function"
 },
 "atomic_hpc.utils.str2intlist": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.utils.str2intlist.get_int": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "atomic_hpc.utils.walk_path": {
  "lineno": 136,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 }
}