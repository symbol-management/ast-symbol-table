{
 "pystem": {
  "data": {},
  "type": "module"
 },
 "pystem.colorcode": {
  "data": {
   "symbols_in_volume": [
    "pystem.colorcode.colorsys",
    "pystem.colorcode.numba"
   ]
  },
  "type": "module"
 },
 "pystem.colorcode.colorcode": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "innercolorcode",
    "list",
    "numpy.int32",
    "numpy.max",
    "numpy.min",
    "numpy.zeros",
    "pystem.colorcode.colorcode_hue"
   ]
  },
  "type": "function"
 },
 "pystem.colorcode.colorcode.innercolorcode": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.ndindex",
    "pystem.colorcode.newhsv",
    "pystem.colorcode.numba"
   ]
  },
  "type": "function"
 },
 "pystem.colorcode.colorcode_hue": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "pystem.colorcode.colorcode_legend": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.zeros",
    "pystem.colorcode.colorcode_hue",
    "pystem.colorcode.newhsv",
    "range"
   ]
  },
  "type": "function"
 },
 "pystem.colorcode.colorsys": {
  "data": {
   "shadows": "colorsys"
  },
  "type": "import"
 },
 "pystem.colorcode.newhsv": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pystem.colorcode.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystem.colorcode.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "pystem.preselected_translations": {
  "data": {},
  "type": "module"
 },
 "pystem.preselected_translations._preselectedtranslations": {
  "data": {
   "shadows": "_preselectedtranslations"
  },
  "type": "import"
 },
 "pystem.preselected_translations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystem.preselected_translations.preselected_translations": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.float32",
    "numpy.int32",
    "numpy.max",
    "numpy.reshape",
    "numpy.zeros",
    "pystem.preselected_translations._preselectedtranslations"
   ]
  },
  "type": "function"
 },
 "pystem.stemclustering": {
  "data": {},
  "type": "module"
 },
 "pystem.stemclustering.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "pystem.stemclustering.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "pystem.stemclustering.methods_implemented": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pystem.stemclustering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystem.stemclustering.stemClustering": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.reshape",
    "numpy.zeros",
    "pystem.stemclustering.methods_implemented",
    "pystem.stemclustering.time",
    "range",
    "sklearn.cluster.KMeans",
    "sklearn.mixture.GaussianMixture"
   ]
  },
  "type": "function"
 },
 "pystem.stemclustering.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pystem.stemdescriptor": {
  "data": {},
  "type": "module"
 },
 "pystem.stemdescriptor._stemdescriptor": {
  "data": {
   "shadows": "_stemdescriptor"
  },
  "type": "import"
 },
 "pystem.stemdescriptor.fftstem": {
  "data": {
   "shadows": "stemdescriptor2"
  },
  "type": "import"
 },
 "pystem.stemdescriptor.get_descriptor": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.arange",
    "numpy.float32",
    "numpy.reshape",
    "numpy.zeros",
    "pystem.stemdescriptor._stemdescriptor",
    "pystem.stemdescriptor.get_good_fftsize",
    "pystem.stemdescriptor.get_num_shifts",
    "pystem.stemdescriptor.get_shifts",
    "pystem.stemdescriptor.methods_implemented",
    "pystem.stemdescriptor.time",
    "stemdescriptor2.WindowFFT"
   ]
  },
  "type": "function"
 },
 "pystem.stemdescriptor.get_good_fftsize": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pystem.stemdescriptor.good_fftsize"
   ]
  },
  "type": "function"
 },
 "pystem.stemdescriptor.get_num_shifts": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pystem.stemdescriptor.get_shifts": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "pystem.stemdescriptor.good_fftsize": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "pystem.stemdescriptor.methods_implemented": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pystem.stemdescriptor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystem.stemdescriptor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pystem.stemdescriptor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pystem.stempower_spectrum": {
  "data": {},
  "type": "module"
 },
 "pystem.stempower_spectrum.get_power_spectrum_m1": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.fft.fft2",
    "numpy.float32",
    "numpy.hanning",
    "numpy.log",
    "numpy.mean",
    "numpy.outer",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pystem.stempower_spectrum.get_power_spectrum_m2": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.fft.fft2",
    "numpy.hanning",
    "numpy.log",
    "numpy.mean",
    "numpy.outer",
    "numpy.reshape",
    "numpy.sqrt",
    "pystem.stempower_spectrum.mf"
   ]
  },
  "type": "function"
 },
 "pystem.stempower_spectrum.mf": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "numpy.lib.stride_tricks.as_strided"
   ]
  },
  "type": "function"
 },
 "pystem.stempower_spectrum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystem.stempower_spectrum.st": {
  "data": {
   "shadows": "numpy.lib.stride_tricks"
  },
  "type": "import"
 },
 "pystem.stemsegmentation": {
  "data": {},
  "type": "module"
 },
 "pystem.stemsegmentation.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.NearestNDInterpolator": {
  "data": {
   "shadows": "scipy.interpolate.NearestNDInterpolator"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.calculate_Fisher_separability": {
  "data": {
   "shadows": "pystem.util.calculate_Fisher_separability"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.descriptors_implemented": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pystem.stemsegmentation.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.get_descriptor": {
  "data": {
   "shadows": "pystem.stemdescriptor.get_descriptor"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.get_power_spectrum_m1": {
  "data": {
   "shadows": "pystem.stempower_spectrum.get_power_spectrum_m1"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.get_power_spectrum_m2": {
  "data": {
   "shadows": "pystem.stempower_spectrum.get_power_spectrum_m2"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.get_reflection_symmetry_descriptors": {
  "data": {
   "shadows": "pystem.stemreflection_symmetry_descriptors.get_reflection_symmetry_descriptors"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.get_rotational_symmetry_descriptors": {
  "data": {
   "shadows": "pystem.stemrotational_symmetry_descriptors.get_rotational_symmetry_descriptors"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.map_coordinates": {
  "data": {
   "shadows": "scipy.ndimage.map_coordinates"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.methods_implemented": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pystem.stemsegmentation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.preselected_translations": {
  "data": {
   "shadows": "pystem.preselected_translations.preselected_translations"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.segmentationSTEM": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "pystem.stemsegmentation.segmentationSTEM.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.max",
    "pystem.preselected_translations.preselected_translations",
    "pystem.stemsegmentation.descriptors_implemented",
    "pystem.stemsegmentation.methods_implemented"
   ]
  },
  "type": "function"
 },
 "pystem.stemsegmentation.segmentationSTEM.check_image_validity": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "ValueError",
    "numpy.__name__",
    "type"
   ]
  },
  "type": "function"
 },
 "pystem.stemsegmentation.segmentationSTEM.get_PCA_components": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.reshape",
    "numpy.shape",
    "print",
    "pystem.stemsegmentation.warnings",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "pystem.stemsegmentation.segmentationSTEM.get_descriptors": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "print",
    "pystem.preselected_translations.preselected_translations",
    "pystem.stemdescriptor.get_descriptor",
    "pystem.stempower_spectrum.get_power_spectrum_m1",
    "pystem.stemreflection_symmetry_descriptors.get_reflection_symmetry_descriptors",
    "pystem.stemrotational_symmetry_descriptors.get_rotational_symmetry_descriptors"
   ]
  },
  "type": "function"
 },
 "pystem.stemsegmentation.segmentationSTEM.perform_clustering": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.argsort",
    "numpy.float32",
    "numpy.int32",
    "numpy.reshape",
    "numpy.zeros_like",
    "print",
    "pystem.util.calculate_Fisher_separability",
    "sklearn.cluster.KMeans"
   ]
  },
  "type": "function"
 },
 "pystem.stemsegmentation.segmentationSTEM.perform_soft_segmentation": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "numpy.linalg.norm",
    "numpy.zeros",
    "print",
    "pystem.stemsegmentation.scipy",
    "range"
   ]
  },
  "type": "function"
 },
 "pystem.stemsegmentation.segmentationSTEM.perform_upsampling_labels": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "interpolator",
    "numpy.arange",
    "numpy.clip",
    "numpy.meshgrid",
    "numpy.reshape",
    "numpy.vstack",
    "print",
    "scipy.interpolate.NearestNDInterpolator",
    "scipy.ndimage.map_coordinates"
   ]
  },
  "type": "function"
 },
 "pystem.stemsegmentation.segmentationSTEM.sort_labels_by_pattern_size": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.argsort",
    "numpy.int32",
    "numpy.reshape",
    "numpy.sort",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "numpy.zeros_like",
    "print"
   ]
  },
  "type": "function"
 },
 "pystem.stemsegmentation.stemClustering": {
  "data": {
   "shadows": "pystem.stemclustering.stemClustering"
  },
  "type": "import"
 },
 "pystem.stemsegmentation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pystem.stemvertical_horizontal_reflection_symmetry_descriptors": {
  "data": {},
  "type": "module"
 },
 "pystem.stemvertical_horizontal_reflection_symmetry_descriptors.cross_autocorrelation": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pystem.stemvertical_horizontal_reflection_symmetry_descriptors.get_reflection_symmetry_descriptors": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.float32",
    "numpy.reshape",
    "numpy.sort",
    "numpy.zeros",
    "pystem.stemvertical_horizontal_reflection_symmetry_descriptors.image_reflection_symmetry"
   ]
  },
  "type": "function"
 },
 "pystem.stemvertical_horizontal_reflection_symmetry_descriptors.image_reflection_symmetry": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.flip",
    "numpy.float32",
    "numpy.mean",
    "numpy.zeros",
    "pystem.stemvertical_horizontal_reflection_symmetry_descriptors.cross_autocorrelation",
    "range"
   ]
  },
  "type": "function"
 },
 "pystem.stemvertical_horizontal_reflection_symmetry_descriptors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pystem.util": {
  "data": {},
  "type": "module"
 },
 "pystem.util.calculate_Fisher_separability": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.mean",
    "numpy.sum",
    "numpy.unique",
    "numpy.var",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pystem.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 }
}