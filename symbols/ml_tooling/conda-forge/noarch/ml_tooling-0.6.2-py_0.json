{
 "ml_tooling": {
  "data": {
   "symbols_in_volume": [
    "ml_tooling.pkg_resources"
   ]
  },
  "type": "module"
 },
 "ml_tooling.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ml_tooling.__version__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ml_tooling.baseclass": {
  "data": {
   "symbols_in_volume": [
    "create_logger"
   ]
  },
  "type": "module"
 },
 "ml_tooling.baseclass.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.BaseClassModel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ConfigGetter",
    "ml_tooling.baseclass.abc"
   ]
  },
  "type": "class"
 },
 "ml_tooling.baseclass.BaseClassModel.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_get_model_name",
    "_validate_model"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.__repr__": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel._generate_filename": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "get_git_hash"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel._load_data": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ml_tooling.baseclass.logger"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel._score_model": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Result",
    "_get_model_name",
    "get_scoring_func",
    "ml_tooling.baseclass.logger",
    "scoring_func",
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel._score_model_cv": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "CVResult",
    "_get_model_name",
    "ml_tooling.baseclass.logger",
    "numpy.mean",
    "sklearn.model_selection.cross_val_score"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.class_name": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.data": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.default_metric": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.get_prediction_data": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ml_tooling.baseclass.abc"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.get_training_data": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ml_tooling.baseclass.abc",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.gridsearch": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "CVResult",
    "ResultGroup",
    "_create_param_grid",
    "dict",
    "enumerate",
    "get_scoring_func",
    "int",
    "itertools.product",
    "list",
    "ml_tooling.baseclass.logger",
    "numpy.array",
    "parallel",
    "sklearn.base.BaseEstimator",
    "sklearn.clone",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed",
    "sklearn.model_selection.check_cv",
    "sklearn.model_selection.fit_grid_point",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.load_model": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.__name__",
    "find_model_file",
    "ml_tooling.baseclass.logger",
    "ml_tooling.baseclass.pathlib",
    "sklearn.externals.joblib.load",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.log": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.make_prediction": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "MLToolingError",
    "bool",
    "hasattr",
    "pandas.DataFrame",
    "sklearn.exceptions.NotFittedError",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.reset_config": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "DefaultConfig",
    "classmethod",
    "cls",
    "cls._config"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.save_model": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "MLToolingError",
    "float",
    "log_model",
    "ml_tooling.baseclass.logger",
    "ml_tooling.baseclass.pathlib",
    "sklearn.externals.joblib.dump",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.score_model": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "int",
    "ml_tooling.baseclass.logger",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.setup_model": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.test_models": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ResultGroup",
    "_get_model_name",
    "bool",
    "classmethod",
    "cls",
    "enumerate",
    "int",
    "len",
    "ml_tooling.baseclass.logger",
    "str",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseClassModel.train_model": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ml_tooling.baseclass.logger"
   ]
  },
  "type": "function"
 },
 "ml_tooling.baseclass.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.check_cv": {
  "data": {
   "shadows": "sklearn.model_selection.check_cv"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.fit_grid_point": {
  "data": {
   "shadows": "sklearn.model_selection.fit_grid_point"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.joblib": {
  "data": {
   "shadows": "sklearn.externals.joblib"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ml_tooling.baseclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ml_tooling.baseclass.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "ml_tooling.config": {
  "data": {
   "symbols_in_volume": [
    "ml_tooling.config.BASE_PATH",
    "ml_tooling.config.CWD",
    "ml_tooling.config.pathlib",
    "str"
   ]
  },
  "type": "module"
 },
 "ml_tooling.config.BASE_PATH": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ml_tooling.config.CWD": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ml_tooling.config.ConfigGetter": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "ml_tooling.config.ConfigGetter.__get__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ml_tooling.config.DefaultConfig"
   ]
  },
  "type": "function"
 },
 "ml_tooling.config.DefaultConfig": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "ml_tooling.config.DefaultConfig.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ml_tooling.config.MODEL_DIR",
    "ml_tooling.config.MPL_STYLESHEET",
    "ml_tooling.config.RUN_DIR"
   ]
  },
  "type": "function"
 },
 "ml_tooling.config.DefaultConfig.__repr__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "ml_tooling.config.MODEL_DIR": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ml_tooling.config.MPL_STYLESHEET": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ml_tooling.config.RUN_DIR": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ml_tooling.config.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "ml_tooling.logging": {
  "data": {},
  "type": "module"
 },
 "ml_tooling.logging.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ml_tooling.logging._make_run_dir": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "IOError",
    "ml_tooling.logging.pathlib",
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.logging.create_logger": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ml_tooling.logging.logging",
    "ml_tooling.logging.os"
   ]
  },
  "type": "function"
 },
 "ml_tooling.logging.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ml_tooling.logging.log_model": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "dict",
    "float",
    "get_git_hash",
    "ml_tooling.__version__",
    "ml_tooling.logging._make_run_dir",
    "ml_tooling.logging.pathlib",
    "ml_tooling.logging.yaml",
    "pandas.__version__",
    "sklearn.__version__",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ml_tooling.logging.ml_tools_version": {
  "data": {
   "shadows": "ml_tooling.__version__"
  },
  "type": "import"
 },
 "ml_tooling.logging.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ml_tooling.logging.pandas_version": {
  "data": {
   "shadows": "pandas.__version__"
  },
  "type": "import"
 },
 "ml_tooling.logging.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "ml_tooling.logging.sklearn_version": {
  "data": {
   "shadows": "sklearn.__version__"
  },
  "type": "import"
 },
 "ml_tooling.logging.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ml_tooling.metrics": {
  "data": {},
  "type": "module"
 },
 "ml_tooling.metrics.MetricError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ml_tooling.metrics.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "ml_tooling.metrics.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ml_tooling.metrics._get_column_importance": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "scorer",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "ml_tooling.metrics._permutation_importances": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "MLToolingError",
    "_is_percent",
    "copy.deepcopy",
    "float",
    "int",
    "isinstance",
    "len",
    "ml_tooling.metrics._get_column_importance",
    "ml_tooling.metrics.math",
    "numpy.array",
    "range",
    "scorer",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed",
    "sklearn.utils.check_random_state",
    "sklearn.utils.resample",
    "zip"
   ]
  },
  "type": "function"
 },
 "ml_tooling.metrics.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "ml_tooling.metrics.confusion_matrix": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.around",
    "numpy.isnan",
    "numpy.ndarray",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "ml_tooling.metrics.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "ml_tooling.metrics.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "ml_tooling.metrics.lift_score": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "float",
    "len",
    "ml_tooling.metrics.MetricError",
    "numpy.array",
    "numpy.column_stack",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "ml_tooling.metrics.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ml_tooling.metrics.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "ml_tooling.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ml_tooling.metrics.resample": {
  "data": {
   "shadows": "sklearn.utils.resample"
  },
  "type": "import"
 },
 "ml_tooling.metrics.sorted_feature_importance": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "_is_percent",
    "float",
    "int",
    "isinstance",
    "len",
    "ml_tooling.metrics.math",
    "numpy.argsort",
    "numpy.array",
    "numpy.ndarray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "ml_tooling.plots": {
  "data": {},
  "type": "module"
 },
 "ml_tooling.plots.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "ml_tooling.plots.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "ml_tooling.plots.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ml_tooling.plots.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ml_tooling.plots.VizError": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ml_tooling.plots._cum_gain_curve": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.argsort",
    "numpy.cumsum",
    "numpy.ndarray",
    "numpy.sum",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ml_tooling.plots._generate_text_labels": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ml_tooling.plots._get_feature_importance": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "get_scoring_func",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.plots.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "ml_tooling.plots.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ml_tooling.plots.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ml_tooling.plots.plot_confusion_matrix": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "format",
    "list",
    "matplotlib.axes.Axes",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.get_cmap",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.tight_layout",
    "ml_tooling.plots.itertools",
    "numpy.unique",
    "range",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "ml_tooling.plots.plot_feature_importance": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "_is_percent",
    "bool",
    "enumerate",
    "float",
    "int",
    "matplotlib.axes.Axes",
    "matplotlib.pyplot.subplots",
    "ml_tooling.plots._generate_text_labels",
    "numpy.abs",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.plots.plot_lift_curve": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "ml_tooling.plots.VizError",
    "ml_tooling.plots._cum_gain_curve",
    "numpy.array",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "ml_tooling.plots.plot_prediction_error": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "matplotlib.axes.Axes",
    "matplotlib.pyplot.subplots",
    "numpy.max",
    "numpy.min",
    "sklearn.metrics.r2_score",
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.plots.plot_residuals": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "matplotlib.axes.Axes",
    "matplotlib.pyplot.subplots",
    "sklearn.metrics.r2_score",
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.plots.plot_roc_auc": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "matplotlib.axes.Axes",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.tight_layout",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.roc_curve",
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.plots.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "ml_tooling.plots.r2_score": {
  "data": {
   "shadows": "sklearn.metrics.r2_score"
  },
  "type": "import"
 },
 "ml_tooling.plots.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "ml_tooling.plots.roc_curve": {
  "data": {
   "shadows": "sklearn.metrics.roc_curve"
  },
  "type": "import"
 },
 "ml_tooling.result": {
  "data": {},
  "type": "module"
 },
 "ml_tooling.result.BaseVisualize": {
  "data": {
   "lineno": 199
  },
  "type": "class"
 },
 "ml_tooling.result.BaseVisualize.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "_get_model_name"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.BaseVisualize.default_metric": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.BaseVisualize.feature_importance": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "_get_feature_importance",
    "bool",
    "float",
    "int",
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.style.context",
    "plot_feature_importance",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.CVResult": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ml_tooling.result.Result"
   ]
  },
  "type": "class"
 },
 "ml_tooling.result.CVResult.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "super"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.CVResult.__repr__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.CVResult.to_dataframe": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "bool",
    "pandas.DataFrame",
    "pandas.concat",
    "super"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.ClassificationVisualize": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ml_tooling.result.BaseVisualize"
   ]
  },
  "type": "class"
 },
 "ml_tooling.result.ClassificationVisualize.confusion_matrix": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "bool",
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.style.context",
    "plot_confusion_matrix"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.ClassificationVisualize.lift_curve": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.style.context",
    "plot_lift_curve"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.ClassificationVisualize.roc_curve": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "VizError",
    "hasattr",
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.style.context",
    "plot_roc_auc"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ml_tooling.result.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "ml_tooling.result.RegressionVisualize": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ml_tooling.result.BaseVisualize"
   ]
  },
  "type": "class"
 },
 "ml_tooling.result.RegressionVisualize.prediction_error": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.style.context",
    "plot_prediction_error"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.RegressionVisualize.residuals": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.style.context",
    "plot_residuals"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.Result": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "functools.total_ordering"
   ]
  },
  "type": "class"
 },
 "ml_tooling.result.Result.__eq__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "ml_tooling.result.Result.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_get_model_name"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.Result.__lt__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "ml_tooling.result.Result.__repr__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.Result.log_model": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "float",
    "log_model"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.Result.model_params": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "property",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.Result.to_dataframe": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.ResultGroup": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "ml_tooling.result.ResultGroup.__dir__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.ResultGroup.__getattr__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.ResultGroup.__getitem__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "ml_tooling.result.ResultGroup.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ml_tooling.result.Result",
    "sorted",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.ResultGroup.__len__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.ResultGroup.__repr__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.ResultGroup.log_model": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "ml_tooling.result.ResultGroup.mean_score": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.ResultGroup.to_dataframe": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "ml_tooling.result.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ml_tooling.result.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ml_tooling.result.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ml_tooling.result.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "ml_tooling.result.total_ordering": {
  "data": {
   "shadows": "functools.total_ordering"
  },
  "type": "import"
 },
 "ml_tooling.transformers": {
  "data": {},
  "type": "module"
 },
 "ml_tooling.transformers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ml_tooling.transformers.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "ml_tooling.transformers.Binarize": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.Binarize.__init__": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "ml_tooling.transformers.Binarize.fit": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Binarize.transform": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.where",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Binner": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.Binner.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "int",
    "list",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Binner.fit": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Binner.transform": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.cut"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ml_tooling.transformers.DFFeatureUnion": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.DFFeatureUnion.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.DFFeatureUnion.fit": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.DFFeatureUnion.transform": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "functools.reduce",
    "pandas.DataFrame",
    "pandas.merge"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.DFRowFunc": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.sum",
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.DFRowFunc.__init__": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "ml_tooling.transformers.DFRowFunc._validate_strategy": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "TransformerError",
    "callable",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.DFRowFunc.fit": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.DFRowFunc.transform": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.DFStandardScaler": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.DFStandardScaler.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.DFStandardScaler.fit": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.DFStandardScaler.transform": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.DateEncoder": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.DateEncoder.__init__": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "ml_tooling.transformers.DateEncoder.fit": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.DateEncoder.transform": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.FillNA": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.FillNA.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "int",
    "pandas.DataFrame.max",
    "pandas.DataFrame.mean",
    "pandas.DataFrame.median",
    "pandas.DataFrame.min",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.FillNA._col_is_categorical_and_is_missing_category": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bool",
    "pandas.DataFrame",
    "pandas.api.types.is_categorical_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.FillNA._validate_input": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "TransformerError"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.FillNA.fit": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.FillNA.transform": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.FreqFeature": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.FreqFeature.__init__": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "ml_tooling.transformers.FreqFeature.fit": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.FreqFeature.transform": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.FuncTransformer": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.FuncTransformer.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.FuncTransformer.fit": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.FuncTransformer.transform": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ml_tooling.transformers.Renamer": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.Renamer.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "list",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Renamer.fit": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Renamer.transform": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "TransformerError",
    "len",
    "listify",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Select": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.Select.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "list",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Select.fit": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "listify",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.Select.transform": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "KeyError",
    "TransformerError",
    "list",
    "pandas.DataFrame",
    "set"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "ml_tooling.transformers.ToCategorical": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "ml_tooling.transformers.ToCategorical.__init__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "ml_tooling.transformers.ToCategorical.fit": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.ToCategorical.transform": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.get_dummies"
   ]
  },
  "type": "function"
 },
 "ml_tooling.transformers.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "ml_tooling.transformers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ml_tooling.transformers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ml_tooling.transformers.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ml_tooling.transformers.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "ml_tooling.utils": {
  "data": {
   "symbols_in_volume": [
    "numpy.ndarray",
    "pandas.DataFrame",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "ml_tooling.utils.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "ml_tooling.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ml_tooling.utils.Data": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "ml_tooling.utils.Data.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ml_tooling.utils.DataType",
    "sklearn.utils.indexable"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils.Data.create_train_test": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils.Data.with_train_test": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "ml_tooling.utils.DataType"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils.DataType": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ml_tooling.utils.InvalidGitRepositoryError": {
  "data": {
   "shadows": "git.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "ml_tooling.utils.MLToolingError": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ml_tooling.utils.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "ml_tooling.utils.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "ml_tooling.utils.Repo": {
  "data": {
   "shadows": "git.Repo"
  },
  "type": "import"
 },
 "ml_tooling.utils.TransformerError": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ml_tooling.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ml_tooling.utils._create_param_grid": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils._get_model_name": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils._is_percent": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "int",
    "isinstance",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils._most_freq": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.mode"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils._validate_model": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "ml_tooling.utils.MLToolingError",
    "sklearn.pipeline.Pipeline",
    "type"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils.find_model_file": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "list",
    "max",
    "ml_tooling.utils.MLToolingError",
    "ml_tooling.utils.get_git_hash",
    "ml_tooling.utils.pathlib",
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils.get_git_hash": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ImportError",
    "git.InvalidGitRepositoryError",
    "git.Repo",
    "ml_tooling.utils.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils.get_scorer": {
  "data": {
   "shadows": "sklearn.metrics.get_scorer"
  },
  "type": "import"
 },
 "ml_tooling.utils.get_scoring_func": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "ml_tooling.utils.DataType",
    "ml_tooling.utils.MLToolingError",
    "sklearn.base.BaseEstimator",
    "sklearn.metrics.get_scorer",
    "str",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils.indexable": {
  "data": {
   "shadows": "sklearn.utils.indexable"
  },
  "type": "import"
 },
 "ml_tooling.utils.listify": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "set",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ml_tooling.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ml_tooling.utils.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "ml_tooling.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ml_tooling.utils.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "ml_tooling.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}